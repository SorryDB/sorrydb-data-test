{
  "repos": [
    {
      "remote_url": "https://github.com/0art0/lean-slides",
      "last_time_visited": "2025-04-17T03:00:42.519149+00:00",
      "remote_heads_hash": "ea1fca1fe87f"
    },
    {
      "remote_url": "https://github.com/abdoo8080/lean-cvc5",
      "last_time_visited": "2025-04-17T03:00:42.925994+00:00",
      "remote_heads_hash": "8a80dbcde9ca"
    },
    {
      "remote_url": "https://github.com/acmepjz/md4lean",
      "last_time_visited": "2025-04-17T03:00:43.362819+00:00",
      "remote_heads_hash": "78f0fe311a3f"
    },
    {
      "remote_url": "https://github.com/adamtopaz/NodeGraph",
      "last_time_visited": "2025-04-17T03:00:43.847098+00:00",
      "remote_heads_hash": "ccd524ebf6b4"
    },
    {
      "remote_url": "https://github.com/adamtopaz/lean_extras",
      "last_time_visited": "2025-04-17T03:00:44.500031+00:00",
      "remote_heads_hash": "6b9cfc280153"
    },
    {
      "remote_url": "https://github.com/adomani/advents",
      "last_time_visited": "2025-04-17T03:00:44.974592+00:00",
      "remote_heads_hash": "c4eb517ab2cb"
    },
    {
      "remote_url": "https://github.com/AdrienChampion/safeIdx",
      "last_time_visited": "2025-04-17T03:00:45.742092+00:00",
      "remote_heads_hash": "f362cca5ed0c"
    },
    {
      "remote_url": "https://github.com/ah1112/synthetic_euclid_4",
      "last_time_visited": "2025-04-17T03:00:51.288448+00:00",
      "remote_heads_hash": "ffe525d762dd"
    },
    {
      "remote_url": "https://github.com/alexf91/lean4-ctypes",
      "last_time_visited": "2025-04-17T03:00:51.774400+00:00",
      "remote_heads_hash": "4034301ddd2f"
    },
    {
      "remote_url": "https://github.com/alexjbest/leaff",
      "last_time_visited": "2025-04-17T03:00:52.331933+00:00",
      "remote_heads_hash": "4dc694ebc489"
    },
    {
      "remote_url": "https://github.com/alexkeizer/QpfTypes",
      "last_time_visited": "2025-04-17T03:00:52.944914+00:00",
      "remote_heads_hash": "e872072f74fd"
    },
    {
      "remote_url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "last_time_visited": "2025-04-17T03:00:53.532393+00:00",
      "remote_heads_hash": "c1d3535c3258"
    },
    {
      "remote_url": "https://github.com/alok/lean-inf",
      "last_time_visited": "2025-04-17T03:13:48.196464+00:00",
      "remote_heads_hash": "590910f95db9"
    },
    {
      "remote_url": "https://github.com/andrejbauer/partial-combinatory-algebras",
      "last_time_visited": "2025-04-17T03:13:48.702490+00:00",
      "remote_heads_hash": "136c83911bf8"
    },
    {
      "remote_url": "https://github.com/anoma/juvix-lean",
      "last_time_visited": "2025-04-17T03:13:49.215435+00:00",
      "remote_heads_hash": "194798fe5c8d"
    },
    {
      "remote_url": "https://github.com/apnelson1/Matroid",
      "last_time_visited": "2025-04-17T03:13:49.716215+00:00",
      "remote_heads_hash": "5444fc74d18c"
    },
    {
      "remote_url": "https://github.com/argumentcomputer/yatima",
      "last_time_visited": "2025-04-17T03:13:50.485942+00:00",
      "remote_heads_hash": "27bd4dd3b298"
    },
    {
      "remote_url": "https://github.com/argumentcomputer/Wasm.lean",
      "last_time_visited": "2025-04-17T03:13:51.314082+00:00",
      "remote_heads_hash": "9723673e436f"
    },
    {
      "remote_url": "https://github.com/argumentcomputer/RustFFI.lean",
      "last_time_visited": "2025-04-17T03:13:51.919079+00:00",
      "remote_heads_hash": "1494787a26c1"
    },
    {
      "remote_url": "https://github.com/argumentcomputer/Megaparsec.lean",
      "last_time_visited": "2025-04-17T03:13:52.509040+00:00",
      "remote_heads_hash": "b3fcd8401935"
    },
    {
      "remote_url": "https://github.com/argumentcomputer/LSpec",
      "last_time_visited": "2025-04-17T03:13:53.073151+00:00",
      "remote_heads_hash": "a32710bb1221"
    },
    {
      "remote_url": "https://github.com/argumentcomputer/Blake3.lean",
      "last_time_visited": "2025-04-17T03:13:53.610200+00:00",
      "remote_heads_hash": "151fd9d4bfe2"
    },
    {
      "remote_url": "https://github.com/arthurpaulino/NumLean",
      "last_time_visited": "2025-04-17T03:13:54.122553+00:00",
      "remote_heads_hash": "c95d37ba3c8c"
    },
    {
      "remote_url": "https://github.com/avigad/LeanSudoku",
      "last_time_visited": "2025-04-17T03:13:54.621401+00:00",
      "remote_heads_hash": "cb5ac28c9e23"
    },
    {
      "remote_url": "https://github.com/axiomed/http",
      "last_time_visited": "2025-04-17T03:13:55.231997+00:00",
      "remote_heads_hash": "b9eedf58de6b"
    },
    {
      "remote_url": "https://github.com/bergmannjg/time",
      "last_time_visited": "2025-04-17T03:13:55.721129+00:00",
      "remote_heads_hash": "a188d26ad6bd"
    },
    {
      "remote_url": "https://github.com/bergmannjg/regex",
      "last_time_visited": "2025-04-17T03:13:56.195351+00:00",
      "remote_heads_hash": "b8c4594aa5df"
    },
    {
      "remote_url": "https://github.com/bergmannjg/leanCurl",
      "last_time_visited": "2025-04-17T03:13:56.790542+00:00",
      "remote_heads_hash": "ff0a6479d879"
    },
    {
      "remote_url": "https://github.com/Bergschaf/Localic-Caratheodory-Extensions",
      "last_time_visited": "2025-04-17T03:13:57.351861+00:00",
      "remote_heads_hash": "d307a1ba1538"
    },
    {
      "remote_url": "https://github.com/Bergschaf/lean-banach-tarski",
      "last_time_visited": "2025-04-17T03:13:58.811730+00:00",
      "remote_heads_hash": "f48bdebe8bf5"
    },
    {
      "remote_url": "https://github.com/Bergschaf/banach-tarski",
      "last_time_visited": "2025-04-17T03:13:59.386814+00:00",
      "remote_heads_hash": "16e9b5d0a40f"
    },
    {
      "remote_url": "https://github.com/BoltonBailey/formal-snarks-project",
      "last_time_visited": "2025-04-17T03:14:00.590994+00:00",
      "remote_heads_hash": "8c4e3059ad64"
    },
    {
      "remote_url": "https://github.com/BRonen/sqlite3-lean4",
      "last_time_visited": "2025-04-17T03:14:01.130977+00:00",
      "remote_heads_hash": "a37e6d54423a"
    },
    {
      "remote_url": "https://github.com/cmu-l3/llmlean",
      "last_time_visited": "2025-04-17T03:14:01.555054+00:00",
      "remote_heads_hash": "04624fcb53e2"
    },
    {
      "remote_url": "https://github.com/dagurtomas/LeanCondensed",
      "last_time_visited": "2025-04-17T03:14:02.268542+00:00",
      "remote_heads_hash": "a70a25121b16"
    },
    {
      "remote_url": "https://github.com/Deducteam/lean2dk",
      "last_time_visited": "2025-04-17T03:14:02.760914+00:00",
      "remote_heads_hash": "437e9b26ba70"
    },
    {
      "remote_url": "https://github.com/djvelleman/HTPILeanPackage",
      "last_time_visited": "2025-04-17T03:20:48.807637+00:00",
      "remote_heads_hash": "77cb90320f24"
    },
    {
      "remote_url": "https://github.com/draperlaboratory/ELFSage",
      "last_time_visited": "2025-04-17T03:20:49.386557+00:00",
      "remote_heads_hash": "56692d17d705"
    },
    {
      "remote_url": "https://github.com/dtumad/VCV-io",
      "last_time_visited": "2025-04-17T03:20:49.944188+00:00",
      "remote_heads_hash": "126351f262d6"
    },
    {
      "remote_url": "https://github.com/dupuisf/BibtexQuery",
      "last_time_visited": "2025-04-17T03:40:01.250081+00:00",
      "remote_heads_hash": "ff993a7036b7"
    },
    {
      "remote_url": "https://github.com/dwrensha/tryAtEachStep",
      "last_time_visited": "2025-04-17T03:40:01.769869+00:00",
      "remote_heads_hash": "bd22accb361e"
    },
    {
      "remote_url": "https://github.com/dwrensha/lean4-maze",
      "last_time_visited": "2025-04-17T03:40:02.323077+00:00",
      "remote_heads_hash": "da00a1ae7422"
    },
    {
      "remote_url": "https://github.com/dwrensha/compfiles",
      "last_time_visited": "2025-04-18T03:00:50.888017+00:00",
      "remote_heads_hash": "d585645365ca"
    },
    {
      "remote_url": "https://github.com/dwrensha/Chess.lean",
      "last_time_visited": "2025-04-17T03:40:04.726992+00:00",
      "remote_heads_hash": "f046a40be392"
    },
    {
      "remote_url": "https://github.com/dwrensha/animate-lean-proofs",
      "last_time_visited": "2025-04-17T03:40:05.297428+00:00",
      "remote_heads_hash": "7a8d1d4f58a9"
    },
    {
      "remote_url": "https://github.com/ElifUskuplu/Stlc_deBruijn",
      "last_time_visited": "2025-04-17T03:40:06.066864+00:00",
      "remote_heads_hash": "b80b39af1eda"
    },
    {
      "remote_url": "https://github.com/emilyriehl/infinity-cosmos",
      "last_time_visited": "2025-04-17T03:40:06.965473+00:00",
      "remote_heads_hash": "e4af335c6b6a"
    },
    {
      "remote_url": "https://github.com/eric-wieser/lean-matrix-cookbook",
      "last_time_visited": "2025-04-17T03:40:07.665591+00:00",
      "remote_heads_hash": "a4f9f9349dac"
    },
    {
      "remote_url": "https://github.com/fgdorais/lean4-unicode-basic",
      "last_time_visited": "2025-04-18T03:00:53.824978+00:00",
      "remote_heads_hash": "757d91832d7b"
    },
    {
      "remote_url": "https://github.com/fgdorais/lean4-parser",
      "last_time_visited": "2025-04-17T03:40:13.381136+00:00",
      "remote_heads_hash": "a128d0356c0c"
    },
    {
      "remote_url": "https://github.com/fgdorais/extra4",
      "last_time_visited": "2025-04-17T03:40:14.780514+00:00",
      "remote_heads_hash": "c309c1f09f6b"
    },
    {
      "remote_url": "https://github.com/fgdorais/algebra4",
      "last_time_visited": "2025-04-17T03:40:15.409334+00:00",
      "remote_heads_hash": "fad3efc60703"
    },
    {
      "remote_url": "https://github.com/forked-from-1kasper/ground_zero",
      "last_time_visited": "2025-04-17T03:40:15.955117+00:00",
      "remote_heads_hash": "f259deeaa740"
    },
    {
      "remote_url": "https://github.com/FormalizedFormalLogic/Incompleteness",
      "last_time_visited": "2025-04-17T03:40:16.528398+00:00",
      "remote_heads_hash": "aa43d4d432c4"
    },
    {
      "remote_url": "https://github.com/FormalizedFormalLogic/Foundation",
      "last_time_visited": "2025-04-18T03:00:59.837751+00:00",
      "remote_heads_hash": "93f91fc84542"
    },
    {
      "remote_url": "https://github.com/FormalizedFormalLogic/Arithmetization",
      "last_time_visited": "2025-04-17T03:40:19.220229+00:00",
      "remote_heads_hash": "d0d6f3b5214a"
    },
    {
      "remote_url": "https://github.com/FormalSAT/trestle",
      "last_time_visited": "2025-04-18T03:23:34.068179+00:00",
      "remote_heads_hash": "c91c1a71ddad"
    },
    {
      "remote_url": "https://github.com/fpvandoorn/LeanCourse24",
      "last_time_visited": "2025-04-17T03:43:42.283683+00:00",
      "remote_heads_hash": "9ec29a82bdef"
    },
    {
      "remote_url": "https://github.com/fpvandoorn/carleson",
      "last_time_visited": "2025-04-18T03:27:07.061016+00:00",
      "remote_heads_hash": "f77a8602afcc"
    },
    {
      "remote_url": "https://github.com/frenzymath/jixia",
      "last_time_visited": "2025-04-18T03:27:09.976827+00:00",
      "remote_heads_hash": "c1db5239415c"
    },
    {
      "remote_url": "https://github.com/funexists/raylean",
      "last_time_visited": "2025-04-17T03:43:47.592667+00:00",
      "remote_heads_hash": "72a50b820b10"
    },
    {
      "remote_url": "https://github.com/FWuermse/lean-postgres",
      "last_time_visited": "2025-04-17T03:43:48.367708+00:00",
      "remote_heads_hash": "32be1086f64b"
    },
    {
      "remote_url": "https://github.com/GasStationManager/LeanTool",
      "last_time_visited": "2025-04-17T03:43:48.888585+00:00",
      "remote_heads_hash": "619e08a4e2d1"
    },
    {
      "remote_url": "https://github.com/GasStationManager/FormalizeWithTest",
      "last_time_visited": "2025-04-17T03:43:49.423721+00:00",
      "remote_heads_hash": "c9bc0ed602e4"
    },
    {
      "remote_url": "https://github.com/GasStationManager/CodeProofTheArena",
      "last_time_visited": "2025-04-17T03:43:49.896081+00:00",
      "remote_heads_hash": "6eaeef733792"
    },
    {
      "remote_url": "https://github.com/gdncc/Cryptography",
      "last_time_visited": "2025-04-17T03:43:50.400628+00:00",
      "remote_heads_hash": "e50c8a4f71a1"
    },
    {
      "remote_url": "https://github.com/girving/interval",
      "last_time_visited": "2025-04-17T03:43:51.344967+00:00",
      "remote_heads_hash": "2815a72fe0a0"
    },
    {
      "remote_url": "https://github.com/goens/lost-pop-lean",
      "last_time_visited": "2025-04-17T03:43:51.936179+00:00",
      "remote_heads_hash": "8035a1ab2a5a"
    },
    {
      "remote_url": "https://github.com/google-deepmind/debate",
      "last_time_visited": "2025-04-17T03:43:52.555940+00:00",
      "remote_heads_hash": "5a9708e14c57"
    },
    {
      "remote_url": "https://github.com/gsierra99/ExFormMathL4",
      "last_time_visited": "2025-04-17T03:43:53.053632+00:00",
      "remote_heads_hash": "18bdfe18ef1b"
    },
    {
      "remote_url": "https://github.com/Hagb/lean-groebner",
      "last_time_visited": "2025-04-17T03:43:53.592756+00:00",
      "remote_heads_hash": "8a6f9e6a9967"
    },
    {
      "remote_url": "https://github.com/HannahSantos/FMCn_Lean",
      "last_time_visited": "2025-04-17T03:43:54.091312+00:00",
      "remote_heads_hash": "245f1abf4da5"
    },
    {
      "remote_url": "https://github.com/HEPLean/PhysLean",
      "last_time_visited": "2025-04-18T03:27:53.938282+00:00",
      "remote_heads_hash": "c1c5a37ba150"
    },
    {
      "remote_url": "https://github.com/hhu-adam/lean-i18n",
      "last_time_visited": "2025-04-17T03:43:58.200470+00:00",
      "remote_heads_hash": "0f73c0dadeae"
    },
    {
      "remote_url": "https://github.com/hhu-adam/GameSkeleton",
      "last_time_visited": "2025-04-17T03:43:58.730487+00:00",
      "remote_heads_hash": "fd32eae4aa15"
    },
    {
      "remote_url": "https://github.com/igrep/lean-workshop",
      "last_time_visited": "2025-04-17T03:43:59.210061+00:00",
      "remote_heads_hash": "3b2ae8b7d631"
    },
    {
      "remote_url": "https://github.com/imbrem/discretion",
      "last_time_visited": "2025-04-17T03:43:59.706756+00:00",
      "remote_heads_hash": "b5cff868a25d"
    },
    {
      "remote_url": "https://github.com/imbrem/debruijn-ssa",
      "last_time_visited": "2025-04-17T03:44:00.274977+00:00",
      "remote_heads_hash": "333a657f701e"
    },
    {
      "remote_url": "https://github.com/ImperialCollegeLondon/M1F-explained",
      "last_time_visited": "2025-04-17T03:44:00.963845+00:00",
      "remote_heads_hash": "3110da3d860a"
    },
    {
      "remote_url": "https://github.com/ImperialCollegeLondon/IUM",
      "last_time_visited": "2025-04-17T03:44:01.458108+00:00",
      "remote_heads_hash": "a4cc0b92642f"
    },
    {
      "remote_url": "https://github.com/ImperialCollegeLondon/formalising-mathematics-2024",
      "last_time_visited": "2025-04-17T03:44:01.961968+00:00",
      "remote_heads_hash": "e7cfe4f5ab5b"
    },
    {
      "remote_url": "https://github.com/ImperialCollegeLondon/FLT",
      "last_time_visited": "2025-04-18T03:27:58.801665+00:00",
      "remote_heads_hash": "2b1ec24599ac"
    },
    {
      "remote_url": "https://github.com/Ivan-Sergeyev/seymour",
      "last_time_visited": "2025-04-17T03:44:06.979452+00:00",
      "remote_heads_hash": "2e2238cf4732"
    },
    {
      "remote_url": "https://github.com/ivankobe/FactorizationSystems",
      "last_time_visited": "2025-04-17T03:50:46.921679+00:00",
      "remote_heads_hash": "edb00f932869"
    },
    {
      "remote_url": "https://github.com/Izzimach/EffSpec-lean",
      "last_time_visited": "2025-04-17T03:50:47.635279+00:00",
      "remote_heads_hash": "562e30665420"
    },
    {
      "remote_url": "https://github.com/jaalonso/Calculemus2_es",
      "last_time_visited": "2025-04-17T03:50:48.124787+00:00",
      "remote_heads_hash": "515249923b37"
    },
    {
      "remote_url": "https://github.com/jaalonso/Calculemus2",
      "last_time_visited": "2025-04-17T03:50:48.816410+00:00",
      "remote_heads_hash": "c0b0480ccdda"
    },
    {
      "remote_url": "https://github.com/JadAbouHawili/KnightsAndKnaves-Lean4Game",
      "last_time_visited": "2025-04-17T03:50:51.829395+00:00",
      "remote_heads_hash": "0358d589ecf6"
    },
    {
      "remote_url": "https://github.com/JamesGallicchio/LeanColls",
      "last_time_visited": "2025-04-17T03:52:42.816273+00:00",
      "remote_heads_hash": "1c812dd36af8"
    },
    {
      "remote_url": "https://github.com/JamesGallicchio/http",
      "last_time_visited": "2025-04-17T03:52:48.778401+00:00",
      "remote_heads_hash": "533140b90c9c"
    },
    {
      "remote_url": "https://github.com/jeswr/RDF.lean",
      "last_time_visited": "2025-04-17T03:52:49.251137+00:00",
      "remote_heads_hash": "a9f36adc4a2f"
    },
    {
      "remote_url": "https://github.com/jsm28/AperiodicMonotilesLean",
      "last_time_visited": "2025-04-17T03:52:49.746192+00:00",
      "remote_heads_hash": "9edd7af2f762"
    },
    {
      "remote_url": "https://github.com/katydid/regex-deriv-reproving-agda-in-lean",
      "last_time_visited": "2025-04-17T03:52:50.285621+00:00",
      "remote_heads_hash": "2ca59eba6863"
    },
    {
      "remote_url": "https://github.com/katydid/regex-deriv-lean",
      "last_time_visited": "2025-04-17T03:52:50.747967+00:00",
      "remote_heads_hash": "acaee3d90adc"
    },
    {
      "remote_url": "https://github.com/kebekus/ProjectVD",
      "last_time_visited": "2025-04-17T03:55:21.268332+00:00",
      "remote_heads_hash": "9f87e4c68802"
    },
    {
      "remote_url": "https://github.com/keilambda/eocia-lean",
      "last_time_visited": "2025-04-17T03:55:21.790756+00:00",
      "remote_heads_hash": "52b63bb55762"
    },
    {
      "remote_url": "https://github.com/kim-em/lean-training-data",
      "last_time_visited": "2025-04-17T03:55:22.285582+00:00",
      "remote_heads_hash": "7108932d8b3e"
    },
    {
      "remote_url": "https://github.com/KislyjKisel/Raylib.lean",
      "last_time_visited": "2025-04-17T03:55:22.793653+00:00",
      "remote_heads_hash": "5340227f3bd7"
    },
    {
      "remote_url": "https://github.com/KislyjKisel/lean-pod",
      "last_time_visited": "2025-04-17T03:55:23.359369+00:00",
      "remote_heads_hash": "0e4008b19fa0"
    },
    {
      "remote_url": "https://github.com/kkaunda/spgf",
      "last_time_visited": "2025-04-17T03:55:23.890045+00:00",
      "remote_heads_hash": "d044f65aa55f"
    },
    {
      "remote_url": "https://github.com/kmill/lean4-raytracer",
      "last_time_visited": "2025-04-17T03:55:24.455207+00:00",
      "remote_heads_hash": "a93cae6611b5"
    },
    {
      "remote_url": "https://github.com/kmill/LeanTeX",
      "last_time_visited": "2025-04-17T03:55:25.914292+00:00",
      "remote_heads_hash": "f2b67cb68de9"
    },
    {
      "remote_url": "https://github.com/knowsys/CertifyingDatalog",
      "last_time_visited": "2025-04-17T03:55:26.433605+00:00",
      "remote_heads_hash": "78df03fcc80f"
    },
    {
      "remote_url": "https://github.com/kovach/etch",
      "last_time_visited": "2025-04-17T03:55:34.361523+00:00",
      "remote_heads_hash": "4191c72dce05"
    },
    {
      "remote_url": "https://github.com/lean-dojo/LeanCopilot",
      "last_time_visited": "2025-04-17T03:55:35.852121+00:00",
      "remote_heads_hash": "5b8e872772f7"
    },
    {
      "remote_url": "https://github.com/lean-ja/reference-manual-ja",
      "last_time_visited": "2025-04-17T03:58:19.612869+00:00",
      "remote_heads_hash": "87e7e8a81be1"
    },
    {
      "remote_url": "https://github.com/lean-ja/lean99",
      "last_time_visited": "2025-04-17T03:58:21.347494+00:00",
      "remote_heads_hash": "d458dfc3b5c8"
    },
    {
      "remote_url": "https://github.com/lean-ja/lean-by-example",
      "last_time_visited": "2025-04-17T03:58:21.910172+00:00",
      "remote_heads_hash": "acb617a5a9cf"
    },
    {
      "remote_url": "https://github.com/lean-machines-central/lean-machines",
      "last_time_visited": "2025-04-17T03:58:22.598622+00:00",
      "remote_heads_hash": "713e5a2e643e"
    },
    {
      "remote_url": "https://github.com/lean-machines-central/lean-machines-examples",
      "last_time_visited": "2025-04-17T03:58:23.235145+00:00",
      "remote_heads_hash": "693936d31735"
    },
    {
      "remote_url": "https://github.com/leanprover-community/tutorials4",
      "last_time_visited": "2025-04-17T03:58:23.730646+00:00",
      "remote_heads_hash": "d2deab6affd4"
    },
    {
      "remote_url": "https://github.com/leanprover-community/sphere-eversion",
      "last_time_visited": "2025-04-17T03:58:24.247539+00:00",
      "remote_heads_hash": "7a1aaaededfd"
    },
    {
      "remote_url": "https://github.com/leanprover-community/quote4",
      "last_time_visited": "2025-04-17T03:58:25.719097+00:00",
      "remote_heads_hash": "f1cec0d144d0"
    },
    {
      "remote_url": "https://github.com/leanprover-community/ProofWidgets4",
      "last_time_visited": "2025-04-17T03:58:26.307316+00:00",
      "remote_heads_hash": "268cce1ef655"
    },
    {
      "remote_url": "https://github.com/leanprover-community/plausible",
      "last_time_visited": "2025-04-17T03:58:27.113542+00:00",
      "remote_heads_hash": "5b8e5e3beaa9"
    },
    {
      "remote_url": "https://github.com/leanprover-community/mathport",
      "last_time_visited": "2025-04-17T03:58:27.638536+00:00",
      "remote_heads_hash": "f1a810136ef9"
    },
    {
      "remote_url": "https://github.com/leanprover-community/mathlib4",
      "last_time_visited": "2025-04-18T03:28:08.523536+00:00",
      "remote_heads_hash": "c91339e3017b"
    },
    {
      "remote_url": "https://github.com/leanprover-community/LeanSearchClient",
      "last_time_visited": "2025-04-17T04:21:14.150669+00:00",
      "remote_heads_hash": "0674ee6a0314"
    },
    {
      "remote_url": "https://github.com/leanprover-community/lean4-metaprogramming-book",
      "last_time_visited": "2025-04-17T04:21:14.738545+00:00",
      "remote_heads_hash": "d44060733757"
    },
    {
      "remote_url": "https://github.com/leanprover-community/iris-lean",
      "last_time_visited": "2025-04-17T04:21:15.281762+00:00",
      "remote_heads_hash": "84a452297995"
    },
    {
      "remote_url": "https://github.com/leanprover-community/import-graph",
      "last_time_visited": "2025-04-17T04:21:15.807586+00:00",
      "remote_heads_hash": "a97730530fe1"
    },
    {
      "remote_url": "https://github.com/leanprover-community/NNG4",
      "last_time_visited": "2025-04-17T04:21:16.432239+00:00",
      "remote_heads_hash": "6c6fa024917e"
    },
    {
      "remote_url": "https://github.com/leanprover-community/flt-regular",
      "last_time_visited": "2025-04-17T04:21:17.159604+00:00",
      "remote_heads_hash": "de55825908b6"
    },
    {
      "remote_url": "https://github.com/leanprover-community/duper",
      "last_time_visited": "2025-04-17T04:21:17.859716+00:00",
      "remote_heads_hash": "03251bd47001"
    },
    {
      "remote_url": "https://github.com/leanprover-community/con-nf",
      "last_time_visited": "2025-04-17T04:31:54.550772+00:00",
      "remote_heads_hash": "b4e65531e4fe"
    },
    {
      "remote_url": "https://github.com/leanprover-community/batteries",
      "last_time_visited": "2025-04-18T03:39:31.630216+00:00",
      "remote_heads_hash": "c3f781bdc291"
    },
    {
      "remote_url": "https://github.com/leanprover-community/lean-auto",
      "last_time_visited": "2025-04-17T04:33:39.220059+00:00",
      "remote_heads_hash": "0e978721c2d2"
    },
    {
      "remote_url": "https://github.com/leanprover-community/aesop",
      "last_time_visited": "2025-04-17T04:33:39.955534+00:00",
      "remote_heads_hash": "672607b115e4"
    },
    {
      "remote_url": "https://github.com/leanprover/verso",
      "last_time_visited": "2025-04-17T04:33:40.935176+00:00",
      "remote_heads_hash": "78cd3acc6bbc"
    },
    {
      "remote_url": "https://github.com/leanprover/reference-manual",
      "last_time_visited": "2025-04-17T04:33:41.678944+00:00",
      "remote_heads_hash": "c1d8e254ff7b"
    },
    {
      "remote_url": "https://github.com/leanprover/TensorLib",
      "last_time_visited": "2025-04-17T04:36:42.093174+00:00",
      "remote_heads_hash": "9ed93e3dd73c"
    },
    {
      "remote_url": "https://github.com/leanprover/subverso",
      "last_time_visited": "2025-04-17T04:36:42.676810+00:00",
      "remote_heads_hash": "f50e0260b93b"
    },
    {
      "remote_url": "https://github.com/leanprover/SHerLOC",
      "last_time_visited": "2025-04-17T04:36:43.253752+00:00",
      "remote_heads_hash": "8db31b4878a6"
    },
    {
      "remote_url": "https://github.com/leanprover/SampCert",
      "last_time_visited": "2025-04-17T04:36:43.744045+00:00",
      "remote_heads_hash": "88112051b414"
    },
    {
      "remote_url": "https://github.com/leanprover/LNSym",
      "last_time_visited": "2025-04-17T04:36:44.382025+00:00",
      "remote_heads_hash": "57b8e43d83f5"
    },
    {
      "remote_url": "https://github.com/leanprover/lean4export",
      "last_time_visited": "2025-04-17T04:37:10.999709+00:00",
      "remote_heads_hash": "8fde9a477129"
    },
    {
      "remote_url": "https://github.com/leanprover/lean4checker",
      "last_time_visited": "2025-04-17T04:37:11.755092+00:00",
      "remote_heads_hash": "f4e994ff1c98"
    },
    {
      "remote_url": "https://github.com/leanprover/KLR",
      "last_time_visited": "2025-04-18T03:41:08.470823+00:00",
      "remote_heads_hash": "fa10f18ab173"
    },
    {
      "remote_url": "https://github.com/leanprover/doc-gen4",
      "last_time_visited": "2025-04-17T04:37:14.034842+00:00",
      "remote_heads_hash": "b11bb6fc0eeb"
    },
    {
      "remote_url": "https://github.com/leanprover/lean4-cli",
      "last_time_visited": "2025-04-17T04:37:15.302102+00:00",
      "remote_heads_hash": "81485c108a0e"
    },
    {
      "remote_url": "https://github.com/lecopivo/SciLean",
      "last_time_visited": "2025-04-17T04:37:15.809145+00:00",
      "remote_heads_hash": "d123fd93d8f8"
    },
    {
      "remote_url": "https://github.com/lecopivo/LeanBLAS",
      "last_time_visited": "2025-04-17T04:37:17.348442+00:00",
      "remote_heads_hash": "0d414cf850d5"
    },
    {
      "remote_url": "https://github.com/lecopivo/lean4-karray",
      "last_time_visited": "2025-04-17T04:37:17.894437+00:00",
      "remote_heads_hash": "1277b66d931f"
    },
    {
      "remote_url": "https://github.com/lf-lang/reactor-model",
      "last_time_visited": "2025-04-17T04:37:18.450933+00:00",
      "remote_heads_hash": "43ecefc264f0"
    },
    {
      "remote_url": "https://github.com/lindy-labs/aegis",
      "last_time_visited": "2025-04-17T04:37:19.299701+00:00",
      "remote_heads_hash": "ae5aa456e8cb"
    },
    {
      "remote_url": "https://github.com/loganrjmurphy/LeanEuclid",
      "last_time_visited": "2025-04-17T04:37:19.872334+00:00",
      "remote_heads_hash": "63d340883186"
    },
    {
      "remote_url": "https://github.com/m4lvin/lean4-pdl",
      "last_time_visited": "2025-04-17T04:37:20.919443+00:00",
      "remote_heads_hash": "234754614abb"
    },
    {
      "remote_url": "https://github.com/madvorak/read-lean",
      "last_time_visited": "2025-04-17T04:37:21.580281+00:00",
      "remote_heads_hash": "14f55738d01a"
    },
    {
      "remote_url": "https://github.com/madvorak/duality",
      "last_time_visited": "2025-04-17T04:37:22.040318+00:00",
      "remote_heads_hash": "fd251538a9e5"
    },
    {
      "remote_url": "https://github.com/Maokami/vqc_in_lean",
      "last_time_visited": "2025-04-17T04:37:22.752659+00:00",
      "remote_heads_hash": "31f759a86b91"
    },
    {
      "remote_url": "https://github.com/marcusrossel/lean-snakebird",
      "last_time_visited": "2025-04-17T04:37:23.218750+00:00",
      "remote_heads_hash": "613f0a2c6dd3"
    },
    {
      "remote_url": "https://github.com/marcusrossel/lean-egg",
      "last_time_visited": "2025-04-18T03:41:12.271232+00:00",
      "remote_heads_hash": "f7b0bd7efc5a"
    },
    {
      "remote_url": "https://github.com/math-xmum/gametheory",
      "last_time_visited": "2025-04-17T04:37:24.668176+00:00",
      "remote_heads_hash": "186d87952f5b"
    },
    {
      "remote_url": "https://github.com/mhuisi/Uniq",
      "last_time_visited": "2025-04-17T04:37:25.257299+00:00",
      "remote_heads_hash": "8632f707f342"
    },
    {
      "remote_url": "https://github.com/MichaelStollBayreuth/Weights",
      "last_time_visited": "2025-04-17T04:37:25.888003+00:00",
      "remote_heads_hash": "cab50a1177cf"
    },
    {
      "remote_url": "https://github.com/MichaelStollBayreuth/EulerProducts",
      "last_time_visited": "2025-04-17T04:37:26.404067+00:00",
      "remote_heads_hash": "a475080c281b"
    },
    {
      "remote_url": "https://github.com/mo271/FormalBook",
      "last_time_visited": "2025-04-17T04:37:26.904024+00:00",
      "remote_heads_hash": "205f79a11375"
    },
    {
      "remote_url": "https://github.com/model-checking/rust-lean-models",
      "last_time_visited": "2025-04-17T04:37:27.557966+00:00",
      "remote_heads_hash": "9acadaa1b951"
    },
    {
      "remote_url": "https://github.com/morganfshirley/CommComp",
      "last_time_visited": "2025-04-17T04:37:27.960037+00:00",
      "remote_heads_hash": "bb6b1df5fd9e"
    },
    {
      "remote_url": "https://github.com/mortarsanjaya/IMOSLLean4",
      "last_time_visited": "2025-04-17T04:37:28.390101+00:00",
      "remote_heads_hash": "cd24d3f3c273"
    },
    {
      "remote_url": "https://github.com/NethermindEth/risczero-fv",
      "last_time_visited": "2025-04-17T04:37:29.134133+00:00",
      "remote_heads_hash": "be4562d9e9c0"
    },
    {
      "remote_url": "https://github.com/NethermindEth/EVMYulLean",
      "last_time_visited": "2025-04-17T04:37:30.268180+00:00",
      "remote_heads_hash": "2d3177845d1b"
    },
    {
      "remote_url": "https://github.com/niklasmohrin/lean-seminar-2023",
      "last_time_visited": "2025-04-17T04:40:06.558332+00:00",
      "remote_heads_hash": "11e47f92bf1d"
    },
    {
      "remote_url": "https://github.com/nomeata/loogle",
      "last_time_visited": "2025-04-17T04:40:07.174229+00:00",
      "remote_heads_hash": "7681188b64c3"
    },
    {
      "remote_url": "https://github.com/nomeata/lean-calcify",
      "last_time_visited": "2025-04-17T04:40:07.711467+00:00",
      "remote_heads_hash": "9b5c02bf8403"
    },
    {
      "remote_url": "https://github.com/objectionary/proof",
      "last_time_visited": "2025-04-17T04:40:08.207456+00:00",
      "remote_heads_hash": "3c07a6860913"
    },
    {
      "remote_url": "https://github.com/optsuite/optlib",
      "last_time_visited": "2025-04-17T04:40:12.269323+00:00",
      "remote_heads_hash": "bd52ad3a2cec"
    },
    {
      "remote_url": "https://github.com/pandaman64/lean-regex",
      "last_time_visited": "2025-04-17T04:40:13.069368+00:00",
      "remote_heads_hash": "ca82302c8ea8"
    },
    {
      "remote_url": "https://github.com/Paper-Proof/paperproof",
      "last_time_visited": "2025-04-17T04:40:14.940163+00:00",
      "remote_heads_hash": "69f0d23a0693"
    },
    {
      "remote_url": "https://github.com/PatrickMassot/verbose-lean4",
      "last_time_visited": "2025-04-18T03:41:36.108946+00:00",
      "remote_heads_hash": "9511f511e9d6"
    },
    {
      "remote_url": "https://github.com/PatrickMassot/GlimpseOfLean",
      "last_time_visited": "2025-04-18T03:45:00.116122+00:00",
      "remote_heads_hash": "13cc92920d52"
    },
    {
      "remote_url": "https://github.com/paulch42/lean-spec",
      "last_time_visited": "2025-04-17T04:47:09.483923+00:00",
      "remote_heads_hash": "8264d464e45c"
    },
    {
      "remote_url": "https://github.com/pawelsberg/lean-directory-browser",
      "last_time_visited": "2025-04-17T04:47:10.049966+00:00",
      "remote_heads_hash": "e740683950be"
    },
    {
      "remote_url": "https://github.com/PeterKementzey/graph-library-for-lean4",
      "last_time_visited": "2025-04-17T04:47:10.588983+00:00",
      "remote_heads_hash": "0eb4fa24abc1"
    },
    {
      "remote_url": "https://github.com/pimpale/llm.lean",
      "last_time_visited": "2025-04-17T04:47:11.081943+00:00",
      "remote_heads_hash": "5875eed27aef"
    },
    {
      "remote_url": "https://github.com/pitmonticone/LeanProject",
      "last_time_visited": "2025-04-17T04:47:11.640798+00:00",
      "remote_heads_hash": "ff6b956197ec"
    },
    {
      "remote_url": "https://github.com/pitmonticone/LeanInVienna2024",
      "last_time_visited": "2025-04-17T04:47:12.760275+00:00",
      "remote_heads_hash": "bfa3f74922c2"
    },
    {
      "remote_url": "https://github.com/proofs-and-programs/proofs-and-programs-25",
      "last_time_visited": "2025-04-18T03:45:02.933009+00:00",
      "remote_heads_hash": "355d4d9ee3f9"
    },
    {
      "remote_url": "https://github.com/provables/special-numbers",
      "last_time_visited": "2025-04-17T04:47:13.959924+00:00",
      "remote_heads_hash": "3ff028720537"
    },
    {
      "remote_url": "https://github.com/quangvdao/ZKLib-deprecated",
      "last_time_visited": "2025-04-17T04:47:31.190623+00:00",
      "remote_heads_hash": "6f178ea20246"
    },
    {
      "remote_url": "https://github.com/rahul3613/miniF2F-lean4",
      "last_time_visited": "2025-04-17T04:47:31.752436+00:00",
      "remote_heads_hash": "ed3336e45e16"
    },
    {
      "remote_url": "https://github.com/rami3l/plfl",
      "last_time_visited": "2025-04-17T04:47:32.247571+00:00",
      "remote_heads_hash": "64870ad853f0"
    },
    {
      "remote_url": "https://github.com/reilabs/proven-zk",
      "last_time_visited": "2025-04-17T04:47:32.738529+00:00",
      "remote_heads_hash": "89dfce5717eb"
    },
    {
      "remote_url": "https://github.com/RemyDegenne/testing-lower-bounds",
      "last_time_visited": "2025-04-17T04:47:33.301036+00:00",
      "remote_heads_hash": "fccb394cbbf7"
    },
    {
      "remote_url": "https://github.com/RemyDegenne/kolmogorov_extension4",
      "last_time_visited": "2025-04-17T04:47:33.971110+00:00",
      "remote_heads_hash": "5e5e07d89ae7"
    },
    {
      "remote_url": "https://github.com/RemyDegenne/CLT",
      "last_time_visited": "2025-04-17T04:47:34.570155+00:00",
      "remote_heads_hash": "f48eb5595dc2"
    },
    {
      "remote_url": "https://github.com/riccardobrasca/demontrer2025",
      "last_time_visited": "2025-04-17T04:47:35.064320+00:00",
      "remote_heads_hash": "bd4089796258"
    },
    {
      "remote_url": "https://github.com/risc0/risc0-lean4",
      "last_time_visited": "2025-04-17T04:47:35.896770+00:00",
      "remote_heads_hash": "76fff39fd5ca"
    },
    {
      "remote_url": "https://github.com/Seasawher/mk-exercise",
      "last_time_visited": "2025-04-17T04:47:36.607072+00:00",
      "remote_heads_hash": "fe2286bc7c85"
    },
    {
      "remote_url": "https://github.com/Seasawher/mdgen",
      "last_time_visited": "2025-04-17T04:47:37.185063+00:00",
      "remote_heads_hash": "035325c4499d"
    },
    {
      "remote_url": "https://github.com/Seasawher/mathlib4-help",
      "last_time_visited": "2025-04-18T03:45:06.536847+00:00",
      "remote_heads_hash": "c19bb6e48fd6"
    },
    {
      "remote_url": "https://github.com/Seasawher/lean-book",
      "last_time_visited": "2025-04-17T04:47:39.475200+00:00",
      "remote_heads_hash": "f5a57bff0f45"
    },
    {
      "remote_url": "https://github.com/Seasawher/import-all",
      "last_time_visited": "2025-04-17T04:47:39.954654+00:00",
      "remote_heads_hash": "5cfb15f55ac8"
    },
    {
      "remote_url": "https://github.com/Shreyas4991/DGAlgorithms",
      "last_time_visited": "2025-04-17T04:47:40.388153+00:00",
      "remote_heads_hash": "04b99eaf838d"
    },
    {
      "remote_url": "https://github.com/siddhartha-gadgil/Saturn",
      "last_time_visited": "2025-04-17T04:47:40.916789+00:00",
      "remote_heads_hash": "3f2346688f39"
    },
    {
      "remote_url": "https://github.com/siddhartha-gadgil/Polylean",
      "last_time_visited": "2025-04-17T04:47:41.443640+00:00",
      "remote_heads_hash": "e7786906cb32"
    },
    {
      "remote_url": "https://github.com/siddhartha-gadgil/MetaExamples",
      "last_time_visited": "2025-04-17T04:47:41.951102+00:00",
      "remote_heads_hash": "21673a31a16b"
    },
    {
      "remote_url": "https://github.com/siddhartha-gadgil/LeanLion",
      "last_time_visited": "2025-04-17T04:47:42.466697+00:00",
      "remote_heads_hash": "9506b2acf8a3"
    },
    {
      "remote_url": "https://github.com/siddhartha-gadgil/LeanAideTools",
      "last_time_visited": "2025-04-17T04:47:42.948705+00:00",
      "remote_heads_hash": "9555b8513464"
    },
    {
      "remote_url": "https://github.com/siddhartha-gadgil/LeanAide",
      "last_time_visited": "2025-04-17T04:47:43.645072+00:00",
      "remote_heads_hash": "eb2c967d8047"
    },
    {
      "remote_url": "https://github.com/sinhp/LeanFibredCategories",
      "last_time_visited": "2025-04-17T04:48:11.616708+00:00",
      "remote_heads_hash": "cb5cdf9d5b6e"
    },
    {
      "remote_url": "https://github.com/starkware-libs/formal-proofs",
      "last_time_visited": "2025-04-17T04:48:12.127805+00:00",
      "remote_heads_hash": "e7128b1e4414"
    },
    {
      "remote_url": "https://github.com/sven-manthe/A-formalization-of-Borel-determinacy-in-Lean",
      "last_time_visited": "2025-04-17T04:48:12.833642+00:00",
      "remote_heads_hash": "5cfc842b0804"
    },
    {
      "remote_url": "https://github.com/T-Brick/lean-wasm",
      "last_time_visited": "2025-04-17T04:48:13.373733+00:00",
      "remote_heads_hash": "b88e6c28788e"
    },
    {
      "remote_url": "https://github.com/T-Brick/lean2wasm",
      "last_time_visited": "2025-04-17T04:48:13.851949+00:00",
      "remote_heads_hash": "3aa558e05c14"
    },
    {
      "remote_url": "https://github.com/teorth/pfr",
      "last_time_visited": "2025-04-18T03:45:10.900090+00:00",
      "remote_heads_hash": "73b841b7da22"
    },
    {
      "remote_url": "https://github.com/teorth/expdb",
      "last_time_visited": "2025-04-18T03:45:13.040323+00:00",
      "remote_heads_hash": "9c65317bdd18"
    },
    {
      "remote_url": "https://github.com/teorth/equational_theories",
      "last_time_visited": "2025-04-17T04:48:17.134969+00:00",
      "remote_heads_hash": "3fce35728959"
    },
    {
      "remote_url": "https://github.com/Timeroot/Lean-QuantumInfo",
      "last_time_visited": "2025-04-18T03:45:15.104241+00:00",
      "remote_heads_hash": "7a073c31ea15"
    },
    {
      "remote_url": "https://github.com/Timeroot/ComputableReal",
      "last_time_visited": "2025-04-17T04:56:08.806999+00:00",
      "remote_heads_hash": "8abf2e84860e"
    },
    {
      "remote_url": "https://github.com/todbeibrot/Lean-Oscar",
      "last_time_visited": "2025-04-17T04:56:09.344812+00:00",
      "remote_heads_hash": "5be3ae253c94"
    },
    {
      "remote_url": "https://github.com/Trequetrum/lean4game-logic",
      "last_time_visited": "2025-04-17T04:56:09.949618+00:00",
      "remote_heads_hash": "eebd9da88e9d"
    },
    {
      "remote_url": "https://github.com/tydeu/lean4-alloy",
      "last_time_visited": "2025-04-17T04:56:10.547382+00:00",
      "remote_heads_hash": "607e2d5fe13b"
    },
    {
      "remote_url": "https://github.com/ufmg-smite/lean-smt",
      "last_time_visited": "2025-04-17T04:56:11.061942+00:00",
      "remote_heads_hash": "38596c368e5e"
    },
    {
      "remote_url": "https://github.com/VCA-EPFL/leanses",
      "last_time_visited": "2025-04-17T04:56:11.659661+00:00",
      "remote_heads_hash": "4a086d674a6c"
    },
    {
      "remote_url": "https://github.com/VCA-EPFL/dataflow-rewriter",
      "last_time_visited": "2025-04-18T03:53:00.925713+00:00",
      "remote_heads_hash": "47125c8a3fa1"
    },
    {
      "remote_url": "https://github.com/verified-optimization/CvxLean",
      "last_time_visited": "2025-04-17T04:56:13.949346+00:00",
      "remote_heads_hash": "7a4249e9e921"
    },
    {
      "remote_url": "https://github.com/Verified-zkEVM/ZKLib",
      "last_time_visited": "2025-04-18T03:53:03.497134+00:00",
      "remote_heads_hash": "cea96cca10ef"
    },
    {
      "remote_url": "https://github.com/Verified-zkEVM/clean",
      "last_time_visited": "2025-04-18T04:10:51.988712+00:00",
      "remote_heads_hash": "43c3a3e9a2ce"
    },
    {
      "remote_url": "https://github.com/verse-lab/veil",
      "last_time_visited": "2025-04-17T05:21:59.602001+00:00",
      "remote_heads_hash": "c6a42f405bdd"
    },
    {
      "remote_url": "https://github.com/verse-lab/lean-ssr",
      "last_time_visited": "2025-04-17T05:31:00.680956+00:00",
      "remote_heads_hash": "90c340f9e5c7"
    },
    {
      "remote_url": "https://github.com/vihdzp/rubik-lean4",
      "last_time_visited": "2025-04-17T05:31:01.490028+00:00",
      "remote_heads_hash": "1fc48ff90e62"
    },
    {
      "remote_url": "https://github.com/vihdzp/combinatorial-games",
      "last_time_visited": "2025-04-17T05:31:01.982643+00:00",
      "remote_heads_hash": "f521d632a4bd"
    },
    {
      "remote_url": "https://github.com/vltanh/lean4-analysis-tao",
      "last_time_visited": "2025-04-17T05:31:02.537991+00:00",
      "remote_heads_hash": "57996e1217a9"
    },
    {
      "remote_url": "https://github.com/wellecks/ntptutorial",
      "last_time_visited": "2025-04-17T05:31:03.043802+00:00",
      "remote_heads_hash": "ecbb7c378fae"
    },
    {
      "remote_url": "https://github.com/wellecks/llmstep",
      "last_time_visited": "2025-04-17T05:31:04.209263+00:00",
      "remote_heads_hash": "164bd714fab9"
    },
    {
      "remote_url": "https://github.com/wupr/order-p-q",
      "last_time_visited": "2025-04-17T05:31:04.865094+00:00",
      "remote_heads_hash": "b0999047d697"
    },
    {
      "remote_url": "https://github.com/Xiyou-Wu/RiemannianGeometry",
      "last_time_visited": "2025-04-17T05:31:05.360796+00:00",
      "remote_heads_hash": "711e79694735"
    },
    {
      "remote_url": "https://github.com/YaelDillies/Toric",
      "last_time_visited": "2025-04-18T04:19:57.619856+00:00",
      "remote_heads_hash": "ac4485d3d40d"
    },
    {
      "remote_url": "https://github.com/YaelDillies/LeanCamCombi",
      "last_time_visited": "2025-04-18T04:20:00.268166+00:00",
      "remote_heads_hash": "e0017197ebf0"
    },
    {
      "remote_url": "https://github.com/YaelDillies/LeanAPAP",
      "last_time_visited": "2025-04-17T05:34:06.541204+00:00",
      "remote_heads_hash": "15c646db28ea"
    },
    {
      "remote_url": "https://github.com/YaelDillies/ChandraFurstLipton",
      "last_time_visited": "2025-04-17T05:34:08.465812+00:00",
      "remote_heads_hash": "c8b483fa1113"
    },
    {
      "remote_url": "https://github.com/yangky11/miniF2F-lean4",
      "last_time_visited": "2025-04-17T05:34:08.991774+00:00",
      "remote_heads_hash": "f520a26cc363"
    },
    {
      "remote_url": "https://github.com/yangky11/lean4-example",
      "last_time_visited": "2025-04-17T05:34:09.652075+00:00",
      "remote_heads_hash": "7e60684c8a6d"
    },
    {
      "remote_url": "https://github.com/YnirPaz/PCF-Theory",
      "last_time_visited": "2025-04-17T05:34:10.163230+00:00",
      "remote_heads_hash": "7b0d1c8f2732"
    },
    {
      "remote_url": "https://github.com/yuma-mizuno/lean-math-workshop",
      "last_time_visited": "2025-04-17T05:34:10.707943+00:00",
      "remote_heads_hash": "21fbc4ec8b2a"
    }
  ],
  "sorries": [
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 2275,
        "start_column": 61,
        "end_line": 2275,
        "end_column": 66,
        "file": "PrimeNumberTheoremAnd/Wiener.lean"
      },
      "debug_info": {
        "goal": "A x : \u211d\nG : \u2102 \u2192 \u2102\nf : \u2115 \u2192 \u211d\nhpos : 0 \u2264 f\nhG : ContinuousOn G {s | 1 \u2264 s.re}\nhG' : EqOn G (fun s => LSeries (fun n => \u2191(f n)) s - \u2191A / (s - 1)) {s | 1 < s.re}\nhf : \u2200 (\u03c3' : \u211d), 1 < \u03c3' \u2192 Summable (nterm (fun n => \u2191(f n)) \u03c3')\n\u03c8 : CS 2 \u2102\nh\u03c8pos : \u2200 (y : \u211d), 0 \u2264 (\ud835\udcd5 \u03c8.toFun y).re \u2227 (\ud835\udcd5 \u03c8.toFun y).im = 0\nhx : 1 \u2264 x\n\u22a2 \u2211' (n : \u2115), \u2191(f n) / \u2191n * \ud835\udcd5 \u03c8.toFun (1 / (2 * \u03c0) * Real.log (\u2191n / x)) -\n      \u2191A * \u222b (u : \u211d) in Ici (-Real.log x), \ud835\udcd5 \u03c8.toFun (u / (2 * \u03c0)) =\n    \u222b (t : \u211d), G (1 + \u2191t * I) * \u03c8.toFun t * \u2191x ^ (\u2191t * I)",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/Wiener.lean#L2275"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-04-04T12:17:01-07:00",
        "inclusion_date": "2025-04-17T03:00:53.978507+00:00"
      },
      "id": "1c3953b7aaa6343a6e35984faa060a34101027c3c35c4545e44e1886b41536ba"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 2297,
        "start_column": 90,
        "end_line": 2297,
        "end_column": 95,
        "file": "PrimeNumberTheoremAnd/Wiener.lean"
      },
      "debug_info": {
        "goal": "A : \u211d\nG : \u2102 \u2192 \u2102\nf : \u2115 \u2192 \u211d\nhpos : 0 \u2264 f\nhG : ContinuousOn G {s | 1 \u2264 s.re}\nhG' : EqOn G (fun s => LSeries (fun n => \u2191(f n)) s - \u2191A / (s - 1)) {s | 1 < s.re}\nhf : \u2200 (\u03c3' : \u211d), 1 < \u03c3' \u2192 Summable (nterm (fun n => \u2191(f n)) \u03c3')\n\u03c8 : CS 2 \u2102\nh\u03c8pos : \u2200 (y : \u211d), 0 \u2264 (\ud835\udcd5 \u03c8.toFun y).re \u2227 (\ud835\udcd5 \u03c8.toFun y).im = 0\n\u22a2 \u2203 B, \u2200 (x : \u211d), 0 < x \u2192 \u2016\u2211' (n : \u2115), \u2191(f n) / \u2191n * \ud835\udcd5 \u03c8.toFun (1 / (2 * \u03c0) * Real.log (\u2191n / x))\u2016 \u2264 B",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/Wiener.lean#L2297"
      },
      "metadata": {
        "blame_email_hash": "4d01d7c10d46",
        "blame_date": "2024-04-16T02:15:35+02:00",
        "inclusion_date": "2025-04-17T03:00:53.978507+00:00"
      },
      "id": "29f483d9f2b002939cb76fe95536bb178dfdd91c0c6da1e9d8b7fa0158804838"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 2315,
        "start_column": 2,
        "end_line": 2315,
        "end_column": 7,
        "file": "PrimeNumberTheoremAnd/Wiener.lean"
      },
      "debug_info": {
        "goal": "A : \u211d\nG : \u2102 \u2192 \u2102\nf : \u2115 \u2192 \u211d\nhpos : 0 \u2264 f\nhf : \u2200 (\u03c3' : \u211d), 1 < \u03c3' \u2192 Summable (nterm (fun n => \u2191(f n)) \u03c3')\nhG : ContinuousOn G {s | 1 \u2264 s.re}\nhG' : EqOn G (fun s => LSeries (fun n => \u2191(f n)) s - \u2191A / (s - 1)) {s | 1 < s.re}\n\u22a2 cheby fun n => \u2191(f n)",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/Wiener.lean#L2315"
      },
      "metadata": {
        "blame_email_hash": "4d01d7c10d46",
        "blame_date": "2024-04-16T02:15:35+02:00",
        "inclusion_date": "2025-04-17T03:00:53.978507+00:00"
      },
      "id": "3df4e211c50274858e140c0ef0fb9b94bba8230f820d80bbdcf8b75fec28f80a"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 2452,
        "start_column": 2,
        "end_line": 2452,
        "end_column": 7,
        "file": "PrimeNumberTheoremAnd/ZetaBounds.lean"
      },
      "debug_info": {
        "goal": "case h\nA : \u211d\nhA : A \u2208 Ioc 0 (1 / 2)\nh\u271d :\n  \u2203 C,\n    \u2203 (_ : 0 < C),\n      \u2200 (\u03c3 t : \u211d),\n        3 < |t| \u2192\n          \u03c3 \u2208 Ico (1 - A / Real.log |t| ^ 9) 1 \u2192 \u2016deriv \u03b6 (\u2191\u03c3 + \u2191t * I) / \u03b6 (\u2191\u03c3 + \u2191t * I)\u2016 \u2264 C * Real.log |t| ^ 9\nT : \u211d\nT_gt : 3 < T\n\u22a2 HolomorphicOn (fun s => deriv \u03b6 s / \u03b6 s) (Ioc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/ZetaBounds.lean#L2452"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-03-07T16:45:37-05:00",
        "inclusion_date": "2025-04-17T03:00:53.978507+00:00"
      },
      "id": "ff893eaaec46b69d8a2462e16a6c7dcd102c794c5b57ed51c4d58eadcac3abae"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 362,
        "start_column": 2,
        "end_line": 362,
        "end_column": 7,
        "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\ndiffSmoothingF : ContDiff \u211d 1 SmoothingF\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nX\u271d : \u211d\nC : \u211d := sorry\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u22a2 \u2016\u2191(\u2211' (n : \u2115), ArithmeticFunction.vonMangoldt n * Smooth1 SmoothingF \u03b5 (\u2191n / X)) -\n        \u2191((Finset.range \u230aX\u230b\u208a).sum \u21d1ArithmeticFunction.vonMangoldt)\u2016 \u2264\n    C * \u03b5 * X * Real.log X",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/MediumPNT.lean#L362"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2024-03-11T23:23:22-04:00",
        "inclusion_date": "2025-04-17T03:00:53.978507+00:00"
      },
      "id": "bd25bc916d585ad5539838dbc6d5171e3e2c975a9ac8bd87c129b78b3d666606"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 353,
        "start_column": 23,
        "end_line": 353,
        "end_column": 28,
        "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\ndiffSmoothingF : ContDiff \u211d 1 SmoothingF\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nX : \u211d\nC : \u211d := sorry\n\u22a2 3 < C",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/MediumPNT.lean#L353"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-03-08T10:26:01-05:00",
        "inclusion_date": "2025-04-17T03:00:53.978507+00:00"
      },
      "id": "7cd7f714bb60d5fceb755f385d9fc4575549abc79bdfff0a0cd095a8765828dd"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 399,
        "start_column": 2,
        "end_line": 399,
        "end_column": 7,
        "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\n\u03b5 : \u211d\n\u03b5_pos : 0 < \u03b5\nX \u03c3\u2080 : \u211d\n\u03c3\u2080_pos : 0 < \u03c3\u2080\nholoOn : HolomorphicOn (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) (Icc \u03c3\u2080 2 \u00d7\u2102 univ \\ {1})\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\n\u22a2 Integrable (fun t => SmoothedChebyshevIntegrand SmoothingF \u03b5 X (2 + \u2191t * I)) volume",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/MediumPNT.lean#L399"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-02-28T10:57:09-05:00",
        "inclusion_date": "2025-04-17T03:00:53.978507+00:00"
      },
      "id": "2d00d71173c85f7b81de53e9eff36a9f616d5a4c7589dcaa6dc85c6adb6aa594"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 431,
        "start_column": 2,
        "end_line": 431,
        "end_column": 7,
        "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\n\u03b5 : \u211d\n\u03b5_pos : 0 < \u03b5\nX T : \u211d\nT_pos : 0 < T\n\u03c3\u2080 : \u211d\n\u03c3\u2080_pos : 0 < \u03c3\u2080\nholoOn : HolomorphicOn (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) (Icc \u03c3\u2080 2 \u00d7\u2102 univ \\ {1})\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\n\u22a2 Integrable (fun t => SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191(1 + (Real.log X)\u207b\u00b9) + \u2191t * I)) volume",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/MediumPNT.lean#L431"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-03-07T17:04:05-05:00",
        "inclusion_date": "2025-04-17T03:00:53.978507+00:00"
      },
      "id": "3ec42e380be1018b541105196279d6fa12aca71336e2f1701cda98424bc2d9f9"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 437,
        "start_column": 2,
        "end_line": 437,
        "end_column": 7,
        "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\n\u03b5 : \u211d\n\u03b5_pos : 0 < \u03b5\nX T : \u211d\nT_pos : 0 < T\n\u03c3\u2080 : \u211d\n\u03c3\u2080_pos : 0 < \u03c3\u2080\nholoOn : HolomorphicOn (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) (Icc \u03c3\u2080 2 \u00d7\u2102 univ \\ {1})\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\n\u22a2 (1 / (2 * \u2191\u03c0 * I)) \u2022\n      ((I \u2022 \u222b (t : \u211d) in Iic (-T), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191(1 + (Real.log X)\u207b\u00b9) + \u2191t * I)) +\n          VIntegral (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) (1 + (Real.log X)\u207b\u00b9) (-T) T +\n        I \u2022 \u222b (t : \u211d) in Ici T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191(1 + (Real.log X)\u207b\u00b9) + \u2191t * I)) =\n    1 / (2 * \u2191\u03c0 * I) *\n        (((((I * \u222b (t : \u211d) in Iic (-T), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (1 + \u2191(Real.log X)\u207b\u00b9 + \u2191t * I)) -\n                \u222b (s : \u211d) in Icc \u03c3\u2080 (1 + (Real.log X)\u207b\u00b9), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191s - \u2191T * I)) +\n              I * \u222b (t : \u211d) in Icc (-T) T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191\u03c3\u2080 + \u2191t * I)) +\n            \u222b (s : \u211d) in Icc \u03c3\u2080 (1 + (Real.log X)\u207b\u00b9), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191s + \u2191T * I)) +\n          I * \u222b (t : \u211d) in Ici T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (1 + \u2191(Real.log X)\u207b\u00b9 + \u2191t * I)) +\n      \ud835\udcdc (fun x => \u2191(Smooth1 SmoothingF \u03b5 x)) 1 * \u2191X",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/MediumPNT.lean#L437"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-02-10T12:59:29-05:00",
        "inclusion_date": "2025-04-17T03:00:53.978507+00:00"
      },
      "id": "ecd44a7a707ebebc71b1e4682d85c9e61e62d794d9e09df4485d21bdfaf279c9"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 549,
        "start_column": 2,
        "end_line": 549,
        "end_column": 7,
        "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
      },
      "debug_info": {
        "goal": "c : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\nX\u2080 : \u211d := sorry\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\n\u22a2 \u2016(ChebyshevPsi - id) X\u2016 \u2264 C * \u2016X * rexp (-c * Real.log X ^ (1 / 10))\u2016",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/MediumPNT.lean#L549"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2024-03-11T23:23:22-04:00",
        "inclusion_date": "2025-04-17T03:00:53.978507+00:00"
      },
      "id": "2b6d4c6a50d75be84d0e4ee1648f8371c353d3a201f66a45781773ab9661f7e3"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 539,
        "start_column": 23,
        "end_line": 539,
        "end_column": 28,
        "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
      },
      "debug_info": {
        "goal": "c : \u211d := sorry\n\u22a2 0 < c",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/MediumPNT.lean#L539"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-02-14T15:25:09-05:00",
        "inclusion_date": "2025-04-17T03:00:53.978507+00:00"
      },
      "id": "6aaf1d8c94ab08329e25cba63011d7c4917d3a0c372a36204f3a64e0da754651"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 1843,
        "start_column": 2,
        "end_line": 1843,
        "end_column": 7,
        "file": "PrimeNumberTheoremAnd/Consequences.lean"
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 c, (c =o[atTop] fun x => 1) \u2227 \u2200 (n : \u2115), \u2191(nth Nat.Prime n) = (1 + c n) * \u2191n * log \u2191n",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/Consequences.lean#L1843"
      },
      "metadata": {
        "blame_email_hash": "11451cd2f124",
        "blame_date": "2024-02-19T02:44:41-08:00",
        "inclusion_date": "2025-04-17T03:00:53.978507+00:00"
      },
      "id": "cf0c0572d8a2aa7b023174484ee12482794582af8a15b110ec16638bfe4c8f63"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 2060,
        "start_column": 2,
        "end_line": 2060,
        "end_column": 7,
        "file": "PrimeNumberTheoremAnd/Consequences.lean"
      },
      "debug_info": {
        "goal": "\u03b5 : \u211d\nh\u03b5 : 0 < \u03b5\n\u22a2 \u2200\u1da0 (x : \u211d) in atTop, \u2203 p, Nat.Prime p \u2227 x < \u2191p \u2227 \u2191p < (1 + \u03b5) * x",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/Consequences.lean#L2060"
      },
      "metadata": {
        "blame_email_hash": "11451cd2f124",
        "blame_date": "2024-02-19T02:44:41-08:00",
        "inclusion_date": "2025-04-17T03:00:53.978507+00:00"
      },
      "id": "aa68fa3afe499f43fcca9077c9feefa48b31ce57a66a8210b711e39be98cac89"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 2161,
        "start_column": 81,
        "end_line": 2161,
        "end_column": 86,
        "file": "PrimeNumberTheoremAnd/Consequences.lean"
      },
      "debug_info": {
        "goal": "\u22a2 (fun x => \u2211 n \u2208 range \u230ax\u230b\u208a, \u03bc n) =o[atTop] fun x => x",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/Consequences.lean#L2161"
      },
      "metadata": {
        "blame_email_hash": "5ecb8fcfe98c",
        "blame_date": "2025-02-06T17:41:08+01:00",
        "inclusion_date": "2025-04-17T03:00:53.978507+00:00"
      },
      "id": "8dd91fa2d583f5ec6bef924a5d19b5b9e65c83843475c22de74d78c670a5ae81"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 2197,
        "start_column": 2,
        "end_line": 2197,
        "end_column": 7,
        "file": "PrimeNumberTheoremAnd/Consequences.lean"
      },
      "debug_info": {
        "goal": "\u22a2 (fun x => \u2211 n \u2208 range \u230ax\u230b\u208a, (-1) ^ \u03a9 n) =o[atTop] fun x => x",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/Consequences.lean#L2197"
      },
      "metadata": {
        "blame_email_hash": "11451cd2f124",
        "blame_date": "2024-02-19T02:44:41-08:00",
        "inclusion_date": "2025-04-17T03:00:53.978507+00:00"
      },
      "id": "395c3b448b9d11db6c792b5af772294d66facafcda32f5d8b63950d3e14b3429"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 2221,
        "start_column": 98,
        "end_line": 2221,
        "end_column": 103,
        "file": "PrimeNumberTheoremAnd/Consequences.lean"
      },
      "debug_info": {
        "goal": "\u22a2 (fun x => \u2211 n \u2208 range \u230ax\u230b\u208a, \u2191(\u03bc n) / \u2191n) =o[atTop] fun x => 1",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/Consequences.lean#L2221"
      },
      "metadata": {
        "blame_email_hash": "5ecb8fcfe98c",
        "blame_date": "2025-02-06T17:41:08+01:00",
        "inclusion_date": "2025-04-17T03:00:53.978507+00:00"
      },
      "id": "f10366c0e8a38c3384dee42ebe85249a5c0bc39bb10f4c47e58f230a000a0d2b"
    },
    {
      "repo": {
        "remote": "https://github.com/Deducteam/lean2dk",
        "branch": "main",
        "commit": "33f446b3be21f64437bb771a0bcf1a445e13e870",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 21,
        "start_column": 2,
        "end_line": 21,
        "end_column": 7,
        "file": "fixtures/Temp.lean"
      },
      "debug_info": {
        "goal": "A : Type u\nU V : A \u2192 Type v\nhAUBV : ((a : A) \u2192 U a) = ((a : A) \u2192 V a)\n\u22a2 U = V",
        "url": "https://github.com/Deducteam/lean2dk/blob/33f446b3be21f64437bb771a0bcf1a445e13e870/fixtures/Temp.lean#L21"
      },
      "metadata": {
        "blame_email_hash": "3dade9baec16",
        "blame_date": "2024-05-02T19:15:48+02:00",
        "inclusion_date": "2025-04-17T03:14:03.176559+00:00"
      },
      "id": "4f5d41eb1aa57a9691fb614cb7263ff29568b654aa81a5b6e509749be1618ab2"
    },
    {
      "repo": {
        "remote": "https://github.com/Deducteam/lean2dk",
        "branch": "module-output",
        "commit": "a62aee42294933a64d3b551c0ad387dd89a7b509",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 21,
        "start_column": 2,
        "end_line": 21,
        "end_column": 7,
        "file": "fixtures/Temp.lean"
      },
      "debug_info": {
        "goal": "A : Type u\nU V : A \u2192 Type v\nhAUBV : ((a : A) \u2192 U a) = ((a : A) \u2192 V a)\n\u22a2 U = V",
        "url": "https://github.com/Deducteam/lean2dk/blob/a62aee42294933a64d3b551c0ad387dd89a7b509/fixtures/Temp.lean#L21"
      },
      "metadata": {
        "blame_email_hash": "3dade9baec16",
        "blame_date": "2024-05-02T19:15:48+02:00",
        "inclusion_date": "2025-04-17T03:20:15.927185+00:00"
      },
      "id": "423a2e3cf722be97f5c748749f055ad0550515b5d0ccf4f16554956c000270d8"
    },
    {
      "repo": {
        "remote": "https://github.com/Deducteam/lean2dk",
        "branch": "var-refactor",
        "commit": "8cfab70a20ddc712b243fe8fc5d0d3d6eb990eae",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 21,
        "start_column": 2,
        "end_line": 21,
        "end_column": 7,
        "file": "fixtures/Temp.lean"
      },
      "debug_info": {
        "goal": "A : Type u\nU V : A \u2192 Type v\nhAUBV : ((a : A) \u2192 U a) = ((a : A) \u2192 V a)\n\u22a2 U = V",
        "url": "https://github.com/Deducteam/lean2dk/blob/8cfab70a20ddc712b243fe8fc5d0d3d6eb990eae/fixtures/Temp.lean#L21"
      },
      "metadata": {
        "blame_email_hash": "3dade9baec16",
        "blame_date": "2024-05-02T19:15:48+02:00",
        "inclusion_date": "2025-04-17T03:20:32.486936+00:00"
      },
      "id": "e1d713bcddb5accd4d5b1c0b270220affab50ae832e86fc9ef3ba997a1ae8995"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 47,
        "start_column": 2,
        "end_line": 47,
        "end_column": 7,
        "file": "Examples/HHS_Elgamal.lean"
      },
      "debug_info": {
        "goal": "G P : Type\ninst\u271d\u2075 : SelectableType G\ninst\u271d\u2074 : SelectableType P\ninst\u271d\u00b3 : AddCommGroup G\ninst\u271d\u00b2 : Group P\ninst\u271d\u00b9 : AddTorsor G P\ninst\u271d : DecidableEq P\nthis : \u2200 (msg x : P) (g\u2081 g\u2082 : G), msg * (g\u2082 +\u1d65 g\u2081 +\u1d65 x) / (g\u2081 +\u1d65 g\u2082 +\u1d65 x) = msg\n\u22a2 neverFails do\n    let _ \u2190 $\u1d57P\n    let _ \u2190 $\u1d57G\n    (fun a => ()) <$> ($\u1d57G)",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/Examples/HHS_Elgamal.lean#L47"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T00:46:14-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "4f97d017407db3805e4615dc026bac5fe4102aff4c5b82a9c1e3112150cf0104"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 71,
        "start_column": 4,
        "end_line": 71,
        "end_column": 9,
        "file": "VCVio/OracleComp/Traversal.lean"
      },
      "debug_info": {
        "goal": "case query_bind\n\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type v\nQ : {\u03b1 : Type v} \u2192 spec.OracleQuery \u03b1 \u2192 Prop\nF : Prop\npossible_outputs : {\u03b1 : Type v} \u2192 spec.OracleQuery \u03b1 \u2192 Set \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\ni : \u03b9\nt : spec.domain i\noa : spec.range i \u2192 OracleComp spec \u03b1\nh :\n  \u2200 (u : spec.range i),\n    allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa u >>= ob) \u2194\n      allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa u) \u2227\n        \u2200 x \u2208 (oa u).supportWhen fun {\u03b1} => possible_outputs,\n          allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (ob x)\n\u22a2 (Q (query i t) \u2227\n      \u2200 x \u2208 possible_outputs (query i t),\n        allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa x) \u2227\n          \u2200 x_1 \u2208 OracleComp.construct (fun x => {x}) (fun {\u03b2} q oa f => \u22c3 u \u2208 possible_outputs q, f u) \u2205 (oa x),\n            allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (ob x_1)) \u2194\n    (Q (query i t) \u2227\n        \u2200 x \u2208 possible_outputs (query i t), allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa x)) \u2227\n      \u2200 (x : \u03b1),\n        \u2200 x_1 \u2208 possible_outputs (query i t),\n          x \u2208 OracleComp.construct (fun x => {x}) (fun {\u03b2} q oa f => \u22c3 u \u2208 possible_outputs q, f u) \u2205 (oa x_1) \u2192\n            allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (ob x)",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/OracleComp/Traversal.lean#L71"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-30T23:18:23-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "b13b3b4f9533c2a747b8c63c54af5b983fb3c8290d5b365f1bed69490f2ac5af"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 112,
        "start_column": 36,
        "end_line": 112,
        "end_column": 41,
        "file": "VCVio/OracleComp/Traversal.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type v\n\u03b9' : Type u_1\nspec' : OracleSpec \u03b9'\noa : OracleComp spec \u03b1\npossible_outputs : {\u03b1 : Type v} \u2192 spec.OracleQuery \u03b1 \u2192 Set \u03b1\nh : oa.neverFailsWhen fun {\u03b1} => possible_outputs\nso : QueryImpl spec (OracleComp spec')\nh' : \u2200 {\u03b1 : Type v} (q : spec.OracleQuery \u03b1), (so.impl q).support \u2286 possible_outputs q\nhso : \u2200 {\u03b1 : Type v} (q : spec.OracleQuery \u03b1), (so.impl q).neverFails\n\u22a2 (simulateQ so oa).neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/OracleComp/Traversal.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T02:16:38-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "df96771325acff2b5bd4a9159b4d942b84879e795c8911d88991290c24fb684a"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 49,
        "start_column": 2,
        "end_line": 49,
        "end_column": 7,
        "file": "VCVio/OracleComp/QueryBound.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\ninst\u271d\u00b9 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\n\u03b1 : Type u\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\n\u22a2 (\u2200 (qc : spec.QueryCount) (x : \u03b1), (x, qc) \u2208 (simulateQ countingOracle oa).run.support \u2192 qc \u2264 qb) \u2194\n    \u2200 x \u2208 (snd <$> (simulateQ countingOracle oa).run <|> pure 0).support, x \u2264 qb",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/OracleComp/QueryBound.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T00:46:14-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "c5948f119d550ae663e0ff7308e2a8d37b0cd78258a1d604445fa3e08e3396ba"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 29,
        "start_column": 2,
        "end_line": 29,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 \u03b2 \u03b3 : Type\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\noc : \u03b1 \u2192 OracleComp spec \u03b3\nh : \u2200 x \u2208 oa.support, [\u22a5|ob x] = [\u22a5|oc x]\n\u22a2 [\u22a5|oa >>= ob] = [\u22a5|oa >>= oc]",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/CryptoFoundations/Fork.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T00:43:30-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "e6159551bcb0ebfa93cc52466ea5a61c17d98d8198dcce1e2b2babb3bf7046c4"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 34,
        "start_column": 2,
        "end_line": 34,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 \u03b2 \u03b3 : Type\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\noc : \u03b1 \u2192 OracleComp spec \u03b3\nh : \u2200 (x : \u03b1), [\u22a5|ob x] = [\u22a5|oc x]\n\u22a2 [\u22a5|oa >>= ob] = [\u22a5|oa >>= oc]",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/CryptoFoundations/Fork.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T00:43:30-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "668a9d46cb244761c5ec598fe95b5a1ec615ad64d4326d1ceed7a3cbe09ece35"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 41,
        "start_column": 4,
        "end_line": 41,
        "end_column": 9,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 \u03b2 \u03b3 : Type\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\n\u03c3 : Type u_1\ns : Finset \u03c3\noc : \u03c3 \u2192 \u03b1 \u2192 OracleComp spec \u03b3\n\u22a2 [\u22a5|oa >>= ob] = \u2211 x \u2208 s, [\u22a5|oa >>= oc x]",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/CryptoFoundations/Fork.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T00:43:30-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "bc6e07749aa18e6a96248c3ddc30c930074f90634073cf678f9630e850bb3e4f"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 88,
        "start_column": 36,
        "end_line": 88,
        "end_column": 41,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := [fun x => x.isSome = true|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 [\u22a5|main.fork' qb js i cf] =\n    1 -\n      \u2211 s : Fin q,\n        [=(some s, some s)|do\n          let seed \u2190 liftM (generateSeed spec qb js)\n          let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n          let u \u2190 liftM ($\u1d57spec.range i)\n          _root_.guard ((seed i)[s + 1]? \u2260 some u)\n          let seed' : spec.QuerySeed := (seed.takeAtIndex i \u2191s).addValue i u\n          let x\u2082 \u2190 (simulateQ seededOracle main).run seed'\n          pure (cf x\u2081, cf x\u2082)]",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/CryptoFoundations/Fork.lean#L88"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T00:43:30-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "e97bb69cab4e9cac516c6fb76a7bbf0b2d3b4711c55351a3faccce3b9971ade5"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 100,
        "start_column": 30,
        "end_line": 100,
        "end_column": 35,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := [fun x => x.isSome = true|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 -\n      \u2211 s : Fin q,\n        [=(some s, some s)|do\n          let seed \u2190 liftM (generateSeed spec qb js)\n          let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n          let u \u2190 liftM ($\u1d57spec.range i)\n          _root_.guard ((seed i)[s + 1]? \u2260 some u)\n          let seed' : spec.QuerySeed := (seed.takeAtIndex i \u2191s).addValue i u\n          let x\u2082 \u2190 (simulateQ seededOracle main).run seed'\n          pure (cf x\u2081, cf x\u2082)] =\n    1 -\n        \u2211 s : Fin q,\n          [=(some s, some s)|do\n            let seed \u2190 liftM (generateSeed spec qb js)\n            let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n            let seed' : spec.QuerySeed := seed.takeAtIndex i \u2191s\n            let x\u2082 \u2190 (simulateQ seededOracle main).run seed'\n            pure (cf x\u2081, cf x\u2082)] +\n      \u2211 s : Fin q,\n        [=some s|do\n          let seed \u2190 liftM (generateSeed spec qb js)\n          let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n          let u \u2190 liftM ($\u1d57spec.range i)\n          _root_.guard ((seed i)[s + 1]? = some u)\n          pure (cf x\u2081)]",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/CryptoFoundations/Fork.lean#L100"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T00:43:30-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "b7b527d49c6bc3c659d5b98f579187da0d1b2efe1dd66e4bcaf65598721be025"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 111,
        "start_column": 30,
        "end_line": 111,
        "end_column": 35,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := [fun x => x.isSome = true|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 -\n        \u2211 s : Fin q,\n          [=(some s, some s)|do\n            let seed \u2190 liftM (generateSeed spec qb js)\n            let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n            let seed' : spec.QuerySeed := seed.takeAtIndex i \u2191s\n            let x\u2082 \u2190 (simulateQ seededOracle main).run seed'\n            pure (cf x\u2081, cf x\u2082)] +\n      \u2211 s : Fin q,\n        [=some s|do\n          let seed \u2190 liftM (generateSeed spec qb js)\n          let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n          let u \u2190 liftM ($\u1d57spec.range i)\n          _root_.guard ((seed i)[s + 1]? = some u)\n          pure (cf x\u2081)] =\n    1 -\n        \u2211 s : Fin q,\n          [=(some s, some s)|do\n            let seed \u2190 liftM (generateSeed spec (update qb i \u2191s) js)\n            let s\u2081 \u2190 cf <$> (simulateQ seededOracle main).run seed\n            let s\u2082 \u2190 cf <$> (simulateQ seededOracle main).run seed\n            pure (s\u2081, s\u2082)] +\n      \u2211 s : Fin q,\n        [=some s|do\n          let seed \u2190 liftM (generateSeed spec qb js)\n          let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n          let u \u2190 liftM ($\u1d57spec.range i)\n          _root_.guard ((seed i)[s + 1]? = some u)\n          pure (cf x\u2081)]",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/CryptoFoundations/Fork.lean#L111"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T00:43:30-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "ec354b343e48d7d797bcaa3b0db5d7796a531723eb32984bffa9f3c1fb5b0991"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 116,
        "start_column": 45,
        "end_line": 116,
        "end_column": 50,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := [fun x => x.isSome = true|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 -\n        \u2211 s : Fin q,\n          [=(some s, some s)|do\n            let seed \u2190 liftM (generateSeed spec (update qb i \u2191s) js)\n            let s\u2081 \u2190 cf <$> (simulateQ seededOracle main).run seed\n            let s\u2082 \u2190 cf <$> (simulateQ seededOracle main).run seed\n            pure (s\u2081, s\u2082)] +\n      \u2211 s : Fin q,\n        [=some s|do\n          let seed \u2190 liftM (generateSeed spec qb js)\n          let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n          let u \u2190 liftM ($\u1d57spec.range i)\n          _root_.guard ((seed i)[s + 1]? = some u)\n          pure (cf x\u2081)] =\n    1 -\n        \u2211 s : Fin q,\n          [=(some s, some s)|do\n            let seed \u2190 liftM (generateSeed spec (update qb i \u2191s) js)\n            let s\u2081 \u2190 cf <$> (simulateQ seededOracle main).run seed\n            let s\u2082 \u2190 cf <$> (simulateQ seededOracle main).run seed\n            pure (s\u2081, s\u2082)] +\n      acc / h",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/CryptoFoundations/Fork.lean#L116"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T00:43:30-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "a4b501638e87b66f07b0df93f45dd9b26afa1f5bc93d5d78325dd93edff8e7f5"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 117,
        "start_column": 37,
        "end_line": 117,
        "end_column": 42,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := [fun x => x.isSome = true|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 -\n        \u2211 s : Fin q,\n          [=(some s, some s)|do\n            let seed \u2190 liftM (generateSeed spec (update qb i \u2191s) js)\n            let s\u2081 \u2190 cf <$> (simulateQ seededOracle main).run seed\n            let s\u2082 \u2190 cf <$> (simulateQ seededOracle main).run seed\n            pure (s\u2081, s\u2082)] +\n      acc / h \u2264\n    1 - acc ^ 2 / \u2191q + acc / h",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/CryptoFoundations/Fork.lean#L117"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T00:43:30-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "d77e377ba83d0fc362f1eba05c5ae1b25cf96301be58186028651a9c5361a618"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 118,
        "start_column": 37,
        "end_line": 118,
        "end_column": 42,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := [fun x => x.isSome = true|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 - acc ^ 2 / \u2191q + acc / h = 1 - acc * (acc / \u2191q - h\u207b\u00b9)",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/CryptoFoundations/Fork.lean#L118"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T00:43:30-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "216b74bb85f42d074339d47df6efd16ae6c6a845addeb6130e233f1fdb536499"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 129,
        "start_column": 2,
        "end_line": 129,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nx\u2081 x\u2082 : \u03b1\nh : (x\u2081, x\u2082) \u2208 (main.fork' qb js i cf).support\n\u22a2 \u2203 log\u2081 log\u2082 s,\n    \u2203 (hcf\u2081 : s < log\u2081.countQ i) (hcf\u2081_1 : s < log\u2082.countQ i),\n      (cf x\u2081 = do\n          let a \u2190 some s\n          pure \u2191a) \u2227\n        (cf x\u2082 = do\n            let a \u2190 some s\n            pure \u2191a) \u2227\n          (log\u2081.getQ i)[s].1 = (log\u2082.getQ i)[s].1 \u2227\n            (log\u2081.getQ i)[s].2 \u2260 (log\u2082.getQ i)[s].2 \u2227\n              (x\u2081, log\u2081) \u2208 (simulateQ loggingOracle main).run.support \u2227\n                (x\u2082, log\u2082) \u2208 (simulateQ loggingOracle main).run.support",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/CryptoFoundations/Fork.lean#L129"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T00:43:30-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "60f38824a4d8001f6f6de1b29cbf4325e965ea1012055d1f75613a9083173511"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 66,
        "start_column": 2,
        "end_line": 66,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/SymmEncAlg.lean"
      },
      "debug_info": {
        "goal": "m : Type \u2192 Type v\nM K C : Type\ninst\u271d\u2075 : AlternativeMonad m\ninst\u271d\u2074 : LawfulAlternative m\ninst\u271d\u00b3 : Fintype M\ninst\u271d\u00b2 : Fintype K\ninst\u271d\u00b9 : Fintype C\nencAlg : SymmEncAlg m M K C\ninst\u271d : encAlg.Complete\nh1 : Fintype.card M = Fintype.card K\nh2 : Fintype.card K = Fintype.card C\n\u22a2 encAlg.perfectSecrecy \u2194\n    (\u2200 (k : K), [=k|encAlg.exec encAlg.keygen] = (\u2191(Fintype.card K))\u207b\u00b9) \u2227\n      \u2200 (m_1 : M) (c : m C), \u2203! k, k \u2208 support (encAlg.exec encAlg.keygen) \u2227 encAlg.encrypt k m_1 = c",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/CryptoFoundations/SymmEncAlg.lean#L66"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-30T21:02:37-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "31f785e1fe47963beae05ab635c981bedbb2aab007c9567e9c03e313bdade285"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 82,
        "start_column": 24,
        "end_line": 82,
        "end_column": 29,
        "file": "VCVio/CryptoFoundations/FiatShamir.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\n\u03c3 X W PC SC \u03a9 P : Type\np : X \u2192 W \u2192 Bool\ninst\u271d\u2075 : SelectableType X\ninst\u271d\u2074 : SelectableType W\ninst\u271d\u00b3 : DecidableEq PC\ninst\u271d\u00b2 : DecidableEq \u03a9\ninst\u271d\u00b9 : SelectableType \u03a9\nsigmaAlg : SigmaAlg ProbComp X W PC SC \u03a9 P p\nhr : GenerableRelation ProbComp X W p\nM : Type\ninst\u271d : DecidableEq M\n\u03b1\u271d : Type\n\u22a2 \u2200 (px : ProbComp \u03b1\u271d), (fun {\u03b1} comp => sigmaAlg.exec sorry) ((fun {\u03b1} => sorry) px) = px",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/CryptoFoundations/FiatShamir.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-14T20:07:47-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "16109630cfd490c068690f1f5632502451c8e954f470ac0eb7eafbe67099905d"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 79,
        "start_column": 2,
        "end_line": 79,
        "end_column": 7,
        "file": "VCVio/OracleComp/Coercions/SubSpec.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\n\u03c4 : Type v\nspec : OracleSpec \u03b9\nsuperSpec : OracleSpec \u03c4\n\u03b1 : Type w\nh : MonadLift spec.OracleQuery superSpec.OracleQuery\ninst\u271d\u2074 : spec.DecidableEq\ninst\u271d\u00b3 : superSpec.DecidableEq\ninst\u271d\u00b2 : superSpec.FiniteRange\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : Fintype \u03b1\nq : spec.OracleQuery \u03b1\n\u22a2 (liftM (MonadLift.monadLift q)).finSupport = Finset.univ",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/OracleComp/Coercions/SubSpec.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T02:16:38-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "fc9e06815c31d7875d4c3c9e8a1870bad0b48dd7bf2bb78e98d4713820d092d0"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 186,
        "start_column": 2,
        "end_line": 186,
        "end_column": 7,
        "file": "VCVio/OracleComp/Coercions/SubSpec.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\n\u03c4 : Type v\nspec : OracleSpec \u03b9\n\u03b1 : Type w\nsuperSpec : OracleSpec \u03c4\nh : MonadLift spec.OracleQuery superSpec.OracleQuery\noa : OracleComp spec \u03b1\n\u22a2 (simulateQ { impl := fun {\u03b1} => liftM } oa).neverFails \u2194 oa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/OracleComp/Coercions/SubSpec.lean#L186"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T02:16:38-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "7a8998340af5ecd5c22104f168948bab0a464b2155799ecbdff97d5cd2e57e52"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 69,
        "start_column": 53,
        "end_line": 69,
        "end_column": 58,
        "file": "VCVio/OracleComp/QueryTracking/CountingOracle.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\ninst\u271d : DecidableEq \u03b9\nspec : OracleSpec \u03b9\n\u03b1 : Type u\noa : OracleComp spec \u03b1\n\u22a2 \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (countingOracle.impl q).run.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/OracleComp/QueryTracking/CountingOracle.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T00:46:14-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "a1ce0a6c14f37872a33c6c2edc6642ef4cf3f40d829344d90db95874ed51947c"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 72,
        "start_column": 53,
        "end_line": 72,
        "end_column": 58,
        "file": "VCVio/OracleComp/QueryTracking/LoggingOracle.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type u\noa : OracleComp spec \u03b1\n\u22a2 \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (loggingOracle.impl q).run.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/OracleComp/QueryTracking/LoggingOracle.lean#L72"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T00:46:14-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "60dba264b3c88a63bce6b3a4b1e186ff3b392f89ddc2fd8493e941fcfe5e64ea"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 280,
        "start_column": 2,
        "end_line": 280,
        "end_column": 7,
        "file": "VCVio/OracleComp/Constructions/UniformSelect.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type\nh\u03b1 : SelectableType \u03b1\n\u22a2 neverFails ($\u1d57\u03b1)",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/OracleComp/Constructions/UniformSelect.lean#L280"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T00:46:14-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "74b9122a88b60f939d59515b4165780b3469b606d91a818055c15ade5f2977d6"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 76,
        "start_column": 2,
        "end_line": 76,
        "end_column": 7,
        "file": "VCVio/OracleComp/Constructions/GenerateSeed.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b9 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d : (i : \u03b9) \u2192 SelectableType (spec.range i)\nqc : \u03b9 \u2192 \u2115\nj : \u03b9\njs : List \u03b9\n\u22a2 (do\n      let x \u2190 replicate (qc j) ($\u1d57spec.range j)\n      forIn js (QuerySeed.addValues x fun x => []) fun j r =>\n          replicate (qc j) ($\u1d57spec.range j) >>= pure \u2218 fun a => ForInStep.yield (QuerySeed.addValues a r)) =\n    do\n    let _ \u2190 replicate (qc j) ($\u1d57spec.range j)\n    forIn js (fun x => []) fun j r =>\n        replicate (qc j) ($\u1d57spec.range j) >>= pure \u2218 fun a => ForInStep.yield (QuerySeed.addValues a r)",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/OracleComp/Constructions/GenerateSeed.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-01-16T01:24:48-06:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "a7706f75230b3ce96e182811e3dcefbc0615e0614056e2ed5598c860c150901c"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 85,
        "start_column": 2,
        "end_line": 85,
        "end_column": 7,
        "file": "VCVio/OracleComp/Constructions/GenerateSeed.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b9 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d : (i : \u03b9) \u2192 SelectableType (spec.range i)\nqc : \u03b9 \u2192 \u2115\njs : List \u03b9\n\u22a2 support (generateSeed spec qc js) = {seed | \u2200 (i : \u03b9), (seed i).length = qc i * List.count i js}",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/OracleComp/Constructions/GenerateSeed.lean#L85"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2024-12-05T21:45:03-06:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "f37ff3c30c4bc7970f0318a678fab20f3e1f2341a758ebaf5a33692b50f5bb50"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 128,
        "start_column": 4,
        "end_line": 128,
        "end_column": 9,
        "file": "VCVio/OracleComp/Constructions/GenerateSeed.lean"
      },
      "debug_info": {
        "goal": "case append_singleton\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b9 : (i : \u03b9) \u2192 SelectableType (spec.range i)\nqc : \u03b9 \u2192 \u2115\njs\u271d : List \u03b9\ninst\u271d : spec.FiniteRange\nj : List \u03b9\njs : \u03b9\nhjs :\n  \u2200 seed \u2208 support (generateSeed spec qc j),\n    [=seed|generateSeed spec qc j] = 1 / \u2191(List.map (fun j => Fintype.card (spec.range j) ^ qc j) j).prod\nseed : spec.QuerySeed\nhs : seed \u2208 support (generateSeed spec qc (j ++ [js]))\n\u22a2 [=seed|do\n      let a \u2190\n        foldlM\n            (fun b a =>\n              match b with\n              | ForInStep.yield b =>\n                (fun a_1 => ForInStep.yield (QuerySeed.addValues a_1 b)) <$> replicate (qc a) ($\u1d57spec.range a)\n              | ForInStep.done b => pure (ForInStep.done b))\n            (ForInStep.yield fun x => []) j\n      ForInStep.value <$>\n          match a with\n          | ForInStep.yield b =>\n            (fun a => ForInStep.yield (QuerySeed.addValues a b)) <$> replicate (qc js) ($\u1d57spec.range js)\n          | ForInStep.done b => pure (ForInStep.done b)] =\n    ((List.map (Nat.cast \u2218 fun j => Fintype.card (spec.range j) ^ qc j) j).prod *\n        \u2191(Fintype.card (spec.range js)) ^ qc js)\u207b\u00b9",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/OracleComp/Constructions/GenerateSeed.lean#L128"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-01-16T01:24:48-06:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "54aa929b183c666a0eb5d209ebd26a902455f057ff85c73ef1d23ca6ca534386"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 721,
        "start_column": 83,
        "end_line": 721,
        "end_column": 88,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\ns : \u211d\u22650\u221e\nh' : [\u22a5|oa] = s\nob : \u03b1 \u2192 OracleComp spec \u03b2\nr : \u211d\u22650\u221e\nhr : \u2200 x \u2208 oa.support, [\u22a5|ob x] \u2264 r\n\u22a2 [\u22a5|oa >>= ob] \u2264 s + (1 - s) * r",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/OracleComp/DistSemantics/EvalDist.lean#L721"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T00:57:39-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "9391c106025d43ea67728d1107264c2733f92729ae5485a8fe150db01b895f65"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 727,
        "start_column": 73,
        "end_line": 727,
        "end_column": 78,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\ns : \u211d\u22650\u221e\nh' : [\u22a5|oa] = s\nob : \u03b1 \u2192 OracleComp spec \u03b2\nr : \u211d\u22650\u221e\nhr : \u2200 x \u2208 oa.support, [\u22a5|ob x] \u2264 r\n\u22a2 [\u22a5|oa >>= ob] \u2264 s + r",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/OracleComp/DistSemantics/EvalDist.lean#L727"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T00:57:39-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "0a8a8a853822a8b9cb392b90c3f896fb989b5f3df8b2267a90c664894e8c9f62"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 732,
        "start_column": 69,
        "end_line": 732,
        "end_column": 74,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nh' : oa.neverFails\nob : \u03b1 \u2192 OracleComp spec \u03b2\nr : \u211d\u22650\u221e\nhr : \u2200 x \u2208 oa.support, [\u22a5|ob x] \u2264 r\n\u22a2 [\u22a5|oa >>= ob] \u2264 r",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/OracleComp/DistSemantics/EvalDist.lean#L732"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T00:57:39-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "6916e2ba715944ce0e07b700e82e8cd8054c528e37233bd0a151765d1b8d796c"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 736,
        "start_column": 59,
        "end_line": 736,
        "end_column": 64,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nh : oa.neverFails\nob : \u03b1 \u2192 OracleComp spec \u03b2\n\u22a2 [\u22a5|oa >>= ob] = \u2211' (x : \u03b1), [=x|oa] * [\u22a5|ob x]",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/OracleComp/DistSemantics/EvalDist.lean#L736"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T00:46:14-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "ac4e2f6c25c5ff1ff6d4ec4e1c39bb05c4995a32dda4cbedad9141babfc4e0d4"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 928,
        "start_column": 2,
        "end_line": 928,
        "end_column": 7,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\n\u22a2 [\u22a5|oa] = 0 \u2194 oa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/OracleComp/DistSemantics/EvalDist.lean#L928"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T00:46:14-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "a4de836e1379b32871668aa19268c2b340c77c05cfb828f5f8385e7c0d0408d8"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 936,
        "start_column": 2,
        "end_line": 936,
        "end_column": 7,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\n\u22a2 0 < [\u22a5|oa] \u2194 \u00acoa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/OracleComp/DistSemantics/EvalDist.lean#L936"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T00:46:14-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "f9eb787e6fbd21aecf9f07eb0d0ec572e7e91c38ae9e5ac6437febe10adb36e1"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 29,
        "start_column": 4,
        "end_line": 29,
        "end_column": 9,
        "file": "VCVio/OracleComp/DistSemantics/Alternative.lean"
      },
      "debug_info": {
        "goal": "case query_bind\n\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type v\nh\u271d : spec.FiniteRange\noa' : OracleComp spec \u03b1\ni : \u03b9\nt : spec.domain i\noa : spec.range i \u2192 OracleComp spec \u03b1\nh : \u2200 (u : spec.range i), (oa u <|> oa').evalDist = ((oa u).evalDist <|> oa'.evalDist)\n\u22a2 (liftM (OracleSpec.query i t) >>= oa <|> oa').evalDist =\n    ((liftM (OracleSpec.query i t) >>= oa).evalDist <|> oa'.evalDist)",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/OracleComp/DistSemantics/Alternative.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-30T21:02:37-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "1544f8115c9f1ebf63390bd1283461a89b6a25db7f185f07473b1f4f412e081d"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 52,
        "start_column": 2,
        "end_line": 52,
        "end_column": 7,
        "file": "VCVio/OracleComp/DistSemantics/Alternative.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type u\noa oa' : OracleComp spec \u03b1\ninst\u271d : Decidable oa.neverFails\n\u22a2 (oa <|> oa').support = if oa.neverFails then oa.support else oa.support \u222a oa'.support",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/OracleComp/DistSemantics/Alternative.lean#L52"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "596ea4f8758d7ec869167c182f9aa3b8ba65fbc662708fa99e867e2aee8ebaa7"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 170,
        "start_column": 8,
        "end_line": 170,
        "end_column": 13,
        "file": "VCVio/OracleComp/DistSemantics/List.lean"
      },
      "debug_info": {
        "goal": "case pos.append_singleton.cons\n\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type u_1\n\u03b2 : Type u_2\ninst\u271d\u00b9 : DecidableEq \u03b2\ninst\u271d : spec.FiniteRange\nf : \u03b1 \u2192 OracleComp spec \u03b2\nys zs : List \u03b2\nz : \u03b2\nh : take ys.length (zs ++ [z]) = ys.reverse\nx : \u03b1\nxs : List \u03b1\nhzs :\n  take ys.length zs = ys.reverse \u2192\n    [=drop ys.length zs|mapM.loop f (x :: xs) []] =\n      if zs.length = (x :: xs).length + ys.length then\n        (zipWith (fun x z => [=z|f x]) (x :: xs) (drop ys.length zs)).prod\n      else 0\n\u22a2 [=drop ys.length (zs ++ [z])|do\n      let __do_lift \u2190 f x\n      mapM.loop f xs [__do_lift]] =\n    if zs.length = xs.length + ys.length then\n      (zipWith (fun x z => [=z|f x]) (x :: xs) (drop ys.length (zs ++ [z]))).prod\n    else 0",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/OracleComp/DistSemantics/List.lean#L170"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-01-28T07:23:40-06:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "00709408bec203194b2189f2e3ac773e9d71f2171837f7ae1c82babe6e199bfa"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7,
        "file": "VCVio/OracleComp/SimSemantics/StateT.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nspec : OracleSpec \u03b9\n\u03c3 : Type u\ninst\u271d : Subsingleton \u03c3\n\u03b1 : Type u\nso : QueryImpl spec (StateT \u03c3 (OracleComp spec))\nh : \u2200 (\u03b1 : Type u) (q : spec.OracleQuery \u03b1) (s : \u03c3), (so.impl q).run' s = liftM q\noa : OracleComp spec \u03b1\ns : \u03c3\n\u22a2 (simulateQ so oa).run' s = oa",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/OracleComp/SimSemantics/StateT.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-30T21:02:37-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "ca9ec53816b9bcc9a853a9fbd28c4c7caf461e135a311c4fa4d48c482b5df18e"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 61,
        "start_column": 2,
        "end_line": 61,
        "end_column": 7,
        "file": "VCVio/OracleComp/SimSemantics/WriterT.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03c9 : Type u\ninst\u271d : Monoid \u03c9\nso : QueryImpl spec (WriterT \u03c9 (OracleComp spec))\nhso : \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (fst <$> (so.impl q).run).support = \u22a4\nhso' : \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (so.impl q).run.neverFails\noa : OracleComp spec \u03b1\n\u22a2 (simulateQ so oa).run.neverFails \u2194 oa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/VCVio/OracleComp/SimSemantics/WriterT.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T00:46:14-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "eb7a6036a5fab09ba4e71eca0edfa265a08f85e128115931202388b0c784f6f2"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "ccs",
        "commit": "e85827c08ff1a88c1008c70cffdad1e1c41e7fd4",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 94,
        "start_column": 39,
        "end_line": 94,
        "end_column": 44,
        "file": "ToMathlib/Control/WriterT.lean"
      },
      "debug_info": {
        "goal": "m : Type u \u2192 Type v\ninst\u271d\u00b3 : AlternativeMonad m\n\u03c9 \u03b1 \u03b2 \u03b3 : Type u\ninst\u271d\u00b2 : Monoid \u03c9\ninst\u271d\u00b9 : LawfulMonad m\ninst\u271d : LawfulAlternative m\n\u22a2 LawfulAlternative (WriterT \u03c9 m)",
        "url": "https://github.com/dtumad/VCV-io/blob/e85827c08ff1a88c1008c70cffdad1e1c41e7fd4/ToMathlib/Control/WriterT.lean#L94"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-30T21:02:37-05:00",
        "inclusion_date": "2025-04-17T03:20:50.415966+00:00"
      },
      "id": "407739b957055bca5381a762de114af6d244a06ab67416b70180a871bbe63b61"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 47,
        "start_column": 2,
        "end_line": 47,
        "end_column": 7,
        "file": "Examples/HHS_Elgamal.lean"
      },
      "debug_info": {
        "goal": "G P : Type\ninst\u271d\u2075 : SelectableType G\ninst\u271d\u2074 : SelectableType P\ninst\u271d\u00b3 : AddCommGroup G\ninst\u271d\u00b2 : Group P\ninst\u271d\u00b9 : AddTorsor G P\ninst\u271d : DecidableEq P\nthis : \u2200 (msg x : P) (g\u2081 g\u2082 : G), msg * (g\u2082 +\u1d65 g\u2081 +\u1d65 x) / (g\u2081 +\u1d65 g\u2082 +\u1d65 x) = msg\n\u22a2 neverFails do\n    let _ \u2190 $\u1d57P\n    let _ \u2190 $\u1d57G\n    (fun a => ()) <$> ($\u1d57G)",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/Examples/HHS_Elgamal.lean#L47"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T00:46:14-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "9df14e42c8bde81adac2bf3e0c23c9bac1d45218b4445219190051dd0e8e3b34"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 71,
        "start_column": 4,
        "end_line": 71,
        "end_column": 9,
        "file": "VCVio/OracleComp/Traversal.lean"
      },
      "debug_info": {
        "goal": "case query_bind\n\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type v\nQ : {\u03b1 : Type v} \u2192 spec.OracleQuery \u03b1 \u2192 Prop\nF : Prop\npossible_outputs : {\u03b1 : Type v} \u2192 spec.OracleQuery \u03b1 \u2192 Set \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\ni : \u03b9\nt : spec.domain i\noa : spec.range i \u2192 OracleComp spec \u03b1\nh :\n  \u2200 (u : spec.range i),\n    allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa u >>= ob) \u2194\n      allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa u) \u2227\n        \u2200 x \u2208 (oa u).supportWhen fun {\u03b1} => possible_outputs,\n          allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (ob x)\n\u22a2 (Q (query i t) \u2227\n      \u2200 x \u2208 possible_outputs (query i t),\n        allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa x) \u2227\n          \u2200 x_1 \u2208 OracleComp.construct (fun x => {x}) (fun {\u03b2} q oa f => \u22c3 u \u2208 possible_outputs q, f u) \u2205 (oa x),\n            allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (ob x_1)) \u2194\n    (Q (query i t) \u2227\n        \u2200 x \u2208 possible_outputs (query i t), allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa x)) \u2227\n      \u2200 (x : \u03b1),\n        \u2200 x_1 \u2208 possible_outputs (query i t),\n          x \u2208 OracleComp.construct (fun x => {x}) (fun {\u03b2} q oa f => \u22c3 u \u2208 possible_outputs q, f u) \u2205 (oa x_1) \u2192\n            allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (ob x)",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/OracleComp/Traversal.lean#L71"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-30T23:18:23-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "8295da17322be92434f9b960b4ab932742c2f71023c8b0530809975b158fb6f5"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 112,
        "start_column": 36,
        "end_line": 112,
        "end_column": 41,
        "file": "VCVio/OracleComp/Traversal.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type v\n\u03b9' : Type u_1\nspec' : OracleSpec \u03b9'\noa : OracleComp spec \u03b1\npossible_outputs : {\u03b1 : Type v} \u2192 spec.OracleQuery \u03b1 \u2192 Set \u03b1\nh : oa.neverFailsWhen fun {\u03b1} => possible_outputs\nso : QueryImpl spec (OracleComp spec')\nh' : \u2200 {\u03b1 : Type v} (q : spec.OracleQuery \u03b1), (so.impl q).support \u2286 possible_outputs q\nhso : \u2200 {\u03b1 : Type v} (q : spec.OracleQuery \u03b1), (so.impl q).neverFails\n\u22a2 (simulateQ so oa).neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/OracleComp/Traversal.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T02:16:38-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "ff17bde3e1a50c93519cc0a22aa854a035e557164b14cdf7f5f779717857f3c7"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 49,
        "start_column": 2,
        "end_line": 49,
        "end_column": 7,
        "file": "VCVio/OracleComp/QueryBound.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\ninst\u271d\u00b9 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\n\u03b1 : Type u\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\n\u22a2 (\u2200 (qc : spec.QueryCount) (x : \u03b1), (x, qc) \u2208 (simulateQ countingOracle oa).run.support \u2192 qc \u2264 qb) \u2194\n    \u2200 x \u2208 (snd <$> (simulateQ countingOracle oa).run <|> pure 0).support, x \u2264 qb",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/OracleComp/QueryBound.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T00:46:14-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "2e1929af89672efcf84871c0968730c2cbaca32109209119943b1430ad47d66b"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 29,
        "start_column": 2,
        "end_line": 29,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 \u03b2 \u03b3 : Type\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\noc : \u03b1 \u2192 OracleComp spec \u03b3\nh : \u2200 x \u2208 oa.support, [\u22a5|ob x] = [\u22a5|oc x]\n\u22a2 [\u22a5|oa >>= ob] = [\u22a5|oa >>= oc]",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/CryptoFoundations/Fork.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T00:43:30-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "15bf2a2e2ee033089e4b779525f7cc72be7a36e3dd0d1f3ba9fdd535e8acfdcd"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 34,
        "start_column": 2,
        "end_line": 34,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 \u03b2 \u03b3 : Type\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\noc : \u03b1 \u2192 OracleComp spec \u03b3\nh : \u2200 (x : \u03b1), [\u22a5|ob x] = [\u22a5|oc x]\n\u22a2 [\u22a5|oa >>= ob] = [\u22a5|oa >>= oc]",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/CryptoFoundations/Fork.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T00:43:30-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "23689ba51816695017f8df31cdc9261e422b4216a472560647141826315ab377"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 41,
        "start_column": 4,
        "end_line": 41,
        "end_column": 9,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 \u03b2 \u03b3 : Type\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\n\u03c3 : Type u_1\ns : Finset \u03c3\noc : \u03c3 \u2192 \u03b1 \u2192 OracleComp spec \u03b3\n\u22a2 [\u22a5|oa >>= ob] = \u2211 x \u2208 s, [\u22a5|oa >>= oc x]",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/CryptoFoundations/Fork.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T00:43:30-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "5a53659da7bb6c9d9fc48a8eb52d6417940d11fb2da5adc691254f215d2fa104"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 80,
        "start_column": 75,
        "end_line": 80,
        "end_column": 80,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Fin (qb i + 1)\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 [fun x =>\n      match x with\n      | (x\u2081, x\u2082) => cf x\u2081 = some s \u2227 cf x\u2082 = some s|main.fork' qb js i cf] =\n    [=(some s, some s)|Prod.map cf cf <$> main.fork' qb js i cf]",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/CryptoFoundations/Fork.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:03:48-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "2163c0749be1dbc66519593fad545744991ce5702c0b747452939d1430fdff9b"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 89,
        "start_column": 36,
        "end_line": 89,
        "end_column": 41,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Fin (qb i + 1)\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 [=(some s, some s)|Prod.map cf cf <$> main.fork' qb js i cf] =\n    [=(some s, some s)|do\n      let seed \u2190 liftM (generateSeed spec qb js)\n      let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n      let u \u2190 liftM ($\u1d57spec.range i)\n      _root_.guard ((seed i)[s + 1]? \u2260 some u)\n      let seed' : spec.QuerySeed := (seed.takeAtIndex i \u2191s).addValue i u\n      let x\u2082 \u2190 (simulateQ seededOracle main).run seed'\n      pure (cf x\u2081, cf x\u2082)]",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/CryptoFoundations/Fork.lean#L89"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T00:43:30-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "7ea0cee42fc0b4fe52cd93b0e04bdb8d990675730ab7155a3474f490c68a76c9"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 103,
        "start_column": 29,
        "end_line": 103,
        "end_column": 34,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Fin (qb i + 1)\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 [=(some s, some s)|do\n      let seed \u2190 liftM (generateSeed spec qb js)\n      let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n      let u \u2190 liftM ($\u1d57spec.range i)\n      _root_.guard ((seed i)[s + 1]? \u2260 some u)\n      let seed' : spec.QuerySeed := (seed.takeAtIndex i \u2191s).addValue i u\n      let x\u2082 \u2190 (simulateQ seededOracle main).run seed'\n      pure (cf x\u2081, cf x\u2082)] \u2265\n    [=(some s, some s)|do\n        let seed \u2190 liftM (generateSeed spec qb js)\n        let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n        let u \u2190 liftM ($\u1d57spec.range i)\n        let seed' : spec.QuerySeed := (seed.takeAtIndex i \u2191s).addValue i u\n        let x\u2082 \u2190 (simulateQ seededOracle main).run seed'\n        pure (cf x\u2081, cf x\u2082)] -\n      [=some s|do\n        let seed \u2190 liftM (generateSeed spec qb js)\n        let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n        let u \u2190 liftM ($\u1d57spec.range i)\n        _root_.guard ((seed i)[s + 1]? = some u)\n        pure (cf x\u2081)]",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/CryptoFoundations/Fork.lean#L103"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:03:48-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "e159459ccbb4ae0925c977ca116b50cbc5c057703083906da1f9a076f28d5262"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 113,
        "start_column": 33,
        "end_line": 113,
        "end_column": 38,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Fin (qb i + 1)\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 [=(some s, some s)|do\n        let seed \u2190 liftM (generateSeed spec qb js)\n        let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n        let u \u2190 liftM ($\u1d57spec.range i)\n        let seed' : spec.QuerySeed := (seed.takeAtIndex i \u2191s).addValue i u\n        let x\u2082 \u2190 (simulateQ seededOracle main).run seed'\n        pure (cf x\u2081, cf x\u2082)] -\n      [=some s|do\n        let seed \u2190 liftM (generateSeed spec qb js)\n        let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n        let u \u2190 liftM ($\u1d57spec.range i)\n        _root_.guard ((seed i)[s + 1]? = some u)\n        pure (cf x\u2081)] =\n    [=(some s, some s)|do\n        let shared_seed \u2190 liftM (generateSeed spec (update qb i q) js)\n        let x\u2081 \u2190 (simulateQ seededOracle main).run shared_seed\n        let x\u2082 \u2190 (simulateQ seededOracle main).run shared_seed\n        pure (cf x\u2081, cf x\u2082)] -\n      [=some s|do\n          let seed \u2190 liftM (generateSeed spec qb js)\n          let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n          pure (cf x\u2081)] /\n        h",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/CryptoFoundations/Fork.lean#L113"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:03:48-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "c2232a0aeec4c3874c67c498bf90e9fa2cb5da762941b901ca56752cb504998f"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 114,
        "start_column": 71,
        "end_line": 114,
        "end_column": 76,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Fin (qb i + 1)\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 [=(some s, some s)|do\n        let shared_seed \u2190 liftM (generateSeed spec (update qb i q) js)\n        let x\u2081 \u2190 (simulateQ seededOracle main).run shared_seed\n        let x\u2082 \u2190 (simulateQ seededOracle main).run shared_seed\n        pure (cf x\u2081, cf x\u2082)] -\n      [=some s|do\n          let seed \u2190 liftM (generateSeed spec qb js)\n          let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n          pure (cf x\u2081)] /\n        h \u2265\n    [=some s|cf <$> main] ^ 2 - [=some s|cf <$> main] / h",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/CryptoFoundations/Fork.lean#L114"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:03:48-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "5499ac775dddda877a043757a2936ac66da7e9a53b25c4f60567835b17a065b5"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 126,
        "start_column": 6,
        "end_line": 126,
        "end_column": 11,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := 1 - [=none|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 [\u22a5|main.fork' qb js i cf] = 1 - \u2211 s : Option (Fin (qb i + 1)), [=(s, s)|Prod.map cf cf <$> main.fork' qb js i cf]",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/CryptoFoundations/Fork.lean#L126"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:03:48-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "22b419343eb6135517862840a0305a6fdcb7fa3376cd98d891d39098c6c5821e"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 128,
        "start_column": 6,
        "end_line": 128,
        "end_column": 11,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := 1 - [=none|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 - \u2211 s : Option (Fin (qb i + 1)), [=(s, s)|Prod.map cf cf <$> main.fork' qb js i cf] \u2264\n    1 - \u2211 s : Option (Fin (qb i + 1)), ([=s|cf <$> main] ^ 2 - [=s|cf <$> main] / h)",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/CryptoFoundations/Fork.lean#L128"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:03:48-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "d8e321a58a2e440115a4845750f078d1717f16d2f8fe40adbfb927a87f1884f5"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 130,
        "start_column": 6,
        "end_line": 130,
        "end_column": 11,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := 1 - [=none|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 - \u2211 s : Option (Fin (qb i + 1)), ([=s|cf <$> main] ^ 2 - [=s|cf <$> main] / h) =\n    1 - \u2211 s : Option (Fin (qb i + 1)), [=s|cf <$> main] ^ 2 - \u2211 s : Option (Fin (qb i + 1)), [=s|cf <$> main] / h",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/CryptoFoundations/Fork.lean#L130"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:03:48-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "61c6b0705ce52086e19ae1d82500092cb0f6ccd337c57995e0f30bacdfa0514e"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 132,
        "start_column": 6,
        "end_line": 132,
        "end_column": 11,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := 1 - [=none|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 - \u2211 s : Option (Fin (qb i + 1)), [=s|cf <$> main] ^ 2 - \u2211 s : Option (Fin (qb i + 1)), [=s|cf <$> main] / h \u2264\n    1 - (\u2211 s : Option (Fin (qb i + 1)), [=s|cf <$> main]) ^ 2 / \u2191q -\n      (\u2211 s : Option (Fin (qb i + 1)), [=s|cf <$> main]) / h",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/CryptoFoundations/Fork.lean#L132"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:03:48-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "69c61439a2397b29f5e0377bc97c80036efec9fcc8f1c13a90a8dc658c04589e"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 134,
        "start_column": 6,
        "end_line": 134,
        "end_column": 11,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := 1 - [=none|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 - (\u2211 s : Option (Fin (qb i + 1)), [=s|cf <$> main]) ^ 2 / \u2191q -\n      (\u2211 s : Option (Fin (qb i + 1)), [=s|cf <$> main]) / h \u2264\n    1 - acc ^ 2 / \u2191q + acc / h",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/CryptoFoundations/Fork.lean#L134"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:03:48-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "c3f9486713a218213bac86b587278e75cd7ff9ac102241cdb8e0265534a3de6e"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 136,
        "start_column": 6,
        "end_line": 136,
        "end_column": 11,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := 1 - [=none|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 - acc ^ 2 / \u2191q + acc / h = 1 - acc * (acc / \u2191q - h\u207b\u00b9)",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/CryptoFoundations/Fork.lean#L136"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:03:48-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "82d9f39adf79f6517c8430d6c091e4bb746a41c078755904b5cad1d0b309f82f"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 147,
        "start_column": 2,
        "end_line": 147,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nx\u2081 x\u2082 : \u03b1\nh : (x\u2081, x\u2082) \u2208 (main.fork' qb js i cf).support\n\u22a2 \u2203 s,\n    cf x\u2081 = some s \u2227\n      cf x\u2082 = some s \u2227\n        \u2203 log\u2081,\n          \u2203 (hcf\u2081 : \u2191s < log\u2081.countQ i),\n            \u2203 log\u2082,\n              \u2203 (hcf\u2081_1 : \u2191s < log\u2082.countQ i),\n                (log\u2081.getQ i)[s].1 = (log\u2082.getQ i)[s].1 \u2227\n                  (log\u2081.getQ i)[s].2 \u2260 (log\u2082.getQ i)[s].2 \u2227\n                    (x\u2081, log\u2081) \u2208 (simulateQ loggingOracle main).run.support \u2227\n                      (x\u2082, log\u2082) \u2208 (simulateQ loggingOracle main).run.support",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/CryptoFoundations/Fork.lean#L147"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T00:43:30-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "cf59ad25c89311aadac59ccc51944e19caf12ce284c55cc5bc06d2ffae6dbfe9"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 66,
        "start_column": 2,
        "end_line": 66,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/SymmEncAlg.lean"
      },
      "debug_info": {
        "goal": "m : Type \u2192 Type v\nM K C : Type\ninst\u271d\u2075 : AlternativeMonad m\ninst\u271d\u2074 : LawfulAlternative m\ninst\u271d\u00b3 : Fintype M\ninst\u271d\u00b2 : Fintype K\ninst\u271d\u00b9 : Fintype C\nencAlg : SymmEncAlg m M K C\ninst\u271d : encAlg.Complete\nh1 : Fintype.card M = Fintype.card K\nh2 : Fintype.card K = Fintype.card C\n\u22a2 encAlg.perfectSecrecy \u2194\n    (\u2200 (k : K), [=k|encAlg.exec encAlg.keygen] = (\u2191(Fintype.card K))\u207b\u00b9) \u2227\n      \u2200 (m_1 : M) (c : m C), \u2203! k, k \u2208 support (encAlg.exec encAlg.keygen) \u2227 encAlg.encrypt k m_1 = c",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/CryptoFoundations/SymmEncAlg.lean#L66"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-30T21:02:37-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "7093017ff19e69748b912112df3f83315baaffdec371507e42aee3b5d5f68e9e"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 79,
        "start_column": 29,
        "end_line": 79,
        "end_column": 34,
        "file": "VCVio/CryptoFoundations/FiatShamir.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\n\u03c3 X W PC SC \u03a9 P : Type\np : X \u2192 W \u2192 Bool\ninst\u271d\u2075 : SelectableType X\ninst\u271d\u2074 : SelectableType W\ninst\u271d\u00b3 : DecidableEq PC\ninst\u271d\u00b2 : DecidableEq \u03a9\ninst\u271d\u00b9 : SelectableType \u03a9\nsigmaAlg : SigmaAlg X W PC SC \u03a9 P p\nhr : GenerableRelation X W p\nM : Type\ninst\u271d : DecidableEq M\n\u03b1\u271d : Type\nc : ProbComp \u03b1\u271d\n\u22a2 (fun {\u03b1} comp =>\n        let so := idOracle ++\u209b\u2092 randomOracle;\n        (simulateQ so comp).run' \u2205)\n      ((fun {\u03b1} => monadLift) c) =\n    c",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/CryptoFoundations/FiatShamir.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:03:48-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "91054944e47c80e4de0995e95f73265eea24ff69a5d1df04917e78bddd186805"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 79,
        "start_column": 2,
        "end_line": 79,
        "end_column": 7,
        "file": "VCVio/OracleComp/Coercions/SubSpec.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\n\u03c4 : Type v\nspec : OracleSpec \u03b9\nsuperSpec : OracleSpec \u03c4\n\u03b1 : Type w\nh : MonadLift spec.OracleQuery superSpec.OracleQuery\ninst\u271d\u2074 : spec.DecidableEq\ninst\u271d\u00b3 : superSpec.DecidableEq\ninst\u271d\u00b2 : superSpec.FiniteRange\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : Fintype \u03b1\nq : spec.OracleQuery \u03b1\n\u22a2 (liftM (MonadLift.monadLift q)).finSupport = Finset.univ",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/OracleComp/Coercions/SubSpec.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T02:16:38-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "ef0d935b5f75a09aac0086cdea943aa7fe789a73c84d66a89c6c9826737f7ffe"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 186,
        "start_column": 2,
        "end_line": 186,
        "end_column": 7,
        "file": "VCVio/OracleComp/Coercions/SubSpec.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\n\u03c4 : Type v\nspec : OracleSpec \u03b9\n\u03b1 : Type w\nsuperSpec : OracleSpec \u03c4\nh : MonadLift spec.OracleQuery superSpec.OracleQuery\noa : OracleComp spec \u03b1\n\u22a2 (simulateQ { impl := fun {\u03b1} => liftM } oa).neverFails \u2194 oa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/OracleComp/Coercions/SubSpec.lean#L186"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T02:16:38-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "5d85ff7ab0495f6aa4b6bf1bf1374a8d1c9283647dca72eb3c525065100fc9f8"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 69,
        "start_column": 53,
        "end_line": 69,
        "end_column": 58,
        "file": "VCVio/OracleComp/QueryTracking/CountingOracle.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\ninst\u271d : DecidableEq \u03b9\nspec : OracleSpec \u03b9\n\u03b1 : Type u\noa : OracleComp spec \u03b1\n\u22a2 \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (countingOracle.impl q).run.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/OracleComp/QueryTracking/CountingOracle.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T00:46:14-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "1a0eda109100eb6f7de4f9714bf2ecd51733a62a9090bd122c9babc6d51bef79"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 72,
        "start_column": 53,
        "end_line": 72,
        "end_column": 58,
        "file": "VCVio/OracleComp/QueryTracking/LoggingOracle.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type u\noa : OracleComp spec \u03b1\n\u22a2 \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (loggingOracle.impl q).run.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/OracleComp/QueryTracking/LoggingOracle.lean#L72"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T00:46:14-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "80c446fadf8626435415555af1a459da0df428b1e17963f9014d031aeacefb2b"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 280,
        "start_column": 2,
        "end_line": 280,
        "end_column": 7,
        "file": "VCVio/OracleComp/Constructions/UniformSelect.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type\nh\u03b1 : SelectableType \u03b1\n\u22a2 neverFails ($\u1d57\u03b1)",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/OracleComp/Constructions/UniformSelect.lean#L280"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T00:46:14-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "3af3c672fbc685b54d602e1b43fff665d04f9cc9a1c5ab61e16010836970e58f"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 76,
        "start_column": 2,
        "end_line": 76,
        "end_column": 7,
        "file": "VCVio/OracleComp/Constructions/GenerateSeed.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b9 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d : (i : \u03b9) \u2192 SelectableType (spec.range i)\nqc : \u03b9 \u2192 \u2115\nj : \u03b9\njs : List \u03b9\n\u22a2 (do\n      let x \u2190 replicate (qc j) ($\u1d57spec.range j)\n      forIn js (QuerySeed.addValues x fun x => []) fun j r =>\n          replicate (qc j) ($\u1d57spec.range j) >>= pure \u2218 fun a => ForInStep.yield (QuerySeed.addValues a r)) =\n    do\n    let _ \u2190 replicate (qc j) ($\u1d57spec.range j)\n    forIn js (fun x => []) fun j r =>\n        replicate (qc j) ($\u1d57spec.range j) >>= pure \u2218 fun a => ForInStep.yield (QuerySeed.addValues a r)",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/OracleComp/Constructions/GenerateSeed.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-01-16T01:24:48-06:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "8f7bbfc8bf3f21c1102f33993479c2ac5a9f88004058071d353623defb7e02df"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 85,
        "start_column": 2,
        "end_line": 85,
        "end_column": 7,
        "file": "VCVio/OracleComp/Constructions/GenerateSeed.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b9 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d : (i : \u03b9) \u2192 SelectableType (spec.range i)\nqc : \u03b9 \u2192 \u2115\njs : List \u03b9\n\u22a2 support (generateSeed spec qc js) = {seed | \u2200 (i : \u03b9), (seed i).length = qc i * List.count i js}",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/OracleComp/Constructions/GenerateSeed.lean#L85"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2024-12-05T21:45:03-06:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "7f57fa0524cdeeaa9e876ce08423091343aec773fefd1323971f7ecad87dd178"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 128,
        "start_column": 4,
        "end_line": 128,
        "end_column": 9,
        "file": "VCVio/OracleComp/Constructions/GenerateSeed.lean"
      },
      "debug_info": {
        "goal": "case append_singleton\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b9 : (i : \u03b9) \u2192 SelectableType (spec.range i)\nqc : \u03b9 \u2192 \u2115\njs\u271d : List \u03b9\ninst\u271d : spec.FiniteRange\nj : List \u03b9\njs : \u03b9\nhjs :\n  \u2200 seed \u2208 support (generateSeed spec qc j),\n    [=seed|generateSeed spec qc j] = 1 / \u2191(List.map (fun j => Fintype.card (spec.range j) ^ qc j) j).prod\nseed : spec.QuerySeed\nhs : seed \u2208 support (generateSeed spec qc (j ++ [js]))\n\u22a2 [=seed|do\n      let a \u2190\n        foldlM\n            (fun b a =>\n              match b with\n              | ForInStep.yield b =>\n                (fun a_1 => ForInStep.yield (QuerySeed.addValues a_1 b)) <$> replicate (qc a) ($\u1d57spec.range a)\n              | ForInStep.done b => pure (ForInStep.done b))\n            (ForInStep.yield fun x => []) j\n      ForInStep.value <$>\n          match a with\n          | ForInStep.yield b =>\n            (fun a => ForInStep.yield (QuerySeed.addValues a b)) <$> replicate (qc js) ($\u1d57spec.range js)\n          | ForInStep.done b => pure (ForInStep.done b)] =\n    ((List.map (Nat.cast \u2218 fun j => Fintype.card (spec.range j) ^ qc j) j).prod *\n        \u2191(Fintype.card (spec.range js)) ^ qc js)\u207b\u00b9",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/OracleComp/Constructions/GenerateSeed.lean#L128"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-01-16T01:24:48-06:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "518a5926b8c107f36aacdb2feb1825098a4bfd838cfa826b9a1d61036565174f"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 721,
        "start_column": 83,
        "end_line": 721,
        "end_column": 88,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\ns : \u211d\u22650\u221e\nh' : [\u22a5|oa] = s\nob : \u03b1 \u2192 OracleComp spec \u03b2\nr : \u211d\u22650\u221e\nhr : \u2200 x \u2208 oa.support, [\u22a5|ob x] \u2264 r\n\u22a2 [\u22a5|oa >>= ob] \u2264 s + (1 - s) * r",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/OracleComp/DistSemantics/EvalDist.lean#L721"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T00:57:39-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "f4dc0430e17418696156574aafffa9f7e459f47a074e5e23dc5c8926f6c93dc6"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 727,
        "start_column": 73,
        "end_line": 727,
        "end_column": 78,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\ns : \u211d\u22650\u221e\nh' : [\u22a5|oa] = s\nob : \u03b1 \u2192 OracleComp spec \u03b2\nr : \u211d\u22650\u221e\nhr : \u2200 x \u2208 oa.support, [\u22a5|ob x] \u2264 r\n\u22a2 [\u22a5|oa >>= ob] \u2264 s + r",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/OracleComp/DistSemantics/EvalDist.lean#L727"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T00:57:39-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "6d12f375ad30fe4adae24f5522eb23aba4f4a62c25e9e90443bef27e8167e489"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 732,
        "start_column": 69,
        "end_line": 732,
        "end_column": 74,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nh' : oa.neverFails\nob : \u03b1 \u2192 OracleComp spec \u03b2\nr : \u211d\u22650\u221e\nhr : \u2200 x \u2208 oa.support, [\u22a5|ob x] \u2264 r\n\u22a2 [\u22a5|oa >>= ob] \u2264 r",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/OracleComp/DistSemantics/EvalDist.lean#L732"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T00:57:39-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "7c9a8bf99163e1ef8f43b39e91d5aeecb7b3132f033f4c84f46b27c9bc2fb75a"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 736,
        "start_column": 59,
        "end_line": 736,
        "end_column": 64,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nh : oa.neverFails\nob : \u03b1 \u2192 OracleComp spec \u03b2\n\u22a2 [\u22a5|oa >>= ob] = \u2211' (x : \u03b1), [=x|oa] * [\u22a5|ob x]",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/OracleComp/DistSemantics/EvalDist.lean#L736"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T00:46:14-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "bf2cba8ced9a491bf21df5b5d7989c4e0e5e97791fbc062445bcfbc0207bd7dc"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 928,
        "start_column": 2,
        "end_line": 928,
        "end_column": 7,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\n\u22a2 [\u22a5|oa] = 0 \u2194 oa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/OracleComp/DistSemantics/EvalDist.lean#L928"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T00:46:14-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "9f2b208b6576b1cd6d70a9477c3c803a75b93465f3f282b8e781210349abd70b"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 936,
        "start_column": 2,
        "end_line": 936,
        "end_column": 7,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\n\u22a2 0 < [\u22a5|oa] \u2194 \u00acoa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/OracleComp/DistSemantics/EvalDist.lean#L936"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T00:46:14-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "973d4e98a4882216771308911bc995df4de28e9c9a01dd1613f5921301a77149"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 29,
        "start_column": 4,
        "end_line": 29,
        "end_column": 9,
        "file": "VCVio/OracleComp/DistSemantics/Alternative.lean"
      },
      "debug_info": {
        "goal": "case query_bind\n\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type v\nh\u271d : spec.FiniteRange\noa' : OracleComp spec \u03b1\ni : \u03b9\nt : spec.domain i\noa : spec.range i \u2192 OracleComp spec \u03b1\nh : \u2200 (u : spec.range i), (oa u <|> oa').evalDist = ((oa u).evalDist <|> oa'.evalDist)\n\u22a2 (liftM (OracleSpec.query i t) >>= oa <|> oa').evalDist =\n    ((liftM (OracleSpec.query i t) >>= oa).evalDist <|> oa'.evalDist)",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/OracleComp/DistSemantics/Alternative.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-30T21:02:37-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "fe0f6f2f1676be236631bee5f16c828fe997be7c5e99cacd9fa833d62fab3fc9"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 52,
        "start_column": 2,
        "end_line": 52,
        "end_column": 7,
        "file": "VCVio/OracleComp/DistSemantics/Alternative.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type u\noa oa' : OracleComp spec \u03b1\ninst\u271d : Decidable oa.neverFails\n\u22a2 (oa <|> oa').support = if oa.neverFails then oa.support else oa.support \u222a oa'.support",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/OracleComp/DistSemantics/Alternative.lean#L52"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "f57560d6ed430e7ca4c6df1830c08fe2d30fde88fc7adf860c7d38e6d3b76390"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 170,
        "start_column": 8,
        "end_line": 170,
        "end_column": 13,
        "file": "VCVio/OracleComp/DistSemantics/List.lean"
      },
      "debug_info": {
        "goal": "case pos.append_singleton.cons\n\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type u_1\n\u03b2 : Type u_2\ninst\u271d\u00b9 : DecidableEq \u03b2\ninst\u271d : spec.FiniteRange\nf : \u03b1 \u2192 OracleComp spec \u03b2\nys zs : List \u03b2\nz : \u03b2\nh : take ys.length (zs ++ [z]) = ys.reverse\nx : \u03b1\nxs : List \u03b1\nhzs :\n  take ys.length zs = ys.reverse \u2192\n    [=drop ys.length zs|mapM.loop f (x :: xs) []] =\n      if zs.length = (x :: xs).length + ys.length then\n        (zipWith (fun x z => [=z|f x]) (x :: xs) (drop ys.length zs)).prod\n      else 0\n\u22a2 [=drop ys.length (zs ++ [z])|do\n      let __do_lift \u2190 f x\n      mapM.loop f xs [__do_lift]] =\n    if zs.length = xs.length + ys.length then\n      (zipWith (fun x z => [=z|f x]) (x :: xs) (drop ys.length (zs ++ [z]))).prod\n    else 0",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/OracleComp/DistSemantics/List.lean#L170"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-01-28T07:23:40-06:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "a194b438a8dac43c82dfc2a114d9e7af2a6aee1f3714dc5e481b177e429a85e8"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7,
        "file": "VCVio/OracleComp/SimSemantics/StateT.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nspec : OracleSpec \u03b9\n\u03c3 : Type u\ninst\u271d : Subsingleton \u03c3\n\u03b1 : Type u\nso : QueryImpl spec (StateT \u03c3 (OracleComp spec))\nh : \u2200 (\u03b1 : Type u) (q : spec.OracleQuery \u03b1) (s : \u03c3), (so.impl q).run' s = liftM q\noa : OracleComp spec \u03b1\ns : \u03c3\n\u22a2 (simulateQ so oa).run' s = oa",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/OracleComp/SimSemantics/StateT.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-30T21:02:37-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "3f274c96e6f5597b4d37daf00b8446af4e86d0536ca376728dfef91dba2b1876"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 61,
        "start_column": 2,
        "end_line": 61,
        "end_column": 7,
        "file": "VCVio/OracleComp/SimSemantics/WriterT.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03c9 : Type u\ninst\u271d : Monoid \u03c9\nso : QueryImpl spec (WriterT \u03c9 (OracleComp spec))\nhso : \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (fst <$> (so.impl q).run).support = \u22a4\nhso' : \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (so.impl q).run.neverFails\noa : OracleComp spec \u03b1\n\u22a2 (simulateQ so oa).run.neverFails \u2194 oa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/VCVio/OracleComp/SimSemantics/WriterT.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-03T00:46:14-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "3bc6051ab936c9eef448b5c0c02458f1a58255efcc052d992c6e628f8661dd25"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "exd",
        "commit": "102c6650fbe662a2284589f6217a2e4fac717e59",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 94,
        "start_column": 39,
        "end_line": 94,
        "end_column": 44,
        "file": "ToMathlib/Control/WriterT.lean"
      },
      "debug_info": {
        "goal": "m : Type u \u2192 Type v\ninst\u271d\u00b3 : AlternativeMonad m\n\u03c9 \u03b1 \u03b2 \u03b3 : Type u\ninst\u271d\u00b2 : Monoid \u03c9\ninst\u271d\u00b9 : LawfulMonad m\ninst\u271d : LawfulAlternative m\n\u22a2 LawfulAlternative (WriterT \u03c9 m)",
        "url": "https://github.com/dtumad/VCV-io/blob/102c6650fbe662a2284589f6217a2e4fac717e59/ToMathlib/Control/WriterT.lean#L94"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-30T21:02:37-05:00",
        "inclusion_date": "2025-04-17T03:25:48.754666+00:00"
      },
      "id": "96432892e7a1fb1e80ff9c3caeb959142d85db2208c42749c55083a5fd5ee620"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 223,
        "start_column": 2,
        "end_line": 223,
        "end_column": 7,
        "file": "Examples/FrankingProtocol.lean"
      },
      "debug_info": {
        "goal": "bv : BitVec 256\n\u22a2 String.foldl (fun acc c => acc <<< 8 + BitVec.ofNat 256 c.toNat) 0#256\n      { data := bitvec_to_string.chars bv.toNat [] } =\n    bv",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/Examples/FrankingProtocol.lean#L223"
      },
      "metadata": {
        "blame_email_hash": "f78b4540360d",
        "blame_date": "2025-02-05T21:14:45-06:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "239fc86013b7936bc21c89a17e7191fe8113a1d21ca203c480389850f1d5ce13"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 257,
        "start_column": 2,
        "end_line": 257,
        "end_column": 7,
        "file": "Examples/FrankingProtocol.lean"
      },
      "debug_info": {
        "goal": "message_content : String\n\u22a2 (do\n        let x \u2190 $\u1d57BitVec 256\n        let x_1 \u2190\n          if\n                mock_hmac_sha256 x\n                    (serialize_message_data\n                        (deserialize_message_data ((serialize_message_data message_content x).1, x)).1 x).1 =\n                  mock_hmac_sha256 x (serialize_message_data message_content x).1 then\n              pure\n                (some\n                  { content := (deserialize_message_data ((serialize_message_data message_content x).1, x)).1,\n                    nonce := x })\n            else pure none\n        let maybeData \u2190\n          match x_1 with\n            | none => pure none\n            | some verified_msg =>\n              pure\n                (some\n                  { verified_msg := verified_msg,\n                    message_package :=\n                      {\n                        encrypted_message :=\n                          { ciphertext := mock_encrypt (serialize_message_data message_content x).1 },\n                        franking_tag := { tag := mock_hmac_sha256 x (serialize_message_data message_content x).1 },\n                        reporting_tag :=\n                          {\n                            tag :=\n                              mock_hmac_sha256 (123456789#256)\n                                (string_to_bitvec\n                                  (String.append (mock_hmac_sha256 x (serialize_message_data message_content x).1)\n                                    (bitvec_to_string 1730230302#256))) },\n                        context :=\n                          { sender_id := 1001#256, recipient_id := 1002#256, timestamp := 1730230302,\n                            message_id := 123 },\n                        nonce := x },\n                    facebook_key := 123456789#256 })\n        match maybeData with\n          | none => pure false\n          | some data =>\n            pure\n              (decide\n                  (mock_hmac_sha256 data.verified_msg.nonce\n                      (serialize_message_data data.verified_msg.content data.verified_msg.nonce).1 =\n                    data.message_package.franking_tag.tag) &&\n                decide\n                  (mock_hmac_sha256 data.facebook_key\n                      (string_to_bitvec\n                        (String.append data.message_package.franking_tag.tag\n                          (bitvec_to_string (BitVec.ofNat 256 data.message_package.context.timestamp)))) =\n                    data.message_package.reporting_tag.tag))).neverFails \u2227\n    (\u2200 (x : BitVec 256),\n        false \u2209\n          (do\n              let x_1 \u2190\n                if\n                      mock_hmac_sha256 x\n                          (serialize_message_data\n                              (deserialize_message_data ((serialize_message_data message_content x).1, x)).1 x).1 =\n                        mock_hmac_sha256 x (serialize_message_data message_content x).1 then\n                    pure\n                      (some\n                        { content := (deserialize_message_data ((serialize_message_data message_content x).1, x)).1,\n                          nonce := x })\n                  else pure none\n              let maybeData \u2190\n                match x_1 with\n                  | none => pure none\n                  | some verified_msg =>\n                    pure\n                      (some\n                        { verified_msg := verified_msg,\n                          message_package :=\n                            {\n                              encrypted_message :=\n                                { ciphertext := mock_encrypt (serialize_message_data message_content x).1 },\n                              franking_tag :=\n                                { tag := mock_hmac_sha256 x (serialize_message_data message_content x).1 },\n                              reporting_tag :=\n                                {\n                                  tag :=\n                                    mock_hmac_sha256 (123456789#256)\n                                      (string_to_bitvec\n                                        (String.append (mock_hmac_sha256 x (serialize_message_data message_content x).1)\n                                          (bitvec_to_string 1730230302#256))) },\n                              context :=\n                                { sender_id := 1001#256, recipient_id := 1002#256, timestamp := 1730230302,\n                                  message_id := 123 },\n                              nonce := x },\n                          facebook_key := 123456789#256 })\n              match maybeData with\n                | none => pure false\n                | some data =>\n                  pure\n                    (decide\n                        (mock_hmac_sha256 data.verified_msg.nonce\n                            (serialize_message_data data.verified_msg.content data.verified_msg.nonce).1 =\n                          data.message_package.franking_tag.tag) &&\n                      decide\n                        (mock_hmac_sha256 data.facebook_key\n                            (string_to_bitvec\n                              (String.append data.message_package.franking_tag.tag\n                                (bitvec_to_string (BitVec.ofNat 256 data.message_package.context.timestamp)))) =\n                          data.message_package.reporting_tag.tag))).finSupport) \u2227\n      \u2203 a,\n        true \u2208\n          (do\n              let x \u2190\n                if\n                      mock_hmac_sha256 a\n                          (serialize_message_data\n                              (deserialize_message_data ((serialize_message_data message_content a).1, a)).1 a).1 =\n                        mock_hmac_sha256 a (serialize_message_data message_content a).1 then\n                    pure\n                      (some\n                        { content := (deserialize_message_data ((serialize_message_data message_content a).1, a)).1,\n                          nonce := a })\n                  else pure none\n              let maybeData \u2190\n                match x with\n                  | none => pure none\n                  | some verified_msg =>\n                    pure\n                      (some\n                        { verified_msg := verified_msg,\n                          message_package :=\n                            {\n                              encrypted_message :=\n                                { ciphertext := mock_encrypt (serialize_message_data message_content a).1 },\n                              franking_tag :=\n                                { tag := mock_hmac_sha256 a (serialize_message_data message_content a).1 },\n                              reporting_tag :=\n                                {\n                                  tag :=\n                                    mock_hmac_sha256 (123456789#256)\n                                      (string_to_bitvec\n                                        (String.append (mock_hmac_sha256 a (serialize_message_data message_content a).1)\n                                          (bitvec_to_string 1730230302#256))) },\n                              context :=\n                                { sender_id := 1001#256, recipient_id := 1002#256, timestamp := 1730230302,\n                                  message_id := 123 },\n                              nonce := a },\n                          facebook_key := 123456789#256 })\n              match maybeData with\n                | none => pure false\n                | some data =>\n                  pure\n                    (decide\n                        (mock_hmac_sha256 data.verified_msg.nonce\n                            (serialize_message_data data.verified_msg.content data.verified_msg.nonce).1 =\n                          data.message_package.franking_tag.tag) &&\n                      decide\n                        (mock_hmac_sha256 data.facebook_key\n                            (string_to_bitvec\n                              (String.append data.message_package.franking_tag.tag\n                                (bitvec_to_string (BitVec.ofNat 256 data.message_package.context.timestamp)))) =\n                          data.message_package.reporting_tag.tag))).finSupport",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/Examples/FrankingProtocol.lean#L257"
      },
      "metadata": {
        "blame_email_hash": "f78b4540360d",
        "blame_date": "2025-02-05T21:14:45-06:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "7e4f08cc968ba803e99aaec342bbe3819a92cafd1a076d6bc99245d187c7d472"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 269,
        "start_column": 2,
        "end_line": 269,
        "end_column": 7,
        "file": "Examples/FrankingProtocol.lean"
      },
      "debug_info": {
        "goal": "message_content : String\n\u22a2 (do\n      let x \u2190 $\u1d57BitVec 256\n      let x_1 \u2190\n        if\n              mock_hmac_sha256 x\n                  (serialize_message_data (deserialize_message_data ((serialize_message_data message_content x).1, x)).1\n                      x).1 =\n                mock_hmac_sha256 x (serialize_message_data message_content x).1 then\n            pure\n              (some\n                { content := (deserialize_message_data ((serialize_message_data message_content x).1, x)).1,\n                  nonce := x })\n          else pure none\n      let maybeData \u2190\n        match x_1 with\n          | none => pure none\n          | some verified_msg =>\n            pure\n              (some\n                { verified_msg := verified_msg,\n                  message_package :=\n                    { encrypted_message := { ciphertext := mock_encrypt (serialize_message_data message_content x).1 },\n                      franking_tag := { tag := mock_hmac_sha256 x (serialize_message_data message_content x).1 },\n                      reporting_tag :=\n                        {\n                          tag :=\n                            mock_hmac_sha256 (123456789#256)\n                              (string_to_bitvec\n                                (String.append (mock_hmac_sha256 x (serialize_message_data message_content x).1)\n                                  (bitvec_to_string 1730230302#256))) },\n                      context :=\n                        { sender_id := 1001#256, recipient_id := 1002#256, timestamp := 1730230302, message_id := 123 },\n                      nonce := x },\n                  facebook_key := 123456789#256 })\n      match maybeData with\n        | none => pure true\n        | some val => pure false).neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/Examples/FrankingProtocol.lean#L269"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-09T11:17:26-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "39fb33144f14ad4c246562db576360bc9652d349b87de4281d56a85440c8858c"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 290,
        "start_column": 2,
        "end_line": 290,
        "end_column": 7,
        "file": "Examples/FrankingProtocol.lean"
      },
      "debug_info": {
        "goal": "facebook_key : BitVec 256\nmessage_content : String\ncontext : Context\n\u22a2 (do\n      let nonce \u2190 $\u1d57BitVec 256\n      if\n            mock_hmac_sha256 nonce\n                (serialize_message_data\n                    (deserialize_message_data ((serialize_message_data message_content nonce).1, nonce)).1 nonce).1 =\n              mock_hmac_sha256 nonce (serialize_message_data message_content nonce).1 then\n          pure\n            (some\n              { content := (deserialize_message_data ((serialize_message_data message_content nonce).1, nonce)).1,\n                nonce := nonce })\n        else pure none).neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/Examples/FrankingProtocol.lean#L290"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-09T11:17:26-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "6b5b2094b620330c9a682f665fe00fb31b6131b2868616b2c4b9145723023e7e"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 47,
        "start_column": 2,
        "end_line": 47,
        "end_column": 7,
        "file": "Examples/HHS_Elgamal.lean"
      },
      "debug_info": {
        "goal": "G P : Type\ninst\u271d\u2075 : SelectableType G\ninst\u271d\u2074 : SelectableType P\ninst\u271d\u00b3 : AddCommGroup G\ninst\u271d\u00b2 : Group P\ninst\u271d\u00b9 : AddTorsor G P\ninst\u271d : DecidableEq P\nthis : \u2200 (msg x : P) (g\u2081 g\u2082 : G), msg * (g\u2082 +\u1d65 g\u2081 +\u1d65 x) / (g\u2081 +\u1d65 g\u2082 +\u1d65 x) = msg\n\u22a2 neverFails do\n    let _ \u2190 $\u1d57P\n    let _ \u2190 $\u1d57G\n    (fun a => ()) <$> ($\u1d57G)",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/Examples/HHS_Elgamal.lean#L47"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "9237f16499fa3c25f7f4674b80d8982ee2b23e00a882e3f40765451057df9b85"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 71,
        "start_column": 4,
        "end_line": 71,
        "end_column": 9,
        "file": "VCVio/OracleComp/Traversal.lean"
      },
      "debug_info": {
        "goal": "case query_bind\n\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type v\nQ : {\u03b1 : Type v} \u2192 spec.OracleQuery \u03b1 \u2192 Prop\nF : Prop\npossible_outputs : {\u03b1 : Type v} \u2192 spec.OracleQuery \u03b1 \u2192 Set \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\ni : \u03b9\nt : spec.domain i\noa : spec.range i \u2192 OracleComp spec \u03b1\nh :\n  \u2200 (u : spec.range i),\n    allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa u >>= ob) \u2194\n      allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa u) \u2227\n        \u2200 x \u2208 (oa u).supportWhen fun {\u03b1} => possible_outputs,\n          allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (ob x)\n\u22a2 (Q (query i t) \u2227\n      \u2200 x \u2208 possible_outputs (query i t),\n        allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa x) \u2227\n          \u2200 x_1 \u2208 OracleComp.construct (fun x => {x}) (fun {\u03b2} q oa f => \u22c3 u \u2208 possible_outputs q, f u) \u2205 (oa x),\n            allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (ob x_1)) \u2194\n    (Q (query i t) \u2227\n        \u2200 x \u2208 possible_outputs (query i t), allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa x)) \u2227\n      \u2200 (x : \u03b1),\n        \u2200 x_1 \u2208 possible_outputs (query i t),\n          x \u2208 OracleComp.construct (fun x => {x}) (fun {\u03b2} q oa f => \u22c3 u \u2208 possible_outputs q, f u) \u2205 (oa x_1) \u2192\n            allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (ob x)",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/OracleComp/Traversal.lean#L71"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "f2c1056344618c13b64c60604a3c3ac345c2530060c1f17d7a4410a8ba6adcd8"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 112,
        "start_column": 36,
        "end_line": 112,
        "end_column": 41,
        "file": "VCVio/OracleComp/Traversal.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type v\n\u03b9' : Type u_1\nspec' : OracleSpec \u03b9'\noa : OracleComp spec \u03b1\npossible_outputs : {\u03b1 : Type v} \u2192 spec.OracleQuery \u03b1 \u2192 Set \u03b1\nh : oa.neverFailsWhen fun {\u03b1} => possible_outputs\nso : QueryImpl spec (OracleComp spec')\nh' : \u2200 {\u03b1 : Type v} (q : spec.OracleQuery \u03b1), (so.impl q).support \u2286 possible_outputs q\nhso : \u2200 {\u03b1 : Type v} (q : spec.OracleQuery \u03b1), (so.impl q).neverFails\n\u22a2 (simulateQ so oa).neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/OracleComp/Traversal.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "8442ded4be6358229389214a47b77ffa0cfebb4ad98b00479c9a147a6b781db7"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 49,
        "start_column": 2,
        "end_line": 49,
        "end_column": 7,
        "file": "VCVio/OracleComp/QueryBound.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\ninst\u271d\u00b9 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\n\u03b1 : Type u\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\n\u22a2 (\u2200 (qc : spec.QueryCount) (x : \u03b1), (x, qc) \u2208 (simulateQ countingOracle oa).run.support \u2192 qc \u2264 qb) \u2194\n    \u2200 x \u2208 (snd <$> (simulateQ countingOracle oa).run <|> pure 0).support, x \u2264 qb",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/OracleComp/QueryBound.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "70e654b3dfde4ee16121668bd16e44ab72fd43e49095d4f2778d2e046b4a68eb"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 29,
        "start_column": 2,
        "end_line": 29,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type v\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 \u03b3 : Type u\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\noc : \u03b1 \u2192 OracleComp spec \u03b3\nh : \u2200 x \u2208 oa.support, [\u22a5|ob x] = [\u22a5|oc x]\n\u22a2 [\u22a5|oa >>= ob] = [\u22a5|oa >>= oc]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "cc3de8c68925786787081f57b802390b04ab6d92ab52595af690df9125c38860"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 34,
        "start_column": 2,
        "end_line": 34,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type v\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 \u03b3 : Type u\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\noc : \u03b1 \u2192 OracleComp spec \u03b3\nh : \u2200 (x : \u03b1), [\u22a5|ob x] = [\u22a5|oc x]\n\u22a2 [\u22a5|oa >>= ob] = [\u22a5|oa >>= oc]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "d89c5b584465716ef625ad1a72394a6f20a4b0d866c9e23370359b3f17d10efb"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 39,
        "start_column": 2,
        "end_line": 39,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type v\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type u\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob\u2081 ob\u2082 : \u03b1 \u2192 OracleComp spec \u03b2\ny : \u03b2\nh : \u2200 x \u2208 oa.support, [=y|ob\u2081 x] = [=y|ob\u2082 x]\n\u22a2 [=y|oa >>= ob\u2081] = [=y|oa >>= ob\u2082]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-16T02:23:11-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "9d956ced6ddbf226f414cbb76ea00d5afcf245753d459644124b99ee10eb32a6"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 44,
        "start_column": 2,
        "end_line": 44,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type v\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type u\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob\u2081 ob\u2082 : \u03b1 \u2192 OracleComp spec \u03b2\ny : \u03b2\nh : \u2200 (x : \u03b1), [=y|ob\u2081 x] = [=y|ob\u2082 x]\n\u22a2 [=y|oa >>= ob\u2081] = [=y|oa >>= ob\u2082]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L44"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-16T02:23:11-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "d4df58b5ffdc19d638ff512be93d0d9cbc57d6f33783776b83ee7d0b372e4eff"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 50,
        "start_column": 2,
        "end_line": 50,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type v\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 \u03b3 : Type u\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\noc : \u03b1 \u2192 OracleComp spec \u03b3\ny : \u03b2\nz : \u03b3\nh : \u2200 x \u2208 oa.support, [=y|ob x] \u2264 [=z|oc x]\n\u22a2 [=y|oa >>= ob] \u2264 [=z|oa >>= oc]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L50"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-16T02:23:11-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "ea85b87952ac2df42ecb856ac98e333a262aa85fa416a7d550238d9be1423a6b"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 56,
        "start_column": 2,
        "end_line": 56,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type v\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type u\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob\u2081 ob\u2082 : \u03b1 \u2192 OracleComp spec \u03b2\ny : \u03b2\nr : \u211d\u22650\u221e\nh : \u2200 x \u2208 oa.support, [=y|ob\u2081 x] = [=y|ob\u2082 x] / r\n\u22a2 [=y|oa >>= ob\u2081] = [=y|oa >>= ob\u2082] / r",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L56"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-16T02:23:11-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "7f90bd2a0792950915c4530d85a3f45537d7a4c9a7f1eafbc70951ae92458649"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 76,
        "start_column": 2,
        "end_line": 76,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type v\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type u\ninst\u271d : spec.FiniteRange\n\u03b3\u2081 \u03b3\u2082 : Type u\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\noc\u2081 : \u03b1 \u2192 OracleComp spec \u03b3\u2081\noc\u2082 : \u03b1 \u2192 OracleComp spec \u03b3\u2082\ny : \u03b2\nz\u2081 : \u03b3\u2081\nz\u2082 : \u03b3\u2082\nh : \u2200 x \u2208 oa.support, [=y|ob x] \u2264 [=z\u2081|oc\u2081 x] + [=z\u2082|oc\u2082 x]\n\u22a2 [=y|oa >>= ob] \u2264 [=z\u2081|oa >>= oc\u2081] + [=z\u2082|oa >>= oc\u2082]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-16T02:23:11-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "ba6d54655f52cb02d18da351864ff9355dadab4cd0d77f475193067b19a3a896"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 84,
        "start_column": 2,
        "end_line": 84,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type v\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type u\ninst\u271d : spec.FiniteRange\n\u03b3\u2081 \u03b3\u2082 : Type u\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\noc\u2081 : \u03b1 \u2192 OracleComp spec \u03b3\u2081\noc\u2082 : \u03b1 \u2192 OracleComp spec \u03b3\u2082\ny : \u03b2\nz\u2081 : \u03b3\u2081\nz\u2082 : \u03b3\u2082\nh : \u2200 x \u2208 oa.support, [=z\u2081|oc\u2081 x] + [=z\u2082|oc\u2082 x] \u2264 [=y|ob x]\n\u22a2 [=z\u2081|oa >>= oc\u2081] + [=z\u2082|oa >>= oc\u2082] \u2264 [=y|oa >>= ob]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L84"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-16T02:23:11-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "157162771ba29e5515cc16cd275710aac040d9ead685b4dc60cb8e9344cc413a"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 92,
        "start_column": 2,
        "end_line": 92,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type v\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type u\ninst\u271d : spec.FiniteRange\n\u03b3\u2081 \u03b3\u2082 : Type u\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\noc\u2081 : \u03b1 \u2192 OracleComp spec \u03b3\u2081\noc\u2082 : \u03b1 \u2192 OracleComp spec \u03b3\u2082\ny : \u03b2\nz\u2081 : \u03b3\u2081\nz\u2082 : \u03b3\u2082\nh : \u2200 x \u2208 oa.support, [=y|ob x] \u2264 [=z\u2081|oc\u2081 x] - [=z\u2082|oc\u2082 x]\n\u22a2 [=y|oa >>= ob] \u2264 [=z\u2081|oa >>= oc\u2081] - [=z\u2082|oa >>= oc\u2082]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L92"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-16T02:23:11-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "2cd2982603c0b8d1945373c8479be8a09293637a3dbd073bc5956ba93a619ef1"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 100,
        "start_column": 2,
        "end_line": 100,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type v\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type u\ninst\u271d : spec.FiniteRange\n\u03b3\u2081 \u03b3\u2082 : Type u\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\noc\u2081 : \u03b1 \u2192 OracleComp spec \u03b3\u2081\noc\u2082 : \u03b1 \u2192 OracleComp spec \u03b3\u2082\ny : \u03b2\nz\u2081 : \u03b3\u2081\nz\u2082 : \u03b3\u2082\nh : \u2200 x \u2208 oa.support, [=z\u2081|oc\u2081 x] - [=z\u2082|oc\u2082 x] \u2264 [=y|ob x]\n\u22a2 [=z\u2081|oa >>= oc\u2081] - [=z\u2082|oa >>= oc\u2082] \u2264 [=y|oa >>= ob]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L100"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-16T02:23:11-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "1dd52cb8c09ea86f99d5060e8ef80e53bf3c8edc03767074e771eae5bc618f4e"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 109,
        "start_column": 2,
        "end_line": 109,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type v\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : OracleComp spec \u03b2\nz : \u03b1 \u00d7 \u03b2\n\u22a2 [=z|(fun x1 x2 => (x1, x2)) <$> oa <*> ob] = [=z.1|oa] * [=z.2|ob]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L109"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-16T12:40:27-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "1aa8df5131b2904343efaec6a6a3d0accd11351484e3a6718ad813a8b60c3dcb"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 114,
        "start_column": 2,
        "end_line": 114,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type v\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : OracleComp spec \u03b2\nx : \u03b1\ny : \u03b2\n\u22a2 [=(x, y)|(fun x1 x2 => (x1, x2)) <$> oa <*> ob] = [=x|oa] * [=y|ob]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L114"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-16T12:40:27-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "0fd0d6c198b1e43dca5ffb987de33aae8d91791106ce742b50575b4705ab50ee"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 120,
        "start_column": 2,
        "end_line": 120,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 \u03b3 \u03b4 : Type v\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : OracleComp spec \u03b2\nf : \u03b1 \u2192 \u03b3\ng : \u03b2 \u2192 \u03b4\nz : \u03b3 \u00d7 \u03b4\n\u22a2 [=z|(fun x1 x2 => (f x1, g x2)) <$> oa <*> ob] = [=z.1|f <$> oa] * [=z.2|g <$> ob]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L120"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-16T12:40:27-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "69af405bcfb4d793d9d57f91a57022ce5681b5736003558841537a81eaafbee8"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 126,
        "start_column": 2,
        "end_line": 126,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 \u03b3 \u03b4 : Type v\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : OracleComp spec \u03b2\nf : \u03b1 \u2192 \u03b3\ng : \u03b2 \u2192 \u03b4\nx : \u03b3\ny : \u03b4\n\u22a2 [=(x, y)|(fun x1 x2 => (f x1, g x2)) <$> oa <*> ob] = [=x|f <$> oa] * [=y|g <$> ob]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L126"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-16T12:40:27-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "5b65bd3f8ab649dc7111f40c280dbb534cc2ebeb955da9ad2da88116e0637852"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 132,
        "start_column": 2,
        "end_line": 132,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 \u03b3 \u03b4 : Type v\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : OracleComp spec \u03b2\nf : \u03b1 \u2192 \u03b3\ng : \u03b2 \u2192 \u03b4\nz : \u03b3 \u00d7 \u03b4\n\u22a2 [=z|do\n      let x \u2190 oa\n      let y \u2190 ob\n      pure (f x, g y)] =\n    [=z.1|f <$> oa] * [=z.2|g <$> ob]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L132"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-16T12:40:27-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "03399be4aba21fa666884ddb3ff07f6fc2964b91d58cdeb45e1b2e8d1019ea20"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 139,
        "start_column": 2,
        "end_line": 139,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 \u03b3 \u03b4 : Type v\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : OracleComp spec \u03b2\nf : \u03b1 \u2192 \u03b3\ng : \u03b2 \u2192 \u03b4\nx : \u03b3\ny : \u03b4\n\u22a2 [=(x, y)|do\n      let x \u2190 oa\n      let y \u2190 ob\n      pure (f x, g y)] =\n    [=x|f <$> oa] * [=y|g <$> ob]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L139"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-16T12:40:27-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "9f948e5ca539763420f8c0fae370442067fb814075419addfc04aa5563f7290a"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 149,
        "start_column": 2,
        "end_line": 149,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 \u03b3 : Type v\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\n\u03c3 : Type u\ns : Finset \u03c3\noc : \u03c3 \u2192 \u03b1 \u2192 OracleComp spec \u03b3\n\u22a2 [\u22a5|oa >>= ob] = \u2211 x \u2208 s, [\u22a5|oa >>= oc x]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L149"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-16T02:23:11-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "af606d9c7445536ece6c5aa468c93463df31a2ac1e4917a63cd39708f603d8ac"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 159,
        "start_column": 2,
        "end_line": 159,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type v\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\ny : \u03b2\nz : \u03b1 \u00d7 \u03b2\n\u22a2 [=z|(fun x => (x, y)) <$> oa] = [=z.1|oa] * [=z.2|pure y]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L159"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-16T02:23:11-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "82d8159d780f754ee1d29b0a8ec2b1512b22ae4b0474da7bf43ae2006367e530"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 164,
        "start_column": 2,
        "end_line": 164,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type v\ninst\u271d : spec.FiniteRange\nob : OracleComp spec \u03b2\nx : \u03b1\nz : \u03b1 \u00d7 \u03b2\n\u22a2 [=z|(fun x_1 => (x, x_1)) <$> ob] = [=z.1|pure x] * [=z.2|ob]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-16T02:23:11-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "9f4381e86b086c944c9c471811b22bb0dd0b511c3ceb7fe9291d27399eb44930"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 170,
        "start_column": 2,
        "end_line": 170,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 \u03b3 : Type v\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nf : \u03b1 \u2192 \u03b3\ny : \u03b2\nz : \u03b3 \u00d7 \u03b2\n\u22a2 [=z|(fun x => (f x, y)) <$> oa] = [=z.1|f <$> oa] * [=z.2|pure y]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L170"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-16T02:23:11-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "9c24d717ef10a497eb2acc5b5bb5fd04a61d0d5813b7c869caacfcb764510a28"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 176,
        "start_column": 2,
        "end_line": 176,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 \u03b3 : Type v\ninst\u271d : spec.FiniteRange\nob : OracleComp spec \u03b2\nf : \u03b2 \u2192 \u03b3\nx : \u03b1\nz : \u03b1 \u00d7 \u03b3\n\u22a2 [=z|(fun x_1 => (x, f x_1)) <$> ob] = [=z.1|pure x] * [=z.2|f <$> ob]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L176"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-16T02:23:11-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "7d1810feff0c3ebba7648a1bab6aef9e5db6ffbc4efac355717a891485585b20"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 328,
        "start_column": 10,
        "end_line": 328,
        "end_column": 15,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "case e_a\n\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Fin (qb i + 1)\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\nthis : DecidableEq \u03b1\n\u22a2 [=(some s, some s)|do\n      let seed \u2190 liftM (generateSeed spec qb js)\n      let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n      let u \u2190 liftM ($\u1d57spec.range i)\n      let seed' : spec.QuerySeed := (seed.takeAtIndex i \u2191s).addValue i u\n      let x\u2082 \u2190 (simulateQ seededOracle main).run seed'\n      pure (cf x\u2081, cf x\u2082)] =\n    [=(some s, some s)|do\n      let shared_seed \u2190 liftM (generateSeed spec (update qb i q) js)\n      let x\u2081 \u2190 (simulateQ seededOracle main).run shared_seed\n      let x\u2082 \u2190 (simulateQ seededOracle main).run shared_seed\n      pure (cf x\u2081, cf x\u2082)]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L328"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-16T12:40:27-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "4f22db7a3d72643265ab8c36dbddcede95e8779602675112d1a37ec2ec995f50"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 346,
        "start_column": 10,
        "end_line": 346,
        "end_column": 15,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "case refine_1\n\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Fin (qb i + 1)\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\nthis : DecidableEq \u03b1\n\u22a2 [=(some s, some s)|do\n      let x \u2190 main\n      let y \u2190 main\n      pure (cf x, cf y)] \u2264\n    [=(some s, some s)|do\n      let shared_seed \u2190 liftM (generateSeed spec (update qb i q) js)\n      let x\u2081 \u2190 (simulateQ seededOracle main).run shared_seed\n      let x\u2082 \u2190 (simulateQ seededOracle main).run shared_seed\n      pure (cf x\u2081, cf x\u2082)]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L346"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-16T12:40:27-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "6221a156ddc06be25d89f60d336c33c2f115e87b7555a196564cb2465159dea5"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 330,
        "start_column": 53,
        "end_line": 330,
        "end_column": 58,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Fin (qb i + 1)\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\nthis : DecidableEq \u03b1\nseed : spec.QuerySeed\nhseed : seed \u2208 (liftM (generateSeed spec qb js)).support\n\u22a2 \u2191(s + 1) < (seed i).length",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L330"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-16T02:23:11-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "8a2884be5f659b4823db632a07f72bec5b09d1e0bdac28890d8f6aa91b7109ed"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 362,
        "start_column": 6,
        "end_line": 362,
        "end_column": 11,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := 1 - [=none|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 [\u22a5|main.fork qb js i cf] = 1 - \u2211 s : Option (Fin (qb i + 1)), [=(s, s)|Prod.map cf cf <$> main.fork qb js i cf]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L362"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "e3aaa699728ac7c3e96a1aeeb0e906304b03197f341be3af01f4ebc12a24ee97"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 364,
        "start_column": 6,
        "end_line": 364,
        "end_column": 11,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := 1 - [=none|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 - \u2211 s : Option (Fin (qb i + 1)), [=(s, s)|Prod.map cf cf <$> main.fork qb js i cf] \u2264\n    1 - \u2211 s : Option (Fin (qb i + 1)), ([=s|cf <$> main] ^ 2 - [=s|cf <$> main] / h)",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L364"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "163c09de6cd2ef6bfb59764cd8311112b8a226b9c3b5974eaca5b02171d8b922"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 366,
        "start_column": 6,
        "end_line": 366,
        "end_column": 11,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := 1 - [=none|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 - \u2211 s : Option (Fin (qb i + 1)), ([=s|cf <$> main] ^ 2 - [=s|cf <$> main] / h) =\n    1 - \u2211 s : Option (Fin (qb i + 1)), [=s|cf <$> main] ^ 2 - \u2211 s : Option (Fin (qb i + 1)), [=s|cf <$> main] / h",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L366"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "c4f06d7a142a6731c5c615262eaad076645e18d7ecd72ec7cb29c15788ad7f2c"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 368,
        "start_column": 6,
        "end_line": 368,
        "end_column": 11,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := 1 - [=none|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 - \u2211 s : Option (Fin (qb i + 1)), [=s|cf <$> main] ^ 2 - \u2211 s : Option (Fin (qb i + 1)), [=s|cf <$> main] / h \u2264\n    1 - (\u2211 s : Option (Fin (qb i + 1)), [=s|cf <$> main]) ^ 2 / \u2191q -\n      (\u2211 s : Option (Fin (qb i + 1)), [=s|cf <$> main]) / h",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L368"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "24dcebc5c2f95ad54aca1941f3ed287b89323f3b9337c9b16bf00b75136734b2"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 370,
        "start_column": 6,
        "end_line": 370,
        "end_column": 11,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := 1 - [=none|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 - (\u2211 s : Option (Fin (qb i + 1)), [=s|cf <$> main]) ^ 2 / \u2191q -\n      (\u2211 s : Option (Fin (qb i + 1)), [=s|cf <$> main]) / h \u2264\n    1 - acc ^ 2 / \u2191q + acc / h",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L370"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "2bd70fa36bd28b55cbceb54d47f764af52f0c8181ae19bdfa9488121cae9cccf"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 372,
        "start_column": 6,
        "end_line": 372,
        "end_column": 11,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := 1 - [=none|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 - acc ^ 2 / \u2191q + acc / h = 1 - acc * (acc / \u2191q - h\u207b\u00b9)",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L372"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "6777ae4b9f6699878836c77015508b80ae64aacd2ac8a316bf91f4b634b0e01a"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 383,
        "start_column": 2,
        "end_line": 383,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nx\u2081 x\u2082 : \u03b1\nh : (x\u2081, x\u2082) \u2208 (main.fork qb js i cf).support\n\u22a2 \u2203 s,\n    cf x\u2081 = some s \u2227\n      cf x\u2082 = some s \u2227\n        \u2203 log\u2081,\n          \u2203 (hcf\u2081 : \u2191s < log\u2081.countQ i),\n            \u2203 log\u2082,\n              \u2203 (hcf\u2081_1 : \u2191s < log\u2082.countQ i),\n                (log\u2081.getQ i)[s].1 = (log\u2082.getQ i)[s].1 \u2227\n                  (log\u2081.getQ i)[s].2 \u2260 (log\u2082.getQ i)[s].2 \u2227\n                    (x\u2081, log\u2081) \u2208 (simulateQ loggingOracle main).run.support \u2227\n                      (x\u2082, log\u2082) \u2208 (simulateQ loggingOracle main).run.support",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/Fork.lean#L383"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "c5738abb6d113567c1535b7f9e43f85d404bb342ea713e8d12ba2b97b25edcbd"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 66,
        "start_column": 2,
        "end_line": 66,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/SymmEncAlg.lean"
      },
      "debug_info": {
        "goal": "m : Type \u2192 Type v\nM K C : Type\ninst\u271d\u2075 : AlternativeMonad m\ninst\u271d\u2074 : LawfulAlternative m\ninst\u271d\u00b3 : Fintype M\ninst\u271d\u00b2 : Fintype K\ninst\u271d\u00b9 : Fintype C\nencAlg : SymmEncAlg m M K C\ninst\u271d : encAlg.Complete\nh1 : Fintype.card M = Fintype.card K\nh2 : Fintype.card K = Fintype.card C\n\u22a2 encAlg.perfectSecrecy \u2194\n    (\u2200 (k : K), [=k|encAlg.exec encAlg.keygen] = (\u2191(Fintype.card K))\u207b\u00b9) \u2227\n      \u2200 (m_1 : M) (c : m C), \u2203! k, k \u2208 support (encAlg.exec encAlg.keygen) \u2227 encAlg.encrypt k m_1 = c",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/SymmEncAlg.lean#L66"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "b9745b6299270d0ac79ba3bf44ce4110e8bd098b3f316729d4ba95c280525402"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 79,
        "start_column": 29,
        "end_line": 79,
        "end_column": 34,
        "file": "VCVio/CryptoFoundations/FiatShamir.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\n\u03c3 X W PC SC \u03a9 P : Type\np : X \u2192 W \u2192 Bool\ninst\u271d\u2075 : SelectableType X\ninst\u271d\u2074 : SelectableType W\ninst\u271d\u00b3 : DecidableEq PC\ninst\u271d\u00b2 : DecidableEq \u03a9\ninst\u271d\u00b9 : SelectableType \u03a9\nsigmaAlg : SigmaAlg X W PC SC \u03a9 P p\nhr : GenerableRelation X W p\nM : Type\ninst\u271d : DecidableEq M\n\u03b1\u271d : Type\nc : ProbComp \u03b1\u271d\n\u22a2 (fun {\u03b1} comp =>\n        let so := idOracle ++\u209b\u2092 randomOracle;\n        (simulateQ so comp).run' \u2205)\n      ((fun {\u03b1} => monadLift) c) =\n    c",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/CryptoFoundations/FiatShamir.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "3532b6829cb138e88ab5755b1380fe5be3cb7e49b213d20516ccfc67892f4a3d"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 79,
        "start_column": 2,
        "end_line": 79,
        "end_column": 7,
        "file": "VCVio/OracleComp/Coercions/SubSpec.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\n\u03c4 : Type v\nspec : OracleSpec \u03b9\nsuperSpec : OracleSpec \u03c4\n\u03b1 : Type w\nh : MonadLift spec.OracleQuery superSpec.OracleQuery\ninst\u271d\u2074 : spec.DecidableEq\ninst\u271d\u00b3 : superSpec.DecidableEq\ninst\u271d\u00b2 : superSpec.FiniteRange\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : Fintype \u03b1\nq : spec.OracleQuery \u03b1\n\u22a2 (liftM (MonadLift.monadLift q)).finSupport = Finset.univ",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/OracleComp/Coercions/SubSpec.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "332e7d3d28033a0d4c8449fe3c0db15f94e3c7134b2ece3856e6189343a5c6df"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 186,
        "start_column": 2,
        "end_line": 186,
        "end_column": 7,
        "file": "VCVio/OracleComp/Coercions/SubSpec.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\n\u03c4 : Type v\nspec : OracleSpec \u03b9\n\u03b1 : Type w\nsuperSpec : OracleSpec \u03c4\nh : MonadLift spec.OracleQuery superSpec.OracleQuery\noa : OracleComp spec \u03b1\n\u22a2 (simulateQ { impl := fun {\u03b1} => liftM } oa).neverFails \u2194 oa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/OracleComp/Coercions/SubSpec.lean#L186"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "eb4b5b7ce1f80e1101fe364ccf39d8399cb706100ddcdad85caf5dd88c1901c8"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 74,
        "start_column": 2,
        "end_line": 74,
        "end_column": 7,
        "file": "VCVio/OracleComp/QueryTracking/SeededOracle.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\ninst\u271d\u00b2 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\ninst\u271d : spec.FiniteRange\nqc : \u03b9 \u2192 \u2115\njs : List \u03b9\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\ny : \u03b2\n\u22a2 [=y|do\n      let seed \u2190 liftComp (generateSeed spec qc js) spec\n      let x \u2190 (simulateQ seededOracle oa).run seed\n      ob x] =\n    [=y|oa >>= ob]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/OracleComp/QueryTracking/SeededOracle.lean#L74"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-16T12:40:27-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "b4ba70e25df9931235bab34643273f8f3dc068f3ef6ee653e19cd45a1157f19f"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 85,
        "start_column": 2,
        "end_line": 85,
        "end_column": 7,
        "file": "VCVio/OracleComp/QueryTracking/SeededOracle.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\ninst\u271d\u00b2 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\ninst\u271d : spec.FiniteRange\nqc : \u03b9 \u2192 \u2115\njs : List \u03b9\noa : OracleComp spec \u03b1\nf : \u03b1 \u2192 \u03b2\ny : \u03b2\n\u22a2 [=y|do\n      let seed \u2190 liftComp (generateSeed spec qc js) spec\n      f <$> (simulateQ seededOracle oa).run seed] =\n    [=y|f <$> oa]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/OracleComp/QueryTracking/SeededOracle.lean#L85"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-16T12:40:27-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "72077d8c583adb316a04f26fda12a539491fa4347a318c6d644b324b0160bec1"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 69,
        "start_column": 53,
        "end_line": 69,
        "end_column": 58,
        "file": "VCVio/OracleComp/QueryTracking/CountingOracle.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\ninst\u271d : DecidableEq \u03b9\nspec : OracleSpec \u03b9\n\u03b1 : Type u\noa : OracleComp spec \u03b1\n\u22a2 \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (countingOracle.impl q).run.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/OracleComp/QueryTracking/CountingOracle.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "7b59c94e42d27f19543fb28e44d2a4e124195f149c4beb801cf5295c72ea7f40"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 72,
        "start_column": 53,
        "end_line": 72,
        "end_column": 58,
        "file": "VCVio/OracleComp/QueryTracking/LoggingOracle.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type u\noa : OracleComp spec \u03b1\n\u22a2 \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (loggingOracle.impl q).run.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/OracleComp/QueryTracking/LoggingOracle.lean#L72"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "5dc403766e17aa84ab555e2c1dc61ca3becdfaf0c65aa1fd7b209f962fb1f9f5"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 280,
        "start_column": 2,
        "end_line": 280,
        "end_column": 7,
        "file": "VCVio/OracleComp/Constructions/UniformSelect.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type\nh\u03b1 : SelectableType \u03b1\n\u22a2 neverFails ($\u1d57\u03b1)",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/OracleComp/Constructions/UniformSelect.lean#L280"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "cbb100f00e71fb99ca8b498050a7304b2f70ebb7e995d98fee2ceb27db76bb8e"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 77,
        "start_column": 2,
        "end_line": 77,
        "end_column": 7,
        "file": "VCVio/OracleComp/Constructions/GenerateSeed.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b9 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d : (i : \u03b9) \u2192 SelectableType (spec.range i)\nqc : \u03b9 \u2192 \u2115\nj : \u03b9\njs : List \u03b9\n\u22a2 (do\n      let x \u2190 replicate (qc j) ($\u1d57spec.range j)\n      forIn js (QuerySeed.addValues x fun x => []) fun j r =>\n          replicate (qc j) ($\u1d57spec.range j) >>= pure \u2218 fun a => ForInStep.yield (QuerySeed.addValues a r)) =\n    do\n    let _ \u2190 replicate (qc j) ($\u1d57spec.range j)\n    forIn js (fun x => []) fun j r =>\n        replicate (qc j) ($\u1d57spec.range j) >>= pure \u2218 fun a => ForInStep.yield (QuerySeed.addValues a r)",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/OracleComp/Constructions/GenerateSeed.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-01-16T01:24:48-06:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "995196e8678e7cfefbcf5fe73d6148441aa8b6f5516f54a7c7323a015e0ca438"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 86,
        "start_column": 2,
        "end_line": 86,
        "end_column": 7,
        "file": "VCVio/OracleComp/Constructions/GenerateSeed.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b9 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d : (i : \u03b9) \u2192 SelectableType (spec.range i)\nqc : \u03b9 \u2192 \u2115\njs : List \u03b9\n\u22a2 support (generateSeed spec qc js) = {seed | \u2200 (i : \u03b9), (seed i).length = qc i * List.count i js}",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/OracleComp/Constructions/GenerateSeed.lean#L86"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2024-12-05T21:45:03-06:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "eb34d4fa4565bae91ca950cf5ee322f1acb207c91327cd2210e8d94dd69566c5"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 129,
        "start_column": 4,
        "end_line": 129,
        "end_column": 9,
        "file": "VCVio/OracleComp/Constructions/GenerateSeed.lean"
      },
      "debug_info": {
        "goal": "case append_singleton\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b9 : (i : \u03b9) \u2192 SelectableType (spec.range i)\nqc : \u03b9 \u2192 \u2115\njs\u271d : List \u03b9\ninst\u271d : spec.FiniteRange\nj : List \u03b9\njs : \u03b9\nhjs :\n  \u2200 seed \u2208 support (generateSeed spec qc j),\n    [=seed|generateSeed spec qc j] = 1 / \u2191(List.map (fun j => Fintype.card (spec.range j) ^ qc j) j).prod\nseed : spec.QuerySeed\nhs : seed \u2208 support (generateSeed spec qc (j ++ [js]))\n\u22a2 [=seed|do\n      let a \u2190\n        foldlM\n            (fun b a =>\n              match b with\n              | ForInStep.yield b =>\n                (fun a_1 => ForInStep.yield (QuerySeed.addValues a_1 b)) <$> replicate (qc a) ($\u1d57spec.range a)\n              | ForInStep.done b => pure (ForInStep.done b))\n            (ForInStep.yield fun x => []) j\n      ForInStep.value <$>\n          match a with\n          | ForInStep.yield b =>\n            (fun a => ForInStep.yield (QuerySeed.addValues a b)) <$> replicate (qc js) ($\u1d57spec.range js)\n          | ForInStep.done b => pure (ForInStep.done b)] =\n    ((List.map (Nat.cast \u2218 fun j => Fintype.card (spec.range j) ^ qc j) j).prod *\n        \u2191(Fintype.card (spec.range js)) ^ qc js)\u207b\u00b9",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/OracleComp/Constructions/GenerateSeed.lean#L129"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-01-16T01:24:48-06:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "d9bd8b2dfad7187f51fc21fcd01fc420b9892466cfdb30346c987f34171832aa"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 721,
        "start_column": 83,
        "end_line": 721,
        "end_column": 88,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\ns : \u211d\u22650\u221e\nh' : [\u22a5|oa] = s\nob : \u03b1 \u2192 OracleComp spec \u03b2\nr : \u211d\u22650\u221e\nhr : \u2200 x \u2208 oa.support, [\u22a5|ob x] \u2264 r\n\u22a2 [\u22a5|oa >>= ob] \u2264 s + (1 - s) * r",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/OracleComp/DistSemantics/EvalDist.lean#L721"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "ce74e6b9bed4bd2f6ef2c636354ca5dea0bae79510b00a51ff7c352c1befb905"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 727,
        "start_column": 73,
        "end_line": 727,
        "end_column": 78,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\ns : \u211d\u22650\u221e\nh' : [\u22a5|oa] = s\nob : \u03b1 \u2192 OracleComp spec \u03b2\nr : \u211d\u22650\u221e\nhr : \u2200 x \u2208 oa.support, [\u22a5|ob x] \u2264 r\n\u22a2 [\u22a5|oa >>= ob] \u2264 s + r",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/OracleComp/DistSemantics/EvalDist.lean#L727"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "e66da7cde8ccdff7e1c6ab535c132467be779a0ce7e92b1796e0a6822c6e105b"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 732,
        "start_column": 69,
        "end_line": 732,
        "end_column": 74,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nh' : oa.neverFails\nob : \u03b1 \u2192 OracleComp spec \u03b2\nr : \u211d\u22650\u221e\nhr : \u2200 x \u2208 oa.support, [\u22a5|ob x] \u2264 r\n\u22a2 [\u22a5|oa >>= ob] \u2264 r",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/OracleComp/DistSemantics/EvalDist.lean#L732"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "54e7fcb9e9eda4c313633d1201033882e3cdb78d875257a98f89d809aea79285"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 736,
        "start_column": 59,
        "end_line": 736,
        "end_column": 64,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nh : oa.neverFails\nob : \u03b1 \u2192 OracleComp spec \u03b2\n\u22a2 [\u22a5|oa >>= ob] = \u2211' (x : \u03b1), [=x|oa] * [\u22a5|ob x]",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/OracleComp/DistSemantics/EvalDist.lean#L736"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "4941feb4ef5c092e4cf6dadb956fcee7faaf5b1c792b5ff4337e6f3251dd81f6"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 928,
        "start_column": 2,
        "end_line": 928,
        "end_column": 7,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\n\u22a2 [\u22a5|oa] = 0 \u2194 oa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/OracleComp/DistSemantics/EvalDist.lean#L928"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "f3fd63d7ff7879b54cf198aad7f2ff4adad28973943b6023764a9db26056f914"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 936,
        "start_column": 2,
        "end_line": 936,
        "end_column": 7,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\n\u22a2 0 < [\u22a5|oa] \u2194 \u00acoa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/OracleComp/DistSemantics/EvalDist.lean#L936"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "768524c160096d86fba14b40f389d20bb94b78b8e95f82aae69aa7ee0c1906ef"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 29,
        "start_column": 4,
        "end_line": 29,
        "end_column": 9,
        "file": "VCVio/OracleComp/DistSemantics/Alternative.lean"
      },
      "debug_info": {
        "goal": "case query_bind\n\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type v\nh\u271d : spec.FiniteRange\noa' : OracleComp spec \u03b1\ni : \u03b9\nt : spec.domain i\noa : spec.range i \u2192 OracleComp spec \u03b1\nh : \u2200 (u : spec.range i), (oa u <|> oa').evalDist = ((oa u).evalDist <|> oa'.evalDist)\n\u22a2 (liftM (OracleSpec.query i t) >>= oa <|> oa').evalDist =\n    ((liftM (OracleSpec.query i t) >>= oa).evalDist <|> oa'.evalDist)",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/OracleComp/DistSemantics/Alternative.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "ad355191f626b4df65ee97ccf76b82033cb393a8fbc00a3b53d87c53a883f2e1"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 52,
        "start_column": 2,
        "end_line": 52,
        "end_column": 7,
        "file": "VCVio/OracleComp/DistSemantics/Alternative.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type u\noa oa' : OracleComp spec \u03b1\ninst\u271d : Decidable oa.neverFails\n\u22a2 (oa <|> oa').support = if oa.neverFails then oa.support else oa.support \u222a oa'.support",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/OracleComp/DistSemantics/Alternative.lean#L52"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "19af9d79b3e5672f14868895ecc78abe79b9abe8fbc3a4cf050b04111b3580b7"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 170,
        "start_column": 8,
        "end_line": 170,
        "end_column": 13,
        "file": "VCVio/OracleComp/DistSemantics/List.lean"
      },
      "debug_info": {
        "goal": "case pos.append_singleton.cons\n\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type u_1\n\u03b2 : Type u_2\ninst\u271d\u00b9 : DecidableEq \u03b2\ninst\u271d : spec.FiniteRange\nf : \u03b1 \u2192 OracleComp spec \u03b2\nys zs : List \u03b2\nz : \u03b2\nh : take ys.length (zs ++ [z]) = ys.reverse\nx : \u03b1\nxs : List \u03b1\nhzs :\n  take ys.length zs = ys.reverse \u2192\n    [=drop ys.length zs|mapM.loop f (x :: xs) []] =\n      if zs.length = (x :: xs).length + ys.length then\n        (zipWith (fun x z => [=z|f x]) (x :: xs) (drop ys.length zs)).prod\n      else 0\n\u22a2 [=drop ys.length (zs ++ [z])|do\n      let __do_lift \u2190 f x\n      mapM.loop f xs [__do_lift]] =\n    if zs.length = xs.length + ys.length then\n      (zipWith (fun x z => [=z|f x]) (x :: xs) (drop ys.length (zs ++ [z]))).prod\n    else 0",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/OracleComp/DistSemantics/List.lean#L170"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-01-28T07:23:40-06:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "1321b6999e5e1cbf8811a75b413061b7e2c21dccaaae0a02bdb67da379b6ce57"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7,
        "file": "VCVio/OracleComp/SimSemantics/StateT.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nspec : OracleSpec \u03b9\n\u03c3 : Type u\ninst\u271d : Subsingleton \u03c3\n\u03b1 : Type u\nso : QueryImpl spec (StateT \u03c3 (OracleComp spec))\nh : \u2200 (\u03b1 : Type u) (q : spec.OracleQuery \u03b1) (s : \u03c3), (so.impl q).run' s = liftM q\noa : OracleComp spec \u03b1\ns : \u03c3\n\u22a2 (simulateQ so oa).run' s = oa",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/OracleComp/SimSemantics/StateT.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "d40ad4b474814167627b38557bf9a591a54220dd47ac8cd87b30f2a1e257a084"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 61,
        "start_column": 2,
        "end_line": 61,
        "end_column": 7,
        "file": "VCVio/OracleComp/SimSemantics/WriterT.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03c9 : Type u\ninst\u271d : Monoid \u03c9\nso : QueryImpl spec (WriterT \u03c9 (OracleComp spec))\nhso : \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (fst <$> (so.impl q).run).support = \u22a4\nhso' : \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (so.impl q).run.neverFails\noa : OracleComp spec \u03b1\n\u22a2 (simulateQ so oa).run.neverFails \u2194 oa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/VCVio/OracleComp/SimSemantics/WriterT.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "f2ce3a952fa2cc317323566e90353366cf4079c996b4aa7ff414744b43207c4d"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "fixes",
        "commit": "ea6c200d1b5362d19475ccebb9f0791264b9f210",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 94,
        "start_column": 39,
        "end_line": 94,
        "end_column": 44,
        "file": "ToMathlib/Control/WriterT.lean"
      },
      "debug_info": {
        "goal": "m : Type u \u2192 Type v\ninst\u271d\u00b3 : AlternativeMonad m\n\u03c9 \u03b1 \u03b2 \u03b3 : Type u\ninst\u271d\u00b2 : Monoid \u03c9\ninst\u271d\u00b9 : LawfulMonad m\ninst\u271d : LawfulAlternative m\n\u22a2 LawfulAlternative (WriterT \u03c9 m)",
        "url": "https://github.com/dtumad/VCV-io/blob/ea6c200d1b5362d19475ccebb9f0791264b9f210/ToMathlib/Control/WriterT.lean#L94"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:27:58.210807+00:00"
      },
      "id": "adaba433033585d590661613d38e0167dfe8f9cab7afb9919b5b2d7816c0bc1d"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 223,
        "start_column": 2,
        "end_line": 223,
        "end_column": 7,
        "file": "Examples/FrankingProtocol.lean"
      },
      "debug_info": {
        "goal": "bv : BitVec 256\n\u22a2 String.foldl (fun acc c => acc <<< 8 + BitVec.ofNat 256 c.toNat) 0#256\n      { data := bitvec_to_string.chars bv.toNat [] } =\n    bv",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/Examples/FrankingProtocol.lean#L223"
      },
      "metadata": {
        "blame_email_hash": "f78b4540360d",
        "blame_date": "2025-02-05T21:14:45-06:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "b031e118f8e2b0b84be22d9a75b7e7156f60d9174035f253121a1d878fc5b9fa"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 257,
        "start_column": 2,
        "end_line": 257,
        "end_column": 7,
        "file": "Examples/FrankingProtocol.lean"
      },
      "debug_info": {
        "goal": "message_content : String\n\u22a2 (do\n        let x \u2190 $\u1d57BitVec 256\n        let x_1 \u2190\n          if\n                mock_hmac_sha256 x\n                    (serialize_message_data\n                        (deserialize_message_data ((serialize_message_data message_content x).1, x)).1 x).1 =\n                  mock_hmac_sha256 x (serialize_message_data message_content x).1 then\n              pure\n                (some\n                  { content := (deserialize_message_data ((serialize_message_data message_content x).1, x)).1,\n                    nonce := x })\n            else pure none\n        let maybeData \u2190\n          match x_1 with\n            | none => pure none\n            | some verified_msg =>\n              pure\n                (some\n                  { verified_msg := verified_msg,\n                    message_package :=\n                      {\n                        encrypted_message :=\n                          { ciphertext := mock_encrypt (serialize_message_data message_content x).1 },\n                        franking_tag := { tag := mock_hmac_sha256 x (serialize_message_data message_content x).1 },\n                        reporting_tag :=\n                          {\n                            tag :=\n                              mock_hmac_sha256 (123456789#256)\n                                (string_to_bitvec\n                                  (String.append (mock_hmac_sha256 x (serialize_message_data message_content x).1)\n                                    (bitvec_to_string 1730230302#256))) },\n                        context :=\n                          { sender_id := 1001#256, recipient_id := 1002#256, timestamp := 1730230302,\n                            message_id := 123 },\n                        nonce := x },\n                    facebook_key := 123456789#256 })\n        match maybeData with\n          | none => pure false\n          | some data =>\n            pure\n              (decide\n                  (mock_hmac_sha256 data.verified_msg.nonce\n                      (serialize_message_data data.verified_msg.content data.verified_msg.nonce).1 =\n                    data.message_package.franking_tag.tag) &&\n                decide\n                  (mock_hmac_sha256 data.facebook_key\n                      (string_to_bitvec\n                        (String.append data.message_package.franking_tag.tag\n                          (bitvec_to_string (BitVec.ofNat 256 data.message_package.context.timestamp)))) =\n                    data.message_package.reporting_tag.tag))).neverFails \u2227\n    (\u2200 (x : BitVec 256),\n        false \u2209\n          (do\n              let x_1 \u2190\n                if\n                      mock_hmac_sha256 x\n                          (serialize_message_data\n                              (deserialize_message_data ((serialize_message_data message_content x).1, x)).1 x).1 =\n                        mock_hmac_sha256 x (serialize_message_data message_content x).1 then\n                    pure\n                      (some\n                        { content := (deserialize_message_data ((serialize_message_data message_content x).1, x)).1,\n                          nonce := x })\n                  else pure none\n              let maybeData \u2190\n                match x_1 with\n                  | none => pure none\n                  | some verified_msg =>\n                    pure\n                      (some\n                        { verified_msg := verified_msg,\n                          message_package :=\n                            {\n                              encrypted_message :=\n                                { ciphertext := mock_encrypt (serialize_message_data message_content x).1 },\n                              franking_tag :=\n                                { tag := mock_hmac_sha256 x (serialize_message_data message_content x).1 },\n                              reporting_tag :=\n                                {\n                                  tag :=\n                                    mock_hmac_sha256 (123456789#256)\n                                      (string_to_bitvec\n                                        (String.append (mock_hmac_sha256 x (serialize_message_data message_content x).1)\n                                          (bitvec_to_string 1730230302#256))) },\n                              context :=\n                                { sender_id := 1001#256, recipient_id := 1002#256, timestamp := 1730230302,\n                                  message_id := 123 },\n                              nonce := x },\n                          facebook_key := 123456789#256 })\n              match maybeData with\n                | none => pure false\n                | some data =>\n                  pure\n                    (decide\n                        (mock_hmac_sha256 data.verified_msg.nonce\n                            (serialize_message_data data.verified_msg.content data.verified_msg.nonce).1 =\n                          data.message_package.franking_tag.tag) &&\n                      decide\n                        (mock_hmac_sha256 data.facebook_key\n                            (string_to_bitvec\n                              (String.append data.message_package.franking_tag.tag\n                                (bitvec_to_string (BitVec.ofNat 256 data.message_package.context.timestamp)))) =\n                          data.message_package.reporting_tag.tag))).finSupport) \u2227\n      \u2203 a,\n        true \u2208\n          (do\n              let x \u2190\n                if\n                      mock_hmac_sha256 a\n                          (serialize_message_data\n                              (deserialize_message_data ((serialize_message_data message_content a).1, a)).1 a).1 =\n                        mock_hmac_sha256 a (serialize_message_data message_content a).1 then\n                    pure\n                      (some\n                        { content := (deserialize_message_data ((serialize_message_data message_content a).1, a)).1,\n                          nonce := a })\n                  else pure none\n              let maybeData \u2190\n                match x with\n                  | none => pure none\n                  | some verified_msg =>\n                    pure\n                      (some\n                        { verified_msg := verified_msg,\n                          message_package :=\n                            {\n                              encrypted_message :=\n                                { ciphertext := mock_encrypt (serialize_message_data message_content a).1 },\n                              franking_tag :=\n                                { tag := mock_hmac_sha256 a (serialize_message_data message_content a).1 },\n                              reporting_tag :=\n                                {\n                                  tag :=\n                                    mock_hmac_sha256 (123456789#256)\n                                      (string_to_bitvec\n                                        (String.append (mock_hmac_sha256 a (serialize_message_data message_content a).1)\n                                          (bitvec_to_string 1730230302#256))) },\n                              context :=\n                                { sender_id := 1001#256, recipient_id := 1002#256, timestamp := 1730230302,\n                                  message_id := 123 },\n                              nonce := a },\n                          facebook_key := 123456789#256 })\n              match maybeData with\n                | none => pure false\n                | some data =>\n                  pure\n                    (decide\n                        (mock_hmac_sha256 data.verified_msg.nonce\n                            (serialize_message_data data.verified_msg.content data.verified_msg.nonce).1 =\n                          data.message_package.franking_tag.tag) &&\n                      decide\n                        (mock_hmac_sha256 data.facebook_key\n                            (string_to_bitvec\n                              (String.append data.message_package.franking_tag.tag\n                                (bitvec_to_string (BitVec.ofNat 256 data.message_package.context.timestamp)))) =\n                          data.message_package.reporting_tag.tag))).finSupport",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/Examples/FrankingProtocol.lean#L257"
      },
      "metadata": {
        "blame_email_hash": "f78b4540360d",
        "blame_date": "2025-02-05T21:14:45-06:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "bcd4051753ab4a47401d28b4ecb70d0087e407469070f7ba79c59c75af111da4"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 269,
        "start_column": 2,
        "end_line": 269,
        "end_column": 7,
        "file": "Examples/FrankingProtocol.lean"
      },
      "debug_info": {
        "goal": "message_content : String\n\u22a2 (do\n      let x \u2190 $\u1d57BitVec 256\n      let x_1 \u2190\n        if\n              mock_hmac_sha256 x\n                  (serialize_message_data (deserialize_message_data ((serialize_message_data message_content x).1, x)).1\n                      x).1 =\n                mock_hmac_sha256 x (serialize_message_data message_content x).1 then\n            pure\n              (some\n                { content := (deserialize_message_data ((serialize_message_data message_content x).1, x)).1,\n                  nonce := x })\n          else pure none\n      let maybeData \u2190\n        match x_1 with\n          | none => pure none\n          | some verified_msg =>\n            pure\n              (some\n                { verified_msg := verified_msg,\n                  message_package :=\n                    { encrypted_message := { ciphertext := mock_encrypt (serialize_message_data message_content x).1 },\n                      franking_tag := { tag := mock_hmac_sha256 x (serialize_message_data message_content x).1 },\n                      reporting_tag :=\n                        {\n                          tag :=\n                            mock_hmac_sha256 (123456789#256)\n                              (string_to_bitvec\n                                (String.append (mock_hmac_sha256 x (serialize_message_data message_content x).1)\n                                  (bitvec_to_string 1730230302#256))) },\n                      context :=\n                        { sender_id := 1001#256, recipient_id := 1002#256, timestamp := 1730230302, message_id := 123 },\n                      nonce := x },\n                  facebook_key := 123456789#256 })\n      match maybeData with\n        | none => pure true\n        | some val => pure false).neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/Examples/FrankingProtocol.lean#L269"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-09T11:17:26-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "c3abf5598c462e9cb91771b56967bfaa399f0259044e3f9166caf4018a78d420"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 290,
        "start_column": 2,
        "end_line": 290,
        "end_column": 7,
        "file": "Examples/FrankingProtocol.lean"
      },
      "debug_info": {
        "goal": "facebook_key : BitVec 256\nmessage_content : String\ncontext : Context\n\u22a2 (do\n      let nonce \u2190 $\u1d57BitVec 256\n      if\n            mock_hmac_sha256 nonce\n                (serialize_message_data\n                    (deserialize_message_data ((serialize_message_data message_content nonce).1, nonce)).1 nonce).1 =\n              mock_hmac_sha256 nonce (serialize_message_data message_content nonce).1 then\n          pure\n            (some\n              { content := (deserialize_message_data ((serialize_message_data message_content nonce).1, nonce)).1,\n                nonce := nonce })\n        else pure none).neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/Examples/FrankingProtocol.lean#L290"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-09T11:17:26-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "1671786493bbba2092a04daebb3b915996f34064cd446645f6c70db58c2bcce6"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 47,
        "start_column": 2,
        "end_line": 47,
        "end_column": 7,
        "file": "Examples/HHS_Elgamal.lean"
      },
      "debug_info": {
        "goal": "G P : Type\ninst\u271d\u2075 : SelectableType G\ninst\u271d\u2074 : SelectableType P\ninst\u271d\u00b3 : AddCommGroup G\ninst\u271d\u00b2 : Group P\ninst\u271d\u00b9 : AddTorsor G P\ninst\u271d : DecidableEq P\nthis : \u2200 (msg x : P) (g\u2081 g\u2082 : G), msg * (g\u2082 +\u1d65 g\u2081 +\u1d65 x) / (g\u2081 +\u1d65 g\u2082 +\u1d65 x) = msg\n\u22a2 neverFails do\n    let _ \u2190 $\u1d57P\n    let _ \u2190 $\u1d57G\n    (fun a => ()) <$> ($\u1d57G)",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/Examples/HHS_Elgamal.lean#L47"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "d62c51b55e9bfd80b2c575cd83c636e421ff71f77d1ddcd0059d346fbba7e09b"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 71,
        "start_column": 4,
        "end_line": 71,
        "end_column": 9,
        "file": "VCVio/OracleComp/Traversal.lean"
      },
      "debug_info": {
        "goal": "case query_bind\n\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type v\nQ : {\u03b1 : Type v} \u2192 spec.OracleQuery \u03b1 \u2192 Prop\nF : Prop\npossible_outputs : {\u03b1 : Type v} \u2192 spec.OracleQuery \u03b1 \u2192 Set \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\ni : \u03b9\nt : spec.domain i\noa : spec.range i \u2192 OracleComp spec \u03b1\nh :\n  \u2200 (u : spec.range i),\n    allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa u >>= ob) \u2194\n      allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa u) \u2227\n        \u2200 x \u2208 (oa u).supportWhen fun {\u03b1} => possible_outputs,\n          allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (ob x)\n\u22a2 (Q (query i t) \u2227\n      \u2200 x \u2208 possible_outputs (query i t),\n        allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa x) \u2227\n          \u2200 x_1 \u2208 OracleComp.construct (fun x => {x}) (fun {\u03b2} q oa f => \u22c3 u \u2208 possible_outputs q, f u) \u2205 (oa x),\n            allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (ob x_1)) \u2194\n    (Q (query i t) \u2227\n        \u2200 x \u2208 possible_outputs (query i t), allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa x)) \u2227\n      \u2200 (x : \u03b1),\n        \u2200 x_1 \u2208 possible_outputs (query i t),\n          x \u2208 OracleComp.construct (fun x => {x}) (fun {\u03b2} q oa f => \u22c3 u \u2208 possible_outputs q, f u) \u2205 (oa x_1) \u2192\n            allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (ob x)",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/OracleComp/Traversal.lean#L71"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "028569e91b433553ca2b9eb85b2eaab247371e7cb654d121c39a26895d4f6354"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 112,
        "start_column": 36,
        "end_line": 112,
        "end_column": 41,
        "file": "VCVio/OracleComp/Traversal.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type v\n\u03b9' : Type u_1\nspec' : OracleSpec \u03b9'\noa : OracleComp spec \u03b1\npossible_outputs : {\u03b1 : Type v} \u2192 spec.OracleQuery \u03b1 \u2192 Set \u03b1\nh : oa.neverFailsWhen fun {\u03b1} => possible_outputs\nso : QueryImpl spec (OracleComp spec')\nh' : \u2200 {\u03b1 : Type v} (q : spec.OracleQuery \u03b1), (so.impl q).support \u2286 possible_outputs q\nhso : \u2200 {\u03b1 : Type v} (q : spec.OracleQuery \u03b1), (so.impl q).neverFails\n\u22a2 (simulateQ so oa).neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/OracleComp/Traversal.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "1441bd14124290bbaf7ffff58de5ec0da8b9e04a20326eac71ab14381471747f"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 49,
        "start_column": 2,
        "end_line": 49,
        "end_column": 7,
        "file": "VCVio/OracleComp/QueryBound.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\ninst\u271d\u00b9 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\n\u03b1 : Type u\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\n\u22a2 (\u2200 (qc : spec.QueryCount) (x : \u03b1), (x, qc) \u2208 (simulateQ countingOracle oa).run.support \u2192 qc \u2264 qb) \u2194\n    \u2200 x \u2208 (snd <$> (simulateQ countingOracle oa).run <|> pure 0).support, x \u2264 qb",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/OracleComp/QueryBound.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "2d290f74cf53d9aa9b2a1cce8d2fa96491c9ab3841acec35f58f1f480b1824fe"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 29,
        "start_column": 2,
        "end_line": 29,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 \u03b2 \u03b3 : Type\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\noc : \u03b1 \u2192 OracleComp spec \u03b3\nh : \u2200 x \u2208 oa.support, [\u22a5|ob x] = [\u22a5|oc x]\n\u22a2 [\u22a5|oa >>= ob] = [\u22a5|oa >>= oc]",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/CryptoFoundations/Fork.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "18c2749fdd7f51f571567d74ebfa131539ceccf121b81c51d58de20de1018838"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 34,
        "start_column": 2,
        "end_line": 34,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 \u03b2 \u03b3 : Type\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\noc : \u03b1 \u2192 OracleComp spec \u03b3\nh : \u2200 (x : \u03b1), [\u22a5|ob x] = [\u22a5|oc x]\n\u22a2 [\u22a5|oa >>= ob] = [\u22a5|oa >>= oc]",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/CryptoFoundations/Fork.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "ec859e79a2fabf8ae5f1c9a61d5a12d9eba4eb03f2d10ff1399b1cb428df0c0d"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 41,
        "start_column": 4,
        "end_line": 41,
        "end_column": 9,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 \u03b2 \u03b3 : Type\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\n\u03c3 : Type u_1\ns : Finset \u03c3\noc : \u03c3 \u2192 \u03b1 \u2192 OracleComp spec \u03b3\n\u22a2 [\u22a5|oa >>= ob] = \u2211 x \u2208 s, [\u22a5|oa >>= oc x]",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/CryptoFoundations/Fork.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "e5378a43927e1f7b6e1e218cf44de0a319cc891b242fadcdd80334c6c900f988"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 80,
        "start_column": 75,
        "end_line": 80,
        "end_column": 80,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Fin (qb i + 1)\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 [fun x =>\n      match x with\n      | (x\u2081, x\u2082) => cf x\u2081 = some s \u2227 cf x\u2082 = some s|main.fork' qb js i cf] =\n    [=(some s, some s)|Prod.map cf cf <$> main.fork' qb js i cf]",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/CryptoFoundations/Fork.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "2b9035f513076bdbbab943e6a5807885def998737422c2257536c6b68f53baa0"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 89,
        "start_column": 36,
        "end_line": 89,
        "end_column": 41,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Fin (qb i + 1)\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 [=(some s, some s)|Prod.map cf cf <$> main.fork' qb js i cf] =\n    [=(some s, some s)|do\n      let seed \u2190 liftM (generateSeed spec qb js)\n      let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n      let u \u2190 liftM ($\u1d57spec.range i)\n      _root_.guard ((seed i)[s + 1]? \u2260 some u)\n      let seed' : spec.QuerySeed := (seed.takeAtIndex i \u2191s).addValue i u\n      let x\u2082 \u2190 (simulateQ seededOracle main).run seed'\n      pure (cf x\u2081, cf x\u2082)]",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/CryptoFoundations/Fork.lean#L89"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "794cab0bb33a11ba51da589449763d672d48262520710f43b84c289f800504ef"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 103,
        "start_column": 29,
        "end_line": 103,
        "end_column": 34,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Fin (qb i + 1)\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 [=(some s, some s)|do\n      let seed \u2190 liftM (generateSeed spec qb js)\n      let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n      let u \u2190 liftM ($\u1d57spec.range i)\n      _root_.guard ((seed i)[s + 1]? \u2260 some u)\n      let seed' : spec.QuerySeed := (seed.takeAtIndex i \u2191s).addValue i u\n      let x\u2082 \u2190 (simulateQ seededOracle main).run seed'\n      pure (cf x\u2081, cf x\u2082)] \u2265\n    [=(some s, some s)|do\n        let seed \u2190 liftM (generateSeed spec qb js)\n        let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n        let u \u2190 liftM ($\u1d57spec.range i)\n        let seed' : spec.QuerySeed := (seed.takeAtIndex i \u2191s).addValue i u\n        let x\u2082 \u2190 (simulateQ seededOracle main).run seed'\n        pure (cf x\u2081, cf x\u2082)] -\n      [=some s|do\n        let seed \u2190 liftM (generateSeed spec qb js)\n        let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n        let u \u2190 liftM ($\u1d57spec.range i)\n        _root_.guard ((seed i)[s + 1]? = some u)\n        pure (cf x\u2081)]",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/CryptoFoundations/Fork.lean#L103"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "b05286afc9a198ebb5a896bf61f62166a4a2cd8fdfa20d83f7007b48217f497b"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 113,
        "start_column": 33,
        "end_line": 113,
        "end_column": 38,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Fin (qb i + 1)\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 [=(some s, some s)|do\n        let seed \u2190 liftM (generateSeed spec qb js)\n        let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n        let u \u2190 liftM ($\u1d57spec.range i)\n        let seed' : spec.QuerySeed := (seed.takeAtIndex i \u2191s).addValue i u\n        let x\u2082 \u2190 (simulateQ seededOracle main).run seed'\n        pure (cf x\u2081, cf x\u2082)] -\n      [=some s|do\n        let seed \u2190 liftM (generateSeed spec qb js)\n        let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n        let u \u2190 liftM ($\u1d57spec.range i)\n        _root_.guard ((seed i)[s + 1]? = some u)\n        pure (cf x\u2081)] =\n    [=(some s, some s)|do\n        let shared_seed \u2190 liftM (generateSeed spec (update qb i q) js)\n        let x\u2081 \u2190 (simulateQ seededOracle main).run shared_seed\n        let x\u2082 \u2190 (simulateQ seededOracle main).run shared_seed\n        pure (cf x\u2081, cf x\u2082)] -\n      [=some s|do\n          let seed \u2190 liftM (generateSeed spec qb js)\n          let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n          pure (cf x\u2081)] /\n        h",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/CryptoFoundations/Fork.lean#L113"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "2cebe8b5afe3baeac18fb2147b9ff6729f05f6bb8a8d352a5635a79f2b6d169a"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 114,
        "start_column": 71,
        "end_line": 114,
        "end_column": 76,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Fin (qb i + 1)\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 [=(some s, some s)|do\n        let shared_seed \u2190 liftM (generateSeed spec (update qb i q) js)\n        let x\u2081 \u2190 (simulateQ seededOracle main).run shared_seed\n        let x\u2082 \u2190 (simulateQ seededOracle main).run shared_seed\n        pure (cf x\u2081, cf x\u2082)] -\n      [=some s|do\n          let seed \u2190 liftM (generateSeed spec qb js)\n          let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n          pure (cf x\u2081)] /\n        h \u2265\n    [=some s|cf <$> main] ^ 2 - [=some s|cf <$> main] / h",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/CryptoFoundations/Fork.lean#L114"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "cfdfcaf7e8355bfac07ed4d20024ead3a77fb451b289c87c1e67fb20fb2280f7"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 126,
        "start_column": 6,
        "end_line": 126,
        "end_column": 11,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := 1 - [=none|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 [\u22a5|main.fork' qb js i cf] = 1 - \u2211 s, [=(s, s)|Prod.map cf cf <$> main.fork' qb js i cf]",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/CryptoFoundations/Fork.lean#L126"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "2ea0aae4eec6a87fe04180e8c645541a96710a06fe00dc670a94b7226a2460b1"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 128,
        "start_column": 6,
        "end_line": 128,
        "end_column": 11,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := 1 - [=none|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 - \u2211 s, [=(s, s)|Prod.map cf cf <$> main.fork' qb js i cf] \u2264 1 - \u2211 s, ([=s|cf <$> main] ^ 2 - [=s|cf <$> main] / h)",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/CryptoFoundations/Fork.lean#L128"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "59d09e6eeb461ffac490629138258c449f7f985a13796b2a4616fa0151dfa095"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 130,
        "start_column": 6,
        "end_line": 130,
        "end_column": 11,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := 1 - [=none|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 - \u2211 s, ([=s|cf <$> main] ^ 2 - [=s|cf <$> main] / h) = 1 - \u2211 s, [=s|cf <$> main] ^ 2 - \u2211 s, [=s|cf <$> main] / h",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/CryptoFoundations/Fork.lean#L130"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "fc61457325fc48b32e8408e6710537ce4f0d2f956b6bde66ea31d8d264e54a30"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 132,
        "start_column": 6,
        "end_line": 132,
        "end_column": 11,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := 1 - [=none|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 - \u2211 s, [=s|cf <$> main] ^ 2 - \u2211 s, [=s|cf <$> main] / h \u2264\n    1 - (\u2211 s, [=s|cf <$> main]) ^ 2 / \u2191q - (\u2211 s, [=s|cf <$> main]) / h",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/CryptoFoundations/Fork.lean#L132"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "610d5aed58d7b3e8a1f2b66155e5be92e469fdb84112dd37af42ff08f2ce36a9"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 134,
        "start_column": 6,
        "end_line": 134,
        "end_column": 11,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := 1 - [=none|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 - (\u2211 s, [=s|cf <$> main]) ^ 2 / \u2191q - (\u2211 s, [=s|cf <$> main]) / h \u2264 1 - acc ^ 2 / \u2191q + acc / h",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/CryptoFoundations/Fork.lean#L134"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "caf0832b6ab647a41ac5374b62168dd0e65c7435c281e8e02d9eb77c8d533565"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 136,
        "start_column": 6,
        "end_line": 136,
        "end_column": 11,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := 1 - [=none|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 - acc ^ 2 / \u2191q + acc / h = 1 - acc * (acc / \u2191q - h\u207b\u00b9)",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/CryptoFoundations/Fork.lean#L136"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "bd5cfcdbe220c39a2a92b1835ac02fd6328dec183721022900ba38267737a787"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 147,
        "start_column": 2,
        "end_line": 147,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nx\u2081 x\u2082 : \u03b1\nh : (x\u2081, x\u2082) \u2208 (main.fork' qb js i cf).support\n\u22a2 \u2203 s,\n    cf x\u2081 = some s \u2227\n      cf x\u2082 = some s \u2227\n        \u2203 log\u2081,\n          \u2203 (hcf\u2081 : \u2191s < log\u2081.countQ i),\n            \u2203 log\u2082,\n              \u2203 (hcf\u2081_1 : \u2191s < log\u2082.countQ i),\n                (log\u2081.getQ i)[s].1 = (log\u2082.getQ i)[s].1 \u2227\n                  (log\u2081.getQ i)[s].2 \u2260 (log\u2082.getQ i)[s].2 \u2227\n                    (x\u2081, log\u2081) \u2208 (simulateQ loggingOracle main).run.support \u2227\n                      (x\u2082, log\u2082) \u2208 (simulateQ loggingOracle main).run.support",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/CryptoFoundations/Fork.lean#L147"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "421bdc04b400353135012116ea9b9c95ba5239e3473024734bae2f2c5a1c8f6a"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 66,
        "start_column": 2,
        "end_line": 66,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/SymmEncAlg.lean"
      },
      "debug_info": {
        "goal": "m : Type \u2192 Type v\nM K C : Type\ninst\u271d\u2075 : AlternativeMonad m\ninst\u271d\u2074 : LawfulAlternative m\ninst\u271d\u00b3 : Fintype M\ninst\u271d\u00b2 : Fintype K\ninst\u271d\u00b9 : Fintype C\nencAlg : SymmEncAlg m M K C\ninst\u271d : encAlg.Complete\nh1 : Fintype.card M = Fintype.card K\nh2 : Fintype.card K = Fintype.card C\n\u22a2 encAlg.perfectSecrecy \u2194\n    (\u2200 (k : K), [=k|encAlg.exec encAlg.keygen] = (\u2191(Fintype.card K))\u207b\u00b9) \u2227\n      \u2200 (m_1 : M) (c : m C), \u2203! k, k \u2208 support (encAlg.exec encAlg.keygen) \u2227 encAlg.encrypt k m_1 = c",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/CryptoFoundations/SymmEncAlg.lean#L66"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "38e0d6b99c01c6cfb7de245f4c12c4f3ada896a25dbfbad3f98da9093b661114"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 79,
        "start_column": 29,
        "end_line": 79,
        "end_column": 34,
        "file": "VCVio/CryptoFoundations/FiatShamir.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\n\u03c3 X W PC SC \u03a9 P : Type\np : X \u2192 W \u2192 Bool\ninst\u271d\u2075 : SelectableType X\ninst\u271d\u2074 : SelectableType W\ninst\u271d\u00b3 : DecidableEq PC\ninst\u271d\u00b2 : DecidableEq \u03a9\ninst\u271d\u00b9 : SelectableType \u03a9\nsigmaAlg : SigmaAlg X W PC SC \u03a9 P p\nhr : GenerableRelation X W p\nM : Type\ninst\u271d : DecidableEq M\n\u03b1\u271d : Type\nc : ProbComp \u03b1\u271d\n\u22a2 (fun {\u03b1} comp =>\n        let so := idOracle ++\u209b\u2092 randomOracle;\n        (simulateQ so comp).run' \u2205)\n      ((fun {\u03b1} => monadLift) c) =\n    c",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/CryptoFoundations/FiatShamir.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "c2b60f1ebfca2a1bb9196bcd8c3067e0d6ba8bc3b998bf6964a6584a9cd25369"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 79,
        "start_column": 2,
        "end_line": 79,
        "end_column": 7,
        "file": "VCVio/OracleComp/Coercions/SubSpec.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\n\u03c4 : Type v\nspec : OracleSpec \u03b9\nsuperSpec : OracleSpec \u03c4\n\u03b1 : Type w\nh : MonadLift spec.OracleQuery superSpec.OracleQuery\ninst\u271d\u2074 : spec.DecidableEq\ninst\u271d\u00b3 : superSpec.DecidableEq\ninst\u271d\u00b2 : superSpec.FiniteRange\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : Fintype \u03b1\nq : spec.OracleQuery \u03b1\n\u22a2 (liftM (MonadLift.monadLift q)).finSupport = Finset.univ",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/OracleComp/Coercions/SubSpec.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "92374818f5719e3f1264409555bfdb04bcc797f0daf0da5bfd902fbe1cf7e879"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 186,
        "start_column": 2,
        "end_line": 186,
        "end_column": 7,
        "file": "VCVio/OracleComp/Coercions/SubSpec.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\n\u03c4 : Type v\nspec : OracleSpec \u03b9\n\u03b1 : Type w\nsuperSpec : OracleSpec \u03c4\nh : MonadLift spec.OracleQuery superSpec.OracleQuery\noa : OracleComp spec \u03b1\n\u22a2 (simulateQ { impl := fun {\u03b1} => liftM } oa).neverFails \u2194 oa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/OracleComp/Coercions/SubSpec.lean#L186"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "d5c198bd02744e72c6d3f6886b327e00a21cb84315355c44cf61c05518b7ecea"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 69,
        "start_column": 53,
        "end_line": 69,
        "end_column": 58,
        "file": "VCVio/OracleComp/QueryTracking/CountingOracle.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\ninst\u271d : DecidableEq \u03b9\nspec : OracleSpec \u03b9\n\u03b1 : Type u\noa : OracleComp spec \u03b1\n\u22a2 \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (countingOracle.impl q).run.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/OracleComp/QueryTracking/CountingOracle.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "c855ccff069220fabde555846b26a27da22f59cd8de12920b09a68e893e57935"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 72,
        "start_column": 53,
        "end_line": 72,
        "end_column": 58,
        "file": "VCVio/OracleComp/QueryTracking/LoggingOracle.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type u\noa : OracleComp spec \u03b1\n\u22a2 \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (loggingOracle.impl q).run.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/OracleComp/QueryTracking/LoggingOracle.lean#L72"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "ddbd0a1882d30160ef3fef4eefebbb1194ed4ec0640119b4439d7cebc6b14149"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 280,
        "start_column": 2,
        "end_line": 280,
        "end_column": 7,
        "file": "VCVio/OracleComp/Constructions/UniformSelect.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type\nh\u03b1 : SelectableType \u03b1\n\u22a2 neverFails ($\u1d57\u03b1)",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/OracleComp/Constructions/UniformSelect.lean#L280"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "42d2cc17c16fbc69bf3006bfd96dfe2d05830d063de47bf39d7fe42a01f7f034"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 76,
        "start_column": 2,
        "end_line": 76,
        "end_column": 7,
        "file": "VCVio/OracleComp/Constructions/GenerateSeed.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b9 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d : (i : \u03b9) \u2192 SelectableType (spec.range i)\nqc : \u03b9 \u2192 \u2115\nj : \u03b9\njs : List \u03b9\n\u22a2 (do\n      let x \u2190 replicate (qc j) ($\u1d57spec.range j)\n      forIn js (QuerySeed.addValues x fun x => []) fun j r =>\n          replicate (qc j) ($\u1d57spec.range j) >>= pure \u2218 fun a => ForInStep.yield (QuerySeed.addValues a r)) =\n    do\n    let _ \u2190 replicate (qc j) ($\u1d57spec.range j)\n    forIn js (fun x => []) fun j r =>\n        replicate (qc j) ($\u1d57spec.range j) >>= pure \u2218 fun a => ForInStep.yield (QuerySeed.addValues a r)",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/OracleComp/Constructions/GenerateSeed.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-01-16T01:24:48-06:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "2776afdf637a6d1872ccd5aecedcbfd35ad0ace469977feec50555541bf0449a"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 85,
        "start_column": 2,
        "end_line": 85,
        "end_column": 7,
        "file": "VCVio/OracleComp/Constructions/GenerateSeed.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b9 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d : (i : \u03b9) \u2192 SelectableType (spec.range i)\nqc : \u03b9 \u2192 \u2115\njs : List \u03b9\n\u22a2 support (generateSeed spec qc js) = {seed | \u2200 (i : \u03b9), (seed i).length = qc i * List.count i js}",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/OracleComp/Constructions/GenerateSeed.lean#L85"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2024-12-05T21:45:03-06:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "16f71625d737fb16526b29342ef5fdc00aa138038d44012f39bc760c8b3e011f"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 128,
        "start_column": 4,
        "end_line": 128,
        "end_column": 9,
        "file": "VCVio/OracleComp/Constructions/GenerateSeed.lean"
      },
      "debug_info": {
        "goal": "case append_singleton\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b9 : (i : \u03b9) \u2192 SelectableType (spec.range i)\nqc : \u03b9 \u2192 \u2115\njs\u271d : List \u03b9\ninst\u271d : spec.FiniteRange\nj : List \u03b9\njs : \u03b9\nhjs :\n  \u2200 seed \u2208 support (generateSeed spec qc j),\n    [=seed|generateSeed spec qc j] = 1 / \u2191(List.map (fun j => Fintype.card (spec.range j) ^ qc j) j).prod\nseed : spec.QuerySeed\nhs : seed \u2208 support (generateSeed spec qc (j ++ [js]))\n\u22a2 [=seed|do\n      let a \u2190\n        foldlM\n            (fun b a =>\n              match b with\n              | ForInStep.yield b =>\n                (fun a_1 => ForInStep.yield (QuerySeed.addValues a_1 b)) <$> replicate (qc a) ($\u1d57spec.range a)\n              | ForInStep.done b => pure (ForInStep.done b))\n            (ForInStep.yield fun x => []) j\n      ForInStep.value <$>\n          match a with\n          | ForInStep.yield b =>\n            (fun a => ForInStep.yield (QuerySeed.addValues a b)) <$> replicate (qc js) ($\u1d57spec.range js)\n          | ForInStep.done b => pure (ForInStep.done b)] =\n    ((List.map (Nat.cast \u2218 fun j => Fintype.card (spec.range j) ^ qc j) j).prod *\n        \u2191(Fintype.card (spec.range js)) ^ qc js)\u207b\u00b9",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/OracleComp/Constructions/GenerateSeed.lean#L128"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-01-16T01:24:48-06:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "0d6551c951715a202c205a3a9c61d47647857796bd2ccd1e3a3725c34cdfdde8"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 721,
        "start_column": 83,
        "end_line": 721,
        "end_column": 88,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\ns : \u211d\u22650\u221e\nh' : [\u22a5|oa] = s\nob : \u03b1 \u2192 OracleComp spec \u03b2\nr : \u211d\u22650\u221e\nhr : \u2200 x \u2208 oa.support, [\u22a5|ob x] \u2264 r\n\u22a2 [\u22a5|oa >>= ob] \u2264 s + (1 - s) * r",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/OracleComp/DistSemantics/EvalDist.lean#L721"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "1066bc13b2da52c2a9e65d4a3e728b6312df3d661975d9b729a41f60a9edcbd9"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 727,
        "start_column": 73,
        "end_line": 727,
        "end_column": 78,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\ns : \u211d\u22650\u221e\nh' : [\u22a5|oa] = s\nob : \u03b1 \u2192 OracleComp spec \u03b2\nr : \u211d\u22650\u221e\nhr : \u2200 x \u2208 oa.support, [\u22a5|ob x] \u2264 r\n\u22a2 [\u22a5|oa >>= ob] \u2264 s + r",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/OracleComp/DistSemantics/EvalDist.lean#L727"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "ccc70f34e4ba10458635206eae8b91d035bd3e12c466145f6e53bd9a9866e3a3"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 732,
        "start_column": 69,
        "end_line": 732,
        "end_column": 74,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nh' : oa.neverFails\nob : \u03b1 \u2192 OracleComp spec \u03b2\nr : \u211d\u22650\u221e\nhr : \u2200 x \u2208 oa.support, [\u22a5|ob x] \u2264 r\n\u22a2 [\u22a5|oa >>= ob] \u2264 r",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/OracleComp/DistSemantics/EvalDist.lean#L732"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "887dbd6a108577c5739f54afc2ce21d0159a1badf785b3326b12a67e81d4e5be"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 736,
        "start_column": 59,
        "end_line": 736,
        "end_column": 64,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nh : oa.neverFails\nob : \u03b1 \u2192 OracleComp spec \u03b2\n\u22a2 [\u22a5|oa >>= ob] = \u2211' (x : \u03b1), [=x|oa] * [\u22a5|ob x]",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/OracleComp/DistSemantics/EvalDist.lean#L736"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "83199b15c57727ea3eee2f7a5045130eeb8790567f2e4eca6caabbe0c6845741"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 928,
        "start_column": 2,
        "end_line": 928,
        "end_column": 7,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\n\u22a2 [\u22a5|oa] = 0 \u2194 oa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/OracleComp/DistSemantics/EvalDist.lean#L928"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "b08d4a2bab95736857ce6338944a1b75be9d0a3c812058c3a6c51b73c4b9b0e8"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 936,
        "start_column": 2,
        "end_line": 936,
        "end_column": 7,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\n\u22a2 0 < [\u22a5|oa] \u2194 \u00acoa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/OracleComp/DistSemantics/EvalDist.lean#L936"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "b11f611b8809dccdefbee5e4752833effe2d2d4e25d83a4bd081c560752872a2"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 26,
        "start_column": 35,
        "end_line": 26,
        "end_column": 40,
        "file": "VCVio/OracleComp/DistSemantics/Alternative.lean"
      },
      "debug_info": {
        "goal": "case pure\n\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type v\nh : spec.FiniteRange\noa' : OracleComp spec \u03b1\nx : \u03b1\n\u22a2 (pure x <|> oa').evalDist = (pure x <|> oa'.evalDist)",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/OracleComp/DistSemantics/Alternative.lean#L26"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-16T14:51:55-04:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "9287d1fafd34e8cb4948b8c9129cfecf3fcba948f43d65303892e5e25fb10e53"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 29,
        "start_column": 4,
        "end_line": 29,
        "end_column": 9,
        "file": "VCVio/OracleComp/DistSemantics/Alternative.lean"
      },
      "debug_info": {
        "goal": "case query_bind\n\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type v\nh\u271d : spec.FiniteRange\noa' : OracleComp spec \u03b1\ni : \u03b9\nt : spec.domain i\noa : spec.range i \u2192 OracleComp spec \u03b1\nh : \u2200 (u : spec.range i), (oa u <|> oa').evalDist = ((oa u).evalDist <|> oa'.evalDist)\n\u22a2 (liftM (OracleSpec.query i t) >>= oa <|> oa').evalDist =\n    ((liftM (OracleSpec.query i t) >>= oa).evalDist <|> oa'.evalDist)",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/OracleComp/DistSemantics/Alternative.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "d5be69db053002b53e73c9ad60af383ac5cf92ba5350c05354a0986418d89657"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 52,
        "start_column": 2,
        "end_line": 52,
        "end_column": 7,
        "file": "VCVio/OracleComp/DistSemantics/Alternative.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type u\noa oa' : OracleComp spec \u03b1\ninst\u271d : Decidable oa.neverFails\n\u22a2 (oa <|> oa').support = if oa.neverFails then oa.support else oa.support \u222a oa'.support",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/OracleComp/DistSemantics/Alternative.lean#L52"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "7c3019adc7190de9b74f0786f8e527d7e42d37a0b4b59fa539de050ada7352fc"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 170,
        "start_column": 8,
        "end_line": 170,
        "end_column": 13,
        "file": "VCVio/OracleComp/DistSemantics/List.lean"
      },
      "debug_info": {
        "goal": "case pos.append_singleton.cons\n\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type u_1\n\u03b2 : Type u_2\ninst\u271d\u00b9 : DecidableEq \u03b2\ninst\u271d : spec.FiniteRange\nf : \u03b1 \u2192 OracleComp spec \u03b2\nys zs : List \u03b2\nz : \u03b2\nh : take ys.length (zs ++ [z]) = ys.reverse\nx : \u03b1\nxs : List \u03b1\nhzs :\n  take ys.length zs = ys.reverse \u2192\n    [=drop ys.length zs|mapM.loop f (x :: xs) []] =\n      if zs.length = (x :: xs).length + ys.length then\n        (zipWith (fun x z => [=z|f x]) (x :: xs) (drop ys.length zs)).prod\n      else 0\n\u22a2 [=drop ys.length (zs ++ [z])|do\n      let __do_lift \u2190 f x\n      mapM.loop f xs [__do_lift]] =\n    if zs.length = xs.length + ys.length then\n      (zipWith (fun x z => [=z|f x]) (x :: xs) (drop ys.length (zs ++ [z]))).prod\n    else 0",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/OracleComp/DistSemantics/List.lean#L170"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-01-28T07:23:40-06:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "22499dd36d5b9ccad9f21ac82f5cd9150f5ab5d91993a7b3f75384006670ac3d"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7,
        "file": "VCVio/OracleComp/SimSemantics/StateT.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nspec : OracleSpec \u03b9\n\u03c3 : Type u\ninst\u271d : Subsingleton \u03c3\n\u03b1 : Type u\nso : QueryImpl spec (StateT \u03c3 (OracleComp spec))\nh : \u2200 (\u03b1 : Type u) (q : spec.OracleQuery \u03b1) (s : \u03c3), (so.impl q).run' s = liftM q\noa : OracleComp spec \u03b1\ns : \u03c3\n\u22a2 (simulateQ so oa).run' s = oa",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/OracleComp/SimSemantics/StateT.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "943e34cb300351f45451499ba8cd38c8bc1cd63727191f5cd1b2581e186ddb31"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 61,
        "start_column": 2,
        "end_line": 61,
        "end_column": 7,
        "file": "VCVio/OracleComp/SimSemantics/WriterT.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03c9 : Type u\ninst\u271d : Monoid \u03c9\nso : QueryImpl spec (WriterT \u03c9 (OracleComp spec))\nhso : \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (fst <$> (so.impl q).run).support = \u22a4\nhso' : \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (so.impl q).run.neverFails\noa : OracleComp spec \u03b1\n\u22a2 (simulateQ so oa).run.neverFails \u2194 oa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/VCVio/OracleComp/SimSemantics/WriterT.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "97d68e513267831328c1484d7c3e896bd12eb334fc929e8f74765ea199ea9155"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 84,
        "start_column": 4,
        "end_line": 84,
        "end_column": 9,
        "file": "ToMathlib/ProbabilityTheory/Coupling.lean"
      },
      "debug_info": {
        "goal": "case mp\n\u03b1 \u03b2 : Type u\na : \u03b1\nb : \u03b2\nc : SPMF (\u03b1 \u00d7 \u03b2)\nh1 : Prod.fst <$> c = some <$> PMF.pure a\nh2 : Prod.snd <$> c = some <$> PMF.pure b\nthis : \u2200 (x : Option \u03b1), (Prod.fst <$> c) x = (some <$> PMF.pure a) x\n\u22a2 c = pure (a, b)",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/ToMathlib/ProbabilityTheory/Coupling.lean#L84"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "e7338a351906a6ada6bc604ac987b13873905ca429534d4acb3abb002dc55bd4"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 91,
        "start_column": 13,
        "end_line": 91,
        "end_column": 18,
        "file": "ToMathlib/ProbabilityTheory/Coupling.lean"
      },
      "debug_info": {
        "goal": "case mp\n\u03b1 \u03b2 : Type u\nc : SPMF (\u03b1 \u00d7 \u03b2)\nh : c.IsCoupling OptionT.fail OptionT.fail\n\u22a2 c = OptionT.fail",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/ToMathlib/ProbabilityTheory/Coupling.lean#L91"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "e1f0ce5ae0d4c726453775af5eb5e2ef05bfb770470b6ebd8ea83a341d28d0a9"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 92,
        "start_column": 42,
        "end_line": 92,
        "end_column": 47,
        "file": "ToMathlib/ProbabilityTheory/Coupling.lean"
      },
      "debug_info": {
        "goal": "case mpr.map_fst\n\u03b1 \u03b2 : Type u\nc : SPMF (\u03b1 \u00d7 \u03b2)\nh : c = OptionT.fail\n\u22a2 Prod.fst <$> OptionT.fail = OptionT.fail",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/ToMathlib/ProbabilityTheory/Coupling.lean#L92"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "326ba414bee59ddb102ad33d599e35fd9e25edcc3099a21dee2aeb7c00de9863"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 92,
        "start_column": 42,
        "end_line": 92,
        "end_column": 47,
        "file": "ToMathlib/ProbabilityTheory/Coupling.lean"
      },
      "debug_info": {
        "goal": "case mpr.map_snd\n\u03b1 \u03b2 : Type u\nc : SPMF (\u03b1 \u00d7 \u03b2)\nh : c = OptionT.fail\n\u22a2 Prod.snd <$> OptionT.fail = OptionT.fail",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/ToMathlib/ProbabilityTheory/Coupling.lean#L92"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "4017ac0abc95619f59ea3ec46a96cf882867ada4c6385fdb0d5f7fa06983aa79"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 102,
        "start_column": 59,
        "end_line": 102,
        "end_column": 64,
        "file": "ToMathlib/ProbabilityTheory/Coupling.lean"
      },
      "debug_info": {
        "goal": "case mk.map_fst.e_a.h\n\u03b1\u2081 \u03b1\u2082 \u03b2\u2081 \u03b2\u2082 : Type u\np : SPMF \u03b1\u2081\nq : SPMF \u03b1\u2082\nf : \u03b1\u2081 \u2192 SPMF \u03b2\u2081\ng : \u03b1\u2082 \u2192 SPMF \u03b2\u2082\nc : p.Coupling q\nd : \u03b1\u2081 \u2192 \u03b1\u2082 \u2192 SPMF (\u03b2\u2081 \u00d7 \u03b2\u2082)\nh : \u2200 (a\u2081 : \u03b1\u2081) (a\u2082 : \u03b1\u2082), \u2191\u2191c (some (a\u2081, a\u2082)) \u2260 0 \u2192 (d a\u2081 a\u2082).IsCoupling (f a\u2081) (g a\u2082)\nhc\u2081 : Prod.fst <$> \u2191c = p\nhc\u2082 : Prod.snd <$> \u2191c = q\na\u2081 : \u03b1\u2081\na\u2082 : \u03b1\u2082\nthis : \u2191\u2191c (some (a\u2081, a\u2082)) \u2260 0 \u2192 (d a\u2081 a\u2082).IsCoupling (f a\u2081) (g a\u2082)\n\u22a2 Prod.fst <$> d (a\u2081, a\u2082).1 (a\u2081, a\u2082).2 = f (a\u2081, a\u2082).1",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/ToMathlib/ProbabilityTheory/Coupling.lean#L102"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "546c6db79ac37730f5c79aa108f148da6dec2accadef0a356e77c40dcf248c3d"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 103,
        "start_column": 18,
        "end_line": 103,
        "end_column": 23,
        "file": "ToMathlib/ProbabilityTheory/Coupling.lean"
      },
      "debug_info": {
        "goal": "case mk.map_snd\n\u03b1\u2081 \u03b1\u2082 \u03b2\u2081 \u03b2\u2082 : Type u\np : SPMF \u03b1\u2081\nq : SPMF \u03b1\u2082\nf : \u03b1\u2081 \u2192 SPMF \u03b2\u2081\ng : \u03b1\u2082 \u2192 SPMF \u03b2\u2082\nc : p.Coupling q\nd : \u03b1\u2081 \u2192 \u03b1\u2082 \u2192 SPMF (\u03b2\u2081 \u00d7 \u03b2\u2082)\nh : \u2200 (a\u2081 : \u03b1\u2081) (a\u2082 : \u03b1\u2082), \u2191\u2191c (some (a\u2081, a\u2082)) \u2260 0 \u2192 (d a\u2081 a\u2082).IsCoupling (f a\u2081) (g a\u2082)\nhc\u2081 : Prod.fst <$> \u2191c = p\nhc\u2082 : Prod.snd <$> \u2191c = q\n\u22a2 (do\n      let a \u2190 \u2191c\n      Prod.snd <$> d a.1 a.2) =\n    do\n    let a \u2190 \u2191c\n    g a.2",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/ToMathlib/ProbabilityTheory/Coupling.lean#L103"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "d2f4c12e02c5433543888d87afaa1cb3c54b1056b064214ffcc5a5d244cab457"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "1edf6f4241008625012fcd4989b097811bca17f2",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 95,
        "start_column": 39,
        "end_line": 95,
        "end_column": 44,
        "file": "ToMathlib/Control/WriterT.lean"
      },
      "debug_info": {
        "goal": "m : Type u \u2192 Type v\ninst\u271d\u00b3 : AlternativeMonad m\n\u03c9 \u03b1 \u03b2 \u03b3 : Type u\ninst\u271d\u00b2 : Monoid \u03c9\ninst\u271d\u00b9 : LawfulMonad m\ninst\u271d : LawfulAlternative m\n\u22a2 LawfulAlternative (WriterT \u03c9 m)",
        "url": "https://github.com/dtumad/VCV-io/blob/1edf6f4241008625012fcd4989b097811bca17f2/ToMathlib/Control/WriterT.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:31:28.202612+00:00"
      },
      "id": "3bf3e7a5f002b9252a3e33488a17b09dc04b1de46aafa1bab6839c372b8d366a"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 43,
        "start_column": 2,
        "end_line": 43,
        "end_column": 7,
        "file": "Examples/Regev.lean"
      },
      "debug_info": {
        "goal": "n m \u03c7 p : \u2115\nherr : p > 2 * \u03c7\nhp2 : p > 1\nmsg : Bool\nA : Matrix (Fin n) (Fin m) (Fin p)\ns : Vector (Fin p) n\ne : Vector (Fin (2 * \u03c7 + 1)) m\nr : Vector (Fin 2) m\n\u22a2 (if\n        (decide\n              (\u2191(s.get \u2b1d\u1d65 (Vector.ofFn (A.mulVec (Vector.map (Fin.castLE hp2) r).get)).get -\n                    ((Vector.map (Fin.castLE hp2) r).get \u2b1d\u1d65\n                        (Vector.zipWith Fin.add (Vector.ofFn (Matrix.vecMul s.get A))\n                            (Vector.map (fun t => Fin.castLE herr t - \u2191\u03c7) e)).get +\n                      \u2191(if msg = true then p / 2 else 0))) <\n                p / 4) ||\n            decide\n              (\u2191(s.get \u2b1d\u1d65 (Vector.ofFn (A.mulVec (Vector.map (Fin.castLE hp2) r).get)).get -\n                    ((Vector.map (Fin.castLE hp2) r).get \u2b1d\u1d65\n                        (Vector.zipWith Fin.add (Vector.ofFn (Matrix.vecMul s.get A))\n                            (Vector.map (fun t => Fin.castLE herr t - \u2191\u03c7) e)).get +\n                      \u2191(if msg = true then p / 2 else 0))) <\n                3 * p / 4)) =\n          msg then\n      pure ()\n    else failure).neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/Examples/Regev.lean#L43"
      },
      "metadata": {
        "blame_email_hash": "e3ee0297a915",
        "blame_date": "2025-04-14T18:14:10-04:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "7fa3c0fd59b58ded647b2b449274139fbef61f5665a060b50c0c8809aa5eb201"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 223,
        "start_column": 2,
        "end_line": 223,
        "end_column": 7,
        "file": "Examples/FrankingProtocol.lean"
      },
      "debug_info": {
        "goal": "bv : BitVec 256\n\u22a2 String.foldl (fun acc c => acc <<< 8 + BitVec.ofNat 256 c.toNat) 0#256\n      { data := bitvec_to_string.chars bv.toNat [] } =\n    bv",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/Examples/FrankingProtocol.lean#L223"
      },
      "metadata": {
        "blame_email_hash": "f78b4540360d",
        "blame_date": "2025-02-05T21:14:45-06:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "c3e29a658563580b9343fcf5505a540179d8e5e576b6c34b6be33cd30024e004"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 257,
        "start_column": 2,
        "end_line": 257,
        "end_column": 7,
        "file": "Examples/FrankingProtocol.lean"
      },
      "debug_info": {
        "goal": "message_content : String\n\u22a2 (\u2200 (x : BitVec 256),\n      (if\n              mock_hmac_sha256 x\n                  (serialize_message_data (deserialize_message_data ((serialize_message_data message_content x).1, x)).1\n                      x).1 =\n                mock_hmac_sha256 x (serialize_message_data message_content x).1 then\n            pure\n              (some\n                { content := (deserialize_message_data ((serialize_message_data message_content x).1, x)).1,\n                  nonce := x })\n          else pure none).neverFails \u2227\n        \u2200\n          x_1 \u2208\n            if\n                mock_hmac_sha256 x\n                    (serialize_message_data\n                        (deserialize_message_data ((serialize_message_data message_content x).1, x)).1 x).1 =\n                  mock_hmac_sha256 x (serialize_message_data message_content x).1 then\n              {some\n                  { content := (deserialize_message_data ((serialize_message_data message_content x).1, x)).1,\n                    nonce := x }}\n            else {none},\n          (match x_1 with\n              | none => pure none\n              | some verified_msg =>\n                pure\n                  (some\n                    { verified_msg := verified_msg,\n                      message_package :=\n                        {\n                          encrypted_message :=\n                            { ciphertext := mock_encrypt (serialize_message_data message_content x).1 },\n                          franking_tag := { tag := mock_hmac_sha256 x (serialize_message_data message_content x).1 },\n                          reporting_tag :=\n                            {\n                              tag :=\n                                mock_hmac_sha256 (123456789#256)\n                                  (string_to_bitvec\n                                    (String.append (mock_hmac_sha256 x (serialize_message_data message_content x).1)\n                                      (bitvec_to_string 1730230302#256))) },\n                          context :=\n                            { sender_id := 1001#256, recipient_id := 1002#256, timestamp := 1730230302,\n                              message_id := 123 },\n                          nonce := x },\n                      facebook_key := 123456789#256 })).neverFails \u2227\n            \u2200\n              x_2 \u2208\n                (match x_1 with\n                  | none => pure none\n                  | some verified_msg =>\n                    pure\n                      (some\n                        { verified_msg := verified_msg,\n                          message_package :=\n                            {\n                              encrypted_message :=\n                                { ciphertext := mock_encrypt (serialize_message_data message_content x).1 },\n                              franking_tag :=\n                                { tag := mock_hmac_sha256 x (serialize_message_data message_content x).1 },\n                              reporting_tag :=\n                                {\n                                  tag :=\n                                    mock_hmac_sha256 (123456789#256)\n                                      (string_to_bitvec\n                                        (String.append (mock_hmac_sha256 x (serialize_message_data message_content x).1)\n                                          (bitvec_to_string 1730230302#256))) },\n                              context :=\n                                { sender_id := 1001#256, recipient_id := 1002#256, timestamp := 1730230302,\n                                  message_id := 123 },\n                              nonce := x },\n                          facebook_key := 123456789#256 })).support,\n              (match x_2 with\n                | none => pure false\n                | some data =>\n                  pure\n                    (decide\n                        (mock_hmac_sha256 data.verified_msg.nonce\n                            (serialize_message_data data.verified_msg.content data.verified_msg.nonce).1 =\n                          data.message_package.franking_tag.tag) &&\n                      decide\n                        (mock_hmac_sha256 data.facebook_key\n                            (string_to_bitvec\n                              (String.append data.message_package.franking_tag.tag\n                                (bitvec_to_string (BitVec.ofNat 256 data.message_package.context.timestamp)))) =\n                          data.message_package.reporting_tag.tag))).neverFails) \u2227\n    (\u2200 (x : BitVec 256),\n        false \u2209\n          (do\n              let x_1 \u2190\n                if\n                      mock_hmac_sha256 x\n                          (serialize_message_data\n                              (deserialize_message_data ((serialize_message_data message_content x).1, x)).1 x).1 =\n                        mock_hmac_sha256 x (serialize_message_data message_content x).1 then\n                    pure\n                      (some\n                        { content := (deserialize_message_data ((serialize_message_data message_content x).1, x)).1,\n                          nonce := x })\n                  else pure none\n              let maybeData \u2190\n                match x_1 with\n                  | none => pure none\n                  | some verified_msg =>\n                    pure\n                      (some\n                        { verified_msg := verified_msg,\n                          message_package :=\n                            {\n                              encrypted_message :=\n                                { ciphertext := mock_encrypt (serialize_message_data message_content x).1 },\n                              franking_tag :=\n                                { tag := mock_hmac_sha256 x (serialize_message_data message_content x).1 },\n                              reporting_tag :=\n                                {\n                                  tag :=\n                                    mock_hmac_sha256 (123456789#256)\n                                      (string_to_bitvec\n                                        (String.append (mock_hmac_sha256 x (serialize_message_data message_content x).1)\n                                          (bitvec_to_string 1730230302#256))) },\n                              context :=\n                                { sender_id := 1001#256, recipient_id := 1002#256, timestamp := 1730230302,\n                                  message_id := 123 },\n                              nonce := x },\n                          facebook_key := 123456789#256 })\n              match maybeData with\n                | none => pure false\n                | some data =>\n                  pure\n                    (decide\n                        (mock_hmac_sha256 data.verified_msg.nonce\n                            (serialize_message_data data.verified_msg.content data.verified_msg.nonce).1 =\n                          data.message_package.franking_tag.tag) &&\n                      decide\n                        (mock_hmac_sha256 data.facebook_key\n                            (string_to_bitvec\n                              (String.append data.message_package.franking_tag.tag\n                                (bitvec_to_string (BitVec.ofNat 256 data.message_package.context.timestamp)))) =\n                          data.message_package.reporting_tag.tag))).finSupport) \u2227\n      \u2203 a,\n        true \u2208\n          (do\n              let x \u2190\n                if\n                      mock_hmac_sha256 a\n                          (serialize_message_data\n                              (deserialize_message_data ((serialize_message_data message_content a).1, a)).1 a).1 =\n                        mock_hmac_sha256 a (serialize_message_data message_content a).1 then\n                    pure\n                      (some\n                        { content := (deserialize_message_data ((serialize_message_data message_content a).1, a)).1,\n                          nonce := a })\n                  else pure none\n              let maybeData \u2190\n                match x with\n                  | none => pure none\n                  | some verified_msg =>\n                    pure\n                      (some\n                        { verified_msg := verified_msg,\n                          message_package :=\n                            {\n                              encrypted_message :=\n                                { ciphertext := mock_encrypt (serialize_message_data message_content a).1 },\n                              franking_tag :=\n                                { tag := mock_hmac_sha256 a (serialize_message_data message_content a).1 },\n                              reporting_tag :=\n                                {\n                                  tag :=\n                                    mock_hmac_sha256 (123456789#256)\n                                      (string_to_bitvec\n                                        (String.append (mock_hmac_sha256 a (serialize_message_data message_content a).1)\n                                          (bitvec_to_string 1730230302#256))) },\n                              context :=\n                                { sender_id := 1001#256, recipient_id := 1002#256, timestamp := 1730230302,\n                                  message_id := 123 },\n                              nonce := a },\n                          facebook_key := 123456789#256 })\n              match maybeData with\n                | none => pure false\n                | some data =>\n                  pure\n                    (decide\n                        (mock_hmac_sha256 data.verified_msg.nonce\n                            (serialize_message_data data.verified_msg.content data.verified_msg.nonce).1 =\n                          data.message_package.franking_tag.tag) &&\n                      decide\n                        (mock_hmac_sha256 data.facebook_key\n                            (string_to_bitvec\n                              (String.append data.message_package.franking_tag.tag\n                                (bitvec_to_string (BitVec.ofNat 256 data.message_package.context.timestamp)))) =\n                          data.message_package.reporting_tag.tag))).finSupport",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/Examples/FrankingProtocol.lean#L257"
      },
      "metadata": {
        "blame_email_hash": "f78b4540360d",
        "blame_date": "2025-02-05T21:14:45-06:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "de2eb31b1eaf9c614e0933cad76922ea04a52ac48adfca0b9bb396c5f6565304"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 269,
        "start_column": 2,
        "end_line": 269,
        "end_column": 7,
        "file": "Examples/FrankingProtocol.lean"
      },
      "debug_info": {
        "goal": "message_content : String\n\u22a2 \u2200 (x : BitVec 256),\n    (if\n            mock_hmac_sha256 x\n                (serialize_message_data (deserialize_message_data ((serialize_message_data message_content x).1, x)).1\n                    x).1 =\n              mock_hmac_sha256 x (serialize_message_data message_content x).1 then\n          pure\n            (some\n              { content := (deserialize_message_data ((serialize_message_data message_content x).1, x)).1, nonce := x })\n        else pure none).neverFails \u2227\n      \u2200\n        x_1 \u2208\n          if\n              mock_hmac_sha256 x\n                  (serialize_message_data (deserialize_message_data ((serialize_message_data message_content x).1, x)).1\n                      x).1 =\n                mock_hmac_sha256 x (serialize_message_data message_content x).1 then\n            {some\n                { content := (deserialize_message_data ((serialize_message_data message_content x).1, x)).1,\n                  nonce := x }}\n          else {none},\n        (match x_1 with\n            | none => pure none\n            | some verified_msg =>\n              pure\n                (some\n                  { verified_msg := verified_msg,\n                    message_package :=\n                      {\n                        encrypted_message :=\n                          { ciphertext := mock_encrypt (serialize_message_data message_content x).1 },\n                        franking_tag := { tag := mock_hmac_sha256 x (serialize_message_data message_content x).1 },\n                        reporting_tag :=\n                          {\n                            tag :=\n                              mock_hmac_sha256 (123456789#256)\n                                (string_to_bitvec\n                                  (String.append (mock_hmac_sha256 x (serialize_message_data message_content x).1)\n                                    (bitvec_to_string 1730230302#256))) },\n                        context :=\n                          { sender_id := 1001#256, recipient_id := 1002#256, timestamp := 1730230302,\n                            message_id := 123 },\n                        nonce := x },\n                    facebook_key := 123456789#256 })).neverFails \u2227\n          \u2200\n            x_2 \u2208\n              (match x_1 with\n                | none => pure none\n                | some verified_msg =>\n                  pure\n                    (some\n                      { verified_msg := verified_msg,\n                        message_package :=\n                          {\n                            encrypted_message :=\n                              { ciphertext := mock_encrypt (serialize_message_data message_content x).1 },\n                            franking_tag := { tag := mock_hmac_sha256 x (serialize_message_data message_content x).1 },\n                            reporting_tag :=\n                              {\n                                tag :=\n                                  mock_hmac_sha256 (123456789#256)\n                                    (string_to_bitvec\n                                      (String.append (mock_hmac_sha256 x (serialize_message_data message_content x).1)\n                                        (bitvec_to_string 1730230302#256))) },\n                            context :=\n                              { sender_id := 1001#256, recipient_id := 1002#256, timestamp := 1730230302,\n                                message_id := 123 },\n                            nonce := x },\n                        facebook_key := 123456789#256 })).support,\n            (match x_2 with\n              | none => pure true\n              | some val => pure false).neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/Examples/FrankingProtocol.lean#L269"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-09T11:17:26-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "e6bfa164d4994021c2f4f080dffa559bb7880ce7ab25cb3b7decf0d5f1fbbcff"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 290,
        "start_column": 2,
        "end_line": 290,
        "end_column": 7,
        "file": "Examples/FrankingProtocol.lean"
      },
      "debug_info": {
        "goal": "facebook_key : BitVec 256\nmessage_content : String\ncontext : Context\n\u22a2 \u2200 (x : BitVec 256),\n    (if\n          mock_hmac_sha256 x\n              (serialize_message_data (deserialize_message_data ((serialize_message_data message_content x).1, x)).1\n                  x).1 =\n            mock_hmac_sha256 x (serialize_message_data message_content x).1 then\n        pure\n          (some\n            { content := (deserialize_message_data ((serialize_message_data message_content x).1, x)).1, nonce := x })\n      else pure none).neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/Examples/FrankingProtocol.lean#L290"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-09T11:17:26-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "feb6d5dcff999086626119e58c5da5b4f0d17a7d29ac9a5059eda41a7f7a2148"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 47,
        "start_column": 2,
        "end_line": 47,
        "end_column": 7,
        "file": "Examples/HHS_Elgamal.lean"
      },
      "debug_info": {
        "goal": "G P : Type\ninst\u271d\u2075 : SelectableType G\ninst\u271d\u2074 : SelectableType P\ninst\u271d\u00b3 : AddCommGroup G\ninst\u271d\u00b2 : Group P\ninst\u271d\u00b9 : AddTorsor G P\ninst\u271d : DecidableEq P\nthis : \u2200 (msg x : P) (g\u2081 g\u2082 : G), msg * (g\u2082 +\u1d65 g\u2081 +\u1d65 x) / (g\u2081 +\u1d65 g\u2082 +\u1d65 x) = msg\n\u22a2 neverFails ((fun a => ()) <$> ($\u1d57G))",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/Examples/HHS_Elgamal.lean#L47"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "2573eb9e87923ab71b0eab5de14a636795dc1701dadc432f28786c53d47baa70"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 71,
        "start_column": 4,
        "end_line": 71,
        "end_column": 9,
        "file": "VCVio/OracleComp/Traversal.lean"
      },
      "debug_info": {
        "goal": "case query_bind\n\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type v\nQ : {\u03b1 : Type v} \u2192 spec.OracleQuery \u03b1 \u2192 Prop\nF : Prop\npossible_outputs : {\u03b1 : Type v} \u2192 spec.OracleQuery \u03b1 \u2192 Set \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\ni : \u03b9\nt : spec.domain i\noa : spec.range i \u2192 OracleComp spec \u03b1\nh :\n  \u2200 (u : spec.range i),\n    allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa u >>= ob) \u2194\n      allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa u) \u2227\n        \u2200 x \u2208 (oa u).supportWhen fun {\u03b1} => possible_outputs,\n          allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (ob x)\n\u22a2 (Q (query i t) \u2227\n      \u2200 x \u2208 possible_outputs (query i t),\n        allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa x) \u2227\n          \u2200 x_1 \u2208 OracleComp.construct (fun x => {x}) (fun {\u03b2} q oa f => \u22c3 u \u2208 possible_outputs q, f u) \u2205 (oa x),\n            allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (ob x_1)) \u2194\n    (Q (query i t) \u2227\n        \u2200 x \u2208 possible_outputs (query i t), allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa x)) \u2227\n      \u2200 (x : \u03b1),\n        \u2200 x_1 \u2208 possible_outputs (query i t),\n          x \u2208 OracleComp.construct (fun x => {x}) (fun {\u03b2} q oa f => \u22c3 u \u2208 possible_outputs q, f u) \u2205 (oa x_1) \u2192\n            allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (ob x)",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/Traversal.lean#L71"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "d261601af5c0229fbae58319086a4752df2d0f996ae8db62290f5e9f32ef2f36"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 112,
        "start_column": 36,
        "end_line": 112,
        "end_column": 41,
        "file": "VCVio/OracleComp/Traversal.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type v\n\u03b9' : Type u_1\nspec' : OracleSpec \u03b9'\noa : OracleComp spec \u03b1\npossible_outputs : {\u03b1 : Type v} \u2192 spec.OracleQuery \u03b1 \u2192 Set \u03b1\nh : oa.neverFailsWhen fun {\u03b1} => possible_outputs\nso : QueryImpl spec (OracleComp spec')\nh' : \u2200 {\u03b1 : Type v} (q : spec.OracleQuery \u03b1), (so.impl q).support \u2286 possible_outputs q\nhso : \u2200 {\u03b1 : Type v} (q : spec.OracleQuery \u03b1), (so.impl q).neverFails\n\u22a2 (simulateQ so oa).neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/Traversal.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "f63a6eefd8a5219dae5175c7941c2e9863e2b74a245a93ca5c1938c90f21296e"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 127,
        "start_column": 88,
        "end_line": 127,
        "end_column": 93,
        "file": "VCVio/OracleComp/Traversal.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type v\nq : spec.OracleQuery \u03b1\n\u22a2 (liftM q).neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/Traversal.lean#L127"
      },
      "metadata": {
        "blame_email_hash": "e3ee0297a915",
        "blame_date": "2025-04-15T17:06:48-04:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "99a36145b089d1dda7a5a4e5203f0d9608dfac976da0942fceb1d3011f6e0369"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 132,
        "start_column": 60,
        "end_line": 132,
        "end_column": 65,
        "file": "VCVio/OracleComp/Traversal.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type v\nq : spec.OracleQuery \u03b1\noa : \u03b1 \u2192 OracleComp spec \u03b2\n\u22a2 (liftM q >>= oa).neverFails \u2194 \u2200 (x : \u03b1), (oa x).neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/Traversal.lean#L132"
      },
      "metadata": {
        "blame_email_hash": "e3ee0297a915",
        "blame_date": "2025-04-15T17:06:48-04:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "bfd4ac323956fb304be1461ba5338db1e377e399dbc9ae6ec59f6412082b344a"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 49,
        "start_column": 2,
        "end_line": 49,
        "end_column": 7,
        "file": "VCVio/OracleComp/QueryBound.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\ninst\u271d\u00b9 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\n\u03b1 : Type u\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\n\u22a2 (\u2200 (qc : spec.QueryCount) (x : \u03b1), (x, qc) \u2208 (simulateQ countingOracle oa).run.support \u2192 qc \u2264 qb) \u2194\n    \u2200 x \u2208 (snd <$> (simulateQ countingOracle oa).run <|> pure 0).support, x \u2264 qb",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/QueryBound.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "a6e59dcc1fd516abf304a6c7e22b6e2ae427e15955077541942c5a933197f4f9"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 29,
        "start_column": 2,
        "end_line": 29,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 \u03b2 \u03b3 : Type\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\noc : \u03b1 \u2192 OracleComp spec \u03b3\nh : \u2200 x \u2208 oa.support, [\u22a5|ob x] = [\u22a5|oc x]\n\u22a2 [\u22a5|oa >>= ob] = [\u22a5|oa >>= oc]",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/CryptoFoundations/Fork.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "bc01142fb83639692ca8709b53d4d2657dedb23192266ca501237adb1a26e031"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 34,
        "start_column": 2,
        "end_line": 34,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 \u03b2 \u03b3 : Type\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\noc : \u03b1 \u2192 OracleComp spec \u03b3\nh : \u2200 (x : \u03b1), [\u22a5|ob x] = [\u22a5|oc x]\n\u22a2 [\u22a5|oa >>= ob] = [\u22a5|oa >>= oc]",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/CryptoFoundations/Fork.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "913ece32ed630f41409260739a97aca06732419efb6dc9d56985538ccd5b3734"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 41,
        "start_column": 4,
        "end_line": 41,
        "end_column": 9,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 \u03b2 \u03b3 : Type\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\n\u03c3 : Type u_1\ns : Finset \u03c3\noc : \u03c3 \u2192 \u03b1 \u2192 OracleComp spec \u03b3\n\u22a2 [\u22a5|oa >>= ob] = \u2211 x \u2208 s, [\u22a5|oa >>= oc x]",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/CryptoFoundations/Fork.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "c2ce16aee9c009d648c575177c8cb9df7c59e3a67999ddc27ba12dd1e9d9175a"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 80,
        "start_column": 75,
        "end_line": 80,
        "end_column": 80,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Fin (qb i + 1)\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 [fun x =>\n      match x with\n      | (x\u2081, x\u2082) => cf x\u2081 = some s \u2227 cf x\u2082 = some s|main.fork' qb js i cf] =\n    [=(some s, some s)|Prod.map cf cf <$> main.fork' qb js i cf]",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/CryptoFoundations/Fork.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "d14a917a7cbfe9c35cac6d0483f33f26a2201f30bf03429d7a609b5026fa528b"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 89,
        "start_column": 36,
        "end_line": 89,
        "end_column": 41,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Fin (qb i + 1)\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 [=(some s, some s)|Prod.map cf cf <$> main.fork' qb js i cf] =\n    [=(some s, some s)|do\n      let seed \u2190 liftM (generateSeed spec qb js)\n      let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n      let u \u2190 liftM ($\u1d57spec.range i)\n      _root_.guard ((seed i)[s + 1]? \u2260 some u)\n      let seed' : spec.QuerySeed := (seed.takeAtIndex i \u2191s).addValue i u\n      let x\u2082 \u2190 (simulateQ seededOracle main).run seed'\n      pure (cf x\u2081, cf x\u2082)]",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/CryptoFoundations/Fork.lean#L89"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "7745175b6faf830b13958983fd9cb36bedbad671eacb719bd94458560fd1d925"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 103,
        "start_column": 29,
        "end_line": 103,
        "end_column": 34,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Fin (qb i + 1)\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 [=(some s, some s)|do\n      let seed \u2190 liftM (generateSeed spec qb js)\n      let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n      let u \u2190 liftM ($\u1d57spec.range i)\n      _root_.guard ((seed i)[s + 1]? \u2260 some u)\n      let seed' : spec.QuerySeed := (seed.takeAtIndex i \u2191s).addValue i u\n      let x\u2082 \u2190 (simulateQ seededOracle main).run seed'\n      pure (cf x\u2081, cf x\u2082)] \u2265\n    [=(some s, some s)|do\n        let seed \u2190 liftM (generateSeed spec qb js)\n        let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n        let u \u2190 liftM ($\u1d57spec.range i)\n        let seed' : spec.QuerySeed := (seed.takeAtIndex i \u2191s).addValue i u\n        let x\u2082 \u2190 (simulateQ seededOracle main).run seed'\n        pure (cf x\u2081, cf x\u2082)] -\n      [=some s|do\n        let seed \u2190 liftM (generateSeed spec qb js)\n        let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n        let u \u2190 liftM ($\u1d57spec.range i)\n        _root_.guard ((seed i)[s + 1]? = some u)\n        pure (cf x\u2081)]",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/CryptoFoundations/Fork.lean#L103"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "1d75cf5958832999d61b3fc9e5da02d87ac3d655e04a81b7245f3e31cf72b106"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 113,
        "start_column": 33,
        "end_line": 113,
        "end_column": 38,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Fin (qb i + 1)\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 [=(some s, some s)|do\n        let seed \u2190 liftM (generateSeed spec qb js)\n        let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n        let u \u2190 liftM ($\u1d57spec.range i)\n        let seed' : spec.QuerySeed := (seed.takeAtIndex i \u2191s).addValue i u\n        let x\u2082 \u2190 (simulateQ seededOracle main).run seed'\n        pure (cf x\u2081, cf x\u2082)] -\n      [=some s|do\n        let seed \u2190 liftM (generateSeed spec qb js)\n        let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n        let u \u2190 liftM ($\u1d57spec.range i)\n        _root_.guard ((seed i)[s + 1]? = some u)\n        pure (cf x\u2081)] =\n    [=(some s, some s)|do\n        let shared_seed \u2190 liftM (generateSeed spec (update qb i q) js)\n        let x\u2081 \u2190 (simulateQ seededOracle main).run shared_seed\n        let x\u2082 \u2190 (simulateQ seededOracle main).run shared_seed\n        pure (cf x\u2081, cf x\u2082)] -\n      [=some s|do\n          let seed \u2190 liftM (generateSeed spec qb js)\n          let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n          pure (cf x\u2081)] /\n        h",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/CryptoFoundations/Fork.lean#L113"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "5e7ce31a120f1657e78173a410736216ab69433341be61717e8df95c1c354c07"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 114,
        "start_column": 71,
        "end_line": 114,
        "end_column": 76,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Fin (qb i + 1)\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 [=(some s, some s)|do\n        let shared_seed \u2190 liftM (generateSeed spec (update qb i q) js)\n        let x\u2081 \u2190 (simulateQ seededOracle main).run shared_seed\n        let x\u2082 \u2190 (simulateQ seededOracle main).run shared_seed\n        pure (cf x\u2081, cf x\u2082)] -\n      [=some s|do\n          let seed \u2190 liftM (generateSeed spec qb js)\n          let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n          pure (cf x\u2081)] /\n        h \u2265\n    [=some s|cf <$> main] ^ 2 - [=some s|cf <$> main] / h",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/CryptoFoundations/Fork.lean#L114"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "2e2fb42a53db4a476275cdde4bb01c467eaa92fd6a75d617b554f21b336890e0"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 126,
        "start_column": 6,
        "end_line": 126,
        "end_column": 11,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := 1 - [=none|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 [\u22a5|main.fork' qb js i cf] = 1 - \u2211 s : Option (Fin (qb i + 1)), [=(s, s)|Prod.map cf cf <$> main.fork' qb js i cf]",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/CryptoFoundations/Fork.lean#L126"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "9d02b3fae45af23d3e42d9b9aca382cb88582529125a6c277d8be3da2fe5c155"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 128,
        "start_column": 6,
        "end_line": 128,
        "end_column": 11,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := 1 - [=none|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 - \u2211 s : Option (Fin (qb i + 1)), [=(s, s)|Prod.map cf cf <$> main.fork' qb js i cf] \u2264\n    1 - \u2211 s : Option (Fin (qb i + 1)), ([=s|cf <$> main] ^ 2 - [=s|cf <$> main] / h)",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/CryptoFoundations/Fork.lean#L128"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "0a3614e7cefae76f582c2e4191db6392bc71fa1e2897e84acb539fa3f4b1cc7c"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 130,
        "start_column": 6,
        "end_line": 130,
        "end_column": 11,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := 1 - [=none|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 - \u2211 s : Option (Fin (qb i + 1)), ([=s|cf <$> main] ^ 2 - [=s|cf <$> main] / h) =\n    1 - \u2211 s : Option (Fin (qb i + 1)), [=s|cf <$> main] ^ 2 - \u2211 s : Option (Fin (qb i + 1)), [=s|cf <$> main] / h",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/CryptoFoundations/Fork.lean#L130"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "affe581ecdf31088f5828606417c799255e30e71f19e8ac393f09f620029e23d"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 132,
        "start_column": 6,
        "end_line": 132,
        "end_column": 11,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := 1 - [=none|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 - \u2211 s : Option (Fin (qb i + 1)), [=s|cf <$> main] ^ 2 - \u2211 s : Option (Fin (qb i + 1)), [=s|cf <$> main] / h \u2264\n    1 - (\u2211 s : Option (Fin (qb i + 1)), [=s|cf <$> main]) ^ 2 / \u2191q -\n      (\u2211 s : Option (Fin (qb i + 1)), [=s|cf <$> main]) / h",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/CryptoFoundations/Fork.lean#L132"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "caad9ccaab9cc07bb4444c119de3a9432feb5ad6466133f53116933487d41d37"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 134,
        "start_column": 6,
        "end_line": 134,
        "end_column": 11,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := 1 - [=none|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 - (\u2211 s : Option (Fin (qb i + 1)), [=s|cf <$> main]) ^ 2 / \u2191q -\n      (\u2211 s : Option (Fin (qb i + 1)), [=s|cf <$> main]) / h \u2264\n    1 - acc ^ 2 / \u2191q + acc / h",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/CryptoFoundations/Fork.lean#L134"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "5ae2b18784b1ca364607963f2a01b7bca9babe71a6f2eead64296d934f47943f"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 136,
        "start_column": 6,
        "end_line": 136,
        "end_column": 11,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := 1 - [=none|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 - acc ^ 2 / \u2191q + acc / h = 1 - acc * (acc / \u2191q - h\u207b\u00b9)",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/CryptoFoundations/Fork.lean#L136"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "3ed1d1774152f8f7d5ced52a1f86b87f40dff0cbc6483e9c65a9ad45408961dd"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 147,
        "start_column": 2,
        "end_line": 147,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/Fork.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nx\u2081 x\u2082 : \u03b1\nh : (x\u2081, x\u2082) \u2208 (main.fork' qb js i cf).support\n\u22a2 \u2203 s,\n    cf x\u2081 = some s \u2227\n      cf x\u2082 = some s \u2227\n        \u2203 log\u2081,\n          \u2203 (hcf\u2081 : \u2191s < log\u2081.countQ i),\n            \u2203 log\u2082,\n              \u2203 (hcf\u2081_1 : \u2191s < log\u2082.countQ i),\n                (log\u2081.getQ i)[s].1 = (log\u2082.getQ i)[s].1 \u2227\n                  (log\u2081.getQ i)[s].2 \u2260 (log\u2082.getQ i)[s].2 \u2227\n                    (x\u2081, log\u2081) \u2208 (simulateQ loggingOracle main).run.support \u2227\n                      (x\u2082, log\u2082) \u2208 (simulateQ loggingOracle main).run.support",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/CryptoFoundations/Fork.lean#L147"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "2e586879ce91c2a471758c5388501b7f0ae06f1304ad29feb1908acae0e35974"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 66,
        "start_column": 2,
        "end_line": 66,
        "end_column": 7,
        "file": "VCVio/CryptoFoundations/SymmEncAlg.lean"
      },
      "debug_info": {
        "goal": "m : Type \u2192 Type v\nM K C : Type\ninst\u271d\u2075 : AlternativeMonad m\ninst\u271d\u2074 : LawfulAlternative m\ninst\u271d\u00b3 : Fintype M\ninst\u271d\u00b2 : Fintype K\ninst\u271d\u00b9 : Fintype C\nencAlg : SymmEncAlg m M K C\ninst\u271d : encAlg.Complete\nh1 : Fintype.card M = Fintype.card K\nh2 : Fintype.card K = Fintype.card C\n\u22a2 encAlg.perfectSecrecy \u2194\n    (\u2200 (k : K), [=k|encAlg.exec encAlg.keygen] = (\u2191(Fintype.card K))\u207b\u00b9) \u2227\n      \u2200 (m_1 : M) (c : m C), \u2203! k, k \u2208 support (encAlg.exec encAlg.keygen) \u2227 encAlg.encrypt k m_1 = c",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/CryptoFoundations/SymmEncAlg.lean#L66"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "415b7ac45bc1e38c895dcb2f69ba5afaec4327723af87f9e24c591b3449bd696"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 79,
        "start_column": 29,
        "end_line": 79,
        "end_column": 34,
        "file": "VCVio/CryptoFoundations/FiatShamir.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\n\u03c3 X W PC SC \u03a9 P : Type\np : X \u2192 W \u2192 Bool\ninst\u271d\u2075 : SelectableType X\ninst\u271d\u2074 : SelectableType W\ninst\u271d\u00b3 : DecidableEq PC\ninst\u271d\u00b2 : DecidableEq \u03a9\ninst\u271d\u00b9 : SelectableType \u03a9\nsigmaAlg : SigmaAlg X W PC SC \u03a9 P p\nhr : GenerableRelation X W p\nM : Type\ninst\u271d : DecidableEq M\n\u03b1\u271d : Type\nc : ProbComp \u03b1\u271d\n\u22a2 (fun {\u03b1} comp =>\n        let so := idOracle ++\u209b\u2092 randomOracle;\n        (simulateQ so comp).run' \u2205)\n      ((fun {\u03b1} => monadLift) c) =\n    c",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/CryptoFoundations/FiatShamir.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "3d6d75337d9362953483b85cb717c2e66494bdc597ae8da21abe39899593c53f"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 79,
        "start_column": 2,
        "end_line": 79,
        "end_column": 7,
        "file": "VCVio/OracleComp/Coercions/SubSpec.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\n\u03c4 : Type v\nspec : OracleSpec \u03b9\nsuperSpec : OracleSpec \u03c4\n\u03b1 : Type w\nh : MonadLift spec.OracleQuery superSpec.OracleQuery\ninst\u271d\u2074 : spec.DecidableEq\ninst\u271d\u00b3 : superSpec.DecidableEq\ninst\u271d\u00b2 : superSpec.FiniteRange\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : Fintype \u03b1\nq : spec.OracleQuery \u03b1\n\u22a2 (liftM (MonadLift.monadLift q)).finSupport = Finset.univ",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/Coercions/SubSpec.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "b4ed8bc03960195220c6281fd6a2d05c507bfd3567b6f9046840a8b6da0ba78b"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 186,
        "start_column": 2,
        "end_line": 186,
        "end_column": 7,
        "file": "VCVio/OracleComp/Coercions/SubSpec.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\n\u03c4 : Type v\nspec : OracleSpec \u03b9\n\u03b1 : Type w\nsuperSpec : OracleSpec \u03c4\nh : MonadLift spec.OracleQuery superSpec.OracleQuery\noa : OracleComp spec \u03b1\n\u22a2 (simulateQ { impl := fun {\u03b1} => liftM } oa).neverFails \u2194 oa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/Coercions/SubSpec.lean#L186"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "ca8d735837249933f3f1eb5bdf17e0500f1979d914275812bf5eccf26c21b821"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 69,
        "start_column": 53,
        "end_line": 69,
        "end_column": 58,
        "file": "VCVio/OracleComp/QueryTracking/CountingOracle.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\ninst\u271d : DecidableEq \u03b9\nspec : OracleSpec \u03b9\n\u03b1 : Type u\noa : OracleComp spec \u03b1\n\u22a2 \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (countingOracle.impl q).run.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/QueryTracking/CountingOracle.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "fb926a28835f31fa4cdf44bad65000fca3aa86bb89fa85f2081570a28dea34cf"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 72,
        "start_column": 53,
        "end_line": 72,
        "end_column": 58,
        "file": "VCVio/OracleComp/QueryTracking/LoggingOracle.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type u\noa : OracleComp spec \u03b1\n\u22a2 \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (loggingOracle.impl q).run.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/QueryTracking/LoggingOracle.lean#L72"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "e0365180bdfed8103d2b22973aa96d64d7bbd4458e07d22f768d1137a6f1a74f"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 280,
        "start_column": 2,
        "end_line": 280,
        "end_column": 7,
        "file": "VCVio/OracleComp/Constructions/UniformSelect.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type\nh\u03b1 : SelectableType \u03b1\n\u22a2 neverFails ($\u1d57\u03b1)",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/Constructions/UniformSelect.lean#L280"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "4097ec3edf60127c6bf02704cde2ad8f89313fed945e5dd6d4c31a18fd551e21"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 404,
        "start_column": 4,
        "end_line": 404,
        "end_column": 9,
        "file": "VCVio/OracleComp/Constructions/UniformSelect.lean"
      },
      "debug_info": {
        "goal": "case zero\n\u03b1\u271d : Type\nh\u03b1 : SelectableType \u03b1\u271d\n\u03b1 : Type\nm : \u2115\ninst\u271d : SelectableType \u03b1\nx y : Matrix (Fin 0) (Fin m) \u03b1\n\u22a2 [=x|Nat.recAux (pure (Matrix.of ![]))\n        (fun n ihn => do\n          let top \u2190 $\u1d57Vector \u03b1 m\n          let bot \u2190 ihn\n          pure (Fin.cons top.get bot))\n        0] =\n    [=y|Nat.recAux (pure (Matrix.of ![]))\n        (fun n ihn => do\n          let top \u2190 $\u1d57Vector \u03b1 m\n          let bot \u2190 ihn\n          pure (Fin.cons top.get bot))\n        0]",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/Constructions/UniformSelect.lean#L404"
      },
      "metadata": {
        "blame_email_hash": "e3ee0297a915",
        "blame_date": "2025-04-11T19:25:10-04:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "e6543c13a8c3ba5535f119ab02e8fcd3dab0d7200306a71ca68d2a94cdd08eb1"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 406,
        "start_column": 4,
        "end_line": 406,
        "end_column": 9,
        "file": "VCVio/OracleComp/Constructions/UniformSelect.lean"
      },
      "debug_info": {
        "goal": "case succ\n\u03b1\u271d : Type\nh\u03b1 : SelectableType \u03b1\u271d\n\u03b1 : Type\nm\u271d : \u2115\ninst\u271d : SelectableType \u03b1\nm : \u2115\nih :\n  \u2200 (x y : Matrix (Fin m) (Fin m\u271d) \u03b1),\n    [=x|Nat.recAux (pure (Matrix.of ![]))\n          (fun n ihn => do\n            let top \u2190 $\u1d57Vector \u03b1 m\u271d\n            let bot \u2190 ihn\n            pure (Fin.cons top.get bot))\n          m] =\n      [=y|Nat.recAux (pure (Matrix.of ![]))\n          (fun n ihn => do\n            let top \u2190 $\u1d57Vector \u03b1 m\u271d\n            let bot \u2190 ihn\n            pure (Fin.cons top.get bot))\n          m]\nx y : Matrix (Fin (m + 1)) (Fin m\u271d) \u03b1\n\u22a2 [=x|Nat.recAux (pure (Matrix.of ![]))\n        (fun n ihn => do\n          let top \u2190 $\u1d57Vector \u03b1 m\u271d\n          let bot \u2190 ihn\n          pure (Fin.cons top.get bot))\n        (m + 1)] =\n    [=y|Nat.recAux (pure (Matrix.of ![]))\n        (fun n ihn => do\n          let top \u2190 $\u1d57Vector \u03b1 m\u271d\n          let bot \u2190 ihn\n          pure (Fin.cons top.get bot))\n        (m + 1)]",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/Constructions/UniformSelect.lean#L406"
      },
      "metadata": {
        "blame_email_hash": "e3ee0297a915",
        "blame_date": "2025-04-11T19:25:10-04:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "4b190d3172e23092521869ef76c7151be6c487e5ba569775ccbca559f7def1dc"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 411,
        "start_column": 4,
        "end_line": 411,
        "end_column": 9,
        "file": "VCVio/OracleComp/Constructions/UniformSelect.lean"
      },
      "debug_info": {
        "goal": "case succ\n\u03b1\u271d : Type\nh\u03b1 : SelectableType \u03b1\u271d\n\u03b1 : Type\nm\u271d : \u2115\ninst\u271d : SelectableType \u03b1\nm : \u2115\nih :\n  [\u22a5|Nat.recAux (pure (Matrix.of ![]))\n        (fun n ihn => do\n          let top \u2190 $\u1d57Vector \u03b1 m\u271d\n          let bot \u2190 ihn\n          pure (Fin.cons top.get bot))\n        m] =\n    0\n\u22a2 \u2200 (x : Vector \u03b1 m\u271d),\n    neverFails\n      (Fin.cons x.get <$>\n        Nat.rec (pure (Matrix.of ![]))\n          (fun n ihn => do\n            let top \u2190 $\u1d57Vector \u03b1 m\u271d\n            Fin.cons top.get <$> ihn)\n          m)",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/Constructions/UniformSelect.lean#L411"
      },
      "metadata": {
        "blame_email_hash": "e3ee0297a915",
        "blame_date": "2025-04-15T17:06:48-04:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "861c9f3562ee222eccc0bd9807caf1006e804c82acba1820094deefdb119f667"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 76,
        "start_column": 2,
        "end_line": 76,
        "end_column": 7,
        "file": "VCVio/OracleComp/Constructions/GenerateSeed.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b9 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d : (i : \u03b9) \u2192 SelectableType (spec.range i)\nqc : \u03b9 \u2192 \u2115\nj : \u03b9\njs : List \u03b9\n\u22a2 (do\n      let x \u2190 replicate (qc j) ($\u1d57spec.range j)\n      forIn js (QuerySeed.addValues x fun x => []) fun j r =>\n          replicate (qc j) ($\u1d57spec.range j) >>= pure \u2218 fun a => ForInStep.yield (QuerySeed.addValues a r)) =\n    do\n    let _ \u2190 replicate (qc j) ($\u1d57spec.range j)\n    forIn js (fun x => []) fun j r =>\n        replicate (qc j) ($\u1d57spec.range j) >>= pure \u2218 fun a => ForInStep.yield (QuerySeed.addValues a r)",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/Constructions/GenerateSeed.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-01-16T01:24:48-06:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "d79c4064efb897c8ed7589aa9c25660f4ff5588785d347f203968ad73a410fc9"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 85,
        "start_column": 2,
        "end_line": 85,
        "end_column": 7,
        "file": "VCVio/OracleComp/Constructions/GenerateSeed.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b9 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d : (i : \u03b9) \u2192 SelectableType (spec.range i)\nqc : \u03b9 \u2192 \u2115\njs : List \u03b9\n\u22a2 support (generateSeed spec qc js) = {seed | \u2200 (i : \u03b9), (seed i).length = qc i * List.count i js}",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/Constructions/GenerateSeed.lean#L85"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2024-12-05T21:45:03-06:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "bf9871baf58a4150c4bb26278a7b03947281659adf119f8debbca04b65a8c834"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 128,
        "start_column": 4,
        "end_line": 128,
        "end_column": 9,
        "file": "VCVio/OracleComp/Constructions/GenerateSeed.lean"
      },
      "debug_info": {
        "goal": "case append_singleton\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b9 : (i : \u03b9) \u2192 SelectableType (spec.range i)\nqc : \u03b9 \u2192 \u2115\njs\u271d : List \u03b9\ninst\u271d : spec.FiniteRange\nj : List \u03b9\njs : \u03b9\nhjs :\n  \u2200 seed \u2208 support (generateSeed spec qc j),\n    [=seed|generateSeed spec qc j] = 1 / \u2191(List.map (fun j => Fintype.card (spec.range j) ^ qc j) j).prod\nseed : spec.QuerySeed\nhs : seed \u2208 support (generateSeed spec qc (j ++ [js]))\n\u22a2 [=seed|do\n      let a \u2190\n        foldlM\n            (fun b a =>\n              match b with\n              | ForInStep.yield b =>\n                (fun a_1 => ForInStep.yield (QuerySeed.addValues a_1 b)) <$> replicate (qc a) ($\u1d57spec.range a)\n              | ForInStep.done b => pure (ForInStep.done b))\n            (ForInStep.yield fun x => []) j\n      ForInStep.value <$>\n          match a with\n          | ForInStep.yield b =>\n            (fun a => ForInStep.yield (QuerySeed.addValues a b)) <$> replicate (qc js) ($\u1d57spec.range js)\n          | ForInStep.done b => pure (ForInStep.done b)] =\n    ((List.map (Nat.cast \u2218 fun j => Fintype.card (spec.range j) ^ qc j) j).prod *\n        \u2191(Fintype.card (spec.range js)) ^ qc js)\u207b\u00b9",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/Constructions/GenerateSeed.lean#L128"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-01-16T01:24:48-06:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "9fc2c5a96e1721c8ea6422fad68e82acb87c53b904708123209136030c488863"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 721,
        "start_column": 83,
        "end_line": 721,
        "end_column": 88,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\ns : \u211d\u22650\u221e\nh' : [\u22a5|oa] = s\nob : \u03b1 \u2192 OracleComp spec \u03b2\nr : \u211d\u22650\u221e\nhr : \u2200 x \u2208 oa.support, [\u22a5|ob x] \u2264 r\n\u22a2 [\u22a5|oa >>= ob] \u2264 s + (1 - s) * r",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/DistSemantics/EvalDist.lean#L721"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "2c8ea3cf0ba2d0e3cdef701647461392110e9b5e730d3ed3832f47359c25dccf"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 727,
        "start_column": 73,
        "end_line": 727,
        "end_column": 78,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\ns : \u211d\u22650\u221e\nh' : [\u22a5|oa] = s\nob : \u03b1 \u2192 OracleComp spec \u03b2\nr : \u211d\u22650\u221e\nhr : \u2200 x \u2208 oa.support, [\u22a5|ob x] \u2264 r\n\u22a2 [\u22a5|oa >>= ob] \u2264 s + r",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/DistSemantics/EvalDist.lean#L727"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "19602e72819985b242b7a0e270bcdce3c323f974bb516a80a4af878ca8ce2163"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 732,
        "start_column": 69,
        "end_line": 732,
        "end_column": 74,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nh' : oa.neverFails\nob : \u03b1 \u2192 OracleComp spec \u03b2\nr : \u211d\u22650\u221e\nhr : \u2200 x \u2208 oa.support, [\u22a5|ob x] \u2264 r\n\u22a2 [\u22a5|oa >>= ob] \u2264 r",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/DistSemantics/EvalDist.lean#L732"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "deabe9fe3fc43192cfed439d94b3cafa73562f441d006927dd60c0d5fbd8529c"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 736,
        "start_column": 59,
        "end_line": 736,
        "end_column": 64,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nh : oa.neverFails\nob : \u03b1 \u2192 OracleComp spec \u03b2\n\u22a2 [\u22a5|oa >>= ob] = \u2211' (x : \u03b1), [=x|oa] * [\u22a5|ob x]",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/DistSemantics/EvalDist.lean#L736"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "149f45e12fd445ebddfee37013020f5d149bb2361ce9f1bc36afa89c734e30c0"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 928,
        "start_column": 2,
        "end_line": 928,
        "end_column": 7,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\n\u22a2 [\u22a5|oa] = 0 \u2194 oa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/DistSemantics/EvalDist.lean#L928"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "deaf071eaaa047a34e4219a30e61d4e204360af16a5fc7fddca9748bde8353b9"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 936,
        "start_column": 2,
        "end_line": 936,
        "end_column": 7,
        "file": "VCVio/OracleComp/DistSemantics/EvalDist.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\n\u22a2 0 < [\u22a5|oa] \u2194 \u00acoa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/DistSemantics/EvalDist.lean#L936"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "5219d9db22cf69a4232613f60c5d0a1c0ef077bd77e486aa040fbf1f882c64dc"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 29,
        "start_column": 4,
        "end_line": 29,
        "end_column": 9,
        "file": "VCVio/OracleComp/DistSemantics/Alternative.lean"
      },
      "debug_info": {
        "goal": "case query_bind\n\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type v\nh\u271d : spec.FiniteRange\noa' : OracleComp spec \u03b1\ni : \u03b9\nt : spec.domain i\noa : spec.range i \u2192 OracleComp spec \u03b1\nh : \u2200 (u : spec.range i), (oa u <|> oa').evalDist = ((oa u).evalDist <|> oa'.evalDist)\n\u22a2 (liftM (OracleSpec.query i t) >>= oa <|> oa').evalDist =\n    ((liftM (OracleSpec.query i t) >>= oa).evalDist <|> oa'.evalDist)",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/DistSemantics/Alternative.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "70577a0e46a5ff8056231f64619357331cb85f284b7a23b0aa8d033b98c93313"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 52,
        "start_column": 2,
        "end_line": 52,
        "end_column": 7,
        "file": "VCVio/OracleComp/DistSemantics/Alternative.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type u\noa oa' : OracleComp spec \u03b1\ninst\u271d : Decidable oa.neverFails\n\u22a2 (oa <|> oa').support = if oa.neverFails then oa.support else oa.support \u222a oa'.support",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/DistSemantics/Alternative.lean#L52"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "96f1c4b7efa9ed4b6cf4162c0a3686ebe75796e6e764d307e06016f4d6280403"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 170,
        "start_column": 8,
        "end_line": 170,
        "end_column": 13,
        "file": "VCVio/OracleComp/DistSemantics/List.lean"
      },
      "debug_info": {
        "goal": "case pos.append_singleton.cons\n\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type u_1\n\u03b2 : Type u_2\ninst\u271d\u00b9 : DecidableEq \u03b2\ninst\u271d : spec.FiniteRange\nf : \u03b1 \u2192 OracleComp spec \u03b2\nys zs : List \u03b2\nz : \u03b2\nh : take ys.length (zs ++ [z]) = ys.reverse\nx : \u03b1\nxs : List \u03b1\nhzs :\n  take ys.length zs = ys.reverse \u2192\n    [=drop ys.length zs|mapM.loop f (x :: xs) []] =\n      if zs.length = (x :: xs).length + ys.length then\n        (zipWith (fun x z => [=z|f x]) (x :: xs) (drop ys.length zs)).prod\n      else 0\n\u22a2 [=drop ys.length (zs ++ [z])|do\n      let __do_lift \u2190 f x\n      mapM.loop f xs [__do_lift]] =\n    if zs.length = xs.length + ys.length then\n      (zipWith (fun x z => [=z|f x]) (x :: xs) (drop ys.length (zs ++ [z]))).prod\n    else 0",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/DistSemantics/List.lean#L170"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-01-28T07:23:40-06:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "7ada25341754168799e4f2fa81eded3dac8c95df7f5e0efd3491932740229baa"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7,
        "file": "VCVio/OracleComp/SimSemantics/StateT.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nspec : OracleSpec \u03b9\n\u03c3 : Type u\ninst\u271d : Subsingleton \u03c3\n\u03b1 : Type u\nso : QueryImpl spec (StateT \u03c3 (OracleComp spec))\nh : \u2200 (\u03b1 : Type u) (q : spec.OracleQuery \u03b1) (s : \u03c3), (so.impl q).run' s = liftM q\noa : OracleComp spec \u03b1\ns : \u03c3\n\u22a2 (simulateQ so oa).run' s = oa",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/SimSemantics/StateT.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "da0b4aae94185ffd5bd7865fb1f3dbaa0f6548ddd76b0db8d795dde75c7a3c1e"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 61,
        "start_column": 2,
        "end_line": 61,
        "end_column": 7,
        "file": "VCVio/OracleComp/SimSemantics/WriterT.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03c9 : Type u\ninst\u271d : Monoid \u03c9\nso : QueryImpl spec (WriterT \u03c9 (OracleComp spec))\nhso : \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (fst <$> (so.impl q).run).support = \u22a4\nhso' : \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (so.impl q).run.neverFails\noa : OracleComp spec \u03b1\n\u22a2 (simulateQ so oa).run.neverFails \u2194 oa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/VCVio/OracleComp/SimSemantics/WriterT.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "957f7cbf27b91144b173f61832137bf693cb0d95c1015f02c90cd2e615a69c1e"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "regev",
        "commit": "86a5ba59d1b4544658160e7941232d47074096d6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 94,
        "start_column": 39,
        "end_line": 94,
        "end_column": 44,
        "file": "ToMathlib/Control/WriterT.lean"
      },
      "debug_info": {
        "goal": "m : Type u \u2192 Type v\ninst\u271d\u00b3 : AlternativeMonad m\n\u03c9 \u03b1 \u03b2 \u03b3 : Type u\ninst\u271d\u00b2 : Monoid \u03c9\ninst\u271d\u00b9 : LawfulMonad m\ninst\u271d : LawfulAlternative m\n\u22a2 LawfulAlternative (WriterT \u03c9 m)",
        "url": "https://github.com/dtumad/VCV-io/blob/86a5ba59d1b4544658160e7941232d47074096d6/ToMathlib/Control/WriterT.lean#L94"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-04-17T03:35:47.559999+00:00"
      },
      "id": "82c3c53bb97c541377eaf405f8fed08a9a86e4628b5ccb122f3f366fba350867"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "030a9fb331e63ebaec29474c41a31b7a1873e739",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 8,
        "start_column": 2,
        "end_line": 8,
        "end_column": 7,
        "file": "Seymour/HardDirection.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d : DecidableEq \u03b1\nM : Matroid \u03b1\nhM : M.IsRegular\n\u22a2 M.IsGood",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/030a9fb331e63ebaec29474c41a31b7a1873e739/Seymour/HardDirection.lean#L8"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-02-13T12:19:44+01:00",
        "inclusion_date": "2025-04-17T03:44:07.600361+00:00"
      },
      "id": "f53368bfbc330948873fbf253a9af1b9f8fca916292fd30a4edfcdfaeaa260f9"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "030a9fb331e63ebaec29474c41a31b7a1873e739",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 32,
        "start_column": 21,
        "end_line": 32,
        "end_column": 26,
        "file": "Seymour/Basic/SubmoduleSpans.lean"
      },
      "debug_info": {
        "goal": "\u03b1 R : Type\ninst\u271d : Ring R\nX Y G I : Set \u03b1\nA : Matrix (\u2191X) (\u2191Y) R\nhIX : I \u2286 X\nB : Basis (\u2191G) R \u21a5(Submodule.span R A.range)\nhAI : LinearIndepOn R A hIX.elem.range\n\u22a2 Finite \u2191G",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/030a9fb331e63ebaec29474c41a31b7a1873e739/Seymour/Basic/SubmoduleSpans.lean#L32"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-04-16T18:38:30+02:00",
        "inclusion_date": "2025-04-17T03:44:07.600361+00:00"
      },
      "id": "5f1f299d083e28474bf17af3fbfa7863ee0026485f7e2a1b260eeea0e356085c"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "030a9fb331e63ebaec29474c41a31b7a1873e739",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 46,
        "start_column": 21,
        "end_line": 46,
        "end_column": 26,
        "file": "Seymour/Basic/SubmoduleSpans.lean"
      },
      "debug_info": {
        "goal": "\u03b1 R : Type\ninst\u271d : Ring R\nX Y G I : Set \u03b1\nA : Matrix (\u2191X) (\u2191Y) R\nhIX : I \u2286 X\nB : Basis (\u2191G) R \u21a5(Submodule.span R A.range)\nhBI : LinearIndepOn R (fun x g => (B.repr \u27e8A x, \u22ef\u27e9) g) hIX.elem.range\n\u22a2 Finite \u2191G",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/030a9fb331e63ebaec29474c41a31b7a1873e739/Seymour/Basic/SubmoduleSpans.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-04-16T18:38:30+02:00",
        "inclusion_date": "2025-04-17T03:44:07.600361+00:00"
      },
      "id": "954b8c8f884745eae8a436be201452f26cd61be0b953e571354fa7fdec7edbc5"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "030a9fb331e63ebaec29474c41a31b7a1873e739",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 241,
        "start_column": 2,
        "end_line": 241,
        "end_column": 7,
        "file": "Seymour/Matrix/Pivoting.lean"
      },
      "debug_info": {
        "goal": "case right\nF : Type\ninst\u271d : Field F\nk : \u2115\nA : Matrix (Fin k.succ) (Fin k.succ) F\nr c : Fin k.succ\nhArc : A r c \u2260 0\n\u22a2 ((A.shortTableauPivot r c).submatrix r.succAbove c.succAbove).det = A.det / A r c",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/030a9fb331e63ebaec29474c41a31b7a1873e739/Seymour/Matrix/Pivoting.lean#L241"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-04-07T18:24:02+02:00",
        "inclusion_date": "2025-04-17T03:44:07.600361+00:00"
      },
      "id": "de4ccb5e6de8351dcd03538b28687b6f4ff855251487160b027771c54573f46c"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "030a9fb331e63ebaec29474c41a31b7a1873e739",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 60,
        "start_column": 6,
        "end_line": 60,
        "end_column": 11,
        "file": "Seymour/Matroid/Operations/Sum1.lean"
      },
      "debug_info": {
        "goal": "case h.mp\n\u03b1 : Type\ninst\u271d : DecidableEq \u03b1\nS\u2081 S\u2082 : StandardRepr \u03b1 Z2\nhXY : S\u2081.X \u2ad7 S\u2082.Y\nhYX : S\u2081.Y \u2ad7 S\u2082.X\nvalid : (standardRepr1sumComposition hXY hYX).2\nI : Set \u03b1\nhI : I \u2286 (standardRepr1sumComposition hXY hYX).1.toMatroid.E\nlinearlyI :\n  I \u2286 (standardRepr1sumComposition hXY hYX).1.X \u222a (standardRepr1sumComposition hXY hYX).1.Y \u2227\n    LinearIndepOn Z2 (Matrix.transpose fun x => (standardRepr1sumComposition hXY hYX).1.B.prependId x \u2218 Subtype.toSum)\n      (Subtype.val \u207b\u00b9' I)\n\u22a2 (True \u2227\n      LinearIndepOn Z2 (Matrix.transpose fun x => S\u2081.B.prependId x \u2218 Subtype.toSum)\n        (Subtype.val \u207b\u00b9' (I \u2229 (S\u2081.X \u222a S\u2081.Y)))) \u2227\n    (True \u2227\n        LinearIndepOn Z2 (Matrix.transpose fun x => S\u2082.B.prependId x \u2218 Subtype.toSum)\n          (Subtype.val \u207b\u00b9' (I \u2229 (S\u2082.X \u222a S\u2082.Y)))) \u2227\n      I \u2286 S\u2081.X \u222a S\u2081.Y \u222a (S\u2082.X \u222a S\u2082.Y)",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/030a9fb331e63ebaec29474c41a31b7a1873e739/Seymour/Matroid/Operations/Sum1.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-02-15T17:08:53+01:00",
        "inclusion_date": "2025-04-17T03:44:07.600361+00:00"
      },
      "id": "9ba7797fd9627c4bad2e3c12322e42d9e56e6f00a210b1b15a2d9d283a55ec33"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "030a9fb331e63ebaec29474c41a31b7a1873e739",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 62,
        "start_column": 6,
        "end_line": 62,
        "end_column": 11,
        "file": "Seymour/Matroid/Operations/Sum1.lean"
      },
      "debug_info": {
        "goal": "case right\n\u03b1 : Type\ninst\u271d : DecidableEq \u03b1\nS\u2081 S\u2082 : StandardRepr \u03b1 Z2\nhXY : S\u2081.X \u2ad7 S\u2082.Y\nhYX : S\u2081.Y \u2ad7 S\u2082.X\nvalid : (standardRepr1sumComposition hXY hYX).2\nI : Set \u03b1\nhI : I \u2286 (standardRepr1sumComposition hXY hYX).1.toMatroid.E\nlinearlyI :\n  (True \u2227\n      LinearIndepOn Z2 (Matrix.transpose fun x => S\u2081.B.prependId x \u2218 Subtype.toSum)\n        (Subtype.val \u207b\u00b9' (I \u2229 (S\u2081.X \u222a S\u2081.Y)))) \u2227\n    (True \u2227\n        LinearIndepOn Z2 (Matrix.transpose fun x => S\u2082.B.prependId x \u2218 Subtype.toSum)\n          (Subtype.val \u207b\u00b9' (I \u2229 (S\u2082.X \u222a S\u2082.Y)))) \u2227\n      I \u2286 S\u2081.X \u222a S\u2081.Y \u222a (S\u2082.X \u222a S\u2082.Y)\n\u22a2 LinearIndepOn Z2 (Matrix.transpose fun x => (standardRepr1sumComposition hXY hYX).1.B.prependId x \u2218 Subtype.toSum)\n    (Subtype.val \u207b\u00b9' I)",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/030a9fb331e63ebaec29474c41a31b7a1873e739/Seymour/Matroid/Operations/Sum1.lean#L62"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-02-15T17:08:53+01:00",
        "inclusion_date": "2025-04-17T03:44:07.600361+00:00"
      },
      "id": "9e1be7d8de38f0a533f5b545fc1a0c8f0c219b77570d337520e8543c8ff3029d"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "030a9fb331e63ebaec29474c41a31b7a1873e739",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 154,
        "start_column": 6,
        "end_line": 154,
        "end_column": 11,
        "file": "Seymour/Matroid/Operations/Sum3.lean"
      },
      "debug_info": {
        "goal": "case inr.inl\n\u03b1 : Type\nX\u2081 Y\u2081 X\u2082 Y\u2082 : Set \u03b1\nA\u2081 : Matrix \u2191X\u2081 \u2191Y\u2081 \u211a\nA\u2082 : Matrix \u2191X\u2082 \u2191Y\u2082 \u211a\nr\u2080 r\u2081 : \u2191Y\u2081 \u2192 \u211a\nc\u2080 c\u2081 : \u2191X\u2082 \u2192 \u211a\nhA\u2081\u271d : (\u25acr\u2080 \u229f \u25acr\u2081 \u229f A\u2081).IsTotallyUnimodular\nhA\u2082\u271d : (\u25aec\u2080 \u25eb \u25aec\u2081 \u25eb A\u2082).IsTotallyUnimodular\nhcc : \u2200 (i : \u2191X\u2082), (c\u2080 - c\u2081) i \u2208 SignType.cast.range\nhrr : \u2200 (j : \u2191Y\u2081), (r\u2080 + r\u2081) j \u2208 SignType.cast.range\nf : Fin 1 \u2192 \u2191X\u2081 \u2295 \u2191X\u2082\ng : Fin 1 \u2192 \u2191Y\u2081 \u2295 \u2191Y\u2082\nhA\u2081 : A\u2081.IsTotallyUnimodular\nhA\u2082 : A\u2082.IsTotallyUnimodular\ni\u2082 : \u2191X\u2082\nj\u2081 : \u2191Y\u2081\n\u22a2 c\u2080 i\u2082 * r\u2080 j\u2081 + c\u2081 i\u2082 * r\u2081 j\u2081 \u2208 SignType.cast.range",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/030a9fb331e63ebaec29474c41a31b7a1873e739/Seymour/Matroid/Operations/Sum3.lean#L154"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-04-10T23:41:15+02:00",
        "inclusion_date": "2025-04-17T03:44:07.600361+00:00"
      },
      "id": "d51dce0f4130598146c702939c8650ea2a8ee14315e00d02a2d762ad9b6926dd"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "030a9fb331e63ebaec29474c41a31b7a1873e739",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 168,
        "start_column": 2,
        "end_line": 168,
        "end_column": 7,
        "file": "Seymour/Matroid/Operations/Sum3.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d : DecidableEq \u03b1\nX\u2082 Y\u2082 : Set \u03b1\nA\u2082 : Matrix \u2191X\u2082 \u2191Y\u2082 \u211a\nc\u2080 c\u2081 : \u2191X\u2082 \u2192 \u211a\nhA\u2082 : (\u25aec\u2080 \u25eb \u25aec\u2081 \u25eb A\u2082).IsTotallyUnimodular\nhcc : \u2200 (i : \u2191X\u2082), (c\u2080 - c\u2081) i \u2208 SignType.cast.range\n\u22a2 (\u25ae0 \u25eb \u25ae(-c\u2080 - c\u2081) \u25eb \u25ae(c\u2080 - c\u2081) \u25eb \u25ae(c\u2081 - c\u2080) \u25eb \u25ae(c\u2080 + c\u2081) \u25eb \u25ae(-c\u2080) \u25eb \u25ae(-c\u2081) \u25eb \u25aec\u2080 \u25eb \u25aec\u2081 \u25eb A\u2082).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/030a9fb331e63ebaec29474c41a31b7a1873e739/Seymour/Matroid/Operations/Sum3.lean#L168"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-04-14T14:06:11+02:00",
        "inclusion_date": "2025-04-17T03:44:07.600361+00:00"
      },
      "id": "bd261850908c9370e2817a0878611c8ef2b227ee380e550cac4e076acb69a42c"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "030a9fb331e63ebaec29474c41a31b7a1873e739",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 290,
        "start_column": 2,
        "end_line": 290,
        "end_column": 7,
        "file": "Seymour/Matroid/Operations/Sum3.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d : DecidableEq \u03b1\nX\u2081 Y\u2081 X\u2082 : Set \u03b1\nA\u2081 : Matrix \u2191X\u2081 \u2191Y\u2081 \u211a\nr\u2080 r\u2081 : \u2191Y\u2081 \u2192 \u211a\nc\u2080 c\u2081 : \u2191X\u2082 \u2192 \u211a\ni : \u2191X\u2081\nj : \u2191Y\u2081\nhij : A\u2081 i j = 1 \u2228 A\u2081 i j = -1\nhA\u2081 : (\u25acr\u2080 \u229f \u25acr\u2081 \u229f A\u2081).IsTotallyUnimodular\nhA\u2082 : (\u25aec\u2080 \u25eb \u25aec\u2081).IsTotallyUnimodular\nhc\u2080c\u2081 : \u2200 (i : \u2191X\u2082), (c\u2080 - c\u2081) i \u2208 SignType.cast.range\nhr\u2080r\u2081 : \u2200 (j : \u2191Y\u2081), (r\u2080 + r\u2081) j \u2208 SignType.cast.range\n\u22a2 let r\u2080' := matrix3sumCompositionAlt_pivotA\u2081_Dr\u2080 A\u2081 r\u2080 r\u2081 c\u2080 c\u2081 hij;\n  let r\u2081' := matrix3sumCompositionAlt_pivotA\u2081_Dr\u2081 A\u2081 r\u2080 r\u2081 c\u2080 c\u2081 hij;\n  (\u25acr\u2080' \u229f \u25acr\u2081' \u229f A\u2081).IsTotallyUnimodular \u2227 \u2200 (j : \u2191Y\u2081), (r\u2080' + r\u2081') j \u2208 SignType.cast.range",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/030a9fb331e63ebaec29474c41a31b7a1873e739/Seymour/Matroid/Operations/Sum3.lean#L290"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-04-10T23:41:15+02:00",
        "inclusion_date": "2025-04-17T03:44:07.600361+00:00"
      },
      "id": "1c5ccde4ac040f9d77a431a18991182aa79533c8a7aed861342fa8b1c973c50b"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "030a9fb331e63ebaec29474c41a31b7a1873e739",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 306,
        "start_column": 4,
        "end_line": 306,
        "end_column": 9,
        "file": "Seymour/Matroid/Operations/Sum3.lean"
      },
      "debug_info": {
        "goal": "case hBD\n\u03b1 : Type\ninst\u271d : DecidableEq \u03b1\nX\u2081 Y\u2081 X\u2082 Y\u2082 : Set \u03b1\nA\u2081 : Matrix \u2191X\u2081 \u2191Y\u2081 \u211a\nA\u2082 : Matrix \u2191X\u2082 \u2191Y\u2082 \u211a\nr\u2080 r\u2081 : \u2191Y\u2081 \u2192 \u211a\nc\u2080 c\u2081 : \u2191X\u2082 \u2192 \u211a\ni : \u2191X\u2081\nj : \u2191Y\u2081\nhij : A\u2081 i j = 1 \u2228 A\u2081 i j = -1\nB : Matrix (\u2191X\u2081 \u2295 \u2191X\u2082) (\u2191Y\u2081 \u2295 \u2191Y\u2082) \u211a := matrix3sumCompositionAlt A\u2081 A\u2082 r\u2080 r\u2081 c\u2080 c\u2081\nr\u2080' : \u2191Y\u2081 \u2192 \u211a := matrix3sumCompositionAlt_pivotA\u2081_Dr\u2080 A\u2081 r\u2080 r\u2081 c\u2080 c\u2081 hij\nr\u2081' : \u2191Y\u2081 \u2192 \u211a := matrix3sumCompositionAlt_pivotA\u2081_Dr\u2081 A\u2081 r\u2080 r\u2081 c\u2080 c\u2081 hij\nhBA\u2081 : (B.shortTableauPivot \u25e9i \u25e9j).toBlocks\u2081\u2081 = A\u2081.shortTableauPivot i j\nhB0 : (B.shortTableauPivot \u25e9i \u25e9j).toBlocks\u2081\u2082 = 0\n\u22a2 (B.shortTableauPivot \u25e9i \u25e9j).toBlocks\u2082\u2081 = (fun x1 x2 => c\u2080 x1 * r\u2080' x2) + fun x1 x2 => c\u2081 x1 * r\u2081' x2",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/030a9fb331e63ebaec29474c41a31b7a1873e739/Seymour/Matroid/Operations/Sum3.lean#L306"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-04-10T23:41:15+02:00",
        "inclusion_date": "2025-04-17T03:44:07.600361+00:00"
      },
      "id": "865f0f59aef4ba10c90fea66d0cfb0764d0fc8043cccbe51829baf0f1fe96389"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "030a9fb331e63ebaec29474c41a31b7a1873e739",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 374,
        "start_column": 8,
        "end_line": 374,
        "end_column": 13,
        "file": "Seymour/Matroid/Operations/Sum3.lean"
      },
      "debug_info": {
        "goal": "\u03b1\u271d\u00b9 \u03b1\u271d \u03b1 : Type\ninst\u271d : DecidableEq \u03b1\nX\u2081 Y\u2081 X\u2082 Y\u2082 : Set \u03b1\nn : \u2115\nih :\n  \u2200 {A\u2081 : Matrix \u2191X\u2081 \u2191Y\u2081 \u211a} {A\u2082 : Matrix \u2191X\u2082 \u2191Y\u2082 \u211a} {r\u2080 r\u2081 : \u2191Y\u2081 \u2192 \u211a} {c\u2080 c\u2081 : \u2191X\u2082 \u2192 \u211a},\n    (\u25acr\u2080 \u229f \u25acr\u2081 \u229f A\u2081).IsTotallyUnimodular \u2192\n      (\u25aec\u2080 \u25eb \u25aec\u2081 \u25eb A\u2082).IsTotallyUnimodular \u2192\n        (\u2200 (i : \u2191X\u2082), (c\u2080 - c\u2081) i \u2208 SignType.cast.range) \u2192\n          (\u2200 (j : \u2191Y\u2081), (r\u2080 + r\u2081) j \u2208 SignType.cast.range) \u2192\n            (matrix3sumCompositionAlt A\u2081 A\u2082 r\u2080 r\u2081 c\u2080 c\u2081).IsPreTU (n + 1)\nA\u2081 : Matrix \u2191X\u2081 \u2191Y\u2081 \u211a\nA\u2082 : Matrix \u2191X\u2082 \u2191Y\u2082 \u211a\nr\u2080 r\u2081 : \u2191Y\u2081 \u2192 \u211a\nc\u2080 c\u2081 : \u2191X\u2082 \u2192 \u211a\nhrrA\u2081 : (\u25acr\u2080 \u229f \u25acr\u2081 \u229f A\u2081).IsTotallyUnimodular\nhccA\u2082 : (\u25aec\u2080 \u25eb \u25aec\u2081 \u25eb A\u2082).IsTotallyUnimodular\nhcc : \u2200 (i : \u2191X\u2082), (c\u2080 - c\u2081) i \u2208 SignType.cast.range\nhrr : \u2200 (j : \u2191Y\u2081), (r\u2080 + r\u2081) j \u2208 SignType.cast.range\nhA\u2081 : A\u2081.IsTotallyUnimodular\nhA\u2082 : A\u2082.IsTotallyUnimodular\ncontr : \u00ac(matrix3sumCompositionAlt A\u2081 A\u2082 r\u2080 r\u2081 c\u2080 c\u2081).IsPreTU (n + 1 + 1)\nf : Fin (n + 1 + 1) \u2192 \u2191X\u2081 \u2295 \u2191X\u2082\ng : Fin (n + 1 + 1) \u2192 \u2191Y\u2081 \u2295 \u2191Y\u2082\nhAfg : ((matrix3sumCompositionAlt A\u2081 A\u2082 r\u2080 r\u2081 c\u2080 c\u2081).submatrix f g).det \u2209 SignType.cast.range\nhf : Function.Injective f\nhg : Function.Injective g\ni\u2081 : Fin (n + 2)\nx\u2081 : \u2191X\u2081\nhix\u2081 : f i\u2081 = \u25e9x\u2081\nj\u2080 : Fin (n + 2)\ny\u2080 : \u2191Y\u2081\nhjy\u2080 : g j\u2080 = \u25e9y\u2080\nhAxy0 : A\u2081 x\u2081 y\u2080 \u2260 0\nhAxy1 : A\u2081 x\u2081 y\u2080 = 1 \u2228 A\u2081 x\u2081 y\u2080 = -1\nf' g' : Fin (n + 1) \u2192 Fin (n + 1).succ\nimpossible :\n  ((((matrix3sumCompositionAlt A\u2081 A\u2082 r\u2080 r\u2081 c\u2080 c\u2081).submatrix f g).shortTableauPivot i\u2081 j\u2080).submatrix f' g').det \u2209\n    SignType.cast.range\n\u22a2 (\u25acmatrix3sumCompositionAlt_pivotA\u2081_Dr\u2080 A\u2081 r\u2080 r\u2081 c\u2080 c\u2081 hAxy1 \u229f\n        \u25acmatrix3sumCompositionAlt_pivotA\u2081_Dr\u2081 A\u2081 r\u2080 r\u2081 c\u2080 c\u2081 hAxy1 \u229f\n      A\u2081.shortTableauPivot x\u2081 y\u2080).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/030a9fb331e63ebaec29474c41a31b7a1873e739/Seymour/Matroid/Operations/Sum3.lean#L374"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-04-11T11:25:57+02:00",
        "inclusion_date": "2025-04-17T03:44:07.600361+00:00"
      },
      "id": "e741ab45f3d76d10d711a97a962113876520876fd36a48c0d32dc7987100fd8e"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "030a9fb331e63ebaec29474c41a31b7a1873e739",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 375,
        "start_column": 8,
        "end_line": 375,
        "end_column": 13,
        "file": "Seymour/Matroid/Operations/Sum3.lean"
      },
      "debug_info": {
        "goal": "\u03b1\u271d\u00b9 \u03b1\u271d \u03b1 : Type\ninst\u271d : DecidableEq \u03b1\nX\u2081 Y\u2081 X\u2082 Y\u2082 : Set \u03b1\nn : \u2115\nih :\n  \u2200 {A\u2081 : Matrix \u2191X\u2081 \u2191Y\u2081 \u211a} {A\u2082 : Matrix \u2191X\u2082 \u2191Y\u2082 \u211a} {r\u2080 r\u2081 : \u2191Y\u2081 \u2192 \u211a} {c\u2080 c\u2081 : \u2191X\u2082 \u2192 \u211a},\n    (\u25acr\u2080 \u229f \u25acr\u2081 \u229f A\u2081).IsTotallyUnimodular \u2192\n      (\u25aec\u2080 \u25eb \u25aec\u2081 \u25eb A\u2082).IsTotallyUnimodular \u2192\n        (\u2200 (i : \u2191X\u2082), (c\u2080 - c\u2081) i \u2208 SignType.cast.range) \u2192\n          (\u2200 (j : \u2191Y\u2081), (r\u2080 + r\u2081) j \u2208 SignType.cast.range) \u2192\n            (matrix3sumCompositionAlt A\u2081 A\u2082 r\u2080 r\u2081 c\u2080 c\u2081).IsPreTU (n + 1)\nA\u2081 : Matrix \u2191X\u2081 \u2191Y\u2081 \u211a\nA\u2082 : Matrix \u2191X\u2082 \u2191Y\u2082 \u211a\nr\u2080 r\u2081 : \u2191Y\u2081 \u2192 \u211a\nc\u2080 c\u2081 : \u2191X\u2082 \u2192 \u211a\nhrrA\u2081 : (\u25acr\u2080 \u229f \u25acr\u2081 \u229f A\u2081).IsTotallyUnimodular\nhccA\u2082 : (\u25aec\u2080 \u25eb \u25aec\u2081 \u25eb A\u2082).IsTotallyUnimodular\nhcc : \u2200 (i : \u2191X\u2082), (c\u2080 - c\u2081) i \u2208 SignType.cast.range\nhrr : \u2200 (j : \u2191Y\u2081), (r\u2080 + r\u2081) j \u2208 SignType.cast.range\nhA\u2081 : A\u2081.IsTotallyUnimodular\nhA\u2082 : A\u2082.IsTotallyUnimodular\ncontr : \u00ac(matrix3sumCompositionAlt A\u2081 A\u2082 r\u2080 r\u2081 c\u2080 c\u2081).IsPreTU (n + 1 + 1)\nf : Fin (n + 1 + 1) \u2192 \u2191X\u2081 \u2295 \u2191X\u2082\ng : Fin (n + 1 + 1) \u2192 \u2191Y\u2081 \u2295 \u2191Y\u2082\nhAfg : ((matrix3sumCompositionAlt A\u2081 A\u2082 r\u2080 r\u2081 c\u2080 c\u2081).submatrix f g).det \u2209 SignType.cast.range\nhf : Function.Injective f\nhg : Function.Injective g\ni\u2081 : Fin (n + 2)\nx\u2081 : \u2191X\u2081\nhix\u2081 : f i\u2081 = \u25e9x\u2081\nj\u2080 : Fin (n + 2)\ny\u2080 : \u2191Y\u2081\nhjy\u2080 : g j\u2080 = \u25e9y\u2080\nhAxy0 : A\u2081 x\u2081 y\u2080 \u2260 0\nhAxy1 : A\u2081 x\u2081 y\u2080 = 1 \u2228 A\u2081 x\u2081 y\u2080 = -1\nf' g' : Fin (n + 1) \u2192 Fin (n + 1).succ\nimpossible :\n  ((((matrix3sumCompositionAlt A\u2081 A\u2082 r\u2080 r\u2081 c\u2080 c\u2081).submatrix f g).shortTableauPivot i\u2081 j\u2080).submatrix f' g').det \u2209\n    SignType.cast.range\n\u22a2 \u2200 (j : \u2191Y\u2081),\n    (matrix3sumCompositionAlt_pivotA\u2081_Dr\u2080 A\u2081 r\u2080 r\u2081 c\u2080 c\u2081 hAxy1 +\n          matrix3sumCompositionAlt_pivotA\u2081_Dr\u2081 A\u2081 r\u2080 r\u2081 c\u2080 c\u2081 hAxy1)\n        j \u2208\n      SignType.cast.range",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/030a9fb331e63ebaec29474c41a31b7a1873e739/Seymour/Matroid/Operations/Sum3.lean#L375"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-04-11T11:25:57+02:00",
        "inclusion_date": "2025-04-17T03:44:07.600361+00:00"
      },
      "id": "cfd997940bc37370a7ac40c2cba1ea38c9d7f88abe71d0c0111f095771820aa8"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "030a9fb331e63ebaec29474c41a31b7a1873e739",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 434,
        "start_column": 8,
        "end_line": 434,
        "end_column": 13,
        "file": "Seymour/Matroid/Operations/Sum3.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2075 : DecidableEq \u03b1\n\u03b2 : Type\ninst\u271d\u2074 : Field \u03b2\nX\u2081 Y\u2081 X\u2082 Y\u2082 : Set \u03b1\nx\u2080 x\u2081 x' y\u2080 y\u2081 y' : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2081 \\ (x\u2080 \u1543 x\u2081 \u1543 {x'}))\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2082 \\ (x\u2080 \u1543 x\u2081 \u1543 {x'}))\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2081 \\ (y\u2080 \u1543 y\u2081 \u1543 {y'}))\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2082 \\ (y\u2080 \u1543 y\u2081 \u1543 {y'}))\nB\u2081 : Matrix (\u2191X\u2081) (\u2191Y\u2081) \u03b2\nB\u2082 : Matrix (\u2191X\u2082) (\u2191Y\u2082) \u03b2\nhX\u2081X\u2082 : X\u2081 \u2229 X\u2082 = x\u2080 \u1543 x\u2081 \u1543 {x'}\nhY\u2081Y\u2082 : Y\u2081 \u2229 Y\u2082 = y\u2080 \u1543 y\u2081 \u1543 {y'}\nB : Matrix (\u2191(X\u2081 \\ (x\u2080 \u1543 {x\u2081})) \u2295 \u2191(X\u2082 \\ {x'})) (\u2191(Y\u2081 \\ {y'}) \u2295 \u2191(Y\u2082 \\ (y\u2080 \u1543 {y\u2081}))) \u03b2 \u00d7 Prop\nhB : B = matrix3sumComposition_standard B\u2081 B\u2082 hX\u2081X\u2082 hY\u2081Y\u2082\nhrX\u2081\u271d : x\u2080 \u1543 x\u2081 \u1543 {x'} \u2286 X\u2081 := HasSubset.Subset.trans (Eq.subset (Eq.symm hX\u2081X\u2082)) Set.inter_subset_left\nx\u2080inX\u2081\u271d : x\u2080 \u2208 X\u2081 := hrX\u2081\u271d (Set.mem_insert x\u2080 (x\u2081 \u1543 {x'}))\nx\u2081inX\u2081\u271d : x\u2081 \u2208 X\u2081 := hrX\u2081\u271d (Eq.symm (Set.insert_comm x\u2080 x\u2081 {x'}) \u25b8 Set.mem_insert x\u2081 (x\u2080 \u1543 {x'}))\nhcY\u2081\u271d : y\u2080 \u1543 y\u2081 \u1543 {y'} \u2286 Y\u2081 := HasSubset.Subset.trans (Eq.subset (Eq.symm hY\u2081Y\u2082)) Set.inter_subset_left\nhcY\u2082\u271d : y\u2080 \u1543 y\u2081 \u1543 {y'} \u2286 Y\u2082 := HasSubset.Subset.trans (Eq.subset (Eq.symm hY\u2081Y\u2082)) Set.inter_subset_right\ny\u2080inY\u2081\u271d : y\u2080 \u2208 Y\u2081 := hcY\u2081\u271d (Set.mem_insert y\u2080 (y\u2081 \u1543 {y'}))\ny\u2080inY\u2082\u271d : y\u2080 \u2208 Y\u2082 := hcY\u2082\u271d (Set.mem_insert y\u2080 (y\u2081 \u1543 {y'}))\ny\u2081inY\u2081\u271d : y\u2081 \u2208 Y\u2081 := hcY\u2081\u271d (Eq.symm (Set.insert_comm y\u2080 y\u2081 {y'}) \u25b8 Set.mem_insert y\u2081 (y\u2080 \u1543 {y'}))\ny\u2081inY\u2082\u271d : y\u2081 \u2208 Y\u2082 := hcY\u2082\u271d (Eq.symm (Set.insert_comm y\u2080 y\u2081 {y'}) \u25b8 Set.mem_insert y\u2081 (y\u2080 \u1543 {y'}))\nA\u2081 : Matrix (\u2191(X\u2081 \\ (x\u2080 \u1543 {x\u2081}))) (\u2191(Y\u2081 \\ {y'})) \u03b2 := B\u2081.submatrix \u22ef.elem \u22ef.elem\nA\u2082 : Matrix (\u2191(X\u2082 \\ {x'})) (\u2191(Y\u2082 \\ (y\u2080 \u1543 {y\u2081}))) \u03b2 := B\u2082.submatrix \u22ef.elem \u22ef.elem\nc\u2080 : \u2191(X\u2082 \\ {x'}) \u2192 \u03b2 := fun i => B\u2082 (\u22ef.elem i) \u27e8y\u2080, y\u2080inY\u2082\u271d\u27e9\nc\u2081 : \u2191(X\u2082 \\ {x'}) \u2192 \u03b2 := fun i => B\u2082 (\u22ef.elem i) \u27e8y\u2081, y\u2081inY\u2082\u271d\u27e9\nv\u2080 : \u2191(Y\u2081 \\ {y'}) \u2192 \u03b2 := B\u2081 \u27e8x\u2080, x\u2080inX\u2081\u271d\u27e9 \u2218 \u22ef.elem\nv\u2081 : \u2191(Y\u2081 \\ {y'}) \u2192 \u03b2 := B\u2081 \u27e8x\u2081, x\u2081inX\u2081\u271d\u27e9 \u2218 \u22ef.elem\nD\u2080\u2081 : Matrix (Fin 2) (Fin 2) \u03b2 :=\n  !![B\u2081 \u27e8x\u2080, x\u2080inX\u2081\u271d\u27e9 \u27e8y\u2080, y\u2080inY\u2081\u271d\u27e9, B\u2081 \u27e8x\u2080, x\u2080inX\u2081\u271d\u27e9 \u27e8y\u2081, y\u2081inY\u2081\u271d\u27e9;\n    B\u2081 \u27e8x\u2081, x\u2081inX\u2081\u271d\u27e9 \u27e8y\u2080, y\u2080inY\u2081\u271d\u27e9, B\u2081 \u27e8x\u2081, x\u2081inX\u2081\u271d\u27e9 \u27e8y\u2081, y\u2081inY\u2081\u271d\u27e9]\nr\u2080 : \u2191(Y\u2081 \\ {y'}) \u2192 \u03b2 := fun i => D\u2080\u2081\u207b\u00b9 0 0 * v\u2080 i + D\u2080\u2081\u207b\u00b9 0 1 * v\u2081 i\nr\u2081 : \u2191(Y\u2081 \\ {y'}) \u2192 \u03b2 := fun i => D\u2080\u2081\u207b\u00b9 1 0 * v\u2080 i + D\u2080\u2081\u207b\u00b9 1 1 * v\u2081 i\nhB\u2081\u2081 : (matrix3sumComposition_standard B\u2081 B\u2082 hX\u2081X\u2082 hY\u2081Y\u2082).1.toBlocks\u2081\u2081 = A\u2081\nhB\u2081\u2082 : (matrix3sumComposition_standard B\u2081 B\u2082 hX\u2081X\u2082 hY\u2081Y\u2082).1.toBlocks\u2081\u2082 = 0\nhB\u2082\u2082 : (matrix3sumComposition_standard B\u2081 B\u2082 hX\u2081X\u2082 hY\u2081Y\u2082).1.toBlocks\u2082\u2082 = A\u2082\ni : \u2191(X\u2082 \\ {x'})\nj : \u2191(Y\u2081 \\ {y'})\nhi : \u2191i = x\u2080\nhj : \u2191j = y\u2080\n\u22a2 Matrix.fromBlocks ![B\u2081 \u27e8x\u2080, \u22ef\u27e9 \u2218 \u22ef.elem, B\u2081 \u27e8x\u2081, \u22ef\u27e9 \u2218 \u22ef.elem]\n      !![B\u2081 \u27e8x\u2080, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9, B\u2081 \u27e8x\u2080, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9; B\u2081 \u27e8x\u2081, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9, B\u2081 \u27e8x\u2081, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9]\n      ((Matrix.of fun i => ![B\u2082 \u27e8\u2191i, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9, B\u2082 \u27e8\u2191i, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9]) *\n          !![B\u2081 \u27e8x\u2080, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9, B\u2081 \u27e8x\u2080, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9; B\u2081 \u27e8x\u2081, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9, B\u2081 \u27e8x\u2081, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9]\u207b\u00b9 *\n        ![B\u2081 \u27e8x\u2080, \u22ef\u27e9 \u2218 \u22ef.elem, B\u2081 \u27e8x\u2081, \u22ef\u27e9 \u2218 \u22ef.elem])\n      (Matrix.of fun i => ![B\u2082 \u27e8\u2191i, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9, B\u2082 \u27e8\u2191i, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9])\n      (if hi\u2080 : \u2191i = x\u2080 then \u25e90\n      else if hi\u2081 : \u2191i = x\u2081 then \u25e91 else if hi : \u2191i \u2208 X\u2082 \\ (x\u2080 \u1543 x\u2081 \u1543 {x'}) then \u25ea\u27e8\u2191i, hi\u27e9 else \u22ef.elim)\n      (if hj\u2080 : \u2191j = y\u2080 then \u25ea0\n      else if hj\u2081 : \u2191j = y\u2081 then \u25ea1 else if hj : \u2191j \u2208 Y\u2081 \\ (y\u2080 \u1543 y\u2081 \u1543 {y'}) then \u25e9\u27e8\u2191j, hj\u27e9 else \u22ef.elim) =\n    c\u2080 i * r\u2080 j + c\u2081 i * r\u2081 j",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/030a9fb331e63ebaec29474c41a31b7a1873e739/Seymour/Matroid/Operations/Sum3.lean#L434"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-04-10T23:41:15+02:00",
        "inclusion_date": "2025-04-17T03:44:07.600361+00:00"
      },
      "id": "aa76d759a10171421bf31a81741e5d9724ed586c951301cf003f3276cce8c869"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "030a9fb331e63ebaec29474c41a31b7a1873e739",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 436,
        "start_column": 8,
        "end_line": 436,
        "end_column": 13,
        "file": "Seymour/Matroid/Operations/Sum3.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2075 : DecidableEq \u03b1\n\u03b2 : Type\ninst\u271d\u2074 : Field \u03b2\nX\u2081 Y\u2081 X\u2082 Y\u2082 : Set \u03b1\nx\u2080 x\u2081 x' y\u2080 y\u2081 y' : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2081 \\ (x\u2080 \u1543 x\u2081 \u1543 {x'}))\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2082 \\ (x\u2080 \u1543 x\u2081 \u1543 {x'}))\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2081 \\ (y\u2080 \u1543 y\u2081 \u1543 {y'}))\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2082 \\ (y\u2080 \u1543 y\u2081 \u1543 {y'}))\nB\u2081 : Matrix (\u2191X\u2081) (\u2191Y\u2081) \u03b2\nB\u2082 : Matrix (\u2191X\u2082) (\u2191Y\u2082) \u03b2\nhX\u2081X\u2082 : X\u2081 \u2229 X\u2082 = x\u2080 \u1543 x\u2081 \u1543 {x'}\nhY\u2081Y\u2082 : Y\u2081 \u2229 Y\u2082 = y\u2080 \u1543 y\u2081 \u1543 {y'}\nB : Matrix (\u2191(X\u2081 \\ (x\u2080 \u1543 {x\u2081})) \u2295 \u2191(X\u2082 \\ {x'})) (\u2191(Y\u2081 \\ {y'}) \u2295 \u2191(Y\u2082 \\ (y\u2080 \u1543 {y\u2081}))) \u03b2 \u00d7 Prop\nhB : B = matrix3sumComposition_standard B\u2081 B\u2082 hX\u2081X\u2082 hY\u2081Y\u2082\nhrX\u2081\u271d : x\u2080 \u1543 x\u2081 \u1543 {x'} \u2286 X\u2081 := HasSubset.Subset.trans (Eq.subset (Eq.symm hX\u2081X\u2082)) Set.inter_subset_left\nx\u2080inX\u2081\u271d : x\u2080 \u2208 X\u2081 := hrX\u2081\u271d (Set.mem_insert x\u2080 (x\u2081 \u1543 {x'}))\nx\u2081inX\u2081\u271d : x\u2081 \u2208 X\u2081 := hrX\u2081\u271d (Eq.symm (Set.insert_comm x\u2080 x\u2081 {x'}) \u25b8 Set.mem_insert x\u2081 (x\u2080 \u1543 {x'}))\nhcY\u2081\u271d : y\u2080 \u1543 y\u2081 \u1543 {y'} \u2286 Y\u2081 := HasSubset.Subset.trans (Eq.subset (Eq.symm hY\u2081Y\u2082)) Set.inter_subset_left\nhcY\u2082\u271d : y\u2080 \u1543 y\u2081 \u1543 {y'} \u2286 Y\u2082 := HasSubset.Subset.trans (Eq.subset (Eq.symm hY\u2081Y\u2082)) Set.inter_subset_right\ny\u2080inY\u2081\u271d : y\u2080 \u2208 Y\u2081 := hcY\u2081\u271d (Set.mem_insert y\u2080 (y\u2081 \u1543 {y'}))\ny\u2080inY\u2082\u271d : y\u2080 \u2208 Y\u2082 := hcY\u2082\u271d (Set.mem_insert y\u2080 (y\u2081 \u1543 {y'}))\ny\u2081inY\u2081\u271d : y\u2081 \u2208 Y\u2081 := hcY\u2081\u271d (Eq.symm (Set.insert_comm y\u2080 y\u2081 {y'}) \u25b8 Set.mem_insert y\u2081 (y\u2080 \u1543 {y'}))\ny\u2081inY\u2082\u271d : y\u2081 \u2208 Y\u2082 := hcY\u2082\u271d (Eq.symm (Set.insert_comm y\u2080 y\u2081 {y'}) \u25b8 Set.mem_insert y\u2081 (y\u2080 \u1543 {y'}))\nA\u2081 : Matrix (\u2191(X\u2081 \\ (x\u2080 \u1543 {x\u2081}))) (\u2191(Y\u2081 \\ {y'})) \u03b2 := B\u2081.submatrix \u22ef.elem \u22ef.elem\nA\u2082 : Matrix (\u2191(X\u2082 \\ {x'})) (\u2191(Y\u2082 \\ (y\u2080 \u1543 {y\u2081}))) \u03b2 := B\u2082.submatrix \u22ef.elem \u22ef.elem\nc\u2080 : \u2191(X\u2082 \\ {x'}) \u2192 \u03b2 := fun i => B\u2082 (\u22ef.elem i) \u27e8y\u2080, y\u2080inY\u2082\u271d\u27e9\nc\u2081 : \u2191(X\u2082 \\ {x'}) \u2192 \u03b2 := fun i => B\u2082 (\u22ef.elem i) \u27e8y\u2081, y\u2081inY\u2082\u271d\u27e9\nv\u2080 : \u2191(Y\u2081 \\ {y'}) \u2192 \u03b2 := B\u2081 \u27e8x\u2080, x\u2080inX\u2081\u271d\u27e9 \u2218 \u22ef.elem\nv\u2081 : \u2191(Y\u2081 \\ {y'}) \u2192 \u03b2 := B\u2081 \u27e8x\u2081, x\u2081inX\u2081\u271d\u27e9 \u2218 \u22ef.elem\nD\u2080\u2081 : Matrix (Fin 2) (Fin 2) \u03b2 :=\n  !![B\u2081 \u27e8x\u2080, x\u2080inX\u2081\u271d\u27e9 \u27e8y\u2080, y\u2080inY\u2081\u271d\u27e9, B\u2081 \u27e8x\u2080, x\u2080inX\u2081\u271d\u27e9 \u27e8y\u2081, y\u2081inY\u2081\u271d\u27e9;\n    B\u2081 \u27e8x\u2081, x\u2081inX\u2081\u271d\u27e9 \u27e8y\u2080, y\u2080inY\u2081\u271d\u27e9, B\u2081 \u27e8x\u2081, x\u2081inX\u2081\u271d\u27e9 \u27e8y\u2081, y\u2081inY\u2081\u271d\u27e9]\nr\u2080 : \u2191(Y\u2081 \\ {y'}) \u2192 \u03b2 := fun i => D\u2080\u2081\u207b\u00b9 0 0 * v\u2080 i + D\u2080\u2081\u207b\u00b9 0 1 * v\u2081 i\nr\u2081 : \u2191(Y\u2081 \\ {y'}) \u2192 \u03b2 := fun i => D\u2080\u2081\u207b\u00b9 1 0 * v\u2080 i + D\u2080\u2081\u207b\u00b9 1 1 * v\u2081 i\nhB\u2081\u2081 : (matrix3sumComposition_standard B\u2081 B\u2082 hX\u2081X\u2082 hY\u2081Y\u2082).1.toBlocks\u2081\u2081 = A\u2081\nhB\u2081\u2082 : (matrix3sumComposition_standard B\u2081 B\u2082 hX\u2081X\u2082 hY\u2081Y\u2082).1.toBlocks\u2081\u2082 = 0\nhB\u2082\u2082 : (matrix3sumComposition_standard B\u2081 B\u2082 hX\u2081X\u2082 hY\u2081Y\u2082).1.toBlocks\u2082\u2082 = A\u2082\ni : \u2191(X\u2082 \\ {x'})\nj : \u2191(Y\u2081 \\ {y'})\nhi : \u2191i = x\u2080\nhj : \u00ac\u2191j = y\u2080\n\u22a2 Matrix.fromBlocks ![B\u2081 \u27e8x\u2080, \u22ef\u27e9 \u2218 \u22ef.elem, B\u2081 \u27e8x\u2081, \u22ef\u27e9 \u2218 \u22ef.elem]\n      !![B\u2081 \u27e8x\u2080, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9, B\u2081 \u27e8x\u2080, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9; B\u2081 \u27e8x\u2081, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9, B\u2081 \u27e8x\u2081, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9]\n      ((Matrix.of fun i => ![B\u2082 \u27e8\u2191i, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9, B\u2082 \u27e8\u2191i, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9]) *\n          !![B\u2081 \u27e8x\u2080, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9, B\u2081 \u27e8x\u2080, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9; B\u2081 \u27e8x\u2081, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9, B\u2081 \u27e8x\u2081, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9]\u207b\u00b9 *\n        ![B\u2081 \u27e8x\u2080, \u22ef\u27e9 \u2218 \u22ef.elem, B\u2081 \u27e8x\u2081, \u22ef\u27e9 \u2218 \u22ef.elem])\n      (Matrix.of fun i => ![B\u2082 \u27e8\u2191i, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9, B\u2082 \u27e8\u2191i, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9])\n      (if hi\u2080 : \u2191i = x\u2080 then \u25e90\n      else if hi\u2081 : \u2191i = x\u2081 then \u25e91 else if hi : \u2191i \u2208 X\u2082 \\ (x\u2080 \u1543 x\u2081 \u1543 {x'}) then \u25ea\u27e8\u2191i, hi\u27e9 else \u22ef.elim)\n      (if hj\u2080 : \u2191j = y\u2080 then \u25ea0\n      else if hj\u2081 : \u2191j = y\u2081 then \u25ea1 else if hj : \u2191j \u2208 Y\u2081 \\ (y\u2080 \u1543 y\u2081 \u1543 {y'}) then \u25e9\u27e8\u2191j, hj\u27e9 else \u22ef.elim) =\n    c\u2080 i * r\u2080 j + c\u2081 i * r\u2081 j",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/030a9fb331e63ebaec29474c41a31b7a1873e739/Seymour/Matroid/Operations/Sum3.lean#L436"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-04-10T23:41:15+02:00",
        "inclusion_date": "2025-04-17T03:44:07.600361+00:00"
      },
      "id": "a5ff7ec9365ba247fd352dc74400c800ecae6c5bab4f3f4fb225960901304992"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "030a9fb331e63ebaec29474c41a31b7a1873e739",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 438,
        "start_column": 6,
        "end_line": 438,
        "end_column": 11,
        "file": "Seymour/Matroid/Operations/Sum3.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2075 : DecidableEq \u03b1\n\u03b2 : Type\ninst\u271d\u2074 : Field \u03b2\nX\u2081 Y\u2081 X\u2082 Y\u2082 : Set \u03b1\nx\u2080 x\u2081 x' y\u2080 y\u2081 y' : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2081 \\ (x\u2080 \u1543 x\u2081 \u1543 {x'}))\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2082 \\ (x\u2080 \u1543 x\u2081 \u1543 {x'}))\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2081 \\ (y\u2080 \u1543 y\u2081 \u1543 {y'}))\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2082 \\ (y\u2080 \u1543 y\u2081 \u1543 {y'}))\nB\u2081 : Matrix (\u2191X\u2081) (\u2191Y\u2081) \u03b2\nB\u2082 : Matrix (\u2191X\u2082) (\u2191Y\u2082) \u03b2\nhX\u2081X\u2082 : X\u2081 \u2229 X\u2082 = x\u2080 \u1543 x\u2081 \u1543 {x'}\nhY\u2081Y\u2082 : Y\u2081 \u2229 Y\u2082 = y\u2080 \u1543 y\u2081 \u1543 {y'}\nB : Matrix (\u2191(X\u2081 \\ (x\u2080 \u1543 {x\u2081})) \u2295 \u2191(X\u2082 \\ {x'})) (\u2191(Y\u2081 \\ {y'}) \u2295 \u2191(Y\u2082 \\ (y\u2080 \u1543 {y\u2081}))) \u03b2 \u00d7 Prop\nhB : B = matrix3sumComposition_standard B\u2081 B\u2082 hX\u2081X\u2082 hY\u2081Y\u2082\nhrX\u2081\u271d : x\u2080 \u1543 x\u2081 \u1543 {x'} \u2286 X\u2081 := HasSubset.Subset.trans (Eq.subset (Eq.symm hX\u2081X\u2082)) Set.inter_subset_left\nx\u2080inX\u2081\u271d : x\u2080 \u2208 X\u2081 := hrX\u2081\u271d (Set.mem_insert x\u2080 (x\u2081 \u1543 {x'}))\nx\u2081inX\u2081\u271d : x\u2081 \u2208 X\u2081 := hrX\u2081\u271d (Eq.symm (Set.insert_comm x\u2080 x\u2081 {x'}) \u25b8 Set.mem_insert x\u2081 (x\u2080 \u1543 {x'}))\nhcY\u2081\u271d : y\u2080 \u1543 y\u2081 \u1543 {y'} \u2286 Y\u2081 := HasSubset.Subset.trans (Eq.subset (Eq.symm hY\u2081Y\u2082)) Set.inter_subset_left\nhcY\u2082\u271d : y\u2080 \u1543 y\u2081 \u1543 {y'} \u2286 Y\u2082 := HasSubset.Subset.trans (Eq.subset (Eq.symm hY\u2081Y\u2082)) Set.inter_subset_right\ny\u2080inY\u2081\u271d : y\u2080 \u2208 Y\u2081 := hcY\u2081\u271d (Set.mem_insert y\u2080 (y\u2081 \u1543 {y'}))\ny\u2080inY\u2082\u271d : y\u2080 \u2208 Y\u2082 := hcY\u2082\u271d (Set.mem_insert y\u2080 (y\u2081 \u1543 {y'}))\ny\u2081inY\u2081\u271d : y\u2081 \u2208 Y\u2081 := hcY\u2081\u271d (Eq.symm (Set.insert_comm y\u2080 y\u2081 {y'}) \u25b8 Set.mem_insert y\u2081 (y\u2080 \u1543 {y'}))\ny\u2081inY\u2082\u271d : y\u2081 \u2208 Y\u2082 := hcY\u2082\u271d (Eq.symm (Set.insert_comm y\u2080 y\u2081 {y'}) \u25b8 Set.mem_insert y\u2081 (y\u2080 \u1543 {y'}))\nA\u2081 : Matrix (\u2191(X\u2081 \\ (x\u2080 \u1543 {x\u2081}))) (\u2191(Y\u2081 \\ {y'})) \u03b2 := B\u2081.submatrix \u22ef.elem \u22ef.elem\nA\u2082 : Matrix (\u2191(X\u2082 \\ {x'})) (\u2191(Y\u2082 \\ (y\u2080 \u1543 {y\u2081}))) \u03b2 := B\u2082.submatrix \u22ef.elem \u22ef.elem\nc\u2080 : \u2191(X\u2082 \\ {x'}) \u2192 \u03b2 := fun i => B\u2082 (\u22ef.elem i) \u27e8y\u2080, y\u2080inY\u2082\u271d\u27e9\nc\u2081 : \u2191(X\u2082 \\ {x'}) \u2192 \u03b2 := fun i => B\u2082 (\u22ef.elem i) \u27e8y\u2081, y\u2081inY\u2082\u271d\u27e9\nv\u2080 : \u2191(Y\u2081 \\ {y'}) \u2192 \u03b2 := B\u2081 \u27e8x\u2080, x\u2080inX\u2081\u271d\u27e9 \u2218 \u22ef.elem\nv\u2081 : \u2191(Y\u2081 \\ {y'}) \u2192 \u03b2 := B\u2081 \u27e8x\u2081, x\u2081inX\u2081\u271d\u27e9 \u2218 \u22ef.elem\nD\u2080\u2081 : Matrix (Fin 2) (Fin 2) \u03b2 :=\n  !![B\u2081 \u27e8x\u2080, x\u2080inX\u2081\u271d\u27e9 \u27e8y\u2080, y\u2080inY\u2081\u271d\u27e9, B\u2081 \u27e8x\u2080, x\u2080inX\u2081\u271d\u27e9 \u27e8y\u2081, y\u2081inY\u2081\u271d\u27e9;\n    B\u2081 \u27e8x\u2081, x\u2081inX\u2081\u271d\u27e9 \u27e8y\u2080, y\u2080inY\u2081\u271d\u27e9, B\u2081 \u27e8x\u2081, x\u2081inX\u2081\u271d\u27e9 \u27e8y\u2081, y\u2081inY\u2081\u271d\u27e9]\nr\u2080 : \u2191(Y\u2081 \\ {y'}) \u2192 \u03b2 := fun i => D\u2080\u2081\u207b\u00b9 0 0 * v\u2080 i + D\u2080\u2081\u207b\u00b9 0 1 * v\u2081 i\nr\u2081 : \u2191(Y\u2081 \\ {y'}) \u2192 \u03b2 := fun i => D\u2080\u2081\u207b\u00b9 1 0 * v\u2080 i + D\u2080\u2081\u207b\u00b9 1 1 * v\u2081 i\nhB\u2081\u2081 : (matrix3sumComposition_standard B\u2081 B\u2082 hX\u2081X\u2082 hY\u2081Y\u2082).1.toBlocks\u2081\u2081 = A\u2081\nhB\u2081\u2082 : (matrix3sumComposition_standard B\u2081 B\u2082 hX\u2081X\u2082 hY\u2081Y\u2082).1.toBlocks\u2081\u2082 = 0\nhB\u2082\u2082 : (matrix3sumComposition_standard B\u2081 B\u2082 hX\u2081X\u2082 hY\u2081Y\u2082).1.toBlocks\u2082\u2082 = A\u2082\ni : \u2191(X\u2082 \\ {x'})\nj : \u2191(Y\u2081 \\ {y'})\nhi : \u00ac\u2191i = x\u2080\n\u22a2 Matrix.fromBlocks ![B\u2081 \u27e8x\u2080, \u22ef\u27e9 \u2218 \u22ef.elem, B\u2081 \u27e8x\u2081, \u22ef\u27e9 \u2218 \u22ef.elem]\n      !![B\u2081 \u27e8x\u2080, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9, B\u2081 \u27e8x\u2080, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9; B\u2081 \u27e8x\u2081, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9, B\u2081 \u27e8x\u2081, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9]\n      ((Matrix.of fun i => ![B\u2082 \u27e8\u2191i, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9, B\u2082 \u27e8\u2191i, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9]) *\n          !![B\u2081 \u27e8x\u2080, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9, B\u2081 \u27e8x\u2080, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9; B\u2081 \u27e8x\u2081, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9, B\u2081 \u27e8x\u2081, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9]\u207b\u00b9 *\n        ![B\u2081 \u27e8x\u2080, \u22ef\u27e9 \u2218 \u22ef.elem, B\u2081 \u27e8x\u2081, \u22ef\u27e9 \u2218 \u22ef.elem])\n      (Matrix.of fun i => ![B\u2082 \u27e8\u2191i, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9, B\u2082 \u27e8\u2191i, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9])\n      (if hi\u2080 : \u2191i = x\u2080 then \u25e90\n      else if hi\u2081 : \u2191i = x\u2081 then \u25e91 else if hi : \u2191i \u2208 X\u2082 \\ (x\u2080 \u1543 x\u2081 \u1543 {x'}) then \u25ea\u27e8\u2191i, hi\u27e9 else \u22ef.elim)\n      (if hj\u2080 : \u2191j = y\u2080 then \u25ea0\n      else if hj\u2081 : \u2191j = y\u2081 then \u25ea1 else if hj : \u2191j \u2208 Y\u2081 \\ (y\u2080 \u1543 y\u2081 \u1543 {y'}) then \u25e9\u27e8\u2191j, hj\u27e9 else \u22ef.elim) =\n    c\u2080 i * r\u2080 j + c\u2081 i * r\u2081 j",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/030a9fb331e63ebaec29474c41a31b7a1873e739/Seymour/Matroid/Operations/Sum3.lean#L438"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-04-10T23:41:15+02:00",
        "inclusion_date": "2025-04-17T03:44:07.600361+00:00"
      },
      "id": "bd6a542d87bb919f8e39cc9013ca04c44199a8ba1921658fcb4d22bd077d6cec"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "030a9fb331e63ebaec29474c41a31b7a1873e739",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 450,
        "start_column": 2,
        "end_line": 450,
        "end_column": 7,
        "file": "Seymour/Matroid/Operations/Sum3.lean"
      },
      "debug_info": {
        "goal": "A : Matrix (Fin 2) (Fin 2) Z2\nhA : IsUnit A\n\u22a2 \u2203 f g, A.submatrix \u21d1f \u21d1g = 1 \u2228 A.submatrix \u21d1f \u21d1g = !![1, 1; 0, 1]",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/030a9fb331e63ebaec29474c41a31b7a1873e739/Seymour/Matroid/Operations/Sum3.lean#L450"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-04-10T17:54:51+02:00",
        "inclusion_date": "2025-04-17T03:44:07.600361+00:00"
      },
      "id": "4a11873cf7b94099f001cd99a02c4b9030171229e6c3d816ad56acd687019bd1"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "030a9fb331e63ebaec29474c41a31b7a1873e739",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 515,
        "start_column": 2,
        "end_line": 515,
        "end_column": 7,
        "file": "Seymour/Matroid/Operations/Sum3.lean"
      },
      "debug_info": {
        "goal": "case intro.intro.intro.intro\n\u03b1 : Type\ninst\u271d : DecidableEq \u03b1\nS\u2081 S\u2082 : StandardRepr \u03b1 Z2\nx\u2080 x\u2081 x' y\u2080 y\u2081 y' : \u03b1\nhXX : S\u2081.X \u2229 S\u2082.X = x\u2080 \u1543 x\u2081 \u1543 {x'}\nhYY : S\u2081.Y \u2229 S\u2082.Y = y\u2080 \u1543 y\u2081 \u1543 {y'}\nhXY : S\u2081.X \u2ad7 S\u2082.Y\nhYX : S\u2081.Y \u2ad7 S\u2082.X\nB\u2081 : Matrix \u2191S\u2081.X \u2191S\u2081.Y \u211a\nhB\u2081 : B\u2081.IsTotallyUnimodular\nhBB\u2081 : \u2200 (i : \u2191S\u2081.X) (j : \u2191S\u2081.Y), |B\u2081 i j| = \u2191(ZMod.val (S\u2081.B i j))\nB\u2082 : Matrix \u2191S\u2082.X \u2191S\u2082.Y \u211a\nhB\u2082 : B\u2082.IsTotallyUnimodular\nhBB\u2082 : \u2200 (i : \u2191S\u2082.X) (j : \u2191S\u2082.Y), |B\u2082 i j| = \u2191(ZMod.val (S\u2082.B i j))\n\u22a2 (standardRepr3sumComposition_standard hXX hYY hXY hYX).1.HasTuSigning",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/030a9fb331e63ebaec29474c41a31b7a1873e739/Seymour/Matroid/Operations/Sum3.lean#L515"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-04-10T17:54:51+02:00",
        "inclusion_date": "2025-04-17T03:44:07.600361+00:00"
      },
      "id": "88730d8eec3af57ab899ef52cd229b3ed3f5a07d7eef179e2d5637429a40a95b"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "030a9fb331e63ebaec29474c41a31b7a1873e739",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 34,
        "start_column": 2,
        "end_line": 34,
        "end_column": 7,
        "file": "Seymour/Matroid/Operations/Duality.lean"
      },
      "debug_info": {
        "goal": "\u03b1 R : Type\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : DivisionRing R\nS : StandardRepr \u03b1 R\nG : Set \u03b1\nhG : G \u2286 S.toMatroid.E\n\u22a2 S\u2736.toMatroid.IsBase G \u2194 S.toMatroid.IsBase (S.toMatroid.E \\ G)",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/030a9fb331e63ebaec29474c41a31b7a1873e739/Seymour/Matroid/Operations/Duality.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "6620d7b89ad7",
        "blame_date": "2025-03-27T01:07:30-07:00",
        "inclusion_date": "2025-04-17T03:44:07.600361+00:00"
      },
      "id": "3112b0b57bfdcedae02114a379f54b29147d8680bae5532d83c524b8ce6fd02d"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "030a9fb331e63ebaec29474c41a31b7a1873e739",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 56,
        "start_column": 23,
        "end_line": 56,
        "end_column": 28,
        "file": "Seymour/Matroid/Operations/Duality.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d : DecidableEq \u03b1\nS : StandardRepr \u03b1 Z2\nhM : S.toMatroid.IsRegular\n\u22a2 Finite \u2191S.X",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/030a9fb331e63ebaec29474c41a31b7a1873e739/Seymour/Matroid/Operations/Duality.lean#L56"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-03-26T17:17:14+01:00",
        "inclusion_date": "2025-04-17T03:44:07.600361+00:00"
      },
      "id": "e28edb17a71cd6dea20d5c4c48bd6e727545dd281311ec23b20972af076d6250"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "030a9fb331e63ebaec29474c41a31b7a1873e739",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 57,
        "start_column": 24,
        "end_line": 57,
        "end_column": 29,
        "file": "Seymour/Matroid/Operations/Duality.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d : DecidableEq \u03b1\nS : StandardRepr \u03b1 Z2\nhM : S.toMatroid.IsRegular\nthis : Finite \u2191S.X\n\u22a2 Finite \u2191S\u2736.X",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/030a9fb331e63ebaec29474c41a31b7a1873e739/Seymour/Matroid/Operations/Duality.lean#L57"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-03-26T17:17:14+01:00",
        "inclusion_date": "2025-04-17T03:44:07.600361+00:00"
      },
      "id": "a2de56bb06d7cc89d2aa8317fdc619ba0fadba7b508ce3f63b59e3867bd7a970"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "030a9fb331e63ebaec29474c41a31b7a1873e739",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 83,
        "start_column": 4,
        "end_line": 83,
        "end_column": 9,
        "file": "Seymour/Matroid/Notions/Regularity.lean"
      },
      "debug_info": {
        "goal": "case h\n\u03b1 \u03b2 : Type\nM : Matroid \u03b1\nf : \u03b1 \u2243 \u03b2\nX Y : Set \u03b2\nA : Matrix \u2191X \u2191Y \u211a\nhA : A.IsTotallyUnimodular\nhAM : { X := X, Y := Y, A := A }.toMatroid = M.mapEquiv f\nf' : \u03b2 \u2243 \u03b1 := f.symm\n\u22a2 { X := \u21d1f' '' X, Y := \u21d1f' '' Y, A := A.submatrix \u21d1(f'.image X).symm \u21d1(f'.image Y).symm }.toMatroid = M",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/030a9fb331e63ebaec29474c41a31b7a1873e739/Seymour/Matroid/Notions/Regularity.lean#L83"
      },
      "metadata": {
        "blame_email_hash": "6620d7b89ad7",
        "blame_date": "2025-03-28T23:02:51-07:00",
        "inclusion_date": "2025-04-17T03:44:07.600361+00:00"
      },
      "id": "5748442496846194af3cf928879eff77bac31fb1063687e8a3054b9b48918894"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "030a9fb331e63ebaec29474c41a31b7a1873e739",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 83,
        "start_column": 4,
        "end_line": 83,
        "end_column": 9,
        "file": "Seymour/Matroid/Notions/Regularity.lean"
      },
      "debug_info": {
        "goal": "case h\n\u03b1 \u03b2 : Type\nM : Matroid \u03b1\nf : \u03b1 \u2243 \u03b2\nX Y : Set \u03b1\nA : Matrix \u2191X \u2191Y \u211a\nhA : A.IsTotallyUnimodular\nhAM : { X := X, Y := Y, A := A }.toMatroid = M\nf' : \u03b1 \u2243 \u03b2 := f\n\u22a2 { X := \u21d1f' '' X, Y := \u21d1f' '' Y, A := A.submatrix \u21d1(f'.image X).symm \u21d1(f'.image Y).symm }.toMatroid = M.mapEquiv f",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/030a9fb331e63ebaec29474c41a31b7a1873e739/Seymour/Matroid/Notions/Regularity.lean#L83"
      },
      "metadata": {
        "blame_email_hash": "6620d7b89ad7",
        "blame_date": "2025-03-28T23:02:51-07:00",
        "inclusion_date": "2025-04-17T03:44:07.600361+00:00"
      },
      "id": "ee0dc297cf06b7403ec9674e0ca878f8fd2e7e752e97284892d24bf366222fbc"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "030a9fb331e63ebaec29474c41a31b7a1873e739",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 286,
        "start_column": 2,
        "end_line": 286,
        "end_column": 7,
        "file": "Seymour/Matroid/Notions/Regularity.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u00b9 : DecidableEq \u03b1\nV W : VectorMatroid \u03b1 Z2\ninst\u271d : Finite \u2191V.X\nhVW : V.toMatroid = W.toMatroid\n\u22a2 V.A.HasTuSigning \u2194 W.A.HasTuSigning",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/030a9fb331e63ebaec29474c41a31b7a1873e739/Seymour/Matroid/Notions/Regularity.lean#L286"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-04-03T17:58:14+02:00",
        "inclusion_date": "2025-04-17T03:44:07.600361+00:00"
      },
      "id": "0015255d4946c65c44f712a81b21e50c42d5b7763d17c6d1b8e864475bfa9ecb"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "4ba8415a3dafbcebe6acda90252cf1a8ac1ef790",
        "lean_version": "v4.14.0"
      },
      "location": {
        "start_line": 431,
        "start_column": 4,
        "end_line": 431,
        "end_column": 9,
        "file": "Katydid/Regex/SmartRegex.lean"
      },
      "debug_info": {
        "goal": "case emptyset\n\u03b1 : Type\ny : Regex \u03b1\n\u22a2 denote (orFromList ({ head := Regex.emptyset, tail := [] }.mergeReps (orToList y))) =\n    Language.or Language.emptyset (denote y)",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/4ba8415a3dafbcebe6acda90252cf1a8ac1ef790/Katydid/Regex/SmartRegex.lean#L431"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-02-20T15:39:52+00:00",
        "inclusion_date": "2025-04-17T03:52:51.048474+00:00"
      },
      "id": "99b1a4925871a7f41a1749bfa444cfbcadd78c41d0cb6e367aa42b22b17155de"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "4ba8415a3dafbcebe6acda90252cf1a8ac1ef790",
        "lean_version": "v4.14.0"
      },
      "location": {
        "start_line": 433,
        "start_column": 4,
        "end_line": 433,
        "end_column": 9,
        "file": "Katydid/Regex/SmartRegex.lean"
      },
      "debug_info": {
        "goal": "case emptystr\n\u03b1 : Type\ny : Regex \u03b1\n\u22a2 denote (orFromList ((orToList Regex.emptystr).mergeReps (orToList y))) = denote (Regex.emptystr.or y)",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/4ba8415a3dafbcebe6acda90252cf1a8ac1ef790/Katydid/Regex/SmartRegex.lean#L433"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-02-20T15:39:52+00:00",
        "inclusion_date": "2025-04-17T03:52:51.048474+00:00"
      },
      "id": "0253276153fbbd5ed9963aee39ed40c9d93e9a56d69d219a892ef88dcde1dd73"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "4ba8415a3dafbcebe6acda90252cf1a8ac1ef790",
        "lean_version": "v4.14.0"
      },
      "location": {
        "start_line": 435,
        "start_column": 4,
        "end_line": 435,
        "end_column": 9,
        "file": "Katydid/Regex/SmartRegex.lean"
      },
      "debug_info": {
        "goal": "case pred\n\u03b1 : Type\ny : Regex \u03b1\np\u271d : Predicate \u03b1\n\u22a2 denote (orFromList ((orToList (Regex.pred p\u271d)).mergeReps (orToList y))) = denote ((Regex.pred p\u271d).or y)",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/4ba8415a3dafbcebe6acda90252cf1a8ac1ef790/Katydid/Regex/SmartRegex.lean#L435"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-02-20T15:39:52+00:00",
        "inclusion_date": "2025-04-17T03:52:51.048474+00:00"
      },
      "id": "e3c4a3e8decd7a6c8ba9561af0ca8bd82879d32c0e4d70eba998e700afa06a0f"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "4ba8415a3dafbcebe6acda90252cf1a8ac1ef790",
        "lean_version": "v4.14.0"
      },
      "location": {
        "start_line": 437,
        "start_column": 4,
        "end_line": 437,
        "end_column": 9,
        "file": "Katydid/Regex/SmartRegex.lean"
      },
      "debug_info": {
        "goal": "case or\n\u03b1 : Type\ny x1 x2 : Regex \u03b1\na_ih\u271d\u00b9 : denote (orFromList ((orToList x1).mergeReps (orToList y))) = denote (x1.or y)\na_ih\u271d : denote (orFromList ((orToList x2).mergeReps (orToList y))) = denote (x2.or y)\n\u22a2 denote (orFromList ((orToList (x1.or x2)).mergeReps (orToList y))) = denote ((x1.or x2).or y)",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/4ba8415a3dafbcebe6acda90252cf1a8ac1ef790/Katydid/Regex/SmartRegex.lean#L437"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-02-20T15:39:52+00:00",
        "inclusion_date": "2025-04-17T03:52:51.048474+00:00"
      },
      "id": "fa0afebb0b03e4d0f70229c946978a8d03159250e22e12dcfd504fafcfb14c9e"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "4ba8415a3dafbcebe6acda90252cf1a8ac1ef790",
        "lean_version": "v4.14.0"
      },
      "location": {
        "start_line": 439,
        "start_column": 4,
        "end_line": 439,
        "end_column": 9,
        "file": "Katydid/Regex/SmartRegex.lean"
      },
      "debug_info": {
        "goal": "case concat\n\u03b1 : Type\ny x1 x2 : Regex \u03b1\na_ih\u271d\u00b9 : denote (orFromList ((orToList x1).mergeReps (orToList y))) = denote (x1.or y)\na_ih\u271d : denote (orFromList ((orToList x2).mergeReps (orToList y))) = denote (x2.or y)\n\u22a2 denote (orFromList ((orToList (x1.concat x2)).mergeReps (orToList y))) = denote ((x1.concat x2).or y)",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/4ba8415a3dafbcebe6acda90252cf1a8ac1ef790/Katydid/Regex/SmartRegex.lean#L439"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-02-20T15:39:52+00:00",
        "inclusion_date": "2025-04-17T03:52:51.048474+00:00"
      },
      "id": "6444425e640eea36473d964a2be25f872568c7dc74eac76a348a8c087b0003cd"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "4ba8415a3dafbcebe6acda90252cf1a8ac1ef790",
        "lean_version": "v4.14.0"
      },
      "location": {
        "start_line": 441,
        "start_column": 4,
        "end_line": 441,
        "end_column": 9,
        "file": "Katydid/Regex/SmartRegex.lean"
      },
      "debug_info": {
        "goal": "case star\n\u03b1 : Type\ny x1 : Regex \u03b1\na_ih\u271d : denote (orFromList ((orToList x1).mergeReps (orToList y))) = denote (x1.or y)\n\u22a2 denote (orFromList ((orToList x1.star).mergeReps (orToList y))) = denote (x1.star.or y)",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/4ba8415a3dafbcebe6acda90252cf1a8ac1ef790/Katydid/Regex/SmartRegex.lean#L441"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-02-20T15:39:52+00:00",
        "inclusion_date": "2025-04-17T03:52:51.048474+00:00"
      },
      "id": "6539a83ace25d4360a2b0dcf367e9e81f2386614ad7324f8c2fd570935175595"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "4ba8415a3dafbcebe6acda90252cf1a8ac1ef790",
        "lean_version": "v4.14.0"
      },
      "location": {
        "start_line": 481,
        "start_column": 10,
        "end_line": 481,
        "end_column": 15,
        "file": "Katydid/Regex/SmartRegex.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type\np1 : Predicate \u03b1\ny\u271d : Regex \u03b1\nh : \u03b1 \u2192 Prop\ninst\u271d\u00b9 : DecidablePred h\ninst\u271d : Ord \u03b1\nh' : p1 = Predicate.mk \"any\" h\n\u22a2 Language.or (denote Regex.emptystr) (denote (Regex.pred (Predicate.mk \"any\" h)).star) =\n    Language.star (denote (Regex.pred (Predicate.mk \"any\" h)))",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/4ba8415a3dafbcebe6acda90252cf1a8ac1ef790/Katydid/Regex/SmartRegex.lean#L481"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-02-20T15:39:52+00:00",
        "inclusion_date": "2025-04-17T03:52:51.048474+00:00"
      },
      "id": "f022b8c0fad1985ca02acd55099f836701b1e71e3a34111ff1e9c54157f6019d"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "4ba8415a3dafbcebe6acda90252cf1a8ac1ef790",
        "lean_version": "v4.14.0"
      },
      "location": {
        "start_line": 483,
        "start_column": 10,
        "end_line": 483,
        "end_column": 15,
        "file": "Katydid/Regex/SmartRegex.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type\np1 : Predicate \u03b1\ny\u271d : Regex \u03b1\nh : (Regex.pred p1).star = Regex.emptyset \u2192 False\nx\u271d :\n  \u2200 (func : \u03b1 \u2192 Prop) (inst : DecidablePred func) (inst_1 : Ord \u03b1),\n    (Regex.pred p1).star = (Regex.pred (Predicate.mk \"any\" func)).star \u2192 False\n\u22a2 denote (Regex.emptystr.or (Regex.pred p1).star) =\n    denote (orFromList ((orToList Regex.emptystr).mergeReps (orToList (Regex.pred p1).star)))",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/4ba8415a3dafbcebe6acda90252cf1a8ac1ef790/Katydid/Regex/SmartRegex.lean#L483"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-02-20T15:39:52+00:00",
        "inclusion_date": "2025-04-17T03:52:51.048474+00:00"
      },
      "id": "d6a0081b09777c829f0838c9ec175dbbf763d7139066c3a2df04f90022adaaa6"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "4ba8415a3dafbcebe6acda90252cf1a8ac1ef790",
        "lean_version": "v4.14.0"
      },
      "location": {
        "start_line": 497,
        "start_column": 4,
        "end_line": 497,
        "end_column": 9,
        "file": "Katydid/Regex/SmartRegex.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ny : Regex \u03b1\npred : String\ndpred : \u03b1 \u2192 Prop\ndesc : DecidablePred dpred\nfunc : Ord \u03b1\n\u22a2 denote ((Regex.pred (Predicate.mk pred dpred)).or y) =\n    denote\n      (match y with\n      | Regex.emptyset => Regex.pred (Predicate.mk pred dpred)\n      | (Regex.pred (Predicate.mk \"any\" func)).star => y\n      | x => orFromList ((orToList (Regex.pred (Predicate.mk pred dpred))).mergeReps (orToList y)))",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/4ba8415a3dafbcebe6acda90252cf1a8ac1ef790/Katydid/Regex/SmartRegex.lean#L497"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-02-20T15:39:52+00:00",
        "inclusion_date": "2025-04-17T03:52:51.048474+00:00"
      },
      "id": "84389d372503d4f331dd18f081a2e93316fd658a84e478a10c858d4f9195742a"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "4ba8415a3dafbcebe6acda90252cf1a8ac1ef790",
        "lean_version": "v4.14.0"
      },
      "location": {
        "start_line": 499,
        "start_column": 4,
        "end_line": 499,
        "end_column": 9,
        "file": "Katydid/Regex/SmartRegex.lean"
      },
      "debug_info": {
        "goal": "case or\n\u03b1 : Type\ny x1 x2 : Regex \u03b1\na_ih\u271d\u00b9 : denote (x1.or y) = denote (smartOr x1 y)\na_ih\u271d : denote (x2.or y) = denote (smartOr x2 y)\n\u22a2 denote ((x1.or x2).or y) = denote (smartOr (x1.or x2) y)",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/4ba8415a3dafbcebe6acda90252cf1a8ac1ef790/Katydid/Regex/SmartRegex.lean#L499"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-02-20T15:39:52+00:00",
        "inclusion_date": "2025-04-17T03:52:51.048474+00:00"
      },
      "id": "1fd236c37368c115a820499d0db63093bebdb6618de82010a5195c3d433e24cd"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "4ba8415a3dafbcebe6acda90252cf1a8ac1ef790",
        "lean_version": "v4.14.0"
      },
      "location": {
        "start_line": 501,
        "start_column": 4,
        "end_line": 501,
        "end_column": 9,
        "file": "Katydid/Regex/SmartRegex.lean"
      },
      "debug_info": {
        "goal": "case concat\n\u03b1 : Type\ny x1 x2 : Regex \u03b1\na_ih\u271d\u00b9 : denote (x1.or y) = denote (smartOr x1 y)\na_ih\u271d : denote (x2.or y) = denote (smartOr x2 y)\n\u22a2 denote ((x1.concat x2).or y) = denote (smartOr (x1.concat x2) y)",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/4ba8415a3dafbcebe6acda90252cf1a8ac1ef790/Katydid/Regex/SmartRegex.lean#L501"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-02-20T15:39:52+00:00",
        "inclusion_date": "2025-04-17T03:52:51.048474+00:00"
      },
      "id": "ee77201c7a0df24ff6399a12cc25adae786b6b0f290b4df680b9b30492117aa3"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "4ba8415a3dafbcebe6acda90252cf1a8ac1ef790",
        "lean_version": "v4.14.0"
      },
      "location": {
        "start_line": 503,
        "start_column": 4,
        "end_line": 503,
        "end_column": 9,
        "file": "Katydid/Regex/SmartRegex.lean"
      },
      "debug_info": {
        "goal": "case star\n\u03b1 : Type\ny x1 : Regex \u03b1\na_ih\u271d : denote (x1.or y) = denote (smartOr x1 y)\n\u22a2 denote (x1.star.or y) = denote (smartOr x1.star y)",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/4ba8415a3dafbcebe6acda90252cf1a8ac1ef790/Katydid/Regex/SmartRegex.lean#L503"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-02-20T15:39:52+00:00",
        "inclusion_date": "2025-04-17T03:52:51.048474+00:00"
      },
      "id": "9d8285f315332dd86c71c5859abed793cd9727c0f52b6af238d410fdfc932760"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "4ba8415a3dafbcebe6acda90252cf1a8ac1ef790",
        "lean_version": "v4.14.0"
      },
      "location": {
        "start_line": 489,
        "start_column": 0,
        "end_line": 489,
        "end_column": 5,
        "file": "Katydid/Std/Balistic.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nx y : \u03b1\nxs ys zs xs' : List \u03b1\nxy : x \u2260 y\nH : xs ++ ys ++ zs = xs' ++ [x]\n\u22a2 zs \u2260 [y]",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/4ba8415a3dafbcebe6acda90252cf1a8ac1ef790/Katydid/Std/Balistic.lean#L489"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2023-07-06T19:11:12+01:00",
        "inclusion_date": "2025-04-17T03:52:51.048474+00:00"
      },
      "id": "af63c0b6859f8a8d436217ce20d7a7b7ef938a346fbc53a172ee4c56515f0609"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "4ba8415a3dafbcebe6acda90252cf1a8ac1ef790",
        "lean_version": "v4.14.0"
      },
      "location": {
        "start_line": 514,
        "start_column": 0,
        "end_line": 514,
        "end_column": 5,
        "file": "Katydid/Std/Balistic.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nx y : \u03b1\nxy : x \u2260 y\nxs : List \u03b1\nH : [y, y] = [] \u2227 xs = [x] \u2228 [y, y] = [x] \u2227 xs = []\n\u22a2 False",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/4ba8415a3dafbcebe6acda90252cf1a8ac1ef790/Katydid/Std/Balistic.lean#L514"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2023-10-29T19:05:53+00:00",
        "inclusion_date": "2025-04-17T03:52:51.048474+00:00"
      },
      "id": "82d11001cd7563e9703b8c90f405aa33054c84a528af8df490190adcbe8bbd93"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "4ba8415a3dafbcebe6acda90252cf1a8ac1ef790",
        "lean_version": "v4.14.0"
      },
      "location": {
        "start_line": 162,
        "start_column": 7,
        "end_line": 162,
        "end_column": 12,
        "file": "Katydid/Expr/Desc.lean"
      },
      "debug_info": {
        "goal": "case refine_2\nname : String\nsparams : List SmartDesc\nparams : List Desc := List.map (fun s => \u2191s.subtype) sparams\nhash : UInt64 := hash_with_sparams name sparams\nreader : Bool := params.any Desc.reader\ndesc : Desc := Desc.intro name params hash reader\n\u22a2 hash = desc.hash",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/4ba8415a3dafbcebe6acda90252cf1a8ac1ef790/Katydid/Expr/Desc.lean#L162"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2023-04-27T07:39:55+01:00",
        "inclusion_date": "2025-04-17T03:52:51.048474+00:00"
      },
      "id": "8f78d070ac3e43294d9a851087d8149620ff38fbaaba1210f4968bef2cf08259"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "4ba8415a3dafbcebe6acda90252cf1a8ac1ef790",
        "lean_version": "v4.14.0"
      },
      "location": {
        "start_line": 163,
        "start_column": 7,
        "end_line": 163,
        "end_column": 12,
        "file": "Katydid/Expr/Desc.lean"
      },
      "debug_info": {
        "goal": "case refine_3\nname : String\nsparams : List SmartDesc\nparams : List Desc := List.map (fun s => \u2191s.subtype) sparams\nhash : UInt64 := hash_with_sparams name sparams\nreader : Bool := params.any Desc.reader\ndesc : Desc := Desc.intro name params hash reader\n\u22a2 reader = desc.reader",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/4ba8415a3dafbcebe6acda90252cf1a8ac1ef790/Katydid/Expr/Desc.lean#L163"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2023-04-27T07:39:55+01:00",
        "inclusion_date": "2025-04-17T03:52:51.048474+00:00"
      },
      "id": "5b80aad0c45d5f11331d72421bbd11a491aecf98b77729e0ff67a1261d6d78f6"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "4ba8415a3dafbcebe6acda90252cf1a8ac1ef790",
        "lean_version": "v4.14.0"
      },
      "location": {
        "start_line": 164,
        "start_column": 7,
        "end_line": 164,
        "end_column": 12,
        "file": "Katydid/Expr/Desc.lean"
      },
      "debug_info": {
        "goal": "case refine_4\nname : String\nsparams : List SmartDesc\nparams : List Desc := List.map (fun s => \u2191s.subtype) sparams\nhash : UInt64 := hash_with_sparams name sparams\nreader : Bool := params.any Desc.reader\ndesc : Desc := Desc.intro name params hash reader\n\u22a2 \u2200 param \u2208 params, IsSmart param",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/4ba8415a3dafbcebe6acda90252cf1a8ac1ef790/Katydid/Expr/Desc.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2023-04-27T07:39:55+01:00",
        "inclusion_date": "2025-04-17T03:52:51.048474+00:00"
      },
      "id": "44e30c5e2ca92b012f02ede685fe6622344aca1b3f63c4a2164ee3e57b264fa3"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "4ba8415a3dafbcebe6acda90252cf1a8ac1ef790",
        "lean_version": "v4.14.0"
      },
      "location": {
        "start_line": 174,
        "start_column": 7,
        "end_line": 174,
        "end_column": 12,
        "file": "Katydid/Expr/Desc.lean"
      },
      "debug_info": {
        "goal": "case refine_2\nname : String\nparams : List Desc := []\nhash : UInt64 := hash_with_sparams name []\nreader : Bool := true\ndesc : Desc := Desc.intro name params hash reader\n\u22a2 hash = desc.hash",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/4ba8415a3dafbcebe6acda90252cf1a8ac1ef790/Katydid/Expr/Desc.lean#L174"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2023-04-27T07:39:55+01:00",
        "inclusion_date": "2025-04-17T03:52:51.048474+00:00"
      },
      "id": "647940001a7301cfabc6f8d64a673f91ee6a9dbe456bf291ef9b7256ee891bd9"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "4ba8415a3dafbcebe6acda90252cf1a8ac1ef790",
        "lean_version": "v4.14.0"
      },
      "location": {
        "start_line": 175,
        "start_column": 7,
        "end_line": 175,
        "end_column": 12,
        "file": "Katydid/Expr/Desc.lean"
      },
      "debug_info": {
        "goal": "case refine_3\nname : String\nparams : List Desc := []\nhash : UInt64 := hash_with_sparams name []\nreader : Bool := true\ndesc : Desc := Desc.intro name params hash reader\n\u22a2 reader = desc.reader",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/4ba8415a3dafbcebe6acda90252cf1a8ac1ef790/Katydid/Expr/Desc.lean#L175"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2023-04-27T07:39:55+01:00",
        "inclusion_date": "2025-04-17T03:52:51.048474+00:00"
      },
      "id": "311b02b2321d38607928208c531d7a1080d1e97ced5670b874ba38c10fd453b2"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "4ba8415a3dafbcebe6acda90252cf1a8ac1ef790",
        "lean_version": "v4.14.0"
      },
      "location": {
        "start_line": 176,
        "start_column": 7,
        "end_line": 176,
        "end_column": 12,
        "file": "Katydid/Expr/Desc.lean"
      },
      "debug_info": {
        "goal": "case refine_4\nname : String\nparams : List Desc := []\nhash : UInt64 := hash_with_sparams name []\nreader : Bool := true\ndesc : Desc := Desc.intro name params hash reader\n\u22a2 \u2200 param \u2208 params, IsSmart param",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/4ba8415a3dafbcebe6acda90252cf1a8ac1ef790/Katydid/Expr/Desc.lean#L176"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2023-04-27T07:39:55+01:00",
        "inclusion_date": "2025-04-17T03:52:51.048474+00:00"
      },
      "id": "b9aaacbb1f148dcc4a7ed3e2574e999da8c0616283267c3c227981bc074271e7"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "4ba8415a3dafbcebe6acda90252cf1a8ac1ef790",
        "lean_version": "v4.14.0"
      },
      "location": {
        "start_line": 186,
        "start_column": 7,
        "end_line": 186,
        "end_column": 12,
        "file": "Katydid/Expr/Desc.lean"
      },
      "debug_info": {
        "goal": "case refine_2\nname : String\nparams : List Desc := []\nhash : UInt64 := hash_with_sparams name []\nreader : Bool := false\ndesc : Desc := Desc.intro name params hash reader\n\u22a2 hash = desc.hash",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/4ba8415a3dafbcebe6acda90252cf1a8ac1ef790/Katydid/Expr/Desc.lean#L186"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2023-04-27T07:39:55+01:00",
        "inclusion_date": "2025-04-17T03:52:51.048474+00:00"
      },
      "id": "c0885d92fc166d0d1ff683aa45481008551c714034dec1214c99e99212dd9c36"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "4ba8415a3dafbcebe6acda90252cf1a8ac1ef790",
        "lean_version": "v4.14.0"
      },
      "location": {
        "start_line": 187,
        "start_column": 7,
        "end_line": 187,
        "end_column": 12,
        "file": "Katydid/Expr/Desc.lean"
      },
      "debug_info": {
        "goal": "case refine_3\nname : String\nparams : List Desc := []\nhash : UInt64 := hash_with_sparams name []\nreader : Bool := false\ndesc : Desc := Desc.intro name params hash reader\n\u22a2 reader = desc.reader",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/4ba8415a3dafbcebe6acda90252cf1a8ac1ef790/Katydid/Expr/Desc.lean#L187"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2023-04-27T07:39:55+01:00",
        "inclusion_date": "2025-04-17T03:52:51.048474+00:00"
      },
      "id": "b7e3174a0b85618eed32a09a4492bca7aeb3d255344b05792edda7313f209c3d"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "4ba8415a3dafbcebe6acda90252cf1a8ac1ef790",
        "lean_version": "v4.14.0"
      },
      "location": {
        "start_line": 188,
        "start_column": 7,
        "end_line": 188,
        "end_column": 12,
        "file": "Katydid/Expr/Desc.lean"
      },
      "debug_info": {
        "goal": "case refine_4\nname : String\nparams : List Desc := []\nhash : UInt64 := hash_with_sparams name []\nreader : Bool := false\ndesc : Desc := Desc.intro name params hash reader\n\u22a2 \u2200 param \u2208 params, IsSmart param",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/4ba8415a3dafbcebe6acda90252cf1a8ac1ef790/Katydid/Expr/Desc.lean#L188"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2023-04-27T07:39:55+01:00",
        "inclusion_date": "2025-04-17T03:52:51.048474+00:00"
      },
      "id": "ae87deb1ecdd972f1ded19895f94444c2ac852a12fd21cdf866fca8d82f70dac"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "4ba8415a3dafbcebe6acda90252cf1a8ac1ef790",
        "lean_version": "v4.14.0"
      },
      "location": {
        "start_line": 230,
        "start_column": 2,
        "end_line": 230,
        "end_column": 7,
        "file": "Katydid/Expr/Desc.lean"
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 (x y : SmartDesc), (x.compare y).swap = y.compare x",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/4ba8415a3dafbcebe6acda90252cf1a8ac1ef790/Katydid/Expr/Desc.lean#L230"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2023-03-10T15:35:40+00:00",
        "inclusion_date": "2025-04-17T03:52:51.048474+00:00"
      },
      "id": "a7d2a3f135f793deb03bedcd88d23d69da4b2bff07b48be483abb279ff2ad815"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/duper",
        "branch": "dev",
        "commit": "e28c4e11389116ccb6a48ff0fe9c3d1a9d7642e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 35,
        "start_column": 13,
        "end_line": 35,
        "end_column": 18,
        "file": "Duper/Tests/lastAsylum.lean"
      },
      "debug_info": {
        "goal": "ax1 : \u2200 (x : Inhab), Peculiar x \u2194 (Sane x \u2194 \u00acDoctor x)\nax2 : \u2200 (x : Inhab), Special x \u2194 \u2200 (y : Inhab), \u00acDoctor y \u2194 (Sane y \u2194 Peculiar x)\nax3 : \u2200 (x y : Inhab), (Sane x \u2194 Special y) \u2192 (Sane (bf x) \u2194 \u00acDoctor y)\nax4 : Sane Tarr \u2194 \u2200 (x : Inhab), Doctor x \u2192 Sane x\nax5 : Sane Fether \u2194 \u2200 (x : Inhab), \u00acDoctor x \u2192 \u00acSane x\nax6 : Sane Fether \u2194 Sane Tarr\n\u22a2 False",
        "url": "https://github.com/leanprover-community/duper/blob/e28c4e11389116ccb6a48ff0fe9c3d1a9d7642e4/Duper/Tests/lastAsylum.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "d9c480704efb",
        "blame_date": "2022-08-01T22:37:02-04:00",
        "inclusion_date": "2025-04-17T04:21:18.552299+00:00"
      },
      "id": "5f8931515d1dc44fc9e729e87dd4ce870879c1b1c7234a9a7823508fbc9962d2"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/duper",
        "branch": "dev",
        "commit": "e28c4e11389116ccb6a48ff0fe9c3d1a9d7642e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 18,
        "start_column": 50,
        "end_line": 18,
        "end_column": 55,
        "file": "Duper/Tests/test_continuity.lean"
      },
      "debug_info": {
        "goal": "a : Real\n\u22a2 dist a a = zero",
        "url": "https://github.com/leanprover-community/duper/blob/e28c4e11389116ccb6a48ff0fe9c3d1a9d7642e4/Duper/Tests/test_continuity.lean#L18"
      },
      "metadata": {
        "blame_email_hash": "4ac7eab8a488",
        "blame_date": "2023-06-05T10:39:00+02:00",
        "inclusion_date": "2025-04-17T04:21:18.552299+00:00"
      },
      "id": "b966b1b22abc4e5fcbce08d9256b604f5cc81bbbb6813fc17f9fd07bbfad6965"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/duper",
        "branch": "dev",
        "commit": "e28c4e11389116ccb6a48ff0fe9c3d1a9d7642e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 20,
        "start_column": 48,
        "end_line": 20,
        "end_column": 53,
        "file": "Duper/Tests/test_continuity.lean"
      },
      "debug_info": {
        "goal": "a : Real\n\u22a2 lt zero one",
        "url": "https://github.com/leanprover-community/duper/blob/e28c4e11389116ccb6a48ff0fe9c3d1a9d7642e4/Duper/Tests/test_continuity.lean#L20"
      },
      "metadata": {
        "blame_email_hash": "4ac7eab8a488",
        "blame_date": "2023-06-05T10:39:00+02:00",
        "inclusion_date": "2025-04-17T04:21:18.552299+00:00"
      },
      "id": "567af2ce88922b7d056f8a3aad8263d50c1f37bb62f9ea737e4918503646aed5"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "docs",
        "commit": "79f6627a673be802093bc62062e992b69ce30481",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 37,
        "start_column": 64,
        "end_line": 37,
        "end_column": 69,
        "file": "BatteriesTest/lintsimp.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d : Mul \u03b1\na x y : \u03b1\u1d50\u1d52\u1d56\n\u22a2 SemiconjBy a.unop y.unop x.unop \u2194 SemiconjBy a x y",
        "url": "https://github.com/leanprover-community/batteries/blob/79f6627a673be802093bc62062e992b69ce30481/BatteriesTest/lintsimp.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "8a7dcd08b95f",
        "blame_date": "2022-12-18T15:51:52-05:00",
        "inclusion_date": "2025-04-17T04:32:07.277821+00:00"
      },
      "id": "aeb03ee38c9d3a0921aeb6f182892e12da9ff23301e7bc8bfb93fc2de341ca9c"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "docs",
        "commit": "79f6627a673be802093bc62062e992b69ce30481",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 7,
        "start_column": 2,
        "end_line": 7,
        "end_column": 7,
        "file": "BatteriesTest/lintunused.lean"
      },
      "debug_info": {
        "goal": "h : 1 = 1\n\u22a2 True",
        "url": "https://github.com/leanprover-community/batteries/blob/79f6627a673be802093bc62062e992b69ce30481/BatteriesTest/lintunused.lean#L7"
      },
      "metadata": {
        "blame_email_hash": "45b5ed8e3c8e",
        "blame_date": "2023-08-08T02:17:31+02:00",
        "inclusion_date": "2025-04-17T04:32:07.277821+00:00"
      },
      "id": "f2fea4f02a5ecc906ea64a11b1f6e47df53580ffdca86ce94e223d01afd9f998"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "docs",
        "commit": "79f6627a673be802093bc62062e992b69ce30481",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 23,
        "start_column": 2,
        "end_line": 24,
        "end_column": 5,
        "file": "BatteriesTest/lint_unreachableTactic.lean"
      },
      "debug_info": {
        "goal": "\u22a2 1 = 1",
        "url": "https://github.com/leanprover-community/batteries/blob/79f6627a673be802093bc62062e992b69ce30481/BatteriesTest/lint_unreachableTactic.lean#L23"
      },
      "metadata": {
        "blame_email_hash": "45b5ed8e3c8e",
        "blame_date": "2023-08-26T11:27:15+01:00",
        "inclusion_date": "2025-04-17T04:32:07.277821+00:00"
      },
      "id": "99bfc793feb91446eb0b8a89860b3df11162e1fda75eead1e9c1f7b3425f5a95"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "docs",
        "commit": "79f6627a673be802093bc62062e992b69ce30481",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 31,
        "start_column": 33,
        "end_line": 31,
        "end_column": 38,
        "file": "BatteriesTest/lint_unreachableTactic.lean"
      },
      "debug_info": {
        "goal": "aa : Nat\n\u22a2 aa = 0 \u2192 t aa = 0",
        "url": "https://github.com/leanprover-community/batteries/blob/79f6627a673be802093bc62062e992b69ce30481/BatteriesTest/lint_unreachableTactic.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "45b5ed8e3c8e",
        "blame_date": "2023-08-26T11:27:15+01:00",
        "inclusion_date": "2025-04-17T04:32:07.277821+00:00"
      },
      "id": "28220b2fae807006a9e11860b22f99b4444315c6deba67bad714a5a37bbbac61"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 43,
        "start_column": 2,
        "end_line": 43,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/04Exists.lean"
      },
      "debug_info": {
        "goal": "p q r : Prop\n\u22a2 p \u2192 q \u2192 r \u2194 p \u2227 q \u2192 r",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/04Exists.lean#L43"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "bb36c9f0700cd368a28bc3e7c148ad8af786765657869345caab4c06078e390a"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 88,
        "start_column": 2,
        "end_line": 88,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/04Exists.lean"
      },
      "debug_info": {
        "goal": "a b c : \u2124\nh\u2081 : a \u2223 b\nh\u2082 : b \u2223 c\n\u22a2 a \u2223 c",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/04Exists.lean#L88"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-10T10:40:08+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "6e8dfe06b5de9c65fc459c3eedfb7d0895dabb7829c32e99cf9f49f0ecdc77f9"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 99,
        "start_column": 2,
        "end_line": 99,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/04Exists.lean"
      },
      "debug_info": {
        "goal": "f g : \u211d \u2192 \u211d\nh : Surjective (g \u2218 f)\n\u22a2 Surjective g",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/04Exists.lean#L99"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-10T10:40:08+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "cca57761aa32a28c1c157c04030d5dde73edea00e8cb654ba2760e7e8fe5890b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 49,
        "start_column": 2,
        "end_line": 49,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Shorter.lean"
      },
      "debug_info": {
        "goal": "a b : \u211d\n\u22a2 (a + b) * (a - b) = a ^ 2 - b ^ 2",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "31a5c50bc8f96522862b4303c089fc16706625428b5e663bddbb981f9687ae54"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 70,
        "start_column": 2,
        "end_line": 70,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Shorter.lean"
      },
      "debug_info": {
        "goal": "a b : \u211d\nf : \u211d \u2192 \u211d\n\u22a2 f ((a + b) ^ 2 - 2 * a * b) = f (a ^ 2 + b ^ 2)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L70"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "56045fc7a2a5f07e56b7af107ee02d0de6c29e0d3e5f026a4473b6ed402952ad"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 141,
        "start_column": 2,
        "end_line": 141,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Shorter.lean"
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh : a = -b\nh' : b + c = 0\n\u22a2 b * (a - c) = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L141"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "c3bc2343a7911f11fa21469a80ed666c865ccadc6a53a52b0140a457d159a1a7"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 156,
        "start_column": 2,
        "end_line": 156,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Shorter.lean"
      },
      "debug_info": {
        "goal": "a b : \u211d\nh : b \u2264 a\n\u22a2 a + b \u2264 2 * a",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L156"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "e57a5fef819badaadd91aa164b6b22187e1553dc5b482df2123cd7453bbca2c3"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 220,
        "start_column": 2,
        "end_line": 220,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Shorter.lean"
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nhf : even_fun f\n\u22a2 f (-5) = f 5",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L220"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "2937a41edd3de8c752c6b129e657374667bef5ec7292903ef130c18946c5da79"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 317,
        "start_column": 2,
        "end_line": 317,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Shorter.lean"
      },
      "debug_info": {
        "goal": "f g : \u211d \u2192 \u211d\nhf : even_fun f\n\u22a2 even_fun (g \u2218 f)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L317"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "5e83520fe483aebbc15c3b371f4cea2e27fa9860485aba462a373e1da7f24b7f"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 388,
        "start_column": 2,
        "end_line": 388,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Shorter.lean"
      },
      "debug_info": {
        "goal": "f g : \u211d \u2192 \u211d\nhf : non_decreasing f\nhg : non_increasing g\n\u22a2 non_increasing (g \u2218 f)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L388"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "f91f8dba73adccc676d4a7383327b45a3aa87eb3990ccbef77c79aa72695de5e"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 422,
        "start_column": 2,
        "end_line": 422,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Shorter.lean"
      },
      "debug_info": {
        "goal": "x : \u211d\nX Y : Set \u211d\nhx : x \u2208 X\n\u22a2 x \u2208 X \u2229 Y \u222a X \\ Y",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L422"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "e0836a3038ac3eb1e90b7c1680a0f14eb150703de1c5e0c06c8a6e9604e3bb0f"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 433,
        "start_column": 2,
        "end_line": 433,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Shorter.lean"
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nhf : Continuous f\nh2f : HasCompactSupport f\n\u22a2 \u2203 x, \u2200 (y : \u211d), f x \u2264 f y",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L433"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "be8f295507469a3db48b45b6d922648ea0e9115a6e6ac5d8e6f5e956b52ed0f2"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 475,
        "start_column": 2,
        "end_line": 475,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Shorter.lean"
      },
      "debug_info": {
        "goal": "a b c : \u2124\nh\u2081 : a \u2223 b\nh\u2082 : a \u2223 c\n\u22a2 a \u2223 b + c",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L475"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "4d893776777622c144b4bd2d87dbb1eebd4ff1209029061640aa825847f29a90"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 570,
        "start_column": 2,
        "end_line": 570,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Shorter.lean"
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\nl : \u211d\nw v : \u2115 \u2192 \u211d\nhu : seq_limit u l\nhw : seq_limit w l\nh : \u2200 (n : \u2115), u n \u2264 v n\nh' : \u2200 (n : \u2115), v n \u2264 w n\n\u22a2 seq_limit v l",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L570"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "ea2fa22461118eb86a0523e0e7523686172d7457abf6b58eaf01b8a0a9f03b9c"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 585,
        "start_column": 2,
        "end_line": 585,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Shorter.lean"
      },
      "debug_info": {
        "goal": "case h\nu : \u2115 \u2192 \u211d\nl l' : \u211d\nhl : seq_limit u l\nhl' : seq_limit u l'\n\u22a2 \u2200 \u03b5 > 0, |l - l'| \u2264 \u03b5",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L585"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "0ad303d64e58d190162841b6aa8bd82c7ebb230771497f9800f0b4df2bbda801"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 628,
        "start_column": 2,
        "end_line": 628,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Shorter.lean"
      },
      "debug_info": {
        "goal": "\u03c6 : \u2115 \u2192 \u2115\n\u22a2 extraction \u03c6 \u2192 \u2200 (N N' : \u2115), \u2203 n \u2265 N', \u03c6 n \u2265 N",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L628"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "acc2a016c137284d9ca15d47d4a8a99b51f367fb5c2afa582db2266a934c2ead"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 639,
        "start_column": 2,
        "end_line": 639,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Shorter.lean"
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\na : \u211d\n\u22a2 cluster_point u a \u2192 \u2200 \u03b5 > 0, \u2200 (N : \u2115), \u2203 n \u2265 N, |u n - a| \u2264 \u03b5",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L639"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "4e017b7c43c78766663bf5dda65f42b58bce962c75c8f9b55dd3c2d16801d84b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 646,
        "start_column": 2,
        "end_line": 646,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Shorter.lean"
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\nl : \u211d\n\u03c6 : \u2115 \u2192 \u2115\nh : seq_limit u l\nh\u03c6 : extraction \u03c6\n\u22a2 seq_limit (u \u2218 \u03c6) l",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L646"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "1e49d681ba41e0e4a2ab26478663a210c8933e17f0fceca8fdbc866174cfece4"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 651,
        "start_column": 2,
        "end_line": 651,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Shorter.lean"
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\nl a : \u211d\nhl : seq_limit u l\nha : cluster_point u a\n\u22a2 a = l",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L651"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "891762023ca5d7a2e0fe80e3ebe9feb6afc28a23a15fb66a8405dcfce8a09110"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 660,
        "start_column": 2,
        "end_line": 660,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Shorter.lean"
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\n\u22a2 (\u2203 l, seq_limit u l) \u2192 CauchySequence u",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L660"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "25dff7d0235178f2ab9d996cd0a31220b3057d04bae4e4e39333b0ffe0063196"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 38,
        "start_column": 2,
        "end_line": 38,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/02Iff.lean"
      },
      "debug_info": {
        "goal": "a b : \u211d\nha : 0 < a\nhb : 0 < b\n\u22a2 0 < a ^ 2 + b ^ 2",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/02Iff.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "24474570a46cf4820ca87b3a80fcd08740f51144d4aba7d232428e6195744c0d"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 63,
        "start_column": 2,
        "end_line": 63,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/02Iff.lean"
      },
      "debug_info": {
        "goal": "a b : \u211d\nha : 0 < a\nhb : 0 < b\n\u22a2 0 < a ^ 2 + b ^ 2",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/02Iff.lean#L63"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "ea1765b348d26b614f727509dd82039b985afd93d1bfa91c6f4fdd1fb00d286d"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 113,
        "start_column": 2,
        "end_line": 113,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/02Iff.lean"
      },
      "debug_info": {
        "goal": "a b c : \u211d\n\u22a2 a + c \u2264 b + c \u2194 a \u2264 b",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/02Iff.lean#L113"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "02e06b673c1531e0bba24a3274762bf270601aa4bd8d8239502518445aa1c569"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 151,
        "start_column": 2,
        "end_line": 151,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/02Iff.lean"
      },
      "debug_info": {
        "goal": "a b : \u211d\nhb : 0 \u2264 b\n\u22a2 a \u2264 a + b",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/02Iff.lean#L151"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "e671b92c749db96f2ff31a0c49a1f444f275899fd5307c04ca753d3d754e847a"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 184,
        "start_column": 2,
        "end_line": 184,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/02Iff.lean"
      },
      "debug_info": {
        "goal": "a b : \u211d\n\u22a2 a = b \u2194 b - a = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/02Iff.lean#L184"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "af74a24efcbfbcc004a32e3704f1791eafc6abce3422852977f1ed47ad287397"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 93,
        "start_column": 2,
        "end_line": 93,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/03Forall.lean"
      },
      "debug_info": {
        "goal": "f g : \u211d \u2192 \u211d\nhf : even_fun f\n\u22a2 even_fun (g \u2218 f)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/03Forall.lean#L93"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "c88a67c43f8ff2702ac4365cd5e8d193c422ea17e0a102c00ab1ead28bc9d649"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 166,
        "start_column": 2,
        "end_line": 166,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/03Forall.lean"
      },
      "debug_info": {
        "goal": "f g : \u211d \u2192 \u211d\nhf : non_decreasing f\nhg : non_increasing g\n\u22a2 non_increasing (g \u2218 f)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/03Forall.lean#L166"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "151aa84353a8d9f152b63d5dd6385dfbd031e3936664617f03bca0a22ee70465"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 181,
        "start_column": 2,
        "end_line": 181,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/03Forall.lean"
      },
      "debug_info": {
        "goal": "x : \u211d\nX Y : Set \u211d\nhx : x \u2208 X\n\u22a2 x \u2208 X \u2229 Y \u222a X \\ Y",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/03Forall.lean#L181"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "499dd2d402989d83aad6ad85caf6b465aae42a2c68b01b824583534a5b648500"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 188,
        "start_column": 2,
        "end_line": 188,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/03Forall.lean"
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nhf : Continuous f\nh2f : HasCompactSupport f\n\u22a2 \u2203 x, \u2200 (y : \u211d), f x \u2264 f y",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/03Forall.lean#L188"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "bfd9834a3de9a11c6f86ad14bb3bfbe03a935ac56952bc6e0267b7d32cb8b513"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 28,
        "start_column": 2,
        "end_line": 28,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
      },
      "debug_info": {
        "goal": "a b : \u211d\n\u22a2 (a + b) ^ 2 = a ^ 2 + 2 * a * b + b ^ 2",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L28"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "de92c314abcf62e9ca5b1da7aecfbc50fcdbbaf5c170d264defa167c350e8d4b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 81,
        "start_column": 2,
        "end_line": 81,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
      },
      "debug_info": {
        "goal": "a b c d : \u211d\nh : b = d + d\nh' : a = b + c\n\u22a2 a + b = c + 4 * d",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L81"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-10T10:38:53+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "d74d3bfe1bcfd98b943fb8f5f517a9c405633b2bc2fbf38b0f1a7b75e1b080d2"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 120,
        "start_column": 2,
        "end_line": 120,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
      },
      "debug_info": {
        "goal": "a b c : \u211d\n\u22a2 exp (a + b - c) = exp a * exp b / (exp c * exp 0)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L120"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "c1431370423f1eae606d3620bb9fda39696eaa3d4d01d6f1b14a1058becf212b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 144,
        "start_column": 2,
        "end_line": 144,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
      },
      "debug_info": {
        "goal": "a b c d : \u211d\nh : a = b + b\nh' : b = c\nh'' : a = d\n\u22a2 b + c = d",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L144"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "d5a17e9d265fc341d06b520ee0dd71b387a71dd165430c3375e7124dae627d65"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 186,
        "start_column": 58,
        "end_line": 186,
        "end_column": 63,
        "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh : a = b + c\n\u22a2 exp (2 * a) = exp (2 * (b + c))",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L186"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "d43ee6d505f38cd990eb9ce051d0c1d7ca14b703e2e5c29044af87224d26fef3"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 187,
        "start_column": 58,
        "end_line": 187,
        "end_column": 63,
        "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh : a = b + c\n\u22a2 exp (2 * (b + c)) = exp (b + b + (c + c))",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L187"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "689222f0e1ae05839fb1a6505ade73e33fef66dffc91f2779af0d2f525933a7b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 188,
        "start_column": 58,
        "end_line": 188,
        "end_column": 63,
        "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh : a = b + c\n\u22a2 exp (b + b + (c + c)) = exp (b + b) * exp (c + c)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L188"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "dad4759a559caddaff10d5186a63bf01cb0b48285ff5152c9c86ea503b0f7ea9"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 189,
        "start_column": 58,
        "end_line": 189,
        "end_column": 63,
        "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh : a = b + c\n\u22a2 exp (b + b) * exp (c + c) = exp b * exp b * (exp c * exp c)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L189"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "4fa1f44a57c1127bba667d73de33020143acfd861d9e0c5c6b503fbcbd1e6bc5"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 190,
        "start_column": 58,
        "end_line": 190,
        "end_column": 63,
        "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh : a = b + c\n\u22a2 exp b * exp b * (exp c * exp c) = exp b ^ 2 * exp c ^ 2",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L190"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "4ec83107c241e45019522ee278e5d2363d0e6dbb29d026dcdc973f9d59503486"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 205,
        "start_column": 2,
        "end_line": 205,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
      },
      "debug_info": {
        "goal": "a b c d : \u211d\nh : c = d * a + b\nh' : b = a * d\n\u22a2 c = 2 * a * d",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L205"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "f947dbb38ee5858bfbc2a9d9b481c33c915a88c284f8bd90aec01a218fede757"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 35,
        "start_column": 2,
        "end_line": 35,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
      },
      "debug_info": {
        "goal": "X : Type u_1\ninst\u271d : PartialOrder X\ns : Set X\nx\u2080 : X\nh : isInf s x\u2080\n\u22a2 x\u2080 \u2208 lowerBounds s",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T08:05:37+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "fb48b482aa0856682fcacb4dea51b4ad8d30b953af0c7720d8cbb444aabda786"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 40,
        "start_column": 2,
        "end_line": 40,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
      },
      "debug_info": {
        "goal": "X : Type u_1\ninst\u271d : PartialOrder X\ns : Set X\nx\u2080 x\u2081 : X\nhx\u2080 : isInf s x\u2080\nhx\u2081 : isInf s x\u2081\n\u22a2 x\u2080 = x\u2081",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L40"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T08:05:37+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "ed81f4a0fca149c4e2d4f2601720b079632accc9e4cc44547948fd7aa9538a35"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 75,
        "start_column": 2,
        "end_line": 75,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
      },
      "debug_info": {
        "goal": "X : Type u_1\ninst\u271d : PartialOrder X\nI : Set X \u2192 X\nh : isInfFun I\n\u22a2 isSupFun fun s => I (upperBounds s)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L75"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T08:05:37+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "e246e54cdc4e25d003aa48ce1159528038601bda72ecf8b8a283dd9a9362b481"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 148,
        "start_column": 2,
        "end_line": 148,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
      },
      "debug_info": {
        "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\ninst\u271d : CompleteLattice X\ns t : Set X\nh : s \u2286 t\n\u22a2 Inf t \u2264 Inf s",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L148"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T08:05:37+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "3d7f7264d7733abd1f987d1949ad0c68569e4bcc98f85e4c412a2c2cd038934b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 155,
        "start_column": 2,
        "end_line": 155,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
      },
      "debug_info": {
        "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\ninst\u271d : CompleteLattice X\nx x' : X\n\u22a2 x \u2264 x' \u2194 Inf {x, x'} = x",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L155"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T08:05:37+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "be92e50e481731da569cbd7f0eb900290ea45e528159033b330e0954a489d36b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 164,
        "start_column": 2,
        "end_line": 164,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
      },
      "debug_info": {
        "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\ninst\u271d : CompleteLattice X\nx : X\n\u22a2 Inf {x' | x \u2264 x'} = x",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T08:05:37+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "489561954e76809c197271bd602e8a2166160596238361e21379495f38054f7c"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 173,
        "start_column": 2,
        "end_line": 173,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
      },
      "debug_info": {
        "goal": "Y : Type\nS : Set (Set Y)\n\u22a2 isInf S (\u22c2\u2080 S)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L173"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "a6093176ad78b0fa55c64b8611fb8c03c92b12eaed3f927dc3a2bbcdf77fc4cc"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 177,
        "start_column": 2,
        "end_line": 177,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
      },
      "debug_info": {
        "goal": "Y : Type\nS : Set (Set Y)\n\u22a2 isSup S (\u22c3\u2080 S)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L177"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "a40887c50ab269636bd32d17efd62f8ce4673949aff59e07a0230296c7695955"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 213,
        "start_column": 2,
        "end_line": 213,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
      },
      "debug_info": {
        "goal": "X : Type u_1\nY : Type u_2\ninst\u271d\u00b9 : PartialOrder X\ninst\u271d : PartialOrder Y\nl : X \u2192 Y\nr : Y \u2192 X\nh : adjunction l r\n\u22a2 adjunction r l",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L213"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "784c4d681e0f1ffb524b11b6c17486390c329fbc8be374651f3710c14ea5ecfd"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 248,
        "start_column": 2,
        "end_line": 248,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
      },
      "debug_info": {
        "goal": "X Y : Type\ninst\u271d\u00b3 : PartialOrder X\ninst\u271d\u00b2 : CompleteLattice X\ninst\u271d\u00b9 : PartialOrder Y\ninst\u271d : CompleteLattice Y\nl : X \u2192 Y\nh : \u2200 (s : Set X), l (Sup s) = Sup (l '' s)\n\u22a2 adjunction l (mk_right l)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L248"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T08:05:37+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "70c0026107c402b07f2812a615d812915b8e891da23c7b6322d9d32a9bae980a"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 383,
        "start_column": 2,
        "end_line": 383,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
      },
      "debug_info": {
        "goal": "X Y : Type\nf : X \u2192 Y\nt : Set (Topology X)\n\u22a2 f\u204e (Sup t) = Sup (f\u204e '' t)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L383"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T08:05:37+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "656c3fc3ab9df2e87ac412b99e2f243fd8ee1214f053153e35b2c08b80bcafb8"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 396,
        "start_column": 2,
        "end_line": 396,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nX : \u03b9 \u2192 Type\nT : \u03a0 (i : \u03b9), Topology (X i)\nZ : Type\nTZ : Topology Z\nf : Z \u2192 \u03a0 (i : \u03b9), X i\n\u22a2 Continuous TZ (ProductTopology T) f \u2194 \u2200 (i : \u03b9), Continuous TZ (T i) fun z => f z i",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L396"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "263aba893955dd29a3222b96894aca1518324e6a50f33c7a36740674214f4c94"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 422,
        "start_column": 4,
        "end_line": 422,
        "end_column": 9,
        "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
      },
      "debug_info": {
        "goal": "G : Type\ninst\u271d : Group G\ns : Set (Subgroup G)\n\u22a2 1 \u2208 \u22c2 H \u2208 s, H.carrier",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L422"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "c186b3b3f79bfdb8cb8013f818f0a3252faea0eb1475773541581572ffa2f0b3"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 436,
        "start_column": 2,
        "end_line": 436,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
      },
      "debug_info": {
        "goal": "G : Type\ninst\u271d : Group G\n\u22a2 isInfFun SubgroupInf",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L436"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T14:40:50+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "16c306087fbed5df2e20cf4771a7e2e9bec1df661cb6ece6b11b26211cf4d935"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 449,
        "start_column": 2,
        "end_line": 449,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
      },
      "debug_info": {
        "goal": "G : Type\ninst\u271d : Group G\n\u22a2 adjunction generate forget",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L449"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T14:40:50+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "45f059b615def0bc21f423f85c71cbe400c192038d83189b3feb5ef1ecd51494"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 457,
        "start_column": 4,
        "end_line": 457,
        "end_column": 9,
        "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
      },
      "debug_info": {
        "goal": "G : Type\ninst\u271d\u00b9 : Group G\nG' : Type\ninst\u271d : Group G'\nf : G \u2192* G'\nH' : Subgroup G'\n\u22a2 1 \u2208 \u21d1f \u207b\u00b9' H'.carrier",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L457"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "d782436a4cf9f1eba597dfe6ae7c243e06fef5ed3745957340d22c4a6512285c"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 474,
        "start_column": 2,
        "end_line": 474,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
      },
      "debug_info": {
        "goal": "G : Type\ninst\u271d\u00b9 : Group G\nG' : Type\ninst\u271d : Group G'\nf : G \u2192* G'\n\u22a2 adjunction (push f) (pull f)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L474"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T14:40:50+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "848a88221b50f594184c0b37f1d804f3ec5df7f6a1efaa9b6df1b12de9623cbe"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 490,
        "start_column": 2,
        "end_line": 490,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
      },
      "debug_info": {
        "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\nY : Type\ninst\u271d : PartialOrder Y\nl l' : X \u2192 Y\nr : Y \u2192 X\nh : adjunction l r\nh' : adjunction l' r\n\u22a2 l = l'",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L490"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T14:40:50+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "4d9727093500ea892db102c584888d894a3db80e2826660cea74274a134c3d56"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 495,
        "start_column": 2,
        "end_line": 495,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
      },
      "debug_info": {
        "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\nY : Type\ninst\u271d : PartialOrder Y\nl : X \u2192 Y\nr r' : Y \u2192 X\nh : adjunction l r\nh' : adjunction l r'\n\u22a2 r = r'",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L495"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "7a41dbeb8df1efc710d5af31bae9c9671e774809648ea3f54475aacd9e26736b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 502,
        "start_column": 2,
        "end_line": 502,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
      },
      "debug_info": {
        "goal": "X : Type\ninst\u271d\u00b2 : PartialOrder X\nY : Type\ninst\u271d\u00b9 : PartialOrder Y\nZ : Type\ninst\u271d : PartialOrder Z\nl : X \u2192 Y\nr : Y \u2192 X\nh : adjunction l r\nl' : Y \u2192 Z\nr' : Z \u2192 Y\nh' : adjunction l' r'\n\u22a2 adjunction (l' \u2218 l) (r \u2218 r')",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L502"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T14:40:50+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "9da1e288f0382366952ec611bc92d3d6a7c8b743353cb1d1d97ba8d0d524253e"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 517,
        "start_column": 2,
        "end_line": 517,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
      },
      "debug_info": {
        "goal": "G : Type\ninst\u271d\u00b9 : Group G\nG' : Type\ninst\u271d : Group G'\nf : G \u2192* G'\n\u22a2 push f \u2218 generate = generate \u2218 Set.image \u21d1f",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L517"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T14:40:50+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "8435d8cd698bdfceeb8217861a91d74480d58eefa5607186cd3033e9fcdbe33b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 54,
        "start_column": 2,
        "end_line": 54,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\n\u22a2 IndepSet A B \u2192 IndepSet B A",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "2f9731105fae795b1ca7739f54772f72f05c51adec11b26fa333257973f8fd31"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 64,
        "start_column": 2,
        "end_line": 64,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : MeasurableSet A\nhB : MeasurableSet B\n\u22a2 IndepSet A B \u2192 IndepSet A B\u1d9c",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L64"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "ddadc8968c74f61b562b9d11dc06f3747e3e596bfe5d52314d62ebacd1c24b2b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 71,
        "start_column": 2,
        "end_line": 71,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : MeasurableSet A\nhB : MeasurableSet B\n\u22a2 IndepSet A B\u1d9c \u2194 IndepSet A B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L71"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "67addfe9d8c814b350ca38bee763cec3b650b9c3262e865cfe7f79eea442a813"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 77,
        "start_column": 2,
        "end_line": 77,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : MeasurableSet A\nhB : MeasurableSet B\nh : IndepSet A B\n\u22a2 IndepSet A\u1d9c B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "3577f3cf5999bad2f3b6bd7ce1a7b4b43afe49b10f7643e474cff5dfb1aa018b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 86,
        "start_column": 2,
        "end_line": 86,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA : Set \u03a9\nh : IndepSet A A\n\u22a2 \u2119 A = 0 \u2228 \u2119 A = 1",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L86"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "926e207c68bf5e0eee2705fbb68f26df59dede909b1f81f8c8ef961360bae260"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 108,
        "start_column": 2,
        "end_line": 108,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : \u2119 A = 0\n\u22a2 \u2119(A|B) = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L108"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "212f9d566f3205e8383b7539fb3aef5fba81877c8733ec919faed61dcbe31141"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 113,
        "start_column": 2,
        "end_line": 113,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhB : \u2119 B = 0\n\u22a2 \u2119(A|B) = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L113"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "fb467e8a702c20860b6ab5281b83e6c6694b2764003c2bd702f1823787f01990"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 126,
        "start_column": 2,
        "end_line": 126,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : \u2119 A \u2260 0\nhB : \u2119 B \u2260 0\n\u22a2 \u2119(A|B) = \u2119 A * \u2119(B|A) / \u2119 B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L126"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "b9b6d794bf0fd543ef37805109dacd50932254d635086815acf843d35d79ff06"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 136,
        "start_column": 2,
        "end_line": 136,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\n\u22a2 \u2119(A|B) = \u2119 A * \u2119(B|A) / \u2119 B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L136"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "62759d0fbdfa04ae04a63e63ec6fd0e75081cac92966d39e10e50fa9921fb367"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 140,
        "start_column": 2,
        "end_line": 140,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nh : IndepSet B A\nhB : \u2119 B \u2260 0\n\u22a2 \u2119(A|B) = \u2119 A",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L140"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "e71ea4e4994260377362f7ab9f19a72614d1c65d2db29a224809e16a77bf1f14"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 27,
        "start_column": 2,
        "end_line": 27,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
      },
      "debug_info": {
        "goal": "a b : \u211d\nha : 0 \u2264 a\nhb : 0 \u2264 b\n\u22a2 0 \u2264 a + b",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L27"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "5e0b11f48ec32e4fb9f580a36abeea035cfb9c11c4d3a9b9ef235a89a81cb8da"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
      },
      "debug_info": {
        "goal": "a b c d : \u211d\nhab : a \u2264 b\nhcd : c \u2264 d\n\u22a2 a + c \u2264 b + d",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "4047482a5125962dd4206849a3a1d90c01c6e3131b432523aebc5cf90dbbfda6"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 68,
        "start_column": 2,
        "end_line": 68,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\nl : \u211d\nh : \u2200 (n : \u2115), u n = l\n\u22a2 seq_limit u l",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L68"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "f51bdd3ef5cef0938f1aa098b662d8c9e4ab9293e4d6b993c87d05613f6f3d68"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 90,
        "start_column": 2,
        "end_line": 90,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\nl : \u211d\nh : seq_limit u l\nhl : l > 0\n\u22a2 \u2203 N, \u2200 n \u2265 N, u n \u2265 l / 2",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L90"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "6364d6640c356bc88ffa68816c8c375a10af34f630025c14c6980e86d29e04a6"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 131,
        "start_column": 2,
        "end_line": 131,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\nl : \u211d\nw v : \u2115 \u2192 \u211d\nhu : seq_limit u l\nhw : seq_limit w l\nh : \u2200 (n : \u2115), u n \u2264 v n\nh' : \u2200 (n : \u2115), v n \u2264 w n\n\u22a2 seq_limit v l",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L131"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "460a3f0ec334443ea8ed28211d23a4a9a4ef08231710e428aab4fac3950b5a7a"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 146,
        "start_column": 2,
        "end_line": 146,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\nl l' : \u211d\n\u22a2 seq_limit u l \u2192 seq_limit u l' \u2192 l = l'",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L146"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "5b33a5c1ef3874031f3fab4e6b21b7e7bb1dbe446ce79180044fcd97fa7919bc"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 161,
        "start_column": 2,
        "end_line": 161,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\nM : \u211d\nh : is_seq_sup M u\nh' : non_decreasing u\n\u22a2 seq_limit u M",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L161"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "28ef10d7c175fa2e6ea6552770b9507dc76c47d53ae04700c59a92c30f976631"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 197,
        "start_column": 2,
        "end_line": 197,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
      },
      "debug_info": {
        "goal": "\u03c6 : \u2115 \u2192 \u2115\n\u22a2 extraction \u03c6 \u2192 \u2200 (N N' : \u2115), \u2203 n \u2265 N', \u03c6 n \u2265 N",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T08:52:39+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "45f823cb7db9d2b387feadb1bf24735f511aa037e48c0da3a46596656dc897c3"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 210,
        "start_column": 2,
        "end_line": 210,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\na : \u211d\n\u22a2 cluster_point u a \u2192 \u2200 \u03b5 > 0, \u2200 (N : \u2115), \u2203 n \u2265 N, |u n - a| \u2264 \u03b5",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L210"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "d3d8723f82634f60255c46baa6f30ef88b95da02542ce3d23bb35baad28ec73a"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 217,
        "start_column": 2,
        "end_line": 217,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\nl : \u211d\n\u03c6 : \u2115 \u2192 \u2115\nh : seq_limit u l\nh\u03c6 : extraction \u03c6\n\u22a2 seq_limit (u \u2218 \u03c6) l",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L217"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "db71af85d304a268fbae6b812f2985eb9ec2ab76c068a87a012332b6b78e9ffc"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 222,
        "start_column": 2,
        "end_line": 222,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\nl a : \u211d\nhl : seq_limit u l\nha : cluster_point u a\n\u22a2 a = l",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L222"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "bda89d9ccd968a6c02bb8041059428b52cd3322dd70d459bec5a0da3f70eaee6"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 230,
        "start_column": 2,
        "end_line": 230,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\n\u22a2 (\u2203 l, seq_limit u l) \u2192 CauchySequence u",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L230"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "98dabdb26634503e45bb47570ee3a9dd87beb8feb085646f9a1472b3934e7502"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 239,
        "start_column": 2,
        "end_line": 239,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\nl : \u211d\nhu : CauchySequence u\nhl : cluster_point u l\n\u22a2 seq_limit u l",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L239"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "4de6998a49e29646ebbaeea23f3785ef9690cc9fff66f4152c603b032872c954"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 61,
        "start_column": 2,
        "end_line": 61,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
      },
      "debug_info": {
        "goal": "v : Variable \u2192 Prop\n\u22a2 IsTrue v \u22a4",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "ecccb0e6df9670b5d97a10320bcf4772173f5c0bd5576a9426bb61e9fb74a8af"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 65,
        "start_column": 2,
        "end_line": 65,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
      },
      "debug_info": {
        "goal": "v : Variable \u2192 Prop\nA B : Formula\n\u22a2 IsTrue v (A \u21d4 B) \u2194 (IsTrue v A \u2194 IsTrue v B)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L65"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "a0f840df63e15439057b7521bdf33a12c5446670d81a8be1af13925867381097"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 72,
        "start_column": 2,
        "end_line": 72,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
      },
      "debug_info": {
        "goal": "v : Variable \u2192 Prop\nA B : Formula\n\u22a2 Valid (~~A \u21d4 A)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L72"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "c40cb3b87752db627ed06f0bfc1d9e9b46018e1bc73dd83b7ef1cc3b26c1ed2d"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 134,
        "start_column": 2,
        "end_line": 134,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
      },
      "debug_info": {
        "goal": "v : Variable \u2192 Prop\nA B : Formula\n\u0393 \u0394 : Set Formula\n\u22a2 Provable (~~A \u21d4 A)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L134"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "6169fe714e5d27b56699f26c0aa6e7ef5684ce6db8e580ff2fbf4a9ef78072a0"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 139,
        "start_column": 2,
        "end_line": 139,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
      },
      "debug_info": {
        "goal": "v : Variable \u2192 Prop\nA B : Formula\n\u0393 \u0394 : Set Formula\n\u22a2 Provable (A || ~A)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L139"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "e981025cfcacb89dcd6244a88b683282276414dd4adc8b34b6611d2a39a60e2f"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 146,
        "start_column": 2,
        "end_line": 146,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
      },
      "debug_info": {
        "goal": "v : Variable \u2192 Prop\nA B : Formula\n\u0393 \u0394 : Set Formula\n\u22a2 Provable (~(A && B) \u21d4 ~A || ~B)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L146"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "5a74c7843caca4e3710b76569d4a6909699e80388cb9de80cfcfcca16816e57c"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 158,
        "start_column": 2,
        "end_line": 158,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
      },
      "debug_info": {
        "goal": "A : Formula\n\u0393 \u0394 : Set Formula\nh : \u0393 \u22a2 A\nh2 : \u0393 \u2286 \u0394\n\u22a2 \u0394 \u22a2 A",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L158"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "b14186637c0a77bf03232e739ab08d9546e6f14cf6821b88100b549e24f0f964"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 165,
        "start_column": 2,
        "end_line": 165,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
      },
      "debug_info": {
        "goal": "A B : Formula\n\u0393 : Set Formula\nh : \u0393 \u22a2 A\n\u22a2 Insert.insert B \u0393 \u22a2 A",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L165"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "48ce864a03f707474b99089f447ae45277b3d1dd8cfe7ac37a1b25cfddbbcfee"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 170,
        "start_column": 2,
        "end_line": 170,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
      },
      "debug_info": {
        "goal": "A B : Formula\n\u0393 : Set Formula\nh : \u0393 \u22a2 A\n\u22a2 insert (A \u21d2 B) \u0393 \u22a2 B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L170"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "1231075a51ae17e2266eae7591b69c9175b837c4f912d30cac559f457d1ef444"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 174,
        "start_column": 2,
        "end_line": 174,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
      },
      "debug_info": {
        "goal": "A B : Formula\n\u0393 : Set Formula\nh1 : Provable (A \u21d2 B)\nh2 : \u0393 \u22a2 A\n\u22a2 \u0393 \u22a2 B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L174"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "a8bc81a374100a209a5526800daca7238aeb6df805025e7e355f27a2c49d2ebb"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 180,
        "start_column": 2,
        "end_line": 180,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
      },
      "debug_info": {
        "goal": "A : Formula\n\u0393 : Set Formula\nh : \u0393 \u22a2 A\n\u22a2 \u0393 \u22a8 A",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L180"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "a84a62258e746b6f066cf1329098fc2cc38a8612df923293bd5261ac0d55df49"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 184,
        "start_column": 2,
        "end_line": 184,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
      },
      "debug_info": {
        "goal": "A : Formula\nh : Provable A\n\u22a2 Valid A",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L184"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "c2205d9f50f1f04d953c9fe79ca96ff9ee75e18ac8c40d93769670a385ebea12"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 68,
        "start_column": 2,
        "end_line": 68,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean"
      },
      "debug_info": {
        "goal": "H : Type u_1\ninst\u271d : HeytingAlgebra H\nv : Variable \u2192 H\n\u22a2 eval v top = \u22a4",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L68"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "99efeed5557f8dafaff773b546ba0b450091c2c6482b62b2adaa841095010519"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 73,
        "start_column": 2,
        "end_line": 73,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean"
      },
      "debug_info": {
        "goal": "H : Type u_1\ninst\u271d : HeytingAlgebra H\nv : Variable \u2192 H\nA B : Formula\n\u22a2 eval v (A \u21d4 B) = (eval v A \u21e8 eval v B) \u2293 (eval v B \u21e8 eval v A)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L73"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "ea4e3f0cd850382fdb7a240f0e210c67568cb8318e0d71351296d192993865d1"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 79,
        "start_column": 2,
        "end_line": 79,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean"
      },
      "debug_info": {
        "goal": "H : Type ?u.16048\ninst\u271d : HeytingAlgebra H\nv : Variable \u2192 H\nA B : Formula\n\u22a2 Valid ~(A && ~A)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "e4ee464fba46aaa64d553d6212f4664b0995dc9db1a3ccbcd2f62457b6d273a4"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 126,
        "start_column": 2,
        "end_line": 126,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean"
      },
      "debug_info": {
        "goal": "H : Type ?u.21261\ninst\u271d : HeytingAlgebra H\nv : Variable \u2192 H\nA B : Formula\n\u0393 \u0394 : Set Formula\n\u22a2 Provable (~A || ~B \u21d2 ~(A && B))",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L126"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "366b639d760eaf79eb4c11e0a411b22f1169ba867b78da31f145f95f3e94372b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 131,
        "start_column": 2,
        "end_line": 131,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean"
      },
      "debug_info": {
        "goal": "H : Type ?u.21285\ninst\u271d : HeytingAlgebra H\nv : Variable \u2192 H\nA B : Formula\n\u0393 \u0394 : Set Formula\n\u22a2 Provable ~(A && ~A)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L131"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "7893b4193d726e8de8ff7cfb2c03d8ec9a6c05446f9ce9725ace15890f040de2"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 136,
        "start_column": 2,
        "end_line": 136,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean"
      },
      "debug_info": {
        "goal": "H : Type ?u.21309\ninst\u271d : HeytingAlgebra H\nv : Variable \u2192 H\nA B : Formula\n\u0393 \u0394 : Set Formula\n\u22a2 Provable (~A && ~B \u21d2 ~(A || B))",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L136"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "73addb2e899f0e32fd7ab1d3f3523c9008a2c9166ee317c5415b1377acc0f744"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 148,
        "start_column": 2,
        "end_line": 148,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean"
      },
      "debug_info": {
        "goal": "A : Formula\n\u0393 \u0394 : Set Formula\nh : \u0393 \u22a2 A\nh2 : \u0393 \u2286 \u0394\n\u22a2 \u0394 \u22a2 A",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L148"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "aee9c3d3b2e5e64ae41895b7b4980b488ab83c9f521fc35b70baf5033218bd23"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 155,
        "start_column": 2,
        "end_line": 155,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean"
      },
      "debug_info": {
        "goal": "A B : Formula\n\u0393 : Set Formula\nh : \u0393 \u22a2 A\n\u22a2 Insert.insert B \u0393 \u22a2 A",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L155"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "a3a23ff8a1f2e71f8530136a0335476eb3c6a8a2a5785101cc37f0138bb9cec7"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 160,
        "start_column": 2,
        "end_line": 160,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean"
      },
      "debug_info": {
        "goal": "A B : Formula\n\u0393 : Set Formula\nh : \u0393 \u22a2 A\n\u22a2 insert (A \u21d2 B) \u0393 \u22a2 B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L160"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "e3e55c1c8629d98b85b7c14d43cd08fb6a414e31cd3e59e287770f0589cb3575"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 164,
        "start_column": 2,
        "end_line": 164,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean"
      },
      "debug_info": {
        "goal": "A B : Formula\n\u0393 : Set Formula\nh1 : Provable (A \u21d2 B)\nh2 : \u0393 \u22a2 A\n\u22a2 \u0393 \u22a2 B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "78e7a61894a52571f12592f2db35cea22538e7c4b90bca4c130a7e00852867b2"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 170,
        "start_column": 2,
        "end_line": 170,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean"
      },
      "debug_info": {
        "goal": "A : Formula\n\u0393 : Set Formula\nh : \u0393 \u22a2 A\n\u22a2 \u0393 \u22a8 A",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L170"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "9f319fe9f0b9cbbe63403b38a9eddc47bf053b4df66b3fbdc98cb2b22d2d2c11"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 174,
        "start_column": 2,
        "end_line": 174,
        "end_column": 7,
        "file": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean"
      },
      "debug_info": {
        "goal": "A : Formula\nh : Provable A\n\u22a2 Valid A",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L174"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-17T04:43:54.344498+00:00"
      },
      "id": "3443c036826e6582f156dca10c3399d396fd181dd2f5be85dadf483759e0bb6d"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 49,
        "start_column": 21,
        "end_line": 49,
        "end_column": 26,
        "file": "ClassicalInfo/Capacity.lean"
      },
      "debug_info": {
        "goal": "A : Type u_1\nI : Type u_2\nO : Type u_3\nio : I \u2192 O\ntoFixedLengthCode : FixedLengthCode A I O\ntoCode : Code A I O := toFixedLengthCode.toCode\nencoder : List A \u2192 List I := toFixedLengthCode.encoder\ndecoder : List O \u2192 List A := toFixedLengthCode.decoder\nenc_length : \u2115 \u2192 \u2115 := toFixedLengthCode.enc_length\nenc_maps_length : \u2200 (as : List A), (toFixedLengthCode.encoder as).length = toFixedLengthCode.enc_length as.length :=\n  toFixedLengthCode.enc_maps_length\ndec_length : \u2115 \u2192 \u2115 := toFixedLengthCode.dec_length\ndec_maps_length : \u2200 (is : List O), (toFixedLengthCode.decoder is).length = toFixedLengthCode.dec_length is.length :=\n  toFixedLengthCode.dec_maps_length\nblock_in block_out : \u2115\nblock_enc : (Fin block_in \u2192 A) \u2192 Fin block_out \u2192 I\nblock_dec : (Fin block_out \u2192 O) \u2192 Fin block_in \u2192 A\nblock_enc_dec_inv : \u2200 (as : Fin block_in \u2192 A), block_dec (io \u2218 block_enc as) = as\n\u22a2 \u2200 (as : List A), (toFixedLengthCode.encoder as).length = toFixedLengthCode.enc_length as.length",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/ClassicalInfo/Capacity.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "a7709a1b078022667a4c38fb659f11d157c2f9b65cab13ad79df4c2e31713298"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 50,
        "start_column": 21,
        "end_line": 50,
        "end_column": 26,
        "file": "ClassicalInfo/Capacity.lean"
      },
      "debug_info": {
        "goal": "A : Type u_1\nI : Type u_2\nO : Type u_3\nio : I \u2192 O\ntoFixedLengthCode : FixedLengthCode A I O\ntoCode : Code A I O := toFixedLengthCode.toCode\nencoder : List A \u2192 List I := toFixedLengthCode.encoder\ndecoder : List O \u2192 List A := toFixedLengthCode.decoder\nenc_length : \u2115 \u2192 \u2115 := toFixedLengthCode.enc_length\nenc_maps_length : \u2200 (as : List A), (toFixedLengthCode.encoder as).length = toFixedLengthCode.enc_length as.length :=\n  toFixedLengthCode.enc_maps_length\ndec_length : \u2115 \u2192 \u2115 := toFixedLengthCode.dec_length\ndec_maps_length : \u2200 (is : List O), (toFixedLengthCode.decoder is).length = toFixedLengthCode.dec_length is.length :=\n  toFixedLengthCode.dec_maps_length\nblock_in block_out : \u2115\nblock_enc : (Fin block_in \u2192 A) \u2192 Fin block_out \u2192 I\nblock_dec : (Fin block_out \u2192 O) \u2192 Fin block_in \u2192 A\nblock_enc_dec_inv : \u2200 (as : Fin block_in \u2192 A), block_dec (io \u2218 block_enc as) = as\n\u22a2 \u2200 (is : List O), (toFixedLengthCode.decoder is).length = toFixedLengthCode.dec_length is.length",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/ClassicalInfo/Capacity.lean#L50"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "271fcc91f6f3c1540a61e22d12a4983aa5b699c511fc668a10793c1b9ce3345d"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 56,
        "start_column": 4,
        "end_line": 56,
        "end_column": 9,
        "file": "ClassicalInfo/Entropy.lean"
      },
      "debug_info": {
        "goal": "case neg\np : Prob\nh : \u00acp = 0\n\u22a2 -\u2191p * Real.log \u2191p \u2264 Real.exp (-1)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/ClassicalInfo/Entropy.lean#L56"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "946ff34b66c7dbb650c8c633801c4646e534285f731205afaac3808f40d4ea77"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 94,
        "start_column": 2,
        "end_line": 94,
        "end_column": 7,
        "file": "ClassicalInfo/Entropy.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u\ninst\u271d : Fintype \u03b1\nd : Distribution \u03b1\n\u22a2 H\u209b d \u2264 Real.log \u2191Finset.univ.card",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/ClassicalInfo/Entropy.lean#L94"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "420715c6505f0babefb4280fcc8da72df1dab67c072a554aed04b81a68442e53"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 397,
        "start_column": 2,
        "end_line": 397,
        "end_column": 7,
        "file": "ClassicalInfo/Prob.lean"
      },
      "debug_info": {
        "goal": "p : Prob\nx : \u211d\nh : \u2191p \u2264 Real.exp x\n\u22a2 ENNReal.ofReal (-x) \u2264 \u2014log p",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/ClassicalInfo/Prob.lean#L397"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-04-12T03:25:12-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "9070ab588888b62aa711eb103497b0203a5666062a756b0b62a4316b78589af0"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 135,
        "start_column": 4,
        "end_line": 135,
        "end_column": 9,
        "file": "QuantumInfo/Finite/Capacity.lean"
      },
      "debug_info": {
        "goal": "case h.left\nd\u2081 : Type u_1\ninst\u271d\u00b9 : Fintype d\u2081\ninst\u271d : DecidableEq d\u2081\n\u03b5 : \u211d\nh\u03b5 : \u03b5 > 0\n\u22a2 (piProd fun x => id).Emulates id",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Capacity.lean#L135"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-21T14:58:45-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "dd6298f4f81fa9f633018127a561e14d396aa5cb351e353a384ff8c05324543f"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 142,
        "start_column": 2,
        "end_line": 142,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Capacity.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_1\nd\u2082 : Type u_2\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u039b : CPTPMap d\u2081 d\u2082 \u2102\nR : \u211d\nhR : Real.logb 2 \u2191(Fintype.card d\u2081) < R\n\u22a2 \u00ac\u039b.AchievesRate R",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Capacity.lean#L142"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-21T14:58:45-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "cd030babcb47f63bf4e19e53037ac21b727bd6fa318394a3ce929dfa1930b129"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 146,
        "start_column": 2,
        "end_line": 146,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Capacity.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_1\nd\u2082 : Type u_2\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u039b : CPTPMap d\u2081 d\u2082 \u2102\nR : \u211d\nhR : Real.logb 2 \u2191(Fintype.card d\u2082) < R\n\u22a2 \u00ac\u039b.AchievesRate R",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Capacity.lean#L146"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-21T14:58:45-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "c1571dab2b68887b92f1450a61e5f56f426e69ed49a39947e4c24dd2f9462151"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 180,
        "start_column": 2,
        "end_line": 180,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Capacity.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_1\nd\u2082 : Type u_2\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u039b : CPTPMap d\u2081 d\u2082 \u2102\n\u03c1 : MState d\u2081\n\u22a2 coherentInfo \u03c1 \u039b \u2264 \u039b.quantumCapacity",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Capacity.lean#L180"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-26T16:05:31-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "468348ab54137428fe25283c39c9721f21ebcc214777ca5bf1bcd173a076687d"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 185,
        "start_column": 2,
        "end_line": 185,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Capacity.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_1\nd\u2082 : Type u_2\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u039b : CPTPMap d\u2081 d\u2082 \u2102\n\u03c1 : MState d\u2081\n\u22a2 \u039b.quantumCapacity = sSup {r | \u2203 n \u03c1, r = coherentInfo \u03c1 (piProd fun x => \u039b)}",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Capacity.lean#L185"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-26T16:05:31-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "4d5ff8efe18d51fc7c611362c74c7840a487744824e393d026a5f5638e39eb93"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 48,
        "start_column": 4,
        "end_line": 48,
        "end_column": 9,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\nd\u2081 : Type u_2\nd\u2082 : Type u_3\nd\u2083 : Type u_4\ninst\u271d\u00b9\u2076 : Fintype d\ninst\u271d\u00b9\u2075 : Fintype d\u2081\ninst\u271d\u00b9\u2074 : Fintype d\u2082\ninst\u271d\u00b9\u00b3 : Fintype d\u2083\ninst\u271d\u00b9\u00b2 : DecidableEq d\u2081\ninst\u271d\u00b9\u00b9 : DecidableEq d\u2082\ndA : Type u_5\ndB : Type u_6\ndC : Type u_7\ndA\u2081 : Type u_8\ndA\u2082 : Type u_9\ninst\u271d\u00b9\u2070 : Fintype dA\ninst\u271d\u2079 : Fintype dB\ninst\u271d\u2078 : Fintype dC\ninst\u271d\u2077 : Fintype dA\u2081\ninst\u271d\u2076 : Fintype dA\u2082\ninst\u271d\u2075 : DecidableEq dA\ninst\u271d\u2074 : DecidableEq dB\ninst\u271d\u00b3 : DecidableEq dC\ninst\u271d\u00b2 : DecidableEq dA\u2081\ninst\u271d\u00b9 : DecidableEq dA\u2082\ninst\u271d : DecidableEq d\n\u03c1 \u03c3 : MState d\n\u22a2 0 \u2264 (\u2191\u03c1).inner ((\u2191\u03c1).log - (\u2191\u03c3).log)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Entropy.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-29T16:24:40-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "791b88394e1d0cff42d4966965b3b3e915a6db6d4d2fa6241852c5f0a0153fb7"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 71,
        "start_column": 4,
        "end_line": 71,
        "end_column": 9,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "case pos.e_val.e_val.h.e_6.h\nd : Type u_1\nd\u2082 : Type u_3\ninst\u271d\u00b3 : Fintype d\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2082\ninst\u271d : DecidableEq d\n\u03c1 \u03c3 : MState d\ne : d\u2082 \u2243 d\nh\u2081 : LinearMap.ker (Matrix.toLin' \u2191(\u03c3.relabel e).toSubtype) \u2264 LinearMap.ker (Matrix.toLin' \u2191(\u03c1.relabel e).toSubtype)\nh\u2082 : LinearMap.ker (Matrix.toLin' \u2191\u03c3.toSubtype) \u2264 LinearMap.ker (Matrix.toLin' \u2191\u03c1.toSubtype)\n\u22a2 (\u2191\u2191(\u03c1.relabel e) * \u2191((\u2191(\u03c1.relabel e)).log - (\u2191(\u03c3.relabel e)).log)).trace = (\u2191\u2191\u03c1 * \u2191((\u2191\u03c1).log - (\u2191\u03c3).log)).trace",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Entropy.lean#L71"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-31T00:28:17-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "ed210ff4b3751b1e8df63e545f3ad24c7ac18c60f662bddcca1b85399a73d3f9"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 77,
        "start_column": 4,
        "end_line": 77,
        "end_column": 9,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "case neg\nd : Type u_1\nd\u2082 : Type u_3\ninst\u271d\u00b3 : Fintype d\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2082\ninst\u271d : DecidableEq d\n\u03c1 \u03c3 : MState d\ne : d\u2082 \u2243 d\nh\u2081 :\n  LinearMap.ker (Matrix.toLin' \u2191\u2191{ toSubtype := \u27e8\u03c3.m.submatrix \u21d1e \u21d1e, \u22ef\u27e9, zero_le := \u22ef, tr := \u22ef }) \u2264\n    LinearMap.ker (Matrix.toLin' \u2191\u2191{ toSubtype := \u27e8\u03c1.m.submatrix \u21d1e \u21d1e, \u22ef\u27e9, zero_le := \u22ef, tr := \u22ef })\nh\u2082 : \u00acLinearMap.ker (Matrix.toLin' \u2191\u03c3.toSubtype) \u2264 LinearMap.ker (Matrix.toLin' \u2191\u03c1.toSubtype)\n\u22a2 False",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Entropy.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-31T00:28:17-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "ad96788db46ac1d21d9c36c52bccad7e21fc8881306118b8c5c0f6131877f6b7"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 77,
        "start_column": 4,
        "end_line": 77,
        "end_column": 9,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "case pos\nd : Type u_1\nd\u2082 : Type u_3\ninst\u271d\u00b3 : Fintype d\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2082\ninst\u271d : DecidableEq d\n\u03c1 \u03c3 : MState d\ne : d\u2082 \u2243 d\nh\u2081 :\n  \u00acLinearMap.ker (Matrix.toLin' \u2191\u2191{ toSubtype := \u27e8\u03c3.m.submatrix \u21d1e \u21d1e, \u22ef\u27e9, zero_le := \u22ef, tr := \u22ef }) \u2264\n      LinearMap.ker (Matrix.toLin' \u2191\u2191{ toSubtype := \u27e8\u03c1.m.submatrix \u21d1e \u21d1e, \u22ef\u27e9, zero_le := \u22ef, tr := \u22ef })\nh\u2082 : LinearMap.ker (Matrix.toLin' \u2191\u03c3.toSubtype) \u2264 LinearMap.ker (Matrix.toLin' \u2191\u03c1.toSubtype)\n\u22a2 False",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Entropy.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-31T00:28:17-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "e3f122aa03db4e9c23d914d52649d17a420d049bd5c0f7963ff212b5e26f9b0f"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 115,
        "start_column": 8,
        "end_line": 115,
        "end_column": 13,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\nd\u2081 : Type u_2\nd\u2082 : Type u_3\nd\u2083 : Type u_4\ninst\u271d\u00b9\u2077 : Fintype d\ninst\u271d\u00b9\u2076 : Fintype d\u2081\ninst\u271d\u00b9\u2075 : Fintype d\u2082\ninst\u271d\u00b9\u2074 : Fintype d\u2083\ninst\u271d\u00b9\u00b3 : DecidableEq d\u2081\ninst\u271d\u00b9\u00b2 : DecidableEq d\u2082\ndA : Type u_5\ndB : Type u_6\ndC : Type u_7\ndA\u2081 : Type u_8\ndA\u2082 : Type u_9\ninst\u271d\u00b9\u00b9 : Fintype dA\ninst\u271d\u00b9\u2070 : Fintype dB\ninst\u271d\u2079 : Fintype dC\ninst\u271d\u2078 : Fintype dA\u2081\ninst\u271d\u2077 : Fintype dA\u2082\ninst\u271d\u2076 : DecidableEq dA\ninst\u271d\u2075 : DecidableEq dB\ninst\u271d\u2074 : DecidableEq dC\ninst\u271d\u00b3 : DecidableEq dA\u2081\ninst\u271d\u00b2 : DecidableEq dA\u2082\ninst\u271d\u00b9 : DecidableEq d\ninst\u271d : Fintype d\n\u03b1 : \u211d\n\u03c1 \u03c3 : MState d\n\u22a2 0 \u2264 Real.log ((\u2191\u03c1).conj \u2191(\u2191\u03c3 ^ ((1 - \u03b1) / (2 * \u03b1))) ^ \u03b1).trace / (\u03b1 - 1)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Entropy.lean#L115"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-31T00:28:17-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "72aa224b6cbf130641226cc5834dc35e032373c976f70395a01cdd73ffcc7443"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 165,
        "start_column": 2,
        "end_line": 165,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_2\nd\u2082 : Type u_3\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u03c1\u2081 \u03c3\u2081 : MState d\u2081\n\u03c1\u2082 \u03c3\u2082 : MState d\u2082\n\u22a2 \ud835\udc03(\u03c1\u2081\u2297\u03c1\u2082\u2016\u03c3\u2081\u2297\u03c3\u2082) = \ud835\udc03(\u03c1\u2081\u2016\u03c3\u2081) + \ud835\udc03(\u03c1\u2082\u2016\u03c3\u2082)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Entropy.lean#L165"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-02-06T18:15:19-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "b9968984294fb574281a2f9ecb80df53640b3ee2ad177d01fca9c1277821ae54"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 172,
        "start_column": 2,
        "end_line": 172,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 : MState d\n\u22a2 _root_.Continuous fun \u03c3 => \ud835\udc03(\u03c1\u2016\u03c3)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Entropy.lean#L172"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "145098d236cb0d7a31a1a4d25299ffdc3cfca1f498e313c122a36e69af3878b6"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 186,
        "start_column": 2,
        "end_line": 186,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u22a2 \u2200 (\u03c1\u2081 \u03c1\u2082 \u03c3\u2081 \u03c3\u2082 : MState d) (p : Prob), \ud835\udc03(p[\u03c1\u2081\u2194\u03c1\u2082]\u2016p[\u03c3\u2081\u2194\u03c3\u2082]) \u2264 \u2191\u2191p * \ud835\udc03(\u03c1\u2081\u2016\u03c3\u2081) + (1 - \u2191\u2191p) * \ud835\udc03(\u03c1\u2082\u2016\u03c3\u2082)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Entropy.lean#L186"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-02-06T18:15:19-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "6bd08bfbc50db9815d9d5df843fff11ea794425c9e11157675ba4b60bd473de3"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 207,
        "start_column": 2,
        "end_line": 207,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_2\nd\u2082 : Type u_3\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u03c1 : MState (d\u2081 \u00d7 d\u2082)\n\u22a2 S\u1d65\u2099 \u03c1.SWAP = S\u1d65\u2099 \u03c1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Entropy.lean#L207"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "e6bf36bba068cc6c53e9e690b9eea1fa488ab6af91d70a9b3cdcddb6f517f68a"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 212,
        "start_column": 2,
        "end_line": 212,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_2\nd\u2082 : Type u_3\nd\u2083 : Type u_4\ninst\u271d\u2074 : Fintype d\u2081\ninst\u271d\u00b3 : Fintype d\u2082\ninst\u271d\u00b2 : Fintype d\u2083\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u03c1 : MState ((d\u2081 \u00d7 d\u2082) \u00d7 d\u2083)\n\u22a2 S\u1d65\u2099 \u03c1.assoc = S\u1d65\u2099 \u03c1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Entropy.lean#L212"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "240daafc63c92ac0fa7a3ac1e92f157026254d03536142e0a1e999774921e168"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 216,
        "start_column": 2,
        "end_line": 216,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_2\nd\u2082 : Type u_3\nd\u2083 : Type u_4\ninst\u271d\u2074 : Fintype d\u2081\ninst\u271d\u00b3 : Fintype d\u2082\ninst\u271d\u00b2 : Fintype d\u2083\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u03c1 : MState (d\u2081 \u00d7 d\u2082 \u00d7 d\u2083)\n\u22a2 S\u1d65\u2099 \u03c1.assoc' = S\u1d65\u2099 \u03c1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Entropy.lean#L216"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-21T14:58:45-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "4275132320af8f3e849dd3cddd376447567c5426bb0d35370c65f17ad4fc7670"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 221,
        "start_column": 2,
        "end_line": 221,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_2\nd\u2082 : Type u_3\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u03c8 : Ket (d\u2081 \u00d7 d\u2082)\n\u22a2 S\u1d65\u2099 (MState.pure \u03c8).traceLeft = S\u1d65\u2099 (MState.pure \u03c8).traceRight",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Entropy.lean#L221"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "9dcecf96dccce1d96d6128c1a2f180bb8676ec97da96fa665009a54904fc426b"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 228,
        "start_column": 2,
        "end_line": 228,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "dA : Type u_5\ndB : Type u_6\ndC : Type u_7\ninst\u271d\u2075 : Fintype dA\ninst\u271d\u2074 : Fintype dB\ninst\u271d\u00b3 : Fintype dC\ninst\u271d\u00b2 : DecidableEq dA\ninst\u271d\u00b9 : DecidableEq dB\ninst\u271d : DecidableEq dC\n\u03c1 : MState (dA \u00d7 dB \u00d7 dC)\n\u22a2 let \u03c1AB := \u03c1.assoc'.traceRight;\n  let \u03c1AC := \u03c1.SWAP.assoc.traceLeft.SWAP;\n  0 \u2264 qConditionalEnt \u03c1AB + qConditionalEnt \u03c1AC",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Entropy.lean#L228"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "1d76bae306c09b9f738e9daed9d273b565aa22be10d588ffa7ba26ae5c629d72"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 234,
        "start_column": 2,
        "end_line": 234,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_2\nd\u2082 : Type u_3\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u03b1 : \u211d\n\u03c1\u2081 \u03c3\u2081 : MState d\u2081\n\u03c1\u2082 \u03c3\u2082 : MState d\u2082\n\u22a2 (if LinearMap.ker (Matrix.toLin' \u2191\u2191(\u03c3\u2081\u2297\u03c3\u2082)) \u2264 LinearMap.ker (Matrix.toLin' \u2191\u2191(\u03c1\u2081\u2297\u03c1\u2082)) then\n      if \u03b1 = 1 then \ud835\udc03(\u03c1\u2081\u2297\u03c1\u2082\u2016\u03c3\u2081\u2297\u03c3\u2082)\n      else \u2191\u27e8Real.log ((\u2191(\u03c1\u2081\u2297\u03c1\u2082)).conj \u2191(\u2191(\u03c3\u2081\u2297\u03c3\u2082) ^ ((1 - \u03b1) / (2 * \u03b1))) ^ \u03b1).trace / (\u03b1 - 1), \u22ef\u27e9\n    else \u22a4) =\n    (if LinearMap.ker (Matrix.toLin' \u2191\u2191\u03c3\u2081) \u2264 LinearMap.ker (Matrix.toLin' \u2191\u2191\u03c1\u2081) then\n        if \u03b1 = 1 then \ud835\udc03(\u03c1\u2081\u2016\u03c3\u2081) else \u2191\u27e8Real.log ((\u2191\u03c1\u2081).conj \u2191(\u2191\u03c3\u2081 ^ ((1 - \u03b1) / (2 * \u03b1))) ^ \u03b1).trace / (\u03b1 - 1), \u22ef\u27e9\n      else \u22a4) +\n      if LinearMap.ker (Matrix.toLin' \u2191\u2191\u03c3\u2082) \u2264 LinearMap.ker (Matrix.toLin' \u2191\u2191\u03c1\u2082) then\n        if \u03b1 = 1 then \ud835\udc03(\u03c1\u2082\u2016\u03c3\u2082) else \u2191\u27e8Real.log ((\u2191\u03c1\u2082).conj \u2191(\u2191\u03c3\u2082 ^ ((1 - \u03b1) / (2 * \u03b1))) ^ \u03b1).trace / (\u03b1 - 1), \u22ef\u27e9\n      else \u22a4",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Entropy.lean#L234"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-29T09:57:31-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "7dfaaae89f4472f0c7555eca45b05ce6dc069f91c59cd013da4b79a1f109776c"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 255,
        "start_column": 2,
        "end_line": 255,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "dA : Type u_5\ndB : Type u_6\ninst\u271d\u00b3 : Fintype dA\ninst\u271d\u00b2 : Fintype dB\ninst\u271d\u00b9 : DecidableEq dA\ninst\u271d : DecidableEq dB\n\u03c1 : MState (dA \u00d7 dB)\n\u22a2 \u2191(qMutualInfo \u03c1) = \u2191\ud835\udc03(\u03c1\u2016\u03c1.traceRight\u2297\u03c1.traceLeft)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Entropy.lean#L255"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "9d7fe55dfd5475e91c67e6edeb5e233e52597116bcffdda5f1eacdbf8aff5a33"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 260,
        "start_column": 2,
        "end_line": 260,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_2\nd\u2082 : Type u_3\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u03c1 : MState (d\u2081 \u00d7 d\u2082)\n\u22a2 S\u1d65\u2099 \u03c1 \u2264 S\u1d65\u2099 \u03c1.traceRight + S\u1d65\u2099 \u03c1.traceLeft",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Entropy.lean#L260"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "2966405ab6971100ea89681780e3dcb73aca27daae0dcb9aa4d0e39846cd4b6d"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 272,
        "start_column": 2,
        "end_line": 272,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_2\nd\u2082 : Type u_3\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u03c1 : MState (d\u2081 \u00d7 d\u2082)\n\u22a2 |S\u1d65\u2099 \u03c1.traceRight - S\u1d65\u2099 \u03c1.traceLeft| \u2264 S\u1d65\u2099 \u03c1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Entropy.lean#L272"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "e4170cf21fc4774206ef95582bd2a840e9157b21648fc3400a67e18bfcc53551"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 280,
        "start_column": 2,
        "end_line": 280,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_2\nd\u2082 : Type u_3\nd\u2083 : Type u_4\ninst\u271d\u2074 : Fintype d\u2081\ninst\u271d\u00b3 : Fintype d\u2082\ninst\u271d\u00b2 : Fintype d\u2083\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u03c1\u2081\u2082\u2083 : MState (d\u2081 \u00d7 d\u2082 \u00d7 d\u2083)\n\u22a2 let \u03c1\u2081\u2082 := \u03c1\u2081\u2082\u2083.assoc'.traceRight;\n  let \u03c1\u2082\u2083 := \u03c1\u2081\u2082\u2083.traceLeft;\n  let \u03c1\u2082 := \u03c1\u2081\u2082\u2083.traceLeft.traceRight;\n  S\u1d65\u2099 \u03c1\u2081\u2082\u2083 + S\u1d65\u2099 \u03c1\u2082 \u2264 S\u1d65\u2099 \u03c1\u2081\u2082 + S\u1d65\u2099 \u03c1\u2082\u2083",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Entropy.lean#L280"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "d83e29fd8745171ef991a63d204f1618ef16604f38dade99bff52928f1e86d10"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 310,
        "start_column": 2,
        "end_line": 310,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "dA : Type u_5\ndB : Type u_6\ndC : Type u_7\ninst\u271d\u2075 : Fintype dA\ninst\u271d\u2074 : Fintype dB\ninst\u271d\u00b3 : Fintype dC\ninst\u271d\u00b2 : DecidableEq dA\ninst\u271d\u00b9 : DecidableEq dB\ninst\u271d : DecidableEq dC\n\u03c1 : MState (dA \u00d7 dB \u00d7 dC)\n\u22a2 qcmi \u03c1 \u2264 2 * Real.log \u2191(Fintype.card dA)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Entropy.lean#L310"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-21T14:58:45-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "23ad934defbbac92ab3538d13ff36b6a0ac23c2e7da144bb28636f9482d0bfb1"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 315,
        "start_column": 2,
        "end_line": 315,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "dA : Type u_5\ndB : Type u_6\ndC : Type u_7\ninst\u271d\u2075 : Fintype dA\ninst\u271d\u2074 : Fintype dB\ninst\u271d\u00b3 : Fintype dC\ninst\u271d\u00b2 : DecidableEq dA\ninst\u271d\u00b9 : DecidableEq dB\ninst\u271d : DecidableEq dC\n\u03c1 : MState (dA \u00d7 dB \u00d7 dC)\n\u22a2 qcmi \u03c1 \u2264 2 * Real.log \u2191(Fintype.card dC)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Entropy.lean#L315"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-21T14:58:45-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "8cf6bfb671cbc7e03a8f0626225d7bad099fcd2133644e808fd5258964d15c02"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 326,
        "start_column": 2,
        "end_line": 326,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "dB : Type u_6\ndC : Type u_7\ndA\u2081 : Type u_8\ndA\u2082 : Type u_9\ninst\u271d\u2077 : Fintype dB\ninst\u271d\u2076 : Fintype dC\ninst\u271d\u2075 : Fintype dA\u2081\ninst\u271d\u2074 : Fintype dA\u2082\ninst\u271d\u00b3 : DecidableEq dB\ninst\u271d\u00b2 : DecidableEq dC\ninst\u271d\u00b9 : DecidableEq dA\u2081\ninst\u271d : DecidableEq dA\u2082\n\u03c1 : MState ((dA\u2081 \u00d7 dA\u2082) \u00d7 dB \u00d7 dC)\n\u22a2 let \u03c1A\u2081BC := \u03c1.assoc.SWAP.assoc.traceLeft.SWAP;\n  let \u03c1A\u2082BA\u2081C := ((CPTPMap.id\u2297\u2096CPTPMap.assoc')\u2218\u2098(CPTPMap.assoc\u2218\u2098(CPTPMap.SWAP\u2297\u2096CPTPMap.id))) \u03c1;\n  qcmi \u03c1 = qcmi \u03c1A\u2081BC + qcmi \u03c1A\u2082BA\u2081C",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Entropy.lean#L326"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-15T17:01:00-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "53429954c3125a9f9b1027543e4f3075e0bb8d6f58572f9dd076374e05bc2438"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 202,
        "start_column": 2,
        "end_line": 202,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entanglement.lean"
      },
      "debug_info": {
        "goal": "d : Type\ninst\u271d\u00b9 : Fintype d\ninst\u271d : Nonempty d\n\u22a2 S\u1d65\u2099\n      {\n        toSubtype :=\n          \u27e8Matrix.of fun i\u2082 j\u2082 =>\n              \u2211 x : d,\n                {\n                      toSubtype :=\n                        \u27e8Matrix.vecMulVec\n                            \u21d1{ vec := fun x => if x.1 = x.2 then (\u2191\u221a\u2191(Fintype.card d))\u207b\u00b9 else 0, normalized' := \u22ef }\n                            \u21d1\u2191{ vec := fun x => if x.1 = x.2 then (\u2191\u221a\u2191(Fintype.card d))\u207b\u00b9 else 0, normalized' := \u22ef },\n                          \u22ef\u27e9,\n                      zero_le := \u22ef, tr := \u22ef }.m\n                  (i\u2082, x) (j\u2082, x),\n            \u22ef\u27e9,\n        zero_le := \u22ef, tr := \u22ef } =\n    Real.log \u2191(Fintype.card d)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Entanglement.lean#L202"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-01-12T23:03:32-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "3c85e51654c1ea625153492533d1cd716a1ae4784a55d9ece1f7b75ba35e825f"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 342,
        "start_column": 2,
        "end_line": 342,
        "end_column": 7,
        "file": "QuantumInfo/Finite/MState.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d : Fintype d\n\u03c1 : MState d\n\u22a2 (\u2203 \u03c8, \u03c1 = pure \u03c8) \u2194 \u03c1.purity = 1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/MState.lean#L342"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-30T15:58:31-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "0d99aa37eb0ee6cd944caf62bfb8bfdd0166b65f48f102d7fc608f32ed5fbd1f"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 439,
        "start_column": 2,
        "end_line": 439,
        "end_column": 7,
        "file": "QuantumInfo/Finite/MState.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_2\nd\u2082 : Type u_3\ninst\u271d\u00b9 : Fintype d\u2081\ninst\u271d : Fintype d\u2082\n\u03c1\u2081 : MState d\u2081\n\u03c1\u2082 : MState d\u2082\n\u22a2 \u2203 \u03c3, \u2200 (i : d\u2081) (j : d\u2082), (\u03c1\u2081\u2297\u03c1\u2082).spectrum (\u03c3 (i, j)) = \u03c1\u2081.spectrum i * \u03c1\u2082.spectrum j",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/MState.lean#L439"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-20T13:28:06-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "068660da7d75e89179c17f0c9c942593f16fc246a88cd1fe66c46fb601bb108a"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 460,
        "start_column": 2,
        "end_line": 460,
        "end_column": 7,
        "file": "QuantumInfo/Finite/MState.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_2\nd\u2082 : Type u_3\ninst\u271d\u00b9 : Fintype d\u2081\ninst\u271d : Fintype d\u2082\n\u03c8 : Ket (d\u2081 \u00d7 d\u2082)\n\u22a2 (pure \u03c8).IsSeparable \u2194 \u03c8.IsProd",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/MState.lean#L460"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-25T16:37:53-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "e5da1f3ce43a4a525d466c7123ce5ad911cc91f3ea21b65cd0c1cc68a6e2607e"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 465,
        "start_column": 2,
        "end_line": 465,
        "end_column": 7,
        "file": "QuantumInfo/Finite/MState.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_2\nd\u2082 : Type u_3\ninst\u271d\u00b9 : Fintype d\u2081\ninst\u271d : Fintype d\u2082\n\u03c8 : Ket (d\u2081 \u00d7 d\u2082)\n\u22a2 (pure \u03c8).IsSeparable \u2194 \u2203 \u03c8\u2081, pure \u03c8\u2081 = (pure \u03c8).traceLeft",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/MState.lean#L465"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-25T16:37:53-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "5f89ffd15358190e6cb95921a6d717651e076d3b3565bdc97b5d0351bdc3d7db"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 483,
        "start_column": 6,
        "end_line": 483,
        "end_column": 11,
        "file": "QuantumInfo/Finite/MState.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\nd\u2081 : Type u_2\nd\u2082 : Type u_3\nd\u2083 : Type u_4\ninst\u271d\u00b3 : Fintype d\ninst\u271d\u00b2 : Fintype d\u2081\ninst\u271d\u00b9 : Fintype d\u2082\ninst\u271d : Fintype d\u2083\n\u03c1 : MState d\nh\u2081 : \u2200 (i : d), 0 \u2264 \u22ef.eigenvalues i\n\u22a2 \u2200 (x : d), \u2211 i : d, Complex.abs (\u22ef.eigenvectorBasis x i) ^ 2 = 1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/MState.lean#L483"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "f5eed893aae3a477d58c80db453486d197870d300b59e2f4c9964de47a9a6e31"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 497,
        "start_column": 2,
        "end_line": 497,
        "end_column": 7,
        "file": "QuantumInfo/Finite/MState.lean"
      },
      "debug_info": {
        "goal": "case h.a.a\nd : Type u_1\ninst\u271d : Fintype d\n\u03c1 : MState d\ni j : d\n\u22a2 \u2211 x : d,\n      \u2191\u22ef.eigenvectorUnitary i x *\n        (\u2191(Complex.normSq \u2191\u221a(\u22ef.eigenvalues x)) * (starRingEnd \u2102) (\u2191\u22ef.eigenvectorUnitary j x)) =\n    \u2191\u2191\u03c1 i j",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/MState.lean#L497"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-18T12:12:56-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "fea127b5f82fcca7a227d376930156a87c9e4fc65585d7ba30f078c0824a6ff5"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 526,
        "start_column": 2,
        "end_line": 526,
        "end_column": 7,
        "file": "QuantumInfo/Finite/MState.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\nd\u2081 : Type u_2\nd\u2082 : Type u_3\nd\u2083 : Type u_4\ninst\u271d\u00b3 : Fintype d\ninst\u271d\u00b2 : Fintype d\u2081\ninst\u271d\u00b9 : Fintype d\u2082\ninst\u271d : Fintype d\u2083\n\u03c1 : MState (d\u2081 \u00d7 d\u2082)\n\u22a2 \u2203 e, \u03c1.SWAP.spectrum.relabel e = \u03c1.spectrum",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/MState.lean#L526"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-02-06T18:15:19-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "f956e38661f4870196239b96fbc57c0e47e3f4999ee5e7a0e2dc0e832fd4200b"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 614,
        "start_column": 2,
        "end_line": 614,
        "end_column": 7,
        "file": "QuantumInfo/Finite/MState.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\nd\u2081 : Type u_2\nd\u2082 : Type u_3\nd\u2083 : Type u_4\ninst\u271d\u00b3 : Fintype d\ninst\u271d\u00b2 : Fintype d\u2081\ninst\u271d\u00b9 : Fintype d\u2082\ninst\u271d : Fintype d\u2083\n\u22a2 CompactSpace (MState d)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/MState.lean#L614"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "e900c29b5d399d8abd3f217dc57d1522f15560aa430648258789be355ce437ea"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 617,
        "start_column": 2,
        "end_line": 617,
        "end_column": 7,
        "file": "QuantumInfo/Finite/MState.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d : Fintype d\n\u22a2 Continuous M",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/MState.lean#L617"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-14T17:26:35-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "4a1e5e6c776a2fb25b58c015efb7ff46ed88cf57b990e5a11b41c59375705b94"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 639,
        "start_column": 6,
        "end_line": 639,
        "end_column": 11,
        "file": "QuantumInfo/Finite/MState.lean"
      },
      "debug_info": {
        "goal": "case right\nd : Type u_1\nd\u2081 : Type u_2\nd\u2082 : Type u_3\nd\u2083 : Type u_4\ninst\u271d\u2076 : Fintype d\ninst\u271d\u2075 : Fintype d\u2081\ninst\u271d\u2074 : Fintype d\u2082\ninst\u271d\u00b3 : Fintype d\u2083\n\u03b9 : Type u\ninst\u271d\u00b2 : DecidableEq \u03b9\nf\u03b9 : Fintype \u03b9\ndI : \u03b9 \u2192 Type v\ninst\u271d\u00b9 : (i : \u03b9) \u2192 Fintype (dI i)\ninst\u271d : (i : \u03b9) \u2192 DecidableEq (dI i)\n\u03c1i : (i : \u03b9) \u2192 MState (dI i)\nv : ((i : \u03b9) \u2192 dI i) \u2192 \u2102\n\u22a2 0 \u2264 star v \u2b1d\u1d65 \u2191\u27e8fun j k => \u220f i : \u03b9, (\u03c1i i).m (j i) (k i), \u22ef\u27e9 *\u1d65 v",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/MState.lean#L639"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-28T15:30:28-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "c787e323b52e2bfaa02231d7b76439e2f92879078ae8ff723fb2c2417fb23b12"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 628,
        "start_column": 14,
        "end_line": 628,
        "end_column": 19,
        "file": "QuantumInfo/Finite/MState.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\nd\u2081 : Type u_2\nd\u2082 : Type u_3\nd\u2083 : Type u_4\ninst\u271d\u2076 : Fintype d\ninst\u271d\u2075 : Fintype d\u2081\ninst\u271d\u2074 : Fintype d\u2082\ninst\u271d\u00b3 : Fintype d\u2083\n\u03b9 : Type u\ninst\u271d\u00b2 : DecidableEq \u03b9\nf\u03b9 : Fintype \u03b9\ndI : \u03b9 \u2192 Type v\ninst\u271d\u00b9 : (i : \u03b9) \u2192 Fintype (dI i)\ninst\u271d : (i : \u03b9) \u2192 DecidableEq (dI i)\n\u03c1i : (i : \u03b9) \u2192 MState (dI i)\n\u22a2 (fun j k => \u220f i : \u03b9, (\u03c1i i).m (j i) (k i)) \u2208 selfAdjoint (Matrix ((i : \u03b9) \u2192 dI i) ((i : \u03b9) \u2192 dI i) \u2102)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/MState.lean#L628"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-31T00:28:17-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "331c7dcaf6fdbb2f4e9fc7b8acb7fed9fab5c5637409d2b0d023f3e781b43674"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 289,
        "start_column": 6,
        "end_line": 289,
        "end_column": 11,
        "file": "QuantumInfo/Finite/Braket.lean"
      },
      "debug_info": {
        "goal": "case h.h.mk\nd\u2081 : Type u_3\nd\u2082 : Type u_4\ninst\u271d\u00b9 : Fintype d\u2081\ninst\u271d : Fintype d\u2082\n\u03c8 : Ket (d\u2081 \u00d7 d\u2082)\nhcrossm : \u2200 (i\u2081 i\u2082 : d\u2081) (j\u2081 j\u2082 : d\u2082), \u03c8 (i\u2081, j\u2081) * \u03c8 (i\u2082, j\u2082) = \u03c8 (i\u2081, j\u2082) * \u03c8 (i\u2082, j\u2081)\na : d\u2081\nb : d\u2082\nh\u03c8nonZero : \u03c8 (a, b) \u2260 0\nv\u2081 : d\u2081 \u2192 \u2102 := fun x => \u2191(\u03c8 (a, b)).abs / \u03c8 (a, b) * (\u03c8 (x, b) / \u2191\u221a(\u2211 i : d\u2081, Complex.normSq (\u03c8 (i, b))))\nv\u2082 : d\u2082 \u2192 \u2102 := fun y => \u03c8 (a, y) / \u2191\u221a(\u2211 j : d\u2082, Complex.normSq (\u03c8 (a, j)))\nhv1Norm : \u2211 x : d\u2081, \u2016v\u2081 x\u2016 ^ 2 = 1\nhv2Norm : \u2211 x : d\u2082, \u2016v\u2082 x\u2016 ^ 2 = 1\n\u03c8\u2081 : Ket d\u2081 := { vec := v\u2081, normalized' := hv1Norm }\n\u03c8\u2082 : Ket d\u2082 := { vec := v\u2082, normalized' := hv2Norm }\nx : d\u2081\ny : d\u2082\nh\u03c8fun : \u03c8 (x, y) = \u03c8 (x, b) * \u03c8 (a, y) / \u03c8 (a, b)\nh\u03c8norm : \u2211 z : d\u2081 \u00d7 d\u2082, Complex.normSq (\u03c8.vec (z.1, b) * \u03c8.vec (a, z.2)) = Complex.normSq (\u03c8 (a, b))\n\u22a2 \u03c8.vec (x, y) =\n    \u2191(\u03c8 (a, b)).abs / \u03c8 (a, b) *\n      (\u03c8 (x, b) * \u03c8 (a, y) / \u2191\u221a((\u2211 i : d\u2081, Complex.normSq (\u03c8 (i, b))) * \u2211 j : d\u2082, Complex.normSq (\u03c8 (a, j))))",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Braket.lean#L289"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-28T12:13:14-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "46f728c8d5e210a08f1cdc570af106be734926028229962f5384a0d0739853ae"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 85,
        "start_column": 4,
        "end_line": 85,
        "end_column": 9,
        "file": "QuantumInfo/Finite/POVM.lean"
      },
      "debug_info": {
        "goal": "case h.e'_2.h.e'_5.a\nX : Type u_1\nd : Type u_2\ninst\u271d\u00b3 : Fintype X\ninst\u271d\u00b2 : Fintype d\ninst\u271d\u00b9 : DecidableEq d\ninst\u271d : DecidableEq X\n\u039b : POVM X d\nx : Matrix d d \u2102\ni : X\na\u271d : i \u2208 Finset.univ\n\u22a2 \u2191(\u039b.mats i ^ (1 / 2)) * \u2191(\u039b.mats i ^ (1 / 2)) = \u2191(\u039b.mats i)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/POVM.lean#L85"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "c5a0e690a997c4b1e8a42bd10f7b09cb1a493ae6b1b2f0fd90f60aa2d631ab25"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 50,
        "start_column": 4,
        "end_line": 50,
        "end_column": 9,
        "file": "QuantumInfo/Finite/POVM.lean"
      },
      "debug_info": {
        "goal": "X : Type u_1\nd : Type u_2\ninst\u271d\u00b3 : Fintype X\ninst\u271d\u00b2 : Fintype d\ninst\u271d\u00b9 : DecidableEq d\ninst\u271d : DecidableEq X\n\u039b : POVM X d\n\u22a2 MatrixMap.IsCompletelyPositive\n    ((((PTPMap.mk \u2102\n                  (PMap.mk \u2102\n                    (HPMap.mk \u2102\n                      (\u2211 x : X,\n                        {\n                          toFun := fun \u03c1 =>\n                            kroneckerMap (fun x1 x2 => x1 * x2) (\u2191(\u039b.mats x ^ (1 / 2)) * \u03c1 * \u2191(\u039b.mats x ^ (1 / 2)))\n                              (stdBasisMatrix x x 1),\n                          map_add' := \u22ef, map_smul' := \u22ef })\n                      \u22ef)\n                    \u22ef)\n                  \u22ef).toPMap\n              \u2102).toHPMap\n          \u2102).toLinearMap\n      \u2102)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/POVM.lean#L50"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-28T12:13:14-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "8db22f30291e14e14f07a083e46bcb283948e71e035a55761151f4b7074b166c"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 95,
        "start_column": 4,
        "end_line": 95,
        "end_column": 9,
        "file": "QuantumInfo/Finite/POVM.lean"
      },
      "debug_info": {
        "goal": "X : Type u_1\nd : Type u_2\ninst\u271d\u00b3 : Fintype X\ninst\u271d\u00b2 : Fintype d\ninst\u271d\u00b9 : DecidableEq d\ninst\u271d : DecidableEq X\n\u039b : POVM X d\n\u03c1 : MState d\nx : X\n\u22a2 (\u039b.mats x).inner \u2191\u03c1 \u2264 1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/POVM.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-25T16:37:53-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "bf4cdbbe32c4cb43f4ec76ec8ca3dcd5f3b4ed3253da2e4bdbcf2080fbced247"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 104,
        "start_column": 2,
        "end_line": 104,
        "end_column": 7,
        "file": "QuantumInfo/Finite/POVM.lean"
      },
      "debug_info": {
        "goal": "X : Type u_1\nd : Type u_2\ninst\u271d\u00b3 : Fintype X\ninst\u271d\u00b2 : Fintype d\ninst\u271d\u00b9 : DecidableEq d\ninst\u271d : DecidableEq X\n\u039b : POVM X d\n\u03c1 : MState d\n\u22a2 (\u039b.measurement_map \u03c1).traceLeft = MState.ofClassical (\u039b.measure \u03c1)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/POVM.lean#L104"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-29T21:39:14+02:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "23b35e05ba2cf078cc2983f186a921f3d09b6281ecc30c24610cbc10c11dd5dd"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 40,
        "start_column": 2,
        "end_line": 40,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Unitary.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 : MState d\nU : \u21a5\ud835\udc14[d]\n\u22a2 \u2203 \u03c3, (\u03c1.U_conj U).spectrum = \u03c1.spectrum.relabel \u03c3",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Unitary.lean#L40"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "4ee1014be72b3423dccd3a56632d59a70ebf3ce7e1ba97ac447a008b7d55a04c"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 112,
        "start_column": 2,
        "end_line": 112,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Ensemble.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nd : Type u_3\ninst\u271d\u00b9 : Fintype \u03b1\ninst\u271d : Fintype d\n\u03c8 : Ket d\ne : PEnsemble d \u03b1\n\u22a2 mix \u2191e = MState.pure \u03c8 \u2194 \u2200 (i : \u03b1), e.distr i \u2260 0 \u2192 e.states i = \u03c8",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Ensemble.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-01-15T23:45:19-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "6093ecb784dc176ff7cab3ebff4983e12036e733bd5e73f22c4d52ad8385b740"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 145,
        "start_column": 2,
        "end_line": 145,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Ensemble.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nd : Type u_3\ninst\u271d\u00b9 : Fintype \u03b1\ninst\u271d : Fintype d\n\u03c8 : Ket d\ne : MEnsemble d \u03b1\n\u22a2 mix e = MState.pure \u03c8 \u2194 \u2200 (i : \u03b1), e.distr i \u2260 0 \u2192 e.states i = MState.pure \u03c8",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Ensemble.lean#L145"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-01-15T23:45:19-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "34f9670bcf91c58d3fea46ff9d5633dbc7d2daa014141343a4483f32d4192b5b"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 232,
        "start_column": 2,
        "end_line": 232,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Ensemble.lean"
      },
      "debug_info": {
        "goal": "case h.a.a\nd : Type u_3\ninst\u271d : Fintype d\n\u03c1 : MState d\ni j : d\n\u22a2 \u2191\u2191(mix \u2191(spectral_ensemble \u03c1)) i j = \u2191\u2191\u03c1 i j",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Ensemble.lean#L232"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-01-15T23:45:19-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "752925a7d6f2d01f257ea92bcf09acb080658fac046fd9a880c785f7eab8ccd8"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 330,
        "start_column": 2,
        "end_line": 330,
        "end_column": 7,
        "file": "QuantumInfo/ForMathlib/HermitianMat.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nn : Type u_2\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : RCLike \u03b1\nA : HermitianMat n \u03b1\ninst\u271d : DecidableEq n\nhA : 0 \u2264 A\n\u22a2 A \u2264 A.trace \u2022 1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/ForMathlib/HermitianMat.lean#L330"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-02-05T00:41:27-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "5021482153f27a99c12edfd5c2cd18d70d5f3dfe53389efb089a3845d08af11e"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7,
        "file": "QuantumInfo/ForMathlib/MatrixNorm/TraceNorm.lean"
      },
      "debug_info": {
        "goal": "n : Type u_2\nR : Type u_3\ninst\u271d\u00b9 : Fintype n\ninst\u271d : RCLike R\nA : Matrix n n R\nhA : A.IsHermitian\n\u22a2 A.traceNorm = \u2211 i : n, |hA.eigenvalues i|",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/ForMathlib/MatrixNorm/TraceNorm.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-29T21:39:14+02:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "82304868ee0354c69d5ca7a6a3e045ada3c27d7e67af4a92c3c460a7da5f9e5a"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 43,
        "start_column": 6,
        "end_line": 43,
        "end_column": 11,
        "file": "QuantumInfo/ForMathlib/MatrixNorm/TraceNorm.lean"
      },
      "debug_info": {
        "goal": "m : Type u_1\nn : Type u_2\nR : Type u_3\ninst\u271d\u00b2 : Fintype m\ninst\u271d\u00b9 : Fintype n\ninst\u271d : RCLike R\nA : Matrix m n R\nh : A.traceNorm = 0\n\u22a2 \u2200 (i : n), \u22ef.eigenvalues i = 0",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/ForMathlib/MatrixNorm/TraceNorm.lean#L43"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-29T21:39:14+02:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "cb28bc0bed666b06dd7ba7cd9b66feee404dc4db4eaa90eac0df1a560a96a876"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 45,
        "start_column": 6,
        "end_line": 45,
        "end_column": 11,
        "file": "QuantumInfo/ForMathlib/MatrixNorm/TraceNorm.lean"
      },
      "debug_info": {
        "goal": "m : Type u_1\nn : Type u_2\nR : Type u_3\ninst\u271d\u00b2 : Fintype m\ninst\u271d\u00b9 : Fintype n\ninst\u271d : RCLike R\nA : Matrix m n R\nh : A.traceNorm = 0\nh\u2082 : \u2200 (i : n), \u22ef.eigenvalues i = 0\n\u22a2 (\u22ef : (A\u1d34 * A).PosSemidef).sqrt = 0",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/ForMathlib/MatrixNorm/TraceNorm.lean#L45"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-29T21:39:14+02:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "57d315436a35967c23470aed5011c01e6e635f61bd8d7bf28490c56d6945fb3a"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 47,
        "start_column": 6,
        "end_line": 47,
        "end_column": 11,
        "file": "QuantumInfo/ForMathlib/MatrixNorm/TraceNorm.lean"
      },
      "debug_info": {
        "goal": "m : Type u_1\nn : Type u_2\nR : Type u_3\ninst\u271d\u00b2 : Fintype m\ninst\u271d\u00b9 : Fintype n\ninst\u271d : RCLike R\nA : Matrix m n R\nh : A.traceNorm = 0\nh\u2082 : \u2200 (i : n), \u22ef.eigenvalues i = 0\nh\u2083 : (\u22ef : (A\u1d34 * A).PosSemidef).sqrt = 0\n\u22a2 A\u1d34 * A = 0",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/ForMathlib/MatrixNorm/TraceNorm.lean#L47"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-29T21:39:14+02:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "7051265d707757ad332a5e5bea44de1c0c66c25796840a053674cba7f988e916"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 49,
        "start_column": 6,
        "end_line": 49,
        "end_column": 11,
        "file": "QuantumInfo/ForMathlib/MatrixNorm/TraceNorm.lean"
      },
      "debug_info": {
        "goal": "m : Type u_1\nn : Type u_2\nR : Type u_3\ninst\u271d\u00b2 : Fintype m\ninst\u271d\u00b9 : Fintype n\ninst\u271d : RCLike R\nA : Matrix m n R\nh : A.traceNorm = 0\nh\u2082 : \u2200 (i : n), \u22ef.eigenvalues i = 0\nh\u2083 : (\u22ef : (A\u1d34 * A).PosSemidef).sqrt = 0\nh\u2084 : A\u1d34 * A = 0\n\u22a2 A = 0",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/ForMathlib/MatrixNorm/TraceNorm.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-29T21:39:14+02:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "651f1c3490e3d490cee5be873090209393ba7091d51589679f7653c84796e25e"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 82,
        "start_column": 2,
        "end_line": 82,
        "end_column": 7,
        "file": "QuantumInfo/ForMathlib/MatrixNorm/TraceNorm.lean"
      },
      "debug_info": {
        "goal": "n : Type u_2\nR : Type u_3\ninst\u271d\u00b9 : Fintype n\ninst\u271d : RCLike R\nA : Matrix n n R\n\u22a2 IsGreatest {x | \u2203 U, (\u2191U * A).trace = x} \u2191A.traceNorm",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/ForMathlib/MatrixNorm/TraceNorm.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-29T21:39:14+02:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "71f4cbdaff4887cc0005b82fa3e35d515aa057b1dfb646581c7aef8e45141906"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 26,
        "start_column": 2,
        "end_line": 26,
        "end_column": 7,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 : MState d\nS : Set (MState d)\nhS : S.Nonempty\n\u22a2 \u03b2_ 0 (\u03c1\u2016S) = 1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L26"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-04-12T03:25:12-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "da41f1eb9bd49bd51759a9e87d461f476f9bb68e6592f740d8f8d942b79b8b0a"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 53,
        "start_column": 2,
        "end_line": 53,
        "end_column": 7,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "M : Type u_2\ninst\u271d\u00b2 : AddCommMonoid M\ninst\u271d\u00b9 : Module \u211d M\ninst\u271d : TopologicalSpace M\nf : LinearMap.BilinForm \u211d M\nS T : Set M\nhS\u2081 : IsCompact S\nhT\u2081 : IsCompact T\nhS\u2082 : Convex \u211d S\nhT\u2082 : Convex \u211d T\n\u22a2 \u2a06 x \u2208 S, \u2a05 y \u2208 T, (f x) y = \u2a05 y \u2208 T, \u2a06 x \u2208 S, (f x) y",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L53"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "590f34aabf9027b075a0f443fd1fd378f1e61bc8e524c86fe2aad8f29880769b"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 74,
        "start_column": 4,
        "end_line": 74,
        "end_column": 9,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 : MState d\n\u03b5 : \u211d\nS : Set (MState d)\nhS\u2081 : IsCompact S\nhS\u2082 : Convex \u211d (MState.M '' S)\nhmm :\n  \u2200 (f : LinearMap.BilinForm \u211d (HermitianMat d \u2102)) (S T : Set (HermitianMat d \u2102)),\n    IsCompact S \u2192 IsCompact T \u2192 Convex \u211d S \u2192 Convex \u211d T \u2192 \u2a06 x \u2208 S, \u2a05 y \u2208 T, (f x) y = \u2a05 y \u2208 T, \u2a06 x \u2208 S, (f x) y\nf : LinearMap.BilinForm \u211d (HermitianMat d \u2102) :=\n  { toFun := fun \u03c1 => { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef, map_smul' := \u22ef }, map_add' := \u22ef, map_smul' := \u22ef }\nS' : Set (HermitianMat d \u2102) := MState.M '' S\nT' : Set (HermitianMat d \u2102) := {m | MState.exp_val (1 - m) \u03c1 \u2264 \u03b5 \u2227 0 \u2264 m \u2227 m \u2264 1}\n\u22a2 IsCompact (MState.M '' S)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L74"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "2bfd452a8f2f41ab8f078eb9c96a4d43666e6e5523119c3540796265cdf5e13e"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 76,
        "start_column": 4,
        "end_line": 76,
        "end_column": 9,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 : MState d\n\u03b5 : \u211d\nS : Set (MState d)\nhS\u2082 : Convex \u211d (MState.M '' S)\nhmm :\n  \u2200 (f : LinearMap.BilinForm \u211d (HermitianMat d \u2102)) (S T : Set (HermitianMat d \u2102)),\n    IsCompact S \u2192 IsCompact T \u2192 Convex \u211d S \u2192 Convex \u211d T \u2192 \u2a06 x \u2208 S, \u2a05 y \u2208 T, (f x) y = \u2a05 y \u2208 T, \u2a06 x \u2208 S, (f x) y\nf : LinearMap.BilinForm \u211d (HermitianMat d \u2102) :=\n  { toFun := fun \u03c1 => { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef, map_smul' := \u22ef }, map_add' := \u22ef, map_smul' := \u22ef }\nS' : Set (HermitianMat d \u2102) := MState.M '' S\nT' : Set (HermitianMat d \u2102) := {m | MState.exp_val (1 - m) \u03c1 \u2264 \u03b5 \u2227 0 \u2264 m \u2227 m \u2264 1}\nhS\u2081 : IsCompact S'\n\u22a2 IsCompact T'",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "4d518f2cff2cdd94ccfa2636fc9f895ed93208a72d9481d8c3f020ec02c07ec8"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 84,
        "start_column": 6,
        "end_line": 84,
        "end_column": 11,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "case intro.intro.intro.intro.refine_1\nd : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 : MState d\n\u03b5 : \u211d\nS : Set (MState d)\nhS\u2082 : Convex \u211d (MState.M '' S)\nhmm :\n  \u2200 (f : LinearMap.BilinForm \u211d (HermitianMat d \u2102)) (S T : Set (HermitianMat d \u2102)),\n    IsCompact S \u2192 IsCompact T \u2192 Convex \u211d S \u2192 Convex \u211d T \u2192 \u2a06 x \u2208 S, \u2a05 y \u2208 T, (f x) y = \u2a05 y \u2208 T, \u2a06 x \u2208 S, (f x) y\nf : LinearMap.BilinForm \u211d (HermitianMat d \u2102) :=\n  { toFun := fun \u03c1 => { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef, map_smul' := \u22ef }, map_add' := \u22ef, map_smul' := \u22ef }\nS' : Set (HermitianMat d \u2102) := MState.M '' S\nT' : Set (HermitianMat d \u2102) := {m | MState.exp_val (1 - m) \u03c1 \u2264 \u03b5 \u2227 0 \u2264 m \u2227 m \u2264 1}\nhS\u2081 : IsCompact S'\nhT\u2081 : IsCompact T'\nx : HermitianMat d \u2102\nhx\u2081 : MState.exp_val (1 - x) \u03c1 \u2264 \u03b5\nhx\u2082 : 0 \u2264 x\nhx\u2083 : x \u2264 1\ny : HermitianMat d \u2102\nhy\u2081 : MState.exp_val (1 - y) \u03c1 \u2264 \u03b5\nhy\u2082 : 0 \u2264 y\nhy\u2083 : y \u2264 1\na b : \u211d\nha : 0 \u2264 a\nhb : 0 \u2264 b\nhab : a + b = 1\n\u22a2 MState.exp_val (1 - (a \u2022 x + b \u2022 y)) \u03c1 \u2264 \u03b5",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L84"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "f6ad322b16d16282836e2a6e394629b13e9ec2d149aa99167e0bdfd10ca0a288"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 85,
        "start_column": 6,
        "end_line": 85,
        "end_column": 11,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "case intro.intro.intro.intro.refine_2\nd : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 : MState d\n\u03b5 : \u211d\nS : Set (MState d)\nhS\u2082 : Convex \u211d (MState.M '' S)\nhmm :\n  \u2200 (f : LinearMap.BilinForm \u211d (HermitianMat d \u2102)) (S T : Set (HermitianMat d \u2102)),\n    IsCompact S \u2192 IsCompact T \u2192 Convex \u211d S \u2192 Convex \u211d T \u2192 \u2a06 x \u2208 S, \u2a05 y \u2208 T, (f x) y = \u2a05 y \u2208 T, \u2a06 x \u2208 S, (f x) y\nf : LinearMap.BilinForm \u211d (HermitianMat d \u2102) :=\n  { toFun := fun \u03c1 => { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef, map_smul' := \u22ef }, map_add' := \u22ef, map_smul' := \u22ef }\nS' : Set (HermitianMat d \u2102) := MState.M '' S\nT' : Set (HermitianMat d \u2102) := {m | MState.exp_val (1 - m) \u03c1 \u2264 \u03b5 \u2227 0 \u2264 m \u2227 m \u2264 1}\nhS\u2081 : IsCompact S'\nhT\u2081 : IsCompact T'\nx : HermitianMat d \u2102\nhx\u2081 : MState.exp_val (1 - x) \u03c1 \u2264 \u03b5\nhx\u2082 : 0 \u2264 x\nhx\u2083 : x \u2264 1\ny : HermitianMat d \u2102\nhy\u2081 : MState.exp_val (1 - y) \u03c1 \u2264 \u03b5\nhy\u2082 : 0 \u2264 y\nhy\u2083 : y \u2264 1\na b : \u211d\nha : 0 \u2264 a\nhb : 0 \u2264 b\nhab : a + b = 1\n\u22a2 0 \u2264 a \u2022 x + b \u2022 y",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L85"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "2c30aeeb5ee9a0a9ac9367137f6e26d2b865c8ab24c583217ffeb4416a8ba338"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 86,
        "start_column": 6,
        "end_line": 86,
        "end_column": 11,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "case intro.intro.intro.intro.refine_3\nd : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 : MState d\n\u03b5 : \u211d\nS : Set (MState d)\nhS\u2082 : Convex \u211d (MState.M '' S)\nhmm :\n  \u2200 (f : LinearMap.BilinForm \u211d (HermitianMat d \u2102)) (S T : Set (HermitianMat d \u2102)),\n    IsCompact S \u2192 IsCompact T \u2192 Convex \u211d S \u2192 Convex \u211d T \u2192 \u2a06 x \u2208 S, \u2a05 y \u2208 T, (f x) y = \u2a05 y \u2208 T, \u2a06 x \u2208 S, (f x) y\nf : LinearMap.BilinForm \u211d (HermitianMat d \u2102) :=\n  { toFun := fun \u03c1 => { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef, map_smul' := \u22ef }, map_add' := \u22ef, map_smul' := \u22ef }\nS' : Set (HermitianMat d \u2102) := MState.M '' S\nT' : Set (HermitianMat d \u2102) := {m | MState.exp_val (1 - m) \u03c1 \u2264 \u03b5 \u2227 0 \u2264 m \u2227 m \u2264 1}\nhS\u2081 : IsCompact S'\nhT\u2081 : IsCompact T'\nx : HermitianMat d \u2102\nhx\u2081 : MState.exp_val (1 - x) \u03c1 \u2264 \u03b5\nhx\u2082 : 0 \u2264 x\nhx\u2083 : x \u2264 1\ny : HermitianMat d \u2102\nhy\u2081 : MState.exp_val (1 - y) \u03c1 \u2264 \u03b5\nhy\u2082 : 0 \u2264 y\nhy\u2083 : y \u2264 1\na b : \u211d\nha : 0 \u2264 a\nhb : 0 \u2264 b\nhab : a + b = 1\n\u22a2 a \u2022 x + b \u2022 y \u2264 1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L86"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "268b19340aea408b6fc0f1616a4694ca079aa03ec98edcc171b3255049fda314"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 93,
        "start_column": 4,
        "end_line": 93,
        "end_column": 9,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 : MState d\n\u03b5 : \u211d\nS : Set (MState d)\nhS\u2082 : Convex \u211d (MState.M '' S)\nf : LinearMap.BilinForm \u211d (HermitianMat d \u2102) :=\n  { toFun := fun \u03c1 => { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef, map_smul' := \u22ef }, map_add' := \u22ef, map_smul' := \u22ef }\nS' : Set (HermitianMat d \u2102) := MState.M '' S\nT' : Set (HermitianMat d \u2102) := {m | MState.exp_val (1 - m) \u03c1 \u2264 \u03b5 \u2227 0 \u2264 m \u2227 m \u2264 1}\nhS\u2081 : IsCompact S'\nhT\u2081 : IsCompact T'\nhT\u2082 : Convex \u211d T'\nhmm : \u2a06 x \u2208 S', \u2a05 y \u2208 T', (f x) y = \u2a05 y \u2208 T', \u2a06 x \u2208 S', (f x) y\n\u22a2 Nonempty \u2191S",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L93"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "fb4921c3f8360354470b1b70ae06c706dfbf5ce65251049b016d1114e57f07d7"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 130,
        "start_column": 2,
        "end_line": 130,
        "end_column": 7,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "case a.convert_3\nd : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 : MState d\n\u03b5 : \u211d\nS : Set (MState d)\nhS\u2082 : Convex \u211d (MState.M '' S)\nf : LinearMap.BilinForm \u211d (HermitianMat d \u2102) :=\n  { toFun := fun \u03c1 => { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef, map_smul' := \u22ef }, map_add' := \u22ef, map_smul' := \u22ef }\nS' : Set (HermitianMat d \u2102) := MState.M '' S\nT' : Set (HermitianMat d \u2102) := {m | MState.exp_val (1 - m) \u03c1 \u2264 \u03b5 \u2227 0 \u2264 m \u2227 m \u2264 1}\nhS\u2081 : IsCompact S'\nhT\u2081 : IsCompact T'\nhT\u2082 : Convex \u211d T'\nhmm : \u2a06 x \u2208 S', \u2a05 y \u2208 T', (f x) y = \u2a05 y \u2208 T', \u2a06 x \u2208 S', (f x) y\nhnS : Nonempty \u2191S\nh_inst :\n  let x := \u22ef;\n  CompleteSemilatticeSup.toSupSet = ConditionallyCompleteLattice.toSupSet\n\u22a2 \u2a06 i, \u2191(\u2a05 T, \u27e8MState.exp_val \u2191T \u2191i, \u22ef\u27e9) = \u2191(\u2a05 T, \u2a06 \u03c3 \u2208 S, \u27e8MState.exp_val (\u2191T) \u03c3, \u22ef\u27e9)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L130"
      },
      "metadata": {
        "blame_email_hash": "1447a142f99f",
        "blame_date": "2025-01-29T10:49:09-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "0f109e692df74e42b566e432d6a60d6270e9c74aa179159757d6221697c647e3"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 64,
        "start_column": 20,
        "end_line": 64,
        "end_column": 25,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1\u271d : MState d\n\u03b5 : \u211d\nS : Set (MState d)\nhS\u2081 : IsCompact S\nhS\u2082 : Convex \u211d (MState.M '' S)\nhmm :\n  \u2200 (f : LinearMap.BilinForm \u211d (HermitianMat d \u2102)) (S T : Set (HermitianMat d \u2102)),\n    IsCompact S \u2192 IsCompact T \u2192 Convex \u211d S \u2192 Convex \u211d T \u2192 \u2a06 x \u2208 S, \u2a05 y \u2208 T, (f x) y = \u2a05 y \u2208 T, \u2a06 x \u2208 S, (f x) y\n\u03c1 : HermitianMat d \u2102\n\u22a2 \u2200 (x y : HermitianMat d \u2102), (fun \u03c3 => \u03c1.inner \u03c3) (x + y) = (fun \u03c3 => \u03c1.inner \u03c3) x + (fun \u03c3 => \u03c1.inner \u03c3) y",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L64"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "3214e4904275036e43d69d6cf92bbb8c6265aa6d23fa983ffb44aec6fbf07df0"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 65,
        "start_column": 21,
        "end_line": 65,
        "end_column": 26,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1\u271d : MState d\n\u03b5 : \u211d\nS : Set (MState d)\nhS\u2081 : IsCompact S\nhS\u2082 : Convex \u211d (MState.M '' S)\nhmm :\n  \u2200 (f : LinearMap.BilinForm \u211d (HermitianMat d \u2102)) (S T : Set (HermitianMat d \u2102)),\n    IsCompact S \u2192 IsCompact T \u2192 Convex \u211d S \u2192 Convex \u211d T \u2192 \u2a06 x \u2208 S, \u2a05 y \u2208 T, (f x) y = \u2a05 y \u2208 T, \u2a06 x \u2208 S, (f x) y\n\u03c1 : HermitianMat d \u2102\n\u22a2 \u2200 (m : \u211d) (x : HermitianMat d \u2102),\n    { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef }.toFun (m \u2022 x) =\n      (RingHom.id \u211d) m \u2022 { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef }.toFun x",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L65"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "b73a1d883a59bcd0003232912fd66d5499cb27c16232ebab99650e0fbd3db708"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 67,
        "start_column": 18,
        "end_line": 67,
        "end_column": 23,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 : MState d\n\u03b5 : \u211d\nS : Set (MState d)\nhS\u2081 : IsCompact S\nhS\u2082 : Convex \u211d (MState.M '' S)\nhmm :\n  \u2200 (f : LinearMap.BilinForm \u211d (HermitianMat d \u2102)) (S T : Set (HermitianMat d \u2102)),\n    IsCompact S \u2192 IsCompact T \u2192 Convex \u211d S \u2192 Convex \u211d T \u2192 \u2a06 x \u2208 S, \u2a05 y \u2208 T, (f x) y = \u2a05 y \u2208 T, \u2a06 x \u2208 S, (f x) y\n\u22a2 \u2200 (x y : HermitianMat d \u2102),\n    (fun \u03c1 => { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef, map_smul' := \u22ef }) (x + y) =\n      (fun \u03c1 => { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef, map_smul' := \u22ef }) x +\n        (fun \u03c1 => { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef, map_smul' := \u22ef }) y",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L67"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "6600ce9d95950c0849c0b8f6092ac94d350c71af3ce4e338161b97c262c3ebb4"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 68,
        "start_column": 19,
        "end_line": 68,
        "end_column": 24,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 : MState d\n\u03b5 : \u211d\nS : Set (MState d)\nhS\u2081 : IsCompact S\nhS\u2082 : Convex \u211d (MState.M '' S)\nhmm :\n  \u2200 (f : LinearMap.BilinForm \u211d (HermitianMat d \u2102)) (S T : Set (HermitianMat d \u2102)),\n    IsCompact S \u2192 IsCompact T \u2192 Convex \u211d S \u2192 Convex \u211d T \u2192 \u2a06 x \u2208 S, \u2a05 y \u2208 T, (f x) y = \u2a05 y \u2208 T, \u2a06 x \u2208 S, (f x) y\n\u22a2 \u2200 (m : \u211d) (x : HermitianMat d \u2102),\n    { toFun := fun \u03c1 => { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef, map_smul' := \u22ef }, map_add' := \u22ef }.toFun (m \u2022 x) =\n      (RingHom.id \u211d) m \u2022\n        { toFun := fun \u03c1 => { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef, map_smul' := \u22ef }, map_add' := \u22ef }.toFun x",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L68"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "3087df576d61f7625f970c5ca96b42a124f2706c2768e41fc6e2bf1215964721"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 156,
        "start_column": 4,
        "end_line": 156,
        "end_column": 9,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "case pos\nd : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 \u03c3 : MState d\n\u03b1 : \u211d\nh\u03b1 : 1 < \u03b1\npf2 : 0 \u2264 \u03b1\npf3 : 0 \u2264 \u03b1 - 1\nh_supp : LinearMap.ker (Matrix.toLin' \u2191\u03c3.toSubtype) \u2264 LinearMap.ker (Matrix.toLin' \u2191\u03c1.toSubtype)\npf1 : 0 \u2264 1 - 0 \u2227 1 - 0 \u2264 1\nm_opt : HermitianMat d \u2102 := sorry\n\u22a2 \u2014log (\u2a05 T, \u27e8MState.exp_val (\u2191T) \u03c3, \u22ef\u27e9) \u2264 D\u0303_ \u03b1(\u03c1\u2016\u03c3) + \u2014log 1 * \u2191\u27e8\u03b1, pf2\u27e9 / \u2191\u27e8\u03b1 - 1, pf3\u27e9",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L156"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-08T09:49:01-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "f75d9ab94afaef4b7b236ec41351336dc3a7099c7c148d9de1ea3a97eaf21dad"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 195,
        "start_column": 4,
        "end_line": 195,
        "end_column": 9,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 \u03c3 : MState d\n\u03b5 \u03b1 : \u211d\nh\u03b1 : 1 < \u03b1\npf1 : 0 \u2264 1 - \u03b5 \u2227 1 - \u03b5 \u2264 1\npf2 : 0 \u2264 \u03b1\npf3 : 0 \u2264 \u03b1 - 1\nh_supp : LinearMap.ker (Matrix.toLin' \u2191\u03c3.toSubtype) \u2264 LinearMap.ker (Matrix.toLin' \u2191\u03c1.toSubtype)\nh\u03b5\u2081 : \u03b5 < 1\nh\u03b5\u2080 : 0 < \u03b5\np : Prob := 1 - \u27e8\u03b5, \u22ef\u27e9\nq : Prob := \u03b2_ \u03b5 (\u03c1\u2016{\u03c3})\np2 : MState (Fin 2) := MState.ofClassical (Distribution.coin p)\nq2 : MState (Fin 2) := MState.ofClassical (Distribution.coin q)\nhp : 0 < p\n\u22a2 0 < \u2a05 T, \u27e8MState.exp_val (\u2191T) \u03c3, \u22ef\u27e9",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L195"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-08T09:49:01-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "8490830bff527f218078dd0eab7414cd54a20d670aa6015c95534b67a0cffe48"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 200,
        "start_column": 4,
        "end_line": 200,
        "end_column": 9,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 \u03c3 : MState d\n\u03b5 \u03b1 : \u211d\nh\u03b1 : 1 < \u03b1\npf1 : 0 \u2264 1 - \u03b5 \u2227 1 - \u03b5 \u2264 1\npf2 : 0 \u2264 \u03b1\npf3 : 0 \u2264 \u03b1 - 1\nh_supp : LinearMap.ker (Matrix.toLin' \u2191\u03c3.toSubtype) \u2264 LinearMap.ker (Matrix.toLin' \u2191\u03c1.toSubtype)\nh\u03b5\u2081 : \u03b5 < 1\nh\u03b5\u2080 : 0 < \u03b5\np : Prob := 1 - \u27e8\u03b5, \u22ef\u27e9\nq : Prob := \u03b2_ \u03b5 (\u03c1\u2016{\u03c3})\np2 : MState (Fin 2) := MState.ofClassical (Distribution.coin p)\nq2 : MState (Fin 2) := MState.ofClassical (Distribution.coin q)\nhp : 0 < p\nhq : 0 < q\nthis : \u2014log q \u2264 D\u0303_ \u03b1(p2\u2016q2) + \u2014log \u27e81 - \u03b5, pf1\u27e9 * \u2191\u27e8\u03b1, pf2\u27e9 / \u2191\u27e8\u03b1 - 1, pf3\u27e9\n\u22a2 D\u0303_ \u03b1(p2\u2016q2) \u2264 D\u0303_ \u03b1(\u03c1\u2016\u03c3)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L200"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-08T09:49:01-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "a844d4484a94d611e63d029d5352e6201fbece55f5327c8fdccd9def8149734c"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 208,
        "start_column": 4,
        "end_line": 208,
        "end_column": 9,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 \u03c3 : MState d\n\u03b5 \u03b1 : \u211d\nh\u03b1 : 1 < \u03b1\npf1 : 0 \u2264 1 - \u03b5 \u2227 1 - \u03b5 \u2264 1\npf2 : 0 \u2264 \u03b1\npf3 : 0 \u2264 \u03b1 - 1\nh_supp : LinearMap.ker (Matrix.toLin' \u2191\u03c3.toSubtype) \u2264 LinearMap.ker (Matrix.toLin' \u2191\u03c1.toSubtype)\nh\u03b5\u2081 : \u03b5 < 1\nh\u03b5\u2080 : 0 < \u03b5\np : Prob := 1 - \u27e8\u03b5, \u22ef\u27e9\nq : Prob := \u03b2_ \u03b5 (\u03c1\u2016{\u03c3})\np2 : MState (Fin 2) := MState.ofClassical (Distribution.coin p)\nq2 : MState (Fin 2) := MState.ofClassical (Distribution.coin q)\nhp : 0 < p\nhq : 0 < q\n\u22a2 LinearMap.ker (Matrix.toLin' \u2191q2.toSubtype) = \u22a5",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L208"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-08T09:49:01-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "6f51047bef44e3097e101389c397223814f79430e94efc93b56317f1a8dc04a4"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 240,
        "start_column": 6,
        "end_line": 240,
        "end_column": 11,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 \u03c3 : MState d\n\u03b5 \u03b1 : \u211d\nh\u03b1 : 1 < \u03b1\nh_supp : LinearMap.ker (Matrix.toLin' \u2191\u03c3.toSubtype) \u2264 LinearMap.ker (Matrix.toLin' \u2191\u03c1.toSubtype)\nh\u03b5\u2081 : \u03b5 < 1\nh\u03b5\u2080 : 0 < \u03b5\np : Prob := 1 - \u27e8\u03b5, \u22ef\u27e9\nq : Prob := \u03b2_ \u03b5 (\u03c1\u2016{\u03c3})\np2 : MState (Fin 2) := MState.ofClassical (Distribution.coin p)\nq2 : MState (Fin 2) := MState.ofClassical (Distribution.coin q)\nhp : 0 < p\nhq : 0 < q\n\u22a2 ((\u2191p2).conj \u2191(\u2191q2 ^ ((1 - \u03b1) / (2 * \u03b1))) ^ \u03b1).trace = \u2191p ^ \u03b1 * \u2191q ^ (1 - \u03b1) + (1 - \u2191p) ^ \u03b1 * (1 - \u2191q) ^ (1 - \u03b1)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L240"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-08T09:49:01-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "c38e022377f718bac1010cf97f34b7577ce0b1c1e9d70ad50fc4c42c4b2789a1"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 273,
        "start_column": 2,
        "end_line": 273,
        "end_column": 7,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "case h\n\u03b9 : Type u_1\ninst\u271d : FreeStateTheory \u03b9\ni : \u03b9\n\u03c1 \u03c3 : MState (H i)\nh\u03c3\u2081 : \u03c3.m.PosDef\nh\u03c3\u2082 : IsFree \u03c3\n\u22a2 \u00ac\ud835\udc03(\u03c1\u2016\u03c3) = \u22a4",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L273"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-08T09:49:01-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "c00d41f6e7cb7537727fb2613a4d90273ccc7bcb71e73dc9cc6a96f194c91ec1"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 331,
        "start_column": 2,
        "end_line": 331,
        "end_column": 7,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "case h\n\u03b9 : Type u_1\ninst\u271d : FreeStateTheory \u03b9\ni : \u03b9\n\u03c1 : MState (H i)\nthis\u271d :\n  \u2200 {u : \u2115 \u2192 \u211d} (h : Subadditive u),\n    BddBelow (Set.range fun n => u n / \u2191n) \u2192 Filter.Tendsto (fun n => u n / \u2191n) Filter.atTop (\ud835\udcdd h.lim)\nu : \u2115+ \u2192 ENNReal := fun n => (\u2191\u2191n)\u207b\u00b9 * \u2a05 \u03c3 \u2208 IsFree, \ud835\udc03(\u03c1\u2297^[n]\u2016\u03c3)\nu' : \u2115 \u2192 \u211d := fun n => if hn : n = 0 then 0 else (u \u27e8n, \u22ef\u27e9).toReal\nhu' : Subadditive u'\nhu'_lim_nonneg : 0 \u2264 hu'.lim\nhu'_bddBelow : BddBelow (Set.range fun n => u' n / \u2191n)\nthis : Filter.Tendsto (fun n => u' n / \u2191n) Filter.atTop (\ud835\udcdd hu'.lim)\n\u22a2 Filter.Tendsto (fun n => (\u2191\u2191n)\u207b\u00b9 * \u2a05 \u03c3 \u2208 IsFree, \ud835\udc03(\u03c1\u2297^[n]\u2016\u03c3)) Filter.atTop (\ud835\udcdd \u2191\u27e8hu'.lim, hu'_lim_nonneg\u27e9)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L331"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-29T11:12:26-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "e5e138bcabedfbf68b59513c55649d158a7dcfa8dd19d913542f6be6184fcbd7"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 363,
        "start_column": 8,
        "end_line": 363,
        "end_column": 13,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ninst\u271d : FreeStateTheory \u03b9\ni : \u03b9\nm : \u2115+\n\u03c3f : MState (H i)\n\u03c3\u2098 : MState (H (i\u2297^[m]))\nn : \u2115+\nl : \u2115 := n.natPred / \u2191m\nq : \u2115+ := (n.natPred % \u2191m).succPNat\n\u03c3r : MState (H (i\u2297^[q])) := \u03c3f\u2297^[q]\nh : \u00acn \u2264 m\n\u03c3l : MState (H (i\u2297^[m]\u2297^[\u27e8l, \u22ef\u27e9])) := \u03c3\u2098\u2297^[\u27e8l, \u22ef\u27e9]\n\u22a2 i\u2297^[n] = prod (i\u2297^[m]\u2297^[\u27e8l, \u22ef\u27e9]) (i\u2297^[q])",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L363"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T13:23:49-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "09a49b6690a8eb989c4bc888669e2b681dc7eb1bc743965e6463cf9e43f0422f"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 368,
        "start_column": 2,
        "end_line": 368,
        "end_column": 7,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ninst\u271d : FreeStateTheory \u03b9\ni : \u03b9\n\u03c3\u2081 : MState (H i)\n\u03c3\u2098 : (m : \u2115+) \u2192 MState (H (i\u2297^[m]))\nh\u03c3\u2081_free : IsFree \u03c3\u2081\nh\u03c3\u20981 : \u2200 (m : \u2115+), \u03c3\u2098 m \u2208 IsFree\nm n : \u2115+\n\u22a2 Lemma6_\u03c3n m \u03c3\u2081 (\u03c3\u2098 m) n \u2208 IsFree",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L368"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-09T12:46:54-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "482cf7a5db53b8b2defcb63658504ae9884c4f3429e22198d4b7646b1ce87c97"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 379,
        "start_column": 2,
        "end_line": 465,
        "end_column": 7,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ninst\u271d : FreeStateTheory \u03b9\ni : \u03b9\nm : \u2115+\n\u03c1 \u03c3f : MState (H i)\n\u03c3\u2098 : MState (H (i\u2297^[m]))\nh\u03c3f : \u03c3f.m.PosDef\n\u03b5 : \u211d\nh\u03b5 : 0 < \u03b5\nh\u03b5' : \u03b5 < 1\n\u03c3n : \u211d\u22650\n\u22a2 (\u2191\u2191m)\u207b\u00b9 * \ud835\udc03(\u03c1\u2297^[m]\u2016\u03c3\u2098) = \u2191\u03c3n \u2192\n    \u2203 b, Filter.limsup (fun n => (\u2191\u2191n)\u207b\u00b9 * \u2014log \u03b2_ \u03b5 (\u03c1\u2297^[n]\u2016{Lemma6_\u03c3n m \u03c3f \u03c3\u2098 n})) Filter.atTop = \u2191b \u2227 b \u2264 \u03c3n",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L379"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-08T16:55:27-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "012d5280a7601819167bdd47d4f1d5d5f6fed3ab3ed811b6ed132acf268113ee"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 476,
        "start_column": 2,
        "end_line": 476,
        "end_column": 7,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ninst\u271d : FreeStateTheory \u03b9\ni : \u03b9\n\u03c1 : MState (H i)\n\u03b5 : \u211d\nh\u03b5 : 0 < \u03b5 \u2227 \u03b5 < 1\n\u22a2 \u2203 d,\n    Filter.Tendsto (fun n => \u2014log \u03b2_ \u03b5 (\u03c1\u2297^[n]\u2016IsFree) / \u2191\u2191n) Filter.atTop (\ud835\udcdd \u2191d) \u2227\n      Filter.Tendsto (fun n => (\u2191\u2191n)\u207b\u00b9 * \u2a05 \u03c3 \u2208 IsFree, \ud835\udc03(\u03c1\u2297^[n]\u2016\u03c3)) Filter.atTop (\ud835\udcdd \u2191d)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L476"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-01-28T19:42:08-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "f061b31de9ef18cc16e5c924c26fc4914e198b9808a0b5210f346f9f92c3769e"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 578,
        "start_column": 8,
        "end_line": 578,
        "end_column": 13,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "\u03b53 : \u211d\nh\u03b53 : 0 \u2264 \u03b53 \u2227 \u03b53 \u2264 1\n\u03b54 : \u211d\nh\u03b54 : 0 < \u03b54\nd : \u2115 \u2192 Type u_7\ninst\u271d\u00b9 : (n : \u2115) \u2192 Fintype (d n)\ninst\u271d : (n : \u2115) \u2192 DecidableEq (d n)\n\u03c1 \u03c3 : (n : \u2115) \u2192 MState (d n)\nRinf : \u211d\nhRinf : ENNReal.ofReal Rinf \u2265 Filter.liminf (fun n => \u2014log \u03b2_ \u03b53 (\u03c1 n\u2016{\u03c3 n}) / \u2191n) Filter.atTop\nRsup : \u211d\nhRsup : ENNReal.ofReal Rsup \u2265 Filter.limsup (fun n => \u2014log \u03b2_ \u03b53 (\u03c1 n\u2016{\u03c3 n}) / \u2191n) Filter.atTop\nn\u2080 : \u2115\nh : \u2200 b \u2265 n\u2080, 1 - \u03b53 < {Real.exp (\u2191b * (Rinf + \u03b54)) \u2022 \u2191(\u03c3 b)\u2264\u209a\u2191(\u03c1 b)}.inner \u2191(\u03c1 b)\nT : (n : \u2115) \u2192 HermitianMat (d n) \u2102 := fun n => {Real.exp (\u2191n * (Rinf + \u03b54)) \u2022 \u2191(\u03c3 n)\u2264\u209a\u2191(\u03c1 n)}\nn : \u2115\nhn : n \u2265 n\u2080\n\u22a2 MState.exp_val (1 - T n) (\u03c1 n) \u2264 \u03b53",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L578"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-14T17:26:35-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "acd5a34680d6f6e370fcac5e424cfe2a0f11f813070f6d5ff61797f1ae9f7033"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 580,
        "start_column": 8,
        "end_line": 580,
        "end_column": 13,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "\u03b53 : \u211d\nh\u03b53 : 0 \u2264 \u03b53 \u2227 \u03b53 \u2264 1\n\u03b54 : \u211d\nh\u03b54 : 0 < \u03b54\nd : \u2115 \u2192 Type u_7\ninst\u271d\u00b9 : (n : \u2115) \u2192 Fintype (d n)\ninst\u271d : (n : \u2115) \u2192 DecidableEq (d n)\n\u03c1 \u03c3 : (n : \u2115) \u2192 MState (d n)\nRinf : \u211d\nhRinf : ENNReal.ofReal Rinf \u2265 Filter.liminf (fun n => \u2014log \u03b2_ \u03b53 (\u03c1 n\u2016{\u03c3 n}) / \u2191n) Filter.atTop\nRsup : \u211d\nhRsup : ENNReal.ofReal Rsup \u2265 Filter.limsup (fun n => \u2014log \u03b2_ \u03b53 (\u03c1 n\u2016{\u03c3 n}) / \u2191n) Filter.atTop\nn\u2080 : \u2115\nh : \u2200 b \u2265 n\u2080, 1 - \u03b53 < {Real.exp (\u2191b * (Rinf + \u03b54)) \u2022 \u2191(\u03c3 b)\u2264\u209a\u2191(\u03c1 b)}.inner \u2191(\u03c1 b)\nT : (n : \u2115) \u2192 HermitianMat (d n) \u2102 := fun n => {Real.exp (\u2191n * (Rinf + \u03b54)) \u2022 \u2191(\u03c3 n)\u2264\u209a\u2191(\u03c1 n)}\nhT : \u2200 n \u2265 n\u2080, MState.exp_val (1 - T n) (\u03c1 n) \u2264 \u03b53\nn : \u2115\nhn : n \u2265 n\u2080\n\u22a2 \u2191\u03b2_ \u03b53 (\u03c1 n\u2016{\u03c3 n}) \u2264 Real.exp (-\u2191n * (Rsup + \u03b54))",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L580"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-14T17:26:35-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "8b3962674c4d42b75975ff627227bbfb1cc1ca553c26218627f5ea065dc68aed"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 582,
        "start_column": 8,
        "end_line": 582,
        "end_column": 13,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "\u03b53 : \u211d\nh\u03b53 : 0 \u2264 \u03b53 \u2227 \u03b53 \u2264 1\n\u03b54 : \u211d\nh\u03b54 : 0 < \u03b54\nd : \u2115 \u2192 Type u_7\ninst\u271d\u00b9 : (n : \u2115) \u2192 Fintype (d n)\ninst\u271d : (n : \u2115) \u2192 DecidableEq (d n)\n\u03c1 \u03c3 : (n : \u2115) \u2192 MState (d n)\nRinf : \u211d\nhRinf : ENNReal.ofReal Rinf \u2265 Filter.liminf (fun n => \u2014log \u03b2_ \u03b53 (\u03c1 n\u2016{\u03c3 n}) / \u2191n) Filter.atTop\nRsup : \u211d\nhRsup : ENNReal.ofReal Rsup \u2265 Filter.limsup (fun n => \u2014log \u03b2_ \u03b53 (\u03c1 n\u2016{\u03c3 n}) / \u2191n) Filter.atTop\nn\u2080 : \u2115\nh : \u2200 b \u2265 n\u2080, 1 - \u03b53 < {Real.exp (\u2191b * (Rinf + \u03b54)) \u2022 \u2191(\u03c3 b)\u2264\u209a\u2191(\u03c1 b)}.inner \u2191(\u03c1 b)\nT : (n : \u2115) \u2192 HermitianMat (d n) \u2102 := fun n => {Real.exp (\u2191n * (Rinf + \u03b54)) \u2022 \u2191(\u03c3 n)\u2264\u209a\u2191(\u03c1 n)}\nhT : \u2200 n \u2265 n\u2080, MState.exp_val (1 - T n) (\u03c1 n) \u2264 \u03b53\nh\u03b2 : \u2200 n \u2265 n\u2080, \u2191\u03b2_ \u03b53 (\u03c1 n\u2016{\u03c3 n}) \u2264 Real.exp (-\u2191n * (Rsup + \u03b54))\nn : \u2115\nhn : n \u2265 n\u2080\n\u22a2 ENNReal.ofReal (Rinf + \u03b54) \u2264 \u2014log \u03b2_ \u03b53 (\u03c1 n\u2016{\u03c3 n})",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L582"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-14T17:26:35-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "c637145eba1547d5093a7bef69c9ab746452296a2f97be14ddec49cdccac9e2b"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 583,
        "start_column": 6,
        "end_line": 583,
        "end_column": 11,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "case left.refine_2.intro\n\u03b53 : \u211d\nh\u03b53 : 0 \u2264 \u03b53 \u2227 \u03b53 \u2264 1\n\u03b54 : \u211d\nh\u03b54 : 0 < \u03b54\nd : \u2115 \u2192 Type u_7\ninst\u271d\u00b9 : (n : \u2115) \u2192 Fintype (d n)\ninst\u271d : (n : \u2115) \u2192 DecidableEq (d n)\n\u03c1 \u03c3 : (n : \u2115) \u2192 MState (d n)\nRinf : \u211d\nhRinf : ENNReal.ofReal Rinf \u2265 Filter.liminf (fun n => \u2014log \u03b2_ \u03b53 (\u03c1 n\u2016{\u03c3 n}) / \u2191n) Filter.atTop\nRsup : \u211d\nhRsup : ENNReal.ofReal Rsup \u2265 Filter.limsup (fun n => \u2014log \u03b2_ \u03b53 (\u03c1 n\u2016{\u03c3 n}) / \u2191n) Filter.atTop\nn\u2080 : \u2115\nh : \u2200 b \u2265 n\u2080, 1 - \u03b53 < {Real.exp (\u2191b * (Rinf + \u03b54)) \u2022 \u2191(\u03c3 b)\u2264\u209a\u2191(\u03c1 b)}.inner \u2191(\u03c1 b)\nT : (n : \u2115) \u2192 HermitianMat (d n) \u2102 := fun n => {Real.exp (\u2191n * (Rinf + \u03b54)) \u2022 \u2191(\u03c3 n)\u2264\u209a\u2191(\u03c1 n)}\nhT : \u2200 n \u2265 n\u2080, MState.exp_val (1 - T n) (\u03c1 n) \u2264 \u03b53\nh\u03b2 : \u2200 n \u2265 n\u2080, \u2191\u03b2_ \u03b53 (\u03c1 n\u2016{\u03c3 n}) \u2264 Real.exp (-\u2191n * (Rsup + \u03b54))\nh' : \u2200 n \u2265 n\u2080, ENNReal.ofReal (Rinf + \u03b54) \u2264 \u2014log \u03b2_ \u03b53 (\u03c1 n\u2016{\u03c3 n})\n\u22a2 False",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L583"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-04-12T03:25:12-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "8e37b00d74c22b45390d25cdb6cb2b26acc36a5398bd21097f58185bec541297"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 584,
        "start_column": 4,
        "end_line": 584,
        "end_column": 9,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "case left.refine_1\n\u03b53 : \u211d\nh\u03b53 : 0 \u2264 \u03b53 \u2227 \u03b53 \u2264 1\n\u03b54 : \u211d\nh\u03b54 : 0 < \u03b54\nd : \u2115 \u2192 Type u_7\ninst\u271d\u00b9 : (n : \u2115) \u2192 Fintype (d n)\ninst\u271d : (n : \u2115) \u2192 DecidableEq (d n)\n\u03c1 \u03c3 : (n : \u2115) \u2192 MState (d n)\nRinf : \u211d\nhRinf : ENNReal.ofReal Rinf \u2265 Filter.liminf (fun n => \u2014log \u03b2_ \u03b53 (\u03c1 n\u2016{\u03c3 n}) / \u2191n) Filter.atTop\nRsup : \u211d\nhRsup : ENNReal.ofReal Rsup \u2265 Filter.limsup (fun n => \u2014log \u03b2_ \u03b53 (\u03c1 n\u2016{\u03c3 n}) / \u2191n) Filter.atTop\nh : 1 - \u03b53 < Filter.liminf (fun n => {Real.exp (\u2191n * (Rinf + \u03b54)) \u2022 \u2191(\u03c3 n)\u2264\u209a\u2191(\u03c1 n)}.inner \u2191(\u03c1 n)) Filter.atTop\n\u22a2 Filter.IsBoundedUnder (fun x1 x2 => x1 \u2265 x2) Filter.atTop fun n =>\n    {Real.exp (\u2191n * (Rinf + \u03b54)) \u2022 \u2191(\u03c3 n)\u2264\u209a\u2191(\u03c1 n)}.inner \u2191(\u03c1 n)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L584"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-04-12T03:25:12-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "76ade6e534a3507d56a1c0582904d26dd4b90bc7431bbd261d4f12f75faaabe6"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 586,
        "start_column": 4,
        "end_line": 586,
        "end_column": 9,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "case right\n\u03b53 : \u211d\nh\u03b53 : 0 \u2264 \u03b53 \u2227 \u03b53 \u2264 1\n\u03b54 : \u211d\nh\u03b54 : 0 < \u03b54\nd : \u2115 \u2192 Type u_7\ninst\u271d\u00b9 : (n : \u2115) \u2192 Fintype (d n)\ninst\u271d : (n : \u2115) \u2192 DecidableEq (d n)\n\u03c1 \u03c3 : (n : \u2115) \u2192 MState (d n)\nRinf : \u211d\nhRinf : ENNReal.ofReal Rinf \u2265 Filter.liminf (fun n => \u2014log \u03b2_ \u03b53 (\u03c1 n\u2016{\u03c3 n}) / \u2191n) Filter.atTop\nRsup : \u211d\nhRsup : ENNReal.ofReal Rsup \u2265 Filter.limsup (fun n => \u2014log \u03b2_ \u03b53 (\u03c1 n\u2016{\u03c3 n}) / \u2191n) Filter.atTop\n\u22a2 Filter.limsup (fun n => {Real.exp (\u2191n * (Rsup + \u03b54)) \u2022 \u2191(\u03c3 n)\u2264\u209a\u2191(\u03c1 n)}.inner \u2191(\u03c1 n)) Filter.atTop \u2264 1 - \u03b53",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L586"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-04-12T03:25:12-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "aa6e2a1d6825c371cb4be0c7a829f935f72b8216576abb82e22c07a2e55682ec"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 605,
        "start_column": 2,
        "end_line": 605,
        "end_column": 7,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ninst\u271d : FreeStateTheory \u03b9\ni : \u03b9\n\u03c1 : MState (H i)\n\u03b5 : \u211d\nh\u03b5 : 0 < \u03b5 \u2227 \u03b5 < 1\n\u03c3 : (n : \u2115+) \u2192 \u2191IsFree\n\u22a2 SteinsLemma.R2 \u03c1 \u03c3 \u2265 SteinsLemma.R1 \u03c1 \u03b5 \u2192\n    \u2200 (\u03b5' : \u211d) (h\u03b5' : 0 < \u03b5' \u2227 \u03b5' < \u03b5),\n      \u2203 \u03c3', SteinsLemma.R2 \u03c1 \u03c3' - SteinsLemma.R1 \u03c1 \u03b5 \u2264 \u2191\u27e81 - \u03b5', \u22ef\u27e9 * (SteinsLemma.R2 \u03c1 \u03c3 - SteinsLemma.R1 \u03c1 \u03b5)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L605"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-01-29T16:09:10-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "b94d9f6c4db981e4f38175bc27d87855aaa1940fa6147ed99dc1064900076740"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 709,
        "start_column": 8,
        "end_line": 709,
        "end_column": 13,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ninst\u271d : FreeStateTheory \u03b9\ni : \u03b9\n\u03c1 : MState (H i)\n\u03b5 : \u211d\nh\u03b5 : 0 < \u03b5 \u2227 \u03b5 < 1\npf1 : \u2200 (n : \u2115), \u00acn = 0 \u2192 0 < n\npf2 : Subadditive fun n => if h : n = 0 then 0 else (\u2191n)\u207b\u00b9 * \u2191(RelativeEntResource (\u03c1\u2297^[\u27e8n, \u22ef\u27e9]))\npf3 : 0 \u2264 pf2.lim\n\u03c3\u2098 : (m : \u2115+) \u2192 MState (H (i\u2297^[m]))\nh\u03c3\u20981 : \u2200 (m : \u2115+), \u03c3\u2098 m \u2208 IsFree\nh\u03c3\u20982 : \u2200 (m : \u2115+), IsMinOn (fun \u03c3 => \ud835\udc03(\u03c1\u2297^[m]\u2016\u03c3)) IsFree (\u03c3\u2098 m)\n\u03c3\u2081 : MState (H i)\nh\u03c3\u2081_pos : \u03c3\u2081.m.PosDef\nh\u03c3\u2081_free : IsFree \u03c3\u2081\nh : \u2200 (m : \u2115+), Filter.limsup (fun n => (\u2191\u2191n)\u207b\u00b9 * \u2014log \u03b2_ \u03b5 (\u03c1\u2297^[n]\u2016IsFree)) Filter.atTop \u2264 (\u2191\u2191m)\u207b\u00b9 * \u2a05 x, \ud835\udc03(\u03c1\u2297^[m]\u2016\u2191x)\nv_lem5 : \u211d\u22650\nhv_lem5 : Filter.Tendsto (fun n => (\u2191\u2191n)\u207b\u00b9 * \u2a05 \u03c3 \u2208 IsFree, \ud835\udc03(\u03c1\u2297^[n]\u2016\u03c3)) Filter.atTop (\ud835\udcdd \u2191v_lem5)\n\u22a2 \u2191\u27e8\u22ef.lim, \u22ef\u27e9 = \u2191v_lem5",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L709"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-09T12:46:54-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "86e9df22d0cbf67f633a2466da943ecdc25b35c2f6c741aed43cc2d14892dc08"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 737,
        "start_column": 6,
        "end_line": 737,
        "end_column": 11,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ninst\u271d : FreeStateTheory \u03b9\ni : \u03b9\n\u03c1 : MState (H i)\n\u03b5 : \u211d\nh\u03b5 : 0 < \u03b5 \u2227 \u03b5 < 1\npf1 : \u2200 (n : \u2115), \u00acn = 0 \u2192 0 < n\npf2 : Subadditive fun n => if h : n = 0 then 0 else (\u2191n)\u207b\u00b9 * \u2191(RelativeEntResource (\u03c1\u2297^[\u27e8n, \u22ef\u27e9]))\npf3 : 0 \u2264 pf2.lim\nR\u2081\u03b5 : ENNReal := Filter.liminf (fun n => \u2014log (\u2a06 \u03c3 \u2208 IsFree, \u03b2_ \u03b5 (\u03c1\u2297^[n]\u2016{\u03c3})) / \u2191\u2191n) Filter.atTop\n\u03b5' : \u211d := \u03b5 / 2\nh\u03b5' : 0 < \u03b5' \u2227 \u03b5' < \u03b5\nlem7 :\n  \u2200 (\u03c3 : (n : \u2115+) \u2192 \u2191IsFree),\n    SteinsLemma.R2 \u03c1 \u03c3 \u2265 SteinsLemma.R1 \u03c1 \u03b5 \u2192\n      \u2203 \u03c3', SteinsLemma.R2 \u03c1 \u03c3' - SteinsLemma.R1 \u03c1 \u03b5 \u2264 \u2191\u27e81 - \u03b5', \u22ef\u27e9 * (SteinsLemma.R2 \u03c1 \u03c3 - SteinsLemma.R1 \u03c1 \u03b5)\n\u03c3\u2081 : (n : \u2115+) \u2192 \u2191IsFree\n\u03c3\u2096 : \u2115 \u2192 (n : \u2115+) \u2192 \u2191IsFree := fun k => (SteinsLemma.Lemma7_improver \u03c1 h\u03b5 h\u03b5')^[k] \u03c3\u2081\n\u22a2 False",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L737"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "f8d0162adc333de9376beb7a268b72d4e68fc4d7eedd50fd78551c00d65e941a"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 739,
        "start_column": 4,
        "end_line": 739,
        "end_column": 9,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "case refine_2\n\u03b9 : Type u_1\ninst\u271d : FreeStateTheory \u03b9\ni : \u03b9\n\u03c1 : MState (H i)\n\u03b5 : \u211d\nh\u03b5 : 0 < \u03b5 \u2227 \u03b5 < 1\npf1 : \u2200 (n : \u2115), \u00acn = 0 \u2192 0 < n\npf2 : Subadditive fun n => if h : n = 0 then 0 else (\u2191n)\u207b\u00b9 * \u2191(RelativeEntResource (\u03c1\u2297^[\u27e8n, \u22ef\u27e9]))\npf3 : 0 \u2264 pf2.lim\nR\u2081\u03b5 : ENNReal := Filter.liminf (fun n => \u2014log (\u2a06 \u03c3 \u2208 IsFree, \u03b2_ \u03b5 (\u03c1\u2297^[n]\u2016{\u03c3})) / \u2191\u2191n) Filter.atTop\n\u03b5' : \u211d := \u03b5 / 2\nh\u03b5' : 0 < \u03b5' \u2227 \u03b5' < \u03b5\nlem7 :\n  \u2200 (\u03c3 : (n : \u2115+) \u2192 \u2191IsFree),\n    SteinsLemma.R2 \u03c1 \u03c3 \u2265 SteinsLemma.R1 \u03c1 \u03b5 \u2192\n      \u2203 \u03c3', SteinsLemma.R2 \u03c1 \u03c3' - SteinsLemma.R1 \u03c1 \u03b5 \u2264 \u2191\u27e81 - \u03b5', \u22ef\u27e9 * (SteinsLemma.R2 \u03c1 \u03c3 - SteinsLemma.R1 \u03c1 \u03b5)\n\u03c3\u2081 : (n : \u2115+) \u2192 \u2191IsFree\n\u03c3\u2096 : \u2115 \u2192 (n : \u2115+) \u2192 \u2191IsFree := fun k => (SteinsLemma.Lemma7_improver \u03c1 h\u03b5 h\u03b5')^[k] \u03c3\u2081\nh\u03c3\u2096_gap : False\n\u22a2 \u2191\u27e8\u22ef.lim, \u22ef\u27e9 \u2264 Filter.liminf (fun n => (\u2191\u2191n)\u207b\u00b9 * \u2014log (\u2a06 \u03c3 \u2208 IsFree, \u03b2_ \u03b5 (\u03c1\u2297^[n]\u2016{\u03c3}))) Filter.atTop",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L739"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-08T16:55:27-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "992ccb22711968c86a0520013c70084422cb67b56f16d35164a4dbdf69d4c6d1"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 150,
        "start_column": 2,
        "end_line": 150,
        "end_column": 7,
        "file": "QuantumInfo/Finite/ResourceTheory/FreeState.lean"
      },
      "debug_info": {
        "goal": "case succ.succ\n\u03b9 : Type u_1\ninst\u271d : FreeStateTheory \u03b9\ni : \u03b9\n\u03c1 : MState (H i)\nm n : \u2115\n\u22a2 RelativeEntResource (\u03c1\u2297^[\u27e8m + 1 + (n + 1), \u22ef\u27e9]) * \u2191((m + 1) * (n + 1)) \u2264\n    (RelativeEntResource (\u03c1\u2297^[\u27e8m + 1, \u22ef\u27e9]) * \u2191(n + 1) + RelativeEntResource (\u03c1\u2297^[\u27e8n + 1, \u22ef\u27e9]) * \u2191(m + 1)) *\n      \u2191(m + 1 + (n + 1))",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/FreeState.lean#L150"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-13T17:13:17-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "b98788ae9f231789fdd10f6a19d71cadc7592a4f3cecb0204e0c92df64ef5118"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 153,
        "start_column": 47,
        "end_line": 153,
        "end_column": 52,
        "file": "QuantumInfo/Finite/ResourceTheory/FreeState.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ninst\u271d : FreeStateTheory \u03b9\ni : \u03b9\n\u03c1 : MState (H i)\n\u22a2 0 \u2264 \u22ef.lim",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/FreeState.lean#L153"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-08T16:55:27-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "be110a4043037a26a1e83bfd3fb58b3cf2cc0a5279e8310478beee2f97385b9e"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 82,
        "start_column": 8,
        "end_line": 82,
        "end_column": 13,
        "file": "QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean"
      },
      "debug_info": {
        "goal": "case h.right.h.a.a.e_a\n\u03b9 : Type u_1\ninst\u271d : ResourcePretheory \u03b9\nO : (i j : \u03b9) \u2192 Set (CPTPMap (H i) (H j) \u2102)\nh_convex : \u2200 {i j : \u03b9}, Convex \u211d (CPTPMap.choi '' O i j)\ni : \u03b9\nx\u271d y\u271d : HermitianMat (H i) \u2102\na b : \u211d\nha : 0 \u2264 a\nhb : 0 \u2264 b\nhab : a + b = 1\nj : \u03b9\n\u03c3 : MState (H j)\nfx : CPTPMap (H j) (H i) \u2102\nhfx1 : O j i fx\nfy : CPTPMap (H j) (H i) \u2102\nhfy1 : O j i fy\nhx1 : fx \u03c3 \u2208 fun \u03c1 => \u2200 {j : \u03b9} (\u03c3 : MState (H j)), \u2203 f, O j i f \u2227 f \u03c3 = \u03c1\nhx2 : \u2191(fx \u03c3) = x\u271d\nhy1 : fy \u03c3 \u2208 fun \u03c1 => \u2200 {j : \u03b9} (\u03c3 : MState (H j)), \u2203 f, O j i f \u2227 f \u03c3 = \u03c1\nhy2 : \u2191(fy \u03c3) = y\u271d\ni\u271d j\u271d : H i\n\u22a2 \u2211 x : H j, \u2211 x_1 : H j, \u2191\u2191\u03c3 x x_1 * (\u2191a * fx.choi (i\u271d, x) (j\u271d, x_1)) =\n    \u2191a * ((DFunLike.coe \u2218 CPTPMap.toPTPMap \u2102) fx \u03c3).m i\u271d j\u271d",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-13T17:13:17-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "b48214f6a5ef5c0f16452051a1177609506caa450c2f0f093d57667d5d63b743"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 83,
        "start_column": 8,
        "end_line": 83,
        "end_column": 13,
        "file": "QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean"
      },
      "debug_info": {
        "goal": "case h.right.h.a.a.e_a\n\u03b9 : Type u_1\ninst\u271d : ResourcePretheory \u03b9\nO : (i j : \u03b9) \u2192 Set (CPTPMap (H i) (H j) \u2102)\nh_convex : \u2200 {i j : \u03b9}, Convex \u211d (CPTPMap.choi '' O i j)\ni : \u03b9\nx\u271d y\u271d : HermitianMat (H i) \u2102\na b : \u211d\nha : 0 \u2264 a\nhb : 0 \u2264 b\nhab : a + b = 1\nj : \u03b9\n\u03c3 : MState (H j)\nfx : CPTPMap (H j) (H i) \u2102\nhfx1 : O j i fx\nfy : CPTPMap (H j) (H i) \u2102\nhfy1 : O j i fy\nhx1 : fx \u03c3 \u2208 fun \u03c1 => \u2200 {j : \u03b9} (\u03c3 : MState (H j)), \u2203 f, O j i f \u2227 f \u03c3 = \u03c1\nhx2 : \u2191(fx \u03c3) = x\u271d\nhy1 : fy \u03c3 \u2208 fun \u03c1 => \u2200 {j : \u03b9} (\u03c3 : MState (H j)), \u2203 f, O j i f \u2227 f \u03c3 = \u03c1\nhy2 : \u2191(fy \u03c3) = y\u271d\ni\u271d j\u271d : H i\n\u22a2 \u2211 x : H j, \u2211 x_1 : H j, \u2191\u2191\u03c3 x x_1 * (\u2191b * fy.choi (i\u271d, x) (j\u271d, x_1)) =\n    \u2191b * ((DFunLike.coe \u2218 CPTPMap.toPTPMap \u2102) fy \u03c3).m i\u271d j\u271d",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean#L83"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-13T17:13:17-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "ca82002c49a02bb6b4ea78773c32b9569becac0afd18fd2f66b040ea3b46642f"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 110,
        "start_column": 4,
        "end_line": 110,
        "end_column": 9,
        "file": "QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean"
      },
      "debug_info": {
        "goal": "case intro.intro\n\u03b9 : Type u_1\ninst\u271d : ResourcePretheory \u03b9\nO : (i j : \u03b9) \u2192 Set (CPTPMap (H i) (H j) \u2102)\nh_id : \u2200 (i : \u03b9), CPTPMap.id \u2208 O i i\nh_comp : \u2200 {i j k : \u03b9} (Y : \u2191(O j k)) (X : \u2191(O i j)), \u2191Y\u2218\u2098\u2191X \u2208 O i k\nh_closed : \u2200 {i j : \u03b9}, IsClosed (O i j)\nh_convex : \u2200 {i j : \u03b9}, Convex \u211d (CPTPMap.choi '' O i j)\nh_prod :\n  \u2200 {i j k l : \u03b9} {f : CPTPMap (H i) (H k) \u2102} {g : CPTPMap (H j) (H l) \u2102},\n    f \u2208 O i k \u2192 g \u2208 O j l \u2192 (f\u2297\u2096\u1d63g) \u2208 O (prod i j) (prod k l)\nh_fullRank : {i : \u03b9} \u2192 sorry\nh_appendFree : {i j k : \u03b9} \u2192 sorry\ni j : \u03b9\n\u03c1 : MState (H i)\n\u03c3 : MState (H j)\nh\u03c1 : \u2200 {j : \u03b9} (\u03c3 : MState (H j)), \u2203 f, O j i f \u2227 f \u03c3 = \u03c1\nh\u03c3 : \u2200 {j_1 : \u03b9} (\u03c3_1 : MState (H j_1)), \u2203 f, O j_1 j f \u2227 f \u03c3_1 = \u03c3\nk : \u03b9\n\u03c1\u2080 : MState (H k)\nf : CPTPMap (H i) (H i) \u2102\nhf1 : O i i f \u2227 f \u03c1 = \u03c1\ng : CPTPMap (H j) (H j) \u2102\nhg : O j j g \u2227 g \u03c3 = \u03c3\n\u22a2 \u2203 f, O k (prod i j) f \u2227 f \u03c1\u2080 = \u03c1\u2297\u1d63\u03c3",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean#L110"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-13T17:13:17-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "6b23b988410403856c75eab29345b44a02c59b59d9bb92d0c10e601180d11677"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 104,
        "start_column": 17,
        "end_line": 104,
        "end_column": 22,
        "file": "QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ninst\u271d : ResourcePretheory \u03b9\nO : (i j : \u03b9) \u2192 Set (CPTPMap (H i) (H j) \u2102)\nh_id : \u2200 (i : \u03b9), CPTPMap.id \u2208 O i i\nh_comp : \u2200 {i j k : \u03b9} (Y : \u2191(O j k)) (X : \u2191(O i j)), \u2191Y\u2218\u2098\u2191X \u2208 O i k\nh_closed : \u2200 {i j : \u03b9}, IsClosed (O i j)\nh_convex : \u2200 {i j : \u03b9}, Convex \u211d (CPTPMap.choi '' O i j)\nh_prod :\n  \u2200 {i j k l : \u03b9} {f : CPTPMap (H i) (H k) \u2102} {g : CPTPMap (H j) (H l) \u2102},\n    f \u2208 O i k \u2192 g \u2208 O j l \u2192 (f\u2297\u2096\u1d63g) \u2208 O (prod i j) (prod k l)\nh_fullRank : {i : \u03b9} \u2192 sorry\nh_appendFree : {i j k : \u03b9} \u2192 sorry\ni\u271d : \u03b9\n\u22a2 IsClosed fun {i} \u03c1 => \u2200 {j : \u03b9} (\u03c3 : MState (H j)), \u2203 f, O j i f \u2227 f \u03c3 = \u03c1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean#L104"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-13T17:13:17-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "a7d2409756c8e40efcb57cd6bb80b5af48cd355d4f1898a1b670e313316e0647"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 111,
        "start_column": 19,
        "end_line": 111,
        "end_column": 24,
        "file": "QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ninst\u271d : ResourcePretheory \u03b9\nO : (i j : \u03b9) \u2192 Set (CPTPMap (H i) (H j) \u2102)\nh_id : \u2200 (i : \u03b9), CPTPMap.id \u2208 O i i\nh_comp : \u2200 {i j k : \u03b9} (Y : \u2191(O j k)) (X : \u2191(O i j)), \u2191Y\u2218\u2098\u2191X \u2208 O i k\nh_closed : \u2200 {i j : \u03b9}, IsClosed (O i j)\nh_convex : \u2200 {i j : \u03b9}, Convex \u211d (CPTPMap.choi '' O i j)\nh_prod :\n  \u2200 {i j k l : \u03b9} {f : CPTPMap (H i) (H k) \u2102} {g : CPTPMap (H j) (H l) \u2102},\n    f \u2208 O i k \u2192 g \u2208 O j l \u2192 (f\u2297\u2096\u1d63g) \u2208 O (prod i j) (prod k l)\nh_fullRank : {i : \u03b9} \u2192 sorry\nh_appendFree : {i j k : \u03b9} \u2192 sorry\n\u22a2 \u2200 (i : \u03b9), \u2203 \u03c1, \u03c1.m.PosDef \u2227 (fun {i} \u03c1 => \u2200 {j : \u03b9} (\u03c3 : MState (H j)), \u2203 f, O j i f \u2227 f \u03c3 = \u03c1) \u03c1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean#L111"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-13T17:13:17-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "5e430b54b6e100cd66b5bb4670c9cff422a47294496449c997ec8a26472d88dc"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 147,
        "start_column": 6,
        "end_line": 147,
        "end_column": 11,
        "file": "QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ni : { \u03b9 // Finite \u03b9 \u2227 Nonempty \u03b9 }\n\u22a2 Convex \u211d (MState.M '' fun {i} => Set.univ)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean#L147"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "b3cca168e50d2602d79218f21f1a8643de94327441ce2aa49af101bdd73755c0"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 160,
        "start_column": 8,
        "end_line": 160,
        "end_column": 13,
        "file": "QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ni : { \u03b9 // Finite \u03b9 \u2227 Nonempty \u03b9 }\nthis\u271d\u00b9 : Finite \u2191i\nthis\u271d : Nonempty \u2191i\nx\u271d : Fintype \u2191i := Fintype.ofFinite \u2191i\nthis : (\u2191\u2191MState.uniform).PosDef\n\u22a2 MState.uniform.m.PosDef",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean#L160"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-02-07T12:13:00-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "17997540bcfd42a7e5e903258894d9b2c04c127e3fc1f75bd546b7f57ff80ee1"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 30,
        "start_column": 2,
        "end_line": 30,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Distance/Fidelity.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d : Fintype d\n\u03c1 \u03c3 : MState d\n\u22a2 \u03c1.fidelity \u03c3 \u2264 1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Distance/Fidelity.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-18T12:12:56-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "ab5cbcac5f5f720b2786f5542a6d8f002d9bb8ee56d435a08b374fdfe5644b01"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 38,
        "start_column": 2,
        "end_line": 38,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Distance/Fidelity.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d : Fintype d\n\u03c1 : MState d\n\u22a2 \u03c1.fidelity \u03c1 = 1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Distance/Fidelity.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-18T12:12:56-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "fbfe4a4b8e641103130a202d68ed2f09989aa2d65e0d3e8b97da03f9f9e0ecb8"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 42,
        "start_column": 3,
        "end_line": 42,
        "end_column": 8,
        "file": "QuantumInfo/Finite/Distance/Fidelity.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d : Fintype d\n\u03c1 \u03c3 : MState d\n\u22a2 \u03c1.fidelity \u03c3 = 1 \u2192 \u03c1 = \u03c3",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Distance/Fidelity.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-21T14:58:45-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "7aef490344ba27ff1d7b8955455f4397eb6d2a689fff6e50b906d87c09a8d3f5"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 48,
        "start_column": 2,
        "end_line": 48,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Distance/Fidelity.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d : Fintype d\n\u03c1 \u03c3 : MState d\n\u22a2 \u03c1.fidelity \u03c3 = \u03c3.fidelity \u03c1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Distance/Fidelity.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-18T12:12:56-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "17c63ea3790491a44ed43d656c27deb840079f389ec073897942f4df6af4b2af"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 52,
        "start_column": 2,
        "end_line": 52,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Distance/Fidelity.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\nd\u2082 : Type u_2\ninst\u271d\u00b9 : Fintype d\ninst\u271d : Fintype d\u2082\n\u03c1 \u03c3 : MState d\n\u039b : CPTPMap d d\u2082 \u2102\n\u22a2 (\u039b \u03c1).fidelity (\u039b \u03c3) \u2265 \u03c1.fidelity \u03c3",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/Distance/Fidelity.lean#L52"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-18T12:12:56-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "3adff82d75211bd34142c02f137a062d6e3baabda1eae6af5a60960e4d935c82"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 89,
        "start_column": 2,
        "end_line": 89,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Unbundled.lean"
      },
      "debug_info": {
        "goal": "A : Type u_3\nB : Type u_4\nC : Type u_5\ninst\u271d\u2076 : Fintype A\ninst\u271d\u2075 : DecidableEq A\ninst\u271d\u2074 : Fintype B\ninst\u271d\u00b3 : Fintype C\nD : Type u_1\nR : Type u_2\ninst\u271d\u00b2 : CommSemiring R\ninst\u271d\u00b9 : DecidableEq C\ninst\u271d : Fintype D\nM\u2081 : MatrixMap A B R\nM\u2082 : MatrixMap C D R\nh\u2081 : M\u2081.IsTracePreserving\nh\u2082 : M\u2082.IsTracePreserving\n\u22a2 (M\u2081 \u2297\u2096\u2098 M\u2082).IsTracePreserving",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/Unbundled.lean#L89"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "b7c00065beb9ded1f503606e005f327748d2d6d979d453c628f7afb24a21fe95"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 165,
        "start_column": 2,
        "end_line": 165,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Unbundled.lean"
      },
      "debug_info": {
        "goal": "A : Type u_1\nB : Type u_2\nR : Type u_4\ninst\u271d\u00b2 : RCLike R\ninst\u271d\u00b9 : Fintype A\ninst\u271d : Fintype B\nM : MatrixMap A B R\nhM : M.IsPositive\n\u22a2 M.IsHermitianPreserving",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/Unbundled.lean#L165"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "5eaeb1eb1e3c50647eaac0a320743e9c11802c4ec886a5ae9690f589081ee910"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 197,
        "start_column": 2,
        "end_line": 197,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Unbundled.lean"
      },
      "debug_info": {
        "goal": "A : Type u_1\nB : Type u_2\nR : Type u_4\ninst\u271d\u2075 : RCLike R\ninst\u271d\u2074 : Fintype A\ninst\u271d\u00b3 : Fintype B\ninst\u271d\u00b2 : DecidableEq A\nM : MatrixMap A B R\nh : M.IsCompletelyPositive\nT : Type u_5\ninst\u271d\u00b9 : Fintype T\ninst\u271d : DecidableEq T\n\u22a2 (M \u2297\u2096\u2098 LinearMap.id).IsPositive",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/Unbundled.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "0249eabfccf35a32e0418e780cd612469328a772463f59de3cab771f3ca008e2"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 206,
        "start_column": 2,
        "end_line": 206,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Unbundled.lean"
      },
      "debug_info": {
        "goal": "A : Type u_1\nB : Type u_2\nR : Type u_4\ninst\u271d\u2074 : RCLike R\ninst\u271d\u00b3 : Fintype A\ninst\u271d\u00b2 : Fintype B\ninst\u271d\u00b9 inst\u271d : DecidableEq A\nM : MatrixMap A B R\nhM : M.IsCompletelyPositive\nx : Matrix A A R\nhx : x.PosSemidef\nx' : Matrix (A \u00d7 Fin 1) (A \u00d7 Fin 1) R := Matrix.kroneckerMap (fun x1 x2 => x1 * x2) x 1\neqB : B \u00d7 Fin 1 \u2243 B := (Equiv.prodCongrRight fun x => finOneEquiv).trans (Equiv.prodPUnit B)\n\u22a2 (M x).PosSemidef",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/Unbundled.lean#L206"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "2b2e4470713d88a71a2461a1f998a8c4083de8976daf38294ce2042d3a95b821"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 248,
        "start_column": 2,
        "end_line": 248,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Unbundled.lean"
      },
      "debug_info": {
        "goal": "d : Type u_5\nA : Type u_1\nR : Type u_4\ninst\u271d\u2074 : RCLike R\ninst\u271d\u00b3 : Fintype A\ninst\u271d\u00b2 : DecidableEq A\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\nC : Matrix d d R\nh : C.PosSemidef\nh\u2081 :\n  \u2200 (x y : Matrix A A R),\n    (fun M => Matrix.kroneckerMap (fun x1 x2 => x1 * x2) M C) (x + y) =\n      (fun M => Matrix.kroneckerMap (fun x1 x2 => x1 * x2) M C) x +\n        (fun M => Matrix.kroneckerMap (fun x1 x2 => x1 * x2) M C) y\nh\u2082 :\n  \u2200 (m : R) (x : Matrix A A R),\n    { toFun := fun M => Matrix.kroneckerMap (fun x1 x2 => x1 * x2) M C, map_add' := h\u2081 }.toFun (m \u2022 x) =\n      (RingHom.id R) m \u2022 { toFun := fun M => Matrix.kroneckerMap (fun x1 x2 => x1 * x2) M C, map_add' := h\u2081 }.toFun x\n\u22a2 IsCompletelyPositive\n    { toFun := fun M => Matrix.kroneckerMap (fun x1 x2 => x1 * x2) M C, map_add' := h\u2081, map_smul' := h\u2082 }",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/Unbundled.lean#L248"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "a1083da8fc5d93473d747c4ad7bfc9d30ec26cf822efe878c06968b5db45e006"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 259,
        "start_column": 4,
        "end_line": 259,
        "end_column": 9,
        "file": "QuantumInfo/Finite/CPTPMap/Unbundled.lean"
      },
      "debug_info": {
        "goal": "case pos.mpr\nA : Type u_1\nB : Type u_2\ninst\u271d\u00b3 : Fintype A\ninst\u271d\u00b2 : Fintype B\ninst\u271d\u00b9 inst\u271d : DecidableEq A\nM : MatrixMap A B \u2102\nhA : Nonempty A\n\u22a2 M.choi_matrix.PosSemidef \u2192 M.IsCompletelyPositive",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/Unbundled.lean#L259"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-04-15T04:56:48-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "552df677bb73aa7e4cba58d1e34303f45a36c581a19ed06088e0de6d54e5c7ef"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 260,
        "start_column": 2,
        "end_line": 260,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Unbundled.lean"
      },
      "debug_info": {
        "goal": "case neg\nA : Type u_1\nB : Type u_2\ninst\u271d\u00b3 : Fintype A\ninst\u271d\u00b2 : Fintype B\ninst\u271d\u00b9 inst\u271d : DecidableEq A\nM : MatrixMap A B \u2102\nhA : \u00acNonempty A\n\u22a2 M.IsCompletelyPositive \u2194 M.choi_matrix.PosSemidef",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/Unbundled.lean#L260"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "d5ce5384142a47b0de4232ea6a8954b139bd583fd4936416292baedd2ca86209"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 266,
        "start_column": 2,
        "end_line": 266,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Unbundled.lean"
      },
      "debug_info": {
        "goal": "A : Type u_1\nB : Type u_2\nR : Type u_4\ninst\u271d\u2074 : RCLike R\ninst\u271d\u00b3 : Fintype A\ninst\u271d\u00b2 : Fintype B\ninst\u271d\u00b9 : DecidableEq A\n\u03ba : Type u_5\ninst\u271d : Fintype \u03ba\nM : \u03ba \u2192 Matrix B A R\n\u22a2 (of_kraus M M).IsCompletelyPositive",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/Unbundled.lean#L266"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-01-31T11:15:47-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "f4b11409730e4be996509611866385ec080e3ee2ca50df93837a8e3b29fa8ba7"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 270,
        "start_column": 2,
        "end_line": 270,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Unbundled.lean"
      },
      "debug_info": {
        "goal": "d : Type ?u.108824\nA : Type u_1\nB : Type u_2\nC : Type u_3\nR : Type u_4\ninst\u271d\u2076 : RCLike R\ninst\u271d\u2075 : Fintype A\ninst\u271d\u2074 : Fintype B\ninst\u271d\u00b3 : Fintype C\ninst\u271d\u00b2 : DecidableEq A\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03a6 : MatrixMap A B R\nhCP : \u03a6.IsCompletelyPositive\n\u22a2 \u2203 r M, \u03a6 = of_kraus M M",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/Unbundled.lean#L270"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-01-31T11:15:47-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "78673b2723b6b83279b9e5c6da23f9d067d2ac8f657e607ed282ae7c36eae276"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 289,
        "start_column": 2,
        "end_line": 289,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Unbundled.lean"
      },
      "debug_info": {
        "goal": "A : Type u_1\nB : Type u_2\nC : Type u_3\nR : Type u_4\ninst\u271d\u2076 : RCLike R\ninst\u271d\u2075 : Fintype A\ninst\u271d\u2074 : Fintype B\ninst\u271d\u00b3 : Fintype C\ninst\u271d\u00b2 : DecidableEq A\nD : Type u_5\ninst\u271d\u00b9 : DecidableEq C\ninst\u271d : Fintype D\nM\u2081 : MatrixMap A B R\nM\u2082 : MatrixMap C D R\nh\u2081 : M\u2081.IsCompletelyPositive\nh\u2082 : M\u2082.IsCompletelyPositive\n\u22a2 (M\u2081 \u2297\u2096\u2098 M\u2082).IsCompletelyPositive",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/Unbundled.lean#L289"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "772c43dd6210e899dd6a9b11c692163f43841dac8fdd556005a6a7add559be42"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 300,
        "start_column": 2,
        "end_line": 300,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Unbundled.lean"
      },
      "debug_info": {
        "goal": "R : Type u_4\ninst\u271d\u2075 : RCLike R\n\u03b9 : Type u\ninst\u271d\u2074 : DecidableEq \u03b9\nf\u03b9 : Fintype \u03b9\ndI : \u03b9 \u2192 Type v\ninst\u271d\u00b3 : (i : \u03b9) \u2192 Fintype (dI i)\ninst\u271d\u00b2 : (i : \u03b9) \u2192 DecidableEq (dI i)\ndO : \u03b9 \u2192 Type w\ninst\u271d\u00b9 : (i : \u03b9) \u2192 Fintype (dO i)\ninst\u271d : (i : \u03b9) \u2192 DecidableEq (dO i)\n\u039bi : (i : \u03b9) \u2192 MatrixMap (dI i) (dO i) R\nh\u2081 : \u2200 (i : \u03b9), (\u039bi i).IsCompletelyPositive\n\u22a2 (MatrixMap.piKron \u039bi).IsCompletelyPositive",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/Unbundled.lean#L300"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T17:34:48-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "a2d203b49acf92b1c9b120d6d7f374f32e426c18e306236a4e9010ab1fae0a22"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Dual.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ninst\u271d\u2074 : Fintype dIn\ninst\u271d\u00b3 : Fintype dOut\ninst\u271d\u00b2 : DecidableEq dIn\ninst\u271d\u00b9 : DecidableEq dOut\nR : Type u_3\ninst\u271d : CommRing R\nM : MatrixMap dIn dOut R\nA : Matrix dIn dIn R\nB : Matrix dOut dOut R\n\u22a2 \u2211 x : dOut, \u2211 j : dOut, M A x j * B j x =\n    \u2211 x : dIn,\n      \u2211 j : dIn, A x j * (Matrix.stdBasis R dIn dIn).toDualEquiv.symm ((Matrix.stdBasis R dOut dOut).toDual B \u2218\u2097 M) j x",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/Dual.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-14T17:26:35-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "3a3f4671966eea4e84707ac6e89aa3a425bc9d32d4143a47a41ac369c1410107"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 44,
        "start_column": 2,
        "end_line": 44,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Dual.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ninst\u271d\u2074 : Fintype dIn\ninst\u271d\u00b3 : Fintype dOut\ninst\u271d\u00b2 : DecidableEq dIn\ninst\u271d\u00b9 : DecidableEq dOut\n\ud835\udd5c : Type u_4\ninst\u271d : RCLike \ud835\udd5c\nM : MatrixMap dIn dOut \ud835\udd5c\nh : M.IsHermitianPreserving\n\u22a2 M.dual.IsHermitianPreserving",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/Dual.lean#L44"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "7b1cc9d20a2927e1b73b84c5a4769813dfff88c5c110b2acf56f71a7feeb8908"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 54,
        "start_column": 2,
        "end_line": 54,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Dual.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ninst\u271d\u2074 : Fintype dIn\ninst\u271d\u00b3 : Fintype dOut\ninst\u271d\u00b2 : DecidableEq dIn\ninst\u271d\u00b9 : DecidableEq dOut\n\ud835\udd5c : Type u_4\ninst\u271d : RCLike \ud835\udd5c\nM : MatrixMap dIn dOut \ud835\udd5c\nh : M.IsTracePreserving\n\u22a2 M.dual.Unital",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/Dual.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "73d25195df3b8a6dae58fb2f1dabec30fbb969a06fcd339d2c857b431bd17f15"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 61,
        "start_column": 2,
        "end_line": 61,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Dual.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ninst\u271d\u2074 : Fintype dIn\ninst\u271d\u00b3 : Fintype dOut\ninst\u271d\u00b2 : DecidableEq dIn\ninst\u271d\u00b9 : DecidableEq dOut\n\ud835\udd5c : Type u_4\ninst\u271d : RCLike \ud835\udd5c\nM : MatrixMap dIn dOut \ud835\udd5c\nh : M.IsCompletelyPositive\n\u22a2 M.dual.IsCompletelyPositive",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/Dual.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "c3fcfd39e8d6d160227af15889e01a13e959fad60fde3665d73c424b3b4767a3"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 70,
        "start_column": 4,
        "end_line": 70,
        "end_column": 9,
        "file": "QuantumInfo/Finite/CPTPMap/Dual.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ninst\u271d\u2074 : Fintype dIn\ninst\u271d\u00b3 : Fintype dOut\ninst\u271d\u00b2 : DecidableEq dIn\ninst\u271d\u00b9 : DecidableEq dOut\n\ud835\udd5c : Type u_4\ninst\u271d : RCLike \ud835\udd5c\nM : MatrixMap dIn dOut \ud835\udd5c\n\u22a2 \u2191(Matrix.stdBasis \ud835\udd5c dOut dOut).toDualEquiv.symm \u2218\u2097 (\u2191(Matrix.stdBasis \ud835\udd5c dOut dOut).toDualEquiv).dualMap =\n    \u2191(Module.evalEquiv \ud835\udd5c (Matrix dOut dOut \ud835\udd5c)).symm",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/Dual.lean#L70"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-14T17:26:35-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "7b072e8559b638724f03555778861d08e185b1ff82544a637cae8f88ba69cb42"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 77,
        "start_column": 4,
        "end_line": 77,
        "end_column": 9,
        "file": "QuantumInfo/Finite/CPTPMap/Dual.lean"
      },
      "debug_info": {
        "goal": "case h.h\ndIn : Type u_1\ndOut : Type u_2\ninst\u271d\u2074 : Fintype dIn\ninst\u271d\u00b3 : Fintype dOut\ninst\u271d\u00b2 : DecidableEq dIn\ninst\u271d\u00b9 : DecidableEq dOut\n\ud835\udd5c : Type u_4\ninst\u271d : RCLike \ud835\udd5c\nM : MatrixMap dIn dOut \ud835\udd5c\nh\u2081 :\n  \u2191(Matrix.stdBasis \ud835\udd5c dOut dOut).toDualEquiv.symm \u2218\u2097 (\u2191(Matrix.stdBasis \ud835\udd5c dOut dOut).toDualEquiv).dualMap =\n    \u2191(Module.evalEquiv \ud835\udd5c (Matrix dOut dOut \ud835\udd5c)).symm\nx : Matrix dIn dIn \ud835\udd5c\ny : Module.Dual \ud835\udd5c (Matrix dIn dIn \ud835\udd5c)\nL : Basis (dIn \u00d7 dIn) \ud835\udd5c (Matrix dIn dIn \ud835\udd5c)\n\u22a2 (L.toDual x) (L.toDualEquiv.symm y) = y x",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/Dual.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-14T17:26:35-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "6b99e92b5aa3d93b9cb8077c83312cca5174035ce5b09541e11da7114c49cb6d"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 81,
        "start_column": 4,
        "end_line": 81,
        "end_column": 9,
        "file": "QuantumInfo/Finite/CPTPMap/Bundled.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\nR : Type u_3\n\ud835\udd5c\u271d : optParam Type \u2102\ninst\u271d\u2076 : Fintype dIn\ninst\u271d\u2075 : Fintype dOut\ninst\u271d\u2074 : DecidableEq dIn\ninst\u271d\u00b3 : DecidableEq dOut\ninst\u271d\u00b2 : Semiring R\ninst\u271d\u00b9 : RCLike \ud835\udd5c\u271d\n\ud835\udd5c : Type\ninst\u271d : RCLike \ud835\udd5c\nx\u271d\u00b9 x\u271d : HPMap dIn dOut \ud835\udd5c\nh : (fun \u039b \u03c1 => \u27e8\u039b.map \u2191\u03c1, \u22ef\u27e9) x\u271d\u00b9 = (fun \u039b \u03c1 => \u27e8\u039b.map \u2191\u03c1, \u22ef\u27e9) x\u271d\n\u22a2 x\u271d\u00b9 = x\u271d",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/Bundled.lean#L81"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "aed1e7cb0e9128f37dcaba2877a9e9c2efa81ed09ed084af9f6efe544a21a90b"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 166,
        "start_column": 4,
        "end_line": 166,
        "end_column": 9,
        "file": "QuantumInfo/Finite/CPTPMap/Bundled.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\nR : Type u_3\n\ud835\udd5c\u271d : optParam Type \u2102\ninst\u271d\u2076 : Fintype dIn\ninst\u271d\u2075 : Fintype dOut\ninst\u271d\u2074 : DecidableEq dIn\ninst\u271d\u00b3 : DecidableEq dOut\ninst\u271d\u00b2 : Semiring R\ninst\u271d\u00b9 : RCLike \ud835\udd5c\u271d\n\ud835\udd5c : Type\ninst\u271d : RCLike \ud835\udd5c\nx\u271d\u00b9 x\u271d : PTPMap dIn dOut \u2102\nh :\n  (fun \u039b \u03c1 => { toSubtype := ((\u039b.toPMap \u2102).toHPMap \u2102) \u2191\u03c1, zero_le := \u22ef, tr := \u22ef }) x\u271d\u00b9 =\n    (fun \u039b \u03c1 => { toSubtype := ((\u039b.toPMap \u2102).toHPMap \u2102) \u2191\u03c1, zero_le := \u22ef, tr := \u22ef }) x\u271d\n\u22a2 x\u271d\u00b9 = x\u271d",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/Bundled.lean#L166"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "a3adb2114d89c8d5d915931ef64899b9b3160650196f7a4f421be06ff6829bda"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 61,
        "start_column": 2,
        "end_line": 61,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/MatrixMap.lean"
      },
      "debug_info": {
        "goal": "A : Type u_1\nB : Type u_2\nR : Type u_7\ninst\u271d\u00b2 : Fintype A\ninst\u271d\u00b9 : Semiring R\ninst\u271d : DecidableEq A\nM : MatrixMap A B R\n\u22a2 of_choi_matrix M.choi_matrix = M",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/MatrixMap.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "a2b51daba4b205bd6e4b2ab25c7b76f8f53ca8bd3a54dc4152aead484e63fce3"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 98,
        "start_column": 2,
        "end_line": 98,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/MatrixMap.lean"
      },
      "debug_info": {
        "goal": "A : Type u_1\nB : Type u_2\nC : Type u_3\nD : Type u_4\nE : Type u_5\nF : Type u_6\nR : Type u_7\ninst\u271d\u2075 : Fintype A\ninst\u271d\u2074 : Semiring R\ninst\u271d\u00b3 : DecidableEq A\ninst\u271d\u00b2 : SMulCommClass R R R\ninst\u271d\u00b9 : Star R\n\u03ba : Type u_8\ninst\u271d : Fintype \u03ba\n\u03a6 : MatrixMap A B R\n\u22a2 \u2203 r M N, \u03a6 = of_kraus M N",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/MatrixMap.lean#L98"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-01-31T11:15:47-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "4af13e8ba3c601c730756ca5b5c6e6e4de63f8a5c6d96210c1812188e6e8dcb1"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 129,
        "start_column": 2,
        "end_line": 129,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/MatrixMap.lean"
      },
      "debug_info": {
        "goal": "A : Type u_8\nB : Type u_9\nC : Type u_10\nD : Type u_11\nR : Type u_12\ninst\u271d\u2076 : Fintype A\ninst\u271d\u2075 : Fintype B\ninst\u271d\u2074 : Fintype C\ninst\u271d\u00b3 : Fintype D\ninst\u271d\u00b2 : DecidableEq A\ninst\u271d\u00b9 : DecidableEq C\nb\u2081 : B\nd\u2081 : D\nb\u2082 : B\nd\u2082 : D\ninst\u271d : CommRing R\nM\u2081 : MatrixMap A B R\nM\u2082 : MatrixMap C D R\nM : Matrix (A \u00d7 C) (A \u00d7 C) R\n\u22a2 (\u2211 x : (B \u00d7 D) \u00d7 B \u00d7 D,\n        (Matrix.of fun i j =>\n                ((Matrix.stdBasis R B B).repr (M\u2081 (Matrix.stdBasisMatrix j.1.1 j.2.1 1))) (i.1.1, i.2.1) *\n                  ((Matrix.stdBasis R D D).repr (M\u2082 (Matrix.stdBasisMatrix j.1.2 j.2.2 1))) (i.1.2, i.2.2)).mulVec\n            (\u21d1((Matrix.stdBasis R (A \u00d7 C) (A \u00d7 C)).repr M)) x \u2022\n          (Matrix.stdBasis R (B \u00d7 D) (B \u00d7 D)) x)\n      (b\u2081, d\u2081) (b\u2082, d\u2082) =\n    \u2211 a\u2081 : A,\n      \u2211 a\u2082 : A,\n        \u2211 c\u2081 : C,\n          \u2211 c\u2082 : C,\n            M\u2081 (Matrix.stdBasisMatrix a\u2081 a\u2082 1) b\u2081 b\u2082 * M\u2082 (Matrix.stdBasisMatrix c\u2081 c\u2082 1) d\u2081 d\u2082 * M (a\u2081, c\u2081) (a\u2082, c\u2082)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/MatrixMap.lean#L129"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "02643844beb17d298f2d746f18a7ef72efebcbcf5d97b46f8aad2dba92130c05"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 191,
        "start_column": 2,
        "end_line": 191,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/MatrixMap.lean"
      },
      "debug_info": {
        "goal": "case a.e_a\nA : Type u_8\nB : Type u_9\nC : Type u_10\nD : Type u_11\nR : Type u_12\ninst\u271d\u2076 : Fintype A\ninst\u271d\u2075 : Fintype B\ninst\u271d\u2074 : Fintype C\ninst\u271d\u00b3 : Fintype D\ninst\u271d\u00b2 : DecidableEq A\ninst\u271d\u00b9 : DecidableEq C\ninst\u271d : CommRing R\nM\u2081 : MatrixMap A B R\nM\u2082 : MatrixMap C D R\nMA : Matrix A A R\nMC : Matrix C C R\nbd\u2081 bd\u2082 : B \u00d7 D\nb\u2081 : B\nd\u2081 : D\nb\u2082 : B\nd\u2082 : D\n\u22a2 \u2211 i : A, \u2211 i_1 : A, M\u2081 (Matrix.stdBasisMatrix i i_1 1) b\u2081 b\u2082 * MA i i_1 = M\u2081 MA b\u2081 b\u2082",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/MatrixMap.lean#L191"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "ee7dc66d1cf253280f434ddd0d784c4797efe8551853d3777d85ae213bb9fb77"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 192,
        "start_column": 2,
        "end_line": 192,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/MatrixMap.lean"
      },
      "debug_info": {
        "goal": "case a.e_a\nA : Type u_8\nB : Type u_9\nC : Type u_10\nD : Type u_11\nR : Type u_12\ninst\u271d\u2076 : Fintype A\ninst\u271d\u2075 : Fintype B\ninst\u271d\u2074 : Fintype C\ninst\u271d\u00b3 : Fintype D\ninst\u271d\u00b2 : DecidableEq A\ninst\u271d\u00b9 : DecidableEq C\ninst\u271d : CommRing R\nM\u2081 : MatrixMap A B R\nM\u2082 : MatrixMap C D R\nMA : Matrix A A R\nMC : Matrix C C R\nbd\u2081 bd\u2082 : B \u00d7 D\nb\u2081 : B\nd\u2081 : D\nb\u2082 : B\nd\u2082 : D\n\u22a2 \u2211 i : C, \u2211 i_1 : C, MC i i_1 * M\u2082 (Matrix.stdBasisMatrix i i_1 1) d\u2081 d\u2082 = M\u2082 MC d\u2081 d\u2082",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/MatrixMap.lean#L192"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "862bf79ec3dd9898d5436b09f8d6090a0c04cc95a1d9ed438b2c5fd2c0d28216"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 45,
        "start_column": 2,
        "end_line": 45,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ninst\u271d\u00b2 : Fintype dIn\ninst\u271d\u00b9 : Fintype dOut\ninst\u271d : DecidableEq dIn\n\u039b\u2081 \u039b\u2082 : CPTPMap dIn dOut \u2102\nh : \u039b\u2081.choi = \u039b\u2082.choi\n\u22a2 \u039b\u2081 = \u039b\u2082",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/CPTP.lean#L45"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "c4e0a6813612824043c676b19c7e504a4e54c77629906372e936b125224421f4"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 71,
        "start_column": 2,
        "end_line": 71,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ninst\u271d\u00b2 : Fintype dIn\ninst\u271d\u00b9 : Fintype dOut\ninst\u271d : DecidableEq dIn\nM : Matrix (dOut \u00d7 dIn) (dOut \u00d7 dIn) \u2102\nh\u2081 : M.PosSemidef\nh\u2082 : M.traceLeft = 1\n\u22a2 (HPMap.mk \u2102 (MatrixMap.of_choi_matrix M) \u22ef).map.choi_matrix = M",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/CPTP.lean#L71"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "99be591e7510da9feb4ec9a250af574f0de2fffc27e776978346e33ee7dab26c"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 109,
        "start_column": 12,
        "end_line": 109,
        "end_column": 17,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ndOut\u2082 : Type u_3\ninst\u271d\u2077 : Fintype dIn\ninst\u271d\u2076 : Fintype dOut\ninst\u271d\u2075 : Fintype dOut\u2082\ninst\u271d\u2074 : DecidableEq dIn\ndM : Type u_4\ninst\u271d\u00b3 : Fintype dM\ninst\u271d\u00b2 : DecidableEq dM\ndM\u2082 : Type u_5\ninst\u271d\u00b9 : Fintype dM\u2082\ninst\u271d : DecidableEq dM\u2082\n\u22a2 Convex \u211d (Set.range choi)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/CPTP.lean#L109"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-13T17:13:17-05:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "1e2b48f3b1101694901998e3affca8c810351b8b732c86c7b8149610f38b0bb7"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 160,
        "start_column": 8,
        "end_line": 160,
        "end_column": 13,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ndOut\u2082 : Type u_3\ninst\u271d\u2078 : Fintype dIn\ninst\u271d\u2077 : Fintype dOut\ninst\u271d\u2076 : Fintype dOut\u2082\ninst\u271d\u2075 : DecidableEq dIn\ndM : Type u_4\ninst\u271d\u2074 : Fintype dM\ninst\u271d\u00b3 : DecidableEq dM\ndM\u2082 : Type u_5\ninst\u271d\u00b2 : Fintype dM\u2082\ninst\u271d\u00b9 : DecidableEq dM\u2082\ninst\u271d : Unique dIn\n\u03c1 : MState dOut\n\u22a2 MatrixMap.IsCompletelyPositive\n    ((((PTPMap.mk \u2102\n                  (PMap.mk \u2102\n                    (HPMap.mk \u2102\n                      (MatrixMap.of_choi_matrix\n                        (Matrix.of fun x x_1 =>\n                          match x with\n                          | (i, snd) =>\n                            match x_1 with\n                            | (j, snd) => \u03c1.m i j))\n                      \u22ef)\n                    \u22ef)\n                  \u22ef).toPMap\n              \u2102).toHPMap\n          \u2102).toLinearMap\n      \u2102)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/CPTP.lean#L160"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "839992f6f7d01546de57503a26d2817d14ecdae89271ddd51f92870b96f55a3c"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 174,
        "start_column": 2,
        "end_line": 174,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "case h\ndIn : Type u_1\ndOut : Type u_2\ninst\u271d\u00b3 : Fintype dIn\ninst\u271d\u00b2 : Fintype dOut\ninst\u271d\u00b9 : DecidableEq dIn\ninst\u271d : Unique dIn\n\u03c1 : MState dOut\n\u03c1\u2080 : MState dIn\n\u22a2 \u2191{\n        toSubtype :=\n          (HPMap.mk \u2102 { toFun := fun X b\u2081 b\u2082 => X default default * \u2191\u2191\u03c1 b\u2081 b\u2082, map_add' := \u22ef, map_smul' := \u22ef } \u22ef)\n            \u2191default,\n        zero_le := \u22ef, tr := \u22ef } =\n    \u2191\u03c1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/CPTP.lean#L174"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "26811e0c11a911a792ab2a641f73a15391f8d829aa354361b4240727c5f6ebdf"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 211,
        "start_column": 8,
        "end_line": 211,
        "end_column": 13,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ndOut\u2082 : Type u_3\ninst\u271d\u00b9\u00b2 : Fintype dIn\ninst\u271d\u00b9\u00b9 : Fintype dOut\ninst\u271d\u00b9\u2070 : Fintype dOut\u2082\ninst\u271d\u2079 : DecidableEq dIn\ndM : Type u_4\ninst\u271d\u2078 : Fintype dM\ninst\u271d\u2077 : DecidableEq dM\ndM\u2082 : Type u_5\ninst\u271d\u2076 : Fintype dM\u2082\ninst\u271d\u2075 : DecidableEq dM\u2082\n\u03b9 : Type u\ninst\u271d\u2074 : DecidableEq \u03b9\nf\u03b9 : Fintype \u03b9\ndI : \u03b9 \u2192 Type v\ninst\u271d\u00b3 : (i : \u03b9) \u2192 Fintype (dI i)\ninst\u271d\u00b2 : (i : \u03b9) \u2192 DecidableEq (dI i)\ndO : \u03b9 \u2192 Type w\ninst\u271d\u00b9 : (i : \u03b9) \u2192 Fintype (dO i)\ninst\u271d : (i : \u03b9) \u2192 DecidableEq (dO i)\n\u039bi : (i : \u03b9) \u2192 CPTPMap (dI i) (dO i) \u2102\n\u22a2 MatrixMap.IsTracePreserving\n    (((PMap.mk \u2102 (HPMap.mk \u2102 (MatrixMap.piKron fun i => ((((\u039bi i).toPTPMap \u2102).toPMap \u2102).toHPMap \u2102).map) \u22ef) \u22ef).toHPMap\n          \u2102).toLinearMap\n      \u2102)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/CPTP.lean#L211"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "f2ee1ad2da5bdc8824df808555cbc705e864b58669161fc2c968240705017648"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 218,
        "start_column": 2,
        "end_line": 218,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dI : Fin 1 \u2192 Type v\ninst\u271d\u00b3 : Fintype (dI 0)\ninst\u271d\u00b2 : DecidableEq (dI 0)\ndO : Fin 1 \u2192 Type w\ninst\u271d\u00b9 : Fintype (dO 0)\ninst\u271d : DecidableEq (dO 0)\n\u039bi : Fin 1 \u2192 CPTPMap (dI 0) (dO 0) \u2102\n\u22a2 piProd \u039bi = sorry\u2218\u2098(\u039bi 1\u2218\u2098sorry)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/CPTP.lean#L218"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T17:34:48-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "e75f34000c8b3754a7f00e6b4a83c7c50ff2d8620b1d79c33d28957660e2237b"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 229,
        "start_column": 8,
        "end_line": 229,
        "end_column": 13,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ndOut\u2082 : Type u_3\ninst\u271d\u00b9\u00b9 : Fintype dIn\ninst\u271d\u00b9\u2070 : Fintype dOut\ninst\u271d\u2079 : Fintype dOut\u2082\ninst\u271d\u2078 : DecidableEq dIn\ndM : Type u_4\ninst\u271d\u2077 : Fintype dM\ninst\u271d\u2076 : DecidableEq dM\ndM\u2082 : Type u_5\ninst\u271d\u2075 : Fintype dM\u2082\ninst\u271d\u2074 : DecidableEq dM\u2082\nd\u2081 : Type u_6\nd\u2082 : Type u_7\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u22a2 MatrixMap.IsTracePreserving (((PMap.mk \u2102 (HPMap.mk \u2102 sorry \u22ef) \u22ef).toHPMap \u2102).toLinearMap \u2102)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/CPTP.lean#L229"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "71435d9275752942f8a7e36a06f6afd5a88844223207a5d9814d02e3a986c0d4"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 228,
        "start_column": 8,
        "end_line": 228,
        "end_column": 13,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ndOut\u2082 : Type u_3\ninst\u271d\u00b9\u00b9 : Fintype dIn\ninst\u271d\u00b9\u2070 : Fintype dOut\ninst\u271d\u2079 : Fintype dOut\u2082\ninst\u271d\u2078 : DecidableEq dIn\ndM : Type u_4\ninst\u271d\u2077 : Fintype dM\ninst\u271d\u2076 : DecidableEq dM\ndM\u2082 : Type u_5\ninst\u271d\u2075 : Fintype dM\u2082\ninst\u271d\u2074 : DecidableEq dM\u2082\nd\u2081 : Type u_6\nd\u2082 : Type u_7\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u22a2 MatrixMap.IsCompletelyPositive\n    ((((PTPMap.mk \u2102 (PMap.mk \u2102 (HPMap.mk \u2102 sorry \u22ef) \u22ef) \u22ef).toPMap \u2102).toHPMap \u2102).toLinearMap \u2102)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/CPTP.lean#L228"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "b067423c6109b4d3055c39624c1ffe6e526f2c0ec689bdbad360ea3907424dac"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 237,
        "start_column": 2,
        "end_line": 237,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_6\nd\u2082 : Type u_7\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u03c1 : MState (d\u2081 \u00d7 d\u2082)\n\u22a2 traceLeft \u03c1 = \u03c1.traceLeft",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/CPTP.lean#L237"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "fd92133ab790f087993807adbf75528c3a19029ee3bdc2c0067ba6858385d9ba"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 241,
        "start_column": 2,
        "end_line": 241,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_6\nd\u2082 : Type u_7\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u03c1 : MState (d\u2081 \u00d7 d\u2082)\n\u22a2 traceRight \u03c1 = \u03c1.traceRight",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/CPTP.lean#L241"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "69d7b9095c80173b491bb6c6250f640b092193e35d6c023992a0914ff9e8dc06"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 256,
        "start_column": 8,
        "end_line": 256,
        "end_column": 13,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ndOut\u2082 : Type u_3\ninst\u271d\u2078 : Fintype dIn\ninst\u271d\u2077 : Fintype dOut\ninst\u271d\u2076 : Fintype dOut\u2082\ninst\u271d\u2075 : DecidableEq dIn\ndM : Type u_4\ninst\u271d\u2074 : Fintype dM\ninst\u271d\u00b3 : DecidableEq dM\ndM\u2082 : Type u_5\ninst\u271d\u00b2 : Fintype dM\u2082\ninst\u271d\u00b9 : DecidableEq dM\u2082\ninst\u271d : DecidableEq dOut\n\u03c3 : dIn \u2243 dOut\n\u22a2 MatrixMap.IsCompletelyPositive\n    ((((PTPMap.mk \u2102 (PMap.mk \u2102 (HPMap.mk \u2102 { toFun := \u21d1(Matrix.reindex \u03c3 \u03c3), map_add' := \u22ef, map_smul' := \u22ef } \u22ef) \u22ef)\n                  \u22ef).toPMap\n              \u2102).toHPMap\n          \u2102).toLinearMap\n      \u2102)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/CPTP.lean#L256"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "6addb32cf0be4501ca1c920e496eab92d0a58cd2744511d34be47bcf725f7806"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 263,
        "start_column": 2,
        "end_line": 263,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ninst\u271d\u00b3 : Fintype dIn\ninst\u271d\u00b2 : Fintype dOut\ninst\u271d\u00b9 : DecidableEq dIn\ninst\u271d : DecidableEq dOut\n\u03c3 : dIn \u2243 dOut\n\u22a2 \u21d1(of_equiv \u03c3) \u2218 \u21d1(of_equiv \u03c3.symm) = \u21d1id",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/CPTP.lean#L263"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "b21ec79a720da2f4bb94db0c931e6cc3a45daa3324c9dcd0e9f5e53d4d30937e"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 285,
        "start_column": 2,
        "end_line": 285,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_6\nd\u2082 : Type u_7\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u03c1 : MState (d\u2081 \u00d7 d\u2082)\n\u22a2 SWAP \u03c1 = \u03c1.SWAP",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/CPTP.lean#L285"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-26T16:05:31-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "c3c859a9b85e0388616a169ef1f523997ddbb6c7d993db1862798549b9f68de6"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 289,
        "start_column": 2,
        "end_line": 289,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_6\nd\u2082 : Type u_7\nd\u2083 : Type u_8\ninst\u271d\u2075 : Fintype d\u2081\ninst\u271d\u2074 : Fintype d\u2082\ninst\u271d\u00b3 : Fintype d\u2083\ninst\u271d\u00b2 : DecidableEq d\u2081\ninst\u271d\u00b9 : DecidableEq d\u2082\ninst\u271d : DecidableEq d\u2083\n\u03c1 : MState ((d\u2081 \u00d7 d\u2082) \u00d7 d\u2083)\n\u22a2 assoc \u03c1 = \u03c1.assoc",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/CPTP.lean#L289"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "f92a392c6ac8b5c7d229fe23a8eb25c7730ae80da67c97db20a3cbff80a899ac"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 293,
        "start_column": 2,
        "end_line": 293,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_6\nd\u2082 : Type u_7\nd\u2083 : Type u_8\ninst\u271d\u2075 : Fintype d\u2081\ninst\u271d\u2074 : Fintype d\u2082\ninst\u271d\u00b3 : Fintype d\u2083\ninst\u271d\u00b2 : DecidableEq d\u2081\ninst\u271d\u00b9 : DecidableEq d\u2082\ninst\u271d : DecidableEq d\u2083\n\u03c1 : MState (d\u2081 \u00d7 d\u2082 \u00d7 d\u2083)\n\u22a2 assoc' \u03c1 = \u03c1.assoc'",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/CPTP.lean#L293"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-26T16:05:31-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "f649a95dc82655950f85e4092cc7500fb83c8a5895307a48f4c3b40b1fd74988"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 309,
        "start_column": 8,
        "end_line": 309,
        "end_column": 13,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ndOut\u2082 : Type u_3\ninst\u271d\u2077 : Fintype dIn\ninst\u271d\u2076 : Fintype dOut\ninst\u271d\u2075 : Fintype dOut\u2082\ninst\u271d\u2074 : DecidableEq dIn\ndM : Type u_4\ninst\u271d\u00b3 : Fintype dM\ninst\u271d\u00b2 : DecidableEq dM\ndM\u2082 : Type u_5\ninst\u271d\u00b9 : Fintype dM\u2082\ninst\u271d : DecidableEq dM\u2082\nU : \u21a5\ud835\udc14[dIn]\n\u22a2 MatrixMap.IsCompletelyPositive\n    ((((PTPMap.mk \u2102 (PMap.mk \u2102 (HPMap.mk \u2102 { toFun := fun \u03c1 => \u2191U * \u03c1 * \u2191(star U), map_add' := \u22ef, map_smul' := \u22ef } \u22ef) \u22ef)\n                  \u22ef).toPMap\n              \u2102).toHPMap\n          \u2102).toLinearMap\n      \u2102)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/CPTP.lean#L309"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "8b09bd0d85e897f6f9a40efd29fdeb4bcfaaf554ca2793914f0eaca395ce2ba2"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 326,
        "start_column": 2,
        "end_line": 326,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ninst\u271d\u00b9 : Fintype dIn\ninst\u271d : DecidableEq dIn\n\u03c3 : dIn \u2243 dIn\n\u22a2 (of_equiv \u03c3).IsUnitary",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/CPTP.lean#L326"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "7b6de4fa9c8f8c7bf6604aada582479e354df6217284a5d0cd9d6944021d1ddf"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 358,
        "start_column": 8,
        "end_line": 358,
        "end_column": 13,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ndOut\u2082 : Type u_3\ninst\u271d\u2079 : Fintype dIn\ninst\u271d\u2078 : Fintype dOut\ninst\u271d\u2077 : Fintype dOut\u2082\ninst\u271d\u2076 : DecidableEq dIn\ndM : Type u_4\ninst\u271d\u2075 : Fintype dM\ninst\u271d\u2074 : DecidableEq dM\ndM\u2082 : Type u_5\ninst\u271d\u00b3 : Fintype dM\u2082\ninst\u271d\u00b2 : DecidableEq dM\u2082\ninst\u271d\u00b9 : DecidableEq dOut\ninst\u271d : Inhabited dOut\n\u039b : CPTPMap dIn dOut \u2102\n\u22a2 MatrixMap.IsTracePreserving (((PMap.mk \u2102 (HPMap.mk \u2102 sorry \u22ef) \u22ef).toHPMap \u2102).toLinearMap \u2102)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/CPTP.lean#L358"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "a6b04cbc4ff293288c6f5c30a1a4aacdc9c6c37a43d7a0a123158489b754c288"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 357,
        "start_column": 8,
        "end_line": 357,
        "end_column": 13,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ndOut\u2082 : Type u_3\ninst\u271d\u2079 : Fintype dIn\ninst\u271d\u2078 : Fintype dOut\ninst\u271d\u2077 : Fintype dOut\u2082\ninst\u271d\u2076 : DecidableEq dIn\ndM : Type u_4\ninst\u271d\u2075 : Fintype dM\ninst\u271d\u2074 : DecidableEq dM\ndM\u2082 : Type u_5\ninst\u271d\u00b3 : Fintype dM\u2082\ninst\u271d\u00b2 : DecidableEq dM\u2082\ninst\u271d\u00b9 : DecidableEq dOut\ninst\u271d : Inhabited dOut\n\u039b : CPTPMap dIn dOut \u2102\n\u22a2 MatrixMap.IsCompletelyPositive\n    ((((PTPMap.mk \u2102 (PMap.mk \u2102 (HPMap.mk \u2102 sorry \u22ef) \u22ef) \u22ef).toPMap \u2102).toHPMap \u2102).toLinearMap \u2102)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/CPTP.lean#L357"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "bee36f09a2d8a34d5db53fd9ef0782bd663fc98f12010bac6a00e50d543be05f"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 363,
        "start_column": 2,
        "end_line": 363,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ninst\u271d\u2074 : Fintype dIn\ninst\u271d\u00b3 : Fintype dOut\ninst\u271d\u00b2 : DecidableEq dIn\ninst\u271d\u00b9 : DecidableEq dOut\ninst\u271d : Inhabited dOut\n\u039b : CPTPMap dIn dOut \u2102\n\u22a2 \u039b.purify.IsUnitary",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/CPTP.lean#L363"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "c8581373793317398c455df1c9613eb7fbc350e57ea96b400ab59a9db00be4ec"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 378,
        "start_column": 2,
        "end_line": 378,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ninst\u271d\u2074 : Fintype dIn\ninst\u271d\u00b3 : Fintype dOut\ninst\u271d\u00b2 : DecidableEq dIn\ninst\u271d\u00b9 : DecidableEq dOut\ninst\u271d : Inhabited dOut\n\u039b : CPTPMap dIn dOut \u2102\n\u22a2 \u039b =\n    let zero_prep := const_state (MState.pure (Ket.basis default));\n    let prep := id\u2297\u2096zero_prep;\n    let append := of_equiv (Equiv.prodPUnit dIn).symm;\n    traceLeft\u2218\u2098traceLeft\u2218\u2098\u039b.purify\u2218\u2098prep\u2218\u2098append",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/bc073a7e1681d0f6a36c0d6bfeb59c1b626fb066/QuantumInfo/Finite/CPTPMap/CPTP.lean#L378"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-17T04:48:40.887081+00:00"
      },
      "id": "44a55722783d262ae8c386c1a78f5e4c04340a8d3cebbceeb90bd1b29e4d72f5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 60,
        "start_column": 9,
        "end_line": 60,
        "end_column": 14,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b9 : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nWitEquiv : Type\ninst\u271d : ToOracle WitEquiv\nequiv : Witness \u2243 WitEquiv\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 Unit),\n    (OStatement \u2295\u1d65 fun x => WitEquiv) i =\n      match (\u22ef.mpr sorry) i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => (pSpec WitEquiv).Message j",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/ProofSystem/Components.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "bd0544eaa3d5bab728c94c62c186aad257766834225fdc8a76dc4ea1cfe8a54e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 78,
        "start_column": 2,
        "end_line": 78,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b2 : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nWitEquiv : Type\ninst\u271d\u00b9 : ToOracle WitEquiv\nequiv : Witness \u2243 WitEquiv\nrelIn : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Witness \u2192 Prop\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness relIn (toRelOut Statement Witness OStatement WitEquiv equiv relIn)\n    (oracleReduction oSpec Statement Witness OStatement WitEquiv equiv)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/ProofSystem/Components.lean#L78"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "83953f9d8596813666462b9dcd535dc3fb91c3bebe2ecf2e0b59bcd91b09d735"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 138,
        "start_column": 9,
        "end_line": 138,
        "end_column": 14,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d\u00b9 : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 \u03b9\u209b\u1d62),\n    (OStatement \u2295\u1d65 OStatement) i =\n      match sorry i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => (pSpec OStatement).Message j",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/ProofSystem/Components.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "73e5b09768a2bbb6e262e505894fbb34a67d5411e8fd359a8697951933cb5f16"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 164,
        "start_column": 2,
        "end_line": 164,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d\u00b2 : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b9 : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (fun x x_1 => rel x) (relOut OStatement)\n    (oracleReduction oSpec Statement OStatement relComp)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/ProofSystem/Components.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "13a43313b303fa36b28c97f04d700ddb90812234625fc99cb739d9310a9bf3eb"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 255,
        "start_column": 2,
        "end_line": 255,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nOStatement : Type\ninst\u271d\u00b2 : ToOracle OStatement\ninst\u271d\u00b9 : VCVCompatible (Query OStatement)\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (relIn OStatement) (relOut OStatement) (oracleReduction oSpec OStatement)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/ProofSystem/Components.lean#L255"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "4e2d443a4665a07bf64f85b7cd5b135778cb91971027c5bc3fecfd8eadd814ba"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 184,
        "start_column": 2,
        "end_line": 184,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Execution.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let a \u2190 (simulateQ loggingOracle (Prover.runToRound (Fin.last n) stmt wit reduction.prover)).run\n      (fun a_1 => (a_1.1, (reduction.prover.toProverOut.1 a.1.2).2, a.1.1)) <$>\n          (simulateQ loggingOracle (reduction.verifier.verify stmt a.1.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190 Prover.run stmt wit reduction.prover\n    (fun a => (a, __discr.2)) <$> (reduction.verifier.verify stmt __discr.2.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/OracleReduction/Execution.lean#L184"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "79debf0935dcf6c7516bf4117d8bff4681ef4704060ddd2bbd869dc423142b00"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 277,
        "start_column": 2,
        "end_line": 277,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Execution.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\npSpec : ProtocolSpec 1\ninst\u271d : pSpec.ProverOnly\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let __discr \u2190\n        (fun a =>\n              ((reduction.prover.toProverOut.1 a.2).1, (reduction.prover.toProverOut.1 a.2).2, fun i =>\n                match i with\n                | \u27e80, isLt\u27e9 => a.1)) <$>\n            (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp\n              (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n      ((fun a => (a, __discr.2)) <$> reduction.verifier.verify stmt __discr.2.2).liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190\n      (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n    ((fun a =>\n              (a, (reduction.prover.toProverOut.1 __discr.2).2, fun i =>\n                match i with\n                | \u27e80, isLt\u27e9 => __discr.1)) <$>\n            reduction.verifier.verify stmt fun i =>\n              match i with\n              | \u27e80, isLt\u27e9 => __discr.1).liftComp\n        (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/OracleReduction/Execution.lean#L277"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "7b947dd8d913019d5788d5e42db42b1446c020e59a0368c2217dd54085985eee"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 66,
        "start_column": 2,
        "end_line": 66,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Equiv.lean"
      },
      "debug_info": {
        "goal": "\u22a2 (do\n      let _ \u2190 liftM (query 0 ())\n      (fun a => (0, \u2191a)) <$> liftM (query 1 ())) =\n    do\n    let y \u2190 liftM (query 1 ())\n    (fun a => (0, \u2191y)) <$> liftM (query 0 ())",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/OracleReduction/Equiv.lean#L66"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "1468d72d1d1f7c527911b8bca627b4e9cc209de33e04486a461830919778518f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 80,
        "start_column": 4,
        "end_line": 80,
        "end_column": 9,
        "file": "ZKLib/OracleReduction/Equiv.lean"
      },
      "debug_info": {
        "goal": "case h.h.none\n\u22a2 (evalDist (OptionT.bind (liftM (query 1 ())) (OptionT.pure \u2218 fun a => (0, \u2191a)))) none =\n    \u2211' (a : Fin 2), 2\u207b\u00b9 * (evalDist (OptionT.bind (liftM (query 0 ())) (OptionT.pure \u2218 fun a_1 => (0, \u2191a)))) none",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/OracleReduction/Equiv.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-16T15:25:17-04:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "2b9b5022c1872448c81f122c910e9e03a7de6c1f03ba374a86605d0b84f0c80f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 85,
        "start_column": 4,
        "end_line": 85,
        "end_column": 9,
        "file": "ZKLib/OracleReduction/Equiv.lean"
      },
      "debug_info": {
        "goal": "case h.h.some.mk\nx y : \u2115\n\u22a2 (Option.elimM ((PMF.uniformOfFintype (Fin 1)).bind fun a => PMF.pure (some a)) (PMF.pure none)\n        (OptionT.run \u2218 evalDist \u2218 fun x => OptionT.bind (liftM (query 1 ())) (OptionT.pure \u2218 fun a => (0, \u2191a))))\n      (some (x, y)) =\n    (Option.elimM ((PMF.uniformOfFintype (Fin 2)).bind fun a => PMF.pure (some a)) (PMF.pure none)\n        (OptionT.run \u2218 evalDist \u2218 fun y => OptionT.bind (liftM (query 0 ())) (OptionT.pure \u2218 fun a => (0, \u2191y))))\n      (some (x, y))",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/OracleReduction/Equiv.lean#L85"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "f0c7a0f2c19c9da8640dd196cb869be3560d4e5c825271c1825384e4013ccd4c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 102,
        "start_column": 2,
        "end_line": 102,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Equiv.lean"
      },
      "debug_info": {
        "goal": "f : (i : \u2115) \u2192 unifSpec.domain i \u2192 Fin (i + 1)\n\u22a2 (some (f 0 ()) >>=\n      simulateQ\n          {\n            impl := fun {\u03b1} x =>\n              match \u03b1, x with\n              | .(unifSpec.range i), query i t => some (f i t) } \u2218\n        fun x => (fun a => (0, \u2191a)) <$> lift (query 1 ())) =\n    some (f 1 ()) >>=\n      simulateQ\n          {\n            impl := fun {\u03b1} x =>\n              match \u03b1, x with\n              | .(unifSpec.range i), query i t => some (f i t) } \u2218\n        fun y => (fun a => (0, \u2191y)) <$> lift (query 0 ())",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/OracleReduction/Equiv.lean#L102"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "68c9943809e9ee8eed288a6fe4af6b476865f46151baf6b5abb5ec30a3a53329"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 299,
        "start_column": 2,
        "end_line": 299,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/ToOracle.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u2075 : CommRing R\nd : \u2115\ninst\u271d\u2074 : Fintype R\ninst\u271d\u00b3 : DecidableEq R\ninst\u271d\u00b2 : IsDomain R\n\u03c3 : Type\ninst\u271d\u00b9 : Fintype \u03c3\ninst\u271d : DecidableEq \u03c3\na : R[X \u03c3]\nha : \u2200 (s : \u03c3 \u2192\u2080 \u2115), \u00acMvPolynomial.coeff s a = 0 \u2192 \u2200 (i : \u03c3), s i \u2264 d\nb : R[X \u03c3]\nhb : \u2200 (s : \u03c3 \u2192\u2080 \u2115), \u00acMvPolynomial.coeff s b = 0 \u2192 \u2200 (i : \u03c3), s i \u2264 d\nhNe : \u00aca = b\n\u22a2 {q | (MvPolynomial.eval q) a = (MvPolynomial.eval q) b}.card \u2264 Fintype.card \u03c3 * d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/OracleReduction/ToOracle.lean#L299"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "40925cab87f420febd956abf41ccb50934f3c701d56597efeb5ff5b489f8b1d2"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 338,
        "start_column": 2,
        "end_line": 338,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/ToOracle.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\nR : Type\ninst\u271d : CommSemiring R\nm : \u2115\nD : Fin m \u21aa R\np : R[X]\n\u22a2 \u2203 x,\n    ((OptionT.run (mapM (fun i => liftM (query (Sum.inr ()) (D i))) (List.finRange m))).mapM fun {\u03b1} =>\n          (statelessOracle spec [fun x => R[X]]\u2092 fun i q => oracle p q).impl) =\n        pure x \u2227\n      x.getM = pure (List.map (fun i => eval (D i) p) (List.finRange m))",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/OracleReduction/ToOracle.lean#L338"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "340aebdebf43690393bd140f3bdd8ea4a9c892d43bdfe0d40ce8c305562433e2"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 100,
        "start_column": 2,
        "end_line": 100,
        "end_column": 7,
        "file": "ZKLib/CommitmentScheme/Fold.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\np : R[X]\n\u22a2 (splitEvenOdd p).1.natDegree \u2264 p.natDegree / 2",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/CommitmentScheme/Fold.lean#L100"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "b72c705bf1307952399afab9abf8dbaadc8899b032b60360413b0b6d71ba3cdf"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 104,
        "start_column": 2,
        "end_line": 104,
        "end_column": 7,
        "file": "ZKLib/CommitmentScheme/Fold.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\np : R[X]\n\u22a2 (splitEvenOdd p).2.natDegree \u2264 p.natDegree / 2",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/CommitmentScheme/Fold.lean#L104"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "9bfcf9ef21baab1de6de645265d91091bde68e59feaf97a2ca018e257edd6a6e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 116,
        "start_column": 11,
        "end_line": 116,
        "end_column": 16,
        "file": "ZKLib/CommitmentScheme/Fold.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\nn deg : \u2115\n\u03b6 : R\u02e3\nhPrim : IsPrimitiveRoot \u03b6 (2 ^ n)\np : \u21a5R\u2983< 2 * n\u2984[X]\npEven pOdd : R[X]\n\u22a2 pEven \u2208 R\u2983< n\u2984[X]",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/CommitmentScheme/Fold.lean#L116"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "b3291f4f9416c7d6ce4507b4e335cb5b7167765a626f83b8b3fc88e9013f163c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 116,
        "start_column": 26,
        "end_line": 116,
        "end_column": 31,
        "file": "ZKLib/CommitmentScheme/Fold.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\nn deg : \u2115\n\u03b6 : R\u02e3\nhPrim : IsPrimitiveRoot \u03b6 (2 ^ n)\np : \u21a5R\u2983< 2 * n\u2984[X]\npEven pOdd : R[X]\n\u22a2 pOdd \u2208 R\u2983< n\u2984[X]",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/CommitmentScheme/Fold.lean#L116"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "2f0c01a396db59f10698af3a8a9ce76cf347621aa59a58ec7a7ef56b97d59be6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 167,
        "start_column": 4,
        "end_line": 167,
        "end_column": 9,
        "file": "ZKLib/CommitmentScheme/MerkleTree.lean"
      },
      "debug_info": {
        "goal": "case succ\n\u03b1 : Type\ninst\u271d\u00b2 : DecidableEq \u03b1\ninst\u271d\u00b9 : Inhabited \u03b1\ninst\u271d : Fintype \u03b1\nn : \u2115\nleaves : List.Vector \u03b1 (2 ^ (n + 1))\ni : Fin (2 ^ (n + 1))\nih :\n  \u2200 (leaves : List.Vector \u03b1 (2 ^ n)) (i : Fin (2 ^ n)),\n    (buildMerkleTree \u03b1 n leaves).neverFails \u2227\n      \u2200 x \u2208 (buildMerkleTree \u03b1 n leaves).support,\n        verifyProof \u03b1 i (leaves.get i) (x 0).head\n            (List.Vector.ofFn fun layer => (x \u2191\u2191layer).get \u2191\u2191(findNeighbors i layer)) =\n          pure ()\n\u22a2 (do\n        let a \u2190 buildLayer \u03b1 n leaves\n        (fun a =>\n              (leaves.get i, (Cache.cons \u03b1 n leaves a 0).head,\n                List.Vector.ofFn fun layer => (Cache.cons \u03b1 n leaves a \u2191\u2191layer).get \u2191\u2191(findNeighbors i layer))) <$>\n            buildMerkleTree \u03b1 n a).neverFails \u2227\n    \u2200 (a a_1 : \u03b1) (b : List.Vector \u03b1 (n + 1)),\n      \u2200 x \u2208 (buildLayer \u03b1 n leaves).finSupport,\n        (a, a_1, b) \u2208\n            ((fun a =>\n                  (leaves.get i, (Cache.cons \u03b1 n leaves a 0).head,\n                    List.Vector.ofFn fun layer => (Cache.cons \u03b1 n leaves a \u2191\u2191layer).get \u2191\u2191(findNeighbors i layer))) <$>\n                buildMerkleTree \u03b1 n x).finSupport \u2192\n          verifyProof \u03b1 i a a_1 b = pure ()",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/CommitmentScheme/MerkleTree.lean#L167"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-16T15:25:17-04:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "e28255f0b58059827d86c9095db538d715b080ae6d2d3862a3f349ad8f9cdaa0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 186,
        "start_column": 33,
        "end_line": 186,
        "end_column": 38,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\nC : Set (n \u2192 R)\ninst\u271d : Fintype \u2191C\nh : \u00acSubsingleton \u2191C\n\u22a2 \u2016C\u2016\u2080' \u2260 \u22a4",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/CodingTheory/Basic.lean#L186"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "d2e55193f335b88a2bbe2be5c113b6fdb216f30a6f3851cf6717a7b8d41cfcda"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 187,
        "start_column": 4,
        "end_line": 187,
        "end_column": 9,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "case neg\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\nC : Set (n \u2192 R)\ninst\u271d : Fintype \u2191C\nh : \u00acSubsingleton \u2191C\nthis : \u2016C\u2016\u2080' \u2260 \u22a4\n\u22a2 ENat.toNat (Finset.image (fun x => \u0394\u2080(\u2191x.1, \u2191x.2)) {p | \u00acp.1 = p.2}).min =\n    sInf {d | \u2203 u \u2208 C, \u2203 v \u2208 C, \u00acu = v \u2227 \u0394\u2080(u, v) \u2264 d}",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/CodingTheory/Basic.lean#L187"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "9246780803b7437c72ca9a56a80be0f1189fbc977ac56401f4a6ba7d2a6d4715"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 231,
        "start_column": 4,
        "end_line": 231,
        "end_column": 9,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "case e_a.h.h\u2081.intro.intro.intro.intro.intro\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : CommSemiring R\nC : Submodule R (n \u2192 R)\nd : \u2115\nu : n \u2192 R\nhu : u \u2208 C\nv : n \u2192 R\nhv : v \u2208 C\nhuv : \u00acu = v\nhDist : \u0394\u2080(u, v) \u2264 d\n\u22a2 \u2203 u \u2208 C, \u00acu = 0 \u2227 \u2016u\u2016\u2080 \u2264 d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/CodingTheory/Basic.lean#L231"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "2b3edcd8b9abe8ef36eb38792fc2b6c614ed24eefee7eaee803e97603a1ff587"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 234,
        "start_column": 4,
        "end_line": 234,
        "end_column": 9,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "case e_a.h.h\u2082.intro.intro.intro\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : CommSemiring R\nC : Submodule R (n \u2192 R)\nd : \u2115\nu : n \u2192 R\nhu : u \u2208 C\nhNorm : \u00acu = 0\nhDist : \u2016u\u2016\u2080 \u2264 d\n\u22a2 \u2203 u \u2208 C, \u2203 v \u2208 C, \u00acu = v \u2227 \u0394\u2080(u, v) \u2264 d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/CodingTheory/Basic.lean#L234"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "5c5664334c24d30bbbaf66edd515b7a057b888f7170a298ec631485869077c54"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 269,
        "start_column": 67,
        "end_line": 269,
        "end_column": 72,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : Finite R\nC : Set (n \u2192 R)\n\u22a2 card \u2191C \u2264 card R ^ (card n - \u2016C\u2016\u2080 + 1)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/CodingTheory/Basic.lean#L269"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-26T22:44:38-04:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "eb8450b6d8dd51246a49847682322278333cff820436d8c1210e676feedda8b5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 275,
        "start_column": 65,
        "end_line": 275,
        "end_column": 70,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b3 : Fintype n\nR : Type u_2\ninst\u271d\u00b2 : DecidableEq R\ninst\u271d\u00b9 : Finite R\ninst\u271d : DivisionRing R\nC : Submodule R (n \u2192 R)\n\u22a2 Module.finrank R \u21a5C \u2264 card n - \u2016C.carrier\u2016\u2080 + 1",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/CodingTheory/Basic.lean#L275"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-26T22:44:38-04:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "4ae28a5492d8c88b83801d81ebba0e2343cbe02fee5342dcca2849d62606e8ac"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 34,
        "start_column": 14,
        "end_line": 34,
        "end_column": 19,
        "file": "ZKLib/Data/MlPoly/Equiv.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\n\u22a2 Function.LeftInverse ofSpec toSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/MlPoly/Equiv.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "2ef05b21203ae497a895eb4154ce12be4e2d906d57c1db91ba18832fa164f7c4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 35,
        "start_column": 15,
        "end_line": 35,
        "end_column": 20,
        "file": "ZKLib/Data/MlPoly/Equiv.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\n\u22a2 Function.RightInverse ofSpec toSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/MlPoly/Equiv.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "c6c37ac7b1e43aaeb7ec1e40611c2b0e86b0630b0211328f4bbfec4da46fdaa1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 43,
        "start_column": 2,
        "end_line": 43,
        "end_column": 7,
        "file": "ZKLib/Data/MlPoly/Equiv.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\np q : MlPoly R n\n\u22a2 (p + q).toSpec = p.toSpec + q.toSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/MlPoly/Equiv.lean#L43"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "0af4ede1709419e5b91ccbb7acf26d4f592229da8952cf5bc53e9d2928520809"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 47,
        "start_column": 2,
        "end_line": 47,
        "end_column": 7,
        "file": "ZKLib/Data/MlPoly/Equiv.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : CommSemiring R\nn : \u2115\nS : Type u_2\ninst\u271d : CommSemiring S\nf : R \u2192+* S\np : MlPoly R n\nx : Vector S n\n\u22a2 p.eval\u2082 f x = MvPolynomial.eval\u2082 f x.get \u2191p.toSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/MlPoly/Equiv.lean#L47"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "b80a9901350b6ba90a7c4981390edf9114f9d71f880918325cb88945793f75f6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 77,
        "start_column": 2,
        "end_line": 77,
        "end_column": 7,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : AddCommMonoid R\nn : \u2115\na : R\nb : Vector R n\nc : R\nd : Vector R n\n\u22a2 List.foldl (fun x1 x2 => x1 + x2) (a * c) (List.zipWith (fun x1 x2 => x1 * x2) b.toList d.toList) =\n    a * c + Array.foldl (fun x1 x2 => x1 + x2) 0 (Array.zipWith (fun x1 x2 => x1 * x2) b.toArray d.toArray) 0 n",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/MlPoly/Basic.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-14T11:09:39-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "a347fc03c95c2a441ef68ca7b05931f7e9949eb64787de23559a059b8729bda2"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 81,
        "start_column": 2,
        "end_line": 81,
        "end_column": 7,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : AddCommMonoid R\nn : \u2115\na : R\nb : Vector R n\nc : R\nd : Vector R n\n\u22a2 (cons a b).get \u2b1d\u1d65 (cons c d).get = a * c + b.get \u2b1d\u1d65 d.get",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/MlPoly/Basic.lean#L81"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-14T11:09:39-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "01c90f463905d507ac3ae8da0eafb49d89cee7f663e7118a5d49312877aa4e76"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 138,
        "start_column": 20,
        "end_line": 138,
        "end_column": 25,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a b c : MlPoly R n), a + b + c = a + (b + c)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/MlPoly/Basic.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "5c0847ec93bdc8382ee2eb8f1cae3381d4e592867bb68bbc8121a4f2615a81b3"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 141,
        "start_column": 19,
        "end_line": 141,
        "end_column": 24,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a : MlPoly R n), 0 + a = a",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/MlPoly/Basic.lean#L141"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "916a5fe46d459e7646f3d728a710526d93b4d02b5737e0c00fcd3712fc992b94"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 142,
        "start_column": 19,
        "end_line": 142,
        "end_column": 24,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a : MlPoly R n), a + 0 = a",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/MlPoly/Basic.lean#L142"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "838c7350ec46d154a1d927cc9a3887d37c4d320010a690903a8e2f76c8cf306c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 144,
        "start_column": 21,
        "end_line": 144,
        "end_column": 26,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (x : MlPoly R n), nsmul 0 x = 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/MlPoly/Basic.lean#L144"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "6def0b4af6bca5d845a65a18d8e6a4d3d2bb6ef57397229838d96f03494066bd"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 145,
        "start_column": 21,
        "end_line": 145,
        "end_column": 26,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (n_1 : \u2115) (x : MlPoly R n), nsmul (n_1 + 1) x = nsmul n_1 x + x",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/MlPoly/Basic.lean#L145"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "eb3303dc0e7a44e0922f7fcfdc238d312acba6bb560512a3d745a77c5687b9a5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 139,
        "start_column": 19,
        "end_line": 139,
        "end_column": 24,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a b : MlPoly R n), a + b = b + a",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/MlPoly/Basic.lean#L139"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "6b4ea945db36c2c05ad289514c68521fc53e9d3c9b7ba33c7e4248125c4f9463"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 151,
        "start_column": 17,
        "end_line": 151,
        "end_column": 22,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : Semiring R\n\u22a2 \u2200 (b : MlPoly R n), 1 \u2022 b = b",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/MlPoly/Basic.lean#L151"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "102561ce50eb613f7413d428ec140fdcda5bf56fcb34169306e3a7d3a8261eb5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 156,
        "start_column": 18,
        "end_line": 156,
        "end_column": 23,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : Semiring R\n\u22a2 \u2200 (x : MlPoly R n), 0 \u2022 x = 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/MlPoly/Basic.lean#L156"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "6860ffbc851816d86ef8ddbce9c1fecb0e284874d797bb911b2bc42dc1eb8998"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 374,
        "start_column": 43,
        "end_line": 374,
        "end_column": 48,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b1 : Fin n \u2192 Sort u\nl : List \u2115\nn' : \u2115\nl' : List \u2115\nmotive : Fin (n' :: l').sum \u2192 Sort u_1\ncases : (n : \u2115) \u2192 (h : n \u2208 n' :: l') \u2192 (i : Fin n) \u2192 motive (castSum (n' :: l') h i)\ni : Fin (n' + l'.sum)\nhi : \u00ac\u2191i < n'\n\u22a2 \u2191i - n' < l'.sum",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/Math/Fin.lean#L374"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-07T14:25:30-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "575336843cf0910a7ba3fd88639d4400b155f2381695e67b020bb6a0ea26bf92"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 402,
        "start_column": 16,
        "end_line": 402,
        "end_column": 21,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "case ind\nn\u271d n : \u2115\nIH : \u2200 m < n, \u2200 {a : Fin m \u2192 \u2115}, (List.ofFn fun i => List.ofFn (ranges a i)) = (List.ofFn a).ranges\na : Fin n \u2192 \u2115\n\u22a2 (List.ofFn fun i => List.ofFn (ranges a i)) = (List.ofFn a).ranges",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/Math/Fin.lean#L402"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-11T17:39:02-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "fd8c04b3c7da6a248ffb08dc042aa5f8e6236cdd6e1b1fab34a59c914a3f88f9"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 497,
        "start_column": 32,
        "end_line": 497,
        "end_column": 37,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "\u22a2 True",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/Math/Fin.lean#L497"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-11T17:39:02-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "bd14b7ef6e89e332df3e5f1771ad9892e5a29c8e3c98df96ab3ab966fee941a6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 499,
        "start_column": 35,
        "end_line": 499,
        "end_column": 40,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "\u22a2 True",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/Math/Fin.lean#L499"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-11T17:39:02-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "a5eb4e05f6b5d71d16d73689e5b09fc545525acfe3dafb583e8e6744237bec15"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 501,
        "start_column": 36,
        "end_line": 501,
        "end_column": 41,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "\u22a2 True",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/Math/Fin.lean#L501"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-11T17:39:02-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "52b7339dafb19265bf6716cd3f25aa0c51a62f1e778d9ffc7ff293c31d4fe0a1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 557,
        "start_column": 4,
        "end_line": 557,
        "end_column": 9,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "l : List \u2115\nj a : \u2115\nl' : List \u2115\nh : j < a + l'.sum\n\u22a2 \u2203 n, (a :: l').findSum j = some n",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/Math/Fin.lean#L557"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-03-14T00:01:07-04:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "80ab19267bad6a402d7a06010f63a5009d8f1af44bf12e54e18d53411006fbef"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 569,
        "start_column": 80,
        "end_line": 569,
        "end_column": 85,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d\u00b2 : AddMonoid \u03b1\ninst\u271d\u00b9 : Preorder \u03b1\ninst\u271d : DecidableRel fun x1 x2 => x1 < x2\nl : List \u2115\nj : Fin l.sum\n\u22a2 l.findSumIdx \u2191j < l.length",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/Math/Fin.lean#L569"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-03-14T00:01:07-04:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "f2a9b9fc4eda477681a2113119cce8d7d46e74700bc670ebafb371987fcebb53"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 155,
        "start_column": 2,
        "end_line": 155,
        "end_column": 7,
        "file": "ZKLib/Data/Math/Operations.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nunit : \u03b1\nl l' : List \u03b1\nm n n' : \u2115\nh : n \u2264 m\nh' : n' \u2264 m\nhEq : rightpad n unit l = rightpad n' unit l'\nhLen : n \u2294 l.length = n' \u2294 l'.length\n\u22a2 l ++ replicate (n - l.length + (m - n' \u2294 l'.length)) unit =\n    l' ++ replicate (n' - l'.length + (m - n' \u2294 l'.length)) unit",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/Math/Operations.lean#L155"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "9e4ad84014d51e8ea6a4ababcb557123b9edb0f16a038737f0ac6657e06b67d8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 209,
        "start_column": 5,
        "end_line": 209,
        "end_column": 10,
        "file": "ZKLib/Data/Math/Operations.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nl\u2081 l\u2082 : List \u03b1\nunit : \u03b1\n\u22a2 (fun x =>\n        match x with\n        | (x, y) => x = y)\n      (l\u2081.matchSize l\u2082 unit) \u2194\n    \u2200 (i : \u2115), l\u2081.getD i unit = l\u2082.getD i unit",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/Math/Operations.lean#L209"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-14T17:35:17-06:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "579c3698e88a71424fd8c5b29b1079244260803f1e9ad2697d6cff6ff6bcdb3c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 257,
        "start_column": 2,
        "end_line": 257,
        "end_column": 7,
        "file": "ZKLib/Data/Math/Operations.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\na : Array \u03b1\nn : \u2115\nunit : \u03b1\ni : \u2115\nh\u271d : i < (rightpad n unit a).size\nh : i < { toList := List.rightpad n unit a.toList }.size\n\u22a2 { toList := List.rightpad n unit a.toList }[i] = a.getD i unit",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/Math/Operations.lean#L257"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "7cda541f15d11704453a5081e5eaf1802176abf08e65e84d0b14742b9109a8c2"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 391,
        "start_column": 75,
        "end_line": 391,
        "end_column": 80,
        "file": "ZKLib/Data/Math/Operations.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\np : \u03b1 \u2192 Bool\nas : Array \u03b1\nh : (popWhile p as).size > 0\n\u22a2 \u00acp ((popWhile p as).getLast h) = true",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/Math/Operations.lean#L391"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-14T17:35:17-06:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "3e908c7e08927eed27387fa40944b9bd96f7dd6ab3d355219bd483af7a4b5884"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 75,
        "start_column": 2,
        "end_line": 75,
        "end_column": 7,
        "file": "ZKLib/Data/MvPolynomial/Sumcheck.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\n\u03c3 : Type u_3\n\u03c3\u2081 : Type u_4\n\u03c3\u2082 : Type u_5\nx : \u03c3\u2081 \u2192 R\nf : \u03c3 \u2192 \u03c3\u2081 \u2295 \u03c3\u2082\np : R[X \u03c3]\nb : \u03c3\u2081 \u2192\u2080 \u2115\nh : \u00accoeff b ((sumToIter R \u03c3\u2081 \u03c3\u2082) ((rename f) p)) = 0\n\u22a2 (coeff b ((sumToIter R \u03c3\u2081 \u03c3\u2082) ((rename f) p))).degrees \u2264 Multiset.filterMap Sum.getRight? (Multiset.map f p.degrees)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/MvPolynomial/Sumcheck.lean#L75"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-16T12:52:41-06:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "d6ac6103a2cddf4cc1dd88498ccc4e64a9424892b48d143651bbb4bbe0f17dab"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 112,
        "start_column": 2,
        "end_line": 112,
        "end_column": 7,
        "file": "ZKLib/Data/MvPolynomial/Sumcheck.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\nh : n > 0\nD : Fin (n - 1) \u2192 Finset R\np : R[X Fin n]\n\u22a2 ((sumExceptFirst' n h D) p).degree \u2264 \u2191(degreeOf \u27e80, h\u27e9 p)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/MvPolynomial/Sumcheck.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-13T15:50:48-04:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "7f940717f33812d0511334046acefcc3ea0ade7953c35f82f6870a581f687207"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 69,
        "start_column": 58,
        "end_line": 69,
        "end_column": 63,
        "file": "ZKLib/Data/MvPolynomial/Interpolation.lean"
      },
      "debug_info": {
        "goal": "\u03c3 : Type u_1\ninst\u271d\u2074 : DecidableEq \u03c3\ninst\u271d\u00b3 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : IsDomain R\ninst\u271d : DecidableEq R\np : R[X \u03c3]\nhp : p \u2260 0\nS : \u03c3 \u2192 Finset R\n\u22a2 \u2191(#({x \u2208 p.vars.pi S | (eval (extendDomain x)) p = 0})) / \u220f i \u2208 p.vars, \u2191(#(S i)) \u2264\n    \u2211 i \u2208 p.vars, \u2191(degreeOf i p) / \u2191(#(S i))",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/MvPolynomial/Interpolation.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-30T15:40:43-04:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "0e775908c266d1d91ffdafa4b0e987fad54c283e7bd2866b0e450007a2fc97cb"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 171,
        "start_column": 76,
        "end_line": 171,
        "end_column": 81,
        "file": "ZKLib/Data/MvPolynomial/Interpolation.lean"
      },
      "debug_info": {
        "goal": "\u03c3 : Type u_1\ninst\u271d\u00b3 : DecidableEq \u03c3\ninst\u271d\u00b2 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b9 : CommRing R\ninst\u271d : IsDomain R\np q : R[X \u03c3]\nS : \u03c3 \u2192 Finset R\nhDegree : \u2200 (i : \u03c3), degreeOf i p < #(S i)\nhEval : \u2200 x \u2208 piFinset fun i => S i, (eval x) p = (eval x) q\n\u22a2 p = q",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/MvPolynomial/Interpolation.lean#L171"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-30T15:40:43-04:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "fce813a4f29e84b0aeb57db3748a90a5fd83a6e446dc387f6c3b96a339ee6207"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 95,
        "start_column": 16,
        "end_line": 95,
        "end_column": 21,
        "file": "ZKLib/Data/BinaryTowerField/Basic.lean"
      },
      "debug_info": {
        "goal": "case succ\nk : \u2115\na\u271d : k > 0 \u2192 AdjoinRoot (poly k) = Field k\nk_pos : k + 1 > 0\n\u22a2 AdjoinRoot (poly (k + 1)) = Field (k + 1)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/BinaryTowerField/Basic.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-30T10:53:02+05:30",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "7ee12d2cb897b5b8c9ac93cae5d2e3e388af8b1041b8cfd16879fe399ff18844"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 115,
        "start_column": 59,
        "end_line": 115,
        "end_column": 64,
        "file": "ZKLib/Data/BinaryTowerField/Basic.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 Irreducible (poly n)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/BinaryTowerField/Basic.lean#L115"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2024-06-18T17:58:42-04:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "5712654e83c767e21dc682752b53d678c4d793672d57d80313fe9d22cc7fb87a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 197,
        "start_column": 21,
        "end_line": 197,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic-old.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 Function.LeftInverse TropicallyBoundPolynomial.toPolynomial' Polynomial'.toTropicallyBoundPolynomial",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/UniPoly/Basic-old.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-07T14:00:27-04:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "098ee6afe18879eb103d13e33315f115a60f071fac1bbba9e923fe75fab250bb"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 198,
        "start_column": 22,
        "end_line": 198,
        "end_column": 27,
        "file": "ZKLib/Data/UniPoly/Basic-old.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 Function.RightInverse TropicallyBoundPolynomial.toPolynomial' Polynomial'.toTropicallyBoundPolynomial",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/UniPoly/Basic-old.lean#L198"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-07T14:00:27-04:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "f8fd0c1128a8d50ad41194e9766b46c77b767e25e71c77f495689a6a05242fe4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 199,
        "start_column": 21,
        "end_line": 199,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic-old.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 \u2200 (x y : Polynomial' R),\n    { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n            left_inv := \u22ef, right_inv := \u22ef }.toFun\n        (x * y) =\n      { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          x *\n        { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/UniPoly/Basic-old.lean#L199"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-07T14:00:27-04:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "52ed65c1c0da5361b95e5131a44a4fa31c5b78408ef73e36095cef3e0cc8e460"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 200,
        "start_column": 21,
        "end_line": 200,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic-old.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 \u2200 (x y : Polynomial' R),\n    { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n            left_inv := \u22ef, right_inv := \u22ef }.toFun\n        (x + y) =\n      { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          x +\n        { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/UniPoly/Basic-old.lean#L200"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-07T14:00:27-04:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "a4d1c54846db4b6d357a6680ef755312e05c6e2b1086f7b0d5d0b74408c13988"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 571,
        "start_column": 2,
        "end_line": 571,
        "end_column": 7,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "Q : Type u_2\ninst\u271d : Ring Q\np q : UniPoly Q\ni : \u2115\nhi : i < Array.size (p.add_raw q)\n\u22a2 (p ++ mkArray (Array.size q - Array.size p) 0)[i] + (q ++ mkArray (Array.size p - Array.size q) 0)[i] =\n    p[i]?.getD 0 + q[i]?.getD 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/UniPoly/Basic.lean#L571"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "35ed8c290f7623dc046d6497625293ce9ba9f3cdb1b400e345ae0d131a4911f6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 899,
        "start_column": 4,
        "end_line": 899,
        "end_column": 9,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "Q : Type u_2\ninst\u271d : Ring Q\np q r : UniPoly Q\nhpq : p ++ mkArray (Array.size q - Array.size p) 0 = q ++ mkArray (Array.size p - Array.size q) 0\nhqr : q ++ mkArray (Array.size r - Array.size q) 0 = r ++ mkArray (Array.size q - Array.size r) 0\n\u22a2 p ++ mkArray (Array.size r - Array.size p) 0 = r ++ mkArray (Array.size p - Array.size r) 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/UniPoly/Basic.lean#L899"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "c54de3e6c1617b0f89ff81331e9fc350cfe8e4652c3561695f66e8b6acf74b95"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 975,
        "start_column": 6,
        "end_line": 975,
        "end_column": 11,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : Ring R\ninst\u271d : BEq R\np : UniPoly R\n\u22a2 (p.toPoly, Tropical.trop (OrderDual.toDual p.degreeBound)) \u2208 TropicallyBoundPoly R",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/UniPoly/Basic.lean#L975"
      },
      "metadata": {
        "blame_email_hash": "ab200eba5736",
        "blame_date": "2025-03-12T19:59:09-07:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "9dd390bc55633371e590d17f6a0aa3477a7367abf251f345cb26a67a1db31c5b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 1005,
        "start_column": 22,
        "end_line": 1005,
        "end_column": 27,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 Function.RightInverse TropicallyBoundPolynomial.toUniPoly UniPoly.toTropicallyBoundPolynomial",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/UniPoly/Basic.lean#L1005"
      },
      "metadata": {
        "blame_email_hash": "94b4cc0e139f",
        "blame_date": "2024-05-31T16:31:08-04:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "078aebdad57ccc7cc6f4db3b7f8857131cf4344ae86a342c0dd3c92c233695ef"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 1006,
        "start_column": 21,
        "end_line": 1006,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 \u2200 (x y : UniPoly R),\n    { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n            right_inv := \u22ef }.toFun\n        (x * y) =\n      { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          x *\n        { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/UniPoly/Basic.lean#L1006"
      },
      "metadata": {
        "blame_email_hash": "94b4cc0e139f",
        "blame_date": "2024-05-31T16:31:08-04:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "f80b58aa1847d4e051c3c2659fcc36e9ac5a150d1a6997a21ed3426ae81ea886"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 1007,
        "start_column": 21,
        "end_line": 1007,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 \u2200 (x y : UniPoly R),\n    { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n            right_inv := \u22ef }.toFun\n        (x + y) =\n      { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          x +\n        { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/Data/UniPoly/Basic.lean#L1007"
      },
      "metadata": {
        "blame_email_hash": "94b4cc0e139f",
        "blame_date": "2024-05-31T16:31:08-04:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "6a195cecbaaabc3dcdfef44e2869c5457873136568b1730367a32f0ebac6a19c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 254,
        "start_column": 2,
        "end_line": 254,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "case h\nm n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\nT : pSpec\u2081.FullTranscript\nT' : pSpec\u2082.FullTranscript\ni : Fin m\n\u22a2 _root_.cast \u22ef (T i) = (\u22ef \u25b8 T) i",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/OracleReduction/Composition/Sequential.lean#L254"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-07T12:49:22-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "39f6d68475867b4f5a79fde783e309defc8edebc98b3a28971b89c02f4db074e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 556,
        "start_column": 55,
        "end_line": 556,
        "end_column": 60,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u22a2 (compose 0 (fun x => n) fun x => pSpec) = pSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/OracleReduction/Composition/Sequential.lean#L556"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-18T18:57:31+07:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "76c8fe0d51c20f5da87df42c74f14d75a2131551ca2fc826e83ef8c333a8bada"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 572,
        "start_column": 2,
        "end_line": 572,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "m : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\ni : Fin m\n\u22a2 compose (\u2191i + 1) (Fin.take (\u2191i + 2) \u22ef n) (Fin.take (\u2191i + 2) \u22ef pSpec) =\n    cast \u22ef (compose (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) (Fin.take (\u2191i + 1) \u22ef pSpec) ++\u209a pSpec i.succ)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/OracleReduction/Composition/Sequential.lean#L572"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-06T19:22:58-03:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "c45aa1ceac86bc66776b6757faf3b2f5d831b4914ded85ce450e5c7b0104dde9"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 699,
        "start_column": 2,
        "end_line": 699,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "m n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nO\u2098\u2081 : (i : pSpec\u2081.MessageIndex) \u2192 ToOracle (pSpec\u2081.Message i)\nO\u2098\u2082 : (i : pSpec\u2082.MessageIndex) \u2192 ToOracle (pSpec\u2082.Message i)\ninst\u271d\u00b2 : (i : pSpec\u2081.ChallengeIndex) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b9 : (i : pSpec\u2082.ChallengeIndex) \u2192 Sampleable (pSpec\u2082.Challenge i)\ninst\u271d : oSpec.DecidableEq\nP\u2081 : Prover pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nP\u2082 : Prover pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\nstmt : Stmt\u2081\nwit : Wit\u2081\n\u22a2 run stmt wit (P\u2081.append P\u2082) = do\n    let __discr \u2190 liftM (run stmt wit P\u2081)\n    match __discr with\n      | (stmt\u2082, wit\u2082, transcript\u2081) => do\n        let __discr \u2190 liftM (run stmt\u2082 wit\u2082 P\u2082)\n        match __discr with\n          | (stmt\u2083, wit\u2083, transcript\u2082) => pure (stmt\u2083, wit\u2083, transcript\u2081 ++\u209c transcript\u2082)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/OracleReduction/Composition/Sequential.lean#L699"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-28T16:03:02+07:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "3cd929d82afbafe0519e666bf0a1eb948d5af7a6bbebcde8a9270af23001fcfa"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 725,
        "start_column": 89,
        "end_line": 725,
        "end_column": 94,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "m n : \u2115\n\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\ninst\u271d\u00b3 : (i : pSpec\u2081.ChallengeIndex) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b2 : (i : pSpec\u2082.ChallengeIndex) \u2192 Sampleable (pSpec\u2082.Challenge i)\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nrel\u2081 : Stmt\u2081 \u2192 Wit\u2081 \u2192 Prop\nrel\u2082 : Stmt\u2082 \u2192 Wit\u2082 \u2192 Prop\nrel\u2083 : Stmt\u2083 \u2192 Wit\u2083 \u2192 Prop\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nR\u2081 : Reduction pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nR\u2082 : Reduction pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\ncompletenessError\u2081 completenessError\u2082 : \u211d\u22650\nh\u2081 : completeness rel\u2081 rel\u2082 R\u2081 completenessError\u2081\nh\u2082 : completeness rel\u2082 rel\u2083 R\u2082 completenessError\u2082\n\u22a2 completeness rel\u2081 rel\u2083 (R\u2081.append R\u2082) (completenessError\u2081 + completenessError\u2082)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/OracleReduction/Composition/Sequential.lean#L725"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-01T17:09:18-07:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "e5ed7fe43ccd262faa1d0a4103cc77a5dd2561206043a55ea8ce60bb83f938a7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 752,
        "start_column": 38,
        "end_line": 752,
        "end_column": 43,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nm : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\ninst\u271d\u00b2 : (i : Fin (m + 1)) \u2192 (j : (pSpec i).ChallengeIndex) \u2192 Sampleable ((pSpec i).Challenge j)\nStmt Wit : Fin (m + 2) \u2192 Type\nrel : (i : Fin (m + 2)) \u2192 Stmt i \u2192 Wit i \u2192 Prop\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nR : (i : Fin (m + 1)) \u2192 Reduction (pSpec i) oSpec (Stmt i.castSucc) (Wit i.castSucc) (Stmt i.succ) (Wit i.succ)\ncompletenessError : Fin (m + 1) \u2192 \u211d\u22650\nh : \u2200 (i : Fin (m + 1)), completeness (rel i.castSucc) (rel i.succ) (R i) (completenessError i)\n\u22a2 completeness (rel 0) (rel (Fin.last (m + 1))) (compose m n pSpec Stmt Wit R) (\u2211 i, completenessError i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/OracleReduction/Composition/Sequential.lean#L752"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-06T19:22:58-03:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "84b467019a071463d9d24607606c3c5a7163aa9f4d3742079e2d532cbfbc6589"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 151,
        "start_column": 2,
        "end_line": 151,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nP : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (fun a =>\n        (data.fStmtOut (a.2.2.1, (P.toProverOut.1 a.2.1).1), data.fWitOut (a.2.2.2, (P.toProverOut.1 a.2.1).2),\n          a.1)) <$>\n      Fin.induction (pure (default, P.input (data.fStmtIn stmtIn) (data.fWitIn witIn), stmtIn, witIn))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2.1 a, __discr.2.2)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2, __discr.2.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2.1).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n) =\n    (fun a => (data.fStmtOut (stmtIn, (P.toProverOut.1 a.2).1), data.fWitOut (witIn, (P.toProverOut.1 a.2).2), a.1)) <$>\n      Fin.induction (pure (default, P.input (data.fStmtIn stmtIn) (data.fWitIn witIn)))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2 a)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/OracleReduction/Composition/Virtual.lean#L151"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "b370b778123d0cc8193bfde23ae142389f87771c524f1a316f92d36581faad24"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 164,
        "start_column": 2,
        "end_line": 164,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n      (fun a_1 => (a_1, data.fWitOut (witIn, a.2.1), a.2.2)) <$>\n          (Verifier.run stmtIn a.2.2\n                {\n                  verify := fun stmtIn transcript =>\n                    (fun a => data.fStmtOut (stmtIn, a)) <$>\n                      R.verifier.verify (data.fStmtIn stmtIn) transcript }).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 => (data.fStmtOut (stmtIn, a_1), data.fWitOut (witIn, a.2.1), a.2.2)) <$>\n        (Verifier.run (data.fStmtIn stmtIn) a.2.2 R.verifier).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/OracleReduction/Composition/Virtual.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "77ab14602d52fb065d0bcc5c64f1a4852ca8a48d9f3687ca85c06d383276ae27"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 177,
        "start_column": 2,
        "end_line": 177,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let __discr \u2190 Prover.runWithLog stmtIn witIn (Prover.transport data R.prover)\n      (fun a => (a.1, __discr.2.1, __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (Verifier.run stmtIn __discr.2.2.1\n                    {\n                      verify := fun stmtIn transcript =>\n                        (fun a => data.fStmtOut (stmtIn, a)) <$>\n                          R.verifier.verify (data.fStmtIn stmtIn) transcript })).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.runWithLog (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 => (data.fStmtOut (stmtIn, a_1.1), data.fWitOut (witIn, a.2.1), a.2.2.1, a.2.2.2, a_1.2)) <$>\n        (simulateQ loggingOracle (Verifier.run (data.fStmtIn stmtIn) a.2.2.1 R.verifier)).run.liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/OracleReduction/Composition/Virtual.lean#L177"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "fa793210fd491436e2d76c2049af889640375338435899839dffdefed7707c4b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 214,
        "start_column": 2,
        "end_line": 214,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn StmtOut StmtIn' StmtOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nlangIn' : Set StmtIn'\nlangOut' : Set StmtOut'\nsoundnessError : \u211d\u22650\ndata : TransportDataSound StmtIn StmtOut StmtIn' StmtOut' langIn langOut langIn' langOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nh :\n  \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn' WitIn StmtOut' WitOut),\n    \u2200 stmtIn \u2209 langIn',\n      [fun x =>\n          match x with\n          | (stmtOut, fst, snd) => stmtOut \u2209 langOut'|run stmtIn witIn { prover := prover, verifier := V }] \u2264\n        \u2191soundnessError\nstmtIn hStmtIn : Type\nWitIn : stmtIn\nWitOut : Prover pSpec oSpec StmtIn stmtIn StmtOut hStmtIn\nwitIn : StmtIn\nprover : witIn \u2209 langIn\n\u22a2 [fun x =>\n      match x with\n      | (stmtOut, fst, snd) =>\n        stmtOut \u2209\n          langOut|run witIn WitIn { prover := WitOut, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n    \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/OracleReduction/Composition/Virtual.lean#L214"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "6f2e5a4032bd1e1b41a28f7eb531858344da09bff854e57fe664c05bc1008f19"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 228,
        "start_column": 2,
        "end_line": 233,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "case intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nrelIn' : StmtIn' \u2192 WitIn' \u2192 Prop\nrelOut' : StmtOut' \u2192 WitOut' \u2192 Prop\nsoundnessError : \u211d\u22650\ndata :\n  TransportDataKnowledgeSound StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nE : StraightlineExtractor\nh' :\n  \u2200 (stmtIn : StmtIn') (witIn : WitIn') (prover : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'),\n    [fun x =>\n        match x with\n        | (stmtOut, witOut, transcript, proveQueryLog, snd) =>\n          \u00acrelIn' stmtIn (E stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n            relOut' stmtOut witOut|runWithLog stmtIn witIn { prover := prover, verifier := V }] \u2264\n      \u2191soundnessError\n\u22a2 \u2203 extractor,\n    \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n      [fun x =>\n          match x with\n          | (stmtOut, witOut, transcript, proveQueryLog, snd) =>\n            \u00acrelIn stmtIn (extractor stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n              relOut stmtOut\n                witOut|runWithLog stmtIn witIn\n            { prover := prover, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n        \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/OracleReduction/Composition/Virtual.lean#L228"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "ea37302619dd3c071d86145a4b7b330e28d83db691de3a744c9cc89826b21ee5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 277,
        "start_column": 4,
        "end_line": 277,
        "end_column": 9,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "x\u271d\u00b3 : StmtIn\nx\u271d\u00b2 : Unit\nx\u271d\u00b9 : StmtOut'\nx\u271d : Unit\np q : \u2124[X]\nt : \u2124\nf : \u2124[X]\nt' r : \u2124\nhRelOut' : eval r f = t'\nhRelIn : eval 0 p * eval 0 q + eval 1 p * eval 1 q = t\n\u22a2 eval r p * eval r q = t'",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/OracleReduction/Composition/Virtual.lean#L277"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "72e4db3b9883f667def56556eb720912b6281743c3c90ef5401fd75fef809819"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 357,
        "start_column": 2,
        "end_line": 357,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Security/Basic.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nknowledgeError : \u211d\u22650\nhLt : knowledgeError < 1\nextractor : StraightlineExtractor\nhKS :\n  \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n    [fun x =>\n        \u00acrelIn stmtIn (extractor stmtIn x.1 x.2.1 x.2.2.1 x.2.2.2.1) \u2227\n          relOut x.1 x.2.1|runWithLog stmtIn witIn { prover := prover, verifier := verifier }] \u2264\n      \u2191knowledgeError\nWitIn' WitOut' : Type\nwitIn' : WitIn'\nprover : Prover pSpec oSpec StmtIn WitIn' StmtOut WitOut'\nstmtIn : StmtIn\nhStmtIn : \u2200 (x : WitIn), \u00acrelIn stmtIn x\n\u22a2 [fun x => \u2200 (x_1 : WitOut), \u00acrelOut x.1 x_1|run stmtIn witIn' { prover := prover, verifier := verifier }] \u2264\n    \u2191knowledgeError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/OracleReduction/Security/Basic.lean#L357"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "da725f69f0fc76d8199f54c9d93d48f8e87ce88a9a30fba775f2a3a8a79d295d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 378,
        "start_column": 75,
        "end_line": 378,
        "end_column": 80,
        "file": "ZKLib/OracleReduction/Security/Basic.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn StmtOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction langIn langOut verifier\nrbrSoundnessError : pSpec.ChallengeIndex \u2192 \u211d\u22650\n\u22a2 rbrSoundness langIn langOut verifier stateFunction rbrSoundnessError \u2192\n    soundness langIn langOut verifier (\u2211 i, rbrSoundnessError i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/OracleReduction/Security/Basic.lean#L378"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-28T13:43:25-07:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "3f6d19ede322847190cd46f92e61af693eed6f950475d862e46d176d18e49b53"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 389,
        "start_column": 2,
        "end_line": 389,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Security/Basic.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction (Function.language relIn) (Function.language relOut) verifier\nrbrKnowledgeError : pSpec.ChallengeIndex \u2192 \u211d\u22650\n\u22a2 rbrKnowledgeSoundness relIn relOut verifier stateFunction rbrKnowledgeError \u2192\n    rbrSoundness (Function.language relIn) (Function.language relOut) verifier stateFunction rbrKnowledgeError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/OracleReduction/Security/Basic.lean#L389"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-28T13:43:25-07:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "c82601d9b49cd0b89638d55aa6b435003c9dcf0a0e03a1269308546c0d77b733"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 399,
        "start_column": 82,
        "end_line": 399,
        "end_column": 87,
        "file": "ZKLib/OracleReduction/Security/Basic.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction (Function.language relIn) (Function.language relOut) verifier\nrbrKnowledgeError : pSpec.ChallengeIndex \u2192 \u211d\u22650\n\u22a2 rbrKnowledgeSoundness relIn relOut verifier stateFunction rbrKnowledgeError \u2192\n    knowledgeSoundness relIn relOut verifier (\u2211 i, rbrKnowledgeError i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/OracleReduction/Security/Basic.lean#L399"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-28T13:43:25-07:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "3789d3c5be2e45197b44ac92db74b439d8983fb8a18a9825ca99d00614c1a695"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 267,
        "start_column": 6,
        "end_line": 267,
        "end_column": 11,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "case mk.convert_7.left\nR : Type\ninst\u271d\u00b9 : CommSemiring R\nd m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\ntarget : R\noStmt : (i : Unit) \u2192 InputOracleStatement R d i\nhValid : inputRelation R d D (target, oStmt) ()\npoly : R[X]\nhp : poly \u2208 R\u2983\u2264 \u2191d\u2984[X]\nh : oStmt () = \u27e8poly, hp\u27e9\n\u22a2 ((fun a => ((a, fun x => oStmt ()), (), Transcript.snoc a (Transcript.snoc (oStmt ()) default))) <$>\n      liftM (query (Sum.inr \u27e81, \u22ef\u27e9) ())).neverFails",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/ProofSystem/Sumcheck/Basic.lean#L267"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-16T15:25:17-04:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "9a061b4d332823a70ff8e305dcfa3eddcb6789bff2150a0a549454ce29ab0be6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 276,
        "start_column": 27,
        "end_line": 276,
        "end_column": 32,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "case pos\nR : Type\ninst\u271d\u00b9 : CommSemiring R\nd m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\ntarget : R\noStmt : (i : Unit) \u2192 InputOracleStatement R d i\nhValid : inputRelation R d D (target, oStmt) ()\npoly : R[X]\nhp : poly \u2208 R\u2983\u2264 \u2191d\u2984[X]\nh : oStmt () = \u27e8poly, hp\u27e9\nstmt : R\noStmtOut : (i : Unit \u2295 Unit) \u2192 OutputOracleStatement R d i\nfst\u271d : Unit\ntranscript : (pSpec R d).FullTranscript\nh1 : (fun x => oStmt ()) = oStmtOut\nh2 : Transcript.snoc stmt (Transcript.snoc (oStmt ()) default) = transcript\nhEval : \u2211 x, Polynomial.eval (D x) poly = target\n\u22a2 (pure (stmt, fun x => \u27e8poly, hp\u27e9)).neverFailsWhen fun {\u03b1} x => Set.univ",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/ProofSystem/Sumcheck/Basic.lean#L276"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-16T15:25:17-04:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "0ebd0c0c5882a7a973673d0efb3860a32843ff14497dd3d7da0202321e1d75f7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 488,
        "start_column": 2,
        "end_line": 488,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\ninst\u271d : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\nstmt : Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 OracleStatement R n deg i)\ntranscript : FullTranscript ![(Direction.P_to_V, \u21a5R\u2983\u2264 \u2191deg\u2984[X]), (Direction.V_to_P, R)]\nx : (pSpec R deg).getType 0\nhp_i : \u2191(transcript 0) \u2208 R\u2983\u2264 \u2191deg\u2984[X]\nhEq : transcript 0 = \u27e8\u2191(transcript 0), hp_i\u27e9\n\u22a2 (do\n      let a \u2190\n        ((OptionT.run (mapM (fun i => liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (D i))) (List.finRange m))).bind\n                fun __do_lift =>\n                __do_lift.elim (FreeMonad.pure none)\n                  (OptionT.run \u2218 fun evals => do\n                    if evals.sum = stmt.1.target then pure () else failure\n                    (fun a => { target := a, challenges := Fin.snoc stmt.1.challenges (transcript 1) }) <$>\n                        liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (transcript 1)))).mapM\n            fun {\u03b1} => (ToOracle.simOracle2 oSpec stmt.2 transcript.messages).impl\n      (fun a => (a, fun i_1 => stmt.2 i_1)) <$> a.getM) =\n    (fun a =>\n        ({ target := Polynomial.eval (transcript 1) \u2191(transcript 0),\n            challenges := Fin.snoc stmt.1.challenges (transcript 1) },\n          stmt.2)) <$>\n      if \u2211 x, Polynomial.eval (D x) \u2191(transcript 0) = stmt.1.target then pure () else failure",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/ProofSystem/Sumcheck/Basic.lean#L488"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-18T19:07:20+07:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "bb809a4f4688cec79919735b5c4449c008466ce3a4965db17c31b1d2f21b91b4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 505,
        "start_column": 57,
        "end_line": 505,
        "end_column": 62,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "case left\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 OracleStatement R n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast \u22ef)) \u2191(oStmt 0) =\n    target\n\u22a2 (do\n      let x \u2190\n        ({ prover := prover R n deg D oSpec i,\n                        verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.sendMessage\n                \u27e80, \u22ef\u27e9\n                ({ prover := prover R n deg D oSpec i,\n                          verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.input\n                  ({ target := target, challenges := challenge }, oStmt) witIn\u271d)).liftComp\n            (oSpec ++\u2092 [(pSpec R deg).Challenge]\u2092)\n      let a \u2190 liftM (query (Sum.inr \u27e81, \u22ef\u27e9) ())\n      (fun a_1 =>\n            (a_1,\n              ({ prover := prover R n deg D oSpec i,\n                            verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.toProverOut.1\n                  ({ prover := prover R n deg D oSpec i,\n                            verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.receiveChallenge\n                    \u27e81, \u22ef\u27e9 x.2 a)).2,\n              Transcript.snoc a (Transcript.snoc x.1 default))) <$>\n          (Verifier.run ({ target := target, challenges := challenge }, oStmt)\n                (Transcript.snoc a (Transcript.snoc x.1 default))\n                { prover := prover R n deg D oSpec i,\n                      verifier := oracleVerifier R n deg D oSpec i }.toReduction.verifier).liftComp\n            (oSpec ++\u2092 [(pSpec R deg).Challenge]\u2092)).neverFails",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/ProofSystem/Sumcheck/Basic.lean#L505"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "cf759671163a832be0e9872a1c66d07b9e41739b6a5bb1632bdacdc8b311dc48"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 514,
        "start_column": 2,
        "end_line": 514,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "case right\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 OracleStatement R n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast \u22ef)) \u2191(oStmt 0) =\n    target\n\u22a2 \u2200 (a : Statement R n i.succ) (b : (i : Fin 1) \u2192 OracleStatement R n deg i) (a_1 : Unit)\n    (b_1 : (pSpec R deg).FullTranscript),\n    ((a, b), a_1, b_1) \u2208\n        (run ({ target := target, challenges := challenge }, oStmt) witIn\u271d\n            { prover := prover R n deg D oSpec i, verifier := oracleVerifier R n deg D oSpec i }.toReduction).support \u2192\n      match (a, b) with\n      | ({ target := target, challenges := challenges }, oStmt) =>\n        match oStmt 0 with\n        | \u27e8poly, property\u27e9 =>\n          \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n              (MvPolynomial.eval (Fin.append challenges x \u2218 Fin.cast \u22ef)) poly =\n            target",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/ProofSystem/Sumcheck/Basic.lean#L514"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-18T19:07:20+07:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "41448b5baca7e8ae80fafea934011057f51a68a733b680a86b308d3ace043b00"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 563,
        "start_column": 4,
        "end_line": 563,
        "end_column": 9,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "R\u271d : Type\ninst\u271d\u2075 : CommSemiring R\u271d\nn\u271d deg\u271d m\u271d : \u2115\nD\u271d : Fin m\u271d \u21aa R\u271d\n\u03b9\u271d : Type\noSpec\u271d : OracleSpec \u03b9\u271d\ninst\u271d\u2074 : VCVCompatible R\u271d\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni\u271d : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ni : Fin (n + 1)\nstmt : Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 OracleStatement R n deg i)\ntr : Transcript (Fin.last 2) (pSpec R deg)\nhFalse :\n  \u00acrelation R n deg D i.succ ({ target := stmt.1.target, challenges := Fin.snoc stmt.1.challenges (tr 1) }, stmt.2) ()\n\u22a2 \u2200 (a : Statement R n i.succ) (b : (i : Fin 1) \u2192 OracleStatement R n deg i),\n    (a, b) \u2208 (Verifier.run stmt tr (verifier R n deg D oSpec i)).support \u2192\n      \u2200 (x : Unit), \u00acrelation R n deg D i.succ (a, b) x",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/ProofSystem/Sumcheck/Basic.lean#L563"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "6b92cc4d5c14ea6f4e4e4d3f44912dcb04c54efc2add36958590f4c407e1476f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "bump-v4.18.0",
        "commit": "3d36c78ed403906edbf4874f3ab1d99cf0b0520a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 638,
        "start_column": 42,
        "end_line": 638,
        "end_column": 47,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\nn deg m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\n\u22a2 OracleReduction.perfectCompleteness (relIn R n deg D) (relOut R n deg) (reduction R n deg)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/3d36c78ed403906edbf4874f3ab1d99cf0b0520a/ZKLib/ProofSystem/Sumcheck/Basic.lean#L638"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-17T04:56:15.428699+00:00"
      },
      "id": "e0072fbc08090863636d13da839b1fa9734eb5d255a797b007a38aaef30a0e8a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 60,
        "start_column": 9,
        "end_line": 60,
        "end_column": 14,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b9 : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nWitEquiv : Type\ninst\u271d : ToOracle WitEquiv\nequiv : Witness \u2243 WitEquiv\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 Unit),\n    (OStatement \u2295\u1d65 fun x => WitEquiv) i =\n      match (\u22ef.mpr sorry) i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => (pSpec WitEquiv).Message j",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/ProofSystem/Components.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "8cb97b78697f9d3d722d093d71b78752c3c72b97c20005418079521ebadcccd7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 78,
        "start_column": 2,
        "end_line": 78,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b2 : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nWitEquiv : Type\ninst\u271d\u00b9 : ToOracle WitEquiv\nequiv : Witness \u2243 WitEquiv\nrelIn : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Witness \u2192 Prop\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness relIn (toRelOut Statement Witness OStatement WitEquiv equiv relIn)\n    (oracleReduction oSpec Statement Witness OStatement WitEquiv equiv)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/ProofSystem/Components.lean#L78"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "9634e91b97026d4ad9052a45c8fd57dfc3c182faaa5246f71f16313069ecc629"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 138,
        "start_column": 9,
        "end_line": 138,
        "end_column": 14,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d\u00b9 : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 \u03b9\u209b\u1d62),\n    (OStatement \u2295\u1d65 OStatement) i =\n      match sorry i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => (pSpec OStatement).Message j",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/ProofSystem/Components.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "1c0a1df9559a18bb92a7f40930351ea8d0ce8ddd70729616ceccef389450c865"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 164,
        "start_column": 2,
        "end_line": 164,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d\u00b2 : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b9 : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (fun x x_1 => rel x) (relOut OStatement)\n    (oracleReduction oSpec Statement OStatement relComp)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/ProofSystem/Components.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "82e60541b214bc81155e20d2b578480abc213e2150bdf7402666f657eda5586e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 255,
        "start_column": 2,
        "end_line": 255,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nOStatement : Type\ninst\u271d\u00b2 : ToOracle OStatement\ninst\u271d\u00b9 : VCVCompatible (Query OStatement)\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (relIn OStatement) (relOut OStatement) (oracleReduction oSpec OStatement)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/ProofSystem/Components.lean#L255"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "0aab9d6bb82ed7db37f02cd3766e5569ea8b168c3de31c219928e1eb0bdcf428"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 184,
        "start_column": 2,
        "end_line": 184,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Execution.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let a \u2190 (simulateQ loggingOracle (Prover.runToRound (Fin.last n) stmt wit reduction.prover)).run\n      (fun a_1 => (a_1.1, (reduction.prover.toProverOut.1 a.1.2).2, a.1.1)) <$>\n          (simulateQ loggingOracle (reduction.verifier.verify stmt a.1.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190 Prover.run stmt wit reduction.prover\n    (fun a => (a, __discr.2)) <$> (reduction.verifier.verify stmt __discr.2.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Execution.lean#L184"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "2a61074c3ccfcf7f939d457ebb409734caf59d32db16b5c05cbd4516603fa744"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 277,
        "start_column": 2,
        "end_line": 277,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Execution.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\npSpec : ProtocolSpec 1\ninst\u271d : pSpec.ProverOnly\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let __discr \u2190\n        (fun a =>\n              ((reduction.prover.toProverOut.1 a.2).1, (reduction.prover.toProverOut.1 a.2).2, fun i =>\n                match i with\n                | \u27e80, isLt\u27e9 => a.1)) <$>\n            (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp\n              (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n      ((fun a => (a, __discr.2)) <$> reduction.verifier.verify stmt __discr.2.2).liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190\n      (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n    ((fun a =>\n              (a, (reduction.prover.toProverOut.1 __discr.2).2, fun i =>\n                match i with\n                | \u27e80, isLt\u27e9 => __discr.1)) <$>\n            reduction.verifier.verify stmt fun i =>\n              match i with\n              | \u27e80, isLt\u27e9 => __discr.1).liftComp\n        (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Execution.lean#L277"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "fab5e98061abf49a10374597f780921dcb626cfadef0b571a3d9230a1cdd868a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 66,
        "start_column": 2,
        "end_line": 66,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Equiv.lean"
      },
      "debug_info": {
        "goal": "\u22a2 (do\n      let _ \u2190 liftM (query 0 ())\n      (fun a => (0, \u2191a)) <$> liftM (query 1 ())) =\n    do\n    let y \u2190 liftM (query 1 ())\n    (fun a => (0, \u2191y)) <$> liftM (query 0 ())",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Equiv.lean#L66"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "f4d0ac0be92fe45347961a8160754376d63b2b9fda360a4f0e627a056cc7d8c2"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 80,
        "start_column": 4,
        "end_line": 80,
        "end_column": 9,
        "file": "ZKLib/OracleReduction/Equiv.lean"
      },
      "debug_info": {
        "goal": "case h.h.none\n\u22a2 (evalDist (OptionT.bind (liftM (query 1 ())) (OptionT.pure \u2218 fun a => (0, \u2191a)))) none =\n    \u2211' (a : Fin 2), 2\u207b\u00b9 * (evalDist (OptionT.bind (liftM (query 0 ())) (OptionT.pure \u2218 fun a_1 => (0, \u2191a)))) none",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Equiv.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-16T18:04:04-04:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "867ef88cabb2837f4603757e9d65c8825fc376f9abc78016b5f34e2af18a749e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 85,
        "start_column": 4,
        "end_line": 85,
        "end_column": 9,
        "file": "ZKLib/OracleReduction/Equiv.lean"
      },
      "debug_info": {
        "goal": "case h.h.some.mk\nx y : \u2115\n\u22a2 (Option.elimM ((PMF.uniformOfFintype (Fin 1)).bind fun a => PMF.pure (some a)) (PMF.pure none)\n        (OptionT.run \u2218 evalDist \u2218 fun x => OptionT.bind (liftM (query 1 ())) (OptionT.pure \u2218 fun a => (0, \u2191a))))\n      (some (x, y)) =\n    (Option.elimM ((PMF.uniformOfFintype (Fin 2)).bind fun a => PMF.pure (some a)) (PMF.pure none)\n        (OptionT.run \u2218 evalDist \u2218 fun y => OptionT.bind (liftM (query 0 ())) (OptionT.pure \u2218 fun a => (0, \u2191y))))\n      (some (x, y))",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Equiv.lean#L85"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "dee2663601a025a73f7d227a392d783959a114f90f22f3d39d5e1532a1037bcf"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 102,
        "start_column": 2,
        "end_line": 102,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Equiv.lean"
      },
      "debug_info": {
        "goal": "f : (i : \u2115) \u2192 unifSpec.domain i \u2192 Fin (i + 1)\n\u22a2 (some (f 0 ()) >>=\n      simulateQ\n          {\n            impl := fun {\u03b1} x =>\n              match \u03b1, x with\n              | .(unifSpec.range i), query i t => some (f i t) } \u2218\n        fun x => (fun a => (0, \u2191a)) <$> lift (query 1 ())) =\n    some (f 1 ()) >>=\n      simulateQ\n          {\n            impl := fun {\u03b1} x =>\n              match \u03b1, x with\n              | .(unifSpec.range i), query i t => some (f i t) } \u2218\n        fun y => (fun a => (0, \u2191y)) <$> lift (query 0 ())",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Equiv.lean#L102"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "f6342a906709e50704760d92d14d6861495954e630de19b7ceebe6014e365710"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 299,
        "start_column": 2,
        "end_line": 299,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/ToOracle.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u2075 : CommRing R\nd : \u2115\ninst\u271d\u2074 : Fintype R\ninst\u271d\u00b3 : DecidableEq R\ninst\u271d\u00b2 : IsDomain R\n\u03c3 : Type\ninst\u271d\u00b9 : Fintype \u03c3\ninst\u271d : DecidableEq \u03c3\na : R[X \u03c3]\nha : \u2200 (s : \u03c3 \u2192\u2080 \u2115), \u00acMvPolynomial.coeff s a = 0 \u2192 \u2200 (i : \u03c3), s i \u2264 d\nb : R[X \u03c3]\nhb : \u2200 (s : \u03c3 \u2192\u2080 \u2115), \u00acMvPolynomial.coeff s b = 0 \u2192 \u2200 (i : \u03c3), s i \u2264 d\nhNe : \u00aca = b\n\u22a2 {q | (MvPolynomial.eval q) a = (MvPolynomial.eval q) b}.card \u2264 Fintype.card \u03c3 * d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/ToOracle.lean#L299"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "c12f0a50aa0a68c96e495510a09aa4290d5b1d6e08023f14c833f939bd1b27aa"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 338,
        "start_column": 2,
        "end_line": 338,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/ToOracle.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\nR : Type\ninst\u271d : CommSemiring R\nm : \u2115\nD : Fin m \u21aa R\np : R[X]\n\u22a2 \u2203 x,\n    ((OptionT.run (mapM (fun i => liftM (query (Sum.inr ()) (D i))) (List.finRange m))).mapM fun {\u03b1} =>\n          (statelessOracle spec [fun x => R[X]]\u2092 fun i q => oracle p q).impl) =\n        pure x \u2227\n      x.getM = pure (List.map (fun i => eval (D i) p) (List.finRange m))",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/ToOracle.lean#L338"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "72930107b03a92ea272700ff2bbbabe528df66a93e5973d4f6d84b5b3b7d49ec"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 100,
        "start_column": 2,
        "end_line": 100,
        "end_column": 7,
        "file": "ZKLib/CommitmentScheme/Fold.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\np : R[X]\n\u22a2 (splitEvenOdd p).1.natDegree \u2264 p.natDegree / 2",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/CommitmentScheme/Fold.lean#L100"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "398e6f65a5710f6a1a6a7180e6d7304fb9d20d23e4045ca25317a884572f8ef8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 104,
        "start_column": 2,
        "end_line": 104,
        "end_column": 7,
        "file": "ZKLib/CommitmentScheme/Fold.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\np : R[X]\n\u22a2 (splitEvenOdd p).2.natDegree \u2264 p.natDegree / 2",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/CommitmentScheme/Fold.lean#L104"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "faaeb8586861680942a5a876ac17be2f4568fb4106560e1963373cb999682f83"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 116,
        "start_column": 11,
        "end_line": 116,
        "end_column": 16,
        "file": "ZKLib/CommitmentScheme/Fold.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\nn deg : \u2115\n\u03b6 : R\u02e3\nhPrim : IsPrimitiveRoot \u03b6 (2 ^ n)\np : \u21a5R\u2983< 2 * n\u2984[X]\npEven pOdd : R[X]\n\u22a2 pEven \u2208 R\u2983< n\u2984[X]",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/CommitmentScheme/Fold.lean#L116"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "e4e7f3c919e1e0b7a053d288f27e1482ece834f8ce9f2982ba06d382b8a81f0a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 116,
        "start_column": 26,
        "end_line": 116,
        "end_column": 31,
        "file": "ZKLib/CommitmentScheme/Fold.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\nn deg : \u2115\n\u03b6 : R\u02e3\nhPrim : IsPrimitiveRoot \u03b6 (2 ^ n)\np : \u21a5R\u2983< 2 * n\u2984[X]\npEven pOdd : R[X]\n\u22a2 pOdd \u2208 R\u2983< n\u2984[X]",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/CommitmentScheme/Fold.lean#L116"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "284dc3b615fb27012394433b1589974008a4f8b35e4024646efdb8eabc1232a5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 167,
        "start_column": 4,
        "end_line": 167,
        "end_column": 9,
        "file": "ZKLib/CommitmentScheme/MerkleTree.lean"
      },
      "debug_info": {
        "goal": "case succ\n\u03b1 : Type\ninst\u271d\u00b2 : DecidableEq \u03b1\ninst\u271d\u00b9 : Inhabited \u03b1\ninst\u271d : Fintype \u03b1\nn : \u2115\nleaves : List.Vector \u03b1 (2 ^ (n + 1))\ni : Fin (2 ^ (n + 1))\nih :\n  \u2200 (leaves : List.Vector \u03b1 (2 ^ n)) (i : Fin (2 ^ n)),\n    (buildMerkleTree \u03b1 n leaves).neverFails \u2227\n      \u2200 x \u2208 (buildMerkleTree \u03b1 n leaves).support,\n        verifyProof \u03b1 i (leaves.get i) (x 0).head\n            (List.Vector.ofFn fun layer => (x \u2191\u2191layer).get \u2191\u2191(findNeighbors i layer)) =\n          pure ()\n\u22a2 (do\n        let a \u2190 buildLayer \u03b1 n leaves\n        (fun a =>\n              (leaves.get i, (Cache.cons \u03b1 n leaves a 0).head,\n                List.Vector.ofFn fun layer => (Cache.cons \u03b1 n leaves a \u2191\u2191layer).get \u2191\u2191(findNeighbors i layer))) <$>\n            buildMerkleTree \u03b1 n a).neverFails \u2227\n    \u2200 (a a_1 : \u03b1) (b : List.Vector \u03b1 (n + 1)),\n      \u2200 x \u2208 (buildLayer \u03b1 n leaves).finSupport,\n        (a, a_1, b) \u2208\n            ((fun a =>\n                  (leaves.get i, (Cache.cons \u03b1 n leaves a 0).head,\n                    List.Vector.ofFn fun layer => (Cache.cons \u03b1 n leaves a \u2191\u2191layer).get \u2191\u2191(findNeighbors i layer))) <$>\n                buildMerkleTree \u03b1 n x).finSupport \u2192\n          verifyProof \u03b1 i a a_1 b = pure ()",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/CommitmentScheme/MerkleTree.lean#L167"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-16T18:04:04-04:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "48f1c44bf91e7486e69bb0996e88393cf51e38641df150a1e92d302f09a48481"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 186,
        "start_column": 33,
        "end_line": 186,
        "end_column": 38,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\nC : Set (n \u2192 R)\ninst\u271d : Fintype \u2191C\nh : \u00acSubsingleton \u2191C\n\u22a2 \u2016C\u2016\u2080' \u2260 \u22a4",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/CodingTheory/Basic.lean#L186"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "dacf5ebc6b1376fe0080217f9e31453eb7e421cc968f1573ca7a59cda0c96edc"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 187,
        "start_column": 4,
        "end_line": 187,
        "end_column": 9,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "case neg\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\nC : Set (n \u2192 R)\ninst\u271d : Fintype \u2191C\nh : \u00acSubsingleton \u2191C\nthis : \u2016C\u2016\u2080' \u2260 \u22a4\n\u22a2 ENat.toNat (Finset.image (fun x => \u0394\u2080(\u2191x.1, \u2191x.2)) {p | \u00acp.1 = p.2}).min =\n    sInf {d | \u2203 u \u2208 C, \u2203 v \u2208 C, \u00acu = v \u2227 \u0394\u2080(u, v) \u2264 d}",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/CodingTheory/Basic.lean#L187"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "51b69f0957a488cd0be6354c07bef0f80aa35be4964380e1e5511b17da8386b6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 231,
        "start_column": 4,
        "end_line": 231,
        "end_column": 9,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "case e_a.h.h\u2081.intro.intro.intro.intro.intro\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : CommSemiring R\nC : Submodule R (n \u2192 R)\nd : \u2115\nu : n \u2192 R\nhu : u \u2208 C\nv : n \u2192 R\nhv : v \u2208 C\nhuv : \u00acu = v\nhDist : \u0394\u2080(u, v) \u2264 d\n\u22a2 \u2203 u \u2208 C, \u00acu = 0 \u2227 \u2016u\u2016\u2080 \u2264 d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/CodingTheory/Basic.lean#L231"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "1cc7055605da48496889f6ce06e4846ddebce297904deef05ec942747bf5f53c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 234,
        "start_column": 4,
        "end_line": 234,
        "end_column": 9,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "case e_a.h.h\u2082.intro.intro.intro\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : CommSemiring R\nC : Submodule R (n \u2192 R)\nd : \u2115\nu : n \u2192 R\nhu : u \u2208 C\nhNorm : \u00acu = 0\nhDist : \u2016u\u2016\u2080 \u2264 d\n\u22a2 \u2203 u \u2208 C, \u2203 v \u2208 C, \u00acu = v \u2227 \u0394\u2080(u, v) \u2264 d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/CodingTheory/Basic.lean#L234"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "7f4c0d40c3a4a45cd608915568d2f024a059acd9e642cda20f1edd3e5fc8938a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 269,
        "start_column": 67,
        "end_line": 269,
        "end_column": 72,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : Finite R\nC : Set (n \u2192 R)\n\u22a2 card \u2191C \u2264 card R ^ (card n - \u2016C\u2016\u2080 + 1)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/CodingTheory/Basic.lean#L269"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-26T22:44:38-04:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "855f019cf83f3de6c9e9a8b64e72cc31b88bc4fd7dd29895df5d3dd638009218"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 275,
        "start_column": 65,
        "end_line": 275,
        "end_column": 70,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b3 : Fintype n\nR : Type u_2\ninst\u271d\u00b2 : DecidableEq R\ninst\u271d\u00b9 : Finite R\ninst\u271d : DivisionRing R\nC : Submodule R (n \u2192 R)\n\u22a2 Module.finrank R \u21a5C \u2264 card n - \u2016C.carrier\u2016\u2080 + 1",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/CodingTheory/Basic.lean#L275"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-26T22:44:38-04:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "dff5b80e649eb902ea964bacb9d64264de977f15b8cec12ee391d06f06c7d84e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 34,
        "start_column": 14,
        "end_line": 34,
        "end_column": 19,
        "file": "ZKLib/Data/MlPoly/Equiv.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\n\u22a2 Function.LeftInverse ofSpec toSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Equiv.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "fcaa9d066a40e686bf139f2bc730a8e91da92e48a0bf22380586c10bf522c37d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 35,
        "start_column": 15,
        "end_line": 35,
        "end_column": 20,
        "file": "ZKLib/Data/MlPoly/Equiv.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\n\u22a2 Function.RightInverse ofSpec toSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Equiv.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "725d8301545d8cc8bdf58f6190e1faa750f7dbdf3d711cb97bda2fe612e95702"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 43,
        "start_column": 2,
        "end_line": 43,
        "end_column": 7,
        "file": "ZKLib/Data/MlPoly/Equiv.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\np q : MlPoly R n\n\u22a2 (p + q).toSpec = p.toSpec + q.toSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Equiv.lean#L43"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "926c806b883fc6509eb7e9bb9d5247adaefdeb1f88cb66369e9f299eded4f279"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 47,
        "start_column": 2,
        "end_line": 47,
        "end_column": 7,
        "file": "ZKLib/Data/MlPoly/Equiv.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : CommSemiring R\nn : \u2115\nS : Type u_2\ninst\u271d : CommSemiring S\nf : R \u2192+* S\np : MlPoly R n\nx : Vector S n\n\u22a2 p.eval\u2082 f x = MvPolynomial.eval\u2082 f x.get \u2191p.toSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Equiv.lean#L47"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "8089709f1b8b2af9d1632cb694775e26c7b1fad81ae19ceceada9bf6e427659a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 77,
        "start_column": 2,
        "end_line": 77,
        "end_column": 7,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : AddCommMonoid R\nn : \u2115\na : R\nb : Vector R n\nc : R\nd : Vector R n\n\u22a2 List.foldl (fun x1 x2 => x1 + x2) (a * c) (List.zipWith (fun x1 x2 => x1 * x2) b.toList d.toList) =\n    a * c + Array.foldl (fun x1 x2 => x1 + x2) 0 (Array.zipWith (fun x1 x2 => x1 * x2) b.toArray d.toArray) 0 n",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Basic.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-14T11:09:39-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "1e129e8b5002e3ce29406a9966fc7cc34a9f9ccf361d6bb7a2260d1cdf7960bb"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 81,
        "start_column": 2,
        "end_line": 81,
        "end_column": 7,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : AddCommMonoid R\nn : \u2115\na : R\nb : Vector R n\nc : R\nd : Vector R n\n\u22a2 (cons a b).get \u2b1d\u1d65 (cons c d).get = a * c + b.get \u2b1d\u1d65 d.get",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Basic.lean#L81"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-14T11:09:39-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "17c624cb8536c1fd31bfaa33c7773b0e78f80794efa5be69a8d93789089051e0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 138,
        "start_column": 20,
        "end_line": 138,
        "end_column": 25,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a b c : MlPoly R n), a + b + c = a + (b + c)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Basic.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "b93f10377b8380c51bd2a01d6c5e757267f7421fc7585d4324c1fbc2766583cc"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 141,
        "start_column": 19,
        "end_line": 141,
        "end_column": 24,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a : MlPoly R n), 0 + a = a",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Basic.lean#L141"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "a8bbc0b64f1d4c71eee5b2b55b850c6661dcd32d586bf12f7ba937fbcc35ef24"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 142,
        "start_column": 19,
        "end_line": 142,
        "end_column": 24,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a : MlPoly R n), a + 0 = a",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Basic.lean#L142"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "5c5bbe154be89a1d1c59d015bc6dc2ea6e669184d5e72448a38b20e06b5ca5cf"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 144,
        "start_column": 21,
        "end_line": 144,
        "end_column": 26,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (x : MlPoly R n), nsmul 0 x = 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Basic.lean#L144"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "9bf47c9f3a89bc4f573202feac157e8113dc9e0c3bb631b71e14a53cf2389cfd"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 145,
        "start_column": 21,
        "end_line": 145,
        "end_column": 26,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (n_1 : \u2115) (x : MlPoly R n), nsmul (n_1 + 1) x = nsmul n_1 x + x",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Basic.lean#L145"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "28daee58a5bb6bcad2ab52a0e7a20fb13f95b3b52f88acae8485fd992b7f094b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 139,
        "start_column": 19,
        "end_line": 139,
        "end_column": 24,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a b : MlPoly R n), a + b = b + a",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Basic.lean#L139"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "fd85abed85310036960ca68ade7d221d4327542205512b2e31703947bba70bb7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 151,
        "start_column": 17,
        "end_line": 151,
        "end_column": 22,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : Semiring R\n\u22a2 \u2200 (b : MlPoly R n), 1 \u2022 b = b",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Basic.lean#L151"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "e6732032e50a127802d4ebca4fe768993c3543eefbd87a0f0b9cca2746837a3d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 156,
        "start_column": 18,
        "end_line": 156,
        "end_column": 23,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : Semiring R\n\u22a2 \u2200 (x : MlPoly R n), 0 \u2022 x = 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Basic.lean#L156"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "73a6a6eb2a2471af8f722321d35fdf1a49efd5173ef277f2bfbe40a01bff70c7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 374,
        "start_column": 43,
        "end_line": 374,
        "end_column": 48,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b1 : Fin n \u2192 Sort u\nl : List \u2115\nn' : \u2115\nl' : List \u2115\nmotive : Fin (n' :: l').sum \u2192 Sort u_1\ncases : (n : \u2115) \u2192 (h : n \u2208 n' :: l') \u2192 (i : Fin n) \u2192 motive (castSum (n' :: l') h i)\ni : Fin (n' + l'.sum)\nhi : \u00ac\u2191i < n'\n\u22a2 \u2191i - n' < l'.sum",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/Math/Fin.lean#L374"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-07T14:25:30-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "214ee1a76b4bbb748254a4b76847a67ece815b0b1d7f6ed8d0e9fbe6f1407141"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 402,
        "start_column": 16,
        "end_line": 402,
        "end_column": 21,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "case ind\nn\u271d n : \u2115\nIH : \u2200 m < n, \u2200 {a : Fin m \u2192 \u2115}, (List.ofFn fun i => List.ofFn (ranges a i)) = (List.ofFn a).ranges\na : Fin n \u2192 \u2115\n\u22a2 (List.ofFn fun i => List.ofFn (ranges a i)) = (List.ofFn a).ranges",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/Math/Fin.lean#L402"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-11T17:39:02-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "e138643b4d9e11fcd8e677a6b10deff8893a4c2e77ba2822351c5e41d97907c9"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 497,
        "start_column": 32,
        "end_line": 497,
        "end_column": 37,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "\u22a2 True",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/Math/Fin.lean#L497"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-11T17:39:02-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "a359434336781b72d6e499df4e8d9ace778413e080f9667acb207aa5b057ba2f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 499,
        "start_column": 35,
        "end_line": 499,
        "end_column": 40,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "\u22a2 True",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/Math/Fin.lean#L499"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-11T17:39:02-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "cd2c58df2bb28c1e6f94fa0d47939e557e1b904cc4f119ea8dffb86582be8f2c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 501,
        "start_column": 36,
        "end_line": 501,
        "end_column": 41,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "\u22a2 True",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/Math/Fin.lean#L501"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-11T17:39:02-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "558d7356931f3ae7136d491a9bd03a10ad6682b3a80e5dfb4a83cba6e320f33c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 557,
        "start_column": 4,
        "end_line": 557,
        "end_column": 9,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "l : List \u2115\nj a : \u2115\nl' : List \u2115\nh : j < a + l'.sum\n\u22a2 \u2203 n, (a :: l').findSum j = some n",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/Math/Fin.lean#L557"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-03-14T00:01:07-04:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "b4bc010562a47797680ac9d8113c579280b21381e27e060101f20950bb78aa85"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 569,
        "start_column": 80,
        "end_line": 569,
        "end_column": 85,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d\u00b2 : AddMonoid \u03b1\ninst\u271d\u00b9 : Preorder \u03b1\ninst\u271d : DecidableRel fun x1 x2 => x1 < x2\nl : List \u2115\nj : Fin l.sum\n\u22a2 l.findSumIdx \u2191j < l.length",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/Math/Fin.lean#L569"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-03-14T00:01:07-04:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "2961c19464dd280d3a7b4f8eb9b78f891f8cfa2fd9bf0731976f9911f7ce7256"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 155,
        "start_column": 2,
        "end_line": 155,
        "end_column": 7,
        "file": "ZKLib/Data/Math/Operations.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nunit : \u03b1\nl l' : List \u03b1\nm n n' : \u2115\nh : n \u2264 m\nh' : n' \u2264 m\nhEq : rightpad n unit l = rightpad n' unit l'\nhLen : n \u2294 l.length = n' \u2294 l'.length\n\u22a2 l ++ replicate (n - l.length + (m - n' \u2294 l'.length)) unit =\n    l' ++ replicate (n' - l'.length + (m - n' \u2294 l'.length)) unit",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/Math/Operations.lean#L155"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "bc49dc653fdf3fbc6ee91a6a8e3617512f2a43a96c49727595ce752c937954ed"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 209,
        "start_column": 5,
        "end_line": 209,
        "end_column": 10,
        "file": "ZKLib/Data/Math/Operations.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nl\u2081 l\u2082 : List \u03b1\nunit : \u03b1\n\u22a2 (fun x =>\n        match x with\n        | (x, y) => x = y)\n      (l\u2081.matchSize l\u2082 unit) \u2194\n    \u2200 (i : \u2115), l\u2081.getD i unit = l\u2082.getD i unit",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/Math/Operations.lean#L209"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-14T17:35:17-06:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "f620d9036c8954c4b55eec5981cfbfc26e62acb31cdc7f1d085b875332925088"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 257,
        "start_column": 2,
        "end_line": 257,
        "end_column": 7,
        "file": "ZKLib/Data/Math/Operations.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\na : Array \u03b1\nn : \u2115\nunit : \u03b1\ni : \u2115\nh\u271d : i < (rightpad n unit a).size\nh : i < { toList := List.rightpad n unit a.toList }.size\n\u22a2 { toList := List.rightpad n unit a.toList }[i] = a.getD i unit",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/Math/Operations.lean#L257"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "57f9e08fb26b7ec327de80540c5a2a84067cd974339a628e8e1ae4681a9586c8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 391,
        "start_column": 75,
        "end_line": 391,
        "end_column": 80,
        "file": "ZKLib/Data/Math/Operations.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\np : \u03b1 \u2192 Bool\nas : Array \u03b1\nh : (popWhile p as).size > 0\n\u22a2 \u00acp ((popWhile p as).getLast h) = true",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/Math/Operations.lean#L391"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-14T17:35:17-06:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "93224091465864a0a764b0efab4cea81d9be710151b811beec38fed30bb1c57b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 75,
        "start_column": 2,
        "end_line": 75,
        "end_column": 7,
        "file": "ZKLib/Data/MvPolynomial/Sumcheck.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\n\u03c3 : Type u_3\n\u03c3\u2081 : Type u_4\n\u03c3\u2082 : Type u_5\nx : \u03c3\u2081 \u2192 R\nf : \u03c3 \u2192 \u03c3\u2081 \u2295 \u03c3\u2082\np : R[X \u03c3]\nb : \u03c3\u2081 \u2192\u2080 \u2115\nh : \u00accoeff b ((sumToIter R \u03c3\u2081 \u03c3\u2082) ((rename f) p)) = 0\n\u22a2 (coeff b ((sumToIter R \u03c3\u2081 \u03c3\u2082) ((rename f) p))).degrees \u2264 Multiset.filterMap Sum.getRight? (Multiset.map f p.degrees)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MvPolynomial/Sumcheck.lean#L75"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-16T12:52:41-06:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "39779d770ef5767858c06d71b8643336568fb6fe7352da7baa0fd2955f5af4c1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 112,
        "start_column": 2,
        "end_line": 112,
        "end_column": 7,
        "file": "ZKLib/Data/MvPolynomial/Sumcheck.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\nh : n > 0\nD : Fin (n - 1) \u2192 Finset R\np : R[X Fin n]\n\u22a2 ((sumExceptFirst' n h D) p).degree \u2264 \u2191(degreeOf \u27e80, h\u27e9 p)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MvPolynomial/Sumcheck.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-13T15:50:48-04:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "c7b9ff003baf617406911f115aeb455ac6753c693d43f1bd51da74e9a2adca73"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 69,
        "start_column": 58,
        "end_line": 69,
        "end_column": 63,
        "file": "ZKLib/Data/MvPolynomial/Interpolation.lean"
      },
      "debug_info": {
        "goal": "\u03c3 : Type u_1\ninst\u271d\u2074 : DecidableEq \u03c3\ninst\u271d\u00b3 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : IsDomain R\ninst\u271d : DecidableEq R\np : R[X \u03c3]\nhp : p \u2260 0\nS : \u03c3 \u2192 Finset R\n\u22a2 \u2191(#({x \u2208 p.vars.pi S | (eval (extendDomain x)) p = 0})) / \u220f i \u2208 p.vars, \u2191(#(S i)) \u2264\n    \u2211 i \u2208 p.vars, \u2191(degreeOf i p) / \u2191(#(S i))",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MvPolynomial/Interpolation.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-30T15:40:43-04:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "82763d1f7629bd1d20391fd09c4a89771060e58ff693ca99d863ca7fa235b6da"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 171,
        "start_column": 76,
        "end_line": 171,
        "end_column": 81,
        "file": "ZKLib/Data/MvPolynomial/Interpolation.lean"
      },
      "debug_info": {
        "goal": "\u03c3 : Type u_1\ninst\u271d\u00b3 : DecidableEq \u03c3\ninst\u271d\u00b2 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b9 : CommRing R\ninst\u271d : IsDomain R\np q : R[X \u03c3]\nS : \u03c3 \u2192 Finset R\nhDegree : \u2200 (i : \u03c3), degreeOf i p < #(S i)\nhEval : \u2200 x \u2208 piFinset fun i => S i, (eval x) p = (eval x) q\n\u22a2 p = q",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MvPolynomial/Interpolation.lean#L171"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-30T15:40:43-04:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "4168775d5eabe89d7c2e929539cf94648329f8781c3edea59dc92477588e245d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 95,
        "start_column": 16,
        "end_line": 95,
        "end_column": 21,
        "file": "ZKLib/Data/BinaryTowerField/Basic.lean"
      },
      "debug_info": {
        "goal": "case succ\nk : \u2115\na\u271d : k > 0 \u2192 AdjoinRoot (poly k) = Field k\nk_pos : k + 1 > 0\n\u22a2 AdjoinRoot (poly (k + 1)) = Field (k + 1)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/BinaryTowerField/Basic.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-30T10:53:02+05:30",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "97c240f7bd1de4eae3cb19a7a4ced3081ae03ead22575317ac855c400b2ff065"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 115,
        "start_column": 59,
        "end_line": 115,
        "end_column": 64,
        "file": "ZKLib/Data/BinaryTowerField/Basic.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 Irreducible (poly n)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/BinaryTowerField/Basic.lean#L115"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2024-06-18T17:58:42-04:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "c69ab22003c59445085c5189b2e6c4bd4c1ea8390c8703ad2ddfc4ea9da3e2f4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 197,
        "start_column": 21,
        "end_line": 197,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic-old.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 Function.LeftInverse TropicallyBoundPolynomial.toPolynomial' Polynomial'.toTropicallyBoundPolynomial",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/UniPoly/Basic-old.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-07T14:00:27-04:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "36ce9236de4de3779051a9dd596d1b535319e10c123528477824b4fac03e19df"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 198,
        "start_column": 22,
        "end_line": 198,
        "end_column": 27,
        "file": "ZKLib/Data/UniPoly/Basic-old.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 Function.RightInverse TropicallyBoundPolynomial.toPolynomial' Polynomial'.toTropicallyBoundPolynomial",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/UniPoly/Basic-old.lean#L198"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-07T14:00:27-04:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "037cf6623f0a6e9ddb5241245c970c1d2a8c5b47bbb2639ee3e8e7ac2ab1c78c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 199,
        "start_column": 21,
        "end_line": 199,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic-old.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 \u2200 (x y : Polynomial' R),\n    { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n            left_inv := \u22ef, right_inv := \u22ef }.toFun\n        (x * y) =\n      { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          x *\n        { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/UniPoly/Basic-old.lean#L199"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-07T14:00:27-04:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "4c70f2c9540b02f926bd873403674ed36e36f5b0f21f7b7360d431f90023af61"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 200,
        "start_column": 21,
        "end_line": 200,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic-old.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 \u2200 (x y : Polynomial' R),\n    { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n            left_inv := \u22ef, right_inv := \u22ef }.toFun\n        (x + y) =\n      { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          x +\n        { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/UniPoly/Basic-old.lean#L200"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-07T14:00:27-04:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "4811eb58b4dc66a9fd940428d4dbbb3d02fcb7fe2054db44110e08a2edc4bb5e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 571,
        "start_column": 2,
        "end_line": 571,
        "end_column": 7,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "Q : Type u_2\ninst\u271d : Ring Q\np q : UniPoly Q\ni : \u2115\nhi : i < Array.size (p.add_raw q)\n\u22a2 (p ++ mkArray (Array.size q - Array.size p) 0)[i] + (q ++ mkArray (Array.size p - Array.size q) 0)[i] =\n    p[i]?.getD 0 + q[i]?.getD 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/UniPoly/Basic.lean#L571"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "7f207f71aadf68db2743f84356ed04011f93c426a25f093b3e17b4b63750e725"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 899,
        "start_column": 4,
        "end_line": 899,
        "end_column": 9,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "Q : Type u_2\ninst\u271d : Ring Q\np q r : UniPoly Q\nhpq : p ++ mkArray (Array.size q - Array.size p) 0 = q ++ mkArray (Array.size p - Array.size q) 0\nhqr : q ++ mkArray (Array.size r - Array.size q) 0 = r ++ mkArray (Array.size q - Array.size r) 0\n\u22a2 p ++ mkArray (Array.size r - Array.size p) 0 = r ++ mkArray (Array.size p - Array.size r) 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/UniPoly/Basic.lean#L899"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "d653c43c4680286d70b3cd649fa8ae34686cec73fe771d331f643bd925560d2f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 975,
        "start_column": 6,
        "end_line": 975,
        "end_column": 11,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : Ring R\ninst\u271d : BEq R\np : UniPoly R\n\u22a2 (p.toPoly, Tropical.trop (OrderDual.toDual p.degreeBound)) \u2208 TropicallyBoundPoly R",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/UniPoly/Basic.lean#L975"
      },
      "metadata": {
        "blame_email_hash": "ab200eba5736",
        "blame_date": "2025-03-12T19:59:09-07:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "6a72e89ad349e60dfb91dfbedfc71d3580c075bbf9a9847832b35b64c2310816"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 1005,
        "start_column": 22,
        "end_line": 1005,
        "end_column": 27,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 Function.RightInverse TropicallyBoundPolynomial.toUniPoly UniPoly.toTropicallyBoundPolynomial",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/UniPoly/Basic.lean#L1005"
      },
      "metadata": {
        "blame_email_hash": "94b4cc0e139f",
        "blame_date": "2024-05-31T16:31:08-04:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "1d27d724b46c893004f2757e87e4dc9349f66fd2224f46b6b54dff851f10f78d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 1006,
        "start_column": 21,
        "end_line": 1006,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 \u2200 (x y : UniPoly R),\n    { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n            right_inv := \u22ef }.toFun\n        (x * y) =\n      { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          x *\n        { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/UniPoly/Basic.lean#L1006"
      },
      "metadata": {
        "blame_email_hash": "94b4cc0e139f",
        "blame_date": "2024-05-31T16:31:08-04:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "868a74af8d690830dfe4df2156db720b6107cdfe58693a0aa08410d92c76526f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 1007,
        "start_column": 21,
        "end_line": 1007,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 \u2200 (x y : UniPoly R),\n    { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n            right_inv := \u22ef }.toFun\n        (x + y) =\n      { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          x +\n        { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/UniPoly/Basic.lean#L1007"
      },
      "metadata": {
        "blame_email_hash": "94b4cc0e139f",
        "blame_date": "2024-05-31T16:31:08-04:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "ee2f2fed64f70189aa9b0eb324ecf91dbee0cb9d3231f77af4335dd48cf963b5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 254,
        "start_column": 2,
        "end_line": 254,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "case h\nm n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\nT : pSpec\u2081.FullTranscript\nT' : pSpec\u2082.FullTranscript\ni : Fin m\n\u22a2 _root_.cast \u22ef (T i) = (\u22ef \u25b8 T) i",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Composition/Sequential.lean#L254"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-07T12:49:22-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "439831572b581e2b542aa6c97dc80e7e28f347fa3f48d8380cba7907d888c09a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 556,
        "start_column": 55,
        "end_line": 556,
        "end_column": 60,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u22a2 (compose 0 (fun x => n) fun x => pSpec) = pSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Composition/Sequential.lean#L556"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-18T18:57:31+07:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "59ea45d0aea261d46664a23e15f1bdb6b51a612dc009b863a05e53da0faf959e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 572,
        "start_column": 2,
        "end_line": 572,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "m : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\ni : Fin m\n\u22a2 compose (\u2191i + 1) (Fin.take (\u2191i + 2) \u22ef n) (Fin.take (\u2191i + 2) \u22ef pSpec) =\n    cast \u22ef (compose (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) (Fin.take (\u2191i + 1) \u22ef pSpec) ++\u209a pSpec i.succ)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Composition/Sequential.lean#L572"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-06T19:22:58-03:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "2e1cae3fd63b29e481a2bb6faa02191c7c71c24dc8479a31dc5c3b61cb2af796"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 699,
        "start_column": 2,
        "end_line": 699,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "m n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nO\u2098\u2081 : (i : pSpec\u2081.MessageIndex) \u2192 ToOracle (pSpec\u2081.Message i)\nO\u2098\u2082 : (i : pSpec\u2082.MessageIndex) \u2192 ToOracle (pSpec\u2082.Message i)\ninst\u271d\u00b2 : (i : pSpec\u2081.ChallengeIndex) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b9 : (i : pSpec\u2082.ChallengeIndex) \u2192 Sampleable (pSpec\u2082.Challenge i)\ninst\u271d : oSpec.DecidableEq\nP\u2081 : Prover pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nP\u2082 : Prover pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\nstmt : Stmt\u2081\nwit : Wit\u2081\n\u22a2 run stmt wit (P\u2081.append P\u2082) = do\n    let __discr \u2190 liftM (run stmt wit P\u2081)\n    match __discr with\n      | (stmt\u2082, wit\u2082, transcript\u2081) => do\n        let __discr \u2190 liftM (run stmt\u2082 wit\u2082 P\u2082)\n        match __discr with\n          | (stmt\u2083, wit\u2083, transcript\u2082) => pure (stmt\u2083, wit\u2083, transcript\u2081 ++\u209c transcript\u2082)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Composition/Sequential.lean#L699"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-28T16:03:02+07:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "40337c783acfc9bdb0d132155430deaa0cc411b2d936c868f824f92d25ce632c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 725,
        "start_column": 89,
        "end_line": 725,
        "end_column": 94,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "m n : \u2115\n\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\ninst\u271d\u00b3 : (i : pSpec\u2081.ChallengeIndex) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b2 : (i : pSpec\u2082.ChallengeIndex) \u2192 Sampleable (pSpec\u2082.Challenge i)\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nrel\u2081 : Stmt\u2081 \u2192 Wit\u2081 \u2192 Prop\nrel\u2082 : Stmt\u2082 \u2192 Wit\u2082 \u2192 Prop\nrel\u2083 : Stmt\u2083 \u2192 Wit\u2083 \u2192 Prop\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nR\u2081 : Reduction pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nR\u2082 : Reduction pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\ncompletenessError\u2081 completenessError\u2082 : \u211d\u22650\nh\u2081 : completeness rel\u2081 rel\u2082 R\u2081 completenessError\u2081\nh\u2082 : completeness rel\u2082 rel\u2083 R\u2082 completenessError\u2082\n\u22a2 completeness rel\u2081 rel\u2083 (R\u2081.append R\u2082) (completenessError\u2081 + completenessError\u2082)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Composition/Sequential.lean#L725"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-01T17:09:18-07:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "32c7547819c47c0e4d99a274f95cf8fe22dfdcdbf2f307998112268e4b35b3a4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 752,
        "start_column": 38,
        "end_line": 752,
        "end_column": 43,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nm : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\ninst\u271d\u00b2 : (i : Fin (m + 1)) \u2192 (j : (pSpec i).ChallengeIndex) \u2192 Sampleable ((pSpec i).Challenge j)\nStmt Wit : Fin (m + 2) \u2192 Type\nrel : (i : Fin (m + 2)) \u2192 Stmt i \u2192 Wit i \u2192 Prop\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nR : (i : Fin (m + 1)) \u2192 Reduction (pSpec i) oSpec (Stmt i.castSucc) (Wit i.castSucc) (Stmt i.succ) (Wit i.succ)\ncompletenessError : Fin (m + 1) \u2192 \u211d\u22650\nh : \u2200 (i : Fin (m + 1)), completeness (rel i.castSucc) (rel i.succ) (R i) (completenessError i)\n\u22a2 completeness (rel 0) (rel (Fin.last (m + 1))) (compose m n pSpec Stmt Wit R) (\u2211 i, completenessError i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Composition/Sequential.lean#L752"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-06T19:22:58-03:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "5ad15e47052bde9d775acbcee25da649426939bf7d782a58d9ace2baee2ed9f2"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 151,
        "start_column": 2,
        "end_line": 151,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nP : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (fun a =>\n        (data.fStmtOut (a.2.2.1, (P.toProverOut.1 a.2.1).1), data.fWitOut (a.2.2.2, (P.toProverOut.1 a.2.1).2),\n          a.1)) <$>\n      Fin.induction (pure (default, P.input (data.fStmtIn stmtIn) (data.fWitIn witIn), stmtIn, witIn))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2.1 a, __discr.2.2)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2, __discr.2.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2.1).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n) =\n    (fun a => (data.fStmtOut (stmtIn, (P.toProverOut.1 a.2).1), data.fWitOut (witIn, (P.toProverOut.1 a.2).2), a.1)) <$>\n      Fin.induction (pure (default, P.input (data.fStmtIn stmtIn) (data.fWitIn witIn)))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2 a)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Composition/Virtual.lean#L151"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "41a524566b78037a1766cdd4744e36393ec6e4d95edc0718cb75c69061bd5da9"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 164,
        "start_column": 2,
        "end_line": 164,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n      (fun a_1 => (a_1, data.fWitOut (witIn, a.2.1), a.2.2)) <$>\n          (Verifier.run stmtIn a.2.2\n                {\n                  verify := fun stmtIn transcript =>\n                    (fun a => data.fStmtOut (stmtIn, a)) <$>\n                      R.verifier.verify (data.fStmtIn stmtIn) transcript }).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 => (data.fStmtOut (stmtIn, a_1), data.fWitOut (witIn, a.2.1), a.2.2)) <$>\n        (Verifier.run (data.fStmtIn stmtIn) a.2.2 R.verifier).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Composition/Virtual.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "1834bfd8a089a9206277ffe44eeb6baab407174f6f5b5c86ae9a880808164a6d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 177,
        "start_column": 2,
        "end_line": 177,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let __discr \u2190 Prover.runWithLog stmtIn witIn (Prover.transport data R.prover)\n      (fun a => (a.1, __discr.2.1, __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (Verifier.run stmtIn __discr.2.2.1\n                    {\n                      verify := fun stmtIn transcript =>\n                        (fun a => data.fStmtOut (stmtIn, a)) <$>\n                          R.verifier.verify (data.fStmtIn stmtIn) transcript })).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.runWithLog (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 => (data.fStmtOut (stmtIn, a_1.1), data.fWitOut (witIn, a.2.1), a.2.2.1, a.2.2.2, a_1.2)) <$>\n        (simulateQ loggingOracle (Verifier.run (data.fStmtIn stmtIn) a.2.2.1 R.verifier)).run.liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Composition/Virtual.lean#L177"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "45a2f232b2a1fa07a79590f97cd2b7e2e0e004f9d184d55ebc5605528757658f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 214,
        "start_column": 2,
        "end_line": 214,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn StmtOut StmtIn' StmtOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nlangIn' : Set StmtIn'\nlangOut' : Set StmtOut'\nsoundnessError : \u211d\u22650\ndata : TransportDataSound StmtIn StmtOut StmtIn' StmtOut' langIn langOut langIn' langOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nh :\n  \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn' WitIn StmtOut' WitOut),\n    \u2200 stmtIn \u2209 langIn',\n      [fun x =>\n          match x with\n          | (stmtOut, fst, snd) => stmtOut \u2209 langOut'|run stmtIn witIn { prover := prover, verifier := V }] \u2264\n        \u2191soundnessError\nstmtIn hStmtIn : Type\nWitIn : stmtIn\nWitOut : Prover pSpec oSpec StmtIn stmtIn StmtOut hStmtIn\nwitIn : StmtIn\nprover : witIn \u2209 langIn\n\u22a2 [fun x =>\n      match x with\n      | (stmtOut, fst, snd) =>\n        stmtOut \u2209\n          langOut|run witIn WitIn { prover := WitOut, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n    \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Composition/Virtual.lean#L214"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "2af878f3e815e1c9842749f7527173faf5e5411743bbd2bdaa42c2bcfab02a12"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 228,
        "start_column": 2,
        "end_line": 233,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "case intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nrelIn' : StmtIn' \u2192 WitIn' \u2192 Prop\nrelOut' : StmtOut' \u2192 WitOut' \u2192 Prop\nsoundnessError : \u211d\u22650\ndata :\n  TransportDataKnowledgeSound StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nE : StraightlineExtractor\nh' :\n  \u2200 (stmtIn : StmtIn') (witIn : WitIn') (prover : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'),\n    [fun x =>\n        match x with\n        | (stmtOut, witOut, transcript, proveQueryLog, snd) =>\n          \u00acrelIn' stmtIn (E stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n            relOut' stmtOut witOut|runWithLog stmtIn witIn { prover := prover, verifier := V }] \u2264\n      \u2191soundnessError\n\u22a2 \u2203 extractor,\n    \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n      [fun x =>\n          match x with\n          | (stmtOut, witOut, transcript, proveQueryLog, snd) =>\n            \u00acrelIn stmtIn (extractor stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n              relOut stmtOut\n                witOut|runWithLog stmtIn witIn\n            { prover := prover, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n        \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Composition/Virtual.lean#L228"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "0f181c620ce833d0265da38973404bc9ccc4602a99b722c88fbfd2acc0f024ba"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 277,
        "start_column": 4,
        "end_line": 277,
        "end_column": 9,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "x\u271d\u00b3 : StmtIn\nx\u271d\u00b2 : Unit\nx\u271d\u00b9 : StmtOut'\nx\u271d : Unit\np q : \u2124[X]\nt : \u2124\nf : \u2124[X]\nt' r : \u2124\nhRelOut' : eval r f = t'\nhRelIn : eval 0 p * eval 0 q + eval 1 p * eval 1 q = t\n\u22a2 eval r p * eval r q = t'",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Composition/Virtual.lean#L277"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "3b24f1f4f758f2b13932efd5408739fed0f8dd1b16728f113c0f52ea57f50a34"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 357,
        "start_column": 2,
        "end_line": 357,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Security/Basic.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nknowledgeError : \u211d\u22650\nhLt : knowledgeError < 1\nextractor : StraightlineExtractor\nhKS :\n  \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n    [fun x =>\n        \u00acrelIn stmtIn (extractor stmtIn x.1 x.2.1 x.2.2.1 x.2.2.2.1) \u2227\n          relOut x.1 x.2.1|runWithLog stmtIn witIn { prover := prover, verifier := verifier }] \u2264\n      \u2191knowledgeError\nWitIn' WitOut' : Type\nwitIn' : WitIn'\nprover : Prover pSpec oSpec StmtIn WitIn' StmtOut WitOut'\nstmtIn : StmtIn\nhStmtIn : \u2200 (x : WitIn), \u00acrelIn stmtIn x\n\u22a2 [fun x => \u2200 (x_1 : WitOut), \u00acrelOut x.1 x_1|run stmtIn witIn' { prover := prover, verifier := verifier }] \u2264\n    \u2191knowledgeError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Security/Basic.lean#L357"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "20fec634da906544ceb0c8e7f96c8db214aff3a1bfe3d5d2fc00428032a96dc8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 378,
        "start_column": 75,
        "end_line": 378,
        "end_column": 80,
        "file": "ZKLib/OracleReduction/Security/Basic.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn StmtOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction langIn langOut verifier\nrbrSoundnessError : pSpec.ChallengeIndex \u2192 \u211d\u22650\n\u22a2 rbrSoundness langIn langOut verifier stateFunction rbrSoundnessError \u2192\n    soundness langIn langOut verifier (\u2211 i, rbrSoundnessError i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Security/Basic.lean#L378"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-28T13:43:25-07:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "006a5eedce9579964cd552911f2f9c1fb4489d60cc103bc2a484fb6fbac8ec6a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 389,
        "start_column": 2,
        "end_line": 389,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Security/Basic.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction (Function.language relIn) (Function.language relOut) verifier\nrbrKnowledgeError : pSpec.ChallengeIndex \u2192 \u211d\u22650\n\u22a2 rbrKnowledgeSoundness relIn relOut verifier stateFunction rbrKnowledgeError \u2192\n    rbrSoundness (Function.language relIn) (Function.language relOut) verifier stateFunction rbrKnowledgeError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Security/Basic.lean#L389"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-28T13:43:25-07:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "29c71fefd2b41879799ab0926baf3adfdd0bad616281949bb90288f20f03f35e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 399,
        "start_column": 82,
        "end_line": 399,
        "end_column": 87,
        "file": "ZKLib/OracleReduction/Security/Basic.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction (Function.language relIn) (Function.language relOut) verifier\nrbrKnowledgeError : pSpec.ChallengeIndex \u2192 \u211d\u22650\n\u22a2 rbrKnowledgeSoundness relIn relOut verifier stateFunction rbrKnowledgeError \u2192\n    knowledgeSoundness relIn relOut verifier (\u2211 i, rbrKnowledgeError i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Security/Basic.lean#L399"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-28T13:43:25-07:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "21a89d8c609cf1d05f7a39f03d40cc105884b7c2ef0236787d0f1e19a5f639c8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 267,
        "start_column": 6,
        "end_line": 267,
        "end_column": 11,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "case mk.convert_7.left\nR : Type\ninst\u271d\u00b9 : CommSemiring R\nd m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\ntarget : R\noStmt : (i : Unit) \u2192 InputOracleStatement R d i\nhValid : inputRelation R d D (target, oStmt) ()\npoly : R[X]\nhp : poly \u2208 R\u2983\u2264 \u2191d\u2984[X]\nh : oStmt () = \u27e8poly, hp\u27e9\n\u22a2 ((fun a => ((a, fun x => oStmt ()), (), Transcript.snoc a (Transcript.snoc (oStmt ()) default))) <$>\n      liftM (query (Sum.inr \u27e81, \u22ef\u27e9) ())).neverFails",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/ProofSystem/Sumcheck/Basic.lean#L267"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-16T18:04:04-04:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "7c46b5dbf7f8a520093ed882169dde0dbddb09c862fe833c19d08dcc4a9a03d5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 276,
        "start_column": 27,
        "end_line": 276,
        "end_column": 32,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "case pos\nR : Type\ninst\u271d\u00b9 : CommSemiring R\nd m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\ntarget : R\noStmt : (i : Unit) \u2192 InputOracleStatement R d i\nhValid : inputRelation R d D (target, oStmt) ()\npoly : R[X]\nhp : poly \u2208 R\u2983\u2264 \u2191d\u2984[X]\nh : oStmt () = \u27e8poly, hp\u27e9\nstmt : R\noStmtOut : (i : Unit \u2295 Unit) \u2192 OutputOracleStatement R d i\nfst\u271d : Unit\ntranscript : (pSpec R d).FullTranscript\nh1 : (fun x => oStmt ()) = oStmtOut\nh2 : Transcript.snoc stmt (Transcript.snoc (oStmt ()) default) = transcript\nhEval : \u2211 x, Polynomial.eval (D x) poly = target\n\u22a2 (pure (stmt, fun x => \u27e8poly, hp\u27e9)).neverFailsWhen fun {\u03b1} x => Set.univ",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/ProofSystem/Sumcheck/Basic.lean#L276"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-16T18:04:04-04:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "2e0b8453049460d33108410b23030b210f89a9230e01f170395c7460cd81b088"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 488,
        "start_column": 2,
        "end_line": 488,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\ninst\u271d : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\nstmt : Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 OracleStatement R n deg i)\ntranscript : FullTranscript ![(Direction.P_to_V, \u21a5R\u2983\u2264 \u2191deg\u2984[X]), (Direction.V_to_P, R)]\nx : (pSpec R deg).getType 0\nhp_i : \u2191(transcript 0) \u2208 R\u2983\u2264 \u2191deg\u2984[X]\nhEq : transcript 0 = \u27e8\u2191(transcript 0), hp_i\u27e9\n\u22a2 (do\n      let a \u2190\n        ((OptionT.run (mapM (fun i => liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (D i))) (List.finRange m))).bind\n                fun __do_lift =>\n                __do_lift.elim (FreeMonad.pure none)\n                  (OptionT.run \u2218 fun evals => do\n                    if evals.sum = stmt.1.target then pure () else failure\n                    (fun a => { target := a, challenges := Fin.snoc stmt.1.challenges (transcript 1) }) <$>\n                        liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (transcript 1)))).mapM\n            fun {\u03b1} => (ToOracle.simOracle2 oSpec stmt.2 transcript.messages).impl\n      (fun a => (a, fun i_1 => stmt.2 i_1)) <$> a.getM) =\n    (fun a =>\n        ({ target := Polynomial.eval (transcript 1) \u2191(transcript 0),\n            challenges := Fin.snoc stmt.1.challenges (transcript 1) },\n          stmt.2)) <$>\n      if \u2211 x, Polynomial.eval (D x) \u2191(transcript 0) = stmt.1.target then pure () else failure",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/ProofSystem/Sumcheck/Basic.lean#L488"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-18T19:07:20+07:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "d909e800b6d58c7eb511c741fc164e5fa2a2575544f27fde3506ec8029654429"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 505,
        "start_column": 57,
        "end_line": 505,
        "end_column": 62,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "case left\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 OracleStatement R n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast \u22ef)) \u2191(oStmt 0) =\n    target\n\u22a2 (do\n      let x \u2190\n        ({ prover := prover R n deg D oSpec i,\n                        verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.sendMessage\n                \u27e80, \u22ef\u27e9\n                ({ prover := prover R n deg D oSpec i,\n                          verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.input\n                  ({ target := target, challenges := challenge }, oStmt) witIn\u271d)).liftComp\n            (oSpec ++\u2092 [(pSpec R deg).Challenge]\u2092)\n      let a \u2190 liftM (query (Sum.inr \u27e81, \u22ef\u27e9) ())\n      (fun a_1 =>\n            (a_1,\n              ({ prover := prover R n deg D oSpec i,\n                            verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.toProverOut.1\n                  ({ prover := prover R n deg D oSpec i,\n                            verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.receiveChallenge\n                    \u27e81, \u22ef\u27e9 x.2 a)).2,\n              Transcript.snoc a (Transcript.snoc x.1 default))) <$>\n          (Verifier.run ({ target := target, challenges := challenge }, oStmt)\n                (Transcript.snoc a (Transcript.snoc x.1 default))\n                { prover := prover R n deg D oSpec i,\n                      verifier := oracleVerifier R n deg D oSpec i }.toReduction.verifier).liftComp\n            (oSpec ++\u2092 [(pSpec R deg).Challenge]\u2092)).neverFails",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/ProofSystem/Sumcheck/Basic.lean#L505"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "3847d1df8a3ce64600ddd019a97d5044a3c3a99d5241012dcdfa1bafef968b8a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 514,
        "start_column": 2,
        "end_line": 514,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "case right\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 OracleStatement R n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast \u22ef)) \u2191(oStmt 0) =\n    target\n\u22a2 \u2200 (a : Statement R n i.succ) (b : (i : Fin 1) \u2192 OracleStatement R n deg i) (a_1 : Unit)\n    (b_1 : (pSpec R deg).FullTranscript),\n    ((a, b), a_1, b_1) \u2208\n        (run ({ target := target, challenges := challenge }, oStmt) witIn\u271d\n            { prover := prover R n deg D oSpec i, verifier := oracleVerifier R n deg D oSpec i }.toReduction).support \u2192\n      match (a, b) with\n      | ({ target := target, challenges := challenges }, oStmt) =>\n        match oStmt 0 with\n        | \u27e8poly, property\u27e9 =>\n          \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n              (MvPolynomial.eval (Fin.append challenges x \u2218 Fin.cast \u22ef)) poly =\n            target",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/ProofSystem/Sumcheck/Basic.lean#L514"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-18T19:07:20+07:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "a76bdcea9aa51669f6926322a8a6d98f9035f9b1438f861179d170e90fda2d61"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 563,
        "start_column": 4,
        "end_line": 563,
        "end_column": 9,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "R\u271d : Type\ninst\u271d\u2075 : CommSemiring R\u271d\nn\u271d deg\u271d m\u271d : \u2115\nD\u271d : Fin m\u271d \u21aa R\u271d\n\u03b9\u271d : Type\noSpec\u271d : OracleSpec \u03b9\u271d\ninst\u271d\u2074 : VCVCompatible R\u271d\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni\u271d : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ni : Fin (n + 1)\nstmt : Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 OracleStatement R n deg i)\ntr : Transcript (Fin.last 2) (pSpec R deg)\nhFalse :\n  \u00acrelation R n deg D i.succ ({ target := stmt.1.target, challenges := Fin.snoc stmt.1.challenges (tr 1) }, stmt.2) ()\n\u22a2 \u2200 (a : Statement R n i.succ) (b : (i : Fin 1) \u2192 OracleStatement R n deg i),\n    (a, b) \u2208 (Verifier.run stmt tr (verifier R n deg D oSpec i)).support \u2192\n      \u2200 (x : Unit), \u00acrelation R n deg D i.succ (a, b) x",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/ProofSystem/Sumcheck/Basic.lean#L563"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "a67dd84609bd4c271b88aaf8b7c3a04af2f0293644f5c9fd4c49fde0a3ddb5c8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 638,
        "start_column": 42,
        "end_line": 638,
        "end_column": 47,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\nn deg m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\n\u22a2 OracleReduction.perfectCompleteness (relIn R n deg D) (relOut R n deg) (reduction R n deg)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/ProofSystem/Sumcheck/Basic.lean#L638"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-17T05:04:32.549043+00:00"
      },
      "id": "9c36e6930c089bb62070915b2969a072bf7783c174f43e8b5c85e837f74256b0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "byte-decomposition",
        "commit": "16da0dd8ff0d1f9335903e5d7707f8ebabc2e520",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 75,
        "start_column": 2,
        "end_line": 75,
        "end_column": 7,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\noffset : Fin 8\n\u22a2 Soundness (F p) assumptions (spec offset)",
        "url": "https://github.com/Verified-zkEVM/clean/blob/16da0dd8ff0d1f9335903e5d7707f8ebabc2e520/Clean/Gadgets/ByteDecomposition.lean#L75"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-16T12:55:11+02:00",
        "inclusion_date": "2025-04-17T05:08:11.975849+00:00"
      },
      "id": "a599df7990af9a841882126b349683537ba0fb69fffec9a2cada3d0cb0a4f853"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "byte-decomposition",
        "commit": "16da0dd8ff0d1f9335903e5d7707f8ebabc2e520",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 67,
        "start_column": 18,
        "end_line": 67,
        "end_column": 23,
        "file": "Clean/Gadgets/Rotation64/Rotation64.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\noff : Fin 64\n\u22a2 Soundness (F p) assumptions (spec off)",
        "url": "https://github.com/Verified-zkEVM/clean/blob/16da0dd8ff0d1f9335903e5d7707f8ebabc2e520/Clean/Gadgets/Rotation64/Rotation64.lean#L67"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T17:43:17+02:00",
        "inclusion_date": "2025-04-17T05:08:11.975849+00:00"
      },
      "id": "a76c794f0082b87b264f88748c2f0d2731c66c38042a97198d3a32192954c7a9"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "byte-decomposition",
        "commit": "16da0dd8ff0d1f9335903e5d7707f8ebabc2e520",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 68,
        "start_column": 21,
        "end_line": 68,
        "end_column": 26,
        "file": "Clean/Gadgets/Rotation64/Rotation64.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\noff : Fin 64\n\u22a2 Completeness (F p) Outputs assumptions",
        "url": "https://github.com/Verified-zkEVM/clean/blob/16da0dd8ff0d1f9335903e5d7707f8ebabc2e520/Clean/Gadgets/Rotation64/Rotation64.lean#L68"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-02-27T17:02:29+01:00",
        "inclusion_date": "2025-04-17T05:08:11.975849+00:00"
      },
      "id": "02801b6a25f5fd1cc974a16855f9ba84e51c3fdcaf0335796b422024c021fcfc"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "byte-decomposition",
        "commit": "16da0dd8ff0d1f9335903e5d7707f8ebabc2e520",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 121,
        "start_column": 2,
        "end_line": 121,
        "end_column": 7,
        "file": "Clean/Gadgets/Keccak/ThetaD.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var Inputs (F p)\nh_env : env.uses_local_witnesses ((ElaboratedCircuit.main state_var).operations i0)\nstate : Inputs (F p)\nh_assumptions : assumptions state\nh_input : Vector.map (eval env) state_var = state\n\u22a2 ((((((((Rotation64.assumptions (eval env state_var[1]) \u2227\n                    (eval env state_var[\u21914]).is_normalized \u2227\n                      (eval env\n                          { x0 := var { index := i0 + 16 }, x1 := var { index := i0 + 17 },\n                            x2 := var { index := i0 + 18 }, x3 := var { index := i0 + 19 },\n                            x4 := var { index := i0 + 20 }, x5 := var { index := i0 + 21 },\n                            x6 := var { index := i0 + 22 }, x7 := var { index := i0 + 23 } }).is_normalized) \u2227\n                  Rotation64.assumptions (eval env state_var[2])) \u2227\n                (eval env state_var[0]).is_normalized \u2227\n                  (eval env\n                      { x0 := var { index := i0 + 48 }, x1 := var { index := i0 + 49 }, x2 := var { index := i0 + 50 },\n                        x3 := var { index := i0 + 51 }, x4 := var { index := i0 + 52 }, x5 := var { index := i0 + 53 },\n                        x6 := var { index := i0 + 54 }, x7 := var { index := i0 + 55 } }).is_normalized) \u2227\n              Rotation64.assumptions (eval env state_var[\u21913])) \u2227\n            (eval env state_var[1]).is_normalized \u2227\n              (eval env\n                  { x0 := var { index := i0 + 80 }, x1 := var { index := i0 + 81 }, x2 := var { index := i0 + 82 },\n                    x3 := var { index := i0 + 83 }, x4 := var { index := i0 + 84 }, x5 := var { index := i0 + 85 },\n                    x6 := var { index := i0 + 86 }, x7 := var { index := i0 + 87 } }).is_normalized) \u2227\n          Rotation64.assumptions (eval env state_var[\u21914])) \u2227\n        (eval env state_var[2]).is_normalized \u2227\n          (eval env\n              { x0 := var { index := i0 + 112 }, x1 := var { index := i0 + 113 }, x2 := var { index := i0 + 114 },\n                x3 := var { index := i0 + 115 }, x4 := var { index := i0 + 116 }, x5 := var { index := i0 + 117 },\n                x6 := var { index := i0 + 118 }, x7 := var { index := i0 + 119 } }).is_normalized) \u2227\n      Rotation64.assumptions (eval env state_var[0])) \u2227\n    (eval env state_var[\u21913]).is_normalized \u2227\n      (eval env\n          { x0 := var { index := i0 + 144 }, x1 := var { index := i0 + 145 }, x2 := var { index := i0 + 146 },\n            x3 := var { index := i0 + 147 }, x4 := var { index := i0 + 148 }, x5 := var { index := i0 + 149 },\n            x6 := var { index := i0 + 150 }, x7 := var { index := i0 + 151 } }).is_normalized",
        "url": "https://github.com/Verified-zkEVM/clean/blob/16da0dd8ff0d1f9335903e5d7707f8ebabc2e520/Clean/Gadgets/Keccak/ThetaD.lean#L121"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-15T00:48:02+02:00",
        "inclusion_date": "2025-04-17T05:08:11.975849+00:00"
      },
      "id": "3b048dfe7cbf4b6d2caf6435799f42396f71400e763f5630f696719d3391e46b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "byte-decomposition",
        "commit": "16da0dd8ff0d1f9335903e5d7707f8ebabc2e520",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 141,
        "start_column": 2,
        "end_line": 141,
        "end_column": 7,
        "file": "Clean/Gadgets/Keccak/ThetaXor.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var Inputs (F p)\nh_env : env.uses_local_witnesses ((ElaboratedCircuit.main state_var).operations i0)\nstate : Inputs (F p)\nh_assumptions : assumptions state\nh_input : { state := Vector.map (eval env) state_var.state, d := Vector.map (eval env) state_var.d } = state\n\u22a2 (((((((((((((((((((((((((eval env state_var.state[0]).is_normalized \u2227 (eval env state_var.d[0]).is_normalized) \u2227\n                                                  (eval env state_var.state[1]).is_normalized \u2227\n                                                    (eval env state_var.d[0]).is_normalized) \u2227\n                                                (eval env state_var.state[2]).is_normalized \u2227\n                                                  (eval env state_var.d[0]).is_normalized) \u2227\n                                              (eval env state_var.state[\u21913]).is_normalized \u2227\n                                                (eval env state_var.d[0]).is_normalized) \u2227\n                                            (eval env state_var.state[\u21914]).is_normalized \u2227\n                                              (eval env state_var.d[0]).is_normalized) \u2227\n                                          (eval env state_var.state[\u21915]).is_normalized \u2227\n                                            (eval env state_var.d[1]).is_normalized) \u2227\n                                        (eval env state_var.state[\u21916]).is_normalized \u2227\n                                          (eval env state_var.d[1]).is_normalized) \u2227\n                                      (eval env state_var.state[\u21917]).is_normalized \u2227\n                                        (eval env state_var.d[1]).is_normalized) \u2227\n                                    (eval env state_var.state[\u21918]).is_normalized \u2227\n                                      (eval env state_var.d[1]).is_normalized) \u2227\n                                  (eval env state_var.state[\u21919]).is_normalized \u2227\n                                    (eval env state_var.d[1]).is_normalized) \u2227\n                                (eval env state_var.state[\u219110]).is_normalized \u2227\n                                  (eval env state_var.d[2]).is_normalized) \u2227\n                              (eval env state_var.state[\u219111]).is_normalized \u2227 (eval env state_var.d[2]).is_normalized) \u2227\n                            (eval env state_var.state[\u219112]).is_normalized \u2227 (eval env state_var.d[2]).is_normalized) \u2227\n                          (eval env state_var.state[\u219113]).is_normalized \u2227 (eval env state_var.d[2]).is_normalized) \u2227\n                        (eval env state_var.state[\u219114]).is_normalized \u2227 (eval env state_var.d[2]).is_normalized) \u2227\n                      (eval env state_var.state[\u219115]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n                    (eval env state_var.state[\u219116]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n                  (eval env state_var.state[\u219117]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n                (eval env state_var.state[\u219118]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n              (eval env state_var.state[\u219119]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n            (eval env state_var.state[\u219120]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized) \u2227\n          (eval env state_var.state[\u219121]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized) \u2227\n        (eval env state_var.state[\u219122]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized) \u2227\n      (eval env state_var.state[\u219123]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized) \u2227\n    (eval env state_var.state[\u219124]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized",
        "url": "https://github.com/Verified-zkEVM/clean/blob/16da0dd8ff0d1f9335903e5d7707f8ebabc2e520/Clean/Gadgets/Keccak/ThetaXor.lean#L141"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-15T16:27:02+02:00",
        "inclusion_date": "2025-04-17T05:08:11.975849+00:00"
      },
      "id": "25fc3448577d843f4d74a11bc20e7574f118fa2fc60e055aafff79ce3848afea"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "byte-decomposition",
        "commit": "16da0dd8ff0d1f9335903e5d7707f8ebabc2e520",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 76,
        "start_column": 2,
        "end_line": 76,
        "end_column": 7,
        "file": "Clean/Gadgets/Keccak/Theta.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var KeccakState (F p)\nstate : KeccakState (F p)\nstate_norm : \u2200 (i : Fin 25), state[i].is_normalized\nh_input : Vector.map (eval env) state_var = state\nh_holds :\n  ((ThetaC.assumptions (Vector.map (eval env) state_var) \u2192\n        ThetaC.spec (Vector.map (eval env) state_var)\n          {\n            toArray :=\n              #[eval env (var_from_offset U64 (i0 + 24)), eval env (var_from_offset U64 (i0 + 56)),\n                eval env (var_from_offset U64 (i0 + 88)), eval env (var_from_offset U64 (i0 + 120)),\n                eval env (var_from_offset U64 (i0 + 152))],\n            size_toArray := \u22ef }) \u2227\n      (ThetaD.assumptions\n          {\n            toArray :=\n              #[eval env (var_from_offset U64 (i0 + 24)), eval env (var_from_offset U64 (i0 + 56)),\n                eval env (var_from_offset U64 (i0 + 88)), eval env (var_from_offset U64 (i0 + 120)),\n                eval env (var_from_offset U64 (i0 + 152))],\n            size_toArray := \u22ef } \u2192\n        ThetaD.spec\n          {\n            toArray :=\n              #[eval env (var_from_offset U64 (i0 + 24)), eval env (var_from_offset U64 (i0 + 56)),\n                eval env (var_from_offset U64 (i0 + 88)), eval env (var_from_offset U64 (i0 + 120)),\n                eval env (var_from_offset U64 (i0 + 152))],\n            size_toArray := \u22ef }\n          {\n            toArray :=\n              #[eval env (var_from_offset U64 (i0 + 160 + 24)), eval env (var_from_offset U64 (i0 + 160 + 56)),\n                eval env (var_from_offset U64 (i0 + 160 + 88)), eval env (var_from_offset U64 (i0 + 160 + 120)),\n                eval env (var_from_offset U64 (i0 + 160 + 152))],\n            size_toArray := \u22ef })) \u2227\n    (ThetaXor.assumptions\n        { state := Vector.map (eval env) state_var,\n          d :=\n            {\n              toArray :=\n                #[eval env (var_from_offset U64 (i0 + 160 + 24)), eval env (var_from_offset U64 (i0 + 160 + 56)),\n                  eval env (var_from_offset U64 (i0 + 160 + 88)), eval env (var_from_offset U64 (i0 + 160 + 120)),\n                  eval env (var_from_offset U64 (i0 + 160 + 152))],\n              size_toArray := \u22ef } } \u2192\n      ThetaXor.spec\n        { state := Vector.map (eval env) state_var,\n          d :=\n            {\n              toArray :=\n                #[eval env (var_from_offset U64 (i0 + 160 + 24)), eval env (var_from_offset U64 (i0 + 160 + 56)),\n                  eval env (var_from_offset U64 (i0 + 160 + 88)), eval env (var_from_offset U64 (i0 + 160 + 120)),\n                  eval env (var_from_offset U64 (i0 + 160 + 152))],\n              size_toArray := \u22ef } }\n        {\n          toArray :=\n            #[eval env (var_from_offset U64 (i0 + 160 + 160)), eval env (var_from_offset U64 (i0 + 160 + 160 + 8)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 16)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 24)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 32)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 40)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 48)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 56)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 64)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 72)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 80)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 88)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 96)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 104)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 112)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 120)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 128)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 136)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 144)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 152)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 160)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 168)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 176)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 184)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 192))],\n          size_toArray := \u22ef })\n\u22a2 let a := eval env (ElaboratedCircuit.output state_var i0);\n  spec state a",
        "url": "https://github.com/Verified-zkEVM/clean/blob/16da0dd8ff0d1f9335903e5d7707f8ebabc2e520/Clean/Gadgets/Keccak/Theta.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-15T16:51:25+02:00",
        "inclusion_date": "2025-04-17T05:08:11.975849+00:00"
      },
      "id": "5df88e869c3186d17858c18d96f4a5c925fe6d2dbb20f7ac5427dab0fd387bb7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "byte-decomposition",
        "commit": "16da0dd8ff0d1f9335903e5d7707f8ebabc2e520",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 84,
        "start_column": 2,
        "end_line": 84,
        "end_column": 7,
        "file": "Clean/Gadgets/Keccak/Theta.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var KeccakState (F p)\nh_env : env.uses_local_witnesses ((ElaboratedCircuit.main state_var).operations i0)\nstate : KeccakState (F p)\nh_assumptions : assumptions state\nh_input : Vector.map (eval env) state_var = state\n\u22a2 (ThetaC.circuit.assumptions (Vector.map (eval env) state_var) \u2227\n      ThetaD.circuit.assumptions (Vector.map (eval env) (ElaboratedCircuit.output state_var i0))) \u2227\n    ThetaXor.circuit.assumptions\n      { state := Vector.map (eval env) state_var,\n        d :=\n          Vector.map (eval env)\n            (ElaboratedCircuit.output (ElaboratedCircuit.output state_var i0)\n              (i0 + ElaboratedCircuit.local_length (Var ThetaC.Outputs (F p)) state_var)) }",
        "url": "https://github.com/Verified-zkEVM/clean/blob/16da0dd8ff0d1f9335903e5d7707f8ebabc2e520/Clean/Gadgets/Keccak/Theta.lean#L84"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-15T16:51:25+02:00",
        "inclusion_date": "2025-04-17T05:08:11.975849+00:00"
      },
      "id": "8137b582c1769409632db91da969dd85ea9a322529e93a16d614833cf25c96c6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "byte-decomposition",
        "commit": "16da0dd8ff0d1f9335903e5d7707f8ebabc2e520",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 117,
        "start_column": 2,
        "end_line": 117,
        "end_column": 7,
        "file": "Clean/Gadgets/Keccak/ThetaC.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var KeccakState (F p)\nh_env : env.uses_local_witnesses ((ElaboratedCircuit.main state_var).operations i0)\nstate : KeccakState (F p)\nh_assumptions : assumptions state\nh_input : Vector.map (eval env) state_var = state\ns : \u2200 (i : Fin 25), eval env state_var[\u2191i] = state[\u2191i]\n\u22a2 (((((((((((((((((((state[\u21910].is_normalized \u2227 state[\u21911].is_normalized) \u2227\n                                        (eval env (var_from_offset U64 i0)).is_normalized \u2227 state[\u21912].is_normalized) \u2227\n                                      (eval env (var_from_offset U64 (i0 + 8))).is_normalized \u2227\n                                        state[\u21913].is_normalized) \u2227\n                                    (eval env (var_from_offset U64 (i0 + 16))).is_normalized \u2227\n                                      state[\u21914].is_normalized) \u2227\n                                  state[\u21915].is_normalized \u2227 state[\u21916].is_normalized) \u2227\n                                (eval env (var_from_offset U64 (i0 + 32))).is_normalized \u2227 state[\u21917].is_normalized) \u2227\n                              (eval env (var_from_offset U64 (i0 + 40))).is_normalized \u2227 state[\u21918].is_normalized) \u2227\n                            (eval env (var_from_offset U64 (i0 + 48))).is_normalized \u2227 state[\u21919].is_normalized) \u2227\n                          state[\u219110].is_normalized \u2227 state[\u219111].is_normalized) \u2227\n                        (eval env (var_from_offset U64 (i0 + 64))).is_normalized \u2227 state[\u219112].is_normalized) \u2227\n                      (eval env (var_from_offset U64 (i0 + 72))).is_normalized \u2227 state[\u219113].is_normalized) \u2227\n                    (eval env (var_from_offset U64 (i0 + 80))).is_normalized \u2227 state[\u219114].is_normalized) \u2227\n                  state[\u219115].is_normalized \u2227 state[\u219116].is_normalized) \u2227\n                (eval env (var_from_offset U64 (i0 + 96))).is_normalized \u2227 state[\u219117].is_normalized) \u2227\n              (eval env (var_from_offset U64 (i0 + 104))).is_normalized \u2227 state[\u219118].is_normalized) \u2227\n            (eval env (var_from_offset U64 (i0 + 112))).is_normalized \u2227 state[\u219119].is_normalized) \u2227\n          state[\u219120].is_normalized \u2227 state[\u219121].is_normalized) \u2227\n        (eval env (var_from_offset U64 (i0 + 128))).is_normalized \u2227 state[\u219122].is_normalized) \u2227\n      (eval env (var_from_offset U64 (i0 + 136))).is_normalized \u2227 state[\u219123].is_normalized) \u2227\n    (eval env (var_from_offset U64 (i0 + 144))).is_normalized \u2227 state[\u219124].is_normalized",
        "url": "https://github.com/Verified-zkEVM/clean/blob/16da0dd8ff0d1f9335903e5d7707f8ebabc2e520/Clean/Gadgets/Keccak/ThetaC.lean#L117"
      },
      "metadata": {
        "blame_email_hash": "0130f16e5d6d",
        "blame_date": "2025-04-03T17:31:42+02:00",
        "inclusion_date": "2025-04-17T05:08:11.975849+00:00"
      },
      "id": "4e7fe86d26cea6657d00b24cf9707b47b00af2d9b153056437644d86e03d8b1b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "keccak-blueprint-continued",
        "commit": "4557cde1ec55024b351ad0d0d1a628d0a9f81ca2",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 67,
        "start_column": 18,
        "end_line": 67,
        "end_column": 23,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\noff : Fin 8\n\u22a2 Soundness (F p) assumptions (spec off)",
        "url": "https://github.com/Verified-zkEVM/clean/blob/4557cde1ec55024b351ad0d0d1a628d0a9f81ca2/Clean/Gadgets/ByteDecomposition.lean#L67"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-17T05:13:47.711581+00:00"
      },
      "id": "91917779f091197dffcdae5314485bf2283cccec566f582dc25cc7f4085d70cc"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "keccak-blueprint-continued",
        "commit": "4557cde1ec55024b351ad0d0d1a628d0a9f81ca2",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 94,
        "start_column": 8,
        "end_line": 94,
        "end_column": 13,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "case mk.mk.\u00ab1\u00bb\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nx_var : Expression (F p)\nx : F p\nas : ZMod.val x < 256\nh_eval : Expression.eval env x_var = x\nhenv :\n  \u2200 (i : Fin 2),\n    env.get (i0 + \u2191i) =\n      [if 0 < (fun i => i) \u27e81, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e81, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n          else 0,\n          FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e81, \u22ef\u27e9))][\u2191i]\nh0 :\n  env.get i0 =\n    if 0 < (fun i => i) \u27e81, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e81, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e81, \u22ef\u27e9)) := henv 1\n\u22a2 ((ZMod.val x % 2 + ZMod.val x / 2 * ZMod.val 2 % p) % p + ZMod.val (-x)) % p = ZMod.val 0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/4557cde1ec55024b351ad0d0d1a628d0a9f81ca2/Clean/Gadgets/ByteDecomposition.lean#L94"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-17T05:13:47.711581+00:00"
      },
      "id": "cb9797278cc484717f5e64e8308bea6b37419603ed82fb1d4c3f9711b1772262"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "keccak-blueprint-continued",
        "commit": "4557cde1ec55024b351ad0d0d1a628d0a9f81ca2",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 97,
        "start_column": 11,
        "end_line": 97,
        "end_column": 16,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "case mk.mk.\u00ab2\u00bb\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nx_var : Expression (F p)\nx : F p\nas : ZMod.val x < 256\nh_eval : Expression.eval env x_var = x\nhenv :\n  \u2200 (i : Fin 2),\n    env.get (i0 + \u2191i) =\n      [if 0 < (fun i => i) \u27e82, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e82, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n          else 0,\n          FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e82, \u22ef\u27e9))][\u2191i]\nh0 :\n  env.get i0 =\n    if 0 < (fun i => i) \u27e82, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e82, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e82, \u22ef\u27e9)) := henv 1\n\u22a2 (if 0 < (fun i => i) \u27e82, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e82, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n        else 0) +\n        FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e82, \u22ef\u27e9)) * 2 ^ \u2191((fun i => i) \u27e82, \u22ef\u27e9) +\n      -x =\n    0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/4557cde1ec55024b351ad0d0d1a628d0a9f81ca2/Clean/Gadgets/ByteDecomposition.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-17T05:13:47.711581+00:00"
      },
      "id": "15e85044eb00f3f7f987a36061aba55d7e2e6c501a231d309b765dfd5792f520"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "keccak-blueprint-continued",
        "commit": "4557cde1ec55024b351ad0d0d1a628d0a9f81ca2",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 97,
        "start_column": 11,
        "end_line": 97,
        "end_column": 16,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "case mk.mk.\u00ab3\u00bb\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nx_var : Expression (F p)\nx : F p\nas : ZMod.val x < 256\nh_eval : Expression.eval env x_var = x\nhenv :\n  \u2200 (i : Fin 2),\n    env.get (i0 + \u2191i) =\n      [if 0 < (fun i => i) \u27e83, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e83, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n          else 0,\n          FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e83, \u22ef\u27e9))][\u2191i]\nh0 :\n  env.get i0 =\n    if 0 < (fun i => i) \u27e83, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e83, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e83, \u22ef\u27e9)) := henv 1\n\u22a2 (if 0 < (fun i => i) \u27e83, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e83, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n        else 0) +\n        FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e83, \u22ef\u27e9)) * 2 ^ \u2191((fun i => i) \u27e83, \u22ef\u27e9) +\n      -x =\n    0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/4557cde1ec55024b351ad0d0d1a628d0a9f81ca2/Clean/Gadgets/ByteDecomposition.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-17T05:13:47.711581+00:00"
      },
      "id": "0811208bf116860a9b44454e90bf73b4d88249d6c46211aaef32dc4402214413"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "keccak-blueprint-continued",
        "commit": "4557cde1ec55024b351ad0d0d1a628d0a9f81ca2",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 97,
        "start_column": 11,
        "end_line": 97,
        "end_column": 16,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "case mk.mk.\u00ab4\u00bb\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nx_var : Expression (F p)\nx : F p\nas : ZMod.val x < 256\nh_eval : Expression.eval env x_var = x\nhenv :\n  \u2200 (i : Fin 2),\n    env.get (i0 + \u2191i) =\n      [if 0 < (fun i => i) \u27e84, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e84, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n          else 0,\n          FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e84, \u22ef\u27e9))][\u2191i]\nh0 :\n  env.get i0 =\n    if 0 < (fun i => i) \u27e84, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e84, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e84, \u22ef\u27e9)) := henv 1\n\u22a2 (if 0 < (fun i => i) \u27e84, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e84, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n        else 0) +\n        FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e84, \u22ef\u27e9)) * 2 ^ \u2191((fun i => i) \u27e84, \u22ef\u27e9) +\n      -x =\n    0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/4557cde1ec55024b351ad0d0d1a628d0a9f81ca2/Clean/Gadgets/ByteDecomposition.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-17T05:13:47.711581+00:00"
      },
      "id": "9ef2fd4a4fa901fa51b1d66993d01e9793fb3c8bdc646413119f52c9f9521726"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "keccak-blueprint-continued",
        "commit": "4557cde1ec55024b351ad0d0d1a628d0a9f81ca2",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 97,
        "start_column": 11,
        "end_line": 97,
        "end_column": 16,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "case mk.mk.\u00ab5\u00bb\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nx_var : Expression (F p)\nx : F p\nas : ZMod.val x < 256\nh_eval : Expression.eval env x_var = x\nhenv :\n  \u2200 (i : Fin 2),\n    env.get (i0 + \u2191i) =\n      [if 0 < (fun i => i) \u27e85, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e85, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n          else 0,\n          FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e85, \u22ef\u27e9))][\u2191i]\nh0 :\n  env.get i0 =\n    if 0 < (fun i => i) \u27e85, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e85, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e85, \u22ef\u27e9)) := henv 1\n\u22a2 (if 0 < (fun i => i) \u27e85, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e85, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n        else 0) +\n        FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e85, \u22ef\u27e9)) * 2 ^ \u2191((fun i => i) \u27e85, \u22ef\u27e9) +\n      -x =\n    0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/4557cde1ec55024b351ad0d0d1a628d0a9f81ca2/Clean/Gadgets/ByteDecomposition.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-17T05:13:47.711581+00:00"
      },
      "id": "2d83a0955d81cbdf9bddc4d287b580e4f11d3c60fd85a0fe0d00fc936e4573b6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "keccak-blueprint-continued",
        "commit": "4557cde1ec55024b351ad0d0d1a628d0a9f81ca2",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 97,
        "start_column": 11,
        "end_line": 97,
        "end_column": 16,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "case mk.mk.\u00ab6\u00bb\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nx_var : Expression (F p)\nx : F p\nas : ZMod.val x < 256\nh_eval : Expression.eval env x_var = x\nhenv :\n  \u2200 (i : Fin 2),\n    env.get (i0 + \u2191i) =\n      [if 0 < (fun i => i) \u27e86, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e86, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n          else 0,\n          FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e86, \u22ef\u27e9))][\u2191i]\nh0 :\n  env.get i0 =\n    if 0 < (fun i => i) \u27e86, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e86, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e86, \u22ef\u27e9)) := henv 1\n\u22a2 (if 0 < (fun i => i) \u27e86, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e86, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n        else 0) +\n        FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e86, \u22ef\u27e9)) * 2 ^ \u2191((fun i => i) \u27e86, \u22ef\u27e9) +\n      -x =\n    0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/4557cde1ec55024b351ad0d0d1a628d0a9f81ca2/Clean/Gadgets/ByteDecomposition.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-17T05:13:47.711581+00:00"
      },
      "id": "a0be8fc8b9fcec15e36b939eb150b7866d0bbcfaf2aa1412aa8895e0597bccff"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "keccak-blueprint-continued",
        "commit": "4557cde1ec55024b351ad0d0d1a628d0a9f81ca2",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 97,
        "start_column": 11,
        "end_line": 97,
        "end_column": 16,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "case mk.mk.\u00ab7\u00bb\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nx_var : Expression (F p)\nx : F p\nas : ZMod.val x < 256\nh_eval : Expression.eval env x_var = x\nhenv :\n  \u2200 (i : Fin 2),\n    env.get (i0 + \u2191i) =\n      [if 0 < (fun i => i) \u27e87, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e87, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n          else 0,\n          FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e87, \u22ef\u27e9))][\u2191i]\nh0 :\n  env.get i0 =\n    if 0 < (fun i => i) \u27e87, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e87, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e87, \u22ef\u27e9)) := henv 1\n\u22a2 (if 0 < (fun i => i) \u27e87, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e87, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n        else 0) +\n        FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e87, \u22ef\u27e9)) * 2 ^ \u2191((fun i => i) \u27e87, \u22ef\u27e9) +\n      -x =\n    0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/4557cde1ec55024b351ad0d0d1a628d0a9f81ca2/Clean/Gadgets/ByteDecomposition.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-17T05:13:47.711581+00:00"
      },
      "id": "a456c5ee1ea22e141b9846f4946a5d4e4651f25d8b744ecc5ba0b875d67ec237"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "keccak-blueprint-continued",
        "commit": "4557cde1ec55024b351ad0d0d1a628d0a9f81ca2",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 67,
        "start_column": 18,
        "end_line": 67,
        "end_column": 23,
        "file": "Clean/Gadgets/Rotation64/Rotation64.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\noff : Fin 64\n\u22a2 Soundness (F p) assumptions (spec off)",
        "url": "https://github.com/Verified-zkEVM/clean/blob/4557cde1ec55024b351ad0d0d1a628d0a9f81ca2/Clean/Gadgets/Rotation64/Rotation64.lean#L67"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T17:43:17+02:00",
        "inclusion_date": "2025-04-17T05:13:47.711581+00:00"
      },
      "id": "6fe813b186fa01e549d5c0c381831fae71640cd98eaf7fdcc5300267308acdfe"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "keccak-blueprint-continued",
        "commit": "4557cde1ec55024b351ad0d0d1a628d0a9f81ca2",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 68,
        "start_column": 21,
        "end_line": 68,
        "end_column": 26,
        "file": "Clean/Gadgets/Rotation64/Rotation64.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\noff : Fin 64\n\u22a2 Completeness (F p) Outputs assumptions",
        "url": "https://github.com/Verified-zkEVM/clean/blob/4557cde1ec55024b351ad0d0d1a628d0a9f81ca2/Clean/Gadgets/Rotation64/Rotation64.lean#L68"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-02-27T17:02:29+01:00",
        "inclusion_date": "2025-04-17T05:13:47.711581+00:00"
      },
      "id": "550b9e2e4f774fa6ebd9f7c15c84b58c16795704042d786227cb7682001ba977"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "keccak-blueprint-continued",
        "commit": "4557cde1ec55024b351ad0d0d1a628d0a9f81ca2",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 121,
        "start_column": 2,
        "end_line": 121,
        "end_column": 7,
        "file": "Clean/Gadgets/Keccak/ThetaD.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var Inputs (F p)\nh_env : env.uses_local_witnesses ((ElaboratedCircuit.main state_var).operations i0)\nstate : Inputs (F p)\nh_assumptions : assumptions state\nh_input : Vector.map (eval env) state_var = state\n\u22a2 ((((((((Rotation64.assumptions (eval env state_var[1]) \u2227\n                    (eval env state_var[\u21914]).is_normalized \u2227\n                      (eval env\n                          { x0 := var { index := i0 + 16 }, x1 := var { index := i0 + 17 },\n                            x2 := var { index := i0 + 18 }, x3 := var { index := i0 + 19 },\n                            x4 := var { index := i0 + 20 }, x5 := var { index := i0 + 21 },\n                            x6 := var { index := i0 + 22 }, x7 := var { index := i0 + 23 } }).is_normalized) \u2227\n                  Rotation64.assumptions (eval env state_var[2])) \u2227\n                (eval env state_var[0]).is_normalized \u2227\n                  (eval env\n                      { x0 := var { index := i0 + 48 }, x1 := var { index := i0 + 49 }, x2 := var { index := i0 + 50 },\n                        x3 := var { index := i0 + 51 }, x4 := var { index := i0 + 52 }, x5 := var { index := i0 + 53 },\n                        x6 := var { index := i0 + 54 }, x7 := var { index := i0 + 55 } }).is_normalized) \u2227\n              Rotation64.assumptions (eval env state_var[\u21913])) \u2227\n            (eval env state_var[1]).is_normalized \u2227\n              (eval env\n                  { x0 := var { index := i0 + 80 }, x1 := var { index := i0 + 81 }, x2 := var { index := i0 + 82 },\n                    x3 := var { index := i0 + 83 }, x4 := var { index := i0 + 84 }, x5 := var { index := i0 + 85 },\n                    x6 := var { index := i0 + 86 }, x7 := var { index := i0 + 87 } }).is_normalized) \u2227\n          Rotation64.assumptions (eval env state_var[\u21914])) \u2227\n        (eval env state_var[2]).is_normalized \u2227\n          (eval env\n              { x0 := var { index := i0 + 112 }, x1 := var { index := i0 + 113 }, x2 := var { index := i0 + 114 },\n                x3 := var { index := i0 + 115 }, x4 := var { index := i0 + 116 }, x5 := var { index := i0 + 117 },\n                x6 := var { index := i0 + 118 }, x7 := var { index := i0 + 119 } }).is_normalized) \u2227\n      Rotation64.assumptions (eval env state_var[0])) \u2227\n    (eval env state_var[\u21913]).is_normalized \u2227\n      (eval env\n          { x0 := var { index := i0 + 144 }, x1 := var { index := i0 + 145 }, x2 := var { index := i0 + 146 },\n            x3 := var { index := i0 + 147 }, x4 := var { index := i0 + 148 }, x5 := var { index := i0 + 149 },\n            x6 := var { index := i0 + 150 }, x7 := var { index := i0 + 151 } }).is_normalized",
        "url": "https://github.com/Verified-zkEVM/clean/blob/4557cde1ec55024b351ad0d0d1a628d0a9f81ca2/Clean/Gadgets/Keccak/ThetaD.lean#L121"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-15T00:48:02+02:00",
        "inclusion_date": "2025-04-17T05:13:47.711581+00:00"
      },
      "id": "63d992cc446338da4ec82867f07143c5b51bc4c6b0fa25a9aceabebf3bcc2386"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "keccak-blueprint-continued",
        "commit": "4557cde1ec55024b351ad0d0d1a628d0a9f81ca2",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 141,
        "start_column": 2,
        "end_line": 141,
        "end_column": 7,
        "file": "Clean/Gadgets/Keccak/ThetaXor.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var Inputs (F p)\nh_env : env.uses_local_witnesses ((ElaboratedCircuit.main state_var).operations i0)\nstate : Inputs (F p)\nh_assumptions : assumptions state\nh_input : { state := Vector.map (eval env) state_var.state, d := Vector.map (eval env) state_var.d } = state\n\u22a2 (((((((((((((((((((((((((eval env state_var.state[0]).is_normalized \u2227 (eval env state_var.d[0]).is_normalized) \u2227\n                                                  (eval env state_var.state[1]).is_normalized \u2227\n                                                    (eval env state_var.d[0]).is_normalized) \u2227\n                                                (eval env state_var.state[2]).is_normalized \u2227\n                                                  (eval env state_var.d[0]).is_normalized) \u2227\n                                              (eval env state_var.state[\u21913]).is_normalized \u2227\n                                                (eval env state_var.d[0]).is_normalized) \u2227\n                                            (eval env state_var.state[\u21914]).is_normalized \u2227\n                                              (eval env state_var.d[0]).is_normalized) \u2227\n                                          (eval env state_var.state[\u21915]).is_normalized \u2227\n                                            (eval env state_var.d[1]).is_normalized) \u2227\n                                        (eval env state_var.state[\u21916]).is_normalized \u2227\n                                          (eval env state_var.d[1]).is_normalized) \u2227\n                                      (eval env state_var.state[\u21917]).is_normalized \u2227\n                                        (eval env state_var.d[1]).is_normalized) \u2227\n                                    (eval env state_var.state[\u21918]).is_normalized \u2227\n                                      (eval env state_var.d[1]).is_normalized) \u2227\n                                  (eval env state_var.state[\u21919]).is_normalized \u2227\n                                    (eval env state_var.d[1]).is_normalized) \u2227\n                                (eval env state_var.state[\u219110]).is_normalized \u2227\n                                  (eval env state_var.d[2]).is_normalized) \u2227\n                              (eval env state_var.state[\u219111]).is_normalized \u2227 (eval env state_var.d[2]).is_normalized) \u2227\n                            (eval env state_var.state[\u219112]).is_normalized \u2227 (eval env state_var.d[2]).is_normalized) \u2227\n                          (eval env state_var.state[\u219113]).is_normalized \u2227 (eval env state_var.d[2]).is_normalized) \u2227\n                        (eval env state_var.state[\u219114]).is_normalized \u2227 (eval env state_var.d[2]).is_normalized) \u2227\n                      (eval env state_var.state[\u219115]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n                    (eval env state_var.state[\u219116]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n                  (eval env state_var.state[\u219117]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n                (eval env state_var.state[\u219118]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n              (eval env state_var.state[\u219119]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n            (eval env state_var.state[\u219120]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized) \u2227\n          (eval env state_var.state[\u219121]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized) \u2227\n        (eval env state_var.state[\u219122]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized) \u2227\n      (eval env state_var.state[\u219123]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized) \u2227\n    (eval env state_var.state[\u219124]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized",
        "url": "https://github.com/Verified-zkEVM/clean/blob/4557cde1ec55024b351ad0d0d1a628d0a9f81ca2/Clean/Gadgets/Keccak/ThetaXor.lean#L141"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-15T16:27:02+02:00",
        "inclusion_date": "2025-04-17T05:13:47.711581+00:00"
      },
      "id": "ca048cb8929e7ac8d377cc8a083babac5f3c89c705cb8cd80c0145707f4e3be8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "keccak-blueprint-continued",
        "commit": "4557cde1ec55024b351ad0d0d1a628d0a9f81ca2",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 76,
        "start_column": 2,
        "end_line": 76,
        "end_column": 7,
        "file": "Clean/Gadgets/Keccak/Theta.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var KeccakState (F p)\nstate : KeccakState (F p)\nstate_norm : \u2200 (i : Fin 25), state[i].is_normalized\nh_input : Vector.map (eval env) state_var = state\nh_holds :\n  ((ThetaC.assumptions (Vector.map (eval env) state_var) \u2192\n        ThetaC.spec (Vector.map (eval env) state_var)\n          {\n            toArray :=\n              #[eval env (var_from_offset U64 (i0 + 24)), eval env (var_from_offset U64 (i0 + 56)),\n                eval env (var_from_offset U64 (i0 + 88)), eval env (var_from_offset U64 (i0 + 120)),\n                eval env (var_from_offset U64 (i0 + 152))],\n            size_toArray := \u22ef }) \u2227\n      (ThetaD.assumptions\n          {\n            toArray :=\n              #[eval env (var_from_offset U64 (i0 + 24)), eval env (var_from_offset U64 (i0 + 56)),\n                eval env (var_from_offset U64 (i0 + 88)), eval env (var_from_offset U64 (i0 + 120)),\n                eval env (var_from_offset U64 (i0 + 152))],\n            size_toArray := \u22ef } \u2192\n        ThetaD.spec\n          {\n            toArray :=\n              #[eval env (var_from_offset U64 (i0 + 24)), eval env (var_from_offset U64 (i0 + 56)),\n                eval env (var_from_offset U64 (i0 + 88)), eval env (var_from_offset U64 (i0 + 120)),\n                eval env (var_from_offset U64 (i0 + 152))],\n            size_toArray := \u22ef }\n          {\n            toArray :=\n              #[eval env (var_from_offset U64 (i0 + 160 + 24)), eval env (var_from_offset U64 (i0 + 160 + 56)),\n                eval env (var_from_offset U64 (i0 + 160 + 88)), eval env (var_from_offset U64 (i0 + 160 + 120)),\n                eval env (var_from_offset U64 (i0 + 160 + 152))],\n            size_toArray := \u22ef })) \u2227\n    (ThetaXor.assumptions\n        { state := Vector.map (eval env) state_var,\n          d :=\n            {\n              toArray :=\n                #[eval env (var_from_offset U64 (i0 + 160 + 24)), eval env (var_from_offset U64 (i0 + 160 + 56)),\n                  eval env (var_from_offset U64 (i0 + 160 + 88)), eval env (var_from_offset U64 (i0 + 160 + 120)),\n                  eval env (var_from_offset U64 (i0 + 160 + 152))],\n              size_toArray := \u22ef } } \u2192\n      ThetaXor.spec\n        { state := Vector.map (eval env) state_var,\n          d :=\n            {\n              toArray :=\n                #[eval env (var_from_offset U64 (i0 + 160 + 24)), eval env (var_from_offset U64 (i0 + 160 + 56)),\n                  eval env (var_from_offset U64 (i0 + 160 + 88)), eval env (var_from_offset U64 (i0 + 160 + 120)),\n                  eval env (var_from_offset U64 (i0 + 160 + 152))],\n              size_toArray := \u22ef } }\n        {\n          toArray :=\n            #[eval env (var_from_offset U64 (i0 + 160 + 160)), eval env (var_from_offset U64 (i0 + 160 + 160 + 8)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 16)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 24)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 32)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 40)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 48)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 56)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 64)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 72)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 80)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 88)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 96)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 104)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 112)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 120)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 128)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 136)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 144)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 152)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 160)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 168)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 176)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 184)),\n              eval env (var_from_offset U64 (i0 + 160 + 160 + 192))],\n          size_toArray := \u22ef })\n\u22a2 let a := eval env (ElaboratedCircuit.output state_var i0);\n  spec state a",
        "url": "https://github.com/Verified-zkEVM/clean/blob/4557cde1ec55024b351ad0d0d1a628d0a9f81ca2/Clean/Gadgets/Keccak/Theta.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-15T16:51:25+02:00",
        "inclusion_date": "2025-04-17T05:13:47.711581+00:00"
      },
      "id": "1e6056067c50cc200c4d442fa14233323fde372434b2f20f150c9cfdabb568b7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "keccak-blueprint-continued",
        "commit": "4557cde1ec55024b351ad0d0d1a628d0a9f81ca2",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 84,
        "start_column": 2,
        "end_line": 84,
        "end_column": 7,
        "file": "Clean/Gadgets/Keccak/Theta.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var KeccakState (F p)\nh_env : env.uses_local_witnesses ((ElaboratedCircuit.main state_var).operations i0)\nstate : KeccakState (F p)\nh_assumptions : assumptions state\nh_input : Vector.map (eval env) state_var = state\n\u22a2 (ThetaC.circuit.assumptions (Vector.map (eval env) state_var) \u2227\n      ThetaD.circuit.assumptions (Vector.map (eval env) (ElaboratedCircuit.output state_var i0))) \u2227\n    ThetaXor.circuit.assumptions\n      { state := Vector.map (eval env) state_var,\n        d :=\n          Vector.map (eval env)\n            (ElaboratedCircuit.output (ElaboratedCircuit.output state_var i0)\n              (i0 + ElaboratedCircuit.local_length (Var ThetaC.Outputs (F p)) state_var)) }",
        "url": "https://github.com/Verified-zkEVM/clean/blob/4557cde1ec55024b351ad0d0d1a628d0a9f81ca2/Clean/Gadgets/Keccak/Theta.lean#L84"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-15T16:51:25+02:00",
        "inclusion_date": "2025-04-17T05:13:47.711581+00:00"
      },
      "id": "4373c7fc9e60b0597dca948dda41c7ada1cc94c54c5653bf49ae0f33018d5b6d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "keccak-blueprint-continued",
        "commit": "4557cde1ec55024b351ad0d0d1a628d0a9f81ca2",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 117,
        "start_column": 2,
        "end_line": 117,
        "end_column": 7,
        "file": "Clean/Gadgets/Keccak/ThetaC.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var KeccakState (F p)\nh_env : env.uses_local_witnesses ((ElaboratedCircuit.main state_var).operations i0)\nstate : KeccakState (F p)\nh_assumptions : assumptions state\nh_input : Vector.map (eval env) state_var = state\ns : \u2200 (i : Fin 25), eval env state_var[\u2191i] = state[\u2191i]\n\u22a2 (((((((((((((((((((state[\u21910].is_normalized \u2227 state[\u21911].is_normalized) \u2227\n                                        (eval env (var_from_offset U64 i0)).is_normalized \u2227 state[\u21912].is_normalized) \u2227\n                                      (eval env (var_from_offset U64 (i0 + 8))).is_normalized \u2227\n                                        state[\u21913].is_normalized) \u2227\n                                    (eval env (var_from_offset U64 (i0 + 16))).is_normalized \u2227\n                                      state[\u21914].is_normalized) \u2227\n                                  state[\u21915].is_normalized \u2227 state[\u21916].is_normalized) \u2227\n                                (eval env (var_from_offset U64 (i0 + 32))).is_normalized \u2227 state[\u21917].is_normalized) \u2227\n                              (eval env (var_from_offset U64 (i0 + 40))).is_normalized \u2227 state[\u21918].is_normalized) \u2227\n                            (eval env (var_from_offset U64 (i0 + 48))).is_normalized \u2227 state[\u21919].is_normalized) \u2227\n                          state[\u219110].is_normalized \u2227 state[\u219111].is_normalized) \u2227\n                        (eval env (var_from_offset U64 (i0 + 64))).is_normalized \u2227 state[\u219112].is_normalized) \u2227\n                      (eval env (var_from_offset U64 (i0 + 72))).is_normalized \u2227 state[\u219113].is_normalized) \u2227\n                    (eval env (var_from_offset U64 (i0 + 80))).is_normalized \u2227 state[\u219114].is_normalized) \u2227\n                  state[\u219115].is_normalized \u2227 state[\u219116].is_normalized) \u2227\n                (eval env (var_from_offset U64 (i0 + 96))).is_normalized \u2227 state[\u219117].is_normalized) \u2227\n              (eval env (var_from_offset U64 (i0 + 104))).is_normalized \u2227 state[\u219118].is_normalized) \u2227\n            (eval env (var_from_offset U64 (i0 + 112))).is_normalized \u2227 state[\u219119].is_normalized) \u2227\n          state[\u219120].is_normalized \u2227 state[\u219121].is_normalized) \u2227\n        (eval env (var_from_offset U64 (i0 + 128))).is_normalized \u2227 state[\u219122].is_normalized) \u2227\n      (eval env (var_from_offset U64 (i0 + 136))).is_normalized \u2227 state[\u219123].is_normalized) \u2227\n    (eval env (var_from_offset U64 (i0 + 144))).is_normalized \u2227 state[\u219124].is_normalized",
        "url": "https://github.com/Verified-zkEVM/clean/blob/4557cde1ec55024b351ad0d0d1a628d0a9f81ca2/Clean/Gadgets/Keccak/ThetaC.lean#L117"
      },
      "metadata": {
        "blame_email_hash": "0130f16e5d6d",
        "blame_date": "2025-04-03T17:31:42+02:00",
        "inclusion_date": "2025-04-17T05:13:47.711581+00:00"
      },
      "id": "7c770793b17a5174dcf32cc2948bbb5d1d2e4f52a5f5547047e97fdb44b6c639"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "main",
        "commit": "3f560fab7d88621bf857d306079aa39dec39451b",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 181,
        "start_column": 2,
        "end_line": 181,
        "end_column": 7,
        "file": "Clean/Gadgets/Keccak/ThetaC.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d\u00b9 : Fact (Nat.Prime p)\ninst\u271d : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var State (F p)\nh_env : env.uses_local_witnesses ((ElaboratedCircuit.main state_var).operations i0)\nstate : State (F p)\nh_assumptions : assumptions state\nh_input : Vector.map (eval env) state_var = state\n\u22a2 ((((((((((((((((((((eval env state_var[0]).is_normalized \u2227 (eval env state_var[1]).is_normalized) \u2227\n                                        (eval env (var_from_offset U64 i0)).is_normalized \u2227\n                                          (eval env state_var[2]).is_normalized) \u2227\n                                      (eval env (var_from_offset U64 (i0 + 8))).is_normalized \u2227\n                                        (eval env state_var[\u21913]).is_normalized) \u2227\n                                    (eval env (var_from_offset U64 (i0 + 16))).is_normalized \u2227\n                                      (eval env state_var[\u21914]).is_normalized) \u2227\n                                  (eval env state_var[\u21915]).is_normalized \u2227 (eval env state_var[\u21916]).is_normalized) \u2227\n                                (eval env (var_from_offset U64 (i0 + 32))).is_normalized \u2227\n                                  (eval env state_var[\u21917]).is_normalized) \u2227\n                              (eval env (var_from_offset U64 (i0 + 40))).is_normalized \u2227\n                                (eval env state_var[\u21918]).is_normalized) \u2227\n                            (eval env (var_from_offset U64 (i0 + 48))).is_normalized \u2227\n                              (eval env state_var[\u21919]).is_normalized) \u2227\n                          (eval env state_var[\u219110]).is_normalized \u2227 (eval env state_var[\u219111]).is_normalized) \u2227\n                        (eval env (var_from_offset U64 (i0 + 64))).is_normalized \u2227\n                          (eval env state_var[\u219112]).is_normalized) \u2227\n                      (eval env (var_from_offset U64 (i0 + 72))).is_normalized \u2227\n                        (eval env state_var[\u219113]).is_normalized) \u2227\n                    (eval env (var_from_offset U64 (i0 + 80))).is_normalized \u2227\n                      (eval env state_var[\u219114]).is_normalized) \u2227\n                  (eval env state_var[\u219115]).is_normalized \u2227 (eval env state_var[\u219116]).is_normalized) \u2227\n                (eval env (var_from_offset U64 (i0 + 96))).is_normalized \u2227 (eval env state_var[\u219117]).is_normalized) \u2227\n              (eval env (var_from_offset U64 (i0 + 104))).is_normalized \u2227 (eval env state_var[\u219118]).is_normalized) \u2227\n            (eval env (var_from_offset U64 (i0 + 112))).is_normalized \u2227 (eval env state_var[\u219119]).is_normalized) \u2227\n          (eval env state_var[\u219120]).is_normalized \u2227 (eval env state_var[\u219121]).is_normalized) \u2227\n        (eval env (var_from_offset U64 (i0 + 128))).is_normalized \u2227 (eval env state_var[\u219122]).is_normalized) \u2227\n      (eval env (var_from_offset U64 (i0 + 136))).is_normalized \u2227 (eval env state_var[\u219123]).is_normalized) \u2227\n    (eval env (var_from_offset U64 (i0 + 144))).is_normalized \u2227 (eval env state_var[\u219124]).is_normalized",
        "url": "https://github.com/Verified-zkEVM/clean/blob/3f560fab7d88621bf857d306079aa39dec39451b/Clean/Gadgets/Keccak/ThetaC.lean#L181"
      },
      "metadata": {
        "blame_email_hash": "0130f16e5d6d",
        "blame_date": "2025-04-03T17:31:42+02:00",
        "inclusion_date": "2025-04-17T05:16:38.780490+00:00"
      },
      "id": "8cbd4f46db2b6da02b140fe7e9e014a4d392314bbfea584eb368014228083a90"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "var_from_offset_vector",
        "commit": "d58fa08a788751e2ca43bccca3a9a67e7f04ecb3",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 67,
        "start_column": 18,
        "end_line": 67,
        "end_column": 23,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\noff : Fin 8\n\u22a2 Soundness (F p) assumptions (spec off)",
        "url": "https://github.com/Verified-zkEVM/clean/blob/d58fa08a788751e2ca43bccca3a9a67e7f04ecb3/Clean/Gadgets/ByteDecomposition.lean#L67"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-17T05:18:08.272664+00:00"
      },
      "id": "b34aa3e976c29f5ec5848f356627a94d737d26307a1d5cba0b315a7fe46e9b04"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "var_from_offset_vector",
        "commit": "d58fa08a788751e2ca43bccca3a9a67e7f04ecb3",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 94,
        "start_column": 8,
        "end_line": 94,
        "end_column": 13,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "case mk.mk.\u00ab1\u00bb\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nx_var : Expression (F p)\nx : F p\nas : ZMod.val x < 256\nh_eval : Expression.eval env x_var = x\nhenv :\n  \u2200 (i : Fin 2),\n    env.get (i0 + \u2191i) =\n      [if 0 < (fun i => i) \u27e81, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e81, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n          else 0,\n          FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e81, \u22ef\u27e9))][\u2191i]\nh0 :\n  env.get i0 =\n    if 0 < (fun i => i) \u27e81, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e81, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e81, \u22ef\u27e9)) := henv 1\n\u22a2 ((ZMod.val x % 2 + ZMod.val x / 2 * ZMod.val 2 % p) % p + ZMod.val (-x)) % p = ZMod.val 0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/d58fa08a788751e2ca43bccca3a9a67e7f04ecb3/Clean/Gadgets/ByteDecomposition.lean#L94"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-17T05:18:08.272664+00:00"
      },
      "id": "d638b815fdd6dcf75fde468624492fb4fa4e2b0c32ee529c1271be701054677b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "var_from_offset_vector",
        "commit": "d58fa08a788751e2ca43bccca3a9a67e7f04ecb3",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 97,
        "start_column": 11,
        "end_line": 97,
        "end_column": 16,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "case mk.mk.\u00ab2\u00bb\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nx_var : Expression (F p)\nx : F p\nas : ZMod.val x < 256\nh_eval : Expression.eval env x_var = x\nhenv :\n  \u2200 (i : Fin 2),\n    env.get (i0 + \u2191i) =\n      [if 0 < (fun i => i) \u27e82, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e82, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n          else 0,\n          FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e82, \u22ef\u27e9))][\u2191i]\nh0 :\n  env.get i0 =\n    if 0 < (fun i => i) \u27e82, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e82, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e82, \u22ef\u27e9)) := henv 1\n\u22a2 (if 0 < (fun i => i) \u27e82, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e82, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n        else 0) +\n        FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e82, \u22ef\u27e9)) * 2 ^ \u2191((fun i => i) \u27e82, \u22ef\u27e9) +\n      -x =\n    0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/d58fa08a788751e2ca43bccca3a9a67e7f04ecb3/Clean/Gadgets/ByteDecomposition.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-17T05:18:08.272664+00:00"
      },
      "id": "949e24f572f1bc1c8e33003e0daf9c1b57d1fa7725951e866657f8e9db6fb4d8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "var_from_offset_vector",
        "commit": "d58fa08a788751e2ca43bccca3a9a67e7f04ecb3",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 97,
        "start_column": 11,
        "end_line": 97,
        "end_column": 16,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "case mk.mk.\u00ab3\u00bb\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nx_var : Expression (F p)\nx : F p\nas : ZMod.val x < 256\nh_eval : Expression.eval env x_var = x\nhenv :\n  \u2200 (i : Fin 2),\n    env.get (i0 + \u2191i) =\n      [if 0 < (fun i => i) \u27e83, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e83, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n          else 0,\n          FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e83, \u22ef\u27e9))][\u2191i]\nh0 :\n  env.get i0 =\n    if 0 < (fun i => i) \u27e83, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e83, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e83, \u22ef\u27e9)) := henv 1\n\u22a2 (if 0 < (fun i => i) \u27e83, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e83, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n        else 0) +\n        FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e83, \u22ef\u27e9)) * 2 ^ \u2191((fun i => i) \u27e83, \u22ef\u27e9) +\n      -x =\n    0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/d58fa08a788751e2ca43bccca3a9a67e7f04ecb3/Clean/Gadgets/ByteDecomposition.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-17T05:18:08.272664+00:00"
      },
      "id": "4747c3e9d168871979e1114dfa0a9c4bb8f0b2ed51d625f83dac015e4b7910c9"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "var_from_offset_vector",
        "commit": "d58fa08a788751e2ca43bccca3a9a67e7f04ecb3",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 97,
        "start_column": 11,
        "end_line": 97,
        "end_column": 16,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "case mk.mk.\u00ab4\u00bb\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nx_var : Expression (F p)\nx : F p\nas : ZMod.val x < 256\nh_eval : Expression.eval env x_var = x\nhenv :\n  \u2200 (i : Fin 2),\n    env.get (i0 + \u2191i) =\n      [if 0 < (fun i => i) \u27e84, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e84, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n          else 0,\n          FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e84, \u22ef\u27e9))][\u2191i]\nh0 :\n  env.get i0 =\n    if 0 < (fun i => i) \u27e84, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e84, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e84, \u22ef\u27e9)) := henv 1\n\u22a2 (if 0 < (fun i => i) \u27e84, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e84, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n        else 0) +\n        FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e84, \u22ef\u27e9)) * 2 ^ \u2191((fun i => i) \u27e84, \u22ef\u27e9) +\n      -x =\n    0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/d58fa08a788751e2ca43bccca3a9a67e7f04ecb3/Clean/Gadgets/ByteDecomposition.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-17T05:18:08.272664+00:00"
      },
      "id": "9edf235399f1ee4858fdf550fefd51dc54710883bc1c852d8bc7a8b1c8edfc53"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "var_from_offset_vector",
        "commit": "d58fa08a788751e2ca43bccca3a9a67e7f04ecb3",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 97,
        "start_column": 11,
        "end_line": 97,
        "end_column": 16,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "case mk.mk.\u00ab5\u00bb\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nx_var : Expression (F p)\nx : F p\nas : ZMod.val x < 256\nh_eval : Expression.eval env x_var = x\nhenv :\n  \u2200 (i : Fin 2),\n    env.get (i0 + \u2191i) =\n      [if 0 < (fun i => i) \u27e85, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e85, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n          else 0,\n          FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e85, \u22ef\u27e9))][\u2191i]\nh0 :\n  env.get i0 =\n    if 0 < (fun i => i) \u27e85, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e85, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e85, \u22ef\u27e9)) := henv 1\n\u22a2 (if 0 < (fun i => i) \u27e85, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e85, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n        else 0) +\n        FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e85, \u22ef\u27e9)) * 2 ^ \u2191((fun i => i) \u27e85, \u22ef\u27e9) +\n      -x =\n    0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/d58fa08a788751e2ca43bccca3a9a67e7f04ecb3/Clean/Gadgets/ByteDecomposition.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-17T05:18:08.272664+00:00"
      },
      "id": "618b7ef40804bbba8402a4e0243b7b31a9a812f7c70ca96c684888eab3e9cf8c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "var_from_offset_vector",
        "commit": "d58fa08a788751e2ca43bccca3a9a67e7f04ecb3",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 97,
        "start_column": 11,
        "end_line": 97,
        "end_column": 16,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "case mk.mk.\u00ab6\u00bb\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nx_var : Expression (F p)\nx : F p\nas : ZMod.val x < 256\nh_eval : Expression.eval env x_var = x\nhenv :\n  \u2200 (i : Fin 2),\n    env.get (i0 + \u2191i) =\n      [if 0 < (fun i => i) \u27e86, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e86, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n          else 0,\n          FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e86, \u22ef\u27e9))][\u2191i]\nh0 :\n  env.get i0 =\n    if 0 < (fun i => i) \u27e86, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e86, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e86, \u22ef\u27e9)) := henv 1\n\u22a2 (if 0 < (fun i => i) \u27e86, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e86, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n        else 0) +\n        FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e86, \u22ef\u27e9)) * 2 ^ \u2191((fun i => i) \u27e86, \u22ef\u27e9) +\n      -x =\n    0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/d58fa08a788751e2ca43bccca3a9a67e7f04ecb3/Clean/Gadgets/ByteDecomposition.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-17T05:18:08.272664+00:00"
      },
      "id": "6161bd9ae705ac3f898cd0035137b152fa2f6afcc0f913e4dd0df439943a2644"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "var_from_offset_vector",
        "commit": "d58fa08a788751e2ca43bccca3a9a67e7f04ecb3",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 97,
        "start_column": 11,
        "end_line": 97,
        "end_column": 16,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "case mk.mk.\u00ab7\u00bb\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nx_var : Expression (F p)\nx : F p\nas : ZMod.val x < 256\nh_eval : Expression.eval env x_var = x\nhenv :\n  \u2200 (i : Fin 2),\n    env.get (i0 + \u2191i) =\n      [if 0 < (fun i => i) \u27e87, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e87, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n          else 0,\n          FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e87, \u22ef\u27e9))][\u2191i]\nh0 :\n  env.get i0 =\n    if 0 < (fun i => i) \u27e87, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e87, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e87, \u22ef\u27e9)) := henv 1\n\u22a2 (if 0 < (fun i => i) \u27e87, \u22ef\u27e9 then FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191((fun i => i) \u27e87, \u22ef\u27e9), \u22ef\u27e9 \u22ef\n        else 0) +\n        FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191((fun i => i) \u27e87, \u22ef\u27e9)) * 2 ^ \u2191((fun i => i) \u27e87, \u22ef\u27e9) +\n      -x =\n    0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/d58fa08a788751e2ca43bccca3a9a67e7f04ecb3/Clean/Gadgets/ByteDecomposition.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-17T05:18:08.272664+00:00"
      },
      "id": "ebaad3ce6714ea75ac176b263f10bde77545d1e52f745451364c591039dc9847"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "var_from_offset_vector",
        "commit": "d58fa08a788751e2ca43bccca3a9a67e7f04ecb3",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 329,
        "start_column": 2,
        "end_line": 329,
        "end_column": 7,
        "file": "Clean/Circuit/Provable.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\nF : Type\ninst\u271d\u00b9 : Field F\n\u03b1 : TypeMap\ninst\u271d : NonEmptyProvableType \u03b1\noffset : \u2115\n\u22a2 var_from_offset (ProvableVector \u03b1 n) offset = Vector.natInit n fun i => var_from_offset \u03b1 (offset + size \u03b1 * i)",
        "url": "https://github.com/Verified-zkEVM/clean/blob/d58fa08a788751e2ca43bccca3a9a67e7f04ecb3/Clean/Circuit/Provable.lean#L329"
      },
      "metadata": {
        "blame_email_hash": "0130f16e5d6d",
        "blame_date": "2025-04-16T11:25:08+02:00",
        "inclusion_date": "2025-04-17T05:18:08.272664+00:00"
      },
      "id": "9af44bc637ebd28cc825ce0c0c0b4b97c2b949f5e2ddd9d1b04ddb2be6093a13"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "var_from_offset_vector",
        "commit": "d58fa08a788751e2ca43bccca3a9a67e7f04ecb3",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 67,
        "start_column": 18,
        "end_line": 67,
        "end_column": 23,
        "file": "Clean/Gadgets/Rotation64/Rotation64.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\noff : Fin 64\n\u22a2 Soundness (F p) assumptions (spec off)",
        "url": "https://github.com/Verified-zkEVM/clean/blob/d58fa08a788751e2ca43bccca3a9a67e7f04ecb3/Clean/Gadgets/Rotation64/Rotation64.lean#L67"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T17:43:17+02:00",
        "inclusion_date": "2025-04-17T05:18:08.272664+00:00"
      },
      "id": "780da23a9c437b3d83fa0df0c7d744f1b59f0c9552161f756da50945e57215e2"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "var_from_offset_vector",
        "commit": "d58fa08a788751e2ca43bccca3a9a67e7f04ecb3",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 68,
        "start_column": 21,
        "end_line": 68,
        "end_column": 26,
        "file": "Clean/Gadgets/Rotation64/Rotation64.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\noff : Fin 64\n\u22a2 Completeness (F p) Outputs assumptions",
        "url": "https://github.com/Verified-zkEVM/clean/blob/d58fa08a788751e2ca43bccca3a9a67e7f04ecb3/Clean/Gadgets/Rotation64/Rotation64.lean#L68"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-02-27T17:02:29+01:00",
        "inclusion_date": "2025-04-17T05:18:08.272664+00:00"
      },
      "id": "c6d13aad4af559e48835ec08d7f88c8b53f86932fcca32b28fac31664d9fb17b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "var_from_offset_vector",
        "commit": "d58fa08a788751e2ca43bccca3a9a67e7f04ecb3",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 106,
        "start_column": 2,
        "end_line": 106,
        "end_column": 7,
        "file": "Clean/Gadgets/Keccak/ThetaD.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var KeccakSlice (F p)\nh_env : env.uses_local_witnesses ((ElaboratedCircuit.main state_var).operations i0)\nstate : KeccakSlice (F p)\nh_assumptions : assumptions state\nh_input : Vector.map (eval env) state_var = state\n\u22a2 ((((((((Rotation64.assumptions (eval env state_var[1]) \u2227\n                    (eval env state_var[\u21914]).is_normalized \u2227\n                      (eval env\n                          { x0 := var { index := i0 + 16 }, x1 := var { index := i0 + 17 },\n                            x2 := var { index := i0 + 18 }, x3 := var { index := i0 + 19 },\n                            x4 := var { index := i0 + 20 }, x5 := var { index := i0 + 21 },\n                            x6 := var { index := i0 + 22 }, x7 := var { index := i0 + 23 } }).is_normalized) \u2227\n                  Rotation64.assumptions (eval env state_var[2])) \u2227\n                (eval env state_var[0]).is_normalized \u2227\n                  (eval env\n                      { x0 := var { index := i0 + 48 }, x1 := var { index := i0 + 49 }, x2 := var { index := i0 + 50 },\n                        x3 := var { index := i0 + 51 }, x4 := var { index := i0 + 52 }, x5 := var { index := i0 + 53 },\n                        x6 := var { index := i0 + 54 }, x7 := var { index := i0 + 55 } }).is_normalized) \u2227\n              Rotation64.assumptions (eval env state_var[\u21913])) \u2227\n            (eval env state_var[1]).is_normalized \u2227\n              (eval env\n                  { x0 := var { index := i0 + 80 }, x1 := var { index := i0 + 81 }, x2 := var { index := i0 + 82 },\n                    x3 := var { index := i0 + 83 }, x4 := var { index := i0 + 84 }, x5 := var { index := i0 + 85 },\n                    x6 := var { index := i0 + 86 }, x7 := var { index := i0 + 87 } }).is_normalized) \u2227\n          Rotation64.assumptions (eval env state_var[\u21914])) \u2227\n        (eval env state_var[2]).is_normalized \u2227\n          (eval env\n              { x0 := var { index := i0 + 112 }, x1 := var { index := i0 + 113 }, x2 := var { index := i0 + 114 },\n                x3 := var { index := i0 + 115 }, x4 := var { index := i0 + 116 }, x5 := var { index := i0 + 117 },\n                x6 := var { index := i0 + 118 }, x7 := var { index := i0 + 119 } }).is_normalized) \u2227\n      Rotation64.assumptions (eval env state_var[0])) \u2227\n    (eval env state_var[\u21913]).is_normalized \u2227\n      (eval env\n          { x0 := var { index := i0 + 144 }, x1 := var { index := i0 + 145 }, x2 := var { index := i0 + 146 },\n            x3 := var { index := i0 + 147 }, x4 := var { index := i0 + 148 }, x5 := var { index := i0 + 149 },\n            x6 := var { index := i0 + 150 }, x7 := var { index := i0 + 151 } }).is_normalized",
        "url": "https://github.com/Verified-zkEVM/clean/blob/d58fa08a788751e2ca43bccca3a9a67e7f04ecb3/Clean/Gadgets/Keccak/ThetaD.lean#L106"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-15T00:48:02+02:00",
        "inclusion_date": "2025-04-17T05:18:08.272664+00:00"
      },
      "id": "c2ad37a4804ee4a2bf8439935f3893d354d4296507bce731bdd53f4cd33f65aa"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "var_from_offset_vector",
        "commit": "d58fa08a788751e2ca43bccca3a9a67e7f04ecb3",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 112,
        "start_column": 2,
        "end_line": 112,
        "end_column": 7,
        "file": "Clean/Gadgets/Keccak/ThetaXor.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var Inputs (F p)\nh_env : env.uses_local_witnesses ((ElaboratedCircuit.main state_var).operations i0)\nstate : Inputs (F p)\nh_assumptions : assumptions state\nh_input : { state := Vector.map (eval env) state_var.state, d := Vector.map (eval env) state_var.d } = state\n\u22a2 (((((((((((((((((((((((((eval env state_var.state[0]).is_normalized \u2227 (eval env state_var.d[0]).is_normalized) \u2227\n                                                  (eval env state_var.state[1]).is_normalized \u2227\n                                                    (eval env state_var.d[0]).is_normalized) \u2227\n                                                (eval env state_var.state[2]).is_normalized \u2227\n                                                  (eval env state_var.d[0]).is_normalized) \u2227\n                                              (eval env state_var.state[\u21913]).is_normalized \u2227\n                                                (eval env state_var.d[0]).is_normalized) \u2227\n                                            (eval env state_var.state[\u21914]).is_normalized \u2227\n                                              (eval env state_var.d[0]).is_normalized) \u2227\n                                          (eval env state_var.state[\u21915]).is_normalized \u2227\n                                            (eval env state_var.d[1]).is_normalized) \u2227\n                                        (eval env state_var.state[\u21916]).is_normalized \u2227\n                                          (eval env state_var.d[1]).is_normalized) \u2227\n                                      (eval env state_var.state[\u21917]).is_normalized \u2227\n                                        (eval env state_var.d[1]).is_normalized) \u2227\n                                    (eval env state_var.state[\u21918]).is_normalized \u2227\n                                      (eval env state_var.d[1]).is_normalized) \u2227\n                                  (eval env state_var.state[\u21919]).is_normalized \u2227\n                                    (eval env state_var.d[1]).is_normalized) \u2227\n                                (eval env state_var.state[\u219110]).is_normalized \u2227\n                                  (eval env state_var.d[2]).is_normalized) \u2227\n                              (eval env state_var.state[\u219111]).is_normalized \u2227 (eval env state_var.d[2]).is_normalized) \u2227\n                            (eval env state_var.state[\u219112]).is_normalized \u2227 (eval env state_var.d[2]).is_normalized) \u2227\n                          (eval env state_var.state[\u219113]).is_normalized \u2227 (eval env state_var.d[2]).is_normalized) \u2227\n                        (eval env state_var.state[\u219114]).is_normalized \u2227 (eval env state_var.d[2]).is_normalized) \u2227\n                      (eval env state_var.state[\u219115]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n                    (eval env state_var.state[\u219116]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n                  (eval env state_var.state[\u219117]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n                (eval env state_var.state[\u219118]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n              (eval env state_var.state[\u219119]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n            (eval env state_var.state[\u219120]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized) \u2227\n          (eval env state_var.state[\u219121]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized) \u2227\n        (eval env state_var.state[\u219122]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized) \u2227\n      (eval env state_var.state[\u219123]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized) \u2227\n    (eval env state_var.state[\u219124]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized",
        "url": "https://github.com/Verified-zkEVM/clean/blob/d58fa08a788751e2ca43bccca3a9a67e7f04ecb3/Clean/Gadgets/Keccak/ThetaXor.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-15T16:27:02+02:00",
        "inclusion_date": "2025-04-17T05:18:08.272664+00:00"
      },
      "id": "9c825c8c304087b5d22bc3df88f1eaebe3e9bee882cc64a9c8ef414a0ec752c7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "var_from_offset_vector",
        "commit": "d58fa08a788751e2ca43bccca3a9a67e7f04ecb3",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 60,
        "start_column": 2,
        "end_line": 60,
        "end_column": 7,
        "file": "Clean/Gadgets/Keccak/Theta.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var KeccakState (F p)\nstate : KeccakState (F p)\nh_env :\n  env.uses_local_witnesses\n    ((do\n          let c \u2190 subcircuit ThetaC.circuit state_var\n          let d \u2190 subcircuit ThetaD.circuit c\n          let __do_lift \u2190 subcircuit ThetaXor.circuit { state := state_var, d := d }\n          pure __do_lift).operations\n      i0)\nh_assumptions : state.is_normalized\nh_input : Vector.map (eval env) state_var = state\n\u22a2 KeccakSlice.is_normalized\n      {\n        toArray :=\n          #[eval env (var_from_offset U64 (i0 + 24)), eval env (var_from_offset U64 (i0 + 56)),\n            eval env (var_from_offset U64 (i0 + 88)), eval env (var_from_offset U64 (i0 + 120)),\n            eval env (var_from_offset U64 (i0 + 152))],\n        size_toArray := \u22ef } \u2227\n    KeccakSlice.is_normalized\n      {\n        toArray :=\n          #[eval env (var_from_offset U64 (i0 + 160 + 24)), eval env (var_from_offset U64 (i0 + 160 + 56)),\n            eval env (var_from_offset U64 (i0 + 160 + 88)), eval env (var_from_offset U64 (i0 + 160 + 120)),\n            eval env (var_from_offset U64 (i0 + 160 + 152))],\n        size_toArray := \u22ef }",
        "url": "https://github.com/Verified-zkEVM/clean/blob/d58fa08a788751e2ca43bccca3a9a67e7f04ecb3/Clean/Gadgets/Keccak/Theta.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-15T16:51:25+02:00",
        "inclusion_date": "2025-04-17T05:18:08.272664+00:00"
      },
      "id": "5f1b59b66a43c5a4aec891abc535434eacb4a07189042a1cb06c97c9625dc71a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "var_from_offset_vector",
        "commit": "d58fa08a788751e2ca43bccca3a9a67e7f04ecb3",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 102,
        "start_column": 2,
        "end_line": 102,
        "end_column": 7,
        "file": "Clean/Gadgets/Keccak/ThetaC.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var KeccakState (F p)\nh_env : env.uses_local_witnesses ((ElaboratedCircuit.main state_var).operations i0)\nstate : KeccakState (F p)\nh_assumptions : assumptions state\nh_input : Vector.map (eval env) state_var = state\ns : \u2200 (i : Fin 25), eval env state_var[\u2191i] = state[\u2191i]\n\u22a2 (((((((((((((((((((state[\u21910].is_normalized \u2227 state[\u21911].is_normalized) \u2227\n                                        (eval env (var_from_offset U64 i0)).is_normalized \u2227 state[\u21912].is_normalized) \u2227\n                                      (eval env (var_from_offset U64 (i0 + 8))).is_normalized \u2227\n                                        state[\u21913].is_normalized) \u2227\n                                    (eval env (var_from_offset U64 (i0 + 16))).is_normalized \u2227\n                                      state[\u21914].is_normalized) \u2227\n                                  state[\u21915].is_normalized \u2227 state[\u21916].is_normalized) \u2227\n                                (eval env (var_from_offset U64 (i0 + 32))).is_normalized \u2227 state[\u21917].is_normalized) \u2227\n                              (eval env (var_from_offset U64 (i0 + 40))).is_normalized \u2227 state[\u21918].is_normalized) \u2227\n                            (eval env (var_from_offset U64 (i0 + 48))).is_normalized \u2227 state[\u21919].is_normalized) \u2227\n                          state[\u219110].is_normalized \u2227 state[\u219111].is_normalized) \u2227\n                        (eval env (var_from_offset U64 (i0 + 64))).is_normalized \u2227 state[\u219112].is_normalized) \u2227\n                      (eval env (var_from_offset U64 (i0 + 72))).is_normalized \u2227 state[\u219113].is_normalized) \u2227\n                    (eval env (var_from_offset U64 (i0 + 80))).is_normalized \u2227 state[\u219114].is_normalized) \u2227\n                  state[\u219115].is_normalized \u2227 state[\u219116].is_normalized) \u2227\n                (eval env (var_from_offset U64 (i0 + 96))).is_normalized \u2227 state[\u219117].is_normalized) \u2227\n              (eval env (var_from_offset U64 (i0 + 104))).is_normalized \u2227 state[\u219118].is_normalized) \u2227\n            (eval env (var_from_offset U64 (i0 + 112))).is_normalized \u2227 state[\u219119].is_normalized) \u2227\n          state[\u219120].is_normalized \u2227 state[\u219121].is_normalized) \u2227\n        (eval env (var_from_offset U64 (i0 + 128))).is_normalized \u2227 state[\u219122].is_normalized) \u2227\n      (eval env (var_from_offset U64 (i0 + 136))).is_normalized \u2227 state[\u219123].is_normalized) \u2227\n    (eval env (var_from_offset U64 (i0 + 144))).is_normalized \u2227 state[\u219124].is_normalized",
        "url": "https://github.com/Verified-zkEVM/clean/blob/d58fa08a788751e2ca43bccca3a9a67e7f04ecb3/Clean/Gadgets/Keccak/ThetaC.lean#L102"
      },
      "metadata": {
        "blame_email_hash": "0130f16e5d6d",
        "blame_date": "2025-04-03T17:31:42+02:00",
        "inclusion_date": "2025-04-17T05:18:08.272664+00:00"
      },
      "id": "3eb48e9e7a38327483285a323e7e56291112432e8e6063a08566f2efaf688be8"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 38,
        "start_column": 2,
        "end_line": 38,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\nG : SimpleGraph \u03b1\na : \u03b1\nw : G.Walk a a\nhw : Odd w.length\n\u22a2 \u2203 b p, Odd (\u2191p).length",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "25fdbf9119c10267a1ced731e50b9ba098d3985ba25b47825bb6f45bb7804d42"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 57,
        "start_column": 2,
        "end_line": 57,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\n\u22a2 \u2203 a b, a \u2260 b \u2227 G.degree a = G.degree b",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L57"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "4dcb3979f1d3451795fd03941aab7b08c079e7cf5c6e6158fbfa28361e2399c2"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 70,
        "start_column": 2,
        "end_line": 70,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "case intro\n\u03b1 : Type u_2\ninst\u271d\u00b9 : Finite \u03b1\ninst\u271d : Nontrivial \u03b1\nG : SimpleGraph \u03b1\nhG : G.Connected\nval\u271d : Fintype \u03b1\n\u22a2 \u2203 a, (\u22a4.deleteVerts {a}).coe.Connected",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L70"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2022-11-20T17:08:07+00:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "2d922f0301a73b9606a2ad7bc4bf58d62b65efc6f411d9ca4cd07e0d5b7809ea"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 83,
        "start_column": 2,
        "end_line": 83,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "case inr\n\u03b1 : Type u_2\ninst\u271d\u00b2 : Fintype \u03b1\ninst\u271d\u00b9 : DecidableEq \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\nhG : G.IsAcyclic\nh\u271d : Nonempty \u03b1\n\u22a2 G.edgeFinset.card \u2264 card \u03b1 - 1",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L83"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2022-11-20T17:08:07+00:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "05fc14a7107bc2a4dc0b31d1315b4df4a49e29717693c0e64089fa781fb7eb6b"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 101,
        "start_column": 2,
        "end_line": 101,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d : Fintype \u03b1\ns : Multiset \u2115\nhs : s.card = card \u03b1\nh\u2080 : 0 \u2209 s\n\u22a2 s.sum = 2 * card \u03b1 - 2 \u2194 \u2203 G x, degreeSequence G = s",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L101"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "680daed1530eb1b28076021970671f7baa5799eb273e489382d72bbb0af00791"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 113,
        "start_column": 2,
        "end_line": 113,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\n\u03b1 : Type u_2\nG : SimpleGraph \u03b1\nhG : G.IsAcyclic\ns : Finset \u03b9\nf : \u03b9 \u2192 G.Subgraph\nhf : \u2200 i \u2208 s, (f i).coe.IsAcyclic\nh : \u2200 i \u2208 s, \u2200 j \u2208 s, f i \u2293 f j \u2260 \u22a5\n\u22a2 s.inf f \u2260 \u22a5",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L113"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "43bff8f6e9a6934bce9e350fd9d183b93afef314dbe594a145aa1c13ce5c752f"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 128,
        "start_column": 2,
        "end_line": 128,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\n\u22a2 \u2203 H x, \u2200 (a : \u03b1), averageDegree G / 2 \u2264 \u2191(H.degree a)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L128"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "c10f4e629a7af70458cbc2d600701e3c9d3b5e8e23f3e976577f992507f8fac4"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 145,
        "start_column": 2,
        "end_line": 145,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\n\u22a2 (\u2203 \ud835\udc9c,\n      (\u2200 (p q : (a : \u03b1) \u00d7 G.Path a a), (\u2191p.snd).edges.Disjoint (\u2191q.snd).edges) \u2227\n        \u2200 (e : Sym2 \u03b1), \u2203 p \u2208 \ud835\udc9c, e \u2208 (\u2191p.snd).edges) \u2194\n    \u2200 (a : \u03b1), Even (G.degree a)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L145"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "c1ba01d2950bde60c2ca96084427889ab3e8510830192229ceae8366ea21a1df"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 160,
        "start_column": 2,
        "end_line": 160,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\ninst\u271d : DecidableEq \u03b1\nn : \u2115\n\u22a2 (\u2203 G x k, G.IsRegularOfDegree k \u2227 G.cliqueNum = n) \u2194 n \u2264 card \u03b1 / 2 \u2228 n = card \u03b1",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L160"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "82f0ad876024f3dcea77ec08d5058156929e916e0fadf94f8621b1542423e6a2"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 181,
        "start_column": 2,
        "end_line": 181,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : DecidableEq \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\ns : Finset \u03b1\n\u22a2 \u2203 u v,\n    Disjoint u v \u2227\n      u \u222a v = s \u2227 (\u2200 a \u2208 u, Even #{ x // x \u2208 {b \u2208 u | G.Adj a b} }) \u2227 \u2200 a \u2208 v, Even #{ x // x \u2208 {b \u2208 v | G.Adj a b} }",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L181"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "1ce35102666e211a5af587dcd22e066c7b94ed9ab6a7b1ec0bc6aabd63e719fc"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 197,
        "start_column": 2,
        "end_line": 197,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\n\u03b2 : Type u_3\ninst\u271d : Finite \u03b1\ng : \u03b2 \u21aa \u03b1\nf : \u03b2 \u2192 \u03b1 \u2192 \u03b1\nhf : IsLatin f\n\u22a2 \u2203 f', f' \u2218 \u21d1g = f \u2227 IsLatin f",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "31401b062f241410078f84fcf5b8010325e9a20ee38677c6969f18ffa611c44a"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 214,
        "start_column": 2,
        "end_line": 214,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 r, (\u2200 (A : Finset \u2115), \u2191A.card \u2264 #\u2191(Rel.image r \u2191A)) \u2227 \u2200 (f : \u2115 \u2192 \u2115), Injective f \u2192 \u2203 n, \u00acr n (f n)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L214"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "a46246aa76d65e7985648df42d85308873b4622fea0fe073075ac722f33bfed8"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 219,
        "start_column": 2,
        "end_line": 219,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\n\u03b2 : Type u_3\ninst\u271d\u00b3 : DecidableEq \u03b2\ninst\u271d\u00b2 : Countable \u03b1\ninst\u271d\u00b9 : Countable \u03b2\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\ninst\u271d : (a : \u03b1) \u2192 Fintype \u2191(Rel.image r {a})\nhr : \u2200 (A : Finset \u03b1), A.card \u2264 card \u2191(Rel.image r \u2191A)\n\u22a2 \u2203 f, Injective f \u2227 \u2200 (a : \u03b1), r a (f a)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L219"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "440b29545eebc654bb401995f01530a7bfd7bc6585d626292373e7d9fc865762"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 224,
        "start_column": 2,
        "end_line": 224,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\n\u03b2 : Type u_3\ninst\u271d\u00b9 : DecidableEq \u03b2\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\ninst\u271d : (a : \u03b1) \u2192 Fintype \u2191(Rel.image r {a})\nhr : \u2200 (A : Finset \u03b1), A.card \u2264 card \u2191(Rel.image r \u2191A)\n\u22a2 \u2203 f, Injective f \u2227 \u2200 (a : \u03b1), r a (f a)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L224"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "2aa9935d0eaf0d7d88cbd715b6b083ccd3da3200a58fc14e900af0b6dea181a2"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 247,
        "start_column": 2,
        "end_line": 247,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 \u03b5, 0 < \u03b5 \u2227 \u2200 (\u03b1 : Type u_5) [inst : Fintype \u03b1], \u2203 x, \u2200 (f : \u03b1 \u2192 \u211d \u00d7 \u211d), \u03b5 * \u221a\u2191(card \u03b1) \u2264 distortion f",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L247"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "9c9a52842495ef87ae53652250dbfef836fb84f053c875856772b39da7e8dda8"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 252,
        "start_column": 2,
        "end_line": 252,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 \u03b5, 0 < \u03b5 \u2227 \u2200 (\u03b1 : Type u_5) [inst : Fintype \u03b1], \u2203 x, \u2200 (f : \u03b1 \u2192 \u211d \u00d7 \u211d), \u03b5 * \u2191(card \u03b1) \u2264 distortion f",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L252"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "e5f39b1081cb76eb32ad3433bd1e40796b92a0463a64a363b426d09f79c745f8"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 46,
        "start_column": 75,
        "end_line": 46,
        "end_column": 80,
        "file": "LeanCamCombi/ExtrProbCombi/BinomialRandomGraph.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d : MeasurableSpace \u03a9\nG : \u03a9 \u2192 SimpleGraph \u03b1\np : \u211d\u22650\n\u03bc : Measure \u03a9\nhG : IsBinomialRandomGraph G p \u03bc\n\u22a2 iIndepFun (fun e \u03c9 => e \u2208 (G \u03c9).edgeSet) \u03bc",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/ExtrProbCombi/BinomialRandomGraph.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-06T17:45:28+00:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "9fcd97f19f0a9e5b04c254d57c40d02f0c6d315abf34ea33fdd26b9130216432"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 117,
        "start_column": 8,
        "end_line": 117,
        "end_column": 13,
        "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
      },
      "debug_info": {
        "goal": "case refine_1.refine_1\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ni : \u03b1\n\u22a2 MeasurableSet fun \u03c9 => X \u03c9 i",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L117"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "f88ce3cee2cf1265c9aebb89976c8ef799adfe828d7e0d404a27c551cba93411"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 118,
        "start_column": 8,
        "end_line": 118,
        "end_column": 13,
        "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
      },
      "debug_info": {
        "goal": "case refine_1.refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ni : \u03b1\n\u22a2 MeasurableSet fun \u03c9 => Y \u03c9 i",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L118"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "7814c50717234d2fc8a1a51ee6ffc2a5c1f68ca3fc3a5414ea0c33dfffd7720d"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 126,
        "start_column": 8,
        "end_line": 126,
        "end_column": 13,
        "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
      },
      "debug_info": {
        "goal": "case refine_2.refine_1\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\ni : \u03b1\nhi : i \u2208 s\n\u22a2 MeasurableSet {\u03c9 | X \u03c9 i}",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L126"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "49e0e9ab6cd3040f29945eef674755204389851e27b76f9a4fea734372cf3ef2"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 127,
        "start_column": 8,
        "end_line": 127,
        "end_column": 13,
        "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
      },
      "debug_info": {
        "goal": "case refine_2.refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\ni : \u03b1\nhi : i \u2208 s\n\u22a2 MeasurableSet {\u03c9 | Y \u03c9 i}",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L127"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "b49fc632ce73e0cbf81765bc232c9ce15ad5701430193ea2b77ff120f68932b2"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 130,
        "start_column": 6,
        "end_line": 130,
        "end_column": 11,
        "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
      },
      "debug_info": {
        "goal": "case refine_2.hs\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 MeasurableSet (\u22c2 i \u2208 s, {\u03c9 | X \u03c9 i})",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L130"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "c977f12ab573d2bf4288c0d195d5ef0f00bbb293f361335b12728eb2072f1183"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 131,
        "start_column": 6,
        "end_line": 131,
        "end_column": 11,
        "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
      },
      "debug_info": {
        "goal": "case refine_2.ht\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 MeasurableSet (\u22c2 i \u2208 s, {\u03c9 | Y \u03c9 i})",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L131"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "8108b272d7577346643d64f699aeba5c4777341aff081c39fb52f5d7c91e6117"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 132,
        "start_column": 11,
        "end_line": 132,
        "end_column": 16,
        "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\na : \u03b1\n\u22a2 Measure.map (fun \u03c9 => a \u2208 X \u03c9 \u2229 Y \u03c9) \u03bc = (PMF.bernoulli' (p * q) \u22ef).toMeasure",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L132"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "60b20e9b98e51a9ab5eef982c7420f7cf26fae5a86ac29a3311622715727b1f6"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7,
        "file": "LeanCamCombi/ExtrProbCombi/BollobasContainment.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\n\u03a9 : Type u_3\ninst\u271d\u2074 : Fintype \u03b2\nG : \u2115 \u2192 \u03a9 \u2192 SimpleGraph \u03b1\nH : SimpleGraph \u03b2\ninst\u271d\u00b3 : Fintype \u2191H.edgeSet\ninst\u271d\u00b2 : (n : \u2115) \u2192 (\u03c9 : \u03a9) \u2192 DecidableRel (G n \u03c9).Adj\ninst\u271d\u00b9 : MeasurableSpace \u03a9\n\u03bc : Measure \u03a9\ninst\u271d : IsProbabilityMeasure \u03bc\np : \u2115 \u2192 \u211d\u22650\nhp : (fun n => \u2191(p n)) =o[atTop] fun n => \u2191n ^ (-\u2191H.maxEdgeSubdensity\u207b\u00b9)\n\u22a2 Tendsto (fun n => \u03bc {\u03c9 | H \u2291 G n \u03c9}) atTop (\ud835\udcdd 0)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/ExtrProbCombi/BollobasContainment.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "84ffa206f442afa0bfe076dc9487193f4c1ce6b3895186ed88bee6b9568722a7"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7,
        "file": "LeanCamCombi/ExtrProbCombi/BollobasContainment.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\n\u03a9 : Type u_3\ninst\u271d\u2074 : Fintype \u03b2\nG : \u2115 \u2192 \u03a9 \u2192 SimpleGraph \u03b1\nH : SimpleGraph \u03b2\ninst\u271d\u00b3 : Fintype \u2191H.edgeSet\ninst\u271d\u00b2 : (n : \u2115) \u2192 (\u03c9 : \u03a9) \u2192 DecidableRel (G n \u03c9).Adj\ninst\u271d\u00b9 : MeasurableSpace \u03a9\n\u03bc : Measure \u03a9\ninst\u271d : IsProbabilityMeasure \u03bc\np : \u2115 \u2192 \u211d\u22650\nhp : (fun n => \u2191n ^ (-\u2191H.maxEdgeSubdensity\u207b\u00b9)) =o[atTop] fun n => \u2191(p n)\n\u22a2 Tendsto (fun n => \u03bc {\u03c9 | H \u2291 G n \u03c9}) atTop (\ud835\udcdd 1)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/ExtrProbCombi/BollobasContainment.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "4dcbae0e8c6ed05b894b9d66d20bfd5ee13a0c298053d03c2213a5e81af2665c"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 97,
        "start_column": 72,
        "end_line": 97,
        "end_column": 77,
        "file": "LeanCamCombi/PlainCombi/VanDenBergKesten.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : Fintype \u03b1\n\ud835\udc9c \u212c : Finset (Finset \u03b1)\n\u22a2 2 ^ Fintype.card \u03b1 * #(\ud835\udc9c \u25a1 \u212c) \u2264 #\ud835\udc9c * #\u212c",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/PlainCombi/VanDenBergKesten.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-21T08:29:20+00:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "5321738c83049943c00a801468dc4afed74b08f2fb6d3acd6442c03efe7c1e9e"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 33,
        "start_column": 2,
        "end_line": 33,
        "end_column": 7,
        "file": "LeanCamCombi/PlainCombi/LittlewoodOfford.lean"
      },
      "debug_info": {
        "goal": "case insert.intro.intro.intro.intro.intro\n\u03b9 : Type u_1\nE : Type u_2\ninst\u271d\u00b2 : NormedAddCommGroup E\ninst\u271d\u00b9 : NormedSpace \u211d E\ns\u271d : Finset \u03b9\nf : \u03b9 \u2192 E\nr : \u211d\ninst\u271d : DecidableEq \u03b9\nhr : 0 < r\ni : \u03b9\ns : Finset \u03b9\nhi : i \u2209 s\nhf : \u2200 i_1 \u2208 insert i s, r \u2264 \u2016f i_1\u2016\nP : Finpartition s.powerset\nhP : #P.parts = (#s).choose (#s / 2)\nhs : \u2200 \ud835\udc9c \u2208 P.parts, \u2200 t \u2208 \ud835\udc9c, t \u2286 s\nhPr : \u2200 \ud835\udc9c \u2208 P.parts, (\u2191\ud835\udc9c).Pairwise fun u v => r \u2264 dist (\u2211 i \u2208 u, f i) (\u2211 i \u2208 v, f i)\ng : E \u2192L[\u211d] \u211d\nhg : \u2016g\u2016 = 1\nhgf : g (f i) = \u2191\u2016f i\u2016\nt : Finset (Finset \u03b9) \u2192 Finset \u03b9\nht : \u2200 \ud835\udc9c \u2208 P.parts, t \ud835\udc9c \u2208 \ud835\udc9c \u2227 \u2200 x' \u2208 \ud835\udc9c, g (\u2211 i \u2208 x', f i) \u2264 g (\u2211 i \u2208 t \ud835\udc9c, f i)\n\u22a2 \u2203 P,\n    #P.parts = (#(insert i s)).choose (#(insert i s) / 2) \u2227\n      (\u2200 \ud835\udc9c \u2208 P.parts, \u2200 t \u2208 \ud835\udc9c, t \u2286 insert i s) \u2227\n        \u2200 \ud835\udc9c \u2208 P.parts, (\u2191\ud835\udc9c).Pairwise fun u v => r \u2264 dist (\u2211 i \u2208 u, f i) (\u2211 i \u2208 v, f i)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/PlainCombi/LittlewoodOfford.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "6c714e6da4ee910b10e15048a33339057dbf13f1414fd143684a7b240003ec61"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 38,
        "start_column": 42,
        "end_line": 38,
        "end_column": 47,
        "file": "LeanCamCombi/StableCombi/Rel.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nn : \u2115\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\nhr : IsStableRelWith n r\n\u22a2 IsTreeBoundedRelWith (2 ^ n + 1) r",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/StableCombi/Rel.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-12-17T20:50:42+00:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "49c201736af9c7d0691d6dda2d67e8e3f786f8e28bbff7d3b3b0c0ce2dce49fa"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 41,
        "start_column": 33,
        "end_line": 41,
        "end_column": 38,
        "file": "LeanCamCombi/StableCombi/Rel.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nn : \u2115\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\nhr : IsTreeBoundedRelWith n r\n\u22a2 IsStableRelWith (2 ^ n) r",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/StableCombi/Rel.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-12-17T20:50:42+00:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "45a388f8ee855f05fe90ba468e0c0143e25d5b6ee177184fb3ab0d2822a399b3"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 25,
        "start_column": 60,
        "end_line": 25,
        "end_column": 65,
        "file": "LeanCamCombi/GrowthInGroups/Lecture4.lean"
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nC\u2080 : \u211d\nhC\u2080 : \u2191(Fintype.card n) < C\u2080\nK : \u211d\n\u22a2 \u2203 \u03b4,\n    \u2200 (A : Finset (GL n \u2102)),\n      IsApproximateSubgroup K \u2191A \u2192 (\u2200 a \u2208 A, \u2016\u2191a\u2016 \u2264 C\u2080) \u2192 \u2203 \u03b3 \u2208 A ^ 2, \u03b4 * \u2191(#A) \u2264 \u2191(#({x \u2208 A ^ 4 | Commute \u03b3 x}))",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GrowthInGroups/Lecture4.lean#L25"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-11-16T11:30:19+00:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "7d54d0294d46df4c8e041722baa7157ed0b628e730e3ef3ca563316001b2def2"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 30,
        "start_column": 30,
        "end_line": 30,
        "end_column": 35,
        "file": "LeanCamCombi/GrowthInGroups/Lecture4.lean"
      },
      "debug_info": {
        "goal": "K C\u2080 : \u211d\n\u22a2 \u2203 C > 0,\n    \u2200 (A : Set SL(2, \u2102)),\n      IsApproximateSubgroup K A \u2192 \u2203 Z, \u2203 (_ : \u2200 x \u2208 Z, \u2200 y \u2208 Z, Commute x y), \u2203 F, #F \u2264 C \u2227 A \u2286 \u2191F * \u2191Z",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GrowthInGroups/Lecture4.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-11-16T11:30:19+00:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "b898cae49e31abcd478cbe05802f71e8aa1126d30aba6552acbfa7cbb8a0643b"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 41,
        "start_column": 69,
        "end_line": 41,
        "end_column": 74,
        "file": "LeanCamCombi/GrowthInGroups/Lecture4.lean"
      },
      "debug_info": {
        "goal": "C : \u211d\nG : Type u_2\ninst\u271d\u00b9 : Group G\ninst\u271d : DecidableEq G\nS : Finset G\nhSsymm : S\u207b\u00b9 = S\nhSgen : \u2191(Subgroup.closure \u2191S) = Set.univ\nd : \u2115\nhS : \u2200 (n : \u2115), \u2191(#(S ^ n)) \u2264 C * \u2191n ^ d\n\u22a2 IsVirtuallyNilpotent G",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GrowthInGroups/Lecture4.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-11-16T11:30:19+00:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "7fd7db1a407eb3b844fe329cfde9547f688a4879f84458cd175eee2854b11234"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 24,
        "start_column": 6,
        "end_line": 24,
        "end_column": 11,
        "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
      },
      "debug_info": {
        "goal": "case refine_2\n\u03b9 : Type u_2\nG : \u03b9 \u2192 Type u_3\ninst\u271d\u00b9 : Fintype \u03b9\ninst\u271d : (i : \u03b9) \u2192 Group (G i)\nA : (i : \u03b9) \u2192 Set (G i)\nK : \u03b9 \u2192 \u211d\nhA : \u2200 (i : \u03b9), IsApproximateSubgroup (K i) (A i)\nF : (i : \u03b9) \u2192 Finset (G i)\nhF : \u2200 (i : \u03b9), \u2191(#(F i)) \u2264 K i\nhFS : \u2200 (i : \u03b9), A i ^ 2 \u2286 \u2191(F i) \u2022 A i\n\u22a2 Set.univ.pi A ^ 2 \u2286 \u2191(Fintype.piFinset F) \u2022 Set.univ.pi A",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L24"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "95f9d27120a1497551c8e6a3cb3e3079ea29e205e02d4156f23954bc0a1ea82e"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 42,
        "start_column": 64,
        "end_line": 42,
        "end_column": 69,
        "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
      },
      "debug_info": {
        "goal": "case h\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\na\u271d : G\n\u22a2 a\u271d \u2208 A\u207b\u00b9 * A \u2192 (\u2191(#A) / (2 * K) \u2264 \u2191(#((MulOpposite.op a\u271d)\u207b\u00b9 \u2022> A \u2229 A)) \u2194 \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 a\u271d \u2229 A)))",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "b5ac6945f860a7d7323c31e8b95b4623d82a0ac9a647cc64710817a4a3aa3eef"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 59,
        "start_column": 4,
        "end_line": 59,
        "end_column": 9,
        "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
      },
      "debug_info": {
        "goal": "case intro.intro.intro.refine_2\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191(#S) \u2264 K ^ 2 * \u2191(#A)\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191(#F) \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2191(#(S ^ 2)) \u2264 16 * K ^ 12 * \u2191(#A)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L59"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "5911959bdce59bdd936164758bc8d549d54869db90e88d40c7635cae4b187ec9"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 60,
        "start_column": 4,
        "end_line": 60,
        "end_column": 9,
        "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
      },
      "debug_info": {
        "goal": "case intro.intro.intro.refine_3\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191(#S) \u2264 K ^ 2 * \u2191(#A)\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191(#F) \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2203 a \u2208 A, \u2191(#A) / (2 * K) \u2264 \u2191(#(A \u2229 S ^ 2 <\u2022 a))",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "6569898102cf4f996400e0639c0ed25ac9ef9ef52e6eb8247491d8666a03815c"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 45,
        "start_column": 22,
        "end_line": 45,
        "end_column": 27,
        "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\n\u22a2 \u2191(#(A\u207b\u00b9 * A)) \u2264 K ^ 2 * \u2191(#A)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L45"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "838701a55be6443279263c6c2aae6077db42797ba4f07a7e7c8b4c428eb77446"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 46,
        "start_column": 69,
        "end_line": 46,
        "end_column": 74,
        "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191(#S) \u2264 K ^ 2 * \u2191(#A)\n\u22a2 \u2203 F \u2286 A, \u2191(#F) \u2264 2 * K \u2227 A \u2286 S * F",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "c81ed4b01203f8b0ddbc9fc1b0dfa1b8b30da3ac4f2275dae89bd9b65fde509f"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "build-docs-script",
        "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 54,
        "start_column": 29,
        "end_line": 54,
        "end_column": 34,
        "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191(#S) \u2264 K ^ 2 * \u2191(#A)\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191(#F) \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2191(#(A * S ^ 3 * A\u207b\u00b9)) \u2264 8 * K ^ 11 * \u2191(#A)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-04-17T05:31:09.440405+00:00"
      },
      "id": "5b35093433f67a61a5a925078a1bc85dc98f18734bc021dd721e3f3b65bb3e32"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue313",
        "commit": "a328cdd6037e632cb82a9203e44b73868c1d6fe2",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 232,
        "start_column": 8,
        "end_line": 232,
        "end_column": 13,
        "file": "Foundation/Modal/Hilbert/NNFormula.lean"
      },
      "debug_info": {
        "goal": "\u03c6 : NNFormula \u2115\n\u22a2 \u2203 \u03c8, \u03c8.isModalCNF \u2227 Hilbert.K \u22a2! \u03c6.toFormula \u2b64 \u03c8.toFormula",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a328cdd6037e632cb82a9203e44b73868c1d6fe2/Foundation/Modal/Hilbert/NNFormula.lean#L232"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-10T09:06:15+09:00",
        "inclusion_date": "2025-04-18T03:01:00.666291+00:00"
      },
      "id": "f42ea4a55e3973d5dcedae2e4262537eb76c035bad1cf574678c4fb17524b1f8"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue313",
        "commit": "a328cdd6037e632cb82a9203e44b73868c1d6fe2",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 236,
        "start_column": 8,
        "end_line": 236,
        "end_column": 13,
        "file": "Foundation/Modal/Hilbert/NNFormula.lean"
      },
      "debug_info": {
        "goal": "\u03c6 : NNFormula \u2115\n\u22a2 \u2203 \u03c8, \u03c8.isModalDNF \u2227 Hilbert.K \u22a2! \u03c6.toFormula \u2b64 \u03c8.toFormula",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a328cdd6037e632cb82a9203e44b73868c1d6fe2/Foundation/Modal/Hilbert/NNFormula.lean#L236"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-10T09:06:15+09:00",
        "inclusion_date": "2025-04-18T03:01:00.666291+00:00"
      },
      "id": "c243bc04c48d72a388496889c6efc98228c15f8541ba74c6f6d7bfd174b8ac6d"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue313",
        "commit": "a328cdd6037e632cb82a9203e44b73868c1d6fe2",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 27,
        "start_column": 25,
        "end_line": 27,
        "end_column": 30,
        "file": "Foundation/Modal/Maximal/Makinson.lean"
      },
      "debug_info": {
        "goal": "L : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\n\u22a2 \u03b3 \u2208 L",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a328cdd6037e632cb82a9203e44b73868c1d6fe2/Foundation/Modal/Maximal/Makinson.lean#L27"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-10T09:06:15+09:00",
        "inclusion_date": "2025-04-18T03:01:00.666291+00:00"
      },
      "id": "c87d8cb783b8bee2eb7c9ef62e7ecf788fdab3868546bf3be0a0e593caa003d4"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue313",
        "commit": "a328cdd6037e632cb82a9203e44b73868c1d6fe2",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 28,
        "start_column": 33,
        "end_line": 28,
        "end_column": 38,
        "file": "Foundation/Modal/Maximal/Makinson.lean"
      },
      "debug_info": {
        "goal": "L : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\n\u22a2 \u03b3 \u2209 Logic.Ver",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a328cdd6037e632cb82a9203e44b73868c1d6fe2/Foundation/Modal/Maximal/Makinson.lean#L28"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-10T09:06:15+09:00",
        "inclusion_date": "2025-04-18T03:01:00.666291+00:00"
      },
      "id": "29e8f508eb0fa257978b56a59bc1527bcc089fcfe075da12a32ddbeb1f5a7194"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue313",
        "commit": "a328cdd6037e632cb82a9203e44b73868c1d6fe2",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 31,
        "start_column": 4,
        "end_line": 31,
        "end_column": 9,
        "file": "Foundation/Modal/Maximal/Makinson.lean"
      },
      "debug_info": {
        "goal": "L : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u22a2 \u2203 \u03b4 \u2208 \u0393, (\u2191\u03b4).toFormula \u2208 L \u2227 (\u2191\u03b4).toFormula \u2209 Logic.Ver",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a328cdd6037e632cb82a9203e44b73868c1d6fe2/Foundation/Modal/Maximal/Makinson.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-10T09:06:15+09:00",
        "inclusion_date": "2025-04-18T03:01:00.666291+00:00"
      },
      "id": "30f89b5083c36d76704ad72124ff0875fb578f3b37537f92dc71d2df4f5b3c9b"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue313",
        "commit": "a328cdd6037e632cb82a9203e44b73868c1d6fe2",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 36,
        "start_column": 4,
        "end_line": 36,
        "end_column": 9,
        "file": "Foundation/Modal/Maximal/Makinson.lean"
      },
      "debug_info": {
        "goal": "case mk.intro\nL : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis\u271d : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u0394 : List { \u03c8 // \u03c8.isPrebox \u2228 \u03c8.isPredia \u2228 \u03c8.degree = 0 }\nh\u03b4\u0393 : \u27e8\u22c1\u0394.unattach, \u22ef\u27e9 \u2208 \u0393\nh\u03b4L : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2208 L\nh\u03b4V : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2209 Logic.Ver\n\u03be : NNFormula \u2115\nproperty\u271d : (\u25a1\u03be).isPrebox \u2228 (\u25a1\u03be).isPredia \u2228 (\u25a1\u03be).degree = 0\nh\u03c8\u2081 : \u27e8\u25a1\u03be, property\u271d\u27e9 \u2208 \u0394\nh\u03c8\u2082 : (\u2191\u27e8\u25a1\u03be, property\u271d\u27e9).isPrebox\nthis : \u25a1\u03be.toFormula \u2208 Logic.Ver\n\u22a2 False",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a328cdd6037e632cb82a9203e44b73868c1d6fe2/Foundation/Modal/Maximal/Makinson.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-10T09:06:15+09:00",
        "inclusion_date": "2025-04-18T03:01:00.666291+00:00"
      },
      "id": "d60ea1b334caa6279e64ce718a0aa6666fe25d28015d47f3ea4eec10c3811a66"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue313",
        "commit": "a328cdd6037e632cb82a9203e44b73868c1d6fe2",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 38,
        "start_column": 49,
        "end_line": 38,
        "end_column": 54,
        "file": "Foundation/Modal/Maximal/Makinson.lean"
      },
      "debug_info": {
        "goal": "L : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u0394 : List { \u03c8 // \u03c8.isPrebox \u2228 \u03c8.isPredia \u2228 \u03c8.degree = 0 }\nh\u03b4\u0393 : \u27e8\u22c1\u0394.unattach, \u22ef\u27e9 \u2208 \u0393\nh\u03b4L : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2208 L\nh\u03b4V : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2209 Logic.Ver\nh\u0394\u2081 : \u2200 \u03c8 \u2208 \u0394, \u00ac(\u2191\u03c8).isPrebox\n\u22a2 \u2203 \u0393, \u03c6 \u2b64 \u22c0\u0393 \u2208 L",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a328cdd6037e632cb82a9203e44b73868c1d6fe2/Foundation/Modal/Maximal/Makinson.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-10T09:06:15+09:00",
        "inclusion_date": "2025-04-18T03:01:00.666291+00:00"
      },
      "id": "e7a9f91e255889e5c4677df661b603b7328cc73f319cd1078255776ccf58ad1e"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue313",
        "commit": "a328cdd6037e632cb82a9203e44b73868c1d6fe2",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 40,
        "start_column": 2,
        "end_line": 40,
        "end_column": 7,
        "file": "Foundation/Modal/Maximal/Makinson.lean"
      },
      "debug_info": {
        "goal": "case intro.intro.intro.intro.mk.intro.intro.intro\nL : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u00acHilbert.Ver \u22a2! \u03c6\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis\u271d : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u0394 : List { \u03c8 // \u03c8.isPrebox \u2228 \u03c8.isPredia \u2228 \u03c8.degree = 0 }\nh\u03b4\u0393 : \u27e8\u22c1\u0394.unattach, \u22ef\u27e9 \u2208 \u0393\nh\u03b4L : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2208 L\nh\u03b4V : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2209 Logic.Ver\nh\u0394\u2081 : \u2200 \u03c8 \u2208 \u0394, \u00ac(\u2191\u03c8).isPrebox\nthis : \u2203 \u0393, \u03c6 \u2b64 \u22c0\u0393 \u2208 L\n\u22a2 \u2203 \u03c8, \u25c7\u03c8 \u2208 L",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a328cdd6037e632cb82a9203e44b73868c1d6fe2/Foundation/Modal/Maximal/Makinson.lean#L40"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-10T09:06:15+09:00",
        "inclusion_date": "2025-04-18T03:01:00.666291+00:00"
      },
      "id": "b0642bd5b6eb878c9246e9f644af49fb78f4493583e1833350fb77d257431c26"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue313",
        "commit": "a328cdd6037e632cb82a9203e44b73868c1d6fe2",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 42,
        "start_column": 4,
        "end_line": 42,
        "end_column": 9,
        "file": "Foundation/Modal/Kripke/Hilbert/GrzPoint3.lean"
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 {\u03c6 : Formula \u2115}, Grz.miniCanonicalFrame Hilbert.GrzPoint3 \u03c6 \u2208 FrameClass.finite_connected_partial_order",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a328cdd6037e632cb82a9203e44b73868c1d6fe2/Foundation/Modal/Kripke/Hilbert/GrzPoint3.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-14T14:50:18+09:00",
        "inclusion_date": "2025-04-18T03:01:00.666291+00:00"
      },
      "id": "2d0acb2f28a364503b9f2158c385a1d0447426ebd2923c09a8f79cca8988ede7"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue313",
        "commit": "a328cdd6037e632cb82a9203e44b73868c1d6fe2",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 33,
        "start_column": 101,
        "end_line": 33,
        "end_column": 106,
        "file": "Foundation/Modal/Kripke/Hilbert/GLPoint3.lean"
      },
      "debug_info": {
        "goal": "\u22a2 Complete Hilbert.GLPoint3 FrameClass.finite_strict_linear_order",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a328cdd6037e632cb82a9203e44b73868c1d6fe2/Foundation/Modal/Kripke/Hilbert/GLPoint3.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-17T22:57:50+09:00",
        "inclusion_date": "2025-04-18T03:01:00.666291+00:00"
      },
      "id": "57c54cfae64b067eb34bc7410863742967a6c80c9200b7f9de29f7cc855fe5d9"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue313",
        "commit": "a328cdd6037e632cb82a9203e44b73868c1d6fe2",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 35,
        "start_column": 4,
        "end_line": 35,
        "end_column": 9,
        "file": "Foundation/Modal/Kripke/Hilbert/GrzPoint2.lean"
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 {\u03c6 : Formula \u2115}, Grz.miniCanonicalFrame Hilbert.GrzPoint2 \u03c6 \u2208 FrameClass.finite_confluent_partial_order",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a328cdd6037e632cb82a9203e44b73868c1d6fe2/Foundation/Modal/Kripke/Hilbert/GrzPoint2.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-14T14:50:18+09:00",
        "inclusion_date": "2025-04-18T03:01:00.666291+00:00"
      },
      "id": "350f0841663830aed198a492d1b386040a8a8ad49a4fe94092a6b4bf28e29460"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "b2db6ea1f7580965d4ffa3183c1d28b30dc19608",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 232,
        "start_column": 8,
        "end_line": 232,
        "end_column": 13,
        "file": "Foundation/Modal/Hilbert/NNFormula.lean"
      },
      "debug_info": {
        "goal": "\u03c6 : NNFormula \u2115\n\u22a2 \u2203 \u03c8, \u03c8.isModalCNF \u2227 Hilbert.K \u22a2! \u03c6.toFormula \u2b64 \u03c8.toFormula",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/b2db6ea1f7580965d4ffa3183c1d28b30dc19608/Foundation/Modal/Hilbert/NNFormula.lean#L232"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-10T09:06:15+09:00",
        "inclusion_date": "2025-04-18T03:20:27.084668+00:00"
      },
      "id": "eb967a276899e94c45ed2cc5cf1299271e00ca6d9211d79fd6bb92a12c05d2ee"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "b2db6ea1f7580965d4ffa3183c1d28b30dc19608",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 236,
        "start_column": 8,
        "end_line": 236,
        "end_column": 13,
        "file": "Foundation/Modal/Hilbert/NNFormula.lean"
      },
      "debug_info": {
        "goal": "\u03c6 : NNFormula \u2115\n\u22a2 \u2203 \u03c8, \u03c8.isModalDNF \u2227 Hilbert.K \u22a2! \u03c6.toFormula \u2b64 \u03c8.toFormula",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/b2db6ea1f7580965d4ffa3183c1d28b30dc19608/Foundation/Modal/Hilbert/NNFormula.lean#L236"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-10T09:06:15+09:00",
        "inclusion_date": "2025-04-18T03:20:27.084668+00:00"
      },
      "id": "19bf4820754db5ecbeaa37f1bb2ffb4a5598f9fd76d27775afe97e59c1353b35"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "b2db6ea1f7580965d4ffa3183c1d28b30dc19608",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 27,
        "start_column": 25,
        "end_line": 27,
        "end_column": 30,
        "file": "Foundation/Modal/Maximal/Makinson.lean"
      },
      "debug_info": {
        "goal": "L : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\n\u22a2 \u03b3 \u2208 L",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/b2db6ea1f7580965d4ffa3183c1d28b30dc19608/Foundation/Modal/Maximal/Makinson.lean#L27"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-10T09:06:15+09:00",
        "inclusion_date": "2025-04-18T03:20:27.084668+00:00"
      },
      "id": "c9889865d5e73fc3a2ad530b50f879f0d52d52cfb0ebe2ee52262ff7d97e020d"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "b2db6ea1f7580965d4ffa3183c1d28b30dc19608",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 28,
        "start_column": 33,
        "end_line": 28,
        "end_column": 38,
        "file": "Foundation/Modal/Maximal/Makinson.lean"
      },
      "debug_info": {
        "goal": "L : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\n\u22a2 \u03b3 \u2209 Logic.Ver",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/b2db6ea1f7580965d4ffa3183c1d28b30dc19608/Foundation/Modal/Maximal/Makinson.lean#L28"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-10T09:06:15+09:00",
        "inclusion_date": "2025-04-18T03:20:27.084668+00:00"
      },
      "id": "d3aab86e12b08ee278285ad86b8d75df508f834cf8085ad2c889c3f61faac15a"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "b2db6ea1f7580965d4ffa3183c1d28b30dc19608",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 31,
        "start_column": 4,
        "end_line": 31,
        "end_column": 9,
        "file": "Foundation/Modal/Maximal/Makinson.lean"
      },
      "debug_info": {
        "goal": "L : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u22a2 \u2203 \u03b4 \u2208 \u0393, (\u2191\u03b4).toFormula \u2208 L \u2227 (\u2191\u03b4).toFormula \u2209 Logic.Ver",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/b2db6ea1f7580965d4ffa3183c1d28b30dc19608/Foundation/Modal/Maximal/Makinson.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-10T09:06:15+09:00",
        "inclusion_date": "2025-04-18T03:20:27.084668+00:00"
      },
      "id": "89f297b08206716584c43b42a6b0118002a011b0eebeb5cd95832876d6df801e"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "b2db6ea1f7580965d4ffa3183c1d28b30dc19608",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 36,
        "start_column": 4,
        "end_line": 36,
        "end_column": 9,
        "file": "Foundation/Modal/Maximal/Makinson.lean"
      },
      "debug_info": {
        "goal": "case mk.intro\nL : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis\u271d : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u0394 : List { \u03c8 // \u03c8.isPrebox \u2228 \u03c8.isPredia \u2228 \u03c8.degree = 0 }\nh\u03b4\u0393 : \u27e8\u22c1\u0394.unattach, \u22ef\u27e9 \u2208 \u0393\nh\u03b4L : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2208 L\nh\u03b4V : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2209 Logic.Ver\n\u03be : NNFormula \u2115\nproperty\u271d : (\u25a1\u03be).isPrebox \u2228 (\u25a1\u03be).isPredia \u2228 (\u25a1\u03be).degree = 0\nh\u03c8\u2081 : \u27e8\u25a1\u03be, property\u271d\u27e9 \u2208 \u0394\nh\u03c8\u2082 : (\u2191\u27e8\u25a1\u03be, property\u271d\u27e9).isPrebox\nthis : \u25a1\u03be.toFormula \u2208 Logic.Ver\n\u22a2 False",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/b2db6ea1f7580965d4ffa3183c1d28b30dc19608/Foundation/Modal/Maximal/Makinson.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-10T09:06:15+09:00",
        "inclusion_date": "2025-04-18T03:20:27.084668+00:00"
      },
      "id": "71322c76f3e0a571a8eed8d1ae25aa9bcbf8f49d41dce09ca2da0353950a10c8"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "b2db6ea1f7580965d4ffa3183c1d28b30dc19608",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 38,
        "start_column": 49,
        "end_line": 38,
        "end_column": 54,
        "file": "Foundation/Modal/Maximal/Makinson.lean"
      },
      "debug_info": {
        "goal": "L : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u0394 : List { \u03c8 // \u03c8.isPrebox \u2228 \u03c8.isPredia \u2228 \u03c8.degree = 0 }\nh\u03b4\u0393 : \u27e8\u22c1\u0394.unattach, \u22ef\u27e9 \u2208 \u0393\nh\u03b4L : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2208 L\nh\u03b4V : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2209 Logic.Ver\nh\u0394\u2081 : \u2200 \u03c8 \u2208 \u0394, \u00ac(\u2191\u03c8).isPrebox\n\u22a2 \u2203 \u0393, \u03c6 \u2b64 \u22c0\u0393 \u2208 L",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/b2db6ea1f7580965d4ffa3183c1d28b30dc19608/Foundation/Modal/Maximal/Makinson.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-10T09:06:15+09:00",
        "inclusion_date": "2025-04-18T03:20:27.084668+00:00"
      },
      "id": "8042a7c8e00148808b4bdd1a0f233bc92bc29828a7dbb61a75f7339a3bdfc7fa"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "b2db6ea1f7580965d4ffa3183c1d28b30dc19608",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 40,
        "start_column": 2,
        "end_line": 40,
        "end_column": 7,
        "file": "Foundation/Modal/Maximal/Makinson.lean"
      },
      "debug_info": {
        "goal": "case intro.intro.intro.intro.mk.intro.intro.intro\nL : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u00acHilbert.Ver \u22a2! \u03c6\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis\u271d : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u0394 : List { \u03c8 // \u03c8.isPrebox \u2228 \u03c8.isPredia \u2228 \u03c8.degree = 0 }\nh\u03b4\u0393 : \u27e8\u22c1\u0394.unattach, \u22ef\u27e9 \u2208 \u0393\nh\u03b4L : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2208 L\nh\u03b4V : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2209 Logic.Ver\nh\u0394\u2081 : \u2200 \u03c8 \u2208 \u0394, \u00ac(\u2191\u03c8).isPrebox\nthis : \u2203 \u0393, \u03c6 \u2b64 \u22c0\u0393 \u2208 L\n\u22a2 \u2203 \u03c8, \u25c7\u03c8 \u2208 L",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/b2db6ea1f7580965d4ffa3183c1d28b30dc19608/Foundation/Modal/Maximal/Makinson.lean#L40"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-10T09:06:15+09:00",
        "inclusion_date": "2025-04-18T03:20:27.084668+00:00"
      },
      "id": "a6d44ceda71b3ec5cc0f0d44a38f32380e7a3c6e15485cb19499da0bbb977120"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "b2db6ea1f7580965d4ffa3183c1d28b30dc19608",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 42,
        "start_column": 4,
        "end_line": 42,
        "end_column": 9,
        "file": "Foundation/Modal/Kripke/Hilbert/GrzPoint3.lean"
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 {\u03c6 : Formula \u2115}, Grz.miniCanonicalFrame Hilbert.GrzPoint3 \u03c6 \u2208 FrameClass.finite_connected_partial_order",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/b2db6ea1f7580965d4ffa3183c1d28b30dc19608/Foundation/Modal/Kripke/Hilbert/GrzPoint3.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-14T14:50:18+09:00",
        "inclusion_date": "2025-04-18T03:20:27.084668+00:00"
      },
      "id": "605ebc07e30cfdf1f8d8b70b8987a562231240f58851a09a66421f98bc34fba9"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "b2db6ea1f7580965d4ffa3183c1d28b30dc19608",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 33,
        "start_column": 101,
        "end_line": 33,
        "end_column": 106,
        "file": "Foundation/Modal/Kripke/Hilbert/GLPoint3.lean"
      },
      "debug_info": {
        "goal": "\u22a2 Complete Hilbert.GLPoint3 FrameClass.finite_strict_linear_order",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/b2db6ea1f7580965d4ffa3183c1d28b30dc19608/Foundation/Modal/Kripke/Hilbert/GLPoint3.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-17T22:57:50+09:00",
        "inclusion_date": "2025-04-18T03:20:27.084668+00:00"
      },
      "id": "6edeceb057cdb73c2830593d1891ded73904bcece169ee0ca4e841871cd3043d"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "b2db6ea1f7580965d4ffa3183c1d28b30dc19608",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "start_line": 35,
        "start_column": 4,
        "end_line": 35,
        "end_column": 9,
        "file": "Foundation/Modal/Kripke/Hilbert/GrzPoint2.lean"
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 {\u03c6 : Formula \u2115}, Grz.miniCanonicalFrame Hilbert.GrzPoint2 \u03c6 \u2208 FrameClass.finite_confluent_partial_order",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/b2db6ea1f7580965d4ffa3183c1d28b30dc19608/Foundation/Modal/Kripke/Hilbert/GrzPoint2.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-14T14:50:18+09:00",
        "inclusion_date": "2025-04-18T03:20:27.084668+00:00"
      },
      "id": "47b21755c7b5d51ed5e39c3a881dda262d44d92c81e825e1ffdbc950fab1b4bb"
    },
    {
      "repo": {
        "remote": "https://github.com/frenzymath/jixia",
        "branch": "main",
        "commit": "e6d1448771f53b540a450fdf5180f1217efaaab8",
        "lean_version": "v4.16.0"
      },
      "location": {
        "start_line": 82,
        "start_column": 55,
        "end_line": 82,
        "end_column": 60,
        "file": "Example.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u\n\u22a2 \u00acnone.IsSome",
        "url": "https://github.com/frenzymath/jixia/blob/e6d1448771f53b540a450fdf5180f1217efaaab8/Example.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "aa8cba96a488",
        "blame_date": "2024-06-20T19:17:07+08:00",
        "inclusion_date": "2025-04-18T03:27:10.327543+00:00"
      },
      "id": "fb6b54e94ab974a1669ade99e27f8f182289c98744606a2a314245d519821c12"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "docs",
        "commit": "3dd8e98dd6ddd2ecc730feb479946e2f5545b932",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 37,
        "start_column": 64,
        "end_line": 37,
        "end_column": 69,
        "file": "BatteriesTest/lintsimp.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d : Mul \u03b1\na x y : \u03b1\u1d50\u1d52\u1d56\n\u22a2 SemiconjBy a.unop y.unop x.unop \u2194 SemiconjBy a x y",
        "url": "https://github.com/leanprover-community/batteries/blob/3dd8e98dd6ddd2ecc730feb479946e2f5545b932/BatteriesTest/lintsimp.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "8a7dcd08b95f",
        "blame_date": "2022-12-18T15:51:52-05:00",
        "inclusion_date": "2025-04-18T03:39:42.062954+00:00"
      },
      "id": "1591be15da3eb1a2a408869a8dfc3c91a0f56a8a62c9ade9ee79ae96140de5ac"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "docs",
        "commit": "3dd8e98dd6ddd2ecc730feb479946e2f5545b932",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 7,
        "start_column": 2,
        "end_line": 7,
        "end_column": 7,
        "file": "BatteriesTest/lintunused.lean"
      },
      "debug_info": {
        "goal": "h : 1 = 1\n\u22a2 True",
        "url": "https://github.com/leanprover-community/batteries/blob/3dd8e98dd6ddd2ecc730feb479946e2f5545b932/BatteriesTest/lintunused.lean#L7"
      },
      "metadata": {
        "blame_email_hash": "45b5ed8e3c8e",
        "blame_date": "2023-08-08T02:17:31+02:00",
        "inclusion_date": "2025-04-18T03:39:42.062954+00:00"
      },
      "id": "9046db0f9024d970c621ecc4eef95a3c47cc8a10d8c1a91e159750b7347e6228"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "docs",
        "commit": "3dd8e98dd6ddd2ecc730feb479946e2f5545b932",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 23,
        "start_column": 2,
        "end_line": 24,
        "end_column": 5,
        "file": "BatteriesTest/lint_unreachableTactic.lean"
      },
      "debug_info": {
        "goal": "\u22a2 1 = 1",
        "url": "https://github.com/leanprover-community/batteries/blob/3dd8e98dd6ddd2ecc730feb479946e2f5545b932/BatteriesTest/lint_unreachableTactic.lean#L23"
      },
      "metadata": {
        "blame_email_hash": "45b5ed8e3c8e",
        "blame_date": "2023-08-26T11:27:15+01:00",
        "inclusion_date": "2025-04-18T03:39:42.062954+00:00"
      },
      "id": "54f566c50af7dc6187d4318221ffbfbc2e77bc0dd364c0ad35b41dbbe70833e4"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "docs",
        "commit": "3dd8e98dd6ddd2ecc730feb479946e2f5545b932",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "start_line": 31,
        "start_column": 33,
        "end_line": 31,
        "end_column": 38,
        "file": "BatteriesTest/lint_unreachableTactic.lean"
      },
      "debug_info": {
        "goal": "aa : Nat\n\u22a2 aa = 0 \u2192 t aa = 0",
        "url": "https://github.com/leanprover-community/batteries/blob/3dd8e98dd6ddd2ecc730feb479946e2f5545b932/BatteriesTest/lint_unreachableTactic.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "45b5ed8e3c8e",
        "blame_date": "2023-08-26T11:27:15+01:00",
        "inclusion_date": "2025-04-18T03:39:42.062954+00:00"
      },
      "id": "036a35990474fbab418104b0225203952022418bb386fc89bc6439fcc8cea620"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 49,
        "start_column": 21,
        "end_line": 49,
        "end_column": 26,
        "file": "ClassicalInfo/Capacity.lean"
      },
      "debug_info": {
        "goal": "A : Type u_1\nI : Type u_2\nO : Type u_3\nio : I \u2192 O\ntoFixedLengthCode : FixedLengthCode A I O\ntoCode : Code A I O := toFixedLengthCode.toCode\nencoder : List A \u2192 List I := toFixedLengthCode.encoder\ndecoder : List O \u2192 List A := toFixedLengthCode.decoder\nenc_length : \u2115 \u2192 \u2115 := toFixedLengthCode.enc_length\nenc_maps_length : \u2200 (as : List A), (toFixedLengthCode.encoder as).length = toFixedLengthCode.enc_length as.length :=\n  toFixedLengthCode.enc_maps_length\ndec_length : \u2115 \u2192 \u2115 := toFixedLengthCode.dec_length\ndec_maps_length : \u2200 (is : List O), (toFixedLengthCode.decoder is).length = toFixedLengthCode.dec_length is.length :=\n  toFixedLengthCode.dec_maps_length\nblock_in block_out : \u2115\nblock_enc : (Fin block_in \u2192 A) \u2192 Fin block_out \u2192 I\nblock_dec : (Fin block_out \u2192 O) \u2192 Fin block_in \u2192 A\nblock_enc_dec_inv : \u2200 (as : Fin block_in \u2192 A), block_dec (io \u2218 block_enc as) = as\n\u22a2 \u2200 (as : List A), (toFixedLengthCode.encoder as).length = toFixedLengthCode.enc_length as.length",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/ClassicalInfo/Capacity.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "b14e2b6c4f99142821df390e7cee89188b9e587aa5bc681dbc88a2d0b0b52516"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 50,
        "start_column": 21,
        "end_line": 50,
        "end_column": 26,
        "file": "ClassicalInfo/Capacity.lean"
      },
      "debug_info": {
        "goal": "A : Type u_1\nI : Type u_2\nO : Type u_3\nio : I \u2192 O\ntoFixedLengthCode : FixedLengthCode A I O\ntoCode : Code A I O := toFixedLengthCode.toCode\nencoder : List A \u2192 List I := toFixedLengthCode.encoder\ndecoder : List O \u2192 List A := toFixedLengthCode.decoder\nenc_length : \u2115 \u2192 \u2115 := toFixedLengthCode.enc_length\nenc_maps_length : \u2200 (as : List A), (toFixedLengthCode.encoder as).length = toFixedLengthCode.enc_length as.length :=\n  toFixedLengthCode.enc_maps_length\ndec_length : \u2115 \u2192 \u2115 := toFixedLengthCode.dec_length\ndec_maps_length : \u2200 (is : List O), (toFixedLengthCode.decoder is).length = toFixedLengthCode.dec_length is.length :=\n  toFixedLengthCode.dec_maps_length\nblock_in block_out : \u2115\nblock_enc : (Fin block_in \u2192 A) \u2192 Fin block_out \u2192 I\nblock_dec : (Fin block_out \u2192 O) \u2192 Fin block_in \u2192 A\nblock_enc_dec_inv : \u2200 (as : Fin block_in \u2192 A), block_dec (io \u2218 block_enc as) = as\n\u22a2 \u2200 (is : List O), (toFixedLengthCode.decoder is).length = toFixedLengthCode.dec_length is.length",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/ClassicalInfo/Capacity.lean#L50"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "02eeb555d3c6de293bcb38ea5abc7bb03779d85d4564d131a6d03cd6c051f5b3"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 56,
        "start_column": 4,
        "end_line": 56,
        "end_column": 9,
        "file": "ClassicalInfo/Entropy.lean"
      },
      "debug_info": {
        "goal": "case neg\np : Prob\nh : \u00acp = 0\n\u22a2 -\u2191p * Real.log \u2191p \u2264 Real.exp (-1)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/ClassicalInfo/Entropy.lean#L56"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "21c7ad1d86b29aab0e63755178a8ed713b10adca38f6831a35332c2628804227"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 94,
        "start_column": 2,
        "end_line": 94,
        "end_column": 7,
        "file": "ClassicalInfo/Entropy.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u\ninst\u271d : Fintype \u03b1\nd : Distribution \u03b1\n\u22a2 H\u209b d \u2264 Real.log \u2191Finset.univ.card",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/ClassicalInfo/Entropy.lean#L94"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "b85c2eaae3feadb9ba9f6240dcbc556da65b4bb044ef3b275f4874e903861e6a"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 397,
        "start_column": 2,
        "end_line": 397,
        "end_column": 7,
        "file": "ClassicalInfo/Prob.lean"
      },
      "debug_info": {
        "goal": "p : Prob\nx : \u211d\nh : \u2191p \u2264 Real.exp (-x)\n\u22a2 ENNReal.ofReal x \u2264 \u2014log p",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/ClassicalInfo/Prob.lean#L397"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-04-12T03:25:12-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "1f6d3c5aa67986262dcae80e27e8a48db0c16282f00230cc0cba5e3b5e1a5be0"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 135,
        "start_column": 4,
        "end_line": 135,
        "end_column": 9,
        "file": "QuantumInfo/Finite/Capacity.lean"
      },
      "debug_info": {
        "goal": "case h.left\nd\u2081 : Type u_1\ninst\u271d\u00b9 : Fintype d\u2081\ninst\u271d : DecidableEq d\u2081\n\u03b5 : \u211d\nh\u03b5 : \u03b5 > 0\n\u22a2 (piProd fun x => id).Emulates id",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Capacity.lean#L135"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-21T14:58:45-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "54651cd29d75ef1dd900c286beda31bf796efefe017c087fcd34e63b2c71d7ea"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 142,
        "start_column": 2,
        "end_line": 142,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Capacity.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_1\nd\u2082 : Type u_2\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u039b : CPTPMap d\u2081 d\u2082 \u2102\nR : \u211d\nhR : Real.logb 2 \u2191(Fintype.card d\u2081) < R\n\u22a2 \u00ac\u039b.AchievesRate R",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Capacity.lean#L142"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-21T14:58:45-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "459916fbb40620861e1286495b9db52a89ea38f9d597eeaf224dca2943626e0e"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 146,
        "start_column": 2,
        "end_line": 146,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Capacity.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_1\nd\u2082 : Type u_2\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u039b : CPTPMap d\u2081 d\u2082 \u2102\nR : \u211d\nhR : Real.logb 2 \u2191(Fintype.card d\u2082) < R\n\u22a2 \u00ac\u039b.AchievesRate R",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Capacity.lean#L146"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-21T14:58:45-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "4c88e0b9a194589a972fc596255ea09eaacb53d86fa767b91a0b4544153cf1bb"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 180,
        "start_column": 2,
        "end_line": 180,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Capacity.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_1\nd\u2082 : Type u_2\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u039b : CPTPMap d\u2081 d\u2082 \u2102\n\u03c1 : MState d\u2081\n\u22a2 coherentInfo \u03c1 \u039b \u2264 \u039b.quantumCapacity",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Capacity.lean#L180"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-26T16:05:31-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "5c026a7d4a8864b9960ea817476dd8fbd1db9c597e93b5eff6f055c91248531f"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 185,
        "start_column": 2,
        "end_line": 185,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Capacity.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_1\nd\u2082 : Type u_2\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u039b : CPTPMap d\u2081 d\u2082 \u2102\n\u03c1 : MState d\u2081\n\u22a2 \u039b.quantumCapacity = sSup {r | \u2203 n \u03c1, r = coherentInfo \u03c1 (piProd fun x => \u039b)}",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Capacity.lean#L185"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-26T16:05:31-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "44901b9d676f698a92f9468a4acb55da332f7e6a3bae624db5eb6b3f04c0908b"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 48,
        "start_column": 4,
        "end_line": 48,
        "end_column": 9,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\nd\u2081 : Type u_2\nd\u2082 : Type u_3\nd\u2083 : Type u_4\ninst\u271d\u00b9\u2076 : Fintype d\ninst\u271d\u00b9\u2075 : Fintype d\u2081\ninst\u271d\u00b9\u2074 : Fintype d\u2082\ninst\u271d\u00b9\u00b3 : Fintype d\u2083\ninst\u271d\u00b9\u00b2 : DecidableEq d\u2081\ninst\u271d\u00b9\u00b9 : DecidableEq d\u2082\ndA : Type u_5\ndB : Type u_6\ndC : Type u_7\ndA\u2081 : Type u_8\ndA\u2082 : Type u_9\ninst\u271d\u00b9\u2070 : Fintype dA\ninst\u271d\u2079 : Fintype dB\ninst\u271d\u2078 : Fintype dC\ninst\u271d\u2077 : Fintype dA\u2081\ninst\u271d\u2076 : Fintype dA\u2082\ninst\u271d\u2075 : DecidableEq dA\ninst\u271d\u2074 : DecidableEq dB\ninst\u271d\u00b3 : DecidableEq dC\ninst\u271d\u00b2 : DecidableEq dA\u2081\ninst\u271d\u00b9 : DecidableEq dA\u2082\ninst\u271d : DecidableEq d\n\u03c1 \u03c3 : MState d\n\u22a2 0 \u2264 (\u2191\u03c1).inner ((\u2191\u03c1).log - (\u2191\u03c3).log)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Entropy.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-29T16:24:40-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "d5b8e80a7595957978db7911fc393abc497b6d8096bfca9302dc0423740e804d"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 71,
        "start_column": 4,
        "end_line": 71,
        "end_column": 9,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "case pos.e_val.e_val.h.e_6.h\nd : Type u_1\nd\u2082 : Type u_3\ninst\u271d\u00b3 : Fintype d\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2082\ninst\u271d : DecidableEq d\n\u03c1 \u03c3 : MState d\ne : d\u2082 \u2243 d\nh\u2081 : LinearMap.ker (Matrix.toLin' \u2191(\u03c3.relabel e).toSubtype) \u2264 LinearMap.ker (Matrix.toLin' \u2191(\u03c1.relabel e).toSubtype)\nh\u2082 : LinearMap.ker (Matrix.toLin' \u2191\u03c3.toSubtype) \u2264 LinearMap.ker (Matrix.toLin' \u2191\u03c1.toSubtype)\n\u22a2 (\u2191\u2191(\u03c1.relabel e) * \u2191((\u2191(\u03c1.relabel e)).log - (\u2191(\u03c3.relabel e)).log)).trace = (\u2191\u2191\u03c1 * \u2191((\u2191\u03c1).log - (\u2191\u03c3).log)).trace",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Entropy.lean#L71"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-31T00:28:17-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "165b85e7f8544efcea59537cf0cbc5d9a7130d80def81d34170145db69501152"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 77,
        "start_column": 4,
        "end_line": 77,
        "end_column": 9,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "case neg\nd : Type u_1\nd\u2082 : Type u_3\ninst\u271d\u00b3 : Fintype d\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2082\ninst\u271d : DecidableEq d\n\u03c1 \u03c3 : MState d\ne : d\u2082 \u2243 d\nh\u2081 :\n  LinearMap.ker (Matrix.toLin' \u2191\u2191{ toSubtype := \u27e8\u03c3.m.submatrix \u21d1e \u21d1e, \u22ef\u27e9, zero_le := \u22ef, tr := \u22ef }) \u2264\n    LinearMap.ker (Matrix.toLin' \u2191\u2191{ toSubtype := \u27e8\u03c1.m.submatrix \u21d1e \u21d1e, \u22ef\u27e9, zero_le := \u22ef, tr := \u22ef })\nh\u2082 : \u00acLinearMap.ker (Matrix.toLin' \u2191\u03c3.toSubtype) \u2264 LinearMap.ker (Matrix.toLin' \u2191\u03c1.toSubtype)\n\u22a2 False",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Entropy.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-31T00:28:17-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "7a08882a4cc55475dfba3b2ac926615399ddb44e94c208afa0c77cda52df609b"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 77,
        "start_column": 4,
        "end_line": 77,
        "end_column": 9,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "case pos\nd : Type u_1\nd\u2082 : Type u_3\ninst\u271d\u00b3 : Fintype d\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2082\ninst\u271d : DecidableEq d\n\u03c1 \u03c3 : MState d\ne : d\u2082 \u2243 d\nh\u2081 :\n  \u00acLinearMap.ker (Matrix.toLin' \u2191\u2191{ toSubtype := \u27e8\u03c3.m.submatrix \u21d1e \u21d1e, \u22ef\u27e9, zero_le := \u22ef, tr := \u22ef }) \u2264\n      LinearMap.ker (Matrix.toLin' \u2191\u2191{ toSubtype := \u27e8\u03c1.m.submatrix \u21d1e \u21d1e, \u22ef\u27e9, zero_le := \u22ef, tr := \u22ef })\nh\u2082 : LinearMap.ker (Matrix.toLin' \u2191\u03c3.toSubtype) \u2264 LinearMap.ker (Matrix.toLin' \u2191\u03c1.toSubtype)\n\u22a2 False",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Entropy.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-31T00:28:17-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "3be5660a8b91dc0e81ded5d0c948f4f7a9b00121b4e50a34ad1aafcf65e67b22"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 115,
        "start_column": 8,
        "end_line": 115,
        "end_column": 13,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\nd\u2081 : Type u_2\nd\u2082 : Type u_3\nd\u2083 : Type u_4\ninst\u271d\u00b9\u2077 : Fintype d\ninst\u271d\u00b9\u2076 : Fintype d\u2081\ninst\u271d\u00b9\u2075 : Fintype d\u2082\ninst\u271d\u00b9\u2074 : Fintype d\u2083\ninst\u271d\u00b9\u00b3 : DecidableEq d\u2081\ninst\u271d\u00b9\u00b2 : DecidableEq d\u2082\ndA : Type u_5\ndB : Type u_6\ndC : Type u_7\ndA\u2081 : Type u_8\ndA\u2082 : Type u_9\ninst\u271d\u00b9\u00b9 : Fintype dA\ninst\u271d\u00b9\u2070 : Fintype dB\ninst\u271d\u2079 : Fintype dC\ninst\u271d\u2078 : Fintype dA\u2081\ninst\u271d\u2077 : Fintype dA\u2082\ninst\u271d\u2076 : DecidableEq dA\ninst\u271d\u2075 : DecidableEq dB\ninst\u271d\u2074 : DecidableEq dC\ninst\u271d\u00b3 : DecidableEq dA\u2081\ninst\u271d\u00b2 : DecidableEq dA\u2082\ninst\u271d\u00b9 : DecidableEq d\ninst\u271d : Fintype d\n\u03b1 : \u211d\n\u03c1 \u03c3 : MState d\n\u22a2 0 \u2264 Real.log ((\u2191\u03c1).conj \u2191(\u2191\u03c3 ^ ((1 - \u03b1) / (2 * \u03b1))) ^ \u03b1).trace / (\u03b1 - 1)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Entropy.lean#L115"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-31T00:28:17-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "a738cf5bb3412695487874dca64194817a33a0f391ab7a237bcd0daee76c3ffe"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 165,
        "start_column": 2,
        "end_line": 165,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_2\nd\u2082 : Type u_3\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u03c1\u2081 \u03c3\u2081 : MState d\u2081\n\u03c1\u2082 \u03c3\u2082 : MState d\u2082\n\u22a2 \ud835\udc03(\u03c1\u2081\u2297\u03c1\u2082\u2016\u03c3\u2081\u2297\u03c3\u2082) = \ud835\udc03(\u03c1\u2081\u2016\u03c3\u2081) + \ud835\udc03(\u03c1\u2082\u2016\u03c3\u2082)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Entropy.lean#L165"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-02-06T18:15:19-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "ef99303dd10986eaa0ab8e72cb273e78617ff805b936005c658750de5f801a50"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 172,
        "start_column": 2,
        "end_line": 172,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 : MState d\n\u22a2 _root_.Continuous fun \u03c3 => \ud835\udc03(\u03c1\u2016\u03c3)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Entropy.lean#L172"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "6093fc016c3d91b2121afa0dd1b4fda616c2d02932e9a3197cdb34d64a8133af"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 186,
        "start_column": 2,
        "end_line": 186,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u22a2 \u2200 (\u03c1\u2081 \u03c1\u2082 \u03c3\u2081 \u03c3\u2082 : MState d) (p : Prob), \ud835\udc03(p[\u03c1\u2081\u2194\u03c1\u2082]\u2016p[\u03c3\u2081\u2194\u03c3\u2082]) \u2264 \u2191\u2191p * \ud835\udc03(\u03c1\u2081\u2016\u03c3\u2081) + (1 - \u2191\u2191p) * \ud835\udc03(\u03c1\u2082\u2016\u03c3\u2082)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Entropy.lean#L186"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-02-06T18:15:19-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "f048f5838267000eb9827ae5ade44888b207242a0fe25bdda5b2f19637ae310b"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 207,
        "start_column": 2,
        "end_line": 207,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_2\nd\u2082 : Type u_3\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u03c1 : MState (d\u2081 \u00d7 d\u2082)\n\u22a2 S\u1d65\u2099 \u03c1.SWAP = S\u1d65\u2099 \u03c1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Entropy.lean#L207"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "6891f470b3711079ba07b266c1f1fe28d092e579493ef4b484d0f297095fb85b"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 212,
        "start_column": 2,
        "end_line": 212,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_2\nd\u2082 : Type u_3\nd\u2083 : Type u_4\ninst\u271d\u2074 : Fintype d\u2081\ninst\u271d\u00b3 : Fintype d\u2082\ninst\u271d\u00b2 : Fintype d\u2083\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u03c1 : MState ((d\u2081 \u00d7 d\u2082) \u00d7 d\u2083)\n\u22a2 S\u1d65\u2099 \u03c1.assoc = S\u1d65\u2099 \u03c1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Entropy.lean#L212"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "d1a7bf064fc3c4d98d1402d3c3253aa64fec2e0a394ed9eb259d36667f8ad0b5"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 216,
        "start_column": 2,
        "end_line": 216,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_2\nd\u2082 : Type u_3\nd\u2083 : Type u_4\ninst\u271d\u2074 : Fintype d\u2081\ninst\u271d\u00b3 : Fintype d\u2082\ninst\u271d\u00b2 : Fintype d\u2083\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u03c1 : MState (d\u2081 \u00d7 d\u2082 \u00d7 d\u2083)\n\u22a2 S\u1d65\u2099 \u03c1.assoc' = S\u1d65\u2099 \u03c1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Entropy.lean#L216"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-21T14:58:45-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "1abbc36ebb1ab3db9359f235dccdd35dee5e7e0851ba9d79de7d453faf71ebbe"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 221,
        "start_column": 2,
        "end_line": 221,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_2\nd\u2082 : Type u_3\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u03c8 : Ket (d\u2081 \u00d7 d\u2082)\n\u22a2 S\u1d65\u2099 (MState.pure \u03c8).traceLeft = S\u1d65\u2099 (MState.pure \u03c8).traceRight",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Entropy.lean#L221"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "1c409d667ba08f9db2f7336fd4b4b10722345f78462b3d18951093d44cccb5a2"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 228,
        "start_column": 2,
        "end_line": 228,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "dA : Type u_5\ndB : Type u_6\ndC : Type u_7\ninst\u271d\u2075 : Fintype dA\ninst\u271d\u2074 : Fintype dB\ninst\u271d\u00b3 : Fintype dC\ninst\u271d\u00b2 : DecidableEq dA\ninst\u271d\u00b9 : DecidableEq dB\ninst\u271d : DecidableEq dC\n\u03c1 : MState (dA \u00d7 dB \u00d7 dC)\n\u22a2 let \u03c1AB := \u03c1.assoc'.traceRight;\n  let \u03c1AC := \u03c1.SWAP.assoc.traceLeft.SWAP;\n  0 \u2264 qConditionalEnt \u03c1AB + qConditionalEnt \u03c1AC",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Entropy.lean#L228"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "cbaaf458ba8904e25e361106d5afbaa310e3c48a9f7dc9341b6e860ab5e1bc19"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 234,
        "start_column": 2,
        "end_line": 234,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_2\nd\u2082 : Type u_3\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u03b1 : \u211d\n\u03c1\u2081 \u03c3\u2081 : MState d\u2081\n\u03c1\u2082 \u03c3\u2082 : MState d\u2082\n\u22a2 (if LinearMap.ker (Matrix.toLin' \u2191\u2191(\u03c3\u2081\u2297\u03c3\u2082)) \u2264 LinearMap.ker (Matrix.toLin' \u2191\u2191(\u03c1\u2081\u2297\u03c1\u2082)) then\n      if \u03b1 = 1 then \ud835\udc03(\u03c1\u2081\u2297\u03c1\u2082\u2016\u03c3\u2081\u2297\u03c3\u2082)\n      else \u2191\u27e8Real.log ((\u2191(\u03c1\u2081\u2297\u03c1\u2082)).conj \u2191(\u2191(\u03c3\u2081\u2297\u03c3\u2082) ^ ((1 - \u03b1) / (2 * \u03b1))) ^ \u03b1).trace / (\u03b1 - 1), \u22ef\u27e9\n    else \u22a4) =\n    (if LinearMap.ker (Matrix.toLin' \u2191\u2191\u03c3\u2081) \u2264 LinearMap.ker (Matrix.toLin' \u2191\u2191\u03c1\u2081) then\n        if \u03b1 = 1 then \ud835\udc03(\u03c1\u2081\u2016\u03c3\u2081) else \u2191\u27e8Real.log ((\u2191\u03c1\u2081).conj \u2191(\u2191\u03c3\u2081 ^ ((1 - \u03b1) / (2 * \u03b1))) ^ \u03b1).trace / (\u03b1 - 1), \u22ef\u27e9\n      else \u22a4) +\n      if LinearMap.ker (Matrix.toLin' \u2191\u2191\u03c3\u2082) \u2264 LinearMap.ker (Matrix.toLin' \u2191\u2191\u03c1\u2082) then\n        if \u03b1 = 1 then \ud835\udc03(\u03c1\u2082\u2016\u03c3\u2082) else \u2191\u27e8Real.log ((\u2191\u03c1\u2082).conj \u2191(\u2191\u03c3\u2082 ^ ((1 - \u03b1) / (2 * \u03b1))) ^ \u03b1).trace / (\u03b1 - 1), \u22ef\u27e9\n      else \u22a4",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Entropy.lean#L234"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-29T09:57:31-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "bc9021b8a475c1ff8f6c59536d30ee39d4f5ed6ca1b4232f51cd2c82af22105d"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 255,
        "start_column": 2,
        "end_line": 255,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "dA : Type u_5\ndB : Type u_6\ninst\u271d\u00b3 : Fintype dA\ninst\u271d\u00b2 : Fintype dB\ninst\u271d\u00b9 : DecidableEq dA\ninst\u271d : DecidableEq dB\n\u03c1 : MState (dA \u00d7 dB)\n\u22a2 \u2191(qMutualInfo \u03c1) = \u2191\ud835\udc03(\u03c1\u2016\u03c1.traceRight\u2297\u03c1.traceLeft)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Entropy.lean#L255"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "33eca21055672f95de63c4aa32a801b749a8d2ada522e149d97b23271a0eb3c5"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 260,
        "start_column": 2,
        "end_line": 260,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_2\nd\u2082 : Type u_3\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u03c1 : MState (d\u2081 \u00d7 d\u2082)\n\u22a2 S\u1d65\u2099 \u03c1 \u2264 S\u1d65\u2099 \u03c1.traceRight + S\u1d65\u2099 \u03c1.traceLeft",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Entropy.lean#L260"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "9c35214cf52cc0ccf7aa00fc7a506599d62d5466335c785cf2a789ea2d32d0dd"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 272,
        "start_column": 2,
        "end_line": 272,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_2\nd\u2082 : Type u_3\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u03c1 : MState (d\u2081 \u00d7 d\u2082)\n\u22a2 |S\u1d65\u2099 \u03c1.traceRight - S\u1d65\u2099 \u03c1.traceLeft| \u2264 S\u1d65\u2099 \u03c1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Entropy.lean#L272"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "d02c9b6805ccbe774bde683c36bea2d3d2dc7f299e8451c697650358836a4ce7"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 280,
        "start_column": 2,
        "end_line": 280,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_2\nd\u2082 : Type u_3\nd\u2083 : Type u_4\ninst\u271d\u2074 : Fintype d\u2081\ninst\u271d\u00b3 : Fintype d\u2082\ninst\u271d\u00b2 : Fintype d\u2083\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u03c1\u2081\u2082\u2083 : MState (d\u2081 \u00d7 d\u2082 \u00d7 d\u2083)\n\u22a2 let \u03c1\u2081\u2082 := \u03c1\u2081\u2082\u2083.assoc'.traceRight;\n  let \u03c1\u2082\u2083 := \u03c1\u2081\u2082\u2083.traceLeft;\n  let \u03c1\u2082 := \u03c1\u2081\u2082\u2083.traceLeft.traceRight;\n  S\u1d65\u2099 \u03c1\u2081\u2082\u2083 + S\u1d65\u2099 \u03c1\u2082 \u2264 S\u1d65\u2099 \u03c1\u2081\u2082 + S\u1d65\u2099 \u03c1\u2082\u2083",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Entropy.lean#L280"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "f0032bd2f04e4b56c530e47d547317d67e83f4313f34193ebe31de00b598c8b7"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 310,
        "start_column": 2,
        "end_line": 310,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "dA : Type u_5\ndB : Type u_6\ndC : Type u_7\ninst\u271d\u2075 : Fintype dA\ninst\u271d\u2074 : Fintype dB\ninst\u271d\u00b3 : Fintype dC\ninst\u271d\u00b2 : DecidableEq dA\ninst\u271d\u00b9 : DecidableEq dB\ninst\u271d : DecidableEq dC\n\u03c1 : MState (dA \u00d7 dB \u00d7 dC)\n\u22a2 qcmi \u03c1 \u2264 2 * Real.log \u2191(Fintype.card dA)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Entropy.lean#L310"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-21T14:58:45-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "57c64f19f3bacf2200f217ada6b4b159eaa7e36003709131d2f92fce0802a366"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 315,
        "start_column": 2,
        "end_line": 315,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "dA : Type u_5\ndB : Type u_6\ndC : Type u_7\ninst\u271d\u2075 : Fintype dA\ninst\u271d\u2074 : Fintype dB\ninst\u271d\u00b3 : Fintype dC\ninst\u271d\u00b2 : DecidableEq dA\ninst\u271d\u00b9 : DecidableEq dB\ninst\u271d : DecidableEq dC\n\u03c1 : MState (dA \u00d7 dB \u00d7 dC)\n\u22a2 qcmi \u03c1 \u2264 2 * Real.log \u2191(Fintype.card dC)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Entropy.lean#L315"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-21T14:58:45-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "1783a8acc14a6461d66e3201ac0cb02c80c8bb9520d37c3275e8db68fef86b66"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 326,
        "start_column": 2,
        "end_line": 326,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entropy.lean"
      },
      "debug_info": {
        "goal": "dB : Type u_6\ndC : Type u_7\ndA\u2081 : Type u_8\ndA\u2082 : Type u_9\ninst\u271d\u2077 : Fintype dB\ninst\u271d\u2076 : Fintype dC\ninst\u271d\u2075 : Fintype dA\u2081\ninst\u271d\u2074 : Fintype dA\u2082\ninst\u271d\u00b3 : DecidableEq dB\ninst\u271d\u00b2 : DecidableEq dC\ninst\u271d\u00b9 : DecidableEq dA\u2081\ninst\u271d : DecidableEq dA\u2082\n\u03c1 : MState ((dA\u2081 \u00d7 dA\u2082) \u00d7 dB \u00d7 dC)\n\u22a2 let \u03c1A\u2081BC := \u03c1.assoc.SWAP.assoc.traceLeft.SWAP;\n  let \u03c1A\u2082BA\u2081C := ((CPTPMap.id\u2297\u2096CPTPMap.assoc')\u2218\u2098(CPTPMap.assoc\u2218\u2098(CPTPMap.SWAP\u2297\u2096CPTPMap.id))) \u03c1;\n  qcmi \u03c1 = qcmi \u03c1A\u2081BC + qcmi \u03c1A\u2082BA\u2081C",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Entropy.lean#L326"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-15T17:01:00-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "5c6b57f50c3c2f1466c221098e6b8631051e66b1cdc2c2a3c01cfe8c1d403cfa"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 202,
        "start_column": 2,
        "end_line": 202,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Entanglement.lean"
      },
      "debug_info": {
        "goal": "d : Type\ninst\u271d\u00b9 : Fintype d\ninst\u271d : Nonempty d\n\u22a2 S\u1d65\u2099\n      {\n        toSubtype :=\n          \u27e8Matrix.of fun i\u2082 j\u2082 =>\n              \u2211 x : d,\n                {\n                      toSubtype :=\n                        \u27e8Matrix.vecMulVec\n                            \u21d1{ vec := fun x => if x.1 = x.2 then (\u2191\u221a\u2191(Fintype.card d))\u207b\u00b9 else 0, normalized' := \u22ef }\n                            \u21d1\u2191{ vec := fun x => if x.1 = x.2 then (\u2191\u221a\u2191(Fintype.card d))\u207b\u00b9 else 0, normalized' := \u22ef },\n                          \u22ef\u27e9,\n                      zero_le := \u22ef, tr := \u22ef }.m\n                  (i\u2082, x) (j\u2082, x),\n            \u22ef\u27e9,\n        zero_le := \u22ef, tr := \u22ef } =\n    Real.log \u2191(Fintype.card d)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Entanglement.lean#L202"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-01-12T23:03:32-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "81c5fc4756ddddce922d51bd6c475f38504c6753703d64ca820f694fd29f028a"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 342,
        "start_column": 2,
        "end_line": 342,
        "end_column": 7,
        "file": "QuantumInfo/Finite/MState.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d : Fintype d\n\u03c1 : MState d\n\u22a2 (\u2203 \u03c8, \u03c1 = pure \u03c8) \u2194 \u03c1.purity = 1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/MState.lean#L342"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-30T15:58:31-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "15294059c9386a371db3a5ec1c5cb36144f44390864cc6979ea0bac8d63d9bc1"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 439,
        "start_column": 2,
        "end_line": 439,
        "end_column": 7,
        "file": "QuantumInfo/Finite/MState.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_2\nd\u2082 : Type u_3\ninst\u271d\u00b9 : Fintype d\u2081\ninst\u271d : Fintype d\u2082\n\u03c1\u2081 : MState d\u2081\n\u03c1\u2082 : MState d\u2082\n\u22a2 \u2203 \u03c3, \u2200 (i : d\u2081) (j : d\u2082), (\u03c1\u2081\u2297\u03c1\u2082).spectrum (\u03c3 (i, j)) = \u03c1\u2081.spectrum i * \u03c1\u2082.spectrum j",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/MState.lean#L439"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-20T13:28:06-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "c2c8a03d8be03e67a086e4e5a8a80c5d5de1d6435c4210d0491e98e7226cb990"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 460,
        "start_column": 2,
        "end_line": 460,
        "end_column": 7,
        "file": "QuantumInfo/Finite/MState.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_2\nd\u2082 : Type u_3\ninst\u271d\u00b9 : Fintype d\u2081\ninst\u271d : Fintype d\u2082\n\u03c8 : Ket (d\u2081 \u00d7 d\u2082)\n\u22a2 (pure \u03c8).IsSeparable \u2194 \u03c8.IsProd",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/MState.lean#L460"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-25T16:37:53-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "d6b3b944ffbdbb13b8770e6361e5bd27062826a37e439c6da13e5b2fce86347d"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 465,
        "start_column": 2,
        "end_line": 465,
        "end_column": 7,
        "file": "QuantumInfo/Finite/MState.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_2\nd\u2082 : Type u_3\ninst\u271d\u00b9 : Fintype d\u2081\ninst\u271d : Fintype d\u2082\n\u03c8 : Ket (d\u2081 \u00d7 d\u2082)\n\u22a2 (pure \u03c8).IsSeparable \u2194 \u2203 \u03c8\u2081, pure \u03c8\u2081 = (pure \u03c8).traceLeft",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/MState.lean#L465"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-25T16:37:53-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "c5c80b1603dae09e8d5a852d741f08d0ed73bcdfcf5cea0f249540ad41d765b4"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 483,
        "start_column": 6,
        "end_line": 483,
        "end_column": 11,
        "file": "QuantumInfo/Finite/MState.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\nd\u2081 : Type u_2\nd\u2082 : Type u_3\nd\u2083 : Type u_4\ninst\u271d\u00b3 : Fintype d\ninst\u271d\u00b2 : Fintype d\u2081\ninst\u271d\u00b9 : Fintype d\u2082\ninst\u271d : Fintype d\u2083\n\u03c1 : MState d\nh\u2081 : \u2200 (i : d), 0 \u2264 \u22ef.eigenvalues i\n\u22a2 \u2200 (x : d), \u2211 i : d, Complex.abs (\u22ef.eigenvectorBasis x i) ^ 2 = 1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/MState.lean#L483"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "d635d04d2563ba8fb65ab8bc511ae511998531ff02a654191e6237dc1bad7363"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 497,
        "start_column": 2,
        "end_line": 497,
        "end_column": 7,
        "file": "QuantumInfo/Finite/MState.lean"
      },
      "debug_info": {
        "goal": "case h.a.a\nd : Type u_1\ninst\u271d : Fintype d\n\u03c1 : MState d\ni j : d\n\u22a2 \u2211 x : d,\n      \u2191\u22ef.eigenvectorUnitary i x *\n        (\u2191(Complex.normSq \u2191\u221a(\u22ef.eigenvalues x)) * (starRingEnd \u2102) (\u2191\u22ef.eigenvectorUnitary j x)) =\n    \u2191\u2191\u03c1 i j",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/MState.lean#L497"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-18T12:12:56-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "149ef94d4ba718ca3c8ebcd31b7d9850adbb2ab43ce6d6e078ab27f47648cbc6"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 526,
        "start_column": 2,
        "end_line": 526,
        "end_column": 7,
        "file": "QuantumInfo/Finite/MState.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\nd\u2081 : Type u_2\nd\u2082 : Type u_3\nd\u2083 : Type u_4\ninst\u271d\u00b3 : Fintype d\ninst\u271d\u00b2 : Fintype d\u2081\ninst\u271d\u00b9 : Fintype d\u2082\ninst\u271d : Fintype d\u2083\n\u03c1 : MState (d\u2081 \u00d7 d\u2082)\n\u22a2 \u2203 e, \u03c1.SWAP.spectrum.relabel e = \u03c1.spectrum",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/MState.lean#L526"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-02-06T18:15:19-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "671030f3562a450982630a6be40860b666c5a8e2e222bba7945b8f49c6496aa6"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 614,
        "start_column": 2,
        "end_line": 614,
        "end_column": 7,
        "file": "QuantumInfo/Finite/MState.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\nd\u2081 : Type u_2\nd\u2082 : Type u_3\nd\u2083 : Type u_4\ninst\u271d\u00b3 : Fintype d\ninst\u271d\u00b2 : Fintype d\u2081\ninst\u271d\u00b9 : Fintype d\u2082\ninst\u271d : Fintype d\u2083\n\u22a2 CompactSpace (MState d)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/MState.lean#L614"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "4c4bdea86db78c63f5193679061770429abd5c9f1cdcdfade43f4559f2a8d00e"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 617,
        "start_column": 2,
        "end_line": 617,
        "end_column": 7,
        "file": "QuantumInfo/Finite/MState.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d : Fintype d\n\u22a2 Continuous M",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/MState.lean#L617"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-14T17:26:35-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "f28353d012f1c15f464d010d4603ee94e2a32efe32474e5b06c61f5f893049f1"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 639,
        "start_column": 6,
        "end_line": 639,
        "end_column": 11,
        "file": "QuantumInfo/Finite/MState.lean"
      },
      "debug_info": {
        "goal": "case right\nd : Type u_1\nd\u2081 : Type u_2\nd\u2082 : Type u_3\nd\u2083 : Type u_4\ninst\u271d\u2076 : Fintype d\ninst\u271d\u2075 : Fintype d\u2081\ninst\u271d\u2074 : Fintype d\u2082\ninst\u271d\u00b3 : Fintype d\u2083\n\u03b9 : Type u\ninst\u271d\u00b2 : DecidableEq \u03b9\nf\u03b9 : Fintype \u03b9\ndI : \u03b9 \u2192 Type v\ninst\u271d\u00b9 : (i : \u03b9) \u2192 Fintype (dI i)\ninst\u271d : (i : \u03b9) \u2192 DecidableEq (dI i)\n\u03c1i : (i : \u03b9) \u2192 MState (dI i)\nv : ((i : \u03b9) \u2192 dI i) \u2192 \u2102\n\u22a2 0 \u2264 star v \u2b1d\u1d65 \u2191\u27e8fun j k => \u220f i : \u03b9, (\u03c1i i).m (j i) (k i), \u22ef\u27e9 *\u1d65 v",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/MState.lean#L639"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-28T15:30:28-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "d2ecaffc999ba2fd72ee78681f99d9faa16468ec6000e86fdedc401ce71e767a"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 628,
        "start_column": 14,
        "end_line": 628,
        "end_column": 19,
        "file": "QuantumInfo/Finite/MState.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\nd\u2081 : Type u_2\nd\u2082 : Type u_3\nd\u2083 : Type u_4\ninst\u271d\u2076 : Fintype d\ninst\u271d\u2075 : Fintype d\u2081\ninst\u271d\u2074 : Fintype d\u2082\ninst\u271d\u00b3 : Fintype d\u2083\n\u03b9 : Type u\ninst\u271d\u00b2 : DecidableEq \u03b9\nf\u03b9 : Fintype \u03b9\ndI : \u03b9 \u2192 Type v\ninst\u271d\u00b9 : (i : \u03b9) \u2192 Fintype (dI i)\ninst\u271d : (i : \u03b9) \u2192 DecidableEq (dI i)\n\u03c1i : (i : \u03b9) \u2192 MState (dI i)\n\u22a2 (fun j k => \u220f i : \u03b9, (\u03c1i i).m (j i) (k i)) \u2208 selfAdjoint (Matrix ((i : \u03b9) \u2192 dI i) ((i : \u03b9) \u2192 dI i) \u2102)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/MState.lean#L628"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-31T00:28:17-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "9f09ece7b0892f16c0dad9e960bd7e87079ccd597003eeebb13574b6f819e04e"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 289,
        "start_column": 6,
        "end_line": 289,
        "end_column": 11,
        "file": "QuantumInfo/Finite/Braket.lean"
      },
      "debug_info": {
        "goal": "case h.h.mk\nd\u2081 : Type u_3\nd\u2082 : Type u_4\ninst\u271d\u00b9 : Fintype d\u2081\ninst\u271d : Fintype d\u2082\n\u03c8 : Ket (d\u2081 \u00d7 d\u2082)\nhcrossm : \u2200 (i\u2081 i\u2082 : d\u2081) (j\u2081 j\u2082 : d\u2082), \u03c8 (i\u2081, j\u2081) * \u03c8 (i\u2082, j\u2082) = \u03c8 (i\u2081, j\u2082) * \u03c8 (i\u2082, j\u2081)\na : d\u2081\nb : d\u2082\nh\u03c8nonZero : \u03c8 (a, b) \u2260 0\nv\u2081 : d\u2081 \u2192 \u2102 := fun x => \u2191(\u03c8 (a, b)).abs / \u03c8 (a, b) * (\u03c8 (x, b) / \u2191\u221a(\u2211 i : d\u2081, Complex.normSq (\u03c8 (i, b))))\nv\u2082 : d\u2082 \u2192 \u2102 := fun y => \u03c8 (a, y) / \u2191\u221a(\u2211 j : d\u2082, Complex.normSq (\u03c8 (a, j)))\nhv1Norm : \u2211 x : d\u2081, \u2016v\u2081 x\u2016 ^ 2 = 1\nhv2Norm : \u2211 x : d\u2082, \u2016v\u2082 x\u2016 ^ 2 = 1\n\u03c8\u2081 : Ket d\u2081 := { vec := v\u2081, normalized' := hv1Norm }\n\u03c8\u2082 : Ket d\u2082 := { vec := v\u2082, normalized' := hv2Norm }\nx : d\u2081\ny : d\u2082\nh\u03c8fun : \u03c8 (x, y) = \u03c8 (x, b) * \u03c8 (a, y) / \u03c8 (a, b)\nh\u03c8norm : \u2211 z : d\u2081 \u00d7 d\u2082, Complex.normSq (\u03c8.vec (z.1, b) * \u03c8.vec (a, z.2)) = Complex.normSq (\u03c8 (a, b))\n\u22a2 \u03c8.vec (x, y) =\n    \u2191(\u03c8 (a, b)).abs / \u03c8 (a, b) *\n      (\u03c8 (x, b) * \u03c8 (a, y) / \u2191\u221a((\u2211 i : d\u2081, Complex.normSq (\u03c8 (i, b))) * \u2211 j : d\u2082, Complex.normSq (\u03c8 (a, j))))",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Braket.lean#L289"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-28T12:13:14-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "cbc083833e682217d15184285df4ee7f216b50da07121828d944be354aca02a1"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 85,
        "start_column": 4,
        "end_line": 85,
        "end_column": 9,
        "file": "QuantumInfo/Finite/POVM.lean"
      },
      "debug_info": {
        "goal": "case h.e'_2.h.e'_5.a\nX : Type u_1\nd : Type u_2\ninst\u271d\u00b3 : Fintype X\ninst\u271d\u00b2 : Fintype d\ninst\u271d\u00b9 : DecidableEq d\ninst\u271d : DecidableEq X\n\u039b : POVM X d\nx : Matrix d d \u2102\ni : X\na\u271d : i \u2208 Finset.univ\n\u22a2 \u2191(\u039b.mats i ^ (1 / 2)) * \u2191(\u039b.mats i ^ (1 / 2)) = \u2191(\u039b.mats i)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/POVM.lean#L85"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "7f46f10d81bd891dd11cdfb29d0d2c8946d191f82019269cc2f9b1faadd1806a"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 50,
        "start_column": 4,
        "end_line": 50,
        "end_column": 9,
        "file": "QuantumInfo/Finite/POVM.lean"
      },
      "debug_info": {
        "goal": "X : Type u_1\nd : Type u_2\ninst\u271d\u00b3 : Fintype X\ninst\u271d\u00b2 : Fintype d\ninst\u271d\u00b9 : DecidableEq d\ninst\u271d : DecidableEq X\n\u039b : POVM X d\n\u22a2 MatrixMap.IsCompletelyPositive\n    ((((PTPMap.mk \u2102\n                  (PMap.mk \u2102\n                    (HPMap.mk \u2102\n                      (\u2211 x : X,\n                        {\n                          toFun := fun \u03c1 =>\n                            kroneckerMap (fun x1 x2 => x1 * x2) (\u2191(\u039b.mats x ^ (1 / 2)) * \u03c1 * \u2191(\u039b.mats x ^ (1 / 2)))\n                              (stdBasisMatrix x x 1),\n                          map_add' := \u22ef, map_smul' := \u22ef })\n                      \u22ef)\n                    \u22ef)\n                  \u22ef).toPMap\n              \u2102).toHPMap\n          \u2102).toLinearMap\n      \u2102)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/POVM.lean#L50"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-28T12:13:14-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "9d67b6475a256e7f4b0b76f230a83f9d896abdef7e401ea203900352d7a3aa0c"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 95,
        "start_column": 4,
        "end_line": 95,
        "end_column": 9,
        "file": "QuantumInfo/Finite/POVM.lean"
      },
      "debug_info": {
        "goal": "X : Type u_1\nd : Type u_2\ninst\u271d\u00b3 : Fintype X\ninst\u271d\u00b2 : Fintype d\ninst\u271d\u00b9 : DecidableEq d\ninst\u271d : DecidableEq X\n\u039b : POVM X d\n\u03c1 : MState d\nx : X\n\u22a2 (\u039b.mats x).inner \u2191\u03c1 \u2264 1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/POVM.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-25T16:37:53-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "f88a1dab5901d0a1342483ba6f48d83ee1befc1c28b832c5123a83dbb7bf8175"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 104,
        "start_column": 2,
        "end_line": 104,
        "end_column": 7,
        "file": "QuantumInfo/Finite/POVM.lean"
      },
      "debug_info": {
        "goal": "X : Type u_1\nd : Type u_2\ninst\u271d\u00b3 : Fintype X\ninst\u271d\u00b2 : Fintype d\ninst\u271d\u00b9 : DecidableEq d\ninst\u271d : DecidableEq X\n\u039b : POVM X d\n\u03c1 : MState d\n\u22a2 (\u039b.measurement_map \u03c1).traceLeft = MState.ofClassical (\u039b.measure \u03c1)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/POVM.lean#L104"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-29T21:39:14+02:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "2d1114910e914053f3c7065ec9d94ec263e4c678e4f3daba2a3ccd51e63f716e"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 40,
        "start_column": 2,
        "end_line": 40,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Unitary.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 : MState d\nU : \u21a5\ud835\udc14[d]\n\u22a2 \u2203 \u03c3, (\u03c1.U_conj U).spectrum = \u03c1.spectrum.relabel \u03c3",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Unitary.lean#L40"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-28T15:01:51+02:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "0a7f142ae4495ca4f59ac7c4c68ba44d1caef7dd011fa75763e9c6e3ba2464f4"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 112,
        "start_column": 2,
        "end_line": 112,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Ensemble.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nd : Type u_3\ninst\u271d\u00b9 : Fintype \u03b1\ninst\u271d : Fintype d\n\u03c8 : Ket d\ne : PEnsemble d \u03b1\n\u22a2 mix \u2191e = MState.pure \u03c8 \u2194 \u2200 (i : \u03b1), e.distr i \u2260 0 \u2192 e.states i = \u03c8",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Ensemble.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-01-15T23:45:19-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "8a949592f0ddc5d0fd3ad3a58c9c900feab0c1514552a68c6776d8d55d09c466"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 145,
        "start_column": 2,
        "end_line": 145,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Ensemble.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nd : Type u_3\ninst\u271d\u00b9 : Fintype \u03b1\ninst\u271d : Fintype d\n\u03c8 : Ket d\ne : MEnsemble d \u03b1\n\u22a2 mix e = MState.pure \u03c8 \u2194 \u2200 (i : \u03b1), e.distr i \u2260 0 \u2192 e.states i = MState.pure \u03c8",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Ensemble.lean#L145"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-01-15T23:45:19-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "2ac3fde724db375ad5ed02efd22b80ca27eb5fc53cf408860f0455a6fc4a42b3"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 232,
        "start_column": 2,
        "end_line": 232,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Ensemble.lean"
      },
      "debug_info": {
        "goal": "case h.a.a\nd : Type u_3\ninst\u271d : Fintype d\n\u03c1 : MState d\ni j : d\n\u22a2 \u2191\u2191(mix \u2191(spectral_ensemble \u03c1)) i j = \u2191\u2191\u03c1 i j",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Ensemble.lean#L232"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-01-15T23:45:19-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "80380b2ddd6bb30b2c80fafd15fffcf12b795efbeafa30a511abe1740d539195"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 330,
        "start_column": 2,
        "end_line": 330,
        "end_column": 7,
        "file": "QuantumInfo/ForMathlib/HermitianMat.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nn : Type u_2\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : RCLike \u03b1\nA : HermitianMat n \u03b1\ninst\u271d : DecidableEq n\nhA : 0 \u2264 A\n\u22a2 A \u2264 A.trace \u2022 1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/ForMathlib/HermitianMat.lean#L330"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-02-05T00:41:27-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "120d04d5b040e7c3b1668363ccbe7a0da995b2e3689beb3900c46f2dcc0b8aab"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7,
        "file": "QuantumInfo/ForMathlib/MatrixNorm/TraceNorm.lean"
      },
      "debug_info": {
        "goal": "n : Type u_2\nR : Type u_3\ninst\u271d\u00b9 : Fintype n\ninst\u271d : RCLike R\nA : Matrix n n R\nhA : A.IsHermitian\n\u22a2 A.traceNorm = \u2211 i : n, |hA.eigenvalues i|",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/ForMathlib/MatrixNorm/TraceNorm.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-29T21:39:14+02:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "9981fa6e558ad8b5ab3ddfb92dd9e3eb77cda5f4b2047d46634c341e0a929bdd"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 43,
        "start_column": 6,
        "end_line": 43,
        "end_column": 11,
        "file": "QuantumInfo/ForMathlib/MatrixNorm/TraceNorm.lean"
      },
      "debug_info": {
        "goal": "m : Type u_1\nn : Type u_2\nR : Type u_3\ninst\u271d\u00b2 : Fintype m\ninst\u271d\u00b9 : Fintype n\ninst\u271d : RCLike R\nA : Matrix m n R\nh : A.traceNorm = 0\n\u22a2 \u2200 (i : n), \u22ef.eigenvalues i = 0",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/ForMathlib/MatrixNorm/TraceNorm.lean#L43"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-29T21:39:14+02:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "1feb5ada54071a9e053a9ed624465a6bc31e52e4724ad4b99e961d1fa9f37acf"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 45,
        "start_column": 6,
        "end_line": 45,
        "end_column": 11,
        "file": "QuantumInfo/ForMathlib/MatrixNorm/TraceNorm.lean"
      },
      "debug_info": {
        "goal": "m : Type u_1\nn : Type u_2\nR : Type u_3\ninst\u271d\u00b2 : Fintype m\ninst\u271d\u00b9 : Fintype n\ninst\u271d : RCLike R\nA : Matrix m n R\nh : A.traceNorm = 0\nh\u2082 : \u2200 (i : n), \u22ef.eigenvalues i = 0\n\u22a2 (\u22ef : (A\u1d34 * A).PosSemidef).sqrt = 0",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/ForMathlib/MatrixNorm/TraceNorm.lean#L45"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-29T21:39:14+02:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "56f985c9ccb5967f90b90ae2f1db2998ea07b4f6d4dbabc5ea3af43159ff30e4"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 47,
        "start_column": 6,
        "end_line": 47,
        "end_column": 11,
        "file": "QuantumInfo/ForMathlib/MatrixNorm/TraceNorm.lean"
      },
      "debug_info": {
        "goal": "m : Type u_1\nn : Type u_2\nR : Type u_3\ninst\u271d\u00b2 : Fintype m\ninst\u271d\u00b9 : Fintype n\ninst\u271d : RCLike R\nA : Matrix m n R\nh : A.traceNorm = 0\nh\u2082 : \u2200 (i : n), \u22ef.eigenvalues i = 0\nh\u2083 : (\u22ef : (A\u1d34 * A).PosSemidef).sqrt = 0\n\u22a2 A\u1d34 * A = 0",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/ForMathlib/MatrixNorm/TraceNorm.lean#L47"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-29T21:39:14+02:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "4f9e0b813ef350588fdca81ae46d86970522e552ebbc9c5f7c5c260ae9cc5114"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 49,
        "start_column": 6,
        "end_line": 49,
        "end_column": 11,
        "file": "QuantumInfo/ForMathlib/MatrixNorm/TraceNorm.lean"
      },
      "debug_info": {
        "goal": "m : Type u_1\nn : Type u_2\nR : Type u_3\ninst\u271d\u00b2 : Fintype m\ninst\u271d\u00b9 : Fintype n\ninst\u271d : RCLike R\nA : Matrix m n R\nh : A.traceNorm = 0\nh\u2082 : \u2200 (i : n), \u22ef.eigenvalues i = 0\nh\u2083 : (\u22ef : (A\u1d34 * A).PosSemidef).sqrt = 0\nh\u2084 : A\u1d34 * A = 0\n\u22a2 A = 0",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/ForMathlib/MatrixNorm/TraceNorm.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-29T21:39:14+02:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "b20376766494c0f6efddbd5129308c1189ba3d66b35c75ae1e1aa053ad5137d8"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 82,
        "start_column": 2,
        "end_line": 82,
        "end_column": 7,
        "file": "QuantumInfo/ForMathlib/MatrixNorm/TraceNorm.lean"
      },
      "debug_info": {
        "goal": "n : Type u_2\nR : Type u_3\ninst\u271d\u00b9 : Fintype n\ninst\u271d : RCLike R\nA : Matrix n n R\n\u22a2 IsGreatest {x | \u2203 U, (\u2191U * A).trace = x} \u2191A.traceNorm",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/ForMathlib/MatrixNorm/TraceNorm.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-29T21:39:14+02:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "7eef8930b8b85821860a961b9cd466d12b43a94001e26e1311673d7ca433e4c8"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 33,
        "start_column": 2,
        "end_line": 33,
        "end_column": 7,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 : MState d\nhFull : \u03c1.m.PosDef\nS : Set (MState d)\nhS : S.Nonempty\n\u22a2 \u03b2_ 0 (\u03c1\u2016S) = 1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-04-12T03:25:12-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "42d98a77f3c22ae39cf0c79598ce04258d0cc347b4ddf172373ec834eb3697aa"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 67,
        "start_column": 2,
        "end_line": 67,
        "end_column": 7,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "M : Type u_2\ninst\u271d\u00b2 : AddCommMonoid M\ninst\u271d\u00b9 : Module \u211d M\ninst\u271d : TopologicalSpace M\nf : LinearMap.BilinForm \u211d M\nS T : Set M\nhS\u2081 : IsCompact S\nhT\u2081 : IsCompact T\nhS\u2082 : Convex \u211d S\nhT\u2082 : Convex \u211d T\n\u22a2 \u2a06 x \u2208 S, \u2a05 y \u2208 T, (f x) y = \u2a05 y \u2208 T, \u2a06 x \u2208 S, (f x) y",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L67"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "30b245cb9fed4f7c5d9380d800e376a762949f5415debe758422729d92108432"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 88,
        "start_column": 4,
        "end_line": 88,
        "end_column": 9,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 : MState d\n\u03b5 : \u211d\nS : Set (MState d)\nhS\u2081 : IsCompact S\nhS\u2082 : Convex \u211d (MState.M '' S)\nhmm :\n  \u2200 (f : LinearMap.BilinForm \u211d (HermitianMat d \u2102)) (S T : Set (HermitianMat d \u2102)),\n    IsCompact S \u2192 IsCompact T \u2192 Convex \u211d S \u2192 Convex \u211d T \u2192 \u2a06 x \u2208 S, \u2a05 y \u2208 T, (f x) y = \u2a05 y \u2208 T, \u2a06 x \u2208 S, (f x) y\nf : LinearMap.BilinForm \u211d (HermitianMat d \u2102) :=\n  { toFun := fun \u03c1 => { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef, map_smul' := \u22ef }, map_add' := \u22ef, map_smul' := \u22ef }\nS' : Set (HermitianMat d \u2102) := MState.M '' S\nT' : Set (HermitianMat d \u2102) := {m | MState.exp_val (1 - m) \u03c1 \u2264 \u03b5 \u2227 0 \u2264 m \u2227 m \u2264 1}\n\u22a2 IsCompact (MState.M '' S)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L88"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "0f4c846fc10ceb9aca60feda287263e13cc17e3c1b7f2b2be61a0df7b8ac20d5"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 90,
        "start_column": 4,
        "end_line": 90,
        "end_column": 9,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 : MState d\n\u03b5 : \u211d\nS : Set (MState d)\nhS\u2082 : Convex \u211d (MState.M '' S)\nhmm :\n  \u2200 (f : LinearMap.BilinForm \u211d (HermitianMat d \u2102)) (S T : Set (HermitianMat d \u2102)),\n    IsCompact S \u2192 IsCompact T \u2192 Convex \u211d S \u2192 Convex \u211d T \u2192 \u2a06 x \u2208 S, \u2a05 y \u2208 T, (f x) y = \u2a05 y \u2208 T, \u2a06 x \u2208 S, (f x) y\nf : LinearMap.BilinForm \u211d (HermitianMat d \u2102) :=\n  { toFun := fun \u03c1 => { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef, map_smul' := \u22ef }, map_add' := \u22ef, map_smul' := \u22ef }\nS' : Set (HermitianMat d \u2102) := MState.M '' S\nT' : Set (HermitianMat d \u2102) := {m | MState.exp_val (1 - m) \u03c1 \u2264 \u03b5 \u2227 0 \u2264 m \u2227 m \u2264 1}\nhS\u2081 : IsCompact S'\n\u22a2 IsCompact T'",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L90"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "dcc420f0b43a0d8a6fcf6f4f34f71d4fe80ba7e55c4c8f41438908436b353764"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 98,
        "start_column": 6,
        "end_line": 98,
        "end_column": 11,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "case intro.intro.intro.intro.refine_1\nd : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 : MState d\n\u03b5 : \u211d\nS : Set (MState d)\nhS\u2082 : Convex \u211d (MState.M '' S)\nhmm :\n  \u2200 (f : LinearMap.BilinForm \u211d (HermitianMat d \u2102)) (S T : Set (HermitianMat d \u2102)),\n    IsCompact S \u2192 IsCompact T \u2192 Convex \u211d S \u2192 Convex \u211d T \u2192 \u2a06 x \u2208 S, \u2a05 y \u2208 T, (f x) y = \u2a05 y \u2208 T, \u2a06 x \u2208 S, (f x) y\nf : LinearMap.BilinForm \u211d (HermitianMat d \u2102) :=\n  { toFun := fun \u03c1 => { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef, map_smul' := \u22ef }, map_add' := \u22ef, map_smul' := \u22ef }\nS' : Set (HermitianMat d \u2102) := MState.M '' S\nT' : Set (HermitianMat d \u2102) := {m | MState.exp_val (1 - m) \u03c1 \u2264 \u03b5 \u2227 0 \u2264 m \u2227 m \u2264 1}\nhS\u2081 : IsCompact S'\nhT\u2081 : IsCompact T'\nx : HermitianMat d \u2102\nhx\u2081 : MState.exp_val (1 - x) \u03c1 \u2264 \u03b5\nhx\u2082 : 0 \u2264 x\nhx\u2083 : x \u2264 1\ny : HermitianMat d \u2102\nhy\u2081 : MState.exp_val (1 - y) \u03c1 \u2264 \u03b5\nhy\u2082 : 0 \u2264 y\nhy\u2083 : y \u2264 1\na b : \u211d\nha : 0 \u2264 a\nhb : 0 \u2264 b\nhab : a + b = 1\n\u22a2 MState.exp_val (1 - (a \u2022 x + b \u2022 y)) \u03c1 \u2264 \u03b5",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L98"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "62a3a2fb9ff12bf81824ef499cb32474baeeeb9da255a9280471b476dc16f8b5"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 99,
        "start_column": 6,
        "end_line": 99,
        "end_column": 11,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "case intro.intro.intro.intro.refine_2\nd : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 : MState d\n\u03b5 : \u211d\nS : Set (MState d)\nhS\u2082 : Convex \u211d (MState.M '' S)\nhmm :\n  \u2200 (f : LinearMap.BilinForm \u211d (HermitianMat d \u2102)) (S T : Set (HermitianMat d \u2102)),\n    IsCompact S \u2192 IsCompact T \u2192 Convex \u211d S \u2192 Convex \u211d T \u2192 \u2a06 x \u2208 S, \u2a05 y \u2208 T, (f x) y = \u2a05 y \u2208 T, \u2a06 x \u2208 S, (f x) y\nf : LinearMap.BilinForm \u211d (HermitianMat d \u2102) :=\n  { toFun := fun \u03c1 => { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef, map_smul' := \u22ef }, map_add' := \u22ef, map_smul' := \u22ef }\nS' : Set (HermitianMat d \u2102) := MState.M '' S\nT' : Set (HermitianMat d \u2102) := {m | MState.exp_val (1 - m) \u03c1 \u2264 \u03b5 \u2227 0 \u2264 m \u2227 m \u2264 1}\nhS\u2081 : IsCompact S'\nhT\u2081 : IsCompact T'\nx : HermitianMat d \u2102\nhx\u2081 : MState.exp_val (1 - x) \u03c1 \u2264 \u03b5\nhx\u2082 : 0 \u2264 x\nhx\u2083 : x \u2264 1\ny : HermitianMat d \u2102\nhy\u2081 : MState.exp_val (1 - y) \u03c1 \u2264 \u03b5\nhy\u2082 : 0 \u2264 y\nhy\u2083 : y \u2264 1\na b : \u211d\nha : 0 \u2264 a\nhb : 0 \u2264 b\nhab : a + b = 1\n\u22a2 0 \u2264 a \u2022 x + b \u2022 y",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L99"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "286ceebd392d69a5f18ef0115d9052633933c843277e31a1341f6b7eba7c1051"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 100,
        "start_column": 6,
        "end_line": 100,
        "end_column": 11,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "case intro.intro.intro.intro.refine_3\nd : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 : MState d\n\u03b5 : \u211d\nS : Set (MState d)\nhS\u2082 : Convex \u211d (MState.M '' S)\nhmm :\n  \u2200 (f : LinearMap.BilinForm \u211d (HermitianMat d \u2102)) (S T : Set (HermitianMat d \u2102)),\n    IsCompact S \u2192 IsCompact T \u2192 Convex \u211d S \u2192 Convex \u211d T \u2192 \u2a06 x \u2208 S, \u2a05 y \u2208 T, (f x) y = \u2a05 y \u2208 T, \u2a06 x \u2208 S, (f x) y\nf : LinearMap.BilinForm \u211d (HermitianMat d \u2102) :=\n  { toFun := fun \u03c1 => { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef, map_smul' := \u22ef }, map_add' := \u22ef, map_smul' := \u22ef }\nS' : Set (HermitianMat d \u2102) := MState.M '' S\nT' : Set (HermitianMat d \u2102) := {m | MState.exp_val (1 - m) \u03c1 \u2264 \u03b5 \u2227 0 \u2264 m \u2227 m \u2264 1}\nhS\u2081 : IsCompact S'\nhT\u2081 : IsCompact T'\nx : HermitianMat d \u2102\nhx\u2081 : MState.exp_val (1 - x) \u03c1 \u2264 \u03b5\nhx\u2082 : 0 \u2264 x\nhx\u2083 : x \u2264 1\ny : HermitianMat d \u2102\nhy\u2081 : MState.exp_val (1 - y) \u03c1 \u2264 \u03b5\nhy\u2082 : 0 \u2264 y\nhy\u2083 : y \u2264 1\na b : \u211d\nha : 0 \u2264 a\nhb : 0 \u2264 b\nhab : a + b = 1\n\u22a2 a \u2022 x + b \u2022 y \u2264 1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L100"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "8617383c0b03e664f73ba7c9b09d41a2e4cac2a23b17ad4a47f64c7cd88d48df"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 107,
        "start_column": 4,
        "end_line": 107,
        "end_column": 9,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 : MState d\n\u03b5 : \u211d\nS : Set (MState d)\nhS\u2082 : Convex \u211d (MState.M '' S)\nf : LinearMap.BilinForm \u211d (HermitianMat d \u2102) :=\n  { toFun := fun \u03c1 => { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef, map_smul' := \u22ef }, map_add' := \u22ef, map_smul' := \u22ef }\nS' : Set (HermitianMat d \u2102) := MState.M '' S\nT' : Set (HermitianMat d \u2102) := {m | MState.exp_val (1 - m) \u03c1 \u2264 \u03b5 \u2227 0 \u2264 m \u2227 m \u2264 1}\nhS\u2081 : IsCompact S'\nhT\u2081 : IsCompact T'\nhT\u2082 : Convex \u211d T'\nhmm : \u2a06 x \u2208 S', \u2a05 y \u2208 T', (f x) y = \u2a05 y \u2208 T', \u2a06 x \u2208 S', (f x) y\n\u22a2 Nonempty \u2191S",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L107"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "e8de3911d58617d1031e58986754ff9468cc96085089994ef9bda227909736ed"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 144,
        "start_column": 2,
        "end_line": 144,
        "end_column": 7,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "case a.convert_3\nd : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 : MState d\n\u03b5 : \u211d\nS : Set (MState d)\nhS\u2082 : Convex \u211d (MState.M '' S)\nf : LinearMap.BilinForm \u211d (HermitianMat d \u2102) :=\n  { toFun := fun \u03c1 => { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef, map_smul' := \u22ef }, map_add' := \u22ef, map_smul' := \u22ef }\nS' : Set (HermitianMat d \u2102) := MState.M '' S\nT' : Set (HermitianMat d \u2102) := {m | MState.exp_val (1 - m) \u03c1 \u2264 \u03b5 \u2227 0 \u2264 m \u2227 m \u2264 1}\nhS\u2081 : IsCompact S'\nhT\u2081 : IsCompact T'\nhT\u2082 : Convex \u211d T'\nhmm : \u2a06 x \u2208 S', \u2a05 y \u2208 T', (f x) y = \u2a05 y \u2208 T', \u2a06 x \u2208 S', (f x) y\nhnS : Nonempty \u2191S\nh_inst :\n  let x := \u22ef;\n  CompleteSemilatticeSup.toSupSet = ConditionallyCompleteLattice.toSupSet\n\u22a2 \u2a06 i, \u2191(\u2a05 T, \u27e8MState.exp_val \u2191T \u2191i, \u22ef\u27e9) = \u2191(\u2a05 T, \u2a06 \u03c3 \u2208 S, \u27e8MState.exp_val (\u2191T) \u03c3, \u22ef\u27e9)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L144"
      },
      "metadata": {
        "blame_email_hash": "1447a142f99f",
        "blame_date": "2025-01-29T10:49:09-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "289677381a95e66d16a7a1aa8ef0fc855b3a5b0c7b7d2580c2f8d198903e662b"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 78,
        "start_column": 20,
        "end_line": 78,
        "end_column": 25,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1\u271d : MState d\n\u03b5 : \u211d\nS : Set (MState d)\nhS\u2081 : IsCompact S\nhS\u2082 : Convex \u211d (MState.M '' S)\nhmm :\n  \u2200 (f : LinearMap.BilinForm \u211d (HermitianMat d \u2102)) (S T : Set (HermitianMat d \u2102)),\n    IsCompact S \u2192 IsCompact T \u2192 Convex \u211d S \u2192 Convex \u211d T \u2192 \u2a06 x \u2208 S, \u2a05 y \u2208 T, (f x) y = \u2a05 y \u2208 T, \u2a06 x \u2208 S, (f x) y\n\u03c1 : HermitianMat d \u2102\n\u22a2 \u2200 (x y : HermitianMat d \u2102), (fun \u03c3 => \u03c1.inner \u03c3) (x + y) = (fun \u03c3 => \u03c1.inner \u03c3) x + (fun \u03c3 => \u03c1.inner \u03c3) y",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L78"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "d6d345fdd41fb7d798592261a3ce98c06fc98220edf8a024aa84726bf8b88b78"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 79,
        "start_column": 21,
        "end_line": 79,
        "end_column": 26,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1\u271d : MState d\n\u03b5 : \u211d\nS : Set (MState d)\nhS\u2081 : IsCompact S\nhS\u2082 : Convex \u211d (MState.M '' S)\nhmm :\n  \u2200 (f : LinearMap.BilinForm \u211d (HermitianMat d \u2102)) (S T : Set (HermitianMat d \u2102)),\n    IsCompact S \u2192 IsCompact T \u2192 Convex \u211d S \u2192 Convex \u211d T \u2192 \u2a06 x \u2208 S, \u2a05 y \u2208 T, (f x) y = \u2a05 y \u2208 T, \u2a06 x \u2208 S, (f x) y\n\u03c1 : HermitianMat d \u2102\n\u22a2 \u2200 (m : \u211d) (x : HermitianMat d \u2102),\n    { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef }.toFun (m \u2022 x) =\n      (RingHom.id \u211d) m \u2022 { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef }.toFun x",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "7cad921d3e7d9c8a4e2ad12e33210115cf43e897971f43838977b2e791147645"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 81,
        "start_column": 18,
        "end_line": 81,
        "end_column": 23,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 : MState d\n\u03b5 : \u211d\nS : Set (MState d)\nhS\u2081 : IsCompact S\nhS\u2082 : Convex \u211d (MState.M '' S)\nhmm :\n  \u2200 (f : LinearMap.BilinForm \u211d (HermitianMat d \u2102)) (S T : Set (HermitianMat d \u2102)),\n    IsCompact S \u2192 IsCompact T \u2192 Convex \u211d S \u2192 Convex \u211d T \u2192 \u2a06 x \u2208 S, \u2a05 y \u2208 T, (f x) y = \u2a05 y \u2208 T, \u2a06 x \u2208 S, (f x) y\n\u22a2 \u2200 (x y : HermitianMat d \u2102),\n    (fun \u03c1 => { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef, map_smul' := \u22ef }) (x + y) =\n      (fun \u03c1 => { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef, map_smul' := \u22ef }) x +\n        (fun \u03c1 => { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef, map_smul' := \u22ef }) y",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L81"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "ab67f081951c48593046f123a0af4dc1cfdec28cba2aa87f77e066dfe0824eac"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 82,
        "start_column": 19,
        "end_line": 82,
        "end_column": 24,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 : MState d\n\u03b5 : \u211d\nS : Set (MState d)\nhS\u2081 : IsCompact S\nhS\u2082 : Convex \u211d (MState.M '' S)\nhmm :\n  \u2200 (f : LinearMap.BilinForm \u211d (HermitianMat d \u2102)) (S T : Set (HermitianMat d \u2102)),\n    IsCompact S \u2192 IsCompact T \u2192 Convex \u211d S \u2192 Convex \u211d T \u2192 \u2a06 x \u2208 S, \u2a05 y \u2208 T, (f x) y = \u2a05 y \u2208 T, \u2a06 x \u2208 S, (f x) y\n\u22a2 \u2200 (m : \u211d) (x : HermitianMat d \u2102),\n    { toFun := fun \u03c1 => { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef, map_smul' := \u22ef }, map_add' := \u22ef }.toFun (m \u2022 x) =\n      (RingHom.id \u211d) m \u2022\n        { toFun := fun \u03c1 => { toFun := fun \u03c3 => \u03c1.inner \u03c3, map_add' := \u22ef, map_smul' := \u22ef }, map_add' := \u22ef }.toFun x",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "63d294aa820055516f11137788332691aede53d48cbf6955080c36aea464919c"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 170,
        "start_column": 4,
        "end_line": 170,
        "end_column": 9,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "case pos\nd : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 \u03c3 : MState d\n\u03b1 : \u211d\nh\u03b1 : 1 < \u03b1\npf2 : 0 \u2264 \u03b1\npf3 : 0 \u2264 \u03b1 - 1\nh_supp : LinearMap.ker (Matrix.toLin' \u2191\u03c3.toSubtype) \u2264 LinearMap.ker (Matrix.toLin' \u2191\u03c1.toSubtype)\npf1 : 0 \u2264 1 - 0 \u2227 1 - 0 \u2264 1\nm_opt : HermitianMat d \u2102 := sorry\n\u22a2 \u2014log (\u2a05 T, \u27e8MState.exp_val (\u2191T) \u03c3, \u22ef\u27e9) \u2264 D\u0303_ \u03b1(\u03c1\u2016\u03c3) + \u2014log 1 * \u2191\u27e8\u03b1, pf2\u27e9 / \u2191\u27e8\u03b1 - 1, pf3\u27e9",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L170"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-08T09:49:01-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "53fdf88e68e667deb6e5df56ac381238899c6a2da620802627292c903a72789b"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 209,
        "start_column": 4,
        "end_line": 209,
        "end_column": 9,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 \u03c3 : MState d\n\u03b5 \u03b1 : \u211d\nh\u03b1 : 1 < \u03b1\npf1 : 0 \u2264 1 - \u03b5 \u2227 1 - \u03b5 \u2264 1\npf2 : 0 \u2264 \u03b1\npf3 : 0 \u2264 \u03b1 - 1\nh_supp : LinearMap.ker (Matrix.toLin' \u2191\u03c3.toSubtype) \u2264 LinearMap.ker (Matrix.toLin' \u2191\u03c1.toSubtype)\nh\u03b5\u2081 : \u03b5 < 1\nh\u03b5\u2080 : 0 < \u03b5\np : Prob := 1 - \u27e8\u03b5, \u22ef\u27e9\nq : Prob := \u03b2_ \u03b5 (\u03c1\u2016{\u03c3})\np2 : MState (Fin 2) := MState.ofClassical (Distribution.coin p)\nq2 : MState (Fin 2) := MState.ofClassical (Distribution.coin q)\nhp : 0 < p\n\u22a2 0 < \u2a05 T, \u27e8MState.exp_val (\u2191T) \u03c3, \u22ef\u27e9",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L209"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-08T09:49:01-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "8b34e6ec45c2cf16f3d1a2abcfbc65bdb91fb384c9ace3d79809b499b8169db5"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 214,
        "start_column": 4,
        "end_line": 214,
        "end_column": 9,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 \u03c3 : MState d\n\u03b5 \u03b1 : \u211d\nh\u03b1 : 1 < \u03b1\npf1 : 0 \u2264 1 - \u03b5 \u2227 1 - \u03b5 \u2264 1\npf2 : 0 \u2264 \u03b1\npf3 : 0 \u2264 \u03b1 - 1\nh_supp : LinearMap.ker (Matrix.toLin' \u2191\u03c3.toSubtype) \u2264 LinearMap.ker (Matrix.toLin' \u2191\u03c1.toSubtype)\nh\u03b5\u2081 : \u03b5 < 1\nh\u03b5\u2080 : 0 < \u03b5\np : Prob := 1 - \u27e8\u03b5, \u22ef\u27e9\nq : Prob := \u03b2_ \u03b5 (\u03c1\u2016{\u03c3})\np2 : MState (Fin 2) := MState.ofClassical (Distribution.coin p)\nq2 : MState (Fin 2) := MState.ofClassical (Distribution.coin q)\nhp : 0 < p\nhq : 0 < q\nthis : \u2014log q \u2264 D\u0303_ \u03b1(p2\u2016q2) + \u2014log \u27e81 - \u03b5, pf1\u27e9 * \u2191\u27e8\u03b1, pf2\u27e9 / \u2191\u27e8\u03b1 - 1, pf3\u27e9\n\u22a2 D\u0303_ \u03b1(p2\u2016q2) \u2264 D\u0303_ \u03b1(\u03c1\u2016\u03c3)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L214"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-08T09:49:01-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "9e726f7e4d2c40341c0abc09bd328cec69a30796c08b1710f29216ff0f5563b4"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 222,
        "start_column": 4,
        "end_line": 222,
        "end_column": 9,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 \u03c3 : MState d\n\u03b5 \u03b1 : \u211d\nh\u03b1 : 1 < \u03b1\npf1 : 0 \u2264 1 - \u03b5 \u2227 1 - \u03b5 \u2264 1\npf2 : 0 \u2264 \u03b1\npf3 : 0 \u2264 \u03b1 - 1\nh_supp : LinearMap.ker (Matrix.toLin' \u2191\u03c3.toSubtype) \u2264 LinearMap.ker (Matrix.toLin' \u2191\u03c1.toSubtype)\nh\u03b5\u2081 : \u03b5 < 1\nh\u03b5\u2080 : 0 < \u03b5\np : Prob := 1 - \u27e8\u03b5, \u22ef\u27e9\nq : Prob := \u03b2_ \u03b5 (\u03c1\u2016{\u03c3})\np2 : MState (Fin 2) := MState.ofClassical (Distribution.coin p)\nq2 : MState (Fin 2) := MState.ofClassical (Distribution.coin q)\nhp : 0 < p\nhq : 0 < q\n\u22a2 LinearMap.ker (Matrix.toLin' \u2191q2.toSubtype) = \u22a5",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L222"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-08T09:49:01-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "ede331b15f8d132b7a0607357d70250033ea9509dc2e08ddaa95d59f315e019f"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 254,
        "start_column": 6,
        "end_line": 254,
        "end_column": 11,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03c1 \u03c3 : MState d\n\u03b5 \u03b1 : \u211d\nh\u03b1 : 1 < \u03b1\nh_supp : LinearMap.ker (Matrix.toLin' \u2191\u03c3.toSubtype) \u2264 LinearMap.ker (Matrix.toLin' \u2191\u03c1.toSubtype)\nh\u03b5\u2081 : \u03b5 < 1\nh\u03b5\u2080 : 0 < \u03b5\np : Prob := 1 - \u27e8\u03b5, \u22ef\u27e9\nq : Prob := \u03b2_ \u03b5 (\u03c1\u2016{\u03c3})\np2 : MState (Fin 2) := MState.ofClassical (Distribution.coin p)\nq2 : MState (Fin 2) := MState.ofClassical (Distribution.coin q)\nhp : 0 < p\nhq : 0 < q\n\u22a2 ((\u2191p2).conj \u2191(\u2191q2 ^ ((1 - \u03b1) / (2 * \u03b1))) ^ \u03b1).trace = \u2191p ^ \u03b1 * \u2191q ^ (1 - \u03b1) + (1 - \u2191p) ^ \u03b1 * (1 - \u2191q) ^ (1 - \u03b1)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L254"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-08T09:49:01-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "89f477f1b8c74e573c29a09dd46d6f0f5416ff7db365dcc0a1c5040636f6e316"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 287,
        "start_column": 2,
        "end_line": 287,
        "end_column": 7,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "case h\n\u03b9 : Type u_1\ninst\u271d : FreeStateTheory \u03b9\ni : \u03b9\n\u03c1 \u03c3 : MState (H i)\nh\u03c3\u2081 : \u03c3.m.PosDef\nh\u03c3\u2082 : IsFree \u03c3\n\u22a2 \u00ac\ud835\udc03(\u03c1\u2016\u03c3) = \u22a4",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L287"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-08T09:49:01-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "7b178f32acd4e8db35d83546a5782bea6669eb10f11424ef869dd700c104a867"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 345,
        "start_column": 2,
        "end_line": 345,
        "end_column": 7,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "case h\n\u03b9 : Type u_1\ninst\u271d : FreeStateTheory \u03b9\ni : \u03b9\n\u03c1 : MState (H i)\nthis\u271d :\n  \u2200 {u : \u2115 \u2192 \u211d} (h : Subadditive u),\n    BddBelow (Set.range fun n => u n / \u2191n) \u2192 Filter.Tendsto (fun n => u n / \u2191n) Filter.atTop (\ud835\udcdd h.lim)\nu : \u2115+ \u2192 ENNReal := fun n => (\u2191\u2191n)\u207b\u00b9 * \u2a05 \u03c3 \u2208 IsFree, \ud835\udc03(\u03c1\u2297^[n]\u2016\u03c3)\nu' : \u2115 \u2192 \u211d := fun n => if hn : n = 0 then 0 else (u \u27e8n, \u22ef\u27e9).toReal\nhu' : Subadditive u'\nhu'_lim_nonneg : 0 \u2264 hu'.lim\nhu'_bddBelow : BddBelow (Set.range fun n => u' n / \u2191n)\nthis : Filter.Tendsto (fun n => u' n / \u2191n) Filter.atTop (\ud835\udcdd hu'.lim)\n\u22a2 Filter.Tendsto (fun n => (\u2191\u2191n)\u207b\u00b9 * \u2a05 \u03c3 \u2208 IsFree, \ud835\udc03(\u03c1\u2297^[n]\u2016\u03c3)) Filter.atTop (\ud835\udcdd \u2191\u27e8hu'.lim, hu'_lim_nonneg\u27e9)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L345"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-29T11:12:26-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "7b7c6972c2f3e2ce54bde76cb6a29dc612b78f0ef590f14bf6b5897f9a1585e6"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 377,
        "start_column": 8,
        "end_line": 377,
        "end_column": 13,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ninst\u271d : FreeStateTheory \u03b9\ni : \u03b9\nm : \u2115+\n\u03c3f : MState (H i)\n\u03c3\u2098 : MState (H (i\u2297^[m]))\nn : \u2115+\nl : \u2115 := n.natPred / \u2191m\nq : \u2115+ := (n.natPred % \u2191m).succPNat\n\u03c3r : MState (H (i\u2297^[q])) := \u03c3f\u2297^[q]\nh : \u00acn \u2264 m\n\u03c3l : MState (H (i\u2297^[m]\u2297^[\u27e8l, \u22ef\u27e9])) := \u03c3\u2098\u2297^[\u27e8l, \u22ef\u27e9]\n\u22a2 i\u2297^[n] = prod (i\u2297^[m]\u2297^[\u27e8l, \u22ef\u27e9]) (i\u2297^[q])",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L377"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T13:23:49-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "c204ec726d71d63ed2e2c4ada8fc5dede4bda5ef26d9030490e6f0ad366ba686"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 382,
        "start_column": 2,
        "end_line": 382,
        "end_column": 7,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ninst\u271d : FreeStateTheory \u03b9\ni : \u03b9\n\u03c3\u2081 : MState (H i)\n\u03c3\u2098 : (m : \u2115+) \u2192 MState (H (i\u2297^[m]))\nh\u03c3\u2081_free : IsFree \u03c3\u2081\nh\u03c3\u20981 : \u2200 (m : \u2115+), \u03c3\u2098 m \u2208 IsFree\nm n : \u2115+\n\u22a2 Lemma6_\u03c3n m \u03c3\u2081 (\u03c3\u2098 m) n \u2208 IsFree",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L382"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-09T12:46:54-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "f47d0c088fdfb73b2f318db132649251f51184db1ba7f71b4d1f2f310143966e"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 393,
        "start_column": 2,
        "end_line": 479,
        "end_column": 7,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ninst\u271d : FreeStateTheory \u03b9\ni : \u03b9\nm : \u2115+\n\u03c1 \u03c3f : MState (H i)\n\u03c3\u2098 : MState (H (i\u2297^[m]))\nh\u03c3f : \u03c3f.m.PosDef\n\u03b5 : \u211d\nh\u03b5 : 0 < \u03b5\nh\u03b5' : \u03b5 < 1\n\u03c3n : \u211d\u22650\n\u22a2 (\u2191\u2191m)\u207b\u00b9 * \ud835\udc03(\u03c1\u2297^[m]\u2016\u03c3\u2098) = \u2191\u03c3n \u2192\n    \u2203 b, Filter.limsup (fun n => (\u2191\u2191n)\u207b\u00b9 * \u2014log \u03b2_ \u03b5 (\u03c1\u2297^[n]\u2016{Lemma6_\u03c3n m \u03c3f \u03c3\u2098 n})) Filter.atTop = \u2191b \u2227 b \u2264 \u03c3n",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L393"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-08T16:55:27-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "172e4998643fa412e7a6de96ea02193f83af6d6dd4eb1d3288a412a56db2e0fc"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 490,
        "start_column": 2,
        "end_line": 490,
        "end_column": 7,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ninst\u271d : FreeStateTheory \u03b9\ni : \u03b9\n\u03c1 : MState (H i)\n\u03b5 : \u211d\nh\u03b5 : 0 < \u03b5 \u2227 \u03b5 < 1\n\u22a2 \u2203 d,\n    Filter.Tendsto (fun n => \u2014log \u03b2_ \u03b5 (\u03c1\u2297^[n]\u2016IsFree) / \u2191\u2191n) Filter.atTop (\ud835\udcdd \u2191d) \u2227\n      Filter.Tendsto (fun n => (\u2191\u2191n)\u207b\u00b9 * \u2a05 \u03c3 \u2208 IsFree, \ud835\udc03(\u03c1\u2297^[n]\u2016\u03c3)) Filter.atTop (\ud835\udcdd \u2191d)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L490"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-01-28T19:42:08-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "cb6edf2ae5c248a30e172a6c849c18a606f86680d06eddd01010181985e7d714"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 554,
        "start_column": 2,
        "end_line": 554,
        "end_column": 7,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "n : Type u_5\ninst\u271d\u00b2 : Fintype n\ninst\u271d\u00b9 : DecidableEq n\n\ud835\udd5c : Type u_6\ninst\u271d : RCLike \ud835\udd5c\nA B : HermitianMat n \ud835\udd5c\n\u22a2 {A\u2264\u209aB} \u2264 1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L554"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-04-17T15:55:17-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "871541e69b40a06d23d04cea987f41cbaa46bf6416eeb1c6c055dc57235d5ab8"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 723,
        "start_column": 2,
        "end_line": 723,
        "end_column": 7,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ninst\u271d : FreeStateTheory \u03b9\ni : \u03b9\n\u03c1 : MState (H i)\n\u03b5 : \u211d\nh\u03b5 : 0 < \u03b5 \u2227 \u03b5 < 1\n\u03c3 : (n : \u2115+) \u2192 \u2191IsFree\n\u22a2 SteinsLemma.R2 \u03c1 \u03c3 \u2265 SteinsLemma.R1 \u03c1 \u03b5 \u2192\n    \u2200 (\u03b5' : \u211d) (h\u03b5' : 0 < \u03b5' \u2227 \u03b5' < \u03b5),\n      \u2203 \u03c3', SteinsLemma.R2 \u03c1 \u03c3' - SteinsLemma.R1 \u03c1 \u03b5 \u2264 \u2191\u27e81 - \u03b5', \u22ef\u27e9 * (SteinsLemma.R2 \u03c1 \u03c3 - SteinsLemma.R1 \u03c1 \u03b5)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L723"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-01-29T16:09:10-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "f54f16779f309382d3c5394f79243eafd7795076289b3e42771266b29aa5c34c"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 827,
        "start_column": 8,
        "end_line": 827,
        "end_column": 13,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ninst\u271d : FreeStateTheory \u03b9\ni : \u03b9\n\u03c1 : MState (H i)\n\u03b5 : \u211d\nh\u03b5 : 0 < \u03b5 \u2227 \u03b5 < 1\npf1 : \u2200 (n : \u2115), \u00acn = 0 \u2192 0 < n\npf2 : Subadditive fun n => if h : n = 0 then 0 else (\u2191n)\u207b\u00b9 * \u2191(RelativeEntResource (\u03c1\u2297^[\u27e8n, \u22ef\u27e9]))\npf3 : 0 \u2264 pf2.lim\n\u03c3\u2098 : (m : \u2115+) \u2192 MState (H (i\u2297^[m]))\nh\u03c3\u20981 : \u2200 (m : \u2115+), \u03c3\u2098 m \u2208 IsFree\nh\u03c3\u20982 : \u2200 (m : \u2115+), IsMinOn (fun \u03c3 => \ud835\udc03(\u03c1\u2297^[m]\u2016\u03c3)) IsFree (\u03c3\u2098 m)\n\u03c3\u2081 : MState (H i)\nh\u03c3\u2081_pos : \u03c3\u2081.m.PosDef\nh\u03c3\u2081_free : IsFree \u03c3\u2081\nh : \u2200 (m : \u2115+), Filter.limsup (fun n => (\u2191\u2191n)\u207b\u00b9 * \u2014log \u03b2_ \u03b5 (\u03c1\u2297^[n]\u2016IsFree)) Filter.atTop \u2264 (\u2191\u2191m)\u207b\u00b9 * \u2a05 x, \ud835\udc03(\u03c1\u2297^[m]\u2016\u2191x)\nv_lem5 : \u211d\u22650\nhv_lem5 : Filter.Tendsto (fun n => (\u2191\u2191n)\u207b\u00b9 * \u2a05 \u03c3 \u2208 IsFree, \ud835\udc03(\u03c1\u2297^[n]\u2016\u03c3)) Filter.atTop (\ud835\udcdd \u2191v_lem5)\n\u22a2 \u2191\u27e8\u22ef.lim, \u22ef\u27e9 = \u2191v_lem5",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L827"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-09T12:46:54-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "135b85faa7144a60ad457c24901752c5999cf774157db9746c46c2b0b612e4b4"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 855,
        "start_column": 6,
        "end_line": 855,
        "end_column": 11,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ninst\u271d : FreeStateTheory \u03b9\ni : \u03b9\n\u03c1 : MState (H i)\n\u03b5 : \u211d\nh\u03b5 : 0 < \u03b5 \u2227 \u03b5 < 1\npf1 : \u2200 (n : \u2115), \u00acn = 0 \u2192 0 < n\npf2 : Subadditive fun n => if h : n = 0 then 0 else (\u2191n)\u207b\u00b9 * \u2191(RelativeEntResource (\u03c1\u2297^[\u27e8n, \u22ef\u27e9]))\npf3 : 0 \u2264 pf2.lim\nR\u2081\u03b5 : ENNReal := Filter.liminf (fun n => \u2014log (\u2a06 \u03c3 \u2208 IsFree, \u03b2_ \u03b5 (\u03c1\u2297^[n]\u2016{\u03c3})) / \u2191\u2191n) Filter.atTop\n\u03b5' : \u211d := \u03b5 / 2\nh\u03b5' : 0 < \u03b5' \u2227 \u03b5' < \u03b5\nlem7 :\n  \u2200 (\u03c3 : (n : \u2115+) \u2192 \u2191IsFree),\n    SteinsLemma.R2 \u03c1 \u03c3 \u2265 SteinsLemma.R1 \u03c1 \u03b5 \u2192\n      \u2203 \u03c3', SteinsLemma.R2 \u03c1 \u03c3' - SteinsLemma.R1 \u03c1 \u03b5 \u2264 \u2191\u27e81 - \u03b5', \u22ef\u27e9 * (SteinsLemma.R2 \u03c1 \u03c3 - SteinsLemma.R1 \u03c1 \u03b5)\n\u03c3\u2081 : (n : \u2115+) \u2192 \u2191IsFree\n\u03c3\u2096 : \u2115 \u2192 (n : \u2115+) \u2192 \u2191IsFree := fun k => (SteinsLemma.Lemma7_improver \u03c1 h\u03b5 h\u03b5')^[k] \u03c3\u2081\n\u22a2 False",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L855"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-10T22:49:32-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "025dcb0692e894ffaa940a28712036f4c962a19d35337d9bd4ddde477e77cb0c"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 857,
        "start_column": 4,
        "end_line": 857,
        "end_column": 9,
        "file": "QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean"
      },
      "debug_info": {
        "goal": "case refine_2\n\u03b9 : Type u_1\ninst\u271d : FreeStateTheory \u03b9\ni : \u03b9\n\u03c1 : MState (H i)\n\u03b5 : \u211d\nh\u03b5 : 0 < \u03b5 \u2227 \u03b5 < 1\npf1 : \u2200 (n : \u2115), \u00acn = 0 \u2192 0 < n\npf2 : Subadditive fun n => if h : n = 0 then 0 else (\u2191n)\u207b\u00b9 * \u2191(RelativeEntResource (\u03c1\u2297^[\u27e8n, \u22ef\u27e9]))\npf3 : 0 \u2264 pf2.lim\nR\u2081\u03b5 : ENNReal := Filter.liminf (fun n => \u2014log (\u2a06 \u03c3 \u2208 IsFree, \u03b2_ \u03b5 (\u03c1\u2297^[n]\u2016{\u03c3})) / \u2191\u2191n) Filter.atTop\n\u03b5' : \u211d := \u03b5 / 2\nh\u03b5' : 0 < \u03b5' \u2227 \u03b5' < \u03b5\nlem7 :\n  \u2200 (\u03c3 : (n : \u2115+) \u2192 \u2191IsFree),\n    SteinsLemma.R2 \u03c1 \u03c3 \u2265 SteinsLemma.R1 \u03c1 \u03b5 \u2192\n      \u2203 \u03c3', SteinsLemma.R2 \u03c1 \u03c3' - SteinsLemma.R1 \u03c1 \u03b5 \u2264 \u2191\u27e81 - \u03b5', \u22ef\u27e9 * (SteinsLemma.R2 \u03c1 \u03c3 - SteinsLemma.R1 \u03c1 \u03b5)\n\u03c3\u2081 : (n : \u2115+) \u2192 \u2191IsFree\n\u03c3\u2096 : \u2115 \u2192 (n : \u2115+) \u2192 \u2191IsFree := fun k => (SteinsLemma.Lemma7_improver \u03c1 h\u03b5 h\u03b5')^[k] \u03c3\u2081\nh\u03c3\u2096_gap : False\n\u22a2 \u2191\u27e8\u22ef.lim, \u22ef\u27e9 \u2264 Filter.liminf (fun n => (\u2191\u2191n)\u207b\u00b9 * \u2014log (\u2a06 \u03c3 \u2208 IsFree, \u03b2_ \u03b5 (\u03c1\u2297^[n]\u2016{\u03c3}))) Filter.atTop",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/SteinsLemma.lean#L857"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-08T16:55:27-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "34fa3e534f0eea20189e484903dbd93855b6dea52ac44ca690ee689141b90d6b"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 150,
        "start_column": 2,
        "end_line": 150,
        "end_column": 7,
        "file": "QuantumInfo/Finite/ResourceTheory/FreeState.lean"
      },
      "debug_info": {
        "goal": "case succ.succ\n\u03b9 : Type u_1\ninst\u271d : FreeStateTheory \u03b9\ni : \u03b9\n\u03c1 : MState (H i)\nm n : \u2115\n\u22a2 RelativeEntResource (\u03c1\u2297^[\u27e8m + 1 + (n + 1), \u22ef\u27e9]) * \u2191((m + 1) * (n + 1)) \u2264\n    (RelativeEntResource (\u03c1\u2297^[\u27e8m + 1, \u22ef\u27e9]) * \u2191(n + 1) + RelativeEntResource (\u03c1\u2297^[\u27e8n + 1, \u22ef\u27e9]) * \u2191(m + 1)) *\n      \u2191(m + 1 + (n + 1))",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/FreeState.lean#L150"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-13T17:13:17-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "392e27de3bbc72d58ce537cbf8efc0b2a7829d30839d9aad1ade6fd480236b3f"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 153,
        "start_column": 47,
        "end_line": 153,
        "end_column": 52,
        "file": "QuantumInfo/Finite/ResourceTheory/FreeState.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ninst\u271d : FreeStateTheory \u03b9\ni : \u03b9\n\u03c1 : MState (H i)\n\u22a2 0 \u2264 \u22ef.lim",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/FreeState.lean#L153"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-08T16:55:27-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "205906258eda6162b2c14cb5b60c4f4e102c6b7918ad6f283733e2fcf50953c5"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 82,
        "start_column": 8,
        "end_line": 82,
        "end_column": 13,
        "file": "QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean"
      },
      "debug_info": {
        "goal": "case h.right.h.a.a.e_a\n\u03b9 : Type u_1\ninst\u271d : ResourcePretheory \u03b9\nO : (i j : \u03b9) \u2192 Set (CPTPMap (H i) (H j) \u2102)\nh_convex : \u2200 {i j : \u03b9}, Convex \u211d (CPTPMap.choi '' O i j)\ni : \u03b9\nx\u271d y\u271d : HermitianMat (H i) \u2102\na b : \u211d\nha : 0 \u2264 a\nhb : 0 \u2264 b\nhab : a + b = 1\nj : \u03b9\n\u03c3 : MState (H j)\nfx : CPTPMap (H j) (H i) \u2102\nhfx1 : O j i fx\nfy : CPTPMap (H j) (H i) \u2102\nhfy1 : O j i fy\nhx1 : fx \u03c3 \u2208 fun \u03c1 => \u2200 {j : \u03b9} (\u03c3 : MState (H j)), \u2203 f, O j i f \u2227 f \u03c3 = \u03c1\nhx2 : \u2191(fx \u03c3) = x\u271d\nhy1 : fy \u03c3 \u2208 fun \u03c1 => \u2200 {j : \u03b9} (\u03c3 : MState (H j)), \u2203 f, O j i f \u2227 f \u03c3 = \u03c1\nhy2 : \u2191(fy \u03c3) = y\u271d\ni\u271d j\u271d : H i\n\u22a2 \u2211 x : H j, \u2211 x_1 : H j, \u2191\u2191\u03c3 x x_1 * (\u2191a * fx.choi (i\u271d, x) (j\u271d, x_1)) =\n    \u2191a * ((DFunLike.coe \u2218 CPTPMap.toPTPMap \u2102) fx \u03c3).m i\u271d j\u271d",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-13T17:13:17-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "da5d5045c378cc8db828aac326edd9c80c7d3b25dc7a655da40c05f3501cefca"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 83,
        "start_column": 8,
        "end_line": 83,
        "end_column": 13,
        "file": "QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean"
      },
      "debug_info": {
        "goal": "case h.right.h.a.a.e_a\n\u03b9 : Type u_1\ninst\u271d : ResourcePretheory \u03b9\nO : (i j : \u03b9) \u2192 Set (CPTPMap (H i) (H j) \u2102)\nh_convex : \u2200 {i j : \u03b9}, Convex \u211d (CPTPMap.choi '' O i j)\ni : \u03b9\nx\u271d y\u271d : HermitianMat (H i) \u2102\na b : \u211d\nha : 0 \u2264 a\nhb : 0 \u2264 b\nhab : a + b = 1\nj : \u03b9\n\u03c3 : MState (H j)\nfx : CPTPMap (H j) (H i) \u2102\nhfx1 : O j i fx\nfy : CPTPMap (H j) (H i) \u2102\nhfy1 : O j i fy\nhx1 : fx \u03c3 \u2208 fun \u03c1 => \u2200 {j : \u03b9} (\u03c3 : MState (H j)), \u2203 f, O j i f \u2227 f \u03c3 = \u03c1\nhx2 : \u2191(fx \u03c3) = x\u271d\nhy1 : fy \u03c3 \u2208 fun \u03c1 => \u2200 {j : \u03b9} (\u03c3 : MState (H j)), \u2203 f, O j i f \u2227 f \u03c3 = \u03c1\nhy2 : \u2191(fy \u03c3) = y\u271d\ni\u271d j\u271d : H i\n\u22a2 \u2211 x : H j, \u2211 x_1 : H j, \u2191\u2191\u03c3 x x_1 * (\u2191b * fy.choi (i\u271d, x) (j\u271d, x_1)) =\n    \u2191b * ((DFunLike.coe \u2218 CPTPMap.toPTPMap \u2102) fy \u03c3).m i\u271d j\u271d",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean#L83"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-13T17:13:17-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "466fda7786da1e44724846f115ef99f72707f73d26fabceb7969abae50d7d02e"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 110,
        "start_column": 4,
        "end_line": 110,
        "end_column": 9,
        "file": "QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean"
      },
      "debug_info": {
        "goal": "case intro.intro\n\u03b9 : Type u_1\ninst\u271d : ResourcePretheory \u03b9\nO : (i j : \u03b9) \u2192 Set (CPTPMap (H i) (H j) \u2102)\nh_id : \u2200 (i : \u03b9), CPTPMap.id \u2208 O i i\nh_comp : \u2200 {i j k : \u03b9} (Y : \u2191(O j k)) (X : \u2191(O i j)), \u2191Y\u2218\u2098\u2191X \u2208 O i k\nh_closed : \u2200 {i j : \u03b9}, IsClosed (O i j)\nh_convex : \u2200 {i j : \u03b9}, Convex \u211d (CPTPMap.choi '' O i j)\nh_prod :\n  \u2200 {i j k l : \u03b9} {f : CPTPMap (H i) (H k) \u2102} {g : CPTPMap (H j) (H l) \u2102},\n    f \u2208 O i k \u2192 g \u2208 O j l \u2192 (f\u2297\u2096\u1d63g) \u2208 O (prod i j) (prod k l)\nh_fullRank : {i : \u03b9} \u2192 sorry\nh_appendFree : {i j k : \u03b9} \u2192 sorry\ni j : \u03b9\n\u03c1 : MState (H i)\n\u03c3 : MState (H j)\nh\u03c1 : \u2200 {j : \u03b9} (\u03c3 : MState (H j)), \u2203 f, O j i f \u2227 f \u03c3 = \u03c1\nh\u03c3 : \u2200 {j_1 : \u03b9} (\u03c3_1 : MState (H j_1)), \u2203 f, O j_1 j f \u2227 f \u03c3_1 = \u03c3\nk : \u03b9\n\u03c1\u2080 : MState (H k)\nf : CPTPMap (H i) (H i) \u2102\nhf1 : O i i f \u2227 f \u03c1 = \u03c1\ng : CPTPMap (H j) (H j) \u2102\nhg : O j j g \u2227 g \u03c3 = \u03c3\n\u22a2 \u2203 f, O k (prod i j) f \u2227 f \u03c1\u2080 = \u03c1\u2297\u1d63\u03c3",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean#L110"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-13T17:13:17-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "faae5099443b32a088465cf81e51978a350e505bf617dc3885fe1e31fecad0cb"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 104,
        "start_column": 17,
        "end_line": 104,
        "end_column": 22,
        "file": "QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ninst\u271d : ResourcePretheory \u03b9\nO : (i j : \u03b9) \u2192 Set (CPTPMap (H i) (H j) \u2102)\nh_id : \u2200 (i : \u03b9), CPTPMap.id \u2208 O i i\nh_comp : \u2200 {i j k : \u03b9} (Y : \u2191(O j k)) (X : \u2191(O i j)), \u2191Y\u2218\u2098\u2191X \u2208 O i k\nh_closed : \u2200 {i j : \u03b9}, IsClosed (O i j)\nh_convex : \u2200 {i j : \u03b9}, Convex \u211d (CPTPMap.choi '' O i j)\nh_prod :\n  \u2200 {i j k l : \u03b9} {f : CPTPMap (H i) (H k) \u2102} {g : CPTPMap (H j) (H l) \u2102},\n    f \u2208 O i k \u2192 g \u2208 O j l \u2192 (f\u2297\u2096\u1d63g) \u2208 O (prod i j) (prod k l)\nh_fullRank : {i : \u03b9} \u2192 sorry\nh_appendFree : {i j k : \u03b9} \u2192 sorry\ni\u271d : \u03b9\n\u22a2 IsClosed fun {i} \u03c1 => \u2200 {j : \u03b9} (\u03c3 : MState (H j)), \u2203 f, O j i f \u2227 f \u03c3 = \u03c1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean#L104"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-13T17:13:17-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "0a559e9db702a60eb5797ac6a8b59879d7dc6f35c8c58720078c6b835f4abc80"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 111,
        "start_column": 19,
        "end_line": 111,
        "end_column": 24,
        "file": "QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ninst\u271d : ResourcePretheory \u03b9\nO : (i j : \u03b9) \u2192 Set (CPTPMap (H i) (H j) \u2102)\nh_id : \u2200 (i : \u03b9), CPTPMap.id \u2208 O i i\nh_comp : \u2200 {i j k : \u03b9} (Y : \u2191(O j k)) (X : \u2191(O i j)), \u2191Y\u2218\u2098\u2191X \u2208 O i k\nh_closed : \u2200 {i j : \u03b9}, IsClosed (O i j)\nh_convex : \u2200 {i j : \u03b9}, Convex \u211d (CPTPMap.choi '' O i j)\nh_prod :\n  \u2200 {i j k l : \u03b9} {f : CPTPMap (H i) (H k) \u2102} {g : CPTPMap (H j) (H l) \u2102},\n    f \u2208 O i k \u2192 g \u2208 O j l \u2192 (f\u2297\u2096\u1d63g) \u2208 O (prod i j) (prod k l)\nh_fullRank : {i : \u03b9} \u2192 sorry\nh_appendFree : {i j k : \u03b9} \u2192 sorry\n\u22a2 \u2200 (i : \u03b9), \u2203 \u03c1, \u03c1.m.PosDef \u2227 (fun {i} \u03c1 => \u2200 {j : \u03b9} (\u03c3 : MState (H j)), \u2203 f, O j i f \u2227 f \u03c3 = \u03c1) \u03c1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean#L111"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-13T17:13:17-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "8e4478558f7981a6de854d8190bed8b170067a90f81531bb38073ca9392c99ad"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 147,
        "start_column": 6,
        "end_line": 147,
        "end_column": 11,
        "file": "QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ni : { \u03b9 // Finite \u03b9 \u2227 Nonempty \u03b9 }\n\u22a2 Convex \u211d (MState.M '' fun {i} => Set.univ)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean#L147"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "854c63fbb41541cd5640882b515b5bd18c118436da294c2047c19b5bdb3520f3"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 160,
        "start_column": 8,
        "end_line": 160,
        "end_column": 13,
        "file": "QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\ni : { \u03b9 // Finite \u03b9 \u2227 Nonempty \u03b9 }\nthis\u271d\u00b9 : Finite \u2191i\nthis\u271d : Nonempty \u2191i\nx\u271d : Fintype \u2191i := Fintype.ofFinite \u2191i\nthis : (\u2191\u2191MState.uniform).PosDef\n\u22a2 MState.uniform.m.PosDef",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/ResourceTheory/ResourceTheory.lean#L160"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-02-07T12:13:00-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "2695a688cabbc67746bc6144fc0b928e10a6df0f66351109deedcdfe85cbb8ff"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 30,
        "start_column": 2,
        "end_line": 30,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Distance/Fidelity.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d : Fintype d\n\u03c1 \u03c3 : MState d\n\u22a2 \u03c1.fidelity \u03c3 \u2264 1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Distance/Fidelity.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-18T12:12:56-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "84ba0153130c385754281e1c837f68ebbac445afecc7880d2edb4e27a01a8dc0"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 38,
        "start_column": 2,
        "end_line": 38,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Distance/Fidelity.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d : Fintype d\n\u03c1 : MState d\n\u22a2 \u03c1.fidelity \u03c1 = 1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Distance/Fidelity.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-18T12:12:56-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "85fb7217490b43501baee3b85d58a8a1b6aa95b6eb8054f5f6a9fca6b4b59af2"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 42,
        "start_column": 3,
        "end_line": 42,
        "end_column": 8,
        "file": "QuantumInfo/Finite/Distance/Fidelity.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d : Fintype d\n\u03c1 \u03c3 : MState d\n\u22a2 \u03c1.fidelity \u03c3 = 1 \u2192 \u03c1 = \u03c3",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Distance/Fidelity.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-21T14:58:45-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "46189369ab0e37295f3a161a900b6a631acea2ee4699201288f35c051859fd08"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 48,
        "start_column": 2,
        "end_line": 48,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Distance/Fidelity.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\ninst\u271d : Fintype d\n\u03c1 \u03c3 : MState d\n\u22a2 \u03c1.fidelity \u03c3 = \u03c3.fidelity \u03c1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Distance/Fidelity.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-18T12:12:56-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "a84eb05a96cf2c58fccd8c8b77083980266e1d959d113df2ffcd5c6c083172a1"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 52,
        "start_column": 2,
        "end_line": 52,
        "end_column": 7,
        "file": "QuantumInfo/Finite/Distance/Fidelity.lean"
      },
      "debug_info": {
        "goal": "d : Type u_1\nd\u2082 : Type u_2\ninst\u271d\u00b9 : Fintype d\ninst\u271d : Fintype d\u2082\n\u03c1 \u03c3 : MState d\n\u039b : CPTPMap d d\u2082 \u2102\n\u22a2 (\u039b \u03c1).fidelity (\u039b \u03c3) \u2265 \u03c1.fidelity \u03c3",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/Distance/Fidelity.lean#L52"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-04-18T12:12:56-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "ce565446b6de2f02e9d30e04b072758652575e1bfa3bb64c0355f9c79fdba886"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 89,
        "start_column": 2,
        "end_line": 89,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Unbundled.lean"
      },
      "debug_info": {
        "goal": "A : Type u_3\nB : Type u_4\nC : Type u_5\ninst\u271d\u2076 : Fintype A\ninst\u271d\u2075 : DecidableEq A\ninst\u271d\u2074 : Fintype B\ninst\u271d\u00b3 : Fintype C\nD : Type u_1\nR : Type u_2\ninst\u271d\u00b2 : CommSemiring R\ninst\u271d\u00b9 : DecidableEq C\ninst\u271d : Fintype D\nM\u2081 : MatrixMap A B R\nM\u2082 : MatrixMap C D R\nh\u2081 : M\u2081.IsTracePreserving\nh\u2082 : M\u2082.IsTracePreserving\n\u22a2 (M\u2081 \u2297\u2096\u2098 M\u2082).IsTracePreserving",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/Unbundled.lean#L89"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "b6b541986c984babcae5c442272f6fb4b27fafc811e14cc7426b1e8634f4db5c"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 165,
        "start_column": 2,
        "end_line": 165,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Unbundled.lean"
      },
      "debug_info": {
        "goal": "A : Type u_1\nB : Type u_2\nR : Type u_4\ninst\u271d\u00b2 : RCLike R\ninst\u271d\u00b9 : Fintype A\ninst\u271d : Fintype B\nM : MatrixMap A B R\nhM : M.IsPositive\n\u22a2 M.IsHermitianPreserving",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/Unbundled.lean#L165"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "65a7e42cae97a25d4250cc0db370186c51f972f212644a1d088e3508f5ec7258"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 197,
        "start_column": 2,
        "end_line": 197,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Unbundled.lean"
      },
      "debug_info": {
        "goal": "A : Type u_1\nB : Type u_2\nR : Type u_4\ninst\u271d\u2075 : RCLike R\ninst\u271d\u2074 : Fintype A\ninst\u271d\u00b3 : Fintype B\ninst\u271d\u00b2 : DecidableEq A\nM : MatrixMap A B R\nh : M.IsCompletelyPositive\nT : Type u_5\ninst\u271d\u00b9 : Fintype T\ninst\u271d : DecidableEq T\n\u22a2 (M \u2297\u2096\u2098 LinearMap.id).IsPositive",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/Unbundled.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "571f6ac7cec65949ad0aedd1bfba35ea3e874e760128dae83479f9dc5d265025"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 206,
        "start_column": 2,
        "end_line": 206,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Unbundled.lean"
      },
      "debug_info": {
        "goal": "A : Type u_1\nB : Type u_2\nR : Type u_4\ninst\u271d\u2074 : RCLike R\ninst\u271d\u00b3 : Fintype A\ninst\u271d\u00b2 : Fintype B\ninst\u271d\u00b9 inst\u271d : DecidableEq A\nM : MatrixMap A B R\nhM : M.IsCompletelyPositive\nx : Matrix A A R\nhx : x.PosSemidef\nx' : Matrix (A \u00d7 Fin 1) (A \u00d7 Fin 1) R := Matrix.kroneckerMap (fun x1 x2 => x1 * x2) x 1\neqB : B \u00d7 Fin 1 \u2243 B := (Equiv.prodCongrRight fun x => finOneEquiv).trans (Equiv.prodPUnit B)\n\u22a2 (M x).PosSemidef",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/Unbundled.lean#L206"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "bd7a9009b2bd9cde236cd76e21dd5e4542fdddfb4a5083358d37fa212867f7c6"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 248,
        "start_column": 2,
        "end_line": 248,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Unbundled.lean"
      },
      "debug_info": {
        "goal": "d : Type u_5\nA : Type u_1\nR : Type u_4\ninst\u271d\u2074 : RCLike R\ninst\u271d\u00b3 : Fintype A\ninst\u271d\u00b2 : DecidableEq A\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\nC : Matrix d d R\nh : C.PosSemidef\nh\u2081 :\n  \u2200 (x y : Matrix A A R),\n    (fun M => Matrix.kroneckerMap (fun x1 x2 => x1 * x2) M C) (x + y) =\n      (fun M => Matrix.kroneckerMap (fun x1 x2 => x1 * x2) M C) x +\n        (fun M => Matrix.kroneckerMap (fun x1 x2 => x1 * x2) M C) y\nh\u2082 :\n  \u2200 (m : R) (x : Matrix A A R),\n    { toFun := fun M => Matrix.kroneckerMap (fun x1 x2 => x1 * x2) M C, map_add' := h\u2081 }.toFun (m \u2022 x) =\n      (RingHom.id R) m \u2022 { toFun := fun M => Matrix.kroneckerMap (fun x1 x2 => x1 * x2) M C, map_add' := h\u2081 }.toFun x\n\u22a2 IsCompletelyPositive\n    { toFun := fun M => Matrix.kroneckerMap (fun x1 x2 => x1 * x2) M C, map_add' := h\u2081, map_smul' := h\u2082 }",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/Unbundled.lean#L248"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "84f4ee99120599a5628fcce751164b737e78f780dd7cee0aaf32b533c6ced008"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 259,
        "start_column": 4,
        "end_line": 259,
        "end_column": 9,
        "file": "QuantumInfo/Finite/CPTPMap/Unbundled.lean"
      },
      "debug_info": {
        "goal": "case pos.mpr\nA : Type u_1\nB : Type u_2\ninst\u271d\u00b3 : Fintype A\ninst\u271d\u00b2 : Fintype B\ninst\u271d\u00b9 inst\u271d : DecidableEq A\nM : MatrixMap A B \u2102\nhA : Nonempty A\n\u22a2 M.choi_matrix.PosSemidef \u2192 M.IsCompletelyPositive",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/Unbundled.lean#L259"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-04-15T04:56:48-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "9a6f72f654539e861ed5755847f83af273ca6604c9cd84d28edd2f7155ea4d68"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 260,
        "start_column": 2,
        "end_line": 260,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Unbundled.lean"
      },
      "debug_info": {
        "goal": "case neg\nA : Type u_1\nB : Type u_2\ninst\u271d\u00b3 : Fintype A\ninst\u271d\u00b2 : Fintype B\ninst\u271d\u00b9 inst\u271d : DecidableEq A\nM : MatrixMap A B \u2102\nhA : \u00acNonempty A\n\u22a2 M.IsCompletelyPositive \u2194 M.choi_matrix.PosSemidef",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/Unbundled.lean#L260"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "0a33d519ad72c5df8829fd2dfeee990199eb2bdc2a820be699aba4621c05be00"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 266,
        "start_column": 2,
        "end_line": 266,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Unbundled.lean"
      },
      "debug_info": {
        "goal": "A : Type u_1\nB : Type u_2\nR : Type u_4\ninst\u271d\u2074 : RCLike R\ninst\u271d\u00b3 : Fintype A\ninst\u271d\u00b2 : Fintype B\ninst\u271d\u00b9 : DecidableEq A\n\u03ba : Type u_5\ninst\u271d : Fintype \u03ba\nM : \u03ba \u2192 Matrix B A R\n\u22a2 (of_kraus M M).IsCompletelyPositive",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/Unbundled.lean#L266"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-01-31T11:15:47-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "288d85de6928a904534de665c4c17fe8ea76425348610a251d2b22232907fa14"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 270,
        "start_column": 2,
        "end_line": 270,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Unbundled.lean"
      },
      "debug_info": {
        "goal": "d : Type ?u.108824\nA : Type u_1\nB : Type u_2\nC : Type u_3\nR : Type u_4\ninst\u271d\u2076 : RCLike R\ninst\u271d\u2075 : Fintype A\ninst\u271d\u2074 : Fintype B\ninst\u271d\u00b3 : Fintype C\ninst\u271d\u00b2 : DecidableEq A\ninst\u271d\u00b9 : Fintype d\ninst\u271d : DecidableEq d\n\u03a6 : MatrixMap A B R\nhCP : \u03a6.IsCompletelyPositive\n\u22a2 \u2203 r M, \u03a6 = of_kraus M M",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/Unbundled.lean#L270"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-01-31T11:15:47-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "57b4973bf3dd68091f745c9f440b193d9c22ab5def621bee298819a9ba30cd76"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 289,
        "start_column": 2,
        "end_line": 289,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Unbundled.lean"
      },
      "debug_info": {
        "goal": "A : Type u_1\nB : Type u_2\nC : Type u_3\nR : Type u_4\ninst\u271d\u2076 : RCLike R\ninst\u271d\u2075 : Fintype A\ninst\u271d\u2074 : Fintype B\ninst\u271d\u00b3 : Fintype C\ninst\u271d\u00b2 : DecidableEq A\nD : Type u_5\ninst\u271d\u00b9 : DecidableEq C\ninst\u271d : Fintype D\nM\u2081 : MatrixMap A B R\nM\u2082 : MatrixMap C D R\nh\u2081 : M\u2081.IsCompletelyPositive\nh\u2082 : M\u2082.IsCompletelyPositive\n\u22a2 (M\u2081 \u2297\u2096\u2098 M\u2082).IsCompletelyPositive",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/Unbundled.lean#L289"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "2d1f6769f61bcc07b9a718fc8ec05ae5d7a05697c47fa8e09e4cb868eaee350e"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 300,
        "start_column": 2,
        "end_line": 300,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Unbundled.lean"
      },
      "debug_info": {
        "goal": "R : Type u_4\ninst\u271d\u2075 : RCLike R\n\u03b9 : Type u\ninst\u271d\u2074 : DecidableEq \u03b9\nf\u03b9 : Fintype \u03b9\ndI : \u03b9 \u2192 Type v\ninst\u271d\u00b3 : (i : \u03b9) \u2192 Fintype (dI i)\ninst\u271d\u00b2 : (i : \u03b9) \u2192 DecidableEq (dI i)\ndO : \u03b9 \u2192 Type w\ninst\u271d\u00b9 : (i : \u03b9) \u2192 Fintype (dO i)\ninst\u271d : (i : \u03b9) \u2192 DecidableEq (dO i)\n\u039bi : (i : \u03b9) \u2192 MatrixMap (dI i) (dO i) R\nh\u2081 : \u2200 (i : \u03b9), (\u039bi i).IsCompletelyPositive\n\u22a2 (MatrixMap.piKron \u039bi).IsCompletelyPositive",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/Unbundled.lean#L300"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T17:34:48-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "b430daff78fbf44f3460d93cd595f01417f7a1198b5d75d69b85c3641725df6f"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Dual.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ninst\u271d\u2074 : Fintype dIn\ninst\u271d\u00b3 : Fintype dOut\ninst\u271d\u00b2 : DecidableEq dIn\ninst\u271d\u00b9 : DecidableEq dOut\nR : Type u_3\ninst\u271d : CommRing R\nM : MatrixMap dIn dOut R\nA : Matrix dIn dIn R\nB : Matrix dOut dOut R\n\u22a2 \u2211 x : dOut, \u2211 j : dOut, M A x j * B j x =\n    \u2211 x : dIn,\n      \u2211 j : dIn, A x j * (Matrix.stdBasis R dIn dIn).toDualEquiv.symm ((Matrix.stdBasis R dOut dOut).toDual B \u2218\u2097 M) j x",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/Dual.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-14T17:26:35-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "40b69f18a19a779c92d9d63936deb9d06453d6310931634e05b503be5e38b3e3"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 44,
        "start_column": 2,
        "end_line": 44,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Dual.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ninst\u271d\u2074 : Fintype dIn\ninst\u271d\u00b3 : Fintype dOut\ninst\u271d\u00b2 : DecidableEq dIn\ninst\u271d\u00b9 : DecidableEq dOut\n\ud835\udd5c : Type u_4\ninst\u271d : RCLike \ud835\udd5c\nM : MatrixMap dIn dOut \ud835\udd5c\nh : M.IsHermitianPreserving\n\u22a2 M.dual.IsHermitianPreserving",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/Dual.lean#L44"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "0c32172e586ea037f550993172706d684846ae427a00e9ae7e8ebbb4fccbfddd"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 54,
        "start_column": 2,
        "end_line": 54,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Dual.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ninst\u271d\u2074 : Fintype dIn\ninst\u271d\u00b3 : Fintype dOut\ninst\u271d\u00b2 : DecidableEq dIn\ninst\u271d\u00b9 : DecidableEq dOut\n\ud835\udd5c : Type u_4\ninst\u271d : RCLike \ud835\udd5c\nM : MatrixMap dIn dOut \ud835\udd5c\nh : M.IsTracePreserving\n\u22a2 M.dual.Unital",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/Dual.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "201a1fe51f958d61da0911c2dc70d9c8fe4bdc2cbdd7dc1d6faf1c8a8e86f908"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 61,
        "start_column": 2,
        "end_line": 61,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/Dual.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ninst\u271d\u2074 : Fintype dIn\ninst\u271d\u00b3 : Fintype dOut\ninst\u271d\u00b2 : DecidableEq dIn\ninst\u271d\u00b9 : DecidableEq dOut\n\ud835\udd5c : Type u_4\ninst\u271d : RCLike \ud835\udd5c\nM : MatrixMap dIn dOut \ud835\udd5c\nh : M.IsCompletelyPositive\n\u22a2 M.dual.IsCompletelyPositive",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/Dual.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "7ab5eb7f586aac2ad0322d50800b2ecdd73759dc3b850349d39435d82bf368cd"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 70,
        "start_column": 4,
        "end_line": 70,
        "end_column": 9,
        "file": "QuantumInfo/Finite/CPTPMap/Dual.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ninst\u271d\u2074 : Fintype dIn\ninst\u271d\u00b3 : Fintype dOut\ninst\u271d\u00b2 : DecidableEq dIn\ninst\u271d\u00b9 : DecidableEq dOut\n\ud835\udd5c : Type u_4\ninst\u271d : RCLike \ud835\udd5c\nM : MatrixMap dIn dOut \ud835\udd5c\n\u22a2 \u2191(Matrix.stdBasis \ud835\udd5c dOut dOut).toDualEquiv.symm \u2218\u2097 (\u2191(Matrix.stdBasis \ud835\udd5c dOut dOut).toDualEquiv).dualMap =\n    \u2191(Module.evalEquiv \ud835\udd5c (Matrix dOut dOut \ud835\udd5c)).symm",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/Dual.lean#L70"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-14T17:26:35-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "6b2bf648ec32150474553885730a0a6891646edecd3fc5bbcef5d487e140850b"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 77,
        "start_column": 4,
        "end_line": 77,
        "end_column": 9,
        "file": "QuantumInfo/Finite/CPTPMap/Dual.lean"
      },
      "debug_info": {
        "goal": "case h.h\ndIn : Type u_1\ndOut : Type u_2\ninst\u271d\u2074 : Fintype dIn\ninst\u271d\u00b3 : Fintype dOut\ninst\u271d\u00b2 : DecidableEq dIn\ninst\u271d\u00b9 : DecidableEq dOut\n\ud835\udd5c : Type u_4\ninst\u271d : RCLike \ud835\udd5c\nM : MatrixMap dIn dOut \ud835\udd5c\nh\u2081 :\n  \u2191(Matrix.stdBasis \ud835\udd5c dOut dOut).toDualEquiv.symm \u2218\u2097 (\u2191(Matrix.stdBasis \ud835\udd5c dOut dOut).toDualEquiv).dualMap =\n    \u2191(Module.evalEquiv \ud835\udd5c (Matrix dOut dOut \ud835\udd5c)).symm\nx : Matrix dIn dIn \ud835\udd5c\ny : Module.Dual \ud835\udd5c (Matrix dIn dIn \ud835\udd5c)\nL : Basis (dIn \u00d7 dIn) \ud835\udd5c (Matrix dIn dIn \ud835\udd5c)\n\u22a2 (L.toDual x) (L.toDualEquiv.symm y) = y x",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/Dual.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-14T17:26:35-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "80cb56eb82cf9e1f30ca17e7d529657bb8369fa01da4e666b8252b883ab3c7fb"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 81,
        "start_column": 4,
        "end_line": 81,
        "end_column": 9,
        "file": "QuantumInfo/Finite/CPTPMap/Bundled.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\nR : Type u_3\n\ud835\udd5c\u271d : optParam Type \u2102\ninst\u271d\u2076 : Fintype dIn\ninst\u271d\u2075 : Fintype dOut\ninst\u271d\u2074 : DecidableEq dIn\ninst\u271d\u00b3 : DecidableEq dOut\ninst\u271d\u00b2 : Semiring R\ninst\u271d\u00b9 : RCLike \ud835\udd5c\u271d\n\ud835\udd5c : Type\ninst\u271d : RCLike \ud835\udd5c\nx\u271d\u00b9 x\u271d : HPMap dIn dOut \ud835\udd5c\nh : (fun \u039b \u03c1 => \u27e8\u039b.map \u2191\u03c1, \u22ef\u27e9) x\u271d\u00b9 = (fun \u039b \u03c1 => \u27e8\u039b.map \u2191\u03c1, \u22ef\u27e9) x\u271d\n\u22a2 x\u271d\u00b9 = x\u271d",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/Bundled.lean#L81"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "13ccac51f74f1bf4ac562058a1ce59ddd91ff29d48dc6aef7c078936afa389b3"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 166,
        "start_column": 4,
        "end_line": 166,
        "end_column": 9,
        "file": "QuantumInfo/Finite/CPTPMap/Bundled.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\nR : Type u_3\n\ud835\udd5c\u271d : optParam Type \u2102\ninst\u271d\u2076 : Fintype dIn\ninst\u271d\u2075 : Fintype dOut\ninst\u271d\u2074 : DecidableEq dIn\ninst\u271d\u00b3 : DecidableEq dOut\ninst\u271d\u00b2 : Semiring R\ninst\u271d\u00b9 : RCLike \ud835\udd5c\u271d\n\ud835\udd5c : Type\ninst\u271d : RCLike \ud835\udd5c\nx\u271d\u00b9 x\u271d : PTPMap dIn dOut \u2102\nh :\n  (fun \u039b \u03c1 => { toSubtype := ((\u039b.toPMap \u2102).toHPMap \u2102) \u2191\u03c1, zero_le := \u22ef, tr := \u22ef }) x\u271d\u00b9 =\n    (fun \u039b \u03c1 => { toSubtype := ((\u039b.toPMap \u2102).toHPMap \u2102) \u2191\u03c1, zero_le := \u22ef, tr := \u22ef }) x\u271d\n\u22a2 x\u271d\u00b9 = x\u271d",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/Bundled.lean#L166"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "ddcae5bbe990ee2265ca54077ab0c7175fd39e4ecb7d3ba4a11860e5210412d4"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 61,
        "start_column": 2,
        "end_line": 61,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/MatrixMap.lean"
      },
      "debug_info": {
        "goal": "A : Type u_1\nB : Type u_2\nR : Type u_7\ninst\u271d\u00b2 : Fintype A\ninst\u271d\u00b9 : Semiring R\ninst\u271d : DecidableEq A\nM : MatrixMap A B R\n\u22a2 of_choi_matrix M.choi_matrix = M",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/MatrixMap.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "0b387aa292033a5b72895231d5cbe35c459982be2031373ac3e47f9c100b61cc"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 98,
        "start_column": 2,
        "end_line": 98,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/MatrixMap.lean"
      },
      "debug_info": {
        "goal": "A : Type u_1\nB : Type u_2\nC : Type u_3\nD : Type u_4\nE : Type u_5\nF : Type u_6\nR : Type u_7\ninst\u271d\u2075 : Fintype A\ninst\u271d\u2074 : Semiring R\ninst\u271d\u00b3 : DecidableEq A\ninst\u271d\u00b2 : SMulCommClass R R R\ninst\u271d\u00b9 : Star R\n\u03ba : Type u_8\ninst\u271d : Fintype \u03ba\n\u03a6 : MatrixMap A B R\n\u22a2 \u2203 r M N, \u03a6 = of_kraus M N",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/MatrixMap.lean#L98"
      },
      "metadata": {
        "blame_email_hash": "bb68ad5cf2c2",
        "blame_date": "2025-01-31T11:15:47-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "a0df38cacaa6aaa522e453a7b850a600fdc92e0995fe3365b677638eb9e769fa"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 129,
        "start_column": 2,
        "end_line": 129,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/MatrixMap.lean"
      },
      "debug_info": {
        "goal": "A : Type u_8\nB : Type u_9\nC : Type u_10\nD : Type u_11\nR : Type u_12\ninst\u271d\u2076 : Fintype A\ninst\u271d\u2075 : Fintype B\ninst\u271d\u2074 : Fintype C\ninst\u271d\u00b3 : Fintype D\ninst\u271d\u00b2 : DecidableEq A\ninst\u271d\u00b9 : DecidableEq C\nb\u2081 : B\nd\u2081 : D\nb\u2082 : B\nd\u2082 : D\ninst\u271d : CommRing R\nM\u2081 : MatrixMap A B R\nM\u2082 : MatrixMap C D R\nM : Matrix (A \u00d7 C) (A \u00d7 C) R\n\u22a2 (\u2211 x : (B \u00d7 D) \u00d7 B \u00d7 D,\n        (Matrix.of fun i j =>\n                ((Matrix.stdBasis R B B).repr (M\u2081 (Matrix.stdBasisMatrix j.1.1 j.2.1 1))) (i.1.1, i.2.1) *\n                  ((Matrix.stdBasis R D D).repr (M\u2082 (Matrix.stdBasisMatrix j.1.2 j.2.2 1))) (i.1.2, i.2.2)).mulVec\n            (\u21d1((Matrix.stdBasis R (A \u00d7 C) (A \u00d7 C)).repr M)) x \u2022\n          (Matrix.stdBasis R (B \u00d7 D) (B \u00d7 D)) x)\n      (b\u2081, d\u2081) (b\u2082, d\u2082) =\n    \u2211 a\u2081 : A,\n      \u2211 a\u2082 : A,\n        \u2211 c\u2081 : C,\n          \u2211 c\u2082 : C,\n            M\u2081 (Matrix.stdBasisMatrix a\u2081 a\u2082 1) b\u2081 b\u2082 * M\u2082 (Matrix.stdBasisMatrix c\u2081 c\u2082 1) d\u2081 d\u2082 * M (a\u2081, c\u2081) (a\u2082, c\u2082)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/MatrixMap.lean#L129"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "480b5c637c9243110ff2e1f380b751f4da4b56328d5145d769f642127db17f4b"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 191,
        "start_column": 2,
        "end_line": 191,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/MatrixMap.lean"
      },
      "debug_info": {
        "goal": "case a.e_a\nA : Type u_8\nB : Type u_9\nC : Type u_10\nD : Type u_11\nR : Type u_12\ninst\u271d\u2076 : Fintype A\ninst\u271d\u2075 : Fintype B\ninst\u271d\u2074 : Fintype C\ninst\u271d\u00b3 : Fintype D\ninst\u271d\u00b2 : DecidableEq A\ninst\u271d\u00b9 : DecidableEq C\ninst\u271d : CommRing R\nM\u2081 : MatrixMap A B R\nM\u2082 : MatrixMap C D R\nMA : Matrix A A R\nMC : Matrix C C R\nbd\u2081 bd\u2082 : B \u00d7 D\nb\u2081 : B\nd\u2081 : D\nb\u2082 : B\nd\u2082 : D\n\u22a2 \u2211 i : A, \u2211 i_1 : A, M\u2081 (Matrix.stdBasisMatrix i i_1 1) b\u2081 b\u2082 * MA i i_1 = M\u2081 MA b\u2081 b\u2082",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/MatrixMap.lean#L191"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "72419d4c02b03a2b8c484d958d59eae8472e63591ca1fb2b164d9b662afdbd21"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 192,
        "start_column": 2,
        "end_line": 192,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/MatrixMap.lean"
      },
      "debug_info": {
        "goal": "case a.e_a\nA : Type u_8\nB : Type u_9\nC : Type u_10\nD : Type u_11\nR : Type u_12\ninst\u271d\u2076 : Fintype A\ninst\u271d\u2075 : Fintype B\ninst\u271d\u2074 : Fintype C\ninst\u271d\u00b3 : Fintype D\ninst\u271d\u00b2 : DecidableEq A\ninst\u271d\u00b9 : DecidableEq C\ninst\u271d : CommRing R\nM\u2081 : MatrixMap A B R\nM\u2082 : MatrixMap C D R\nMA : Matrix A A R\nMC : Matrix C C R\nbd\u2081 bd\u2082 : B \u00d7 D\nb\u2081 : B\nd\u2081 : D\nb\u2082 : B\nd\u2082 : D\n\u22a2 \u2211 i : C, \u2211 i_1 : C, MC i i_1 * M\u2082 (Matrix.stdBasisMatrix i i_1 1) d\u2081 d\u2082 = M\u2082 MC d\u2081 d\u2082",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/MatrixMap.lean#L192"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "25c5b402b5d240f7771865f4ede43499bf1b0c2773f21997ed042a5dc9ff07fc"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 45,
        "start_column": 2,
        "end_line": 45,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ninst\u271d\u00b2 : Fintype dIn\ninst\u271d\u00b9 : Fintype dOut\ninst\u271d : DecidableEq dIn\n\u039b\u2081 \u039b\u2082 : CPTPMap dIn dOut \u2102\nh : \u039b\u2081.choi = \u039b\u2082.choi\n\u22a2 \u039b\u2081 = \u039b\u2082",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/CPTP.lean#L45"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "ee2eaa9d40d65a108ea18e5e9c6a66a3c1b517fb0ed0cc14aca47f9b0b6b5685"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 71,
        "start_column": 2,
        "end_line": 71,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ninst\u271d\u00b2 : Fintype dIn\ninst\u271d\u00b9 : Fintype dOut\ninst\u271d : DecidableEq dIn\nM : Matrix (dOut \u00d7 dIn) (dOut \u00d7 dIn) \u2102\nh\u2081 : M.PosSemidef\nh\u2082 : M.traceLeft = 1\n\u22a2 (HPMap.mk \u2102 (MatrixMap.of_choi_matrix M) \u22ef).map.choi_matrix = M",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/CPTP.lean#L71"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "06661af6864e8ee0179b8c0fe5efe93bef91bc3bd7e55b2151d83dff80011daa"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 109,
        "start_column": 12,
        "end_line": 109,
        "end_column": 17,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ndOut\u2082 : Type u_3\ninst\u271d\u2077 : Fintype dIn\ninst\u271d\u2076 : Fintype dOut\ninst\u271d\u2075 : Fintype dOut\u2082\ninst\u271d\u2074 : DecidableEq dIn\ndM : Type u_4\ninst\u271d\u00b3 : Fintype dM\ninst\u271d\u00b2 : DecidableEq dM\ndM\u2082 : Type u_5\ninst\u271d\u00b9 : Fintype dM\u2082\ninst\u271d : DecidableEq dM\u2082\n\u22a2 Convex \u211d (Set.range choi)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/CPTP.lean#L109"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-01-13T17:13:17-05:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "7ca0835e3b439ad4ae992ae159d69ad93ad9e854837e5bc9691824ac10dafc67"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 160,
        "start_column": 8,
        "end_line": 160,
        "end_column": 13,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ndOut\u2082 : Type u_3\ninst\u271d\u2078 : Fintype dIn\ninst\u271d\u2077 : Fintype dOut\ninst\u271d\u2076 : Fintype dOut\u2082\ninst\u271d\u2075 : DecidableEq dIn\ndM : Type u_4\ninst\u271d\u2074 : Fintype dM\ninst\u271d\u00b3 : DecidableEq dM\ndM\u2082 : Type u_5\ninst\u271d\u00b2 : Fintype dM\u2082\ninst\u271d\u00b9 : DecidableEq dM\u2082\ninst\u271d : Unique dIn\n\u03c1 : MState dOut\n\u22a2 MatrixMap.IsCompletelyPositive\n    ((((PTPMap.mk \u2102\n                  (PMap.mk \u2102\n                    (HPMap.mk \u2102\n                      (MatrixMap.of_choi_matrix\n                        (Matrix.of fun x x_1 =>\n                          match x with\n                          | (i, snd) =>\n                            match x_1 with\n                            | (j, snd) => \u03c1.m i j))\n                      \u22ef)\n                    \u22ef)\n                  \u22ef).toPMap\n              \u2102).toHPMap\n          \u2102).toLinearMap\n      \u2102)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/CPTP.lean#L160"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "0e590cc50581f92b123cc094c7853fd90091538e1e3f1124f919000f38763438"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 174,
        "start_column": 2,
        "end_line": 174,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "case h\ndIn : Type u_1\ndOut : Type u_2\ninst\u271d\u00b3 : Fintype dIn\ninst\u271d\u00b2 : Fintype dOut\ninst\u271d\u00b9 : DecidableEq dIn\ninst\u271d : Unique dIn\n\u03c1 : MState dOut\n\u03c1\u2080 : MState dIn\n\u22a2 \u2191{\n        toSubtype :=\n          (HPMap.mk \u2102 { toFun := fun X b\u2081 b\u2082 => X default default * \u2191\u2191\u03c1 b\u2081 b\u2082, map_add' := \u22ef, map_smul' := \u22ef } \u22ef)\n            \u2191default,\n        zero_le := \u22ef, tr := \u22ef } =\n    \u2191\u03c1",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/CPTP.lean#L174"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "7b33c61ad846f34bd4234e08a4622184b58b62cd40a03e40db24517ea115bfb2"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 211,
        "start_column": 8,
        "end_line": 211,
        "end_column": 13,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ndOut\u2082 : Type u_3\ninst\u271d\u00b9\u00b2 : Fintype dIn\ninst\u271d\u00b9\u00b9 : Fintype dOut\ninst\u271d\u00b9\u2070 : Fintype dOut\u2082\ninst\u271d\u2079 : DecidableEq dIn\ndM : Type u_4\ninst\u271d\u2078 : Fintype dM\ninst\u271d\u2077 : DecidableEq dM\ndM\u2082 : Type u_5\ninst\u271d\u2076 : Fintype dM\u2082\ninst\u271d\u2075 : DecidableEq dM\u2082\n\u03b9 : Type u\ninst\u271d\u2074 : DecidableEq \u03b9\nf\u03b9 : Fintype \u03b9\ndI : \u03b9 \u2192 Type v\ninst\u271d\u00b3 : (i : \u03b9) \u2192 Fintype (dI i)\ninst\u271d\u00b2 : (i : \u03b9) \u2192 DecidableEq (dI i)\ndO : \u03b9 \u2192 Type w\ninst\u271d\u00b9 : (i : \u03b9) \u2192 Fintype (dO i)\ninst\u271d : (i : \u03b9) \u2192 DecidableEq (dO i)\n\u039bi : (i : \u03b9) \u2192 CPTPMap (dI i) (dO i) \u2102\n\u22a2 MatrixMap.IsTracePreserving\n    (((PMap.mk \u2102 (HPMap.mk \u2102 (MatrixMap.piKron fun i => ((((\u039bi i).toPTPMap \u2102).toPMap \u2102).toHPMap \u2102).map) \u22ef) \u22ef).toHPMap\n          \u2102).toLinearMap\n      \u2102)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/CPTP.lean#L211"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "35110e80c76053bf23d93e2871399f8b20a3d2a36f883ff53761fbf1e0d21575"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 218,
        "start_column": 2,
        "end_line": 218,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dI : Fin 1 \u2192 Type v\ninst\u271d\u00b3 : Fintype (dI 0)\ninst\u271d\u00b2 : DecidableEq (dI 0)\ndO : Fin 1 \u2192 Type w\ninst\u271d\u00b9 : Fintype (dO 0)\ninst\u271d : DecidableEq (dO 0)\n\u039bi : Fin 1 \u2192 CPTPMap (dI 0) (dO 0) \u2102\n\u22a2 piProd \u039bi = sorry\u2218\u2098(\u039bi 1\u2218\u2098sorry)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/CPTP.lean#L218"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T17:34:48-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "2bddf9db269221fd5ec77683a15381ecff722d7352c1282ef4c19558bd9bf9aa"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 229,
        "start_column": 8,
        "end_line": 229,
        "end_column": 13,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ndOut\u2082 : Type u_3\ninst\u271d\u00b9\u00b9 : Fintype dIn\ninst\u271d\u00b9\u2070 : Fintype dOut\ninst\u271d\u2079 : Fintype dOut\u2082\ninst\u271d\u2078 : DecidableEq dIn\ndM : Type u_4\ninst\u271d\u2077 : Fintype dM\ninst\u271d\u2076 : DecidableEq dM\ndM\u2082 : Type u_5\ninst\u271d\u2075 : Fintype dM\u2082\ninst\u271d\u2074 : DecidableEq dM\u2082\nd\u2081 : Type u_6\nd\u2082 : Type u_7\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u22a2 MatrixMap.IsTracePreserving (((PMap.mk \u2102 (HPMap.mk \u2102 sorry \u22ef) \u22ef).toHPMap \u2102).toLinearMap \u2102)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/CPTP.lean#L229"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "2ebbae961200300a9bd5b1f394a63564fcc3d36cebf2149e68838052a8817207"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 228,
        "start_column": 8,
        "end_line": 228,
        "end_column": 13,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ndOut\u2082 : Type u_3\ninst\u271d\u00b9\u00b9 : Fintype dIn\ninst\u271d\u00b9\u2070 : Fintype dOut\ninst\u271d\u2079 : Fintype dOut\u2082\ninst\u271d\u2078 : DecidableEq dIn\ndM : Type u_4\ninst\u271d\u2077 : Fintype dM\ninst\u271d\u2076 : DecidableEq dM\ndM\u2082 : Type u_5\ninst\u271d\u2075 : Fintype dM\u2082\ninst\u271d\u2074 : DecidableEq dM\u2082\nd\u2081 : Type u_6\nd\u2082 : Type u_7\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u22a2 MatrixMap.IsCompletelyPositive\n    ((((PTPMap.mk \u2102 (PMap.mk \u2102 (HPMap.mk \u2102 sorry \u22ef) \u22ef) \u22ef).toPMap \u2102).toHPMap \u2102).toLinearMap \u2102)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/CPTP.lean#L228"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "2e49970c65981705bb0b10b17b15558372b194947194a401b97a910fff09b832"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 237,
        "start_column": 2,
        "end_line": 237,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_6\nd\u2082 : Type u_7\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u03c1 : MState (d\u2081 \u00d7 d\u2082)\n\u22a2 traceLeft \u03c1 = \u03c1.traceLeft",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/CPTP.lean#L237"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "fb20efbe6ad1d4f52aaa579434fda63c549c81aa1c757a0bea5bfb028a8fad02"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 241,
        "start_column": 2,
        "end_line": 241,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_6\nd\u2082 : Type u_7\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u03c1 : MState (d\u2081 \u00d7 d\u2082)\n\u22a2 traceRight \u03c1 = \u03c1.traceRight",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/CPTP.lean#L241"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "a4f6da3c93c7475dea1d57ee84544f8389939e0e5bb0bd351e920904cc7c9b3a"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 256,
        "start_column": 8,
        "end_line": 256,
        "end_column": 13,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ndOut\u2082 : Type u_3\ninst\u271d\u2078 : Fintype dIn\ninst\u271d\u2077 : Fintype dOut\ninst\u271d\u2076 : Fintype dOut\u2082\ninst\u271d\u2075 : DecidableEq dIn\ndM : Type u_4\ninst\u271d\u2074 : Fintype dM\ninst\u271d\u00b3 : DecidableEq dM\ndM\u2082 : Type u_5\ninst\u271d\u00b2 : Fintype dM\u2082\ninst\u271d\u00b9 : DecidableEq dM\u2082\ninst\u271d : DecidableEq dOut\n\u03c3 : dIn \u2243 dOut\n\u22a2 MatrixMap.IsCompletelyPositive\n    ((((PTPMap.mk \u2102 (PMap.mk \u2102 (HPMap.mk \u2102 { toFun := \u21d1(Matrix.reindex \u03c3 \u03c3), map_add' := \u22ef, map_smul' := \u22ef } \u22ef) \u22ef)\n                  \u22ef).toPMap\n              \u2102).toHPMap\n          \u2102).toLinearMap\n      \u2102)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/CPTP.lean#L256"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "8a970189dc403e08e8ee0f3cc2cf8565ceaf45b6cdbda98db66f1f6463200123"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 263,
        "start_column": 2,
        "end_line": 263,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ninst\u271d\u00b3 : Fintype dIn\ninst\u271d\u00b2 : Fintype dOut\ninst\u271d\u00b9 : DecidableEq dIn\ninst\u271d : DecidableEq dOut\n\u03c3 : dIn \u2243 dOut\n\u22a2 \u21d1(of_equiv \u03c3) \u2218 \u21d1(of_equiv \u03c3.symm) = \u21d1id",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/CPTP.lean#L263"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "17bc015b2a566472d91da3db05ebb7187815dd2a21c72f5fc424b766bc4cec23"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 285,
        "start_column": 2,
        "end_line": 285,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_6\nd\u2082 : Type u_7\ninst\u271d\u00b3 : Fintype d\u2081\ninst\u271d\u00b2 : Fintype d\u2082\ninst\u271d\u00b9 : DecidableEq d\u2081\ninst\u271d : DecidableEq d\u2082\n\u03c1 : MState (d\u2081 \u00d7 d\u2082)\n\u22a2 SWAP \u03c1 = \u03c1.SWAP",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/CPTP.lean#L285"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-26T16:05:31-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "6fece51285133b4129573ca32d1544733e11aa5267c13433cdffabc31520b46f"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 289,
        "start_column": 2,
        "end_line": 289,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_6\nd\u2082 : Type u_7\nd\u2083 : Type u_8\ninst\u271d\u2075 : Fintype d\u2081\ninst\u271d\u2074 : Fintype d\u2082\ninst\u271d\u00b3 : Fintype d\u2083\ninst\u271d\u00b2 : DecidableEq d\u2081\ninst\u271d\u00b9 : DecidableEq d\u2082\ninst\u271d : DecidableEq d\u2083\n\u03c1 : MState ((d\u2081 \u00d7 d\u2082) \u00d7 d\u2083)\n\u22a2 assoc \u03c1 = \u03c1.assoc",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/CPTP.lean#L289"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "16449570e52bfd35b1e89470da4ee2fc9badbef381ab8b62e7fde863ae08722c"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 293,
        "start_column": 2,
        "end_line": 293,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "d\u2081 : Type u_6\nd\u2082 : Type u_7\nd\u2083 : Type u_8\ninst\u271d\u2075 : Fintype d\u2081\ninst\u271d\u2074 : Fintype d\u2082\ninst\u271d\u00b3 : Fintype d\u2083\ninst\u271d\u00b2 : DecidableEq d\u2081\ninst\u271d\u00b9 : DecidableEq d\u2082\ninst\u271d : DecidableEq d\u2083\n\u03c1 : MState (d\u2081 \u00d7 d\u2082 \u00d7 d\u2083)\n\u22a2 assoc' \u03c1 = \u03c1.assoc'",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/CPTP.lean#L293"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-26T16:05:31-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "3fb454b8fe70eaa5e5b1e466f7630113c5d9ab7217b5daabf73c557b3fd1bf62"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 309,
        "start_column": 8,
        "end_line": 309,
        "end_column": 13,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ndOut\u2082 : Type u_3\ninst\u271d\u2077 : Fintype dIn\ninst\u271d\u2076 : Fintype dOut\ninst\u271d\u2075 : Fintype dOut\u2082\ninst\u271d\u2074 : DecidableEq dIn\ndM : Type u_4\ninst\u271d\u00b3 : Fintype dM\ninst\u271d\u00b2 : DecidableEq dM\ndM\u2082 : Type u_5\ninst\u271d\u00b9 : Fintype dM\u2082\ninst\u271d : DecidableEq dM\u2082\nU : \u21a5\ud835\udc14[dIn]\n\u22a2 MatrixMap.IsCompletelyPositive\n    ((((PTPMap.mk \u2102 (PMap.mk \u2102 (HPMap.mk \u2102 { toFun := fun \u03c1 => \u2191U * \u03c1 * \u2191(star U), map_add' := \u22ef, map_smul' := \u22ef } \u22ef) \u22ef)\n                  \u22ef).toPMap\n              \u2102).toHPMap\n          \u2102).toLinearMap\n      \u2102)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/CPTP.lean#L309"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "88cb4b81f6b169362beaa6f719f5ebfb7180a3b00caf8d6b8ba733293c0a4a2f"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 326,
        "start_column": 2,
        "end_line": 326,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ninst\u271d\u00b9 : Fintype dIn\ninst\u271d : DecidableEq dIn\n\u03c3 : dIn \u2243 dIn\n\u22a2 (of_equiv \u03c3).IsUnitary",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/CPTP.lean#L326"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "cb3609debe8e9a4e7371c3579ecf246b30fdf1505320565be8e6dde46f4248c8"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 358,
        "start_column": 8,
        "end_line": 358,
        "end_column": 13,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ndOut\u2082 : Type u_3\ninst\u271d\u2079 : Fintype dIn\ninst\u271d\u2078 : Fintype dOut\ninst\u271d\u2077 : Fintype dOut\u2082\ninst\u271d\u2076 : DecidableEq dIn\ndM : Type u_4\ninst\u271d\u2075 : Fintype dM\ninst\u271d\u2074 : DecidableEq dM\ndM\u2082 : Type u_5\ninst\u271d\u00b3 : Fintype dM\u2082\ninst\u271d\u00b2 : DecidableEq dM\u2082\ninst\u271d\u00b9 : DecidableEq dOut\ninst\u271d : Inhabited dOut\n\u039b : CPTPMap dIn dOut \u2102\n\u22a2 MatrixMap.IsTracePreserving (((PMap.mk \u2102 (HPMap.mk \u2102 sorry \u22ef) \u22ef).toHPMap \u2102).toLinearMap \u2102)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/CPTP.lean#L358"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "173e3fd655fdf9fbd530ed9bf1a6a4ad7180a962d508316771ed8f855f0f7f63"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 357,
        "start_column": 8,
        "end_line": 357,
        "end_column": 13,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ndOut\u2082 : Type u_3\ninst\u271d\u2079 : Fintype dIn\ninst\u271d\u2078 : Fintype dOut\ninst\u271d\u2077 : Fintype dOut\u2082\ninst\u271d\u2076 : DecidableEq dIn\ndM : Type u_4\ninst\u271d\u2075 : Fintype dM\ninst\u271d\u2074 : DecidableEq dM\ndM\u2082 : Type u_5\ninst\u271d\u00b3 : Fintype dM\u2082\ninst\u271d\u00b2 : DecidableEq dM\u2082\ninst\u271d\u00b9 : DecidableEq dOut\ninst\u271d : Inhabited dOut\n\u039b : CPTPMap dIn dOut \u2102\n\u22a2 MatrixMap.IsCompletelyPositive\n    ((((PTPMap.mk \u2102 (PMap.mk \u2102 (HPMap.mk \u2102 sorry \u22ef) \u22ef) \u22ef).toPMap \u2102).toHPMap \u2102).toLinearMap \u2102)",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/CPTP.lean#L357"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2025-04-12T17:43:13-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "c3418018e089d3def87ec328101ddf926d69a06469c67097ddbc178c8a7c237d"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 363,
        "start_column": 2,
        "end_line": 363,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ninst\u271d\u2074 : Fintype dIn\ninst\u271d\u00b3 : Fintype dOut\ninst\u271d\u00b2 : DecidableEq dIn\ninst\u271d\u00b9 : DecidableEq dOut\ninst\u271d : Inhabited dOut\n\u039b : CPTPMap dIn dOut \u2102\n\u22a2 \u039b.purify.IsUnitary",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/CPTP.lean#L363"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "9a85f080de0792023134e0477416e8b542e5bd21fdf36591a27047ea8eae38c3"
    },
    {
      "repo": {
        "remote": "https://github.com/Timeroot/Lean-QuantumInfo",
        "branch": "main",
        "commit": "2a5ca62932e698498d590bacdf3922816a018d29",
        "lean_version": "v4.17.0-rc1"
      },
      "location": {
        "start_line": 378,
        "start_column": 2,
        "end_line": 378,
        "end_column": 7,
        "file": "QuantumInfo/Finite/CPTPMap/CPTP.lean"
      },
      "debug_info": {
        "goal": "dIn : Type u_1\ndOut : Type u_2\ninst\u271d\u2074 : Fintype dIn\ninst\u271d\u00b3 : Fintype dOut\ninst\u271d\u00b2 : DecidableEq dIn\ninst\u271d\u00b9 : DecidableEq dOut\ninst\u271d : Inhabited dOut\n\u039b : CPTPMap dIn dOut \u2102\n\u22a2 \u039b =\n    let zero_prep := const_state (MState.pure (Ket.basis default));\n    let prep := id\u2297\u2096zero_prep;\n    let append := of_equiv (Equiv.prodPUnit dIn).symm;\n    traceLeft\u2218\u2098traceLeft\u2218\u2098\u039b.purify\u2218\u2098prep\u2218\u2098append",
        "url": "https://github.com/Timeroot/Lean-QuantumInfo/blob/2a5ca62932e698498d590bacdf3922816a018d29/QuantumInfo/Finite/CPTPMap/CPTP.lean#L378"
      },
      "metadata": {
        "blame_email_hash": "0cbf03e06ade",
        "blame_date": "2024-08-23T00:40:55-04:00",
        "inclusion_date": "2025-04-18T03:45:15.364563+00:00"
      },
      "id": "db93324425cd8e9bc5962da2e4c2c6388b4e717ef749552890adfd97955b27ca"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 60,
        "start_column": 9,
        "end_line": 60,
        "end_column": 14,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b9 : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nWitEquiv : Type\ninst\u271d : ToOracle WitEquiv\nequiv : Witness \u2243 WitEquiv\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 Unit),\n    (OStatement \u2295\u1d65 fun x => WitEquiv) i =\n      match (\u22ef.mpr sorry) i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => (pSpec WitEquiv).Message j",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/ProofSystem/Components.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "e20bd36bedada6f65a51debd7eaae701b18683ba0224904e7c44a04a34e660b7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 78,
        "start_column": 2,
        "end_line": 78,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b2 : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nWitEquiv : Type\ninst\u271d\u00b9 : ToOracle WitEquiv\nequiv : Witness \u2243 WitEquiv\nrelIn : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Witness \u2192 Prop\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness relIn (toRelOut Statement Witness OStatement WitEquiv equiv relIn)\n    (oracleReduction oSpec Statement Witness OStatement WitEquiv equiv)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/ProofSystem/Components.lean#L78"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "cd7f1fab4e1349f806e968f54ef54182294549550143aaaaafcf8cb449fc1d44"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 138,
        "start_column": 9,
        "end_line": 138,
        "end_column": 14,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d\u00b9 : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 \u03b9\u209b\u1d62),\n    (OStatement \u2295\u1d65 OStatement) i =\n      match sorry i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => (pSpec OStatement).Message j",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/ProofSystem/Components.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "02a75398f18fdce6470c4ec6c554877f94eb59110656de451a4fac421f5ecb5f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 164,
        "start_column": 2,
        "end_line": 164,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d\u00b2 : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b9 : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (fun x x_1 => rel x) (relOut OStatement)\n    (oracleReduction oSpec Statement OStatement relComp)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/ProofSystem/Components.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "bcf2155701bb8f6a0bcb17316489ce2b1c80712228366831c37f6eb579003e5d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 255,
        "start_column": 2,
        "end_line": 255,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nOStatement : Type\ninst\u271d\u00b2 : ToOracle OStatement\ninst\u271d\u00b9 : VCVCompatible (Query OStatement)\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (relIn OStatement) (relOut OStatement) (oracleReduction oSpec OStatement)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/ProofSystem/Components.lean#L255"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "f9580b8e613ebba7481220ed8585f021a94bb2ea5507d5b5c5918ab5a14985fc"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 184,
        "start_column": 2,
        "end_line": 184,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Execution.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let a \u2190 (simulateQ loggingOracle (Prover.runToRound (Fin.last n) stmt wit reduction.prover)).run\n      (fun a_1 => (a_1.1, (reduction.prover.toProverOut.1 a.1.2).2, a.1.1)) <$>\n          (simulateQ loggingOracle (reduction.verifier.verify stmt a.1.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190 Prover.run stmt wit reduction.prover\n    (fun a => (a, __discr.2)) <$> (reduction.verifier.verify stmt __discr.2.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/OracleReduction/Execution.lean#L184"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "cad810e6cc1dd8062d5a1ada48f7cac1f844f43fa3a6b82d7c10bc9a9d8267a0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 277,
        "start_column": 2,
        "end_line": 277,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Execution.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\npSpec : ProtocolSpec 1\ninst\u271d : pSpec.ProverOnly\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let __discr \u2190\n        (fun a =>\n              ((reduction.prover.toProverOut.1 a.2).1, (reduction.prover.toProverOut.1 a.2).2, fun i =>\n                match i with\n                | \u27e80, isLt\u27e9 => a.1)) <$>\n            (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp\n              (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n      ((fun a => (a, __discr.2)) <$> reduction.verifier.verify stmt __discr.2.2).liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190\n      (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n    ((fun a =>\n              (a, (reduction.prover.toProverOut.1 __discr.2).2, fun i =>\n                match i with\n                | \u27e80, isLt\u27e9 => __discr.1)) <$>\n            reduction.verifier.verify stmt fun i =>\n              match i with\n              | \u27e80, isLt\u27e9 => __discr.1).liftComp\n        (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/OracleReduction/Execution.lean#L277"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "367d5b6d1682db5aea9197d74f9400c770aa36e8bd07c3b604b0f225d26b3030"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 66,
        "start_column": 2,
        "end_line": 66,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Equiv.lean"
      },
      "debug_info": {
        "goal": "\u22a2 (do\n      let _ \u2190 liftM (query 0 ())\n      (fun a => (0, \u2191a)) <$> liftM (query 1 ())) =\n    do\n    let y \u2190 liftM (query 1 ())\n    (fun a => (0, \u2191y)) <$> liftM (query 0 ())",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/OracleReduction/Equiv.lean#L66"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "68d3d09ad4d099c79572bfb31d6a10ae84cb44b3df4de75db10f5438bd3f03b7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 80,
        "start_column": 4,
        "end_line": 80,
        "end_column": 9,
        "file": "ZKLib/OracleReduction/Equiv.lean"
      },
      "debug_info": {
        "goal": "case h.h.none\n\u22a2 (evalDist (OptionT.bind (liftM (query 1 ())) (OptionT.pure \u2218 fun a => (0, \u2191a)))) none =\n    \u2211' (a : Fin 2), 2\u207b\u00b9 * (evalDist (OptionT.bind (liftM (query 0 ())) (OptionT.pure \u2218 fun a_1 => (0, \u2191a)))) none",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/OracleReduction/Equiv.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-16T18:04:04-04:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "fa3cec0052bfe6b768797593b7980c71c807c5429da92b3428da08b78a4f17bd"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 85,
        "start_column": 4,
        "end_line": 85,
        "end_column": 9,
        "file": "ZKLib/OracleReduction/Equiv.lean"
      },
      "debug_info": {
        "goal": "case h.h.some.mk\nx y : \u2115\n\u22a2 (Option.elimM ((PMF.uniformOfFintype (Fin 1)).bind fun a => PMF.pure (some a)) (PMF.pure none)\n        (OptionT.run \u2218 evalDist \u2218 fun x => OptionT.bind (liftM (query 1 ())) (OptionT.pure \u2218 fun a => (0, \u2191a))))\n      (some (x, y)) =\n    (Option.elimM ((PMF.uniformOfFintype (Fin 2)).bind fun a => PMF.pure (some a)) (PMF.pure none)\n        (OptionT.run \u2218 evalDist \u2218 fun y => OptionT.bind (liftM (query 0 ())) (OptionT.pure \u2218 fun a => (0, \u2191y))))\n      (some (x, y))",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/OracleReduction/Equiv.lean#L85"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "87d8aa1dfa3fce53180b95357892b0f1329eade6ff3cfd9e14ccd82f261d7f50"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 102,
        "start_column": 2,
        "end_line": 102,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Equiv.lean"
      },
      "debug_info": {
        "goal": "f : (i : \u2115) \u2192 unifSpec.domain i \u2192 Fin (i + 1)\n\u22a2 (some (f 0 ()) >>=\n      simulateQ\n          {\n            impl := fun {\u03b1} x =>\n              match \u03b1, x with\n              | .(unifSpec.range i), query i t => some (f i t) } \u2218\n        fun x => (fun a => (0, \u2191a)) <$> lift (query 1 ())) =\n    some (f 1 ()) >>=\n      simulateQ\n          {\n            impl := fun {\u03b1} x =>\n              match \u03b1, x with\n              | .(unifSpec.range i), query i t => some (f i t) } \u2218\n        fun y => (fun a => (0, \u2191y)) <$> lift (query 0 ())",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/OracleReduction/Equiv.lean#L102"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "a0ecfbb02da356210d5bd26f4e8f288da11ca9c6cbdf64967b4886e3ae24a354"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 299,
        "start_column": 2,
        "end_line": 299,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/ToOracle.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u2075 : CommRing R\nd : \u2115\ninst\u271d\u2074 : Fintype R\ninst\u271d\u00b3 : DecidableEq R\ninst\u271d\u00b2 : IsDomain R\n\u03c3 : Type\ninst\u271d\u00b9 : Fintype \u03c3\ninst\u271d : DecidableEq \u03c3\na : R[X \u03c3]\nha : \u2200 (s : \u03c3 \u2192\u2080 \u2115), \u00acMvPolynomial.coeff s a = 0 \u2192 \u2200 (i : \u03c3), s i \u2264 d\nb : R[X \u03c3]\nhb : \u2200 (s : \u03c3 \u2192\u2080 \u2115), \u00acMvPolynomial.coeff s b = 0 \u2192 \u2200 (i : \u03c3), s i \u2264 d\nhNe : \u00aca = b\n\u22a2 {q | (MvPolynomial.eval q) a = (MvPolynomial.eval q) b}.card \u2264 Fintype.card \u03c3 * d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/OracleReduction/ToOracle.lean#L299"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "b48be5d68d47819281741a81be24cc5f86c0b5aad76ae35d52d536d7b02494ef"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 338,
        "start_column": 2,
        "end_line": 338,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/ToOracle.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\nR : Type\ninst\u271d : CommSemiring R\nm : \u2115\nD : Fin m \u21aa R\np : R[X]\n\u22a2 \u2203 x,\n    ((OptionT.run (mapM (fun i => liftM (query (Sum.inr ()) (D i))) (List.finRange m))).mapM fun {\u03b1} =>\n          (statelessOracle spec [fun x => R[X]]\u2092 fun i q => oracle p q).impl) =\n        pure x \u2227\n      x.getM = pure (List.map (fun i => eval (D i) p) (List.finRange m))",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/OracleReduction/ToOracle.lean#L338"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "0961143e70b5b5184df35f1df06d77b879cd11978ee3834d6d2934a62fa455ff"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 100,
        "start_column": 2,
        "end_line": 100,
        "end_column": 7,
        "file": "ZKLib/CommitmentScheme/Fold.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\np : R[X]\n\u22a2 (splitEvenOdd p).1.natDegree \u2264 p.natDegree / 2",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/CommitmentScheme/Fold.lean#L100"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "e5a6c44978bc28c63d5dfd2c5f471d2c1d6811bb1d56f28158651d64facfd5d9"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 104,
        "start_column": 2,
        "end_line": 104,
        "end_column": 7,
        "file": "ZKLib/CommitmentScheme/Fold.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\np : R[X]\n\u22a2 (splitEvenOdd p).2.natDegree \u2264 p.natDegree / 2",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/CommitmentScheme/Fold.lean#L104"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "9d516e0e5457d372f4b327aaee3e24b8a4ec735d747a2e3c433a29dd7e67499d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 116,
        "start_column": 11,
        "end_line": 116,
        "end_column": 16,
        "file": "ZKLib/CommitmentScheme/Fold.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\nn deg : \u2115\n\u03b6 : R\u02e3\nhPrim : IsPrimitiveRoot \u03b6 (2 ^ n)\np : \u21a5R\u2983< 2 * n\u2984[X]\npEven pOdd : R[X]\n\u22a2 pEven \u2208 R\u2983< n\u2984[X]",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/CommitmentScheme/Fold.lean#L116"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "07d80c2b30e621cbb3ff8f76e1e4bd9a19a6f944bebb69546a51ff009925cfad"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 116,
        "start_column": 26,
        "end_line": 116,
        "end_column": 31,
        "file": "ZKLib/CommitmentScheme/Fold.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\nn deg : \u2115\n\u03b6 : R\u02e3\nhPrim : IsPrimitiveRoot \u03b6 (2 ^ n)\np : \u21a5R\u2983< 2 * n\u2984[X]\npEven pOdd : R[X]\n\u22a2 pOdd \u2208 R\u2983< n\u2984[X]",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/CommitmentScheme/Fold.lean#L116"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "6f76e4e04b3350e552e44b1ed707c366488788146c6e607a7b7d545d0e7c91bc"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 219,
        "start_column": 6,
        "end_line": 219,
        "end_column": 11,
        "file": "ZKLib/CommitmentScheme/MerkleTree.lean"
      },
      "debug_info": {
        "goal": "case succ\n\u03b1 : Type\ninst\u271d\u00b2 : DecidableEq \u03b1\ninst\u271d\u00b9 : Inhabited \u03b1\ninst\u271d : Fintype \u03b1\nhash : \u03b1 \u00d7 \u03b1 \u2192 \u03b1\nn : \u2115\nih :\n  \u2200 (leaves : List.Vector \u03b1 (2 ^ n)) (i : Fin (2 ^ n)),\n    (simulateQ (implement_with_function \u03b1 hash)\n        (do\n          let cache \u2190 buildMerkleTree \u03b1 n leaves\n          let proof : List.Vector \u03b1 n := generateProof \u03b1 i cache\n          verifyProof \u03b1 i leaves[i] (getRoot \u03b1 cache) proof\n          pure PUnit.unit)\n        ()).neverFails\nleaves : List.Vector \u03b1 (2 ^ (n + 1))\ni : Fin (2 ^ (n + 1))\n\u22a2 ((((Option.elimM (OptionT.run (buildMerkleTree \u03b1 (n + 1) leaves)) (FreeMonad.pure none)\n                (OptionT.run \u2218 fun cache =>\n                  verifyProof \u03b1 i (leaves.get i) (getRoot \u03b1 cache) (generateProof \u03b1 i cache))).mapM\n            fun {\u03b1_1} q =>\n            match \u03b1_1, q with\n            | .((spec \u03b1).range i), query i (left, right) => pure (hash (left, right))) >>=\n          fun __do_lift => __do_lift.getM)\n        ()).neverFailsWhen\n    fun {\u03b1} x => Set.univ",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/CommitmentScheme/MerkleTree.lean#L219"
      },
      "metadata": {
        "blame_email_hash": "ab200eba5736",
        "blame_date": "2025-04-16T13:24:09-07:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "43889a1a7606b72b0436f86852a487ee3fd08b37730bf5b68a68a72721251bd5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 186,
        "start_column": 33,
        "end_line": 186,
        "end_column": 38,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\nC : Set (n \u2192 R)\ninst\u271d : Fintype \u2191C\nh : \u00acSubsingleton \u2191C\n\u22a2 \u2016C\u2016\u2080' \u2260 \u22a4",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/CodingTheory/Basic.lean#L186"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "ba61a29e7353d17ab6978d75f7d029ea91f5864b4edcc9a9d651818078ccee69"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 187,
        "start_column": 4,
        "end_line": 187,
        "end_column": 9,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "case neg\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\nC : Set (n \u2192 R)\ninst\u271d : Fintype \u2191C\nh : \u00acSubsingleton \u2191C\nthis : \u2016C\u2016\u2080' \u2260 \u22a4\n\u22a2 ENat.toNat (Finset.image (fun x => \u0394\u2080(\u2191x.1, \u2191x.2)) {p | \u00acp.1 = p.2}).min =\n    sInf {d | \u2203 u \u2208 C, \u2203 v \u2208 C, \u00acu = v \u2227 \u0394\u2080(u, v) \u2264 d}",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/CodingTheory/Basic.lean#L187"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "e4e53d1b3989627c4103f8497c1808d2bbd3aed8937c0b270d915d50ca0293a8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 231,
        "start_column": 4,
        "end_line": 231,
        "end_column": 9,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "case e_a.h.h\u2081.intro.intro.intro.intro.intro\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : CommSemiring R\nC : Submodule R (n \u2192 R)\nd : \u2115\nu : n \u2192 R\nhu : u \u2208 C\nv : n \u2192 R\nhv : v \u2208 C\nhuv : \u00acu = v\nhDist : \u0394\u2080(u, v) \u2264 d\n\u22a2 \u2203 u \u2208 C, \u00acu = 0 \u2227 \u2016u\u2016\u2080 \u2264 d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/CodingTheory/Basic.lean#L231"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "a3e54fa1309ab52d8d0a066289bc48facf0c4b4c9282768ce33b1aee48d885aa"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 234,
        "start_column": 4,
        "end_line": 234,
        "end_column": 9,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "case e_a.h.h\u2082.intro.intro.intro\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : CommSemiring R\nC : Submodule R (n \u2192 R)\nd : \u2115\nu : n \u2192 R\nhu : u \u2208 C\nhNorm : \u00acu = 0\nhDist : \u2016u\u2016\u2080 \u2264 d\n\u22a2 \u2203 u \u2208 C, \u2203 v \u2208 C, \u00acu = v \u2227 \u0394\u2080(u, v) \u2264 d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/CodingTheory/Basic.lean#L234"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "aac093e408e3da2d1aaf4d26b1271dd25eee3f48c41e4891b5ab213ea59dfba6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 269,
        "start_column": 67,
        "end_line": 269,
        "end_column": 72,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : Finite R\nC : Set (n \u2192 R)\n\u22a2 card \u2191C \u2264 card R ^ (card n - \u2016C\u2016\u2080 + 1)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/CodingTheory/Basic.lean#L269"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-26T22:44:38-04:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "ea8ff4e3da702c8356f6676a19ab647cccc40f6864be854fe3f0eca3a342106f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 275,
        "start_column": 65,
        "end_line": 275,
        "end_column": 70,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b3 : Fintype n\nR : Type u_2\ninst\u271d\u00b2 : DecidableEq R\ninst\u271d\u00b9 : Finite R\ninst\u271d : DivisionRing R\nC : Submodule R (n \u2192 R)\n\u22a2 Module.finrank R \u21a5C \u2264 card n - \u2016C.carrier\u2016\u2080 + 1",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/CodingTheory/Basic.lean#L275"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-26T22:44:38-04:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "8d890da4ddb762c3a2ed00e0b4a68263584b083a106af139cb4864c624b280ab"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 34,
        "start_column": 14,
        "end_line": 34,
        "end_column": 19,
        "file": "ZKLib/Data/MlPoly/Equiv.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\n\u22a2 Function.LeftInverse ofSpec toSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/MlPoly/Equiv.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "d819b1ea9d029c55643f1fb4207d254ac295be1666f680f71fb0607d5b1b9e54"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 35,
        "start_column": 15,
        "end_line": 35,
        "end_column": 20,
        "file": "ZKLib/Data/MlPoly/Equiv.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\n\u22a2 Function.RightInverse ofSpec toSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/MlPoly/Equiv.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "24db2c36d77fc5f3a271dbb6f6b0a6406ca4876ee547d5379549515d7f2faa76"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 43,
        "start_column": 2,
        "end_line": 43,
        "end_column": 7,
        "file": "ZKLib/Data/MlPoly/Equiv.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\np q : MlPoly R n\n\u22a2 (p + q).toSpec = p.toSpec + q.toSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/MlPoly/Equiv.lean#L43"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "4c4efeb3c8dc3c9142743aea6f0aa9698a6ff2a8e37b326f5bb75e092c045d35"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 47,
        "start_column": 2,
        "end_line": 47,
        "end_column": 7,
        "file": "ZKLib/Data/MlPoly/Equiv.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : CommSemiring R\nn : \u2115\nS : Type u_2\ninst\u271d : CommSemiring S\nf : R \u2192+* S\np : MlPoly R n\nx : Vector S n\n\u22a2 p.eval\u2082 f x = MvPolynomial.eval\u2082 f x.get \u2191p.toSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/MlPoly/Equiv.lean#L47"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "1dc3ed7fda36809e80798eb4025c4b5f1aec8700241736e8024db6dd80a24480"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 77,
        "start_column": 2,
        "end_line": 77,
        "end_column": 7,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : AddCommMonoid R\nn : \u2115\na : R\nb : Vector R n\nc : R\nd : Vector R n\n\u22a2 List.foldl (fun x1 x2 => x1 + x2) (a * c) (List.zipWith (fun x1 x2 => x1 * x2) b.toList d.toList) =\n    a * c + Array.foldl (fun x1 x2 => x1 + x2) 0 (Array.zipWith (fun x1 x2 => x1 * x2) b.toArray d.toArray) 0 n",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/MlPoly/Basic.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-14T11:09:39-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "31e34f6d190f89547132b52c3e17bfd3bc614fefd1e4563fd96b799c1c855a5c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 81,
        "start_column": 2,
        "end_line": 81,
        "end_column": 7,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : AddCommMonoid R\nn : \u2115\na : R\nb : Vector R n\nc : R\nd : Vector R n\n\u22a2 (cons a b).get \u2b1d\u1d65 (cons c d).get = a * c + b.get \u2b1d\u1d65 d.get",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/MlPoly/Basic.lean#L81"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-14T11:09:39-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "4c9fb75759a0413bb33e73bfbf96e85b76228c0a286f27a2b285fbb5e50c6aa2"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 138,
        "start_column": 20,
        "end_line": 138,
        "end_column": 25,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a b c : MlPoly R n), a + b + c = a + (b + c)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/MlPoly/Basic.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "b458527daaae654e11f9d087e230d734192a8d54b5d029e3f0712dcb8f65e590"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 141,
        "start_column": 19,
        "end_line": 141,
        "end_column": 24,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a : MlPoly R n), 0 + a = a",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/MlPoly/Basic.lean#L141"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "9eb020d8f7444b6a9688ac15fb016ee5d28203f97243d39ae3f781b18a10a654"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 142,
        "start_column": 19,
        "end_line": 142,
        "end_column": 24,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a : MlPoly R n), a + 0 = a",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/MlPoly/Basic.lean#L142"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "9cb3b43719742ba7f7703b0d5deedd9b2b4ae1fcca88a8f3ae67f59dad3d124c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 144,
        "start_column": 21,
        "end_line": 144,
        "end_column": 26,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (x : MlPoly R n), nsmul 0 x = 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/MlPoly/Basic.lean#L144"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "5e076d1b8ab2d5563c74719aa3f7a96037cc3adc038bbccb7d85a2b449df7884"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 145,
        "start_column": 21,
        "end_line": 145,
        "end_column": 26,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (n_1 : \u2115) (x : MlPoly R n), nsmul (n_1 + 1) x = nsmul n_1 x + x",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/MlPoly/Basic.lean#L145"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "14476a503a8cda6b10cc901be93f4d8683930b443f90c596922300048ba9fd83"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 139,
        "start_column": 19,
        "end_line": 139,
        "end_column": 24,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a b : MlPoly R n), a + b = b + a",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/MlPoly/Basic.lean#L139"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "48bd260ed2579db61b50a7cdd1a1df42d4693e493300d466ea0b3821d6a0a110"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 151,
        "start_column": 17,
        "end_line": 151,
        "end_column": 22,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : Semiring R\n\u22a2 \u2200 (b : MlPoly R n), 1 \u2022 b = b",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/MlPoly/Basic.lean#L151"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "700b56112cf1a57967a0d3663a1761429e2bfb1cb1362753ffcfaccb9bf4afac"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 156,
        "start_column": 18,
        "end_line": 156,
        "end_column": 23,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : Semiring R\n\u22a2 \u2200 (x : MlPoly R n), 0 \u2022 x = 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/MlPoly/Basic.lean#L156"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "5526b220efcc76968f4f572092e4aa4e2f3c587d689ef9a9d5c4c44e84e11ac6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 374,
        "start_column": 43,
        "end_line": 374,
        "end_column": 48,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b1 : Fin n \u2192 Sort u\nl : List \u2115\nn' : \u2115\nl' : List \u2115\nmotive : Fin (n' :: l').sum \u2192 Sort u_1\ncases : (n : \u2115) \u2192 (h : n \u2208 n' :: l') \u2192 (i : Fin n) \u2192 motive (castSum (n' :: l') h i)\ni : Fin (n' + l'.sum)\nhi : \u00ac\u2191i < n'\n\u22a2 \u2191i - n' < l'.sum",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/Math/Fin.lean#L374"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-07T14:25:30-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "44c5495fe3adb3bc19cae1ee4cccaf989ef2104b1a468d20fca1d81d54fbc629"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 402,
        "start_column": 16,
        "end_line": 402,
        "end_column": 21,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "case ind\nn\u271d n : \u2115\nIH : \u2200 m < n, \u2200 {a : Fin m \u2192 \u2115}, (List.ofFn fun i => List.ofFn (ranges a i)) = (List.ofFn a).ranges\na : Fin n \u2192 \u2115\n\u22a2 (List.ofFn fun i => List.ofFn (ranges a i)) = (List.ofFn a).ranges",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/Math/Fin.lean#L402"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-11T17:39:02-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "462247e4337b889ffa3e2679a7d05f7f3f1bc94c41ea1887340a1d03a03cb6c8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 497,
        "start_column": 32,
        "end_line": 497,
        "end_column": 37,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "\u22a2 True",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/Math/Fin.lean#L497"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-11T17:39:02-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "7414900794318c7be53d57541ef1dabd4c50be792e9b1a472c5e761df968e33e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 499,
        "start_column": 35,
        "end_line": 499,
        "end_column": 40,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "\u22a2 True",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/Math/Fin.lean#L499"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-11T17:39:02-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "0b18139fdbc032ed966090198159aa0e61be0b1c925c667be3d33fcbf66abf03"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 501,
        "start_column": 36,
        "end_line": 501,
        "end_column": 41,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "\u22a2 True",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/Math/Fin.lean#L501"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-11T17:39:02-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "0e37cf71a90b8719e059080c2be0cd0deeb25511e4d91770b1473a0aa1e79a96"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 557,
        "start_column": 4,
        "end_line": 557,
        "end_column": 9,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "l : List \u2115\nj a : \u2115\nl' : List \u2115\nh : j < a + l'.sum\n\u22a2 \u2203 n, (a :: l').findSum j = some n",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/Math/Fin.lean#L557"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-03-14T00:01:07-04:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "f8674b44292035057d85f0524e74138b7ec5afc82f058a4f31ad5118811bd206"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 569,
        "start_column": 80,
        "end_line": 569,
        "end_column": 85,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d\u00b2 : AddMonoid \u03b1\ninst\u271d\u00b9 : Preorder \u03b1\ninst\u271d : DecidableRel fun x1 x2 => x1 < x2\nl : List \u2115\nj : Fin l.sum\n\u22a2 l.findSumIdx \u2191j < l.length",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/Math/Fin.lean#L569"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-03-14T00:01:07-04:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "c1399efaeec9dc054a5b455ec331b2e1e3b5833f77359a5ebe3083f0994324e5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 155,
        "start_column": 2,
        "end_line": 155,
        "end_column": 7,
        "file": "ZKLib/Data/Math/Operations.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nunit : \u03b1\nl l' : List \u03b1\nm n n' : \u2115\nh : n \u2264 m\nh' : n' \u2264 m\nhEq : rightpad n unit l = rightpad n' unit l'\nhLen : n \u2294 l.length = n' \u2294 l'.length\n\u22a2 l ++ replicate (n - l.length + (m - n' \u2294 l'.length)) unit =\n    l' ++ replicate (n' - l'.length + (m - n' \u2294 l'.length)) unit",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/Math/Operations.lean#L155"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "bb389bd4e208f24be54aa5992d4508108334e8a14c568a4fd2b9af7d9cc60f39"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 209,
        "start_column": 5,
        "end_line": 209,
        "end_column": 10,
        "file": "ZKLib/Data/Math/Operations.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nl\u2081 l\u2082 : List \u03b1\nunit : \u03b1\n\u22a2 (fun x =>\n        match x with\n        | (x, y) => x = y)\n      (l\u2081.matchSize l\u2082 unit) \u2194\n    \u2200 (i : \u2115), l\u2081.getD i unit = l\u2082.getD i unit",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/Math/Operations.lean#L209"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-14T17:35:17-06:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "341c25d29b2044e180577ee26e6736ef028afc87ddae8679cac235bc5dcf02ec"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 257,
        "start_column": 2,
        "end_line": 257,
        "end_column": 7,
        "file": "ZKLib/Data/Math/Operations.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\na : Array \u03b1\nn : \u2115\nunit : \u03b1\ni : \u2115\nh\u271d : i < (rightpad n unit a).size\nh : i < { toList := List.rightpad n unit a.toList }.size\n\u22a2 { toList := List.rightpad n unit a.toList }[i] = a.getD i unit",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/Math/Operations.lean#L257"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "8935bbf7e5623d9504217466c1e5b061d9291c82da37d751bc6e28df88c0dd3e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 391,
        "start_column": 75,
        "end_line": 391,
        "end_column": 80,
        "file": "ZKLib/Data/Math/Operations.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\np : \u03b1 \u2192 Bool\nas : Array \u03b1\nh : (popWhile p as).size > 0\n\u22a2 \u00acp ((popWhile p as).getLast h) = true",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/Math/Operations.lean#L391"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-14T17:35:17-06:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "0f9edf7128742696ab6b657af7e2ae03628666e97e2cf6a0276e6efbda71ab85"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 75,
        "start_column": 2,
        "end_line": 75,
        "end_column": 7,
        "file": "ZKLib/Data/MvPolynomial/Sumcheck.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\n\u03c3 : Type u_3\n\u03c3\u2081 : Type u_4\n\u03c3\u2082 : Type u_5\nx : \u03c3\u2081 \u2192 R\nf : \u03c3 \u2192 \u03c3\u2081 \u2295 \u03c3\u2082\np : R[X \u03c3]\nb : \u03c3\u2081 \u2192\u2080 \u2115\nh : \u00accoeff b ((sumToIter R \u03c3\u2081 \u03c3\u2082) ((rename f) p)) = 0\n\u22a2 (coeff b ((sumToIter R \u03c3\u2081 \u03c3\u2082) ((rename f) p))).degrees \u2264 Multiset.filterMap Sum.getRight? (Multiset.map f p.degrees)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/MvPolynomial/Sumcheck.lean#L75"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-16T12:52:41-06:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "7cdc181f3900408da3b3220ec32474550ffafc134eeb61b32f3cbbe12f1db5fc"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 112,
        "start_column": 2,
        "end_line": 112,
        "end_column": 7,
        "file": "ZKLib/Data/MvPolynomial/Sumcheck.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\nh : n > 0\nD : Fin (n - 1) \u2192 Finset R\np : R[X Fin n]\n\u22a2 ((sumExceptFirst' n h D) p).degree \u2264 \u2191(degreeOf \u27e80, h\u27e9 p)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/MvPolynomial/Sumcheck.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-13T15:50:48-04:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "0b0cb5f6333473e16b67f0d043776f91ad501a0be14d93744baa94c6bbda9273"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 69,
        "start_column": 58,
        "end_line": 69,
        "end_column": 63,
        "file": "ZKLib/Data/MvPolynomial/Interpolation.lean"
      },
      "debug_info": {
        "goal": "\u03c3 : Type u_1\ninst\u271d\u2074 : DecidableEq \u03c3\ninst\u271d\u00b3 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : IsDomain R\ninst\u271d : DecidableEq R\np : R[X \u03c3]\nhp : p \u2260 0\nS : \u03c3 \u2192 Finset R\n\u22a2 \u2191(#({x \u2208 p.vars.pi S | (eval (extendDomain x)) p = 0})) / \u220f i \u2208 p.vars, \u2191(#(S i)) \u2264\n    \u2211 i \u2208 p.vars, \u2191(degreeOf i p) / \u2191(#(S i))",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/MvPolynomial/Interpolation.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-30T15:40:43-04:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "a6c4939cb41cb5248b0751bb5e20935738aee0f941091c542e3d10de23d75e39"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 171,
        "start_column": 76,
        "end_line": 171,
        "end_column": 81,
        "file": "ZKLib/Data/MvPolynomial/Interpolation.lean"
      },
      "debug_info": {
        "goal": "\u03c3 : Type u_1\ninst\u271d\u00b3 : DecidableEq \u03c3\ninst\u271d\u00b2 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b9 : CommRing R\ninst\u271d : IsDomain R\np q : R[X \u03c3]\nS : \u03c3 \u2192 Finset R\nhDegree : \u2200 (i : \u03c3), degreeOf i p < #(S i)\nhEval : \u2200 x \u2208 piFinset fun i => S i, (eval x) p = (eval x) q\n\u22a2 p = q",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/MvPolynomial/Interpolation.lean#L171"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-30T15:40:43-04:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "cee617934d5484e95fe028960d0461cafc9b06d80394b7818c1416b17e09e96e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 95,
        "start_column": 16,
        "end_line": 95,
        "end_column": 21,
        "file": "ZKLib/Data/BinaryTowerField/Basic.lean"
      },
      "debug_info": {
        "goal": "case succ\nk : \u2115\na\u271d : k > 0 \u2192 AdjoinRoot (poly k) = Field k\nk_pos : k + 1 > 0\n\u22a2 AdjoinRoot (poly (k + 1)) = Field (k + 1)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/BinaryTowerField/Basic.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-30T10:53:02+05:30",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "4bd16fa91219c80fb12935e2cea21d43a56cfa2a23b08101decc83eb48c3d7bb"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 115,
        "start_column": 59,
        "end_line": 115,
        "end_column": 64,
        "file": "ZKLib/Data/BinaryTowerField/Basic.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 Irreducible (poly n)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/BinaryTowerField/Basic.lean#L115"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2024-06-18T17:58:42-04:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "52f12f5165ec8b1a80434247957b69574fce2028b50d87455b62b5d18c403ee2"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 197,
        "start_column": 21,
        "end_line": 197,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic-old.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 Function.LeftInverse TropicallyBoundPolynomial.toPolynomial' Polynomial'.toTropicallyBoundPolynomial",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/UniPoly/Basic-old.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-07T14:00:27-04:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "0574cbe36d460f7f43c27e609e72b1b11eed0d7441eb2982e8d20ceb2e7fe156"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 198,
        "start_column": 22,
        "end_line": 198,
        "end_column": 27,
        "file": "ZKLib/Data/UniPoly/Basic-old.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 Function.RightInverse TropicallyBoundPolynomial.toPolynomial' Polynomial'.toTropicallyBoundPolynomial",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/UniPoly/Basic-old.lean#L198"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-07T14:00:27-04:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "60888638de7c8bbb9e43f0168f922eccb37d537d2c42a85d8b62dc8fee46c1e7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 199,
        "start_column": 21,
        "end_line": 199,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic-old.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 \u2200 (x y : Polynomial' R),\n    { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n            left_inv := \u22ef, right_inv := \u22ef }.toFun\n        (x * y) =\n      { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          x *\n        { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/UniPoly/Basic-old.lean#L199"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-07T14:00:27-04:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "a6ea4aa32264c3aab0ec2d54594f0aaa54abb7713586a071ea08557776b235e5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 200,
        "start_column": 21,
        "end_line": 200,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic-old.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 \u2200 (x y : Polynomial' R),\n    { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n            left_inv := \u22ef, right_inv := \u22ef }.toFun\n        (x + y) =\n      { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          x +\n        { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/UniPoly/Basic-old.lean#L200"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-07T14:00:27-04:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "ffe8fd36c4ab85bd9dbc01e5e807f3dc385b25da79971479e7231e681bbbbdc6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 571,
        "start_column": 2,
        "end_line": 571,
        "end_column": 7,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "Q : Type u_2\ninst\u271d : Ring Q\np q : UniPoly Q\ni : \u2115\nhi : i < Array.size (p.add_raw q)\n\u22a2 (p ++ mkArray (Array.size q - Array.size p) 0)[i] + (q ++ mkArray (Array.size p - Array.size q) 0)[i] =\n    p[i]?.getD 0 + q[i]?.getD 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/UniPoly/Basic.lean#L571"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "fb5fdb4ceb176af55f94fe046a7595eb1b11e3f90d4bd097c327822be9866386"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 899,
        "start_column": 4,
        "end_line": 899,
        "end_column": 9,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "Q : Type u_2\ninst\u271d : Ring Q\np q r : UniPoly Q\nhpq : p ++ mkArray (Array.size q - Array.size p) 0 = q ++ mkArray (Array.size p - Array.size q) 0\nhqr : q ++ mkArray (Array.size r - Array.size q) 0 = r ++ mkArray (Array.size q - Array.size r) 0\n\u22a2 p ++ mkArray (Array.size r - Array.size p) 0 = r ++ mkArray (Array.size p - Array.size r) 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/UniPoly/Basic.lean#L899"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "7f1c346dc03c802aea3295434e16b7d79660219509051cb7e2f16ef680e9b716"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 975,
        "start_column": 6,
        "end_line": 975,
        "end_column": 11,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : Ring R\ninst\u271d : BEq R\np : UniPoly R\n\u22a2 (p.toPoly, Tropical.trop (OrderDual.toDual p.degreeBound)) \u2208 TropicallyBoundPoly R",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/UniPoly/Basic.lean#L975"
      },
      "metadata": {
        "blame_email_hash": "ab200eba5736",
        "blame_date": "2025-03-12T19:59:09-07:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "6ad3ffa84bd5dc72c7e500eddb86aba6335afcc9a9e74d1177566cc83894b87b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 1005,
        "start_column": 22,
        "end_line": 1005,
        "end_column": 27,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 Function.RightInverse TropicallyBoundPolynomial.toUniPoly UniPoly.toTropicallyBoundPolynomial",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/UniPoly/Basic.lean#L1005"
      },
      "metadata": {
        "blame_email_hash": "94b4cc0e139f",
        "blame_date": "2024-05-31T16:31:08-04:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "395325b38026c6e65e9d243b729db5c4ed876f65ea65dbc85365f1809e95f1fa"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 1006,
        "start_column": 21,
        "end_line": 1006,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 \u2200 (x y : UniPoly R),\n    { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n            right_inv := \u22ef }.toFun\n        (x * y) =\n      { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          x *\n        { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/UniPoly/Basic.lean#L1006"
      },
      "metadata": {
        "blame_email_hash": "94b4cc0e139f",
        "blame_date": "2024-05-31T16:31:08-04:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "c3d94564327a70e1a86690adccd7ba9d128ee75cb0ea178183abc16642711f06"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 1007,
        "start_column": 21,
        "end_line": 1007,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 \u2200 (x y : UniPoly R),\n    { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n            right_inv := \u22ef }.toFun\n        (x + y) =\n      { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          x +\n        { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/Data/UniPoly/Basic.lean#L1007"
      },
      "metadata": {
        "blame_email_hash": "94b4cc0e139f",
        "blame_date": "2024-05-31T16:31:08-04:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "a75a3eb7ba86b2fa3eaff48eb80a266975b516a94cfd3a9edd0757a5fb0341ba"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 254,
        "start_column": 2,
        "end_line": 254,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "case h\nm n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\nT : pSpec\u2081.FullTranscript\nT' : pSpec\u2082.FullTranscript\ni : Fin m\n\u22a2 _root_.cast \u22ef (T i) = (\u22ef \u25b8 T) i",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/OracleReduction/Composition/Sequential.lean#L254"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-07T12:49:22-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "ed7c885c08dd3f5ce7a4b4727085a84b5dec034c46bad56885b93e4eb1dc30e6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 556,
        "start_column": 55,
        "end_line": 556,
        "end_column": 60,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u22a2 (compose 0 (fun x => n) fun x => pSpec) = pSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/OracleReduction/Composition/Sequential.lean#L556"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-18T18:57:31+07:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "2eaaf9f7df93cb16a0e1bd2a4a449e5bef19d017586a05ad47fad82f1a21d225"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 572,
        "start_column": 2,
        "end_line": 572,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "m : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\ni : Fin m\n\u22a2 compose (\u2191i + 1) (Fin.take (\u2191i + 2) \u22ef n) (Fin.take (\u2191i + 2) \u22ef pSpec) =\n    cast \u22ef (compose (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) (Fin.take (\u2191i + 1) \u22ef pSpec) ++\u209a pSpec i.succ)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/OracleReduction/Composition/Sequential.lean#L572"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-06T19:22:58-03:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "4390550c857f15060be51da87402f5fec06018ebf09918320d1ce528862392aa"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 699,
        "start_column": 2,
        "end_line": 699,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "m n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nO\u2098\u2081 : (i : pSpec\u2081.MessageIndex) \u2192 ToOracle (pSpec\u2081.Message i)\nO\u2098\u2082 : (i : pSpec\u2082.MessageIndex) \u2192 ToOracle (pSpec\u2082.Message i)\ninst\u271d\u00b2 : (i : pSpec\u2081.ChallengeIndex) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b9 : (i : pSpec\u2082.ChallengeIndex) \u2192 Sampleable (pSpec\u2082.Challenge i)\ninst\u271d : oSpec.DecidableEq\nP\u2081 : Prover pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nP\u2082 : Prover pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\nstmt : Stmt\u2081\nwit : Wit\u2081\n\u22a2 run stmt wit (P\u2081.append P\u2082) = do\n    let __discr \u2190 liftM (run stmt wit P\u2081)\n    match __discr with\n      | (stmt\u2082, wit\u2082, transcript\u2081) => do\n        let __discr \u2190 liftM (run stmt\u2082 wit\u2082 P\u2082)\n        match __discr with\n          | (stmt\u2083, wit\u2083, transcript\u2082) => pure (stmt\u2083, wit\u2083, transcript\u2081 ++\u209c transcript\u2082)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/OracleReduction/Composition/Sequential.lean#L699"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-28T16:03:02+07:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "c191d2c9fae41396c22d1e8758acb7a6815e37a980b8ece9410382a8a3b47f81"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 725,
        "start_column": 89,
        "end_line": 725,
        "end_column": 94,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "m n : \u2115\n\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\ninst\u271d\u00b3 : (i : pSpec\u2081.ChallengeIndex) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b2 : (i : pSpec\u2082.ChallengeIndex) \u2192 Sampleable (pSpec\u2082.Challenge i)\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nrel\u2081 : Stmt\u2081 \u2192 Wit\u2081 \u2192 Prop\nrel\u2082 : Stmt\u2082 \u2192 Wit\u2082 \u2192 Prop\nrel\u2083 : Stmt\u2083 \u2192 Wit\u2083 \u2192 Prop\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nR\u2081 : Reduction pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nR\u2082 : Reduction pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\ncompletenessError\u2081 completenessError\u2082 : \u211d\u22650\nh\u2081 : completeness rel\u2081 rel\u2082 R\u2081 completenessError\u2081\nh\u2082 : completeness rel\u2082 rel\u2083 R\u2082 completenessError\u2082\n\u22a2 completeness rel\u2081 rel\u2083 (R\u2081.append R\u2082) (completenessError\u2081 + completenessError\u2082)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/OracleReduction/Composition/Sequential.lean#L725"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-01T17:09:18-07:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "61659af57bca33f689687f2a3dcd971d6cf659752d01b8526533cb34e50dab14"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 752,
        "start_column": 38,
        "end_line": 752,
        "end_column": 43,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nm : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\ninst\u271d\u00b2 : (i : Fin (m + 1)) \u2192 (j : (pSpec i).ChallengeIndex) \u2192 Sampleable ((pSpec i).Challenge j)\nStmt Wit : Fin (m + 2) \u2192 Type\nrel : (i : Fin (m + 2)) \u2192 Stmt i \u2192 Wit i \u2192 Prop\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nR : (i : Fin (m + 1)) \u2192 Reduction (pSpec i) oSpec (Stmt i.castSucc) (Wit i.castSucc) (Stmt i.succ) (Wit i.succ)\ncompletenessError : Fin (m + 1) \u2192 \u211d\u22650\nh : \u2200 (i : Fin (m + 1)), completeness (rel i.castSucc) (rel i.succ) (R i) (completenessError i)\n\u22a2 completeness (rel 0) (rel (Fin.last (m + 1))) (compose m n pSpec Stmt Wit R) (\u2211 i, completenessError i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/OracleReduction/Composition/Sequential.lean#L752"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-06T19:22:58-03:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "3df3a110720d51657a4797ff2e23ca387b64c2c17b5598c8cbc6bd9d22f24020"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 151,
        "start_column": 2,
        "end_line": 151,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nP : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (fun a =>\n        (data.fStmtOut (a.2.2.1, (P.toProverOut.1 a.2.1).1), data.fWitOut (a.2.2.2, (P.toProverOut.1 a.2.1).2),\n          a.1)) <$>\n      Fin.induction (pure (default, P.input (data.fStmtIn stmtIn) (data.fWitIn witIn), stmtIn, witIn))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2.1 a, __discr.2.2)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2, __discr.2.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2.1).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n) =\n    (fun a => (data.fStmtOut (stmtIn, (P.toProverOut.1 a.2).1), data.fWitOut (witIn, (P.toProverOut.1 a.2).2), a.1)) <$>\n      Fin.induction (pure (default, P.input (data.fStmtIn stmtIn) (data.fWitIn witIn)))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2 a)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/OracleReduction/Composition/Virtual.lean#L151"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "e8fbd42e998f8ef351254ce159f17cb362a47fe368a2e7ee162560a0014ed31e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 164,
        "start_column": 2,
        "end_line": 164,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n      (fun a_1 => (a_1, data.fWitOut (witIn, a.2.1), a.2.2)) <$>\n          (Verifier.run stmtIn a.2.2\n                {\n                  verify := fun stmtIn transcript =>\n                    (fun a => data.fStmtOut (stmtIn, a)) <$>\n                      R.verifier.verify (data.fStmtIn stmtIn) transcript }).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 => (data.fStmtOut (stmtIn, a_1), data.fWitOut (witIn, a.2.1), a.2.2)) <$>\n        (Verifier.run (data.fStmtIn stmtIn) a.2.2 R.verifier).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/OracleReduction/Composition/Virtual.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "44dd92c68e3a1abb6c3285a3023a176e8e0e615bc285d1e0019cc8c6deadab00"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 177,
        "start_column": 2,
        "end_line": 177,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let __discr \u2190 Prover.runWithLog stmtIn witIn (Prover.transport data R.prover)\n      (fun a => (a.1, __discr.2.1, __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (Verifier.run stmtIn __discr.2.2.1\n                    {\n                      verify := fun stmtIn transcript =>\n                        (fun a => data.fStmtOut (stmtIn, a)) <$>\n                          R.verifier.verify (data.fStmtIn stmtIn) transcript })).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.runWithLog (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 => (data.fStmtOut (stmtIn, a_1.1), data.fWitOut (witIn, a.2.1), a.2.2.1, a.2.2.2, a_1.2)) <$>\n        (simulateQ loggingOracle (Verifier.run (data.fStmtIn stmtIn) a.2.2.1 R.verifier)).run.liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/OracleReduction/Composition/Virtual.lean#L177"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "57e3055f82f8542bc11a6d510dd4dcdb21037b90386addf5b331c8671227b26c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 214,
        "start_column": 2,
        "end_line": 214,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn StmtOut StmtIn' StmtOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nlangIn' : Set StmtIn'\nlangOut' : Set StmtOut'\nsoundnessError : \u211d\u22650\ndata : TransportDataSound StmtIn StmtOut StmtIn' StmtOut' langIn langOut langIn' langOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nh :\n  \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn' WitIn StmtOut' WitOut),\n    \u2200 stmtIn \u2209 langIn',\n      [fun x =>\n          match x with\n          | (stmtOut, fst, snd) => stmtOut \u2209 langOut'|run stmtIn witIn { prover := prover, verifier := V }] \u2264\n        \u2191soundnessError\nstmtIn hStmtIn : Type\nWitIn : stmtIn\nWitOut : Prover pSpec oSpec StmtIn stmtIn StmtOut hStmtIn\nwitIn : StmtIn\nprover : witIn \u2209 langIn\n\u22a2 [fun x =>\n      match x with\n      | (stmtOut, fst, snd) =>\n        stmtOut \u2209\n          langOut|run witIn WitIn { prover := WitOut, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n    \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/OracleReduction/Composition/Virtual.lean#L214"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "bc4aa481e6dfd78677f85edc9e5eb55451062a17154db2e8b74ef2840379b3e2"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 228,
        "start_column": 2,
        "end_line": 233,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "case intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nrelIn' : StmtIn' \u2192 WitIn' \u2192 Prop\nrelOut' : StmtOut' \u2192 WitOut' \u2192 Prop\nsoundnessError : \u211d\u22650\ndata :\n  TransportDataKnowledgeSound StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nE : StraightlineExtractor\nh' :\n  \u2200 (stmtIn : StmtIn') (witIn : WitIn') (prover : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'),\n    [fun x =>\n        match x with\n        | (stmtOut, witOut, transcript, proveQueryLog, snd) =>\n          \u00acrelIn' stmtIn (E stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n            relOut' stmtOut witOut|runWithLog stmtIn witIn { prover := prover, verifier := V }] \u2264\n      \u2191soundnessError\n\u22a2 \u2203 extractor,\n    \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n      [fun x =>\n          match x with\n          | (stmtOut, witOut, transcript, proveQueryLog, snd) =>\n            \u00acrelIn stmtIn (extractor stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n              relOut stmtOut\n                witOut|runWithLog stmtIn witIn\n            { prover := prover, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n        \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/OracleReduction/Composition/Virtual.lean#L228"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "5423d64672bbfb5ef672fa70897af55db2bf375fc1ade430e55396838822a287"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 277,
        "start_column": 4,
        "end_line": 277,
        "end_column": 9,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "x\u271d\u00b3 : StmtIn\nx\u271d\u00b2 : Unit\nx\u271d\u00b9 : StmtOut'\nx\u271d : Unit\np q : \u2124[X]\nt : \u2124\nf : \u2124[X]\nt' r : \u2124\nhRelOut' : eval r f = t'\nhRelIn : eval 0 p * eval 0 q + eval 1 p * eval 1 q = t\n\u22a2 eval r p * eval r q = t'",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/OracleReduction/Composition/Virtual.lean#L277"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "d725bd9389bd874617f61ca5a8cf5127560a31e2c69b40ec05504995853c8f69"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 357,
        "start_column": 2,
        "end_line": 357,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Security/Basic.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nknowledgeError : \u211d\u22650\nhLt : knowledgeError < 1\nextractor : StraightlineExtractor\nhKS :\n  \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n    [fun x =>\n        \u00acrelIn stmtIn (extractor stmtIn x.1 x.2.1 x.2.2.1 x.2.2.2.1) \u2227\n          relOut x.1 x.2.1|runWithLog stmtIn witIn { prover := prover, verifier := verifier }] \u2264\n      \u2191knowledgeError\nWitIn' WitOut' : Type\nwitIn' : WitIn'\nprover : Prover pSpec oSpec StmtIn WitIn' StmtOut WitOut'\nstmtIn : StmtIn\nhStmtIn : \u2200 (x : WitIn), \u00acrelIn stmtIn x\n\u22a2 [fun x => \u2200 (x_1 : WitOut), \u00acrelOut x.1 x_1|run stmtIn witIn' { prover := prover, verifier := verifier }] \u2264\n    \u2191knowledgeError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/OracleReduction/Security/Basic.lean#L357"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "ea8f21f8ce5a93353ccf92d5ed229f4b85e9539eae02eb4ec26760bca268a973"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 378,
        "start_column": 75,
        "end_line": 378,
        "end_column": 80,
        "file": "ZKLib/OracleReduction/Security/Basic.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn StmtOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction langIn langOut verifier\nrbrSoundnessError : pSpec.ChallengeIndex \u2192 \u211d\u22650\n\u22a2 rbrSoundness langIn langOut verifier stateFunction rbrSoundnessError \u2192\n    soundness langIn langOut verifier (\u2211 i, rbrSoundnessError i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/OracleReduction/Security/Basic.lean#L378"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-28T13:43:25-07:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "edce32a8b301a0817b9ac5b0b70498be1bd6eb12675d649654a86d0c037bf22b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 389,
        "start_column": 2,
        "end_line": 389,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Security/Basic.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction (Function.language relIn) (Function.language relOut) verifier\nrbrKnowledgeError : pSpec.ChallengeIndex \u2192 \u211d\u22650\n\u22a2 rbrKnowledgeSoundness relIn relOut verifier stateFunction rbrKnowledgeError \u2192\n    rbrSoundness (Function.language relIn) (Function.language relOut) verifier stateFunction rbrKnowledgeError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/OracleReduction/Security/Basic.lean#L389"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-28T13:43:25-07:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "40f48ed3c99263b2e10d7dbe2ebbe0b86b25e4cd48e74f8f40ecc92c1bd2ffe4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 399,
        "start_column": 82,
        "end_line": 399,
        "end_column": 87,
        "file": "ZKLib/OracleReduction/Security/Basic.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction (Function.language relIn) (Function.language relOut) verifier\nrbrKnowledgeError : pSpec.ChallengeIndex \u2192 \u211d\u22650\n\u22a2 rbrKnowledgeSoundness relIn relOut verifier stateFunction rbrKnowledgeError \u2192\n    knowledgeSoundness relIn relOut verifier (\u2211 i, rbrKnowledgeError i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/OracleReduction/Security/Basic.lean#L399"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-28T13:43:25-07:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "961ec022a499638f0024d7fdd2f8536c18cf191e496d34c996f59501312ce8d5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 267,
        "start_column": 6,
        "end_line": 267,
        "end_column": 11,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "case mk.convert_7.left\nR : Type\ninst\u271d\u00b9 : CommSemiring R\nd m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\ntarget : R\noStmt : (i : Unit) \u2192 InputOracleStatement R d i\nhValid : inputRelation R d D (target, oStmt) ()\npoly : R[X]\nhp : poly \u2208 R\u2983\u2264 \u2191d\u2984[X]\nh : oStmt () = \u27e8poly, hp\u27e9\n\u22a2 ((fun a => ((a, fun x => oStmt ()), (), Transcript.snoc a (Transcript.snoc (oStmt ()) default))) <$>\n      liftM (query (Sum.inr \u27e81, \u22ef\u27e9) ())).neverFails",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L267"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-16T18:04:04-04:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "532937df651a68cc48728c98d5a1ff0325fee5352c49b43f8e7d4630784c0899"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 276,
        "start_column": 27,
        "end_line": 276,
        "end_column": 32,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "case pos\nR : Type\ninst\u271d\u00b9 : CommSemiring R\nd m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\ntarget : R\noStmt : (i : Unit) \u2192 InputOracleStatement R d i\nhValid : inputRelation R d D (target, oStmt) ()\npoly : R[X]\nhp : poly \u2208 R\u2983\u2264 \u2191d\u2984[X]\nh : oStmt () = \u27e8poly, hp\u27e9\nstmt : R\noStmtOut : (i : Unit \u2295 Unit) \u2192 OutputOracleStatement R d i\nfst\u271d : Unit\ntranscript : (pSpec R d).FullTranscript\nh1 : (fun x => oStmt ()) = oStmtOut\nh2 : Transcript.snoc stmt (Transcript.snoc (oStmt ()) default) = transcript\nhEval : \u2211 x, Polynomial.eval (D x) poly = target\n\u22a2 (pure (stmt, fun x => \u27e8poly, hp\u27e9)).neverFailsWhen fun {\u03b1} x => Set.univ",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L276"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-16T18:04:04-04:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "6111c04a4e68eb3006a0bb7b9dddcf61b865af0637d753995ea5e071de87c168"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 488,
        "start_column": 2,
        "end_line": 488,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\ninst\u271d : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\nstmt : Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 OracleStatement R n deg i)\ntranscript : FullTranscript ![(Direction.P_to_V, \u21a5R\u2983\u2264 \u2191deg\u2984[X]), (Direction.V_to_P, R)]\nx : (pSpec R deg).getType 0\nhp_i : \u2191(transcript 0) \u2208 R\u2983\u2264 \u2191deg\u2984[X]\nhEq : transcript 0 = \u27e8\u2191(transcript 0), hp_i\u27e9\n\u22a2 (do\n      let a \u2190\n        ((OptionT.run (mapM (fun i => liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (D i))) (List.finRange m))).bind\n                fun __do_lift =>\n                __do_lift.elim (FreeMonad.pure none)\n                  (OptionT.run \u2218 fun evals => do\n                    if evals.sum = stmt.1.target then pure () else failure\n                    (fun a => { target := a, challenges := Fin.snoc stmt.1.challenges (transcript 1) }) <$>\n                        liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (transcript 1)))).mapM\n            fun {\u03b1} => (ToOracle.simOracle2 oSpec stmt.2 transcript.messages).impl\n      (fun a => (a, fun i_1 => stmt.2 i_1)) <$> a.getM) =\n    (fun a =>\n        ({ target := Polynomial.eval (transcript 1) \u2191(transcript 0),\n            challenges := Fin.snoc stmt.1.challenges (transcript 1) },\n          stmt.2)) <$>\n      if \u2211 x, Polynomial.eval (D x) \u2191(transcript 0) = stmt.1.target then pure () else failure",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L488"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-18T19:07:20+07:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "6dc49d1d12a1b52bac5696362dea8dce3a00c53efffdcfe8ea1c3fb02757809b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 505,
        "start_column": 57,
        "end_line": 505,
        "end_column": 62,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "case left\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 OracleStatement R n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast \u22ef)) \u2191(oStmt 0) =\n    target\n\u22a2 (do\n      let x \u2190\n        ({ prover := prover R n deg D oSpec i,\n                        verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.sendMessage\n                \u27e80, \u22ef\u27e9\n                ({ prover := prover R n deg D oSpec i,\n                          verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.input\n                  ({ target := target, challenges := challenge }, oStmt) witIn\u271d)).liftComp\n            (oSpec ++\u2092 [(pSpec R deg).Challenge]\u2092)\n      let a \u2190 liftM (query (Sum.inr \u27e81, \u22ef\u27e9) ())\n      (fun a_1 =>\n            (a_1,\n              ({ prover := prover R n deg D oSpec i,\n                            verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.toProverOut.1\n                  ({ prover := prover R n deg D oSpec i,\n                            verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.receiveChallenge\n                    \u27e81, \u22ef\u27e9 x.2 a)).2,\n              Transcript.snoc a (Transcript.snoc x.1 default))) <$>\n          (Verifier.run ({ target := target, challenges := challenge }, oStmt)\n                (Transcript.snoc a (Transcript.snoc x.1 default))\n                { prover := prover R n deg D oSpec i,\n                      verifier := oracleVerifier R n deg D oSpec i }.toReduction.verifier).liftComp\n            (oSpec ++\u2092 [(pSpec R deg).Challenge]\u2092)).neverFails",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L505"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "eb93c155c5e6daf83e5c0f84e1044f19ce1a8ab6b86d6b3137e76d80c06c11fa"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 514,
        "start_column": 2,
        "end_line": 514,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "case right\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 OracleStatement R n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast \u22ef)) \u2191(oStmt 0) =\n    target\n\u22a2 \u2200 (a : Statement R n i.succ) (b : (i : Fin 1) \u2192 OracleStatement R n deg i) (a_1 : Unit)\n    (b_1 : (pSpec R deg).FullTranscript),\n    ((a, b), a_1, b_1) \u2208\n        (run ({ target := target, challenges := challenge }, oStmt) witIn\u271d\n            { prover := prover R n deg D oSpec i, verifier := oracleVerifier R n deg D oSpec i }.toReduction).support \u2192\n      match (a, b) with\n      | ({ target := target, challenges := challenges }, oStmt) =>\n        match oStmt 0 with\n        | \u27e8poly, property\u27e9 =>\n          \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n              (MvPolynomial.eval (Fin.append challenges x \u2218 Fin.cast \u22ef)) poly =\n            target",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L514"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-18T19:07:20+07:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "bab20e43474a8d392f2cc1d32c0b499ce9dfc4e05cab6a5e41e60dbde4d9885f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 563,
        "start_column": 4,
        "end_line": 563,
        "end_column": 9,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "R\u271d : Type\ninst\u271d\u2075 : CommSemiring R\u271d\nn\u271d deg\u271d m\u271d : \u2115\nD\u271d : Fin m\u271d \u21aa R\u271d\n\u03b9\u271d : Type\noSpec\u271d : OracleSpec \u03b9\u271d\ninst\u271d\u2074 : VCVCompatible R\u271d\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni\u271d : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ni : Fin (n + 1)\nstmt : Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 OracleStatement R n deg i)\ntr : Transcript (Fin.last 2) (pSpec R deg)\nhFalse :\n  \u00acrelation R n deg D i.succ ({ target := stmt.1.target, challenges := Fin.snoc stmt.1.challenges (tr 1) }, stmt.2) ()\n\u22a2 \u2200 (a : Statement R n i.succ) (b : (i : Fin 1) \u2192 OracleStatement R n deg i),\n    (a, b) \u2208 (Verifier.run stmt tr (verifier R n deg D oSpec i)).support \u2192\n      \u2200 (x : Unit), \u00acrelation R n deg D i.succ (a, b) x",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L563"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "5b49931a16fa8b0d6a386399a5f6f4eb2bf745c16323deedf9f111e83a7233f5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/cache-api",
        "commit": "599e1b747fb7ba932e5391db4771951171e9501c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 638,
        "start_column": 42,
        "end_line": 638,
        "end_column": 47,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\nn deg m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\n\u22a2 OracleReduction.perfectCompleteness (relIn R n deg D) (relOut R n deg) (reduction R n deg)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/599e1b747fb7ba932e5391db4771951171e9501c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L638"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-18T03:53:04.038207+00:00"
      },
      "id": "d400745ba9dafc513beb8d59032c0cf3b53e3ad9c9bbfd36a8c19e316eacaf72"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 60,
        "start_column": 9,
        "end_line": 60,
        "end_column": 14,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b9 : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nWitEquiv : Type\ninst\u271d : ToOracle WitEquiv\nequiv : Witness \u2243 WitEquiv\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 Unit),\n    (OStatement \u2295\u1d65 fun x => WitEquiv) i =\n      match (\u22ef.mpr sorry) i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => (pSpec WitEquiv).Message j",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/ProofSystem/Components.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "7ffd3d922db75d40f946b44438aba510b620a2982a1c4a74e2731203df50aec4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 78,
        "start_column": 2,
        "end_line": 78,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b2 : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nWitEquiv : Type\ninst\u271d\u00b9 : ToOracle WitEquiv\nequiv : Witness \u2243 WitEquiv\nrelIn : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Witness \u2192 Prop\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness relIn (toRelOut Statement Witness OStatement WitEquiv equiv relIn)\n    (oracleReduction oSpec Statement Witness OStatement WitEquiv equiv)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/ProofSystem/Components.lean#L78"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "fc772db9bcf7e738894e93a136a808917fdbc21ef8fa9feb6e039f207ed77a7d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 138,
        "start_column": 9,
        "end_line": 138,
        "end_column": 14,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d\u00b9 : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 \u03b9\u209b\u1d62),\n    (OStatement \u2295\u1d65 OStatement) i =\n      match sorry i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => (pSpec OStatement).Message j",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/ProofSystem/Components.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "e7f6795a0718eab0d12fff84807d0ae131d5658a95883b684e658f0ed24b6d68"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 164,
        "start_column": 2,
        "end_line": 164,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d\u00b2 : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b9 : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (fun x x_1 => rel x) (relOut OStatement)\n    (oracleReduction oSpec Statement OStatement relComp)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/ProofSystem/Components.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "3944a6d743a8507146f2d843b3686808068b3875db1b5fec7fddaa38ad7fdab3"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 255,
        "start_column": 2,
        "end_line": 255,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nOStatement : Type\ninst\u271d\u00b2 : ToOracle OStatement\ninst\u271d\u00b9 : VCVCompatible (Query OStatement)\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (relIn OStatement) (relOut OStatement) (oracleReduction oSpec OStatement)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/ProofSystem/Components.lean#L255"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "298a1f7ee6ec085408946365fbbc6a45c5960697e09beecb368d3f7aceaae074"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 184,
        "start_column": 2,
        "end_line": 184,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Execution.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let a \u2190 (simulateQ loggingOracle (Prover.runToRound (Fin.last n) stmt wit reduction.prover)).run\n      (fun a_1 => (a_1.1, (reduction.prover.toProverOut.1 a.1.2).2, a.1.1)) <$>\n          (simulateQ loggingOracle (reduction.verifier.verify stmt a.1.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190 Prover.run stmt wit reduction.prover\n    (fun a => (a, __discr.2)) <$> (reduction.verifier.verify stmt __discr.2.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/OracleReduction/Execution.lean#L184"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "5217b2840626fa2ca096ff09d25b53afcb76f3045e2f7c275de8b7f8084228dc"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 277,
        "start_column": 2,
        "end_line": 277,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Execution.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\npSpec : ProtocolSpec 1\ninst\u271d : pSpec.ProverOnly\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let __discr \u2190\n        (fun a =>\n              ((reduction.prover.toProverOut.1 a.2).1, (reduction.prover.toProverOut.1 a.2).2, fun i =>\n                match i with\n                | \u27e80, isLt\u27e9 => a.1)) <$>\n            (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp\n              (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n      ((fun a => (a, __discr.2)) <$> reduction.verifier.verify stmt __discr.2.2).liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190\n      (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n    ((fun a =>\n              (a, (reduction.prover.toProverOut.1 __discr.2).2, fun i =>\n                match i with\n                | \u27e80, isLt\u27e9 => __discr.1)) <$>\n            reduction.verifier.verify stmt fun i =>\n              match i with\n              | \u27e80, isLt\u27e9 => __discr.1).liftComp\n        (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/OracleReduction/Execution.lean#L277"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "fab943a010dee77d77397f28027e1cd1c8b60ed044e5702cf3486e388d8b4931"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 66,
        "start_column": 2,
        "end_line": 66,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Equiv.lean"
      },
      "debug_info": {
        "goal": "\u22a2 (do\n      let _ \u2190 liftM (query 0 ())\n      (fun a => (0, \u2191a)) <$> liftM (query 1 ())) =\n    do\n    let y \u2190 liftM (query 1 ())\n    (fun a => (0, \u2191y)) <$> liftM (query 0 ())",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/OracleReduction/Equiv.lean#L66"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "88f1683083d6355c3a12cae60e588e2607583f16e7cb46b75af4a14291891802"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 80,
        "start_column": 4,
        "end_line": 80,
        "end_column": 9,
        "file": "ZKLib/OracleReduction/Equiv.lean"
      },
      "debug_info": {
        "goal": "case h.h.none\n\u22a2 (evalDist (OptionT.bind (liftM (query 1 ())) (OptionT.pure \u2218 fun a => (0, \u2191a)))) none =\n    \u2211' (a : Fin 2), 2\u207b\u00b9 * (evalDist (OptionT.bind (liftM (query 0 ())) (OptionT.pure \u2218 fun a_1 => (0, \u2191a)))) none",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/OracleReduction/Equiv.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-16T18:04:04-04:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "b8fe7ccae6cce56e03fea7af5e84a8ac8eea5c8a8d2fff20737083197f90984d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 85,
        "start_column": 4,
        "end_line": 85,
        "end_column": 9,
        "file": "ZKLib/OracleReduction/Equiv.lean"
      },
      "debug_info": {
        "goal": "case h.h.some.mk\nx y : \u2115\n\u22a2 (Option.elimM ((PMF.uniformOfFintype (Fin 1)).bind fun a => PMF.pure (some a)) (PMF.pure none)\n        (OptionT.run \u2218 evalDist \u2218 fun x => OptionT.bind (liftM (query 1 ())) (OptionT.pure \u2218 fun a => (0, \u2191a))))\n      (some (x, y)) =\n    (Option.elimM ((PMF.uniformOfFintype (Fin 2)).bind fun a => PMF.pure (some a)) (PMF.pure none)\n        (OptionT.run \u2218 evalDist \u2218 fun y => OptionT.bind (liftM (query 0 ())) (OptionT.pure \u2218 fun a => (0, \u2191y))))\n      (some (x, y))",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/OracleReduction/Equiv.lean#L85"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "73506bd73458c263b9f37b4a5b233587c4ba5baaae57bed0bf59903820c55ab5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 102,
        "start_column": 2,
        "end_line": 102,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Equiv.lean"
      },
      "debug_info": {
        "goal": "f : (i : \u2115) \u2192 unifSpec.domain i \u2192 Fin (i + 1)\n\u22a2 (some (f 0 ()) >>=\n      simulateQ\n          {\n            impl := fun {\u03b1} x =>\n              match \u03b1, x with\n              | .(unifSpec.range i), query i t => some (f i t) } \u2218\n        fun x => (fun a => (0, \u2191a)) <$> lift (query 1 ())) =\n    some (f 1 ()) >>=\n      simulateQ\n          {\n            impl := fun {\u03b1} x =>\n              match \u03b1, x with\n              | .(unifSpec.range i), query i t => some (f i t) } \u2218\n        fun y => (fun a => (0, \u2191y)) <$> lift (query 0 ())",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/OracleReduction/Equiv.lean#L102"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "9e7f0b714ed8db7da94027975f2e71ac469a030fec6654a1cee4964cce7923d9"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 299,
        "start_column": 2,
        "end_line": 299,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/ToOracle.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u2075 : CommRing R\nd : \u2115\ninst\u271d\u2074 : Fintype R\ninst\u271d\u00b3 : DecidableEq R\ninst\u271d\u00b2 : IsDomain R\n\u03c3 : Type\ninst\u271d\u00b9 : Fintype \u03c3\ninst\u271d : DecidableEq \u03c3\na : R[X \u03c3]\nha : \u2200 (s : \u03c3 \u2192\u2080 \u2115), \u00acMvPolynomial.coeff s a = 0 \u2192 \u2200 (i : \u03c3), s i \u2264 d\nb : R[X \u03c3]\nhb : \u2200 (s : \u03c3 \u2192\u2080 \u2115), \u00acMvPolynomial.coeff s b = 0 \u2192 \u2200 (i : \u03c3), s i \u2264 d\nhNe : \u00aca = b\n\u22a2 {q | (MvPolynomial.eval q) a = (MvPolynomial.eval q) b}.card \u2264 Fintype.card \u03c3 * d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/OracleReduction/ToOracle.lean#L299"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "9ff068a5a5eb1e762d23941f64a020273a2933b6ac590b229f3eabd6e1cd724f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 338,
        "start_column": 2,
        "end_line": 338,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/ToOracle.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\nR : Type\ninst\u271d : CommSemiring R\nm : \u2115\nD : Fin m \u21aa R\np : R[X]\n\u22a2 \u2203 x,\n    ((OptionT.run (mapM (fun i => liftM (query (Sum.inr ()) (D i))) (List.finRange m))).mapM fun {\u03b1} =>\n          (statelessOracle spec [fun x => R[X]]\u2092 fun i q => oracle p q).impl) =\n        pure x \u2227\n      x.getM = pure (List.map (fun i => eval (D i) p) (List.finRange m))",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/OracleReduction/ToOracle.lean#L338"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "853d7d163c69cbf2d80a15914466958e956de6b69e372b802252f1789a4ed580"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 100,
        "start_column": 2,
        "end_line": 100,
        "end_column": 7,
        "file": "ZKLib/CommitmentScheme/Fold.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\np : R[X]\n\u22a2 (splitEvenOdd p).1.natDegree \u2264 p.natDegree / 2",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/CommitmentScheme/Fold.lean#L100"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "8ee6e0073142cee0c2686d60a2d781454b64a9cc34af272edebc689823e59ff0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 104,
        "start_column": 2,
        "end_line": 104,
        "end_column": 7,
        "file": "ZKLib/CommitmentScheme/Fold.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\np : R[X]\n\u22a2 (splitEvenOdd p).2.natDegree \u2264 p.natDegree / 2",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/CommitmentScheme/Fold.lean#L104"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "79837c93ca78b254313a1113ef32c67ce735fd6984e8c2dcc2396bd92f0a60b9"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 116,
        "start_column": 11,
        "end_line": 116,
        "end_column": 16,
        "file": "ZKLib/CommitmentScheme/Fold.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\nn deg : \u2115\n\u03b6 : R\u02e3\nhPrim : IsPrimitiveRoot \u03b6 (2 ^ n)\np : \u21a5R\u2983< 2 * n\u2984[X]\npEven pOdd : R[X]\n\u22a2 pEven \u2208 R\u2983< n\u2984[X]",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/CommitmentScheme/Fold.lean#L116"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "dbcf9deae7755aa9648ab81edaa6f3c15a13015df5c35f02dcc003d4ab8461a4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 116,
        "start_column": 26,
        "end_line": 116,
        "end_column": 31,
        "file": "ZKLib/CommitmentScheme/Fold.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\nn deg : \u2115\n\u03b6 : R\u02e3\nhPrim : IsPrimitiveRoot \u03b6 (2 ^ n)\np : \u21a5R\u2983< 2 * n\u2984[X]\npEven pOdd : R[X]\n\u22a2 pOdd \u2208 R\u2983< n\u2984[X]",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/CommitmentScheme/Fold.lean#L116"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "12568b98ce8bf51e3713a7817e0cf591b75be77ee0d14c03a7b8b893f0aebf08"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 219,
        "start_column": 6,
        "end_line": 219,
        "end_column": 11,
        "file": "ZKLib/CommitmentScheme/MerkleTree.lean"
      },
      "debug_info": {
        "goal": "case succ\n\u03b1 : Type\ninst\u271d\u00b2 : DecidableEq \u03b1\ninst\u271d\u00b9 : Inhabited \u03b1\ninst\u271d : Fintype \u03b1\nhash : \u03b1 \u00d7 \u03b1 \u2192 \u03b1\nn : \u2115\nih :\n  \u2200 (leaves : List.Vector \u03b1 (2 ^ n)) (i : Fin (2 ^ n)),\n    (simulateQ (implement_with_function \u03b1 hash)\n        (do\n          let cache \u2190 buildMerkleTree \u03b1 n leaves\n          let proof : List.Vector \u03b1 n := generateProof \u03b1 i cache\n          verifyProof \u03b1 i leaves[i] (getRoot \u03b1 cache) proof\n          pure PUnit.unit)\n        ()).neverFails\nleaves : List.Vector \u03b1 (2 ^ (n + 1))\ni : Fin (2 ^ (n + 1))\n\u22a2 ((((Option.elimM (OptionT.run (buildMerkleTree \u03b1 (n + 1) leaves)) (FreeMonad.pure none)\n                (OptionT.run \u2218 fun cache =>\n                  verifyProof \u03b1 i (leaves.get i) (getRoot \u03b1 cache) (generateProof \u03b1 i cache))).mapM\n            fun {\u03b1_1} q =>\n            match \u03b1_1, q with\n            | .((spec \u03b1).range i), query i (left, right) => pure (hash (left, right))) >>=\n          fun __do_lift => __do_lift.getM)\n        ()).neverFailsWhen\n    fun {\u03b1} x => Set.univ",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/CommitmentScheme/MerkleTree.lean#L219"
      },
      "metadata": {
        "blame_email_hash": "ab200eba5736",
        "blame_date": "2025-04-16T13:24:09-07:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "b77c80521fdc98559c5981f504e1a5a34582369c9ae0fd5e17c7ab29e01fed5d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 186,
        "start_column": 33,
        "end_line": 186,
        "end_column": 38,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\nC : Set (n \u2192 R)\ninst\u271d : Fintype \u2191C\nh : \u00acSubsingleton \u2191C\n\u22a2 \u2016C\u2016\u2080' \u2260 \u22a4",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/CodingTheory/Basic.lean#L186"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "c5f12110a349caf385f483e54ee99b98b4a1435f82cba11fc9d7f5e37c3077d1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 187,
        "start_column": 4,
        "end_line": 187,
        "end_column": 9,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "case neg\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\nC : Set (n \u2192 R)\ninst\u271d : Fintype \u2191C\nh : \u00acSubsingleton \u2191C\nthis : \u2016C\u2016\u2080' \u2260 \u22a4\n\u22a2 ENat.toNat (Finset.image (fun x => \u0394\u2080(\u2191x.1, \u2191x.2)) {p | \u00acp.1 = p.2}).min =\n    sInf {d | \u2203 u \u2208 C, \u2203 v \u2208 C, \u00acu = v \u2227 \u0394\u2080(u, v) \u2264 d}",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/CodingTheory/Basic.lean#L187"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "9754a5c1866b261d8491111be212d77eeda01e32e6082ec2827dcb52ccee1e60"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 231,
        "start_column": 4,
        "end_line": 231,
        "end_column": 9,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "case e_a.h.h\u2081.intro.intro.intro.intro.intro\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : CommSemiring R\nC : Submodule R (n \u2192 R)\nd : \u2115\nu : n \u2192 R\nhu : u \u2208 C\nv : n \u2192 R\nhv : v \u2208 C\nhuv : \u00acu = v\nhDist : \u0394\u2080(u, v) \u2264 d\n\u22a2 \u2203 u \u2208 C, \u00acu = 0 \u2227 \u2016u\u2016\u2080 \u2264 d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/CodingTheory/Basic.lean#L231"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "a8cbf053b2d5f8a55f2dc3a80f3c24dd11664566796df8ba2d8adb4681fd154d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 234,
        "start_column": 4,
        "end_line": 234,
        "end_column": 9,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "case e_a.h.h\u2082.intro.intro.intro\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : CommSemiring R\nC : Submodule R (n \u2192 R)\nd : \u2115\nu : n \u2192 R\nhu : u \u2208 C\nhNorm : \u00acu = 0\nhDist : \u2016u\u2016\u2080 \u2264 d\n\u22a2 \u2203 u \u2208 C, \u2203 v \u2208 C, \u00acu = v \u2227 \u0394\u2080(u, v) \u2264 d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/CodingTheory/Basic.lean#L234"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "c37d2c667f0adac28985b11c7063396af68de532ca353e190984ef47e0278158"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 269,
        "start_column": 67,
        "end_line": 269,
        "end_column": 72,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : Finite R\nC : Set (n \u2192 R)\n\u22a2 card \u2191C \u2264 card R ^ (card n - \u2016C\u2016\u2080 + 1)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/CodingTheory/Basic.lean#L269"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-26T22:44:38-04:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "e72a6ec79b84b3540f8498e22e01bd3e2408d78a62e64a4e416e03739eed1716"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 275,
        "start_column": 65,
        "end_line": 275,
        "end_column": 70,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b3 : Fintype n\nR : Type u_2\ninst\u271d\u00b2 : DecidableEq R\ninst\u271d\u00b9 : Finite R\ninst\u271d : DivisionRing R\nC : Submodule R (n \u2192 R)\n\u22a2 Module.finrank R \u21a5C \u2264 card n - \u2016C.carrier\u2016\u2080 + 1",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/CodingTheory/Basic.lean#L275"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-26T22:44:38-04:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "36444767f28b77a15150fae455f6785cbf3502d62205395dfa0bad4d0a865b19"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 34,
        "start_column": 14,
        "end_line": 34,
        "end_column": 19,
        "file": "ZKLib/Data/MlPoly/Equiv.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\n\u22a2 Function.LeftInverse ofSpec toSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/MlPoly/Equiv.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "c4b57802c82608da13bb47175ede33ef54030469e559c7881f1b1e463ad60603"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 35,
        "start_column": 15,
        "end_line": 35,
        "end_column": 20,
        "file": "ZKLib/Data/MlPoly/Equiv.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\n\u22a2 Function.RightInverse ofSpec toSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/MlPoly/Equiv.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "0c0fe7a845e83f67816781c5cf170669b9420ae82bd8be4e8b930549299fb8f1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 43,
        "start_column": 2,
        "end_line": 43,
        "end_column": 7,
        "file": "ZKLib/Data/MlPoly/Equiv.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\np q : MlPoly R n\n\u22a2 (p + q).toSpec = p.toSpec + q.toSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/MlPoly/Equiv.lean#L43"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "523c6173ee51ca710fdb865349f3e742676eb8458e1b95b53adfdfa87cf32e47"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 47,
        "start_column": 2,
        "end_line": 47,
        "end_column": 7,
        "file": "ZKLib/Data/MlPoly/Equiv.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : CommSemiring R\nn : \u2115\nS : Type u_2\ninst\u271d : CommSemiring S\nf : R \u2192+* S\np : MlPoly R n\nx : Vector S n\n\u22a2 p.eval\u2082 f x = MvPolynomial.eval\u2082 f x.get \u2191p.toSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/MlPoly/Equiv.lean#L47"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "339f30de47f62c144dc8a5ecd680b5a3c80cd506d5ee3e3db5bdef4a0b3d3689"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 77,
        "start_column": 2,
        "end_line": 77,
        "end_column": 7,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : AddCommMonoid R\nn : \u2115\na : R\nb : Vector R n\nc : R\nd : Vector R n\n\u22a2 List.foldl (fun x1 x2 => x1 + x2) (a * c) (List.zipWith (fun x1 x2 => x1 * x2) b.toList d.toList) =\n    a * c + Array.foldl (fun x1 x2 => x1 + x2) 0 (Array.zipWith (fun x1 x2 => x1 * x2) b.toArray d.toArray) 0 n",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/MlPoly/Basic.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-14T11:09:39-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "89ed101d82f1dadf510c9740d9a294451d6032376bffd9f6434c66298ca9321e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 81,
        "start_column": 2,
        "end_line": 81,
        "end_column": 7,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : AddCommMonoid R\nn : \u2115\na : R\nb : Vector R n\nc : R\nd : Vector R n\n\u22a2 (cons a b).get \u2b1d\u1d65 (cons c d).get = a * c + b.get \u2b1d\u1d65 d.get",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/MlPoly/Basic.lean#L81"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-14T11:09:39-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "0f87454ac2e48e6de4f3665ea30ba5b82d1fee2a3b7d77e423402712118d8638"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 138,
        "start_column": 20,
        "end_line": 138,
        "end_column": 25,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a b c : MlPoly R n), a + b + c = a + (b + c)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/MlPoly/Basic.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "95cfcd13a486b8dc3be365b3800277a942abbe1749fd920924fd21bea24d1e42"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 141,
        "start_column": 19,
        "end_line": 141,
        "end_column": 24,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a : MlPoly R n), 0 + a = a",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/MlPoly/Basic.lean#L141"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "153295423240c93248893995d56810dafee1e699d3572c68d2aec91d2383a14f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 142,
        "start_column": 19,
        "end_line": 142,
        "end_column": 24,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a : MlPoly R n), a + 0 = a",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/MlPoly/Basic.lean#L142"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "35704a949ec940c1230ceafbf507228eb8c6cb6f45efb9cad566a3f809ab081f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 144,
        "start_column": 21,
        "end_line": 144,
        "end_column": 26,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (x : MlPoly R n), nsmul 0 x = 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/MlPoly/Basic.lean#L144"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "720a06b9499ec8ef2b1024d92482aac03b1c01f7feeb0fbb3511b9a5449afd67"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 145,
        "start_column": 21,
        "end_line": 145,
        "end_column": 26,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (n_1 : \u2115) (x : MlPoly R n), nsmul (n_1 + 1) x = nsmul n_1 x + x",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/MlPoly/Basic.lean#L145"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "e2e29529f0d2689334d66431ea7e0112931b8f3030b13120c7b5afae6a4a398b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 139,
        "start_column": 19,
        "end_line": 139,
        "end_column": 24,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a b : MlPoly R n), a + b = b + a",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/MlPoly/Basic.lean#L139"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "f799a74b23a1eae6f63232063b5ea0f61c9954750be2ba61ff3670a416a4fbf5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 151,
        "start_column": 17,
        "end_line": 151,
        "end_column": 22,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : Semiring R\n\u22a2 \u2200 (b : MlPoly R n), 1 \u2022 b = b",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/MlPoly/Basic.lean#L151"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "1aead620e6e72a225a233fc4782aeb27fe8f8c2d360dc545ced1f2648a969f38"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 156,
        "start_column": 18,
        "end_line": 156,
        "end_column": 23,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : Semiring R\n\u22a2 \u2200 (x : MlPoly R n), 0 \u2022 x = 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/MlPoly/Basic.lean#L156"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "0d916aba6bbc7a4adcf59fd8c76963858cea6936b3e980ddb522671e83a7325e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 374,
        "start_column": 43,
        "end_line": 374,
        "end_column": 48,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b1 : Fin n \u2192 Sort u\nl : List \u2115\nn' : \u2115\nl' : List \u2115\nmotive : Fin (n' :: l').sum \u2192 Sort u_1\ncases : (n : \u2115) \u2192 (h : n \u2208 n' :: l') \u2192 (i : Fin n) \u2192 motive (castSum (n' :: l') h i)\ni : Fin (n' + l'.sum)\nhi : \u00ac\u2191i < n'\n\u22a2 \u2191i - n' < l'.sum",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/Math/Fin.lean#L374"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-07T14:25:30-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "d4a143b53e06fd8c86ee054d7bfb0011573dfe4bbccac388ac78e4dd3ebbf149"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 402,
        "start_column": 16,
        "end_line": 402,
        "end_column": 21,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "case ind\nn\u271d n : \u2115\nIH : \u2200 m < n, \u2200 {a : Fin m \u2192 \u2115}, (List.ofFn fun i => List.ofFn (ranges a i)) = (List.ofFn a).ranges\na : Fin n \u2192 \u2115\n\u22a2 (List.ofFn fun i => List.ofFn (ranges a i)) = (List.ofFn a).ranges",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/Math/Fin.lean#L402"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-11T17:39:02-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "86dfcffb8ec0e9315f35c68fc034b478ea969311f6cbf2f223b3919cb03c88a0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 497,
        "start_column": 32,
        "end_line": 497,
        "end_column": 37,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "\u22a2 True",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/Math/Fin.lean#L497"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-11T17:39:02-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "c84179129f563e95d3a7ce251f563858ca27bd66656ed07cf51bc5b9b2f5d3f6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 499,
        "start_column": 35,
        "end_line": 499,
        "end_column": 40,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "\u22a2 True",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/Math/Fin.lean#L499"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-11T17:39:02-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "b47ef44e90f252b989d52483bd77874026ed4761aec8e4f75611f2f28908f032"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 501,
        "start_column": 36,
        "end_line": 501,
        "end_column": 41,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "\u22a2 True",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/Math/Fin.lean#L501"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-11T17:39:02-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "b1ab7427d303960ea915671abde4e66e26c1dae668a1e8c96e0d72a261d46f94"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 557,
        "start_column": 4,
        "end_line": 557,
        "end_column": 9,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "l : List \u2115\nj a : \u2115\nl' : List \u2115\nh : j < a + l'.sum\n\u22a2 \u2203 n, (a :: l').findSum j = some n",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/Math/Fin.lean#L557"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-03-14T00:01:07-04:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "3b1d0325d6c57e538dce24cab62beb768813447540572c71daf87f151d586228"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 569,
        "start_column": 80,
        "end_line": 569,
        "end_column": 85,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d\u00b2 : AddMonoid \u03b1\ninst\u271d\u00b9 : Preorder \u03b1\ninst\u271d : DecidableRel fun x1 x2 => x1 < x2\nl : List \u2115\nj : Fin l.sum\n\u22a2 l.findSumIdx \u2191j < l.length",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/Math/Fin.lean#L569"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-03-14T00:01:07-04:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "08206ca8e727f2ae778fcfb6e477de628b8f64055f9966a8b53c46c4c52a5210"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 155,
        "start_column": 2,
        "end_line": 155,
        "end_column": 7,
        "file": "ZKLib/Data/Math/Operations.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nunit : \u03b1\nl l' : List \u03b1\nm n n' : \u2115\nh : n \u2264 m\nh' : n' \u2264 m\nhEq : rightpad n unit l = rightpad n' unit l'\nhLen : n \u2294 l.length = n' \u2294 l'.length\n\u22a2 l ++ replicate (n - l.length + (m - n' \u2294 l'.length)) unit =\n    l' ++ replicate (n' - l'.length + (m - n' \u2294 l'.length)) unit",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/Math/Operations.lean#L155"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "3de3d0b5e6b76c9f5f92f8b3441c2ba89565555bc170651e27302e55ce647287"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 209,
        "start_column": 5,
        "end_line": 209,
        "end_column": 10,
        "file": "ZKLib/Data/Math/Operations.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nl\u2081 l\u2082 : List \u03b1\nunit : \u03b1\n\u22a2 (fun x =>\n        match x with\n        | (x, y) => x = y)\n      (l\u2081.matchSize l\u2082 unit) \u2194\n    \u2200 (i : \u2115), l\u2081.getD i unit = l\u2082.getD i unit",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/Math/Operations.lean#L209"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-14T17:35:17-06:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "8b3af86c89e365106136b2a200a8989cf0401005cbe6680b158a864a322f973e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 257,
        "start_column": 2,
        "end_line": 257,
        "end_column": 7,
        "file": "ZKLib/Data/Math/Operations.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\na : Array \u03b1\nn : \u2115\nunit : \u03b1\ni : \u2115\nh\u271d : i < (rightpad n unit a).size\nh : i < { toList := List.rightpad n unit a.toList }.size\n\u22a2 { toList := List.rightpad n unit a.toList }[i] = a.getD i unit",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/Math/Operations.lean#L257"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "a8798f538df62bc0f610c0441a90ff4c08578ffaf72081b2dc736dae5311b214"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 391,
        "start_column": 75,
        "end_line": 391,
        "end_column": 80,
        "file": "ZKLib/Data/Math/Operations.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\np : \u03b1 \u2192 Bool\nas : Array \u03b1\nh : (popWhile p as).size > 0\n\u22a2 \u00acp ((popWhile p as).getLast h) = true",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/Math/Operations.lean#L391"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-14T17:35:17-06:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "fce917e76702d4a78f35e19cba9e2d5459107575ab008cdfa6b9f426d7d20783"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 75,
        "start_column": 2,
        "end_line": 75,
        "end_column": 7,
        "file": "ZKLib/Data/MvPolynomial/Sumcheck.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\n\u03c3 : Type u_3\n\u03c3\u2081 : Type u_4\n\u03c3\u2082 : Type u_5\nx : \u03c3\u2081 \u2192 R\nf : \u03c3 \u2192 \u03c3\u2081 \u2295 \u03c3\u2082\np : R[X \u03c3]\nb : \u03c3\u2081 \u2192\u2080 \u2115\nh : \u00accoeff b ((sumToIter R \u03c3\u2081 \u03c3\u2082) ((rename f) p)) = 0\n\u22a2 (coeff b ((sumToIter R \u03c3\u2081 \u03c3\u2082) ((rename f) p))).degrees \u2264 Multiset.filterMap Sum.getRight? (Multiset.map f p.degrees)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/MvPolynomial/Sumcheck.lean#L75"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-16T12:52:41-06:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "401b1caa82db712e8e8cec11850a954f954ea59bffa0a77cf483e9712d9d9090"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 112,
        "start_column": 2,
        "end_line": 112,
        "end_column": 7,
        "file": "ZKLib/Data/MvPolynomial/Sumcheck.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\nh : n > 0\nD : Fin (n - 1) \u2192 Finset R\np : R[X Fin n]\n\u22a2 ((sumExceptFirst' n h D) p).degree \u2264 \u2191(degreeOf \u27e80, h\u27e9 p)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/MvPolynomial/Sumcheck.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-13T15:50:48-04:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "3c4a29faf43c79a4dfe59f9909054ece9b9214baba7823d7a6e65dd669ce9744"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 69,
        "start_column": 58,
        "end_line": 69,
        "end_column": 63,
        "file": "ZKLib/Data/MvPolynomial/Interpolation.lean"
      },
      "debug_info": {
        "goal": "\u03c3 : Type u_1\ninst\u271d\u2074 : DecidableEq \u03c3\ninst\u271d\u00b3 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : IsDomain R\ninst\u271d : DecidableEq R\np : R[X \u03c3]\nhp : p \u2260 0\nS : \u03c3 \u2192 Finset R\n\u22a2 \u2191(#({x \u2208 p.vars.pi S | (eval (extendDomain x)) p = 0})) / \u220f i \u2208 p.vars, \u2191(#(S i)) \u2264\n    \u2211 i \u2208 p.vars, \u2191(degreeOf i p) / \u2191(#(S i))",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/MvPolynomial/Interpolation.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-30T15:40:43-04:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "90e145c5466783c996c444578def4cfbac80727f9245cd4835b1a69fe269741f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 171,
        "start_column": 76,
        "end_line": 171,
        "end_column": 81,
        "file": "ZKLib/Data/MvPolynomial/Interpolation.lean"
      },
      "debug_info": {
        "goal": "\u03c3 : Type u_1\ninst\u271d\u00b3 : DecidableEq \u03c3\ninst\u271d\u00b2 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b9 : CommRing R\ninst\u271d : IsDomain R\np q : R[X \u03c3]\nS : \u03c3 \u2192 Finset R\nhDegree : \u2200 (i : \u03c3), degreeOf i p < #(S i)\nhEval : \u2200 x \u2208 piFinset fun i => S i, (eval x) p = (eval x) q\n\u22a2 p = q",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/MvPolynomial/Interpolation.lean#L171"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-30T15:40:43-04:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "420b1c7c4733b9cbc8f9c38ca57eb14cc19e4ea95c23a108ecb3be6efaca510b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 197,
        "start_column": 21,
        "end_line": 197,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic-old.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 Function.LeftInverse TropicallyBoundPolynomial.toPolynomial' Polynomial'.toTropicallyBoundPolynomial",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/UniPoly/Basic-old.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-07T14:00:27-04:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "ca987b58a1573a6f18942234d5afe7a318a24d1977d908707390ab7af7defb69"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 198,
        "start_column": 22,
        "end_line": 198,
        "end_column": 27,
        "file": "ZKLib/Data/UniPoly/Basic-old.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 Function.RightInverse TropicallyBoundPolynomial.toPolynomial' Polynomial'.toTropicallyBoundPolynomial",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/UniPoly/Basic-old.lean#L198"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-07T14:00:27-04:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "2093351baf0d600255ac6bbed4e0ccda3b378f9d559594c2b929f60201078fa2"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 199,
        "start_column": 21,
        "end_line": 199,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic-old.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 \u2200 (x y : Polynomial' R),\n    { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n            left_inv := \u22ef, right_inv := \u22ef }.toFun\n        (x * y) =\n      { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          x *\n        { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/UniPoly/Basic-old.lean#L199"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-07T14:00:27-04:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "6fdea322edad0d109d7a00a9800784e8fb13d36589c4d9285ffd022338970e83"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 200,
        "start_column": 21,
        "end_line": 200,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic-old.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 \u2200 (x y : Polynomial' R),\n    { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n            left_inv := \u22ef, right_inv := \u22ef }.toFun\n        (x + y) =\n      { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          x +\n        { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/UniPoly/Basic-old.lean#L200"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-07T14:00:27-04:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "d7ef3f4c73a28d5a2b9e611794217300bd2433b8836b5d4ed8b5cfcc20ae5b7a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 571,
        "start_column": 2,
        "end_line": 571,
        "end_column": 7,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "Q : Type u_2\ninst\u271d : Ring Q\np q : UniPoly Q\ni : \u2115\nhi : i < Array.size (p.add_raw q)\n\u22a2 (p ++ mkArray (Array.size q - Array.size p) 0)[i] + (q ++ mkArray (Array.size p - Array.size q) 0)[i] =\n    p[i]?.getD 0 + q[i]?.getD 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/UniPoly/Basic.lean#L571"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "a44162a89a08eae39f17a8bf63f3c469fd03f38255c39b589476dbe23b740e58"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 899,
        "start_column": 4,
        "end_line": 899,
        "end_column": 9,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "Q : Type u_2\ninst\u271d : Ring Q\np q r : UniPoly Q\nhpq : p ++ mkArray (Array.size q - Array.size p) 0 = q ++ mkArray (Array.size p - Array.size q) 0\nhqr : q ++ mkArray (Array.size r - Array.size q) 0 = r ++ mkArray (Array.size q - Array.size r) 0\n\u22a2 p ++ mkArray (Array.size r - Array.size p) 0 = r ++ mkArray (Array.size p - Array.size r) 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/UniPoly/Basic.lean#L899"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "1acce869033203d187f2b7197773c89458bcd1b483a6091eb68a0067a11c15c6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 975,
        "start_column": 6,
        "end_line": 975,
        "end_column": 11,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : Ring R\ninst\u271d : BEq R\np : UniPoly R\n\u22a2 (p.toPoly, Tropical.trop (OrderDual.toDual p.degreeBound)) \u2208 TropicallyBoundPoly R",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/UniPoly/Basic.lean#L975"
      },
      "metadata": {
        "blame_email_hash": "ab200eba5736",
        "blame_date": "2025-03-12T19:59:09-07:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "82bb157c722580c0943cc05a7c3849745f04dfb05ee0f47edc9fb65362dc8af1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 1005,
        "start_column": 22,
        "end_line": 1005,
        "end_column": 27,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 Function.RightInverse TropicallyBoundPolynomial.toUniPoly UniPoly.toTropicallyBoundPolynomial",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/UniPoly/Basic.lean#L1005"
      },
      "metadata": {
        "blame_email_hash": "94b4cc0e139f",
        "blame_date": "2024-05-31T16:31:08-04:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "fd7b7a1d9a65657b1b9b618fc2856ab09b2a601947dc20f8dfee79f29fdcf49e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 1006,
        "start_column": 21,
        "end_line": 1006,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 \u2200 (x y : UniPoly R),\n    { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n            right_inv := \u22ef }.toFun\n        (x * y) =\n      { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          x *\n        { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/UniPoly/Basic.lean#L1006"
      },
      "metadata": {
        "blame_email_hash": "94b4cc0e139f",
        "blame_date": "2024-05-31T16:31:08-04:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "f75f548d63865c16471ca7a5b122ae36457ca704e053ed74a0b9c6c3b3a90d30"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 1007,
        "start_column": 21,
        "end_line": 1007,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 \u2200 (x y : UniPoly R),\n    { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n            right_inv := \u22ef }.toFun\n        (x + y) =\n      { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          x +\n        { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/Data/UniPoly/Basic.lean#L1007"
      },
      "metadata": {
        "blame_email_hash": "94b4cc0e139f",
        "blame_date": "2024-05-31T16:31:08-04:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "e4d040947a05176db625d4468e32058c5dedf32812c419a1a6e0250beaafb46f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 254,
        "start_column": 2,
        "end_line": 254,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "case h\nm n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\nT : pSpec\u2081.FullTranscript\nT' : pSpec\u2082.FullTranscript\ni : Fin m\n\u22a2 _root_.cast \u22ef (T i) = (\u22ef \u25b8 T) i",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/OracleReduction/Composition/Sequential.lean#L254"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-07T12:49:22-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "dcf5fb7d480f20e6e6387013095c488d14d66937e67fec9760de0564d8aceae6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 556,
        "start_column": 55,
        "end_line": 556,
        "end_column": 60,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u22a2 (compose 0 (fun x => n) fun x => pSpec) = pSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/OracleReduction/Composition/Sequential.lean#L556"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-18T18:57:31+07:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "0c536146e65fbc483bcc010562d8d37369fbcac8ee05e8889a4aa446d2530f2e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 572,
        "start_column": 2,
        "end_line": 572,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "m : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\ni : Fin m\n\u22a2 compose (\u2191i + 1) (Fin.take (\u2191i + 2) \u22ef n) (Fin.take (\u2191i + 2) \u22ef pSpec) =\n    cast \u22ef (compose (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) (Fin.take (\u2191i + 1) \u22ef pSpec) ++\u209a pSpec i.succ)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/OracleReduction/Composition/Sequential.lean#L572"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-06T19:22:58-03:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "94a5f1f8d76c74cd6aec20368b5ab7cc96a666a0359732a9e3e98727b7bfe685"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 699,
        "start_column": 2,
        "end_line": 699,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "m n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nO\u2098\u2081 : (i : pSpec\u2081.MessageIndex) \u2192 ToOracle (pSpec\u2081.Message i)\nO\u2098\u2082 : (i : pSpec\u2082.MessageIndex) \u2192 ToOracle (pSpec\u2082.Message i)\ninst\u271d\u00b2 : (i : pSpec\u2081.ChallengeIndex) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b9 : (i : pSpec\u2082.ChallengeIndex) \u2192 Sampleable (pSpec\u2082.Challenge i)\ninst\u271d : oSpec.DecidableEq\nP\u2081 : Prover pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nP\u2082 : Prover pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\nstmt : Stmt\u2081\nwit : Wit\u2081\n\u22a2 run stmt wit (P\u2081.append P\u2082) = do\n    let __discr \u2190 liftM (run stmt wit P\u2081)\n    match __discr with\n      | (stmt\u2082, wit\u2082, transcript\u2081) => do\n        let __discr \u2190 liftM (run stmt\u2082 wit\u2082 P\u2082)\n        match __discr with\n          | (stmt\u2083, wit\u2083, transcript\u2082) => pure (stmt\u2083, wit\u2083, transcript\u2081 ++\u209c transcript\u2082)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/OracleReduction/Composition/Sequential.lean#L699"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-28T16:03:02+07:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "18f153d660f41a08c70aae9269985570fe66c5d6c8331cea91683cb10980b8aa"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 725,
        "start_column": 89,
        "end_line": 725,
        "end_column": 94,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "m n : \u2115\n\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\ninst\u271d\u00b3 : (i : pSpec\u2081.ChallengeIndex) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b2 : (i : pSpec\u2082.ChallengeIndex) \u2192 Sampleable (pSpec\u2082.Challenge i)\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nrel\u2081 : Stmt\u2081 \u2192 Wit\u2081 \u2192 Prop\nrel\u2082 : Stmt\u2082 \u2192 Wit\u2082 \u2192 Prop\nrel\u2083 : Stmt\u2083 \u2192 Wit\u2083 \u2192 Prop\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nR\u2081 : Reduction pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nR\u2082 : Reduction pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\ncompletenessError\u2081 completenessError\u2082 : \u211d\u22650\nh\u2081 : completeness rel\u2081 rel\u2082 R\u2081 completenessError\u2081\nh\u2082 : completeness rel\u2082 rel\u2083 R\u2082 completenessError\u2082\n\u22a2 completeness rel\u2081 rel\u2083 (R\u2081.append R\u2082) (completenessError\u2081 + completenessError\u2082)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/OracleReduction/Composition/Sequential.lean#L725"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-01T17:09:18-07:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "07c03f8046030d85954bc0d4adf28cf32902d2018a5eb03f17c9dcb72d39e7c6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 752,
        "start_column": 38,
        "end_line": 752,
        "end_column": 43,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nm : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\ninst\u271d\u00b2 : (i : Fin (m + 1)) \u2192 (j : (pSpec i).ChallengeIndex) \u2192 Sampleable ((pSpec i).Challenge j)\nStmt Wit : Fin (m + 2) \u2192 Type\nrel : (i : Fin (m + 2)) \u2192 Stmt i \u2192 Wit i \u2192 Prop\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nR : (i : Fin (m + 1)) \u2192 Reduction (pSpec i) oSpec (Stmt i.castSucc) (Wit i.castSucc) (Stmt i.succ) (Wit i.succ)\ncompletenessError : Fin (m + 1) \u2192 \u211d\u22650\nh : \u2200 (i : Fin (m + 1)), completeness (rel i.castSucc) (rel i.succ) (R i) (completenessError i)\n\u22a2 completeness (rel 0) (rel (Fin.last (m + 1))) (compose m n pSpec Stmt Wit R) (\u2211 i, completenessError i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/OracleReduction/Composition/Sequential.lean#L752"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-06T19:22:58-03:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "09723c7f9cb49d390f29bd1b574197dd5b0f28ce03e83e040599f4149dde167f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 151,
        "start_column": 2,
        "end_line": 151,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nP : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (fun a =>\n        (data.fStmtOut (a.2.2.1, (P.toProverOut.1 a.2.1).1), data.fWitOut (a.2.2.2, (P.toProverOut.1 a.2.1).2),\n          a.1)) <$>\n      Fin.induction (pure (default, P.input (data.fStmtIn stmtIn) (data.fWitIn witIn), stmtIn, witIn))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2.1 a, __discr.2.2)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2, __discr.2.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2.1).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n) =\n    (fun a => (data.fStmtOut (stmtIn, (P.toProverOut.1 a.2).1), data.fWitOut (witIn, (P.toProverOut.1 a.2).2), a.1)) <$>\n      Fin.induction (pure (default, P.input (data.fStmtIn stmtIn) (data.fWitIn witIn)))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2 a)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/OracleReduction/Composition/Virtual.lean#L151"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "a59deecb42dcee614b6519cddab9779ccb49dc8eff1637000981f985b0528d0c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 164,
        "start_column": 2,
        "end_line": 164,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n      (fun a_1 => (a_1, data.fWitOut (witIn, a.2.1), a.2.2)) <$>\n          (Verifier.run stmtIn a.2.2\n                {\n                  verify := fun stmtIn transcript =>\n                    (fun a => data.fStmtOut (stmtIn, a)) <$>\n                      R.verifier.verify (data.fStmtIn stmtIn) transcript }).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 => (data.fStmtOut (stmtIn, a_1), data.fWitOut (witIn, a.2.1), a.2.2)) <$>\n        (Verifier.run (data.fStmtIn stmtIn) a.2.2 R.verifier).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/OracleReduction/Composition/Virtual.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "d5b17bb70369d3aa066d48a52190e6a6b3ed40e7feab801ca0f8d3ed95eacdf4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 177,
        "start_column": 2,
        "end_line": 177,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let __discr \u2190 Prover.runWithLog stmtIn witIn (Prover.transport data R.prover)\n      (fun a => (a.1, __discr.2.1, __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (Verifier.run stmtIn __discr.2.2.1\n                    {\n                      verify := fun stmtIn transcript =>\n                        (fun a => data.fStmtOut (stmtIn, a)) <$>\n                          R.verifier.verify (data.fStmtIn stmtIn) transcript })).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.runWithLog (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 => (data.fStmtOut (stmtIn, a_1.1), data.fWitOut (witIn, a.2.1), a.2.2.1, a.2.2.2, a_1.2)) <$>\n        (simulateQ loggingOracle (Verifier.run (data.fStmtIn stmtIn) a.2.2.1 R.verifier)).run.liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/OracleReduction/Composition/Virtual.lean#L177"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "2d79ed8c44f7478dd28ba6a1d3d4f283acb94d9b8877a13da893d08663b39196"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 214,
        "start_column": 2,
        "end_line": 214,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn StmtOut StmtIn' StmtOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nlangIn' : Set StmtIn'\nlangOut' : Set StmtOut'\nsoundnessError : \u211d\u22650\ndata : TransportDataSound StmtIn StmtOut StmtIn' StmtOut' langIn langOut langIn' langOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nh :\n  \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn' WitIn StmtOut' WitOut),\n    \u2200 stmtIn \u2209 langIn',\n      [fun x =>\n          match x with\n          | (stmtOut, fst, snd) => stmtOut \u2209 langOut'|run stmtIn witIn { prover := prover, verifier := V }] \u2264\n        \u2191soundnessError\nstmtIn hStmtIn : Type\nWitIn : stmtIn\nWitOut : Prover pSpec oSpec StmtIn stmtIn StmtOut hStmtIn\nwitIn : StmtIn\nprover : witIn \u2209 langIn\n\u22a2 [fun x =>\n      match x with\n      | (stmtOut, fst, snd) =>\n        stmtOut \u2209\n          langOut|run witIn WitIn { prover := WitOut, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n    \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/OracleReduction/Composition/Virtual.lean#L214"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "8005ba5c2f2f7cc207a1978560927831ae442fd0d91781532ea2c5f873f86f47"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 228,
        "start_column": 2,
        "end_line": 233,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "case intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nrelIn' : StmtIn' \u2192 WitIn' \u2192 Prop\nrelOut' : StmtOut' \u2192 WitOut' \u2192 Prop\nsoundnessError : \u211d\u22650\ndata :\n  TransportDataKnowledgeSound StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nE : StraightlineExtractor\nh' :\n  \u2200 (stmtIn : StmtIn') (witIn : WitIn') (prover : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'),\n    [fun x =>\n        match x with\n        | (stmtOut, witOut, transcript, proveQueryLog, snd) =>\n          \u00acrelIn' stmtIn (E stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n            relOut' stmtOut witOut|runWithLog stmtIn witIn { prover := prover, verifier := V }] \u2264\n      \u2191soundnessError\n\u22a2 \u2203 extractor,\n    \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n      [fun x =>\n          match x with\n          | (stmtOut, witOut, transcript, proveQueryLog, snd) =>\n            \u00acrelIn stmtIn (extractor stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n              relOut stmtOut\n                witOut|runWithLog stmtIn witIn\n            { prover := prover, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n        \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/OracleReduction/Composition/Virtual.lean#L228"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "a1d396f2c98d0c78a9fc737fa80f26ce24ca1bbf4bf33aecbf7209acedf22db9"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 277,
        "start_column": 4,
        "end_line": 277,
        "end_column": 9,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "x\u271d\u00b3 : StmtIn\nx\u271d\u00b2 : Unit\nx\u271d\u00b9 : StmtOut'\nx\u271d : Unit\np q : \u2124[X]\nt : \u2124\nf : \u2124[X]\nt' r : \u2124\nhRelOut' : eval r f = t'\nhRelIn : eval 0 p * eval 0 q + eval 1 p * eval 1 q = t\n\u22a2 eval r p * eval r q = t'",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/OracleReduction/Composition/Virtual.lean#L277"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "8f76ca3288aee4c9056cd2fd0f41d7f22da1300cec82cabeac0b8300311c65e7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 357,
        "start_column": 2,
        "end_line": 357,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Security/Basic.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nknowledgeError : \u211d\u22650\nhLt : knowledgeError < 1\nextractor : StraightlineExtractor\nhKS :\n  \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n    [fun x =>\n        \u00acrelIn stmtIn (extractor stmtIn x.1 x.2.1 x.2.2.1 x.2.2.2.1) \u2227\n          relOut x.1 x.2.1|runWithLog stmtIn witIn { prover := prover, verifier := verifier }] \u2264\n      \u2191knowledgeError\nWitIn' WitOut' : Type\nwitIn' : WitIn'\nprover : Prover pSpec oSpec StmtIn WitIn' StmtOut WitOut'\nstmtIn : StmtIn\nhStmtIn : \u2200 (x : WitIn), \u00acrelIn stmtIn x\n\u22a2 [fun x => \u2200 (x_1 : WitOut), \u00acrelOut x.1 x_1|run stmtIn witIn' { prover := prover, verifier := verifier }] \u2264\n    \u2191knowledgeError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/OracleReduction/Security/Basic.lean#L357"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "bdd18ee37a937c65276805ac2fcd64a9de30c3eefa8bda0f8325443ebb045d28"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 378,
        "start_column": 75,
        "end_line": 378,
        "end_column": 80,
        "file": "ZKLib/OracleReduction/Security/Basic.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn StmtOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction langIn langOut verifier\nrbrSoundnessError : pSpec.ChallengeIndex \u2192 \u211d\u22650\n\u22a2 rbrSoundness langIn langOut verifier stateFunction rbrSoundnessError \u2192\n    soundness langIn langOut verifier (\u2211 i, rbrSoundnessError i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/OracleReduction/Security/Basic.lean#L378"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-28T13:43:25-07:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "9a216b2bc0ef5396437f7afd3c6b15e4dd5112e6930ef62da955ded18f0f3805"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 389,
        "start_column": 2,
        "end_line": 389,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Security/Basic.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction (Function.language relIn) (Function.language relOut) verifier\nrbrKnowledgeError : pSpec.ChallengeIndex \u2192 \u211d\u22650\n\u22a2 rbrKnowledgeSoundness relIn relOut verifier stateFunction rbrKnowledgeError \u2192\n    rbrSoundness (Function.language relIn) (Function.language relOut) verifier stateFunction rbrKnowledgeError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/OracleReduction/Security/Basic.lean#L389"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-28T13:43:25-07:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "d7534570d1beb78bc06e959f4653ecad5498918f30dda5631f2b8a2c7b0db9a8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 399,
        "start_column": 82,
        "end_line": 399,
        "end_column": 87,
        "file": "ZKLib/OracleReduction/Security/Basic.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction (Function.language relIn) (Function.language relOut) verifier\nrbrKnowledgeError : pSpec.ChallengeIndex \u2192 \u211d\u22650\n\u22a2 rbrKnowledgeSoundness relIn relOut verifier stateFunction rbrKnowledgeError \u2192\n    knowledgeSoundness relIn relOut verifier (\u2211 i, rbrKnowledgeError i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/OracleReduction/Security/Basic.lean#L399"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-28T13:43:25-07:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "799e366c7a0a43592817c1c63c70050296d0421d7834c0897d3ecc178578cb01"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 267,
        "start_column": 6,
        "end_line": 267,
        "end_column": 11,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "case mk.convert_7.left\nR : Type\ninst\u271d\u00b9 : CommSemiring R\nd m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\ntarget : R\noStmt : (i : Unit) \u2192 InputOracleStatement R d i\nhValid : inputRelation R d D (target, oStmt) ()\npoly : R[X]\nhp : poly \u2208 R\u2983\u2264 \u2191d\u2984[X]\nh : oStmt () = \u27e8poly, hp\u27e9\n\u22a2 ((fun a => ((a, fun x => oStmt ()), (), Transcript.snoc a (Transcript.snoc (oStmt ()) default))) <$>\n      liftM (query (Sum.inr \u27e81, \u22ef\u27e9) ())).neverFails",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/ProofSystem/Sumcheck/Basic.lean#L267"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-16T18:04:04-04:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "ae8d2c8b2a44dd236506467284c6d311f4e8d090bf6d24472bf327659e3c087d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 276,
        "start_column": 27,
        "end_line": 276,
        "end_column": 32,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "case pos\nR : Type\ninst\u271d\u00b9 : CommSemiring R\nd m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\ntarget : R\noStmt : (i : Unit) \u2192 InputOracleStatement R d i\nhValid : inputRelation R d D (target, oStmt) ()\npoly : R[X]\nhp : poly \u2208 R\u2983\u2264 \u2191d\u2984[X]\nh : oStmt () = \u27e8poly, hp\u27e9\nstmt : R\noStmtOut : (i : Unit \u2295 Unit) \u2192 OutputOracleStatement R d i\nfst\u271d : Unit\ntranscript : (pSpec R d).FullTranscript\nh1 : (fun x => oStmt ()) = oStmtOut\nh2 : Transcript.snoc stmt (Transcript.snoc (oStmt ()) default) = transcript\nhEval : \u2211 x, Polynomial.eval (D x) poly = target\n\u22a2 (pure (stmt, fun x => \u27e8poly, hp\u27e9)).neverFailsWhen fun {\u03b1} x => Set.univ",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/ProofSystem/Sumcheck/Basic.lean#L276"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-16T18:04:04-04:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "20db553962582e9cee0d6afe806b6af3539fd0f35a919807b2d0db2d226ae153"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 488,
        "start_column": 2,
        "end_line": 488,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\ninst\u271d : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\nstmt : Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 OracleStatement R n deg i)\ntranscript : FullTranscript ![(Direction.P_to_V, \u21a5R\u2983\u2264 \u2191deg\u2984[X]), (Direction.V_to_P, R)]\nx : (pSpec R deg).getType 0\nhp_i : \u2191(transcript 0) \u2208 R\u2983\u2264 \u2191deg\u2984[X]\nhEq : transcript 0 = \u27e8\u2191(transcript 0), hp_i\u27e9\n\u22a2 (do\n      let a \u2190\n        ((OptionT.run (mapM (fun i => liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (D i))) (List.finRange m))).bind\n                fun __do_lift =>\n                __do_lift.elim (FreeMonad.pure none)\n                  (OptionT.run \u2218 fun evals => do\n                    if evals.sum = stmt.1.target then pure () else failure\n                    (fun a => { target := a, challenges := Fin.snoc stmt.1.challenges (transcript 1) }) <$>\n                        liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (transcript 1)))).mapM\n            fun {\u03b1} => (ToOracle.simOracle2 oSpec stmt.2 transcript.messages).impl\n      (fun a => (a, fun i_1 => stmt.2 i_1)) <$> a.getM) =\n    (fun a =>\n        ({ target := Polynomial.eval (transcript 1) \u2191(transcript 0),\n            challenges := Fin.snoc stmt.1.challenges (transcript 1) },\n          stmt.2)) <$>\n      if \u2211 x, Polynomial.eval (D x) \u2191(transcript 0) = stmt.1.target then pure () else failure",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/ProofSystem/Sumcheck/Basic.lean#L488"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-18T19:07:20+07:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "3bab0bb7a9f507f210ce2b37657b94e5071184f01d933f30a817fdb554cf54ac"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 505,
        "start_column": 57,
        "end_line": 505,
        "end_column": 62,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "case left\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 OracleStatement R n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast \u22ef)) \u2191(oStmt 0) =\n    target\n\u22a2 (do\n      let x \u2190\n        ({ prover := prover R n deg D oSpec i,\n                        verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.sendMessage\n                \u27e80, \u22ef\u27e9\n                ({ prover := prover R n deg D oSpec i,\n                          verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.input\n                  ({ target := target, challenges := challenge }, oStmt) witIn\u271d)).liftComp\n            (oSpec ++\u2092 [(pSpec R deg).Challenge]\u2092)\n      let a \u2190 liftM (query (Sum.inr \u27e81, \u22ef\u27e9) ())\n      (fun a_1 =>\n            (a_1,\n              ({ prover := prover R n deg D oSpec i,\n                            verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.toProverOut.1\n                  ({ prover := prover R n deg D oSpec i,\n                            verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.receiveChallenge\n                    \u27e81, \u22ef\u27e9 x.2 a)).2,\n              Transcript.snoc a (Transcript.snoc x.1 default))) <$>\n          (Verifier.run ({ target := target, challenges := challenge }, oStmt)\n                (Transcript.snoc a (Transcript.snoc x.1 default))\n                { prover := prover R n deg D oSpec i,\n                      verifier := oracleVerifier R n deg D oSpec i }.toReduction.verifier).liftComp\n            (oSpec ++\u2092 [(pSpec R deg).Challenge]\u2092)).neverFails",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/ProofSystem/Sumcheck/Basic.lean#L505"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "c87b1c8e53995b6c3a8dc7dc191e7f667e10168958c58d4d96172b3f1cbb5cdb"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 514,
        "start_column": 2,
        "end_line": 514,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "case right\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 OracleStatement R n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast \u22ef)) \u2191(oStmt 0) =\n    target\n\u22a2 \u2200 (a : Statement R n i.succ) (b : (i : Fin 1) \u2192 OracleStatement R n deg i) (a_1 : Unit)\n    (b_1 : (pSpec R deg).FullTranscript),\n    ((a, b), a_1, b_1) \u2208\n        (run ({ target := target, challenges := challenge }, oStmt) witIn\u271d\n            { prover := prover R n deg D oSpec i, verifier := oracleVerifier R n deg D oSpec i }.toReduction).support \u2192\n      match (a, b) with\n      | ({ target := target, challenges := challenges }, oStmt) =>\n        match oStmt 0 with\n        | \u27e8poly, property\u27e9 =>\n          \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n              (MvPolynomial.eval (Fin.append challenges x \u2218 Fin.cast \u22ef)) poly =\n            target",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/ProofSystem/Sumcheck/Basic.lean#L514"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-18T19:07:20+07:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "c6fc1e513c74f071c34cc0bbe8ef55b631f7f69da0159940a68fe842e0f68325"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 563,
        "start_column": 4,
        "end_line": 563,
        "end_column": 9,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "R\u271d : Type\ninst\u271d\u2075 : CommSemiring R\u271d\nn\u271d deg\u271d m\u271d : \u2115\nD\u271d : Fin m\u271d \u21aa R\u271d\n\u03b9\u271d : Type\noSpec\u271d : OracleSpec \u03b9\u271d\ninst\u271d\u2074 : VCVCompatible R\u271d\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni\u271d : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ni : Fin (n + 1)\nstmt : Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 OracleStatement R n deg i)\ntr : Transcript (Fin.last 2) (pSpec R deg)\nhFalse :\n  \u00acrelation R n deg D i.succ ({ target := stmt.1.target, challenges := Fin.snoc stmt.1.challenges (tr 1) }, stmt.2) ()\n\u22a2 \u2200 (a : Statement R n i.succ) (b : (i : Fin 1) \u2192 OracleStatement R n deg i),\n    (a, b) \u2208 (Verifier.run stmt tr (verifier R n deg D oSpec i)).support \u2192\n      \u2200 (x : Unit), \u00acrelation R n deg D i.succ (a, b) x",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/ProofSystem/Sumcheck/Basic.lean#L563"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "4d831e7ce752b202303b63a3f06db2ea27ce4f9a883af8601e09348d5b3232c8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "chung-thai-nguyen-binarytowerfield",
        "commit": "0abfa46321533e7a7dcdbc71dabc528c1e6e98e4",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 638,
        "start_column": 42,
        "end_line": 638,
        "end_column": 47,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\nn deg m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\n\u22a2 OracleReduction.perfectCompleteness (relIn R n deg D) (relOut R n deg) (reduction R n deg)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/0abfa46321533e7a7dcdbc71dabc528c1e6e98e4/ZKLib/ProofSystem/Sumcheck/Basic.lean#L638"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-18T04:01:35.566780+00:00"
      },
      "id": "51d20b0b083d9ce8055852460448fe73df8adf2af23592227849fda68c9c67a1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 60,
        "start_column": 9,
        "end_line": 60,
        "end_column": 14,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b9 : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nWitEquiv : Type\ninst\u271d : ToOracle WitEquiv\nequiv : Witness \u2243 WitEquiv\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 Unit),\n    (OStatement \u2295\u1d65 fun x => WitEquiv) i =\n      match (\u22ef.mpr sorry) i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => (pSpec WitEquiv).Message j",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/ProofSystem/Components.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "4f7f020459a4f525b357fc43124b6fdaee5eac229f67c69dd71046140ea97242"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 78,
        "start_column": 2,
        "end_line": 78,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b2 : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nWitEquiv : Type\ninst\u271d\u00b9 : ToOracle WitEquiv\nequiv : Witness \u2243 WitEquiv\nrelIn : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Witness \u2192 Prop\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness relIn (toRelOut Statement Witness OStatement WitEquiv equiv relIn)\n    (oracleReduction oSpec Statement Witness OStatement WitEquiv equiv)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/ProofSystem/Components.lean#L78"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "8f4f3538f3e784c939dce7e8207af8d5b5d1f6525642e053fa4e20de5f4e4c67"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 138,
        "start_column": 9,
        "end_line": 138,
        "end_column": 14,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d\u00b9 : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 \u03b9\u209b\u1d62),\n    (OStatement \u2295\u1d65 OStatement) i =\n      match sorry i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => (pSpec OStatement).Message j",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/ProofSystem/Components.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "83a6769c76bbc34eb6b2f24efe9b32e6b13fbb91ed50eeeb8ecdf590eb441ed8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 164,
        "start_column": 2,
        "end_line": 164,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d\u00b2 : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b9 : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (fun x x_1 => rel x) (relOut OStatement)\n    (oracleReduction oSpec Statement OStatement relComp)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/ProofSystem/Components.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "b68a5ce14bcf390bd458d62556fdd3f140c72682a4e5809e92ff959a18578754"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 255,
        "start_column": 2,
        "end_line": 255,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Components.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nOStatement : Type\ninst\u271d\u00b2 : ToOracle OStatement\ninst\u271d\u00b9 : VCVCompatible (Query OStatement)\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (relIn OStatement) (relOut OStatement) (oracleReduction oSpec OStatement)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/ProofSystem/Components.lean#L255"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "fb9b82dfe2197d1e69e94e6f950d389b97c0163626529ef067685d659cafd886"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 184,
        "start_column": 2,
        "end_line": 184,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Execution.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let a \u2190 (simulateQ loggingOracle (Prover.runToRound (Fin.last n) stmt wit reduction.prover)).run\n      (fun a_1 => (a_1.1, (reduction.prover.toProverOut.1 a.1.2).2, a.1.1)) <$>\n          (simulateQ loggingOracle (reduction.verifier.verify stmt a.1.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190 Prover.run stmt wit reduction.prover\n    (fun a => (a, __discr.2)) <$> (reduction.verifier.verify stmt __discr.2.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Execution.lean#L184"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "5064ee3a205fa75c674388ea0c2c85cfc30703d50cf7e54f4f8bf35d47024be1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 277,
        "start_column": 2,
        "end_line": 277,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Execution.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\npSpec : ProtocolSpec 1\ninst\u271d : pSpec.ProverOnly\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let __discr \u2190\n        (fun a =>\n              ((reduction.prover.toProverOut.1 a.2).1, (reduction.prover.toProverOut.1 a.2).2, fun i =>\n                match i with\n                | \u27e80, isLt\u27e9 => a.1)) <$>\n            (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp\n              (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n      ((fun a => (a, __discr.2)) <$> reduction.verifier.verify stmt __discr.2.2).liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190\n      (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n    ((fun a =>\n              (a, (reduction.prover.toProverOut.1 __discr.2).2, fun i =>\n                match i with\n                | \u27e80, isLt\u27e9 => __discr.1)) <$>\n            reduction.verifier.verify stmt fun i =>\n              match i with\n              | \u27e80, isLt\u27e9 => __discr.1).liftComp\n        (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Execution.lean#L277"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "f762c3fb7d26710a7394ac55fd4a5715dc1c5b169dfd2e9c0204ac206536ff08"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 66,
        "start_column": 2,
        "end_line": 66,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Equiv.lean"
      },
      "debug_info": {
        "goal": "\u22a2 (do\n      let _ \u2190 liftM (query 0 ())\n      (fun a => (0, \u2191a)) <$> liftM (query 1 ())) =\n    do\n    let y \u2190 liftM (query 1 ())\n    (fun a => (0, \u2191y)) <$> liftM (query 0 ())",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Equiv.lean#L66"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "9a8f5b200f6a370a580bfa1c2b68d7c862a216d9290918366b5731ec01176f6c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 80,
        "start_column": 4,
        "end_line": 80,
        "end_column": 9,
        "file": "ZKLib/OracleReduction/Equiv.lean"
      },
      "debug_info": {
        "goal": "case h.h.none\n\u22a2 (evalDist (OptionT.bind (liftM (query 1 ())) (OptionT.pure \u2218 fun a => (0, \u2191a)))) none =\n    \u2211' (a : Fin 2), 2\u207b\u00b9 * (evalDist (OptionT.bind (liftM (query 0 ())) (OptionT.pure \u2218 fun a_1 => (0, \u2191a)))) none",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Equiv.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-16T18:04:04-04:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "823835bfcc90ee0fd00760af2e7d7f9fce5499acc786b30ffd39f17e433cdf47"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 85,
        "start_column": 4,
        "end_line": 85,
        "end_column": 9,
        "file": "ZKLib/OracleReduction/Equiv.lean"
      },
      "debug_info": {
        "goal": "case h.h.some.mk\nx y : \u2115\n\u22a2 (Option.elimM ((PMF.uniformOfFintype (Fin 1)).bind fun a => PMF.pure (some a)) (PMF.pure none)\n        (OptionT.run \u2218 evalDist \u2218 fun x => OptionT.bind (liftM (query 1 ())) (OptionT.pure \u2218 fun a => (0, \u2191a))))\n      (some (x, y)) =\n    (Option.elimM ((PMF.uniformOfFintype (Fin 2)).bind fun a => PMF.pure (some a)) (PMF.pure none)\n        (OptionT.run \u2218 evalDist \u2218 fun y => OptionT.bind (liftM (query 0 ())) (OptionT.pure \u2218 fun a => (0, \u2191y))))\n      (some (x, y))",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Equiv.lean#L85"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "0547e8e84688f10c4757468c7c160a791f08b705836aadaa8c0c94d9ef373f12"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 102,
        "start_column": 2,
        "end_line": 102,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Equiv.lean"
      },
      "debug_info": {
        "goal": "f : (i : \u2115) \u2192 unifSpec.domain i \u2192 Fin (i + 1)\n\u22a2 (some (f 0 ()) >>=\n      simulateQ\n          {\n            impl := fun {\u03b1} x =>\n              match \u03b1, x with\n              | .(unifSpec.range i), query i t => some (f i t) } \u2218\n        fun x => (fun a => (0, \u2191a)) <$> lift (query 1 ())) =\n    some (f 1 ()) >>=\n      simulateQ\n          {\n            impl := fun {\u03b1} x =>\n              match \u03b1, x with\n              | .(unifSpec.range i), query i t => some (f i t) } \u2218\n        fun y => (fun a => (0, \u2191y)) <$> lift (query 0 ())",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Equiv.lean#L102"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "48dda196124acfae81301fe64a506b385564d42fdf9db9c798064cd388ac4c28"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 299,
        "start_column": 2,
        "end_line": 299,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/ToOracle.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u2075 : CommRing R\nd : \u2115\ninst\u271d\u2074 : Fintype R\ninst\u271d\u00b3 : DecidableEq R\ninst\u271d\u00b2 : IsDomain R\n\u03c3 : Type\ninst\u271d\u00b9 : Fintype \u03c3\ninst\u271d : DecidableEq \u03c3\na : R[X \u03c3]\nha : \u2200 (s : \u03c3 \u2192\u2080 \u2115), \u00acMvPolynomial.coeff s a = 0 \u2192 \u2200 (i : \u03c3), s i \u2264 d\nb : R[X \u03c3]\nhb : \u2200 (s : \u03c3 \u2192\u2080 \u2115), \u00acMvPolynomial.coeff s b = 0 \u2192 \u2200 (i : \u03c3), s i \u2264 d\nhNe : \u00aca = b\n\u22a2 {q | (MvPolynomial.eval q) a = (MvPolynomial.eval q) b}.card \u2264 Fintype.card \u03c3 * d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/ToOracle.lean#L299"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "6e839394397733389b139372c9d65a6be929037e38531711e52bf86b448fae8a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 338,
        "start_column": 2,
        "end_line": 338,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/ToOracle.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\nR : Type\ninst\u271d : CommSemiring R\nm : \u2115\nD : Fin m \u21aa R\np : R[X]\n\u22a2 \u2203 x,\n    ((OptionT.run (mapM (fun i => liftM (query (Sum.inr ()) (D i))) (List.finRange m))).mapM fun {\u03b1} =>\n          (statelessOracle spec [fun x => R[X]]\u2092 fun i q => oracle p q).impl) =\n        pure x \u2227\n      x.getM = pure (List.map (fun i => eval (D i) p) (List.finRange m))",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/ToOracle.lean#L338"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "ad14cc0dff8a04ca0cb3b35871bd92e3eda26212fb01e5b0ba9aefd688b7b8bf"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 100,
        "start_column": 2,
        "end_line": 100,
        "end_column": 7,
        "file": "ZKLib/CommitmentScheme/Fold.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\np : R[X]\n\u22a2 (splitEvenOdd p).1.natDegree \u2264 p.natDegree / 2",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/CommitmentScheme/Fold.lean#L100"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "dd8565ed25a009b3e21e9c9bc7d859be7330cbf4c6f5105b81ddd795dd4f0a7a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 104,
        "start_column": 2,
        "end_line": 104,
        "end_column": 7,
        "file": "ZKLib/CommitmentScheme/Fold.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\np : R[X]\n\u22a2 (splitEvenOdd p).2.natDegree \u2264 p.natDegree / 2",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/CommitmentScheme/Fold.lean#L104"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "b14d3baaf11e1b2a096c84ebefeb2575b932c44693c339cf9237f344b11c52b7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 116,
        "start_column": 11,
        "end_line": 116,
        "end_column": 16,
        "file": "ZKLib/CommitmentScheme/Fold.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\nn deg : \u2115\n\u03b6 : R\u02e3\nhPrim : IsPrimitiveRoot \u03b6 (2 ^ n)\np : \u21a5R\u2983< 2 * n\u2984[X]\npEven pOdd : R[X]\n\u22a2 pEven \u2208 R\u2983< n\u2984[X]",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/CommitmentScheme/Fold.lean#L116"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "ec56fde687b6db895f95236920cad20f80731f40ac9f510d1a26c4f21c073cdd"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 116,
        "start_column": 26,
        "end_line": 116,
        "end_column": 31,
        "file": "ZKLib/CommitmentScheme/Fold.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\nn deg : \u2115\n\u03b6 : R\u02e3\nhPrim : IsPrimitiveRoot \u03b6 (2 ^ n)\np : \u21a5R\u2983< 2 * n\u2984[X]\npEven pOdd : R[X]\n\u22a2 pOdd \u2208 R\u2983< n\u2984[X]",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/CommitmentScheme/Fold.lean#L116"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "929b8e58470feec6083042da901f543c330f2f406d90d9f8648bcdb2635314b0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 219,
        "start_column": 6,
        "end_line": 219,
        "end_column": 11,
        "file": "ZKLib/CommitmentScheme/MerkleTree.lean"
      },
      "debug_info": {
        "goal": "case succ\n\u03b1 : Type\ninst\u271d\u00b2 : DecidableEq \u03b1\ninst\u271d\u00b9 : Inhabited \u03b1\ninst\u271d : Fintype \u03b1\nhash : \u03b1 \u00d7 \u03b1 \u2192 \u03b1\nn : \u2115\nih :\n  \u2200 (leaves : List.Vector \u03b1 (2 ^ n)) (i : Fin (2 ^ n)),\n    (simulateQ (implement_with_function \u03b1 hash)\n        (do\n          let cache \u2190 buildMerkleTree \u03b1 n leaves\n          let proof : List.Vector \u03b1 n := generateProof \u03b1 i cache\n          verifyProof \u03b1 i leaves[i] (getRoot \u03b1 cache) proof\n          pure PUnit.unit)\n        ()).neverFails\nleaves : List.Vector \u03b1 (2 ^ (n + 1))\ni : Fin (2 ^ (n + 1))\n\u22a2 ((((Option.elimM (OptionT.run (buildMerkleTree \u03b1 (n + 1) leaves)) (FreeMonad.pure none)\n                (OptionT.run \u2218 fun cache =>\n                  verifyProof \u03b1 i (leaves.get i) (getRoot \u03b1 cache) (generateProof \u03b1 i cache))).mapM\n            fun {\u03b1_1} q =>\n            match \u03b1_1, q with\n            | .((spec \u03b1).range i), query i (left, right) => pure (hash (left, right))) >>=\n          fun __do_lift => __do_lift.getM)\n        ()).neverFailsWhen\n    fun {\u03b1} x => Set.univ",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/CommitmentScheme/MerkleTree.lean#L219"
      },
      "metadata": {
        "blame_email_hash": "ab200eba5736",
        "blame_date": "2025-04-16T13:24:09-07:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "4771b3d3db601fc7c1651f675a3985efdfcc4664a281f4879d70f344ab1c9872"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 186,
        "start_column": 33,
        "end_line": 186,
        "end_column": 38,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\nC : Set (n \u2192 R)\ninst\u271d : Fintype \u2191C\nh : \u00acSubsingleton \u2191C\n\u22a2 \u2016C\u2016\u2080' \u2260 \u22a4",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/CodingTheory/Basic.lean#L186"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "73c55e594c38ffba4c492517a40431c8bb286aabf9a1e7575c04475440bd9545"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 187,
        "start_column": 4,
        "end_line": 187,
        "end_column": 9,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "case neg\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\nC : Set (n \u2192 R)\ninst\u271d : Fintype \u2191C\nh : \u00acSubsingleton \u2191C\nthis : \u2016C\u2016\u2080' \u2260 \u22a4\n\u22a2 ENat.toNat (Finset.image (fun x => \u0394\u2080(\u2191x.1, \u2191x.2)) {p | \u00acp.1 = p.2}).min =\n    sInf {d | \u2203 u \u2208 C, \u2203 v \u2208 C, \u00acu = v \u2227 \u0394\u2080(u, v) \u2264 d}",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/CodingTheory/Basic.lean#L187"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "6139d2f71de42bcb3f242c49794cb1f9cc103533f7243121a45f87368348c291"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 231,
        "start_column": 4,
        "end_line": 231,
        "end_column": 9,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "case e_a.h.h\u2081.intro.intro.intro.intro.intro\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : CommSemiring R\nC : Submodule R (n \u2192 R)\nd : \u2115\nu : n \u2192 R\nhu : u \u2208 C\nv : n \u2192 R\nhv : v \u2208 C\nhuv : \u00acu = v\nhDist : \u0394\u2080(u, v) \u2264 d\n\u22a2 \u2203 u \u2208 C, \u00acu = 0 \u2227 \u2016u\u2016\u2080 \u2264 d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/CodingTheory/Basic.lean#L231"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "6aa6dc02f9d616bd5b1f9d05356631f6fee5516847c98bccca6e83f38e4e2819"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 234,
        "start_column": 4,
        "end_line": 234,
        "end_column": 9,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "case e_a.h.h\u2082.intro.intro.intro\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : CommSemiring R\nC : Submodule R (n \u2192 R)\nd : \u2115\nu : n \u2192 R\nhu : u \u2208 C\nhNorm : \u00acu = 0\nhDist : \u2016u\u2016\u2080 \u2264 d\n\u22a2 \u2203 u \u2208 C, \u2203 v \u2208 C, \u00acu = v \u2227 \u0394\u2080(u, v) \u2264 d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/CodingTheory/Basic.lean#L234"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "d0f65f3a02ca3faa21b4cf57b3c061cd92bc63751f321b6ee857547e573d262a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 269,
        "start_column": 67,
        "end_line": 269,
        "end_column": 72,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : Finite R\nC : Set (n \u2192 R)\n\u22a2 card \u2191C \u2264 card R ^ (card n - \u2016C\u2016\u2080 + 1)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/CodingTheory/Basic.lean#L269"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-26T22:44:38-04:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "a29d81040cf86f813e4b32890cdeae9d710e080136c1e984fbc68144d4c15497"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 275,
        "start_column": 65,
        "end_line": 275,
        "end_column": 70,
        "file": "ZKLib/Data/CodingTheory/Basic.lean"
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b3 : Fintype n\nR : Type u_2\ninst\u271d\u00b2 : DecidableEq R\ninst\u271d\u00b9 : Finite R\ninst\u271d : DivisionRing R\nC : Submodule R (n \u2192 R)\n\u22a2 Module.finrank R \u21a5C \u2264 card n - \u2016C.carrier\u2016\u2080 + 1",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/CodingTheory/Basic.lean#L275"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-26T22:44:38-04:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "143dcf5025e7a347b7d42f2ee820282e2df5be417945aaf733ecc051e2726ac3"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 34,
        "start_column": 14,
        "end_line": 34,
        "end_column": 19,
        "file": "ZKLib/Data/MlPoly/Equiv.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\n\u22a2 Function.LeftInverse ofSpec toSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/MlPoly/Equiv.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "6cebe7b537cd4f0f5b857dbdd3816ba6c048e96da19bade46959df76b2f11893"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 35,
        "start_column": 15,
        "end_line": 35,
        "end_column": 20,
        "file": "ZKLib/Data/MlPoly/Equiv.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\n\u22a2 Function.RightInverse ofSpec toSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/MlPoly/Equiv.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "db2930b590ec9f777a2eb452ebe3e80bda60016568b3ae27fc78866c0be89a35"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 43,
        "start_column": 2,
        "end_line": 43,
        "end_column": 7,
        "file": "ZKLib/Data/MlPoly/Equiv.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\np q : MlPoly R n\n\u22a2 (p + q).toSpec = p.toSpec + q.toSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/MlPoly/Equiv.lean#L43"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "2cd05d6bdab3b1330b5867214044ffed92f5d392666b2f98ceab4b96a7ac5d9a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 47,
        "start_column": 2,
        "end_line": 47,
        "end_column": 7,
        "file": "ZKLib/Data/MlPoly/Equiv.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : CommSemiring R\nn : \u2115\nS : Type u_2\ninst\u271d : CommSemiring S\nf : R \u2192+* S\np : MlPoly R n\nx : Vector S n\n\u22a2 p.eval\u2082 f x = MvPolynomial.eval\u2082 f x.get \u2191p.toSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/MlPoly/Equiv.lean#L47"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "39db3a32729a6b7c0341415b8e3d5183538a3b83c71b43d7a7fdee59da3edf0e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 77,
        "start_column": 2,
        "end_line": 77,
        "end_column": 7,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : AddCommMonoid R\nn : \u2115\na : R\nb : Vector R n\nc : R\nd : Vector R n\n\u22a2 List.foldl (fun x1 x2 => x1 + x2) (a * c) (List.zipWith (fun x1 x2 => x1 * x2) b.toList d.toList) =\n    a * c + Array.foldl (fun x1 x2 => x1 + x2) 0 (Array.zipWith (fun x1 x2 => x1 * x2) b.toArray d.toArray) 0 n",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/MlPoly/Basic.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-14T11:09:39-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "8366d041b2531ffd1b36585b37072c3de70936aee7b6fed58326dba6b2ea9cf4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 81,
        "start_column": 2,
        "end_line": 81,
        "end_column": 7,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : AddCommMonoid R\nn : \u2115\na : R\nb : Vector R n\nc : R\nd : Vector R n\n\u22a2 (cons a b).get \u2b1d\u1d65 (cons c d).get = a * c + b.get \u2b1d\u1d65 d.get",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/MlPoly/Basic.lean#L81"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-14T11:09:39-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "aaed65aedbff2867cf006565d128d3c07f8bea2fe6e5e7d6935dfd93b8b8768b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 138,
        "start_column": 20,
        "end_line": 138,
        "end_column": 25,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a b c : MlPoly R n), a + b + c = a + (b + c)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/MlPoly/Basic.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "41f913d28bee7eadcbced8ea9dec30b92bf2350f062770eea16bae798aaa0665"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 141,
        "start_column": 19,
        "end_line": 141,
        "end_column": 24,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a : MlPoly R n), 0 + a = a",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/MlPoly/Basic.lean#L141"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "b8e0a55415ddfb451983a06719a8a5a79a8acab048a62d95ce6e596e3766431f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 142,
        "start_column": 19,
        "end_line": 142,
        "end_column": 24,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a : MlPoly R n), a + 0 = a",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/MlPoly/Basic.lean#L142"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "aa3f91641ef66d19ee15820384d46ffcb13b0dbe6e5af897518a6dc2a7593b97"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 144,
        "start_column": 21,
        "end_line": 144,
        "end_column": 26,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (x : MlPoly R n), nsmul 0 x = 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/MlPoly/Basic.lean#L144"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "ccfe86503d9e6992fb80abf57c6e11eb05399bb2155498cb47f4575016d6debd"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 145,
        "start_column": 21,
        "end_line": 145,
        "end_column": 26,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (n_1 : \u2115) (x : MlPoly R n), nsmul (n_1 + 1) x = nsmul n_1 x + x",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/MlPoly/Basic.lean#L145"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "daf9d2feedb86d426d04aeefc8156f5fc93bd77c818e86304679a79fd22abf68"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 139,
        "start_column": 19,
        "end_line": 139,
        "end_column": 24,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a b : MlPoly R n), a + b = b + a",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/MlPoly/Basic.lean#L139"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "a24046a9e4095a7854ec73258c418944e866187bca3eecf8e8e837cd146bc85c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 151,
        "start_column": 17,
        "end_line": 151,
        "end_column": 22,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : Semiring R\n\u22a2 \u2200 (b : MlPoly R n), 1 \u2022 b = b",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/MlPoly/Basic.lean#L151"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "c5b513d6a04e46f7ae2f9fc8dae271d979f05d930cf4c7b93b997dd2ac1f3450"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 156,
        "start_column": 18,
        "end_line": 156,
        "end_column": 23,
        "file": "ZKLib/Data/MlPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : Semiring R\n\u22a2 \u2200 (x : MlPoly R n), 0 \u2022 x = 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/MlPoly/Basic.lean#L156"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "2a8c5b10c06065f975d84ae604d8208e6c9604fa21fdffbda86b5739d6b69456"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 374,
        "start_column": 43,
        "end_line": 374,
        "end_column": 48,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b1 : Fin n \u2192 Sort u\nl : List \u2115\nn' : \u2115\nl' : List \u2115\nmotive : Fin (n' :: l').sum \u2192 Sort u_1\ncases : (n : \u2115) \u2192 (h : n \u2208 n' :: l') \u2192 (i : Fin n) \u2192 motive (castSum (n' :: l') h i)\ni : Fin (n' + l'.sum)\nhi : \u00ac\u2191i < n'\n\u22a2 \u2191i - n' < l'.sum",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/Math/Fin.lean#L374"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-07T14:25:30-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "38a7d76c2b2db33e0bdcce64531054c089a9bb3ba737626fc44bfd6be30347c0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 402,
        "start_column": 16,
        "end_line": 402,
        "end_column": 21,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "case ind\nn\u271d n : \u2115\nIH : \u2200 m < n, \u2200 {a : Fin m \u2192 \u2115}, (List.ofFn fun i => List.ofFn (ranges a i)) = (List.ofFn a).ranges\na : Fin n \u2192 \u2115\n\u22a2 (List.ofFn fun i => List.ofFn (ranges a i)) = (List.ofFn a).ranges",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/Math/Fin.lean#L402"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-11T17:39:02-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "e3bfef02075e9ca43ab7a26f6018b82e3505535896862e2f4e9c6b31f96658b3"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 497,
        "start_column": 32,
        "end_line": 497,
        "end_column": 37,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "\u22a2 True",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/Math/Fin.lean#L497"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-11T17:39:02-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "3041f1d89571495ea63f14ec50a235df9b2abf43d479658d5fb96624ce36844c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 499,
        "start_column": 35,
        "end_line": 499,
        "end_column": 40,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "\u22a2 True",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/Math/Fin.lean#L499"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-11T17:39:02-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "1c086fa1b8f8f4f5bac86c16ff0e55d92063d25502aa86479a8593de231ad144"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 501,
        "start_column": 36,
        "end_line": 501,
        "end_column": 41,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "\u22a2 True",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/Math/Fin.lean#L501"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-11T17:39:02-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "400608f47af9e32cb0962b41309792f02b925060aa0d8d9581cf080895ad5061"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 557,
        "start_column": 4,
        "end_line": 557,
        "end_column": 9,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "l : List \u2115\nj a : \u2115\nl' : List \u2115\nh : j < a + l'.sum\n\u22a2 \u2203 n, (a :: l').findSum j = some n",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/Math/Fin.lean#L557"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-03-14T00:01:07-04:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "430c2defa963b531026921902c06152034171fad542fcb6d1d2cb447e1a2c79c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 569,
        "start_column": 80,
        "end_line": 569,
        "end_column": 85,
        "file": "ZKLib/Data/Math/Fin.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d\u00b2 : AddMonoid \u03b1\ninst\u271d\u00b9 : Preorder \u03b1\ninst\u271d : DecidableRel fun x1 x2 => x1 < x2\nl : List \u2115\nj : Fin l.sum\n\u22a2 l.findSumIdx \u2191j < l.length",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/Math/Fin.lean#L569"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-03-14T00:01:07-04:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "af8a73bd37fc204bf7648ff02d87291797ad6938a3024d93fa1835fbc2f8de4e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 155,
        "start_column": 2,
        "end_line": 155,
        "end_column": 7,
        "file": "ZKLib/Data/Math/Operations.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nunit : \u03b1\nl l' : List \u03b1\nm n n' : \u2115\nh : n \u2264 m\nh' : n' \u2264 m\nhEq : rightpad n unit l = rightpad n' unit l'\nhLen : n \u2294 l.length = n' \u2294 l'.length\n\u22a2 l ++ replicate (n - l.length + (m - n' \u2294 l'.length)) unit =\n    l' ++ replicate (n' - l'.length + (m - n' \u2294 l'.length)) unit",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/Math/Operations.lean#L155"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "d9353f9bab8b35832450bcef7e4852fb49f0939edb6d93f9b5f298c81e520487"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 209,
        "start_column": 5,
        "end_line": 209,
        "end_column": 10,
        "file": "ZKLib/Data/Math/Operations.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nl\u2081 l\u2082 : List \u03b1\nunit : \u03b1\n\u22a2 (fun x =>\n        match x with\n        | (x, y) => x = y)\n      (l\u2081.matchSize l\u2082 unit) \u2194\n    \u2200 (i : \u2115), l\u2081.getD i unit = l\u2082.getD i unit",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/Math/Operations.lean#L209"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-14T17:35:17-06:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "b3e6243db4805ff281820f55c68fe73e2dcbdc879ebc809c51389544394d07a5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 257,
        "start_column": 2,
        "end_line": 257,
        "end_column": 7,
        "file": "ZKLib/Data/Math/Operations.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\na : Array \u03b1\nn : \u2115\nunit : \u03b1\ni : \u2115\nh\u271d : i < (rightpad n unit a).size\nh : i < { toList := List.rightpad n unit a.toList }.size\n\u22a2 { toList := List.rightpad n unit a.toList }[i] = a.getD i unit",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/Math/Operations.lean#L257"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "4feb47fe2fb07197d16672ece0f04c935a45bdef9e11f278033d7673c6ed41db"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 391,
        "start_column": 75,
        "end_line": 391,
        "end_column": 80,
        "file": "ZKLib/Data/Math/Operations.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\np : \u03b1 \u2192 Bool\nas : Array \u03b1\nh : (popWhile p as).size > 0\n\u22a2 \u00acp ((popWhile p as).getLast h) = true",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/Math/Operations.lean#L391"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-14T17:35:17-06:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "d9c0462cc72b549eccc96f3bc071c8c6959e145134ce329b968c7ac1e0eda1b8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 75,
        "start_column": 2,
        "end_line": 75,
        "end_column": 7,
        "file": "ZKLib/Data/MvPolynomial/Sumcheck.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\n\u03c3 : Type u_3\n\u03c3\u2081 : Type u_4\n\u03c3\u2082 : Type u_5\nx : \u03c3\u2081 \u2192 R\nf : \u03c3 \u2192 \u03c3\u2081 \u2295 \u03c3\u2082\np : R[X \u03c3]\nb : \u03c3\u2081 \u2192\u2080 \u2115\nh : \u00accoeff b ((sumToIter R \u03c3\u2081 \u03c3\u2082) ((rename f) p)) = 0\n\u22a2 (coeff b ((sumToIter R \u03c3\u2081 \u03c3\u2082) ((rename f) p))).degrees \u2264 Multiset.filterMap Sum.getRight? (Multiset.map f p.degrees)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/MvPolynomial/Sumcheck.lean#L75"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-16T12:52:41-06:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "fbd1811485c96f55a9c2125183e4a8306d3824034ccac42a1375609279fb4cf2"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 112,
        "start_column": 2,
        "end_line": 112,
        "end_column": 7,
        "file": "ZKLib/Data/MvPolynomial/Sumcheck.lean"
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\nh : n > 0\nD : Fin (n - 1) \u2192 Finset R\np : R[X Fin n]\n\u22a2 ((sumExceptFirst' n h D) p).degree \u2264 \u2191(degreeOf \u27e80, h\u27e9 p)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/MvPolynomial/Sumcheck.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-13T15:50:48-04:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "28a031965a6ccc8619f3b613d924eec5211be6db9e9bd8b1f9af3a31dbe2ddef"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 69,
        "start_column": 58,
        "end_line": 69,
        "end_column": 63,
        "file": "ZKLib/Data/MvPolynomial/Interpolation.lean"
      },
      "debug_info": {
        "goal": "\u03c3 : Type u_1\ninst\u271d\u2074 : DecidableEq \u03c3\ninst\u271d\u00b3 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : IsDomain R\ninst\u271d : DecidableEq R\np : R[X \u03c3]\nhp : p \u2260 0\nS : \u03c3 \u2192 Finset R\n\u22a2 \u2191(#({x \u2208 p.vars.pi S | (eval (extendDomain x)) p = 0})) / \u220f i \u2208 p.vars, \u2191(#(S i)) \u2264\n    \u2211 i \u2208 p.vars, \u2191(degreeOf i p) / \u2191(#(S i))",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/MvPolynomial/Interpolation.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-30T15:40:43-04:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "8d7c39b24ccfe985156907f3da78960c7bad4eb59a857dfa205cc92e131d11a0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 171,
        "start_column": 76,
        "end_line": 171,
        "end_column": 81,
        "file": "ZKLib/Data/MvPolynomial/Interpolation.lean"
      },
      "debug_info": {
        "goal": "\u03c3 : Type u_1\ninst\u271d\u00b3 : DecidableEq \u03c3\ninst\u271d\u00b2 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b9 : CommRing R\ninst\u271d : IsDomain R\np q : R[X \u03c3]\nS : \u03c3 \u2192 Finset R\nhDegree : \u2200 (i : \u03c3), degreeOf i p < #(S i)\nhEval : \u2200 x \u2208 piFinset fun i => S i, (eval x) p = (eval x) q\n\u22a2 p = q",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/MvPolynomial/Interpolation.lean#L171"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-30T15:40:43-04:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "4105ba2f8bbce8d6922181e619a224d136137f9672e9b6abf5594a18e45030f1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 95,
        "start_column": 16,
        "end_line": 95,
        "end_column": 21,
        "file": "ZKLib/Data/BinaryTowerField/Basic.lean"
      },
      "debug_info": {
        "goal": "case succ\nk : \u2115\na\u271d : k > 0 \u2192 AdjoinRoot (poly k) = Field k\nk_pos : k + 1 > 0\n\u22a2 AdjoinRoot (poly (k + 1)) = Field (k + 1)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/BinaryTowerField/Basic.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-30T10:53:02+05:30",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "4af05b8882044f00cb2afa20e9168052207ee42b6725aa9d2c06ef0c6cb90d69"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 115,
        "start_column": 59,
        "end_line": 115,
        "end_column": 64,
        "file": "ZKLib/Data/BinaryTowerField/Basic.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 Irreducible (poly n)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/BinaryTowerField/Basic.lean#L115"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2024-06-18T17:58:42-04:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "75d94c58e59f10eedc24a0513a34033d59903ced152f1642e57c667f7c917556"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 197,
        "start_column": 21,
        "end_line": 197,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic-old.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 Function.LeftInverse TropicallyBoundPolynomial.toPolynomial' Polynomial'.toTropicallyBoundPolynomial",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/UniPoly/Basic-old.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-07T14:00:27-04:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "40fc9ad37ea1d5b4915fefcec0ada7a9dd1266b6383d9792a5bc822d0975d26e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 198,
        "start_column": 22,
        "end_line": 198,
        "end_column": 27,
        "file": "ZKLib/Data/UniPoly/Basic-old.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 Function.RightInverse TropicallyBoundPolynomial.toPolynomial' Polynomial'.toTropicallyBoundPolynomial",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/UniPoly/Basic-old.lean#L198"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-07T14:00:27-04:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "540620591e77759af5ceb2a43661337dcf786da406045abd9da760772c91c43b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 199,
        "start_column": 21,
        "end_line": 199,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic-old.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 \u2200 (x y : Polynomial' R),\n    { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n            left_inv := \u22ef, right_inv := \u22ef }.toFun\n        (x * y) =\n      { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          x *\n        { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/UniPoly/Basic-old.lean#L199"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-07T14:00:27-04:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "29cbf9f2baa06e21384857c490951c86c1a7fd3821a7a304f6e8b7789df929bd"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 200,
        "start_column": 21,
        "end_line": 200,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic-old.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 \u2200 (x y : Polynomial' R),\n    { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n            left_inv := \u22ef, right_inv := \u22ef }.toFun\n        (x + y) =\n      { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          x +\n        { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/UniPoly/Basic-old.lean#L200"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-07T14:00:27-04:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "44272d25290dd2868c9f3c806e3688f2f3668e04bda51c3168787c1cff996038"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 571,
        "start_column": 2,
        "end_line": 571,
        "end_column": 7,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "Q : Type u_2\ninst\u271d : Ring Q\np q : UniPoly Q\ni : \u2115\nhi : i < Array.size (p.add_raw q)\n\u22a2 (p ++ mkArray (Array.size q - Array.size p) 0)[i] + (q ++ mkArray (Array.size p - Array.size q) 0)[i] =\n    p[i]?.getD 0 + q[i]?.getD 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/UniPoly/Basic.lean#L571"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "1d69542b94d2435b7c4d3bc86be49af3542f9bf37112a9e0a4b308789e35ca6b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 899,
        "start_column": 4,
        "end_line": 899,
        "end_column": 9,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "Q : Type u_2\ninst\u271d : Ring Q\np q r : UniPoly Q\nhpq : p ++ mkArray (Array.size q - Array.size p) 0 = q ++ mkArray (Array.size p - Array.size q) 0\nhqr : q ++ mkArray (Array.size r - Array.size q) 0 = r ++ mkArray (Array.size q - Array.size r) 0\n\u22a2 p ++ mkArray (Array.size r - Array.size p) 0 = r ++ mkArray (Array.size p - Array.size r) 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/UniPoly/Basic.lean#L899"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "51190f9fab64203c477917f0c8de42e611d08178365f0fc90f843adcf365a6cd"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 975,
        "start_column": 6,
        "end_line": 975,
        "end_column": 11,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : Ring R\ninst\u271d : BEq R\np : UniPoly R\n\u22a2 (p.toPoly, Tropical.trop (OrderDual.toDual p.degreeBound)) \u2208 TropicallyBoundPoly R",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/UniPoly/Basic.lean#L975"
      },
      "metadata": {
        "blame_email_hash": "ab200eba5736",
        "blame_date": "2025-03-12T19:59:09-07:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "5756a7ee39594bd4973b904ec6961e82fcc5eaebe93329a519e890b4634a4b5b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 1005,
        "start_column": 22,
        "end_line": 1005,
        "end_column": 27,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 Function.RightInverse TropicallyBoundPolynomial.toUniPoly UniPoly.toTropicallyBoundPolynomial",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/UniPoly/Basic.lean#L1005"
      },
      "metadata": {
        "blame_email_hash": "94b4cc0e139f",
        "blame_date": "2024-05-31T16:31:08-04:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "2397c8970b4aaa889047754d729fd3e23ee1c9c23b6688c820393949f80bb7c2"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 1006,
        "start_column": 21,
        "end_line": 1006,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 \u2200 (x y : UniPoly R),\n    { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n            right_inv := \u22ef }.toFun\n        (x * y) =\n      { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          x *\n        { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/UniPoly/Basic.lean#L1006"
      },
      "metadata": {
        "blame_email_hash": "94b4cc0e139f",
        "blame_date": "2024-05-31T16:31:08-04:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "bd41db85041229156e5d384b01a1a91679a41965ab21260fee4505c1b8d6b07c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 1007,
        "start_column": 21,
        "end_line": 1007,
        "end_column": 26,
        "file": "ZKLib/Data/UniPoly/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 \u2200 (x y : UniPoly R),\n    { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n            right_inv := \u22ef }.toFun\n        (x + y) =\n      { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          x +\n        { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/Data/UniPoly/Basic.lean#L1007"
      },
      "metadata": {
        "blame_email_hash": "94b4cc0e139f",
        "blame_date": "2024-05-31T16:31:08-04:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "a4656d0d07e866e2468af56c1fa9199b832495fabf9aeb35d345c2deb5c9e663"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 254,
        "start_column": 2,
        "end_line": 254,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "case h\nm n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\nT : pSpec\u2081.FullTranscript\nT' : pSpec\u2082.FullTranscript\ni : Fin m\n\u22a2 _root_.cast \u22ef (T i) = (\u22ef \u25b8 T) i",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Composition/Sequential.lean#L254"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-07T12:49:22-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "cc2bc43200b67fc35d900ea8cfe45f3e92b1563d40cc54ff84c9fdc0e7d23874"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 556,
        "start_column": 55,
        "end_line": 556,
        "end_column": 60,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u22a2 (compose 0 (fun x => n) fun x => pSpec) = pSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Composition/Sequential.lean#L556"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-18T18:57:31+07:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "f04d71a65799081c7936a2fe794245ceec13dfa489d11dc5a83b49622997c33f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 572,
        "start_column": 2,
        "end_line": 572,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "m : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\ni : Fin m\n\u22a2 compose (\u2191i + 1) (Fin.take (\u2191i + 2) \u22ef n) (Fin.take (\u2191i + 2) \u22ef pSpec) =\n    cast \u22ef (compose (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) (Fin.take (\u2191i + 1) \u22ef pSpec) ++\u209a pSpec i.succ)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Composition/Sequential.lean#L572"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-06T19:22:58-03:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "af9baabc4c67386fbe7c22ea7c12378c2857d1652cf0b247bdd6b3b49def8469"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 699,
        "start_column": 2,
        "end_line": 699,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "m n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nO\u2098\u2081 : (i : pSpec\u2081.MessageIndex) \u2192 ToOracle (pSpec\u2081.Message i)\nO\u2098\u2082 : (i : pSpec\u2082.MessageIndex) \u2192 ToOracle (pSpec\u2082.Message i)\ninst\u271d\u00b2 : (i : pSpec\u2081.ChallengeIndex) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b9 : (i : pSpec\u2082.ChallengeIndex) \u2192 Sampleable (pSpec\u2082.Challenge i)\ninst\u271d : oSpec.DecidableEq\nP\u2081 : Prover pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nP\u2082 : Prover pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\nstmt : Stmt\u2081\nwit : Wit\u2081\n\u22a2 run stmt wit (P\u2081.append P\u2082) = do\n    let __discr \u2190 liftM (run stmt wit P\u2081)\n    match __discr with\n      | (stmt\u2082, wit\u2082, transcript\u2081) => do\n        let __discr \u2190 liftM (run stmt\u2082 wit\u2082 P\u2082)\n        match __discr with\n          | (stmt\u2083, wit\u2083, transcript\u2082) => pure (stmt\u2083, wit\u2083, transcript\u2081 ++\u209c transcript\u2082)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Composition/Sequential.lean#L699"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-28T16:03:02+07:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "57d4464a20e980df7c7546515f8a265d759c8f988ab09b2244d9256963c617ba"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 725,
        "start_column": 89,
        "end_line": 725,
        "end_column": 94,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "m n : \u2115\n\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\ninst\u271d\u00b3 : (i : pSpec\u2081.ChallengeIndex) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b2 : (i : pSpec\u2082.ChallengeIndex) \u2192 Sampleable (pSpec\u2082.Challenge i)\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nrel\u2081 : Stmt\u2081 \u2192 Wit\u2081 \u2192 Prop\nrel\u2082 : Stmt\u2082 \u2192 Wit\u2082 \u2192 Prop\nrel\u2083 : Stmt\u2083 \u2192 Wit\u2083 \u2192 Prop\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nR\u2081 : Reduction pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nR\u2082 : Reduction pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\ncompletenessError\u2081 completenessError\u2082 : \u211d\u22650\nh\u2081 : completeness rel\u2081 rel\u2082 R\u2081 completenessError\u2081\nh\u2082 : completeness rel\u2082 rel\u2083 R\u2082 completenessError\u2082\n\u22a2 completeness rel\u2081 rel\u2083 (R\u2081.append R\u2082) (completenessError\u2081 + completenessError\u2082)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Composition/Sequential.lean#L725"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-01T17:09:18-07:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "cb583699faece898157b0d9dc5e8cd0982aa94572b9f6b71981b3957447e43db"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 752,
        "start_column": 38,
        "end_line": 752,
        "end_column": 43,
        "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nm : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\ninst\u271d\u00b2 : (i : Fin (m + 1)) \u2192 (j : (pSpec i).ChallengeIndex) \u2192 Sampleable ((pSpec i).Challenge j)\nStmt Wit : Fin (m + 2) \u2192 Type\nrel : (i : Fin (m + 2)) \u2192 Stmt i \u2192 Wit i \u2192 Prop\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nR : (i : Fin (m + 1)) \u2192 Reduction (pSpec i) oSpec (Stmt i.castSucc) (Wit i.castSucc) (Stmt i.succ) (Wit i.succ)\ncompletenessError : Fin (m + 1) \u2192 \u211d\u22650\nh : \u2200 (i : Fin (m + 1)), completeness (rel i.castSucc) (rel i.succ) (R i) (completenessError i)\n\u22a2 completeness (rel 0) (rel (Fin.last (m + 1))) (compose m n pSpec Stmt Wit R) (\u2211 i, completenessError i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Composition/Sequential.lean#L752"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-06T19:22:58-03:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "17866f8a136defeed8ca10c5a4906ee350d95903a3c5b7d2544517de1fbf5932"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 151,
        "start_column": 2,
        "end_line": 151,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nP : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (fun a =>\n        (data.fStmtOut (a.2.2.1, (P.toProverOut.1 a.2.1).1), data.fWitOut (a.2.2.2, (P.toProverOut.1 a.2.1).2),\n          a.1)) <$>\n      Fin.induction (pure (default, P.input (data.fStmtIn stmtIn) (data.fWitIn witIn), stmtIn, witIn))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2.1 a, __discr.2.2)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2, __discr.2.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2.1).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n) =\n    (fun a => (data.fStmtOut (stmtIn, (P.toProverOut.1 a.2).1), data.fWitOut (witIn, (P.toProverOut.1 a.2).2), a.1)) <$>\n      Fin.induction (pure (default, P.input (data.fStmtIn stmtIn) (data.fWitIn witIn)))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2 a)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Composition/Virtual.lean#L151"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "9c4f0e1705d9b1f0b4216e1dfa813de9c36bb87b3135d4f990cf69acfdce36d7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 164,
        "start_column": 2,
        "end_line": 164,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n      (fun a_1 => (a_1, data.fWitOut (witIn, a.2.1), a.2.2)) <$>\n          (Verifier.run stmtIn a.2.2\n                {\n                  verify := fun stmtIn transcript =>\n                    (fun a => data.fStmtOut (stmtIn, a)) <$>\n                      R.verifier.verify (data.fStmtIn stmtIn) transcript }).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 => (data.fStmtOut (stmtIn, a_1), data.fWitOut (witIn, a.2.1), a.2.2)) <$>\n        (Verifier.run (data.fStmtIn stmtIn) a.2.2 R.verifier).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Composition/Virtual.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "f117539370c663f89bb2c6e5ee5d8b02cb5415a56f68f18d612f59a9368b6501"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 177,
        "start_column": 2,
        "end_line": 177,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let __discr \u2190 Prover.runWithLog stmtIn witIn (Prover.transport data R.prover)\n      (fun a => (a.1, __discr.2.1, __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (Verifier.run stmtIn __discr.2.2.1\n                    {\n                      verify := fun stmtIn transcript =>\n                        (fun a => data.fStmtOut (stmtIn, a)) <$>\n                          R.verifier.verify (data.fStmtIn stmtIn) transcript })).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.runWithLog (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 => (data.fStmtOut (stmtIn, a_1.1), data.fWitOut (witIn, a.2.1), a.2.2.1, a.2.2.2, a_1.2)) <$>\n        (simulateQ loggingOracle (Verifier.run (data.fStmtIn stmtIn) a.2.2.1 R.verifier)).run.liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Composition/Virtual.lean#L177"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "e6993baaef7b48017a56c965b8963617232c26e0e7bedcd3362ea406b9b7b97f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 214,
        "start_column": 2,
        "end_line": 214,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn StmtOut StmtIn' StmtOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nlangIn' : Set StmtIn'\nlangOut' : Set StmtOut'\nsoundnessError : \u211d\u22650\ndata : TransportDataSound StmtIn StmtOut StmtIn' StmtOut' langIn langOut langIn' langOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nh :\n  \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn' WitIn StmtOut' WitOut),\n    \u2200 stmtIn \u2209 langIn',\n      [fun x =>\n          match x with\n          | (stmtOut, fst, snd) => stmtOut \u2209 langOut'|run stmtIn witIn { prover := prover, verifier := V }] \u2264\n        \u2191soundnessError\nstmtIn hStmtIn : Type\nWitIn : stmtIn\nWitOut : Prover pSpec oSpec StmtIn stmtIn StmtOut hStmtIn\nwitIn : StmtIn\nprover : witIn \u2209 langIn\n\u22a2 [fun x =>\n      match x with\n      | (stmtOut, fst, snd) =>\n        stmtOut \u2209\n          langOut|run witIn WitIn { prover := WitOut, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n    \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Composition/Virtual.lean#L214"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "c5557703762cd135dd88cbe5c9a853b803f67584cd3c1966a9ba805feb6dc922"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 228,
        "start_column": 2,
        "end_line": 233,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "case intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nrelIn' : StmtIn' \u2192 WitIn' \u2192 Prop\nrelOut' : StmtOut' \u2192 WitOut' \u2192 Prop\nsoundnessError : \u211d\u22650\ndata :\n  TransportDataKnowledgeSound StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nE : StraightlineExtractor\nh' :\n  \u2200 (stmtIn : StmtIn') (witIn : WitIn') (prover : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'),\n    [fun x =>\n        match x with\n        | (stmtOut, witOut, transcript, proveQueryLog, snd) =>\n          \u00acrelIn' stmtIn (E stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n            relOut' stmtOut witOut|runWithLog stmtIn witIn { prover := prover, verifier := V }] \u2264\n      \u2191soundnessError\n\u22a2 \u2203 extractor,\n    \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n      [fun x =>\n          match x with\n          | (stmtOut, witOut, transcript, proveQueryLog, snd) =>\n            \u00acrelIn stmtIn (extractor stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n              relOut stmtOut\n                witOut|runWithLog stmtIn witIn\n            { prover := prover, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n        \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Composition/Virtual.lean#L228"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "ebc773e42b65bd7706fdb24a0a02c9ecb4b97136316d93369d6b417d22b68611"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 277,
        "start_column": 4,
        "end_line": 277,
        "end_column": 9,
        "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
      },
      "debug_info": {
        "goal": "x\u271d\u00b3 : StmtIn\nx\u271d\u00b2 : Unit\nx\u271d\u00b9 : StmtOut'\nx\u271d : Unit\np q : \u2124[X]\nt : \u2124\nf : \u2124[X]\nt' r : \u2124\nhRelOut' : eval r f = t'\nhRelIn : eval 0 p * eval 0 q + eval 1 p * eval 1 q = t\n\u22a2 eval r p * eval r q = t'",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Composition/Virtual.lean#L277"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "17910c8297b29150e577af31670180c79cdc1068f1c4bdd910488497bd244b44"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 357,
        "start_column": 2,
        "end_line": 357,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Security/Basic.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nknowledgeError : \u211d\u22650\nhLt : knowledgeError < 1\nextractor : StraightlineExtractor\nhKS :\n  \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n    [fun x =>\n        \u00acrelIn stmtIn (extractor stmtIn x.1 x.2.1 x.2.2.1 x.2.2.2.1) \u2227\n          relOut x.1 x.2.1|runWithLog stmtIn witIn { prover := prover, verifier := verifier }] \u2264\n      \u2191knowledgeError\nWitIn' WitOut' : Type\nwitIn' : WitIn'\nprover : Prover pSpec oSpec StmtIn WitIn' StmtOut WitOut'\nstmtIn : StmtIn\nhStmtIn : \u2200 (x : WitIn), \u00acrelIn stmtIn x\n\u22a2 [fun x => \u2200 (x_1 : WitOut), \u00acrelOut x.1 x_1|run stmtIn witIn' { prover := prover, verifier := verifier }] \u2264\n    \u2191knowledgeError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Security/Basic.lean#L357"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "b7b72cfb30a1824947373d60cc66dae89dd21023523edd55a1fb0d191e4a3117"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 378,
        "start_column": 75,
        "end_line": 378,
        "end_column": 80,
        "file": "ZKLib/OracleReduction/Security/Basic.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn StmtOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction langIn langOut verifier\nrbrSoundnessError : pSpec.ChallengeIndex \u2192 \u211d\u22650\n\u22a2 rbrSoundness langIn langOut verifier stateFunction rbrSoundnessError \u2192\n    soundness langIn langOut verifier (\u2211 i, rbrSoundnessError i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Security/Basic.lean#L378"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-28T13:43:25-07:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "0e148894d11c499d769972c194ffc1e99437ef423b48786b3e8059304b1393da"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 389,
        "start_column": 2,
        "end_line": 389,
        "end_column": 7,
        "file": "ZKLib/OracleReduction/Security/Basic.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction (Function.language relIn) (Function.language relOut) verifier\nrbrKnowledgeError : pSpec.ChallengeIndex \u2192 \u211d\u22650\n\u22a2 rbrKnowledgeSoundness relIn relOut verifier stateFunction rbrKnowledgeError \u2192\n    rbrSoundness (Function.language relIn) (Function.language relOut) verifier stateFunction rbrKnowledgeError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Security/Basic.lean#L389"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-28T13:43:25-07:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "a12a1627e0b130b0beb9a2e36448cb96deac83601cb468b1ddd12153d09c5e78"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 399,
        "start_column": 82,
        "end_line": 399,
        "end_column": 87,
        "file": "ZKLib/OracleReduction/Security/Basic.lean"
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction (Function.language relIn) (Function.language relOut) verifier\nrbrKnowledgeError : pSpec.ChallengeIndex \u2192 \u211d\u22650\n\u22a2 rbrKnowledgeSoundness relIn relOut verifier stateFunction rbrKnowledgeError \u2192\n    knowledgeSoundness relIn relOut verifier (\u2211 i, rbrKnowledgeError i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Security/Basic.lean#L399"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-28T13:43:25-07:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "1ae67d590adb4d8c4598b4f520846a457081c10915e87c7bb2ee589f9e42886d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 267,
        "start_column": 6,
        "end_line": 267,
        "end_column": 11,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "case mk.convert_7.left\nR : Type\ninst\u271d\u00b9 : CommSemiring R\nd m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\ntarget : R\noStmt : (i : Unit) \u2192 InputOracleStatement R d i\nhValid : inputRelation R d D (target, oStmt) ()\npoly : R[X]\nhp : poly \u2208 R\u2983\u2264 \u2191d\u2984[X]\nh : oStmt () = \u27e8poly, hp\u27e9\n\u22a2 ((fun a => ((a, fun x => oStmt ()), (), Transcript.snoc a (Transcript.snoc (oStmt ()) default))) <$>\n      liftM (query (Sum.inr \u27e81, \u22ef\u27e9) ())).neverFails",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L267"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-16T18:04:04-04:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "b938b3e1056500192ff45b5c7ac46bae00ebe6d3fd2e0aa9c6f8cc8ffd257a66"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 276,
        "start_column": 27,
        "end_line": 276,
        "end_column": 32,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "case pos\nR : Type\ninst\u271d\u00b9 : CommSemiring R\nd m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\ntarget : R\noStmt : (i : Unit) \u2192 InputOracleStatement R d i\nhValid : inputRelation R d D (target, oStmt) ()\npoly : R[X]\nhp : poly \u2208 R\u2983\u2264 \u2191d\u2984[X]\nh : oStmt () = \u27e8poly, hp\u27e9\nstmt : R\noStmtOut : (i : Unit \u2295 Unit) \u2192 OutputOracleStatement R d i\nfst\u271d : Unit\ntranscript : (pSpec R d).FullTranscript\nh1 : (fun x => oStmt ()) = oStmtOut\nh2 : Transcript.snoc stmt (Transcript.snoc (oStmt ()) default) = transcript\nhEval : \u2211 x, Polynomial.eval (D x) poly = target\n\u22a2 (pure (stmt, fun x => \u27e8poly, hp\u27e9)).neverFailsWhen fun {\u03b1} x => Set.univ",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L276"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-16T18:04:04-04:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "a9accd2716149ecd2b347d52a05707f3ebe4cfda83f6f7b7932328406841b619"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 488,
        "start_column": 2,
        "end_line": 488,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\ninst\u271d : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\nstmt : Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 OracleStatement R n deg i)\ntranscript : FullTranscript ![(Direction.P_to_V, \u21a5R\u2983\u2264 \u2191deg\u2984[X]), (Direction.V_to_P, R)]\nx : (pSpec R deg).getType 0\nhp_i : \u2191(transcript 0) \u2208 R\u2983\u2264 \u2191deg\u2984[X]\nhEq : transcript 0 = \u27e8\u2191(transcript 0), hp_i\u27e9\n\u22a2 (do\n      let a \u2190\n        ((OptionT.run (mapM (fun i => liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (D i))) (List.finRange m))).bind\n                fun __do_lift =>\n                __do_lift.elim (FreeMonad.pure none)\n                  (OptionT.run \u2218 fun evals => do\n                    if evals.sum = stmt.1.target then pure () else failure\n                    (fun a => { target := a, challenges := Fin.snoc stmt.1.challenges (transcript 1) }) <$>\n                        liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (transcript 1)))).mapM\n            fun {\u03b1} => (ToOracle.simOracle2 oSpec stmt.2 transcript.messages).impl\n      (fun a => (a, fun i_1 => stmt.2 i_1)) <$> a.getM) =\n    (fun a =>\n        ({ target := Polynomial.eval (transcript 1) \u2191(transcript 0),\n            challenges := Fin.snoc stmt.1.challenges (transcript 1) },\n          stmt.2)) <$>\n      if \u2211 x, Polynomial.eval (D x) \u2191(transcript 0) = stmt.1.target then pure () else failure",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L488"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-18T19:07:20+07:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "0b3d3e2adf88c5e7ddcf40ab11e5115f60ef36ecffb18ef432ce4cf580843cc6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 505,
        "start_column": 57,
        "end_line": 505,
        "end_column": 62,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "case left\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 OracleStatement R n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast \u22ef)) \u2191(oStmt 0) =\n    target\n\u22a2 (do\n      let x \u2190\n        ({ prover := prover R n deg D oSpec i,\n                        verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.sendMessage\n                \u27e80, \u22ef\u27e9\n                ({ prover := prover R n deg D oSpec i,\n                          verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.input\n                  ({ target := target, challenges := challenge }, oStmt) witIn\u271d)).liftComp\n            (oSpec ++\u2092 [(pSpec R deg).Challenge]\u2092)\n      let a \u2190 liftM (query (Sum.inr \u27e81, \u22ef\u27e9) ())\n      (fun a_1 =>\n            (a_1,\n              ({ prover := prover R n deg D oSpec i,\n                            verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.toProverOut.1\n                  ({ prover := prover R n deg D oSpec i,\n                            verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.receiveChallenge\n                    \u27e81, \u22ef\u27e9 x.2 a)).2,\n              Transcript.snoc a (Transcript.snoc x.1 default))) <$>\n          (Verifier.run ({ target := target, challenges := challenge }, oStmt)\n                (Transcript.snoc a (Transcript.snoc x.1 default))\n                { prover := prover R n deg D oSpec i,\n                      verifier := oracleVerifier R n deg D oSpec i }.toReduction.verifier).liftComp\n            (oSpec ++\u2092 [(pSpec R deg).Challenge]\u2092)).neverFails",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L505"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "f24a85d7adc8111b49dc589d9e8cbcbf06c2c9eeccc5ac357df8f53ba7981c3a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 514,
        "start_column": 2,
        "end_line": 514,
        "end_column": 7,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "case right\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 OracleStatement R n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast \u22ef)) \u2191(oStmt 0) =\n    target\n\u22a2 \u2200 (a : Statement R n i.succ) (b : (i : Fin 1) \u2192 OracleStatement R n deg i) (a_1 : Unit)\n    (b_1 : (pSpec R deg).FullTranscript),\n    ((a, b), a_1, b_1) \u2208\n        (run ({ target := target, challenges := challenge }, oStmt) witIn\u271d\n            { prover := prover R n deg D oSpec i, verifier := oracleVerifier R n deg D oSpec i }.toReduction).support \u2192\n      match (a, b) with\n      | ({ target := target, challenges := challenges }, oStmt) =>\n        match oStmt 0 with\n        | \u27e8poly, property\u27e9 =>\n          \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n              (MvPolynomial.eval (Fin.append challenges x \u2218 Fin.cast \u22ef)) poly =\n            target",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L514"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-18T19:07:20+07:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "20f4800a1927dfb4c37b9d9561f23730e7c711ac5563e31bd6829f43cba9de7e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 563,
        "start_column": 4,
        "end_line": 563,
        "end_column": 9,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "R\u271d : Type\ninst\u271d\u2075 : CommSemiring R\u271d\nn\u271d deg\u271d m\u271d : \u2115\nD\u271d : Fin m\u271d \u21aa R\u271d\n\u03b9\u271d : Type\noSpec\u271d : OracleSpec \u03b9\u271d\ninst\u271d\u2074 : VCVCompatible R\u271d\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni\u271d : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ni : Fin (n + 1)\nstmt : Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 OracleStatement R n deg i)\ntr : Transcript (Fin.last 2) (pSpec R deg)\nhFalse :\n  \u00acrelation R n deg D i.succ ({ target := stmt.1.target, challenges := Fin.snoc stmt.1.challenges (tr 1) }, stmt.2) ()\n\u22a2 \u2200 (a : Statement R n i.succ) (b : (i : Fin 1) \u2192 OracleStatement R n deg i),\n    (a, b) \u2208 (Verifier.run stmt tr (verifier R n deg D oSpec i)).support \u2192\n      \u2200 (x : Unit), \u00acrelation R n deg D i.succ (a, b) x",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L563"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "18f95019924f717da2a6fc7ac50a3a4bd7539d3d4add60d34a9bd84cfc2c24ca"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 638,
        "start_column": 42,
        "end_line": 638,
        "end_column": 47,
        "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\nn deg m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\n\u22a2 OracleReduction.perfectCompleteness (relIn R n deg D) (relOut R n deg) (reduction R n deg)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L638"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-04-18T04:06:10.915002+00:00"
      },
      "id": "857fa0633bd371f9052c8d32aa9cc191706bcef168ec454cce824e736ed9a3bf"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "byte-decomposition",
        "commit": "99dda0a6ba057e083bb3412e892b46ec44ecb63c",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 65,
        "start_column": 18,
        "end_line": 65,
        "end_column": 23,
        "file": "Clean/Gadgets/Rotation64/Rotation64.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 2 ^ 16 + 2 ^ 8)\noff : Fin 64\n\u22a2 Soundness (F p) assumptions (spec off)",
        "url": "https://github.com/Verified-zkEVM/clean/blob/99dda0a6ba057e083bb3412e892b46ec44ecb63c/Clean/Gadgets/Rotation64/Rotation64.lean#L65"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T17:43:17+02:00",
        "inclusion_date": "2025-04-18T04:10:52.423771+00:00"
      },
      "id": "5751870881a935ce7842252923524efec14e62bee5e55f8a7a566490a8a9e599"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "byte-decomposition",
        "commit": "99dda0a6ba057e083bb3412e892b46ec44ecb63c",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 66,
        "start_column": 21,
        "end_line": 66,
        "end_column": 26,
        "file": "Clean/Gadgets/Rotation64/Rotation64.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 2 ^ 16 + 2 ^ 8)\noff : Fin 64\n\u22a2 Completeness (F p) U64 assumptions",
        "url": "https://github.com/Verified-zkEVM/clean/blob/99dda0a6ba057e083bb3412e892b46ec44ecb63c/Clean/Gadgets/Rotation64/Rotation64.lean#L66"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-02-27T17:02:29+01:00",
        "inclusion_date": "2025-04-18T04:10:52.423771+00:00"
      },
      "id": "844e7da99e55a21b78fffd6fac77f397666dd61fb56aeec721753d3065df8e61"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "byte-decomposition",
        "commit": "99dda0a6ba057e083bb3412e892b46ec44ecb63c",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 99,
        "start_column": 2,
        "end_line": 99,
        "end_column": 7,
        "file": "Clean/Gadgets/Keccak/ThetaD.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 2 ^ 16 + 2 ^ 8)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var KeccakRow (F p)\nh_env : env.uses_local_witnesses ((ElaboratedCircuit.main state_var).operations i0)\nstate : KeccakRow (F p)\nh_assumptions : assumptions state\nh_input : Vector.map (eval env) state_var = state\n\u22a2 ((((((((Rotation64.assumptions (eval env state_var[1]) \u2227\n                    (eval env state_var[\u21914]).is_normalized \u2227 (eval env (var_from_offset U64 (i0 + 16))).is_normalized) \u2227\n                  Rotation64.assumptions (eval env state_var[2])) \u2227\n                (eval env state_var[0]).is_normalized \u2227 (eval env (var_from_offset U64 (i0 + 48))).is_normalized) \u2227\n              Rotation64.assumptions (eval env state_var[\u21913])) \u2227\n            (eval env state_var[1]).is_normalized \u2227 (eval env (var_from_offset U64 (i0 + 80))).is_normalized) \u2227\n          Rotation64.assumptions (eval env state_var[\u21914])) \u2227\n        (eval env state_var[2]).is_normalized \u2227 (eval env (var_from_offset U64 (i0 + 112))).is_normalized) \u2227\n      Rotation64.assumptions (eval env state_var[0])) \u2227\n    (eval env state_var[\u21913]).is_normalized \u2227 (eval env (var_from_offset U64 (i0 + 144))).is_normalized",
        "url": "https://github.com/Verified-zkEVM/clean/blob/99dda0a6ba057e083bb3412e892b46ec44ecb63c/Clean/Gadgets/Keccak/ThetaD.lean#L99"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-15T00:48:02+02:00",
        "inclusion_date": "2025-04-18T04:10:52.423771+00:00"
      },
      "id": "a9112f156bc878b7f3506abb2f7736e250d1144de63177092dd5ed1757e4cd31"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "byte-decomposition",
        "commit": "99dda0a6ba057e083bb3412e892b46ec44ecb63c",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 109,
        "start_column": 2,
        "end_line": 109,
        "end_column": 7,
        "file": "Clean/Gadgets/Keccak/ThetaXor.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d\u00b9 : Fact (Nat.Prime p)\ninst\u271d : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var Inputs (F p)\nh_env : env.uses_local_witnesses ((ElaboratedCircuit.main state_var).operations i0)\nstate : Inputs (F p)\nh_assumptions : assumptions state\nh_input : { state := eval env state_var.state, d := eval env state_var.d } = state\n\u22a2 (((((((((((((((((((((((((eval env state_var.state[0]).is_normalized \u2227 (eval env state_var.d[0]).is_normalized) \u2227\n                                                  (eval env state_var.state[1]).is_normalized \u2227\n                                                    (eval env state_var.d[0]).is_normalized) \u2227\n                                                (eval env state_var.state[2]).is_normalized \u2227\n                                                  (eval env state_var.d[0]).is_normalized) \u2227\n                                              (eval env state_var.state[\u21913]).is_normalized \u2227\n                                                (eval env state_var.d[0]).is_normalized) \u2227\n                                            (eval env state_var.state[\u21914]).is_normalized \u2227\n                                              (eval env state_var.d[0]).is_normalized) \u2227\n                                          (eval env state_var.state[\u21915]).is_normalized \u2227\n                                            (eval env state_var.d[1]).is_normalized) \u2227\n                                        (eval env state_var.state[\u21916]).is_normalized \u2227\n                                          (eval env state_var.d[1]).is_normalized) \u2227\n                                      (eval env state_var.state[\u21917]).is_normalized \u2227\n                                        (eval env state_var.d[1]).is_normalized) \u2227\n                                    (eval env state_var.state[\u21918]).is_normalized \u2227\n                                      (eval env state_var.d[1]).is_normalized) \u2227\n                                  (eval env state_var.state[\u21919]).is_normalized \u2227\n                                    (eval env state_var.d[1]).is_normalized) \u2227\n                                (eval env state_var.state[\u219110]).is_normalized \u2227\n                                  (eval env state_var.d[2]).is_normalized) \u2227\n                              (eval env state_var.state[\u219111]).is_normalized \u2227 (eval env state_var.d[2]).is_normalized) \u2227\n                            (eval env state_var.state[\u219112]).is_normalized \u2227 (eval env state_var.d[2]).is_normalized) \u2227\n                          (eval env state_var.state[\u219113]).is_normalized \u2227 (eval env state_var.d[2]).is_normalized) \u2227\n                        (eval env state_var.state[\u219114]).is_normalized \u2227 (eval env state_var.d[2]).is_normalized) \u2227\n                      (eval env state_var.state[\u219115]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n                    (eval env state_var.state[\u219116]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n                  (eval env state_var.state[\u219117]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n                (eval env state_var.state[\u219118]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n              (eval env state_var.state[\u219119]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n            (eval env state_var.state[\u219120]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized) \u2227\n          (eval env state_var.state[\u219121]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized) \u2227\n        (eval env state_var.state[\u219122]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized) \u2227\n      (eval env state_var.state[\u219123]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized) \u2227\n    (eval env state_var.state[\u219124]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized",
        "url": "https://github.com/Verified-zkEVM/clean/blob/99dda0a6ba057e083bb3412e892b46ec44ecb63c/Clean/Gadgets/Keccak/ThetaXor.lean#L109"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-15T16:27:02+02:00",
        "inclusion_date": "2025-04-18T04:10:52.423771+00:00"
      },
      "id": "1c8c18306b32ae4eb9a4e0337c27d4ebe7957fb990c284a028f2ccfd2c3bac9b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "byte-decomposition",
        "commit": "99dda0a6ba057e083bb3412e892b46ec44ecb63c",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 55,
        "start_column": 2,
        "end_line": 55,
        "end_column": 7,
        "file": "Clean/Gadgets/Keccak/Theta.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 2 ^ 16 + 2 ^ 8)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var KeccakState (F p)\nstate : KeccakState (F p)\nh_env :\n  env.uses_local_witnesses\n    ((do\n          let c \u2190 subcircuit ThetaC.circuit state_var\n          let d \u2190 subcircuit ThetaD.circuit c\n          subcircuit ThetaXor.circuit { state := state_var, d := d }).operations\n      i0)\nh_input : eval env state_var = state\nh_assumptions : state.is_normalized\n\u22a2 (eval env\n        {\n          toArray :=\n            #[var_from_offset U64 (i0 + 24), var_from_offset U64 (i0 + 56), var_from_offset U64 (i0 + 88),\n              var_from_offset U64 (i0 + 120), var_from_offset U64 (i0 + 152)],\n          size_toArray := \u22ef }).is_normalized \u2227\n    (eval env\n        {\n          toArray :=\n            #[var_from_offset U64 (i0 + 160 + 24), var_from_offset U64 (i0 + 160 + 56),\n              var_from_offset U64 (i0 + 160 + 88), var_from_offset U64 (i0 + 160 + 120),\n              var_from_offset U64 (i0 + 160 + 152)],\n          size_toArray := \u22ef }).is_normalized",
        "url": "https://github.com/Verified-zkEVM/clean/blob/99dda0a6ba057e083bb3412e892b46ec44ecb63c/Clean/Gadgets/Keccak/Theta.lean#L55"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-15T16:51:25+02:00",
        "inclusion_date": "2025-04-18T04:10:52.423771+00:00"
      },
      "id": "1e6fefe52de39599c56881de0936279138209dce7411cf51607a532124c9c350"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "byte-decomposition",
        "commit": "99dda0a6ba057e083bb3412e892b46ec44ecb63c",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 100,
        "start_column": 2,
        "end_line": 100,
        "end_column": 7,
        "file": "Clean/Gadgets/Keccak/ThetaC.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d\u00b9 : Fact (Nat.Prime p)\ninst\u271d : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var KeccakState (F p)\nh_env :\n  \u2200 (i : Fin ((theta_c state_var).operations i0).local_length),\n    env.get (((theta_c state_var).operations i0).initial_offset + \u2191i) =\n      (Operations.local_witnesses env ((theta_c state_var).operations i0)).get i\nstate : KeccakState (F p)\nh_assumptions : \u2200 (i : Fin 25), state[i].is_normalized\nh_input : Vector.map (eval env) state_var = state\ns : \u2200 (i : Fin 25), (eval env state_var[\u2191i]).is_normalized = True\n\u22a2 ((((((((((((((eval env (var_from_offset U64 i0)).is_normalized \u2227\n                              (eval env (var_from_offset U64 (i0 + 8))).is_normalized) \u2227\n                            (eval env (var_from_offset U64 (i0 + 16))).is_normalized) \u2227\n                          (eval env (var_from_offset U64 (i0 + 32))).is_normalized) \u2227\n                        (eval env (var_from_offset U64 (i0 + 40))).is_normalized) \u2227\n                      (eval env (var_from_offset U64 (i0 + 48))).is_normalized) \u2227\n                    (eval env (var_from_offset U64 (i0 + 64))).is_normalized) \u2227\n                  (eval env (var_from_offset U64 (i0 + 72))).is_normalized) \u2227\n                (eval env (var_from_offset U64 (i0 + 80))).is_normalized) \u2227\n              (eval env (var_from_offset U64 (i0 + 96))).is_normalized) \u2227\n            (eval env (var_from_offset U64 (i0 + 104))).is_normalized) \u2227\n          (eval env (var_from_offset U64 (i0 + 112))).is_normalized) \u2227\n        (eval env (var_from_offset U64 (i0 + 128))).is_normalized) \u2227\n      (eval env (var_from_offset U64 (i0 + 136))).is_normalized) \u2227\n    (eval env (var_from_offset U64 (i0 + 144))).is_normalized",
        "url": "https://github.com/Verified-zkEVM/clean/blob/99dda0a6ba057e083bb3412e892b46ec44ecb63c/Clean/Gadgets/Keccak/ThetaC.lean#L100"
      },
      "metadata": {
        "blame_email_hash": "0130f16e5d6d",
        "blame_date": "2025-04-03T17:31:42+02:00",
        "inclusion_date": "2025-04-18T04:10:52.423771+00:00"
      },
      "id": "ab3d9d5c8b2a8ff918866183a6e5e4544f8000980c7f13cab85483d9d0cc46a8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "main",
        "commit": "7170103adcf348f78d26fbd7ce52b0b3e2999230",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 58,
        "start_column": 18,
        "end_line": 58,
        "end_column": 23,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\noff : Fin 8\n\u22a2 Soundness (F p) assumptions (spec off)",
        "url": "https://github.com/Verified-zkEVM/clean/blob/7170103adcf348f78d26fbd7ce52b0b3e2999230/Clean/Gadgets/ByteDecomposition.lean#L58"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-18T04:16:17.871713+00:00"
      },
      "id": "371ab7d1a3c21750ccb8c6d4f6a02e34e0e38cc6560e352838b4c169bf16f822"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "main",
        "commit": "7170103adcf348f78d26fbd7ce52b0b3e2999230",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 85,
        "start_column": 8,
        "end_line": 85,
        "end_column": 13,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "case var.\u00ab1\u00bb\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nx_var : Variable (F p)\nx : field (F p)\nh_eval : env.get x_var.index = x\nas : ZMod.val x < 256\nhenv :\n  \u2200 (i : Fin 2),\n    env.get (i0 + \u2191i) =\n      [if 0 < (fun i => i) \u27e81, \u22ef\u27e9 then FieldUtils.mod (env.get x_var.index) \u27e82 ^ \u2191((fun i => i) \u27e81, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0,\n          FieldUtils.floordiv (env.get x_var.index) (2 ^ \u2191((fun i => i) \u27e81, \u22ef\u27e9))][\u2191i]\nh0 :\n  env.get i0 =\n    if 0 < (fun i => i) \u27e81, \u22ef\u27e9 then FieldUtils.mod (env.get x_var.index) \u27e82 ^ \u2191((fun i => i) \u27e81, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (env.get x_var.index) (2 ^ \u2191((fun i => i) \u27e81, \u22ef\u27e9)) := henv 1\n\u22a2 ((ZMod.val x % 2 + ZMod.val x / 2 * ZMod.val 2 % p) % p + ZMod.val (-x)) % p = ZMod.val 0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/7170103adcf348f78d26fbd7ce52b0b3e2999230/Clean/Gadgets/ByteDecomposition.lean#L85"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-18T04:16:17.871713+00:00"
      },
      "id": "b7e2cae53dd0f0333059e6b90b6ef128896adaa82b67f721f95ffa45e6406614"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "main",
        "commit": "7170103adcf348f78d26fbd7ce52b0b3e2999230",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 88,
        "start_column": 11,
        "end_line": 88,
        "end_column": 16,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "case var.\u00ab2\u00bb\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nx_var : Variable (F p)\nx : field (F p)\nh_eval : env.get x_var.index = x\nas : ZMod.val x < 256\nhenv :\n  \u2200 (i : Fin 2),\n    env.get (i0 + \u2191i) =\n      [if 0 < (fun i => i) \u27e82, \u22ef\u27e9 then FieldUtils.mod (env.get x_var.index) \u27e82 ^ \u2191((fun i => i) \u27e82, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0,\n          FieldUtils.floordiv (env.get x_var.index) (2 ^ \u2191((fun i => i) \u27e82, \u22ef\u27e9))][\u2191i]\nh0 :\n  env.get i0 =\n    if 0 < (fun i => i) \u27e82, \u22ef\u27e9 then FieldUtils.mod (env.get x_var.index) \u27e82 ^ \u2191((fun i => i) \u27e82, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (env.get x_var.index) (2 ^ \u2191((fun i => i) \u27e82, \u22ef\u27e9)) := henv 1\n\u22a2 (if 0 < (fun i => i) \u27e82, \u22ef\u27e9 then FieldUtils.mod (env.get x_var.index) \u27e82 ^ \u2191((fun i => i) \u27e82, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0) +\n        FieldUtils.floordiv (env.get x_var.index) (2 ^ \u2191((fun i => i) \u27e82, \u22ef\u27e9)) * 2 ^ \u2191((fun i => i) \u27e82, \u22ef\u27e9) +\n      -x =\n    0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/7170103adcf348f78d26fbd7ce52b0b3e2999230/Clean/Gadgets/ByteDecomposition.lean#L88"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-18T04:16:17.871713+00:00"
      },
      "id": "3d54afc0e84d0ec8fe691d2c3e9291d6c53c640df6c6660fedde3ab65932a414"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "main",
        "commit": "7170103adcf348f78d26fbd7ce52b0b3e2999230",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 88,
        "start_column": 11,
        "end_line": 88,
        "end_column": 16,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "case var.\u00ab3\u00bb\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nx_var : Variable (F p)\nx : field (F p)\nh_eval : env.get x_var.index = x\nas : ZMod.val x < 256\nhenv :\n  \u2200 (i : Fin 2),\n    env.get (i0 + \u2191i) =\n      [if 0 < (fun i => i) \u27e83, \u22ef\u27e9 then FieldUtils.mod (env.get x_var.index) \u27e82 ^ \u2191((fun i => i) \u27e83, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0,\n          FieldUtils.floordiv (env.get x_var.index) (2 ^ \u2191((fun i => i) \u27e83, \u22ef\u27e9))][\u2191i]\nh0 :\n  env.get i0 =\n    if 0 < (fun i => i) \u27e83, \u22ef\u27e9 then FieldUtils.mod (env.get x_var.index) \u27e82 ^ \u2191((fun i => i) \u27e83, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (env.get x_var.index) (2 ^ \u2191((fun i => i) \u27e83, \u22ef\u27e9)) := henv 1\n\u22a2 (if 0 < (fun i => i) \u27e83, \u22ef\u27e9 then FieldUtils.mod (env.get x_var.index) \u27e82 ^ \u2191((fun i => i) \u27e83, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0) +\n        FieldUtils.floordiv (env.get x_var.index) (2 ^ \u2191((fun i => i) \u27e83, \u22ef\u27e9)) * 2 ^ \u2191((fun i => i) \u27e83, \u22ef\u27e9) +\n      -x =\n    0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/7170103adcf348f78d26fbd7ce52b0b3e2999230/Clean/Gadgets/ByteDecomposition.lean#L88"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-18T04:16:17.871713+00:00"
      },
      "id": "9e15b0af7b85bf0884f1610e748775fc395541d2a617cf6793725b9cb8e61ff2"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "main",
        "commit": "7170103adcf348f78d26fbd7ce52b0b3e2999230",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 88,
        "start_column": 11,
        "end_line": 88,
        "end_column": 16,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "case var.\u00ab4\u00bb\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nx_var : Variable (F p)\nx : field (F p)\nh_eval : env.get x_var.index = x\nas : ZMod.val x < 256\nhenv :\n  \u2200 (i : Fin 2),\n    env.get (i0 + \u2191i) =\n      [if 0 < (fun i => i) \u27e84, \u22ef\u27e9 then FieldUtils.mod (env.get x_var.index) \u27e82 ^ \u2191((fun i => i) \u27e84, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0,\n          FieldUtils.floordiv (env.get x_var.index) (2 ^ \u2191((fun i => i) \u27e84, \u22ef\u27e9))][\u2191i]\nh0 :\n  env.get i0 =\n    if 0 < (fun i => i) \u27e84, \u22ef\u27e9 then FieldUtils.mod (env.get x_var.index) \u27e82 ^ \u2191((fun i => i) \u27e84, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (env.get x_var.index) (2 ^ \u2191((fun i => i) \u27e84, \u22ef\u27e9)) := henv 1\n\u22a2 (if 0 < (fun i => i) \u27e84, \u22ef\u27e9 then FieldUtils.mod (env.get x_var.index) \u27e82 ^ \u2191((fun i => i) \u27e84, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0) +\n        FieldUtils.floordiv (env.get x_var.index) (2 ^ \u2191((fun i => i) \u27e84, \u22ef\u27e9)) * 2 ^ \u2191((fun i => i) \u27e84, \u22ef\u27e9) +\n      -x =\n    0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/7170103adcf348f78d26fbd7ce52b0b3e2999230/Clean/Gadgets/ByteDecomposition.lean#L88"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-18T04:16:17.871713+00:00"
      },
      "id": "65276de0ecd446bab2d095d4ea5248a84448a9744a1da738ac18a78ded2f653a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "main",
        "commit": "7170103adcf348f78d26fbd7ce52b0b3e2999230",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 88,
        "start_column": 11,
        "end_line": 88,
        "end_column": 16,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "case var.\u00ab5\u00bb\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nx_var : Variable (F p)\nx : field (F p)\nh_eval : env.get x_var.index = x\nas : ZMod.val x < 256\nhenv :\n  \u2200 (i : Fin 2),\n    env.get (i0 + \u2191i) =\n      [if 0 < (fun i => i) \u27e85, \u22ef\u27e9 then FieldUtils.mod (env.get x_var.index) \u27e82 ^ \u2191((fun i => i) \u27e85, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0,\n          FieldUtils.floordiv (env.get x_var.index) (2 ^ \u2191((fun i => i) \u27e85, \u22ef\u27e9))][\u2191i]\nh0 :\n  env.get i0 =\n    if 0 < (fun i => i) \u27e85, \u22ef\u27e9 then FieldUtils.mod (env.get x_var.index) \u27e82 ^ \u2191((fun i => i) \u27e85, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (env.get x_var.index) (2 ^ \u2191((fun i => i) \u27e85, \u22ef\u27e9)) := henv 1\n\u22a2 (if 0 < (fun i => i) \u27e85, \u22ef\u27e9 then FieldUtils.mod (env.get x_var.index) \u27e82 ^ \u2191((fun i => i) \u27e85, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0) +\n        FieldUtils.floordiv (env.get x_var.index) (2 ^ \u2191((fun i => i) \u27e85, \u22ef\u27e9)) * 2 ^ \u2191((fun i => i) \u27e85, \u22ef\u27e9) +\n      -x =\n    0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/7170103adcf348f78d26fbd7ce52b0b3e2999230/Clean/Gadgets/ByteDecomposition.lean#L88"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-18T04:16:17.871713+00:00"
      },
      "id": "7e7278a64aa1eb7297709346405db60b33b5b9a8ba6986c7ca8e55cc7d2550c4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "main",
        "commit": "7170103adcf348f78d26fbd7ce52b0b3e2999230",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 88,
        "start_column": 11,
        "end_line": 88,
        "end_column": 16,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "case var.\u00ab6\u00bb\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nx_var : Variable (F p)\nx : field (F p)\nh_eval : env.get x_var.index = x\nas : ZMod.val x < 256\nhenv :\n  \u2200 (i : Fin 2),\n    env.get (i0 + \u2191i) =\n      [if 0 < (fun i => i) \u27e86, \u22ef\u27e9 then FieldUtils.mod (env.get x_var.index) \u27e82 ^ \u2191((fun i => i) \u27e86, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0,\n          FieldUtils.floordiv (env.get x_var.index) (2 ^ \u2191((fun i => i) \u27e86, \u22ef\u27e9))][\u2191i]\nh0 :\n  env.get i0 =\n    if 0 < (fun i => i) \u27e86, \u22ef\u27e9 then FieldUtils.mod (env.get x_var.index) \u27e82 ^ \u2191((fun i => i) \u27e86, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (env.get x_var.index) (2 ^ \u2191((fun i => i) \u27e86, \u22ef\u27e9)) := henv 1\n\u22a2 (if 0 < (fun i => i) \u27e86, \u22ef\u27e9 then FieldUtils.mod (env.get x_var.index) \u27e82 ^ \u2191((fun i => i) \u27e86, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0) +\n        FieldUtils.floordiv (env.get x_var.index) (2 ^ \u2191((fun i => i) \u27e86, \u22ef\u27e9)) * 2 ^ \u2191((fun i => i) \u27e86, \u22ef\u27e9) +\n      -x =\n    0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/7170103adcf348f78d26fbd7ce52b0b3e2999230/Clean/Gadgets/ByteDecomposition.lean#L88"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-18T04:16:17.871713+00:00"
      },
      "id": "b84228a3a7bc360d795c16025e9e43b9c0e191729fded4aab34115b7f4ca648c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "main",
        "commit": "7170103adcf348f78d26fbd7ce52b0b3e2999230",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 88,
        "start_column": 11,
        "end_line": 88,
        "end_column": 16,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "case var.\u00ab7\u00bb\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nx_var : Variable (F p)\nx : field (F p)\nh_eval : env.get x_var.index = x\nas : ZMod.val x < 256\nhenv :\n  \u2200 (i : Fin 2),\n    env.get (i0 + \u2191i) =\n      [if 0 < (fun i => i) \u27e87, \u22ef\u27e9 then FieldUtils.mod (env.get x_var.index) \u27e82 ^ \u2191((fun i => i) \u27e87, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0,\n          FieldUtils.floordiv (env.get x_var.index) (2 ^ \u2191((fun i => i) \u27e87, \u22ef\u27e9))][\u2191i]\nh0 :\n  env.get i0 =\n    if 0 < (fun i => i) \u27e87, \u22ef\u27e9 then FieldUtils.mod (env.get x_var.index) \u27e82 ^ \u2191((fun i => i) \u27e87, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (env.get x_var.index) (2 ^ \u2191((fun i => i) \u27e87, \u22ef\u27e9)) := henv 1\n\u22a2 (if 0 < (fun i => i) \u27e87, \u22ef\u27e9 then FieldUtils.mod (env.get x_var.index) \u27e82 ^ \u2191((fun i => i) \u27e87, \u22ef\u27e9), \u22ef\u27e9 \u22ef else 0) +\n        FieldUtils.floordiv (env.get x_var.index) (2 ^ \u2191((fun i => i) \u27e87, \u22ef\u27e9)) * 2 ^ \u2191((fun i => i) \u27e87, \u22ef\u27e9) +\n      -x =\n    0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/7170103adcf348f78d26fbd7ce52b0b3e2999230/Clean/Gadgets/ByteDecomposition.lean#L88"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-18T04:16:17.871713+00:00"
      },
      "id": "c322387630ae3604f80328c07af142aab6a3fc466b3874f0f0b83cd1e356d93b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "main",
        "commit": "7170103adcf348f78d26fbd7ce52b0b3e2999230",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 88,
        "start_column": 11,
        "end_line": 88,
        "end_column": 16,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "case const\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\noff : Fin 8\ni0 : \u2115\nenv : Environment (F p)\na\u271d : F p\nhenv : env.uses_local_witnesses ((ElaboratedCircuit.main (Expression.const a\u271d)).operations i0)\nx : field (F p)\nh_eval : eval env (Expression.const a\u271d) = x\nas : assumptions x\n\u22a2 Circuit.constraints_hold.completeness env ((ElaboratedCircuit.main (Expression.const a\u271d)).operations i0)",
        "url": "https://github.com/Verified-zkEVM/clean/blob/7170103adcf348f78d26fbd7ce52b0b3e2999230/Clean/Gadgets/ByteDecomposition.lean#L88"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-18T04:16:17.871713+00:00"
      },
      "id": "3364432e0b54770ed2634d2a0464bc0c38825a8a0c635c17dc0213259b8c138a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "main",
        "commit": "7170103adcf348f78d26fbd7ce52b0b3e2999230",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 88,
        "start_column": 11,
        "end_line": 88,
        "end_column": 16,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "case add\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\noff : Fin 8\ni0 : \u2115\nenv : Environment (F p)\na\u271d\u00b9 a\u271d : Expression (F p)\nhenv : env.uses_local_witnesses ((ElaboratedCircuit.main (a\u271d\u00b9.add a\u271d)).operations i0)\nx : field (F p)\nh_eval : eval env (a\u271d\u00b9.add a\u271d) = x\nas : assumptions x\n\u22a2 Circuit.constraints_hold.completeness env ((ElaboratedCircuit.main (a\u271d\u00b9.add a\u271d)).operations i0)",
        "url": "https://github.com/Verified-zkEVM/clean/blob/7170103adcf348f78d26fbd7ce52b0b3e2999230/Clean/Gadgets/ByteDecomposition.lean#L88"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-18T04:16:17.871713+00:00"
      },
      "id": "c3bb6f2261be81be6f582560b658533f216a57c894c5a2a9a0b1e102fb338d7d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "main",
        "commit": "7170103adcf348f78d26fbd7ce52b0b3e2999230",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 88,
        "start_column": 11,
        "end_line": 88,
        "end_column": 16,
        "file": "Clean/Gadgets/ByteDecomposition.lean"
      },
      "debug_info": {
        "goal": "case mul\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\noff : Fin 8\ni0 : \u2115\nenv : Environment (F p)\na\u271d\u00b9 a\u271d : Expression (F p)\nhenv : env.uses_local_witnesses ((ElaboratedCircuit.main (a\u271d\u00b9.mul a\u271d)).operations i0)\nx : field (F p)\nh_eval : eval env (a\u271d\u00b9.mul a\u271d) = x\nas : assumptions x\n\u22a2 Circuit.constraints_hold.completeness env ((ElaboratedCircuit.main (a\u271d\u00b9.mul a\u271d)).operations i0)",
        "url": "https://github.com/Verified-zkEVM/clean/blob/7170103adcf348f78d26fbd7ce52b0b3e2999230/Clean/Gadgets/ByteDecomposition.lean#L88"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T20:02:04+02:00",
        "inclusion_date": "2025-04-18T04:16:17.871713+00:00"
      },
      "id": "be2321e5ce146010e0aa907dafed74c199addde860ecff058c245e89f3f9c4a9"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "main",
        "commit": "7170103adcf348f78d26fbd7ce52b0b3e2999230",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 61,
        "start_column": 18,
        "end_line": 61,
        "end_column": 23,
        "file": "Clean/Gadgets/Rotation64/Rotation64.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\noff : Fin 64\n\u22a2 Soundness (F p) assumptions (spec off)",
        "url": "https://github.com/Verified-zkEVM/clean/blob/7170103adcf348f78d26fbd7ce52b0b3e2999230/Clean/Gadgets/Rotation64/Rotation64.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-01T17:43:17+02:00",
        "inclusion_date": "2025-04-18T04:16:17.871713+00:00"
      },
      "id": "4158b0c997fda3663ad058dbb2dcd0363e1469fe3ed98abd8602ef8886f4d184"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "main",
        "commit": "7170103adcf348f78d26fbd7ce52b0b3e2999230",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 62,
        "start_column": 21,
        "end_line": 62,
        "end_column": 26,
        "file": "Clean/Gadgets/Rotation64/Rotation64.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 512)\noff : Fin 64\n\u22a2 Completeness (F p) U64 assumptions",
        "url": "https://github.com/Verified-zkEVM/clean/blob/7170103adcf348f78d26fbd7ce52b0b3e2999230/Clean/Gadgets/Rotation64/Rotation64.lean#L62"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-02-27T17:02:29+01:00",
        "inclusion_date": "2025-04-18T04:16:17.871713+00:00"
      },
      "id": "88cf095da7899302ef89a3be9ad206ebb0a640d67d3faf39d3fd57fa76fb93c2"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "main",
        "commit": "7170103adcf348f78d26fbd7ce52b0b3e2999230",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 93,
        "start_column": 2,
        "end_line": 93,
        "end_column": 7,
        "file": "Clean/Gadgets/Keccak/ThetaD.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d\u00b9 : Fact (Nat.Prime p)\ninst\u271d : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var KeccakRow (F p)\nh_env : env.uses_local_witnesses ((ElaboratedCircuit.main state_var).operations i0)\nstate : KeccakRow (F p)\nh_assumptions : assumptions state\nh_input : Vector.map (eval env) state_var = state\n\u22a2 ((((((((Rotation64.assumptions (eval env state_var[1]) \u2227\n                    (eval env state_var[\u21914]).is_normalized \u2227 (eval env (var_from_offset U64 (i0 + 16))).is_normalized) \u2227\n                  Rotation64.assumptions (eval env state_var[2])) \u2227\n                (eval env state_var[0]).is_normalized \u2227 (eval env (var_from_offset U64 (i0 + 48))).is_normalized) \u2227\n              Rotation64.assumptions (eval env state_var[\u21913])) \u2227\n            (eval env state_var[1]).is_normalized \u2227 (eval env (var_from_offset U64 (i0 + 80))).is_normalized) \u2227\n          Rotation64.assumptions (eval env state_var[\u21914])) \u2227\n        (eval env state_var[2]).is_normalized \u2227 (eval env (var_from_offset U64 (i0 + 112))).is_normalized) \u2227\n      Rotation64.assumptions (eval env state_var[0])) \u2227\n    (eval env state_var[\u21913]).is_normalized \u2227 (eval env (var_from_offset U64 (i0 + 144))).is_normalized",
        "url": "https://github.com/Verified-zkEVM/clean/blob/7170103adcf348f78d26fbd7ce52b0b3e2999230/Clean/Gadgets/Keccak/ThetaD.lean#L93"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-15T00:48:02+02:00",
        "inclusion_date": "2025-04-18T04:16:17.871713+00:00"
      },
      "id": "cd806bd1972f54f68af10f3c5a061d3f22bdcc3563be8a459facba51f804ad0f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "main",
        "commit": "7170103adcf348f78d26fbd7ce52b0b3e2999230",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 109,
        "start_column": 2,
        "end_line": 109,
        "end_column": 7,
        "file": "Clean/Gadgets/Keccak/ThetaXor.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d\u00b9 : Fact (Nat.Prime p)\ninst\u271d : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var Inputs (F p)\nh_env : env.uses_local_witnesses ((ElaboratedCircuit.main state_var).operations i0)\nstate : Inputs (F p)\nh_assumptions : assumptions state\nh_input : { state := eval env state_var.state, d := eval env state_var.d } = state\n\u22a2 (((((((((((((((((((((((((eval env state_var.state[0]).is_normalized \u2227 (eval env state_var.d[0]).is_normalized) \u2227\n                                                  (eval env state_var.state[1]).is_normalized \u2227\n                                                    (eval env state_var.d[0]).is_normalized) \u2227\n                                                (eval env state_var.state[2]).is_normalized \u2227\n                                                  (eval env state_var.d[0]).is_normalized) \u2227\n                                              (eval env state_var.state[\u21913]).is_normalized \u2227\n                                                (eval env state_var.d[0]).is_normalized) \u2227\n                                            (eval env state_var.state[\u21914]).is_normalized \u2227\n                                              (eval env state_var.d[0]).is_normalized) \u2227\n                                          (eval env state_var.state[\u21915]).is_normalized \u2227\n                                            (eval env state_var.d[1]).is_normalized) \u2227\n                                        (eval env state_var.state[\u21916]).is_normalized \u2227\n                                          (eval env state_var.d[1]).is_normalized) \u2227\n                                      (eval env state_var.state[\u21917]).is_normalized \u2227\n                                        (eval env state_var.d[1]).is_normalized) \u2227\n                                    (eval env state_var.state[\u21918]).is_normalized \u2227\n                                      (eval env state_var.d[1]).is_normalized) \u2227\n                                  (eval env state_var.state[\u21919]).is_normalized \u2227\n                                    (eval env state_var.d[1]).is_normalized) \u2227\n                                (eval env state_var.state[\u219110]).is_normalized \u2227\n                                  (eval env state_var.d[2]).is_normalized) \u2227\n                              (eval env state_var.state[\u219111]).is_normalized \u2227 (eval env state_var.d[2]).is_normalized) \u2227\n                            (eval env state_var.state[\u219112]).is_normalized \u2227 (eval env state_var.d[2]).is_normalized) \u2227\n                          (eval env state_var.state[\u219113]).is_normalized \u2227 (eval env state_var.d[2]).is_normalized) \u2227\n                        (eval env state_var.state[\u219114]).is_normalized \u2227 (eval env state_var.d[2]).is_normalized) \u2227\n                      (eval env state_var.state[\u219115]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n                    (eval env state_var.state[\u219116]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n                  (eval env state_var.state[\u219117]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n                (eval env state_var.state[\u219118]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n              (eval env state_var.state[\u219119]).is_normalized \u2227 (eval env state_var.d[\u21913]).is_normalized) \u2227\n            (eval env state_var.state[\u219120]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized) \u2227\n          (eval env state_var.state[\u219121]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized) \u2227\n        (eval env state_var.state[\u219122]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized) \u2227\n      (eval env state_var.state[\u219123]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized) \u2227\n    (eval env state_var.state[\u219124]).is_normalized \u2227 (eval env state_var.d[\u21914]).is_normalized",
        "url": "https://github.com/Verified-zkEVM/clean/blob/7170103adcf348f78d26fbd7ce52b0b3e2999230/Clean/Gadgets/Keccak/ThetaXor.lean#L109"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-15T16:27:02+02:00",
        "inclusion_date": "2025-04-18T04:16:17.871713+00:00"
      },
      "id": "73488194628814076fbd7c4944cdbf5c63b7965e71c98142f8b05a3065bdd651"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "main",
        "commit": "7170103adcf348f78d26fbd7ce52b0b3e2999230",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 49,
        "start_column": 2,
        "end_line": 49,
        "end_column": 7,
        "file": "Clean/Gadgets/Keccak/Theta.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d\u00b9 : Fact (Nat.Prime p)\ninst\u271d : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var KeccakState (F p)\nstate : KeccakState (F p)\nh_env :\n  env.uses_local_witnesses\n    ((do\n          let c \u2190 subcircuit ThetaC.circuit state_var\n          let d \u2190 subcircuit ThetaD.circuit c\n          subcircuit ThetaXor.circuit { state := state_var, d := d }).operations\n      i0)\nh_input : eval env state_var = state\nh_assumptions : state.is_normalized\n\u22a2 (eval env\n        {\n          toArray :=\n            #[var_from_offset U64 (i0 + 24), var_from_offset U64 (i0 + 56), var_from_offset U64 (i0 + 88),\n              var_from_offset U64 (i0 + 120), var_from_offset U64 (i0 + 152)],\n          size_toArray := \u22ef }).is_normalized \u2227\n    (eval env\n        {\n          toArray :=\n            #[var_from_offset U64 (i0 + 160 + 24), var_from_offset U64 (i0 + 160 + 56),\n              var_from_offset U64 (i0 + 160 + 88), var_from_offset U64 (i0 + 160 + 120),\n              var_from_offset U64 (i0 + 160 + 152)],\n          size_toArray := \u22ef }).is_normalized",
        "url": "https://github.com/Verified-zkEVM/clean/blob/7170103adcf348f78d26fbd7ce52b0b3e2999230/Clean/Gadgets/Keccak/Theta.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-15T16:51:25+02:00",
        "inclusion_date": "2025-04-18T04:16:17.871713+00:00"
      },
      "id": "c98c5c862bc79d8d1bdec4fad0573fadece32eaf1733ced2055062fbcb7b2252"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "main",
        "commit": "7170103adcf348f78d26fbd7ce52b0b3e2999230",
        "lean_version": "v4.17.0"
      },
      "location": {
        "start_line": 100,
        "start_column": 2,
        "end_line": 100,
        "end_column": 7,
        "file": "Clean/Gadgets/Keccak/ThetaC.lean"
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d\u00b9 : Fact (Nat.Prime p)\ninst\u271d : Fact (p > 512)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var KeccakState (F p)\nh_env :\n  \u2200 (i : Fin ((theta_c state_var).operations i0).local_length),\n    env.get (((theta_c state_var).operations i0).initial_offset + \u2191i) =\n      (Operations.local_witnesses env ((theta_c state_var).operations i0)).get i\nstate : KeccakState (F p)\nh_assumptions : \u2200 (i : Fin 25), state[i].is_normalized\nh_input : Vector.map (eval env) state_var = state\ns : \u2200 (i : Fin 25), (eval env state_var[\u2191i]).is_normalized = True\n\u22a2 ((((((((((((((eval env (var_from_offset U64 i0)).is_normalized \u2227\n                              (eval env (var_from_offset U64 (i0 + 8))).is_normalized) \u2227\n                            (eval env (var_from_offset U64 (i0 + 16))).is_normalized) \u2227\n                          (eval env (var_from_offset U64 (i0 + 32))).is_normalized) \u2227\n                        (eval env (var_from_offset U64 (i0 + 40))).is_normalized) \u2227\n                      (eval env (var_from_offset U64 (i0 + 48))).is_normalized) \u2227\n                    (eval env (var_from_offset U64 (i0 + 64))).is_normalized) \u2227\n                  (eval env (var_from_offset U64 (i0 + 72))).is_normalized) \u2227\n                (eval env (var_from_offset U64 (i0 + 80))).is_normalized) \u2227\n              (eval env (var_from_offset U64 (i0 + 96))).is_normalized) \u2227\n            (eval env (var_from_offset U64 (i0 + 104))).is_normalized) \u2227\n          (eval env (var_from_offset U64 (i0 + 112))).is_normalized) \u2227\n        (eval env (var_from_offset U64 (i0 + 128))).is_normalized) \u2227\n      (eval env (var_from_offset U64 (i0 + 136))).is_normalized) \u2227\n    (eval env (var_from_offset U64 (i0 + 144))).is_normalized",
        "url": "https://github.com/Verified-zkEVM/clean/blob/7170103adcf348f78d26fbd7ce52b0b3e2999230/Clean/Gadgets/Keccak/ThetaC.lean#L100"
      },
      "metadata": {
        "blame_email_hash": "0130f16e5d6d",
        "blame_date": "2025-04-03T17:31:42+02:00",
        "inclusion_date": "2025-04-18T04:16:17.871713+00:00"
      },
      "id": "9ecfb7cddf86c3081bb55f5dec141bb0c997ce5afb30d04ef6c8dd73d46e4de5"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 38,
        "start_column": 2,
        "end_line": 38,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\nG : SimpleGraph \u03b1\na : \u03b1\nw : G.Walk a a\nhw : Odd w.length\n\u22a2 \u2203 b p, Odd (\u2191p).length",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "3fababf521479205121d8c5d356f11f4379b01bfe5254e0acd46873dd1ea8bb5"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 57,
        "start_column": 2,
        "end_line": 57,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\n\u22a2 \u2203 a b, a \u2260 b \u2227 G.degree a = G.degree b",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L57"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "08da4736142fa7a1d8c4eb311d41f6d79ba1ecbffb9963c088bcbf82cb223967"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 70,
        "start_column": 2,
        "end_line": 70,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "case intro\n\u03b1 : Type u_2\ninst\u271d\u00b9 : Finite \u03b1\ninst\u271d : Nontrivial \u03b1\nG : SimpleGraph \u03b1\nhG : G.Connected\nval\u271d : Fintype \u03b1\n\u22a2 \u2203 a, (\u22a4.deleteVerts {a}).coe.Connected",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L70"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2022-11-20T17:08:07+00:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "49df9f5015484baca6cec40b158d4beb5f5910da9c1451abcf8baa72b3abbdde"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 83,
        "start_column": 2,
        "end_line": 83,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "case inr\n\u03b1 : Type u_2\ninst\u271d\u00b2 : Fintype \u03b1\ninst\u271d\u00b9 : DecidableEq \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\nhG : G.IsAcyclic\nh\u271d : Nonempty \u03b1\n\u22a2 G.edgeFinset.card \u2264 card \u03b1 - 1",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L83"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2022-11-20T17:08:07+00:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "ad56b7c35b389fc6a6b18bcc0f5d2556d4ff65c1d05f6632f14f3d1268872611"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 101,
        "start_column": 2,
        "end_line": 101,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d : Fintype \u03b1\ns : Multiset \u2115\nhs : s.card = card \u03b1\nh\u2080 : 0 \u2209 s\n\u22a2 s.sum = 2 * card \u03b1 - 2 \u2194 \u2203 G x, degreeSequence G = s",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L101"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "63d07dffb67aae4cdb0cac3b28801a01b2dbc0aa7fd1faef1eac94a6f7fef6cd"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 113,
        "start_column": 2,
        "end_line": 113,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\n\u03b1 : Type u_2\nG : SimpleGraph \u03b1\nhG : G.IsAcyclic\ns : Finset \u03b9\nf : \u03b9 \u2192 G.Subgraph\nhf : \u2200 i \u2208 s, (f i).coe.IsAcyclic\nh : \u2200 i \u2208 s, \u2200 j \u2208 s, f i \u2293 f j \u2260 \u22a5\n\u22a2 s.inf f \u2260 \u22a5",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L113"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "7e1a9acc63453eb56c72fc36e8fb4a586692e8334f82d5132f9886faf6f693af"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 128,
        "start_column": 2,
        "end_line": 128,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\n\u22a2 \u2203 H x, \u2200 (a : \u03b1), averageDegree G / 2 \u2264 \u2191(H.degree a)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L128"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "0aecd8513d95a3c39227c935c1102befbd938dec0b9c8f84ce14971e67bf005d"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 145,
        "start_column": 2,
        "end_line": 145,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\n\u22a2 (\u2203 \ud835\udc9c,\n      (\u2200 (p q : (a : \u03b1) \u00d7 G.Path a a), (\u2191p.snd).edges.Disjoint (\u2191q.snd).edges) \u2227\n        \u2200 (e : Sym2 \u03b1), \u2203 p \u2208 \ud835\udc9c, e \u2208 (\u2191p.snd).edges) \u2194\n    \u2200 (a : \u03b1), Even (G.degree a)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L145"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "e18b741608d51b5343b83ac7b78641ebab6b97898412be2361ec9ea2de5b3391"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 160,
        "start_column": 2,
        "end_line": 160,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\ninst\u271d : DecidableEq \u03b1\nn : \u2115\n\u22a2 (\u2203 G x k, G.IsRegularOfDegree k \u2227 G.cliqueNum = n) \u2194 n \u2264 card \u03b1 / 2 \u2228 n = card \u03b1",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L160"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "73b3514c20e2905044afc2ae1e3c8eab4a78093554d46b6e1b158c22a5495558"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 181,
        "start_column": 2,
        "end_line": 181,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : DecidableEq \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\ns : Finset \u03b1\n\u22a2 \u2203 u v,\n    Disjoint u v \u2227\n      u \u222a v = s \u2227 (\u2200 a \u2208 u, Even #{ x // x \u2208 {b \u2208 u | G.Adj a b} }) \u2227 \u2200 a \u2208 v, Even #{ x // x \u2208 {b \u2208 v | G.Adj a b} }",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L181"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "9b32dab5d4cb28f91d6b01b4aa1011a4f891c4c36c835c30743b93a363c49b0a"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 197,
        "start_column": 2,
        "end_line": 197,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\n\u03b2 : Type u_3\ninst\u271d : Finite \u03b1\ng : \u03b2 \u21aa \u03b1\nf : \u03b2 \u2192 \u03b1 \u2192 \u03b1\nhf : IsLatin f\n\u22a2 \u2203 f', f' \u2218 \u21d1g = f \u2227 IsLatin f",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "2a76f7b8970defcfa191b88a9ff249b73e9aa9fdbf6fc6ded13772215f4de3ac"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 214,
        "start_column": 2,
        "end_line": 214,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 r, (\u2200 (A : Finset \u2115), \u2191A.card \u2264 #\u2191(Rel.image r \u2191A)) \u2227 \u2200 (f : \u2115 \u2192 \u2115), Injective f \u2192 \u2203 n, \u00acr n (f n)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L214"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "cc184c9b5d49cb6bd85611b690f265e6aa231d9a088cf9156737b6c2c641ba21"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 219,
        "start_column": 2,
        "end_line": 219,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\n\u03b2 : Type u_3\ninst\u271d\u00b3 : DecidableEq \u03b2\ninst\u271d\u00b2 : Countable \u03b1\ninst\u271d\u00b9 : Countable \u03b2\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\ninst\u271d : (a : \u03b1) \u2192 Fintype \u2191(Rel.image r {a})\nhr : \u2200 (A : Finset \u03b1), A.card \u2264 card \u2191(Rel.image r \u2191A)\n\u22a2 \u2203 f, Injective f \u2227 \u2200 (a : \u03b1), r a (f a)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L219"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "a05f5644a4d4a9b5ad5797593855787dd0ce1f64781a9dd776f6556ea9193197"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 224,
        "start_column": 2,
        "end_line": 224,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\n\u03b2 : Type u_3\ninst\u271d\u00b9 : DecidableEq \u03b2\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\ninst\u271d : (a : \u03b1) \u2192 Fintype \u2191(Rel.image r {a})\nhr : \u2200 (A : Finset \u03b1), A.card \u2264 card \u2191(Rel.image r \u2191A)\n\u22a2 \u2203 f, Injective f \u2227 \u2200 (a : \u03b1), r a (f a)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L224"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "b71d4dcbae717b600f350c424fc32ff538de132fa91831662726efef555e04ec"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 247,
        "start_column": 2,
        "end_line": 247,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 \u03b5, 0 < \u03b5 \u2227 \u2200 (\u03b1 : Type u_5) [inst : Fintype \u03b1], \u2203 x, \u2200 (f : \u03b1 \u2192 \u211d \u00d7 \u211d), \u03b5 * \u221a\u2191(card \u03b1) \u2264 distortion f",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L247"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "8e26cd54b8be1340d8d563c8684323358197b445960de25fa966dc98367ab182"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 252,
        "start_column": 2,
        "end_line": 252,
        "end_column": 7,
        "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 \u03b5, 0 < \u03b5 \u2227 \u2200 (\u03b1 : Type u_5) [inst : Fintype \u03b1], \u2203 x, \u2200 (f : \u03b1 \u2192 \u211d \u00d7 \u211d), \u03b5 * \u2191(card \u03b1) \u2264 distortion f",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L252"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "8b867f6b08c33bef9844ac470761aa75a51758590ce5d5645a0dc7c8663125c3"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 46,
        "start_column": 75,
        "end_line": 46,
        "end_column": 80,
        "file": "LeanCamCombi/ExtrProbCombi/BinomialRandomGraph.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d : MeasurableSpace \u03a9\nG : \u03a9 \u2192 SimpleGraph \u03b1\np : \u211d\u22650\n\u03bc : Measure \u03a9\nhG : IsBinomialRandomGraph G p \u03bc\n\u22a2 iIndepFun (fun e \u03c9 => e \u2208 (G \u03c9).edgeSet) \u03bc",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BinomialRandomGraph.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-06T17:45:28+00:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "46b51bb59c19a979862a472d54fe0443db1e06fd4900df7d9725c480a4a05693"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 117,
        "start_column": 8,
        "end_line": 117,
        "end_column": 13,
        "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
      },
      "debug_info": {
        "goal": "case refine_1.refine_1\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ni : \u03b1\n\u22a2 MeasurableSet fun \u03c9 => X \u03c9 i",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L117"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "c06097e51866c5822f2ad5c1f1270bafce0377529b89ed6cb91d59de11397399"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 118,
        "start_column": 8,
        "end_line": 118,
        "end_column": 13,
        "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
      },
      "debug_info": {
        "goal": "case refine_1.refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ni : \u03b1\n\u22a2 MeasurableSet fun \u03c9 => Y \u03c9 i",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L118"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "c5663979c4e4160eb9e17548e7362b1b6a1e30575570fc12969c59fdaf579ebc"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 126,
        "start_column": 8,
        "end_line": 126,
        "end_column": 13,
        "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
      },
      "debug_info": {
        "goal": "case refine_2.refine_1\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\ni : \u03b1\nhi : i \u2208 s\n\u22a2 MeasurableSet {\u03c9 | X \u03c9 i}",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L126"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "2d1ba1571cdeea5db20afd81a9e33e81b25c72235079eeeba0fbfcd78bcbaede"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 127,
        "start_column": 8,
        "end_line": 127,
        "end_column": 13,
        "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
      },
      "debug_info": {
        "goal": "case refine_2.refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\ni : \u03b1\nhi : i \u2208 s\n\u22a2 MeasurableSet {\u03c9 | Y \u03c9 i}",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L127"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "bc51c379889ca30374c7178ae2623e99043d06fd3c005f816ba5bebedcd3509a"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 130,
        "start_column": 6,
        "end_line": 130,
        "end_column": 11,
        "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
      },
      "debug_info": {
        "goal": "case refine_2.hs\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 MeasurableSet (\u22c2 i \u2208 s, {\u03c9 | X \u03c9 i})",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L130"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "0183bd953d3b7d8140d29187a408e2af62297dfb521544521b74627a89e2ee62"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 131,
        "start_column": 6,
        "end_line": 131,
        "end_column": 11,
        "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
      },
      "debug_info": {
        "goal": "case refine_2.ht\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 MeasurableSet (\u22c2 i \u2208 s, {\u03c9 | Y \u03c9 i})",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L131"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "06324b761a5af46b48dd70c49ede9cbd3c0668d0e42d231cd7f1e810746e51ab"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 132,
        "start_column": 11,
        "end_line": 132,
        "end_column": 16,
        "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\na : \u03b1\n\u22a2 Measure.map (fun \u03c9 => a \u2208 X \u03c9 \u2229 Y \u03c9) \u03bc = (PMF.bernoulli' (p * q) \u22ef).toMeasure",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L132"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "532f84982618eda07d712d8400024a254e9e844c3d41a1de312c949aefc0ee38"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7,
        "file": "LeanCamCombi/ExtrProbCombi/BollobasContainment.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\n\u03a9 : Type u_3\ninst\u271d\u2074 : Fintype \u03b2\nG : \u2115 \u2192 \u03a9 \u2192 SimpleGraph \u03b1\nH : SimpleGraph \u03b2\ninst\u271d\u00b3 : Fintype \u2191H.edgeSet\ninst\u271d\u00b2 : (n : \u2115) \u2192 (\u03c9 : \u03a9) \u2192 DecidableRel (G n \u03c9).Adj\ninst\u271d\u00b9 : MeasurableSpace \u03a9\n\u03bc : Measure \u03a9\ninst\u271d : IsProbabilityMeasure \u03bc\np : \u2115 \u2192 \u211d\u22650\nhp : (fun n => \u2191(p n)) =o[atTop] fun n => \u2191n ^ (-\u2191H.maxEdgeSubdensity\u207b\u00b9)\n\u22a2 Tendsto (fun n => \u03bc {\u03c9 | H \u2291 G n \u03c9}) atTop (\ud835\udcdd 0)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BollobasContainment.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "f91cda7e4cffbd3704db63e56f69d9308223c66e0e6a13fac8e83defeaa77450"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7,
        "file": "LeanCamCombi/ExtrProbCombi/BollobasContainment.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\n\u03a9 : Type u_3\ninst\u271d\u2074 : Fintype \u03b2\nG : \u2115 \u2192 \u03a9 \u2192 SimpleGraph \u03b1\nH : SimpleGraph \u03b2\ninst\u271d\u00b3 : Fintype \u2191H.edgeSet\ninst\u271d\u00b2 : (n : \u2115) \u2192 (\u03c9 : \u03a9) \u2192 DecidableRel (G n \u03c9).Adj\ninst\u271d\u00b9 : MeasurableSpace \u03a9\n\u03bc : Measure \u03a9\ninst\u271d : IsProbabilityMeasure \u03bc\np : \u2115 \u2192 \u211d\u22650\nhp : (fun n => \u2191n ^ (-\u2191H.maxEdgeSubdensity\u207b\u00b9)) =o[atTop] fun n => \u2191(p n)\n\u22a2 Tendsto (fun n => \u03bc {\u03c9 | H \u2291 G n \u03c9}) atTop (\ud835\udcdd 1)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BollobasContainment.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "38c11c492591e4f1eaa791522219fb7aa5c05d2305da24cc98dd50cebd619d6f"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 97,
        "start_column": 72,
        "end_line": 97,
        "end_column": 77,
        "file": "LeanCamCombi/PlainCombi/VanDenBergKesten.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : Fintype \u03b1\n\ud835\udc9c \u212c : Finset (Finset \u03b1)\n\u22a2 2 ^ Fintype.card \u03b1 * #(\ud835\udc9c \u25a1 \u212c) \u2264 #\ud835\udc9c * #\u212c",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/PlainCombi/VanDenBergKesten.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-21T08:29:20+00:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "0fcbdc47a490598239e7f1e78eaa58164a051ca492662eb6f40959b437097dc1"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 33,
        "start_column": 2,
        "end_line": 33,
        "end_column": 7,
        "file": "LeanCamCombi/PlainCombi/LittlewoodOfford.lean"
      },
      "debug_info": {
        "goal": "case insert.intro.intro.intro.intro.intro\n\u03b9 : Type u_1\nE : Type u_2\ninst\u271d\u00b2 : NormedAddCommGroup E\ninst\u271d\u00b9 : NormedSpace \u211d E\ns\u271d : Finset \u03b9\nf : \u03b9 \u2192 E\nr : \u211d\ninst\u271d : DecidableEq \u03b9\nhr : 0 < r\ni : \u03b9\ns : Finset \u03b9\nhi : i \u2209 s\nhf : \u2200 i_1 \u2208 insert i s, r \u2264 \u2016f i_1\u2016\nP : Finpartition s.powerset\nhP : #P.parts = (#s).choose (#s / 2)\nhs : \u2200 \ud835\udc9c \u2208 P.parts, \u2200 t \u2208 \ud835\udc9c, t \u2286 s\nhPr : \u2200 \ud835\udc9c \u2208 P.parts, (\u2191\ud835\udc9c).Pairwise fun u v => r \u2264 dist (\u2211 i \u2208 u, f i) (\u2211 i \u2208 v, f i)\ng : E \u2192L[\u211d] \u211d\nhg : \u2016g\u2016 = 1\nhgf : g (f i) = \u2191\u2016f i\u2016\nt : Finset (Finset \u03b9) \u2192 Finset \u03b9\nht : \u2200 \ud835\udc9c \u2208 P.parts, t \ud835\udc9c \u2208 \ud835\udc9c \u2227 \u2200 x' \u2208 \ud835\udc9c, g (\u2211 i \u2208 x', f i) \u2264 g (\u2211 i \u2208 t \ud835\udc9c, f i)\n\u22a2 \u2203 P,\n    #P.parts = (#(insert i s)).choose (#(insert i s) / 2) \u2227\n      (\u2200 \ud835\udc9c \u2208 P.parts, \u2200 t \u2208 \ud835\udc9c, t \u2286 insert i s) \u2227\n        \u2200 \ud835\udc9c \u2208 P.parts, (\u2191\ud835\udc9c).Pairwise fun u v => r \u2264 dist (\u2211 i \u2208 u, f i) (\u2211 i \u2208 v, f i)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/PlainCombi/LittlewoodOfford.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "25b2db5be9910c4c534877f6d268145ded7f52147caef0fa9dbe2b1d44b27387"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 38,
        "start_column": 42,
        "end_line": 38,
        "end_column": 47,
        "file": "LeanCamCombi/StableCombi/Rel.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nn : \u2115\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\nhr : IsStableRelWith n r\n\u22a2 IsTreeBoundedRelWith (2 ^ n + 1) r",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/StableCombi/Rel.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-12-17T20:50:42+00:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "ac26d5ff17429f369dcb78856730b3664538c3a71d3cf04649cc583df6c86224"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 41,
        "start_column": 33,
        "end_line": 41,
        "end_column": 38,
        "file": "LeanCamCombi/StableCombi/Rel.lean"
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nn : \u2115\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\nhr : IsTreeBoundedRelWith n r\n\u22a2 IsStableRelWith (2 ^ n) r",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/StableCombi/Rel.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-12-17T20:50:42+00:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "7b02aff6f66f487495b5f76843ba7dc3a04ce36bc3b154104ed8f1992544b205"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 25,
        "start_column": 60,
        "end_line": 25,
        "end_column": 65,
        "file": "LeanCamCombi/GrowthInGroups/Lecture4.lean"
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nC\u2080 : \u211d\nhC\u2080 : \u2191(Fintype.card n) < C\u2080\nK : \u211d\n\u22a2 \u2203 \u03b4,\n    \u2200 (A : Finset (GL n \u2102)),\n      IsApproximateSubgroup K \u2191A \u2192 (\u2200 a \u2208 A, \u2016\u2191a\u2016 \u2264 C\u2080) \u2192 \u2203 \u03b3 \u2208 A ^ 2, \u03b4 * \u2191(#A) \u2264 \u2191(#({x \u2208 A ^ 4 | Commute \u03b3 x}))",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GrowthInGroups/Lecture4.lean#L25"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-11-16T11:30:19+00:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "9e9e2251f953eab398c6e3389c032592aa31c5dbd9c2c8f24144e38875d630eb"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 30,
        "start_column": 30,
        "end_line": 30,
        "end_column": 35,
        "file": "LeanCamCombi/GrowthInGroups/Lecture4.lean"
      },
      "debug_info": {
        "goal": "K C\u2080 : \u211d\n\u22a2 \u2203 C > 0,\n    \u2200 (A : Set SL(2, \u2102)),\n      IsApproximateSubgroup K A \u2192 \u2203 Z, \u2203 (_ : \u2200 x \u2208 Z, \u2200 y \u2208 Z, Commute x y), \u2203 F, #F \u2264 C \u2227 A \u2286 \u2191F * \u2191Z",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GrowthInGroups/Lecture4.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-11-16T11:30:19+00:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "bc809e511427e236c2df25fd3d34a06f10fae32fc59b42754634786397cca7ff"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 41,
        "start_column": 69,
        "end_line": 41,
        "end_column": 74,
        "file": "LeanCamCombi/GrowthInGroups/Lecture4.lean"
      },
      "debug_info": {
        "goal": "C : \u211d\nG : Type u_2\ninst\u271d\u00b9 : Group G\ninst\u271d : DecidableEq G\nS : Finset G\nhSsymm : S\u207b\u00b9 = S\nhSgen : \u2191(Subgroup.closure \u2191S) = Set.univ\nd : \u2115\nhS : \u2200 (n : \u2115), \u2191(#(S ^ n)) \u2264 C * \u2191n ^ d\n\u22a2 IsVirtuallyNilpotent G",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GrowthInGroups/Lecture4.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-11-16T11:30:19+00:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "27ebd927086c4db93549c5a98d6cf30a84d8c7108f91354d83a57fe135fc2189"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 24,
        "start_column": 6,
        "end_line": 24,
        "end_column": 11,
        "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
      },
      "debug_info": {
        "goal": "case refine_2\n\u03b9 : Type u_2\nG : \u03b9 \u2192 Type u_3\ninst\u271d\u00b9 : Fintype \u03b9\ninst\u271d : (i : \u03b9) \u2192 Group (G i)\nA : (i : \u03b9) \u2192 Set (G i)\nK : \u03b9 \u2192 \u211d\nhA : \u2200 (i : \u03b9), IsApproximateSubgroup (K i) (A i)\nF : (i : \u03b9) \u2192 Finset (G i)\nhF : \u2200 (i : \u03b9), \u2191(#(F i)) \u2264 K i\nhFS : \u2200 (i : \u03b9), A i ^ 2 \u2286 \u2191(F i) \u2022 A i\n\u22a2 Set.univ.pi A ^ 2 \u2286 \u2191(Fintype.piFinset F) \u2022 Set.univ.pi A",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L24"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "edd13d8191b120ebea432442b2ba6f559c7fac2d3401253ce8d4c99e15ebfac8"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 42,
        "start_column": 64,
        "end_line": 42,
        "end_column": 69,
        "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
      },
      "debug_info": {
        "goal": "case h\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\na\u271d : G\n\u22a2 a\u271d \u2208 A\u207b\u00b9 * A \u2192 (\u2191(#A) / (2 * K) \u2264 \u2191(#((MulOpposite.op a\u271d)\u207b\u00b9 \u2022> A \u2229 A)) \u2194 \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 a\u271d \u2229 A)))",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "cb50e1caabd09046920c755e06c55399a308100ee27c75b2936f66ac91ebb5f0"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 59,
        "start_column": 4,
        "end_line": 59,
        "end_column": 9,
        "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
      },
      "debug_info": {
        "goal": "case intro.intro.intro.refine_2\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191(#S) \u2264 K ^ 2 * \u2191(#A)\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191(#F) \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2191(#(S ^ 2)) \u2264 16 * K ^ 12 * \u2191(#A)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L59"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "721cb512ffad45e7933f66dd12e701f60a41596bd9a7b5c7473e45302bb65d93"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 60,
        "start_column": 4,
        "end_line": 60,
        "end_column": 9,
        "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
      },
      "debug_info": {
        "goal": "case intro.intro.intro.refine_3\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191(#S) \u2264 K ^ 2 * \u2191(#A)\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191(#F) \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2203 a \u2208 A, \u2191(#A) / (2 * K) \u2264 \u2191(#(A \u2229 S ^ 2 <\u2022 a))",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "3e635215843fdf70c6597f1bfed9e55c9faceff82c41ca1fc138b5ddcacd4ffd"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 45,
        "start_column": 22,
        "end_line": 45,
        "end_column": 27,
        "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\n\u22a2 \u2191(#(A\u207b\u00b9 * A)) \u2264 K ^ 2 * \u2191(#A)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L45"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "58fc57b29c1148d6decafbb5b43525f88aa71e1cffaea3fcc32a423d64b34705"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 46,
        "start_column": 69,
        "end_line": 46,
        "end_column": 74,
        "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191(#S) \u2264 K ^ 2 * \u2191(#A)\n\u22a2 \u2203 F \u2286 A, \u2191(#F) \u2264 2 * K \u2227 A \u2286 S * F",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "19c0481c5bc3939a05949d6d735fc88f540a6fac6a649b96ac38c8dacf7ded32"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "start_line": 54,
        "start_column": 29,
        "end_line": 54,
        "end_column": 34,
        "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191(#S) \u2264 K ^ 2 * \u2191(#A)\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191(#F) \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2191(#(A * S ^ 3 * A\u207b\u00b9)) \u2264 8 * K ^ 11 * \u2191(#A)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-04-18T04:20:00.847833+00:00"
      },
      "id": "03aa836926fe6e9fa2eb93286d620ec46ac808bb6783d3f72983bf8b132889ef"
    }
  ]
}