[
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "14e440084440c995745fbffc241f27b10f64f731",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/MaximalConsistentSet.lean",
      "start_line": 191,
      "start_column": 4,
      "end_line": 191,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case inl\n\u03b1 : Type u_1\nS : Type u_2\ninst\u271d\u00b3 : Entailment (Formula \u03b1) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : DecidableEq \u03b1\nT : FormulaSet \u03b1\ninst\u271d\u00b9 : Entailment.Cl \ud835\udce2\n\u03c6 : Formula \u03b1\ninst\u271d : Necessitation \ud835\udce2\nT_consis : Consistent \ud835\udce2 T\nh : \u223c\u25a1\u03c6 \u2208 T\nh\u0393 : \u2191\u2205 \u2286 {\u223c\u03c6}\n\u22a2 \u2191\u2205 *\u22ac[\ud835\udce2] \u22a5",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/14e440084440c995745fbffc241f27b10f64f731/Foundation/Modal/MaximalConsistentSet.lean#L191"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-05-12T12:29:45+09:00",
      "inclusion_date": "2025-05-12T21:07:16.153700+00:00"
    },
    "id": "7fcd8b389b3e552160fb3918c78ba42b34e8409b4d609e1aefd184a691bc80ee"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "14e440084440c995745fbffc241f27b10f64f731",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/MaximalConsistentSet.lean",
      "start_line": 194,
      "start_column": 4,
      "end_line": 194,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case inr\n\u03b1 : Type u_1\nS : Type u_2\ninst\u271d\u00b3 : Entailment (Formula \u03b1) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : DecidableEq \u03b1\nT : FormulaSet \u03b1\ninst\u271d\u00b9 : Entailment.Cl \ud835\udce2\n\u03c6 : Formula \u03b1\ninst\u271d : Necessitation \ud835\udce2\nT_consis : Consistent \ud835\udce2 T\nh : \u223c\u25a1\u03c6 \u2208 T\nh\u0393 : \u2191{\u223c\u03c6} \u2286 {\u223c\u03c6}\n\u22a2 \u2191{\u223c\u03c6} *\u22ac[\ud835\udce2] \u22a5",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/14e440084440c995745fbffc241f27b10f64f731/Foundation/Modal/MaximalConsistentSet.lean#L194"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-05-12T12:29:45+09:00",
      "inclusion_date": "2025-05-12T21:07:16.153700+00:00"
    },
    "id": "9bddb51c45523c4058051c48d08756ae69b879beacd4e1253483b8489334f8e7"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "14e440084440c995745fbffc241f27b10f64f731",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/Hilbert/NNFormula.lean",
      "start_line": 232,
      "start_column": 8,
      "end_line": 232,
      "end_column": 13
    },
    "debug_info": {
      "goal": "\u03c6 : NNFormula \u2115\n\u22a2 \u2203 \u03c8, \u03c8.isModalCNF \u2227 Hilbert.K \u22a2! \u03c6.toFormula \u2b64 \u03c8.toFormula",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/14e440084440c995745fbffc241f27b10f64f731/Foundation/Modal/Hilbert/NNFormula.lean#L232"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-05-12T21:07:16.153700+00:00"
    },
    "id": "ff8493ccec0cf95605d94faa2958c196a64ffbade1d2c735c10b70649bb646a2"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "14e440084440c995745fbffc241f27b10f64f731",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/Hilbert/NNFormula.lean",
      "start_line": 236,
      "start_column": 8,
      "end_line": 236,
      "end_column": 13
    },
    "debug_info": {
      "goal": "\u03c6 : NNFormula \u2115\n\u22a2 \u2203 \u03c8, \u03c8.isModalDNF \u2227 Hilbert.K \u22a2! \u03c6.toFormula \u2b64 \u03c8.toFormula",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/14e440084440c995745fbffc241f27b10f64f731/Foundation/Modal/Hilbert/NNFormula.lean#L236"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-05-12T21:07:16.153700+00:00"
    },
    "id": "47fd6200675e134fd8c90f0764f7fb6ce897a4dc5260cb6eb333584392552a0a"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "14e440084440c995745fbffc241f27b10f64f731",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/Maximal/Makinson.lean",
      "start_line": 27,
      "start_column": 25,
      "end_line": 27,
      "end_column": 30
    },
    "debug_info": {
      "goal": "L : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\n\u22a2 \u03b3 \u2208 L",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/14e440084440c995745fbffc241f27b10f64f731/Foundation/Modal/Maximal/Makinson.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-05-12T21:07:16.153700+00:00"
    },
    "id": "0a6816d72e7b1d580ccd6177692038fffa5fd97773e08107b3bf04ae9cbfb98f"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "14e440084440c995745fbffc241f27b10f64f731",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/Maximal/Makinson.lean",
      "start_line": 28,
      "start_column": 33,
      "end_line": 28,
      "end_column": 38
    },
    "debug_info": {
      "goal": "L : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\n\u22a2 \u03b3 \u2209 Logic.Ver",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/14e440084440c995745fbffc241f27b10f64f731/Foundation/Modal/Maximal/Makinson.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-05-12T21:07:16.153700+00:00"
    },
    "id": "edbb2c86f7084bd511d49ac17a21d50d60da519f5905ab72813dbd40654ad7f2"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "14e440084440c995745fbffc241f27b10f64f731",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/Maximal/Makinson.lean",
      "start_line": 31,
      "start_column": 4,
      "end_line": 31,
      "end_column": 9
    },
    "debug_info": {
      "goal": "L : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u22a2 \u2203 \u03b4 \u2208 \u0393, (\u2191\u03b4).toFormula \u2208 L \u2227 (\u2191\u03b4).toFormula \u2209 Logic.Ver",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/14e440084440c995745fbffc241f27b10f64f731/Foundation/Modal/Maximal/Makinson.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-05-12T21:07:16.153700+00:00"
    },
    "id": "93d9bb288758e8e9989ed8f32cc1b4cb60a693921ade5be33689213c435c26b2"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "14e440084440c995745fbffc241f27b10f64f731",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/Maximal/Makinson.lean",
      "start_line": 36,
      "start_column": 4,
      "end_line": 36,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case mk.intro\nL : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis\u271d : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u0394 : List { \u03c8 // \u03c8.isPrebox \u2228 \u03c8.isPredia \u2228 \u03c8.degree = 0 }\nh\u03b4\u0393 : \u27e8\u22c1\u0394.unattach, \u22ef\u27e9 \u2208 \u0393\nh\u03b4L : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2208 L\nh\u03b4V : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2209 Logic.Ver\n\u03be : NNFormula \u2115\nproperty\u271d : (\u25a1\u03be).isPrebox \u2228 (\u25a1\u03be).isPredia \u2228 (\u25a1\u03be).degree = 0\nh\u03c8\u2081 : \u27e8\u25a1\u03be, property\u271d\u27e9 \u2208 \u0394\nh\u03c8\u2082 : (\u2191\u27e8\u25a1\u03be, property\u271d\u27e9).isPrebox\nthis : \u25a1\u03be.toFormula \u2208 Logic.Ver\n\u22a2 False",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/14e440084440c995745fbffc241f27b10f64f731/Foundation/Modal/Maximal/Makinson.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-05-12T21:07:16.153700+00:00"
    },
    "id": "90bb44074268ebbafaedefe81b96d1245e1feada429f1276f307c6c6f2166550"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "14e440084440c995745fbffc241f27b10f64f731",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/Maximal/Makinson.lean",
      "start_line": 38,
      "start_column": 49,
      "end_line": 38,
      "end_column": 54
    },
    "debug_info": {
      "goal": "L : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u0394 : List { \u03c8 // \u03c8.isPrebox \u2228 \u03c8.isPredia \u2228 \u03c8.degree = 0 }\nh\u03b4\u0393 : \u27e8\u22c1\u0394.unattach, \u22ef\u27e9 \u2208 \u0393\nh\u03b4L : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2208 L\nh\u03b4V : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2209 Logic.Ver\nh\u0394\u2081 : \u2200 \u03c8 \u2208 \u0394, \u00ac(\u2191\u03c8).isPrebox\n\u22a2 \u2203 \u0393, \u03c6 \u2b64 \u22c0\u0393 \u2208 L",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/14e440084440c995745fbffc241f27b10f64f731/Foundation/Modal/Maximal/Makinson.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-05-12T21:07:16.153700+00:00"
    },
    "id": "bb8bf2f7b78910e2f258e5053cf9c4ab23b6d751faa7d4384bedf9039d80fca8"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "14e440084440c995745fbffc241f27b10f64f731",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/Maximal/Makinson.lean",
      "start_line": 40,
      "start_column": 2,
      "end_line": 40,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case intro.intro.intro.intro.mk.intro.intro.intro\nL : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u00acHilbert.Ver \u22a2! \u03c6\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis\u271d : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u0394 : List { \u03c8 // \u03c8.isPrebox \u2228 \u03c8.isPredia \u2228 \u03c8.degree = 0 }\nh\u03b4\u0393 : \u27e8\u22c1\u0394.unattach, \u22ef\u27e9 \u2208 \u0393\nh\u03b4L : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2208 L\nh\u03b4V : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2209 Logic.Ver\nh\u0394\u2081 : \u2200 \u03c8 \u2208 \u0394, \u00ac(\u2191\u03c8).isPrebox\nthis : \u2203 \u0393, \u03c6 \u2b64 \u22c0\u0393 \u2208 L\n\u22a2 \u2203 \u03c8, \u25c7\u03c8 \u2208 L",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/14e440084440c995745fbffc241f27b10f64f731/Foundation/Modal/Maximal/Makinson.lean#L40"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-05-12T21:07:16.153700+00:00"
    },
    "id": "5cdd1365ca48a94e52f5a536b88a601e03bc4d57083398626dacfa8cc4ad3660"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "14e440084440c995745fbffc241f27b10f64f731",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/Kripke/Balloon.lean",
      "start_line": 63,
      "start_column": 2,
      "end_line": 63,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03c6 : Formula \u2115\nM : Model\ninst\u271d : IsStrictOrder M.World M.Rel\nx : M.World\nh : \u00acx \u22a7 \u25a1\u03c6\n\u22a2 \u2203 y, x \u227a y \u2227 \u00acy \u22a7 \u03c6 \u2227 y \u22a7 \u25a1\u03c6",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/14e440084440c995745fbffc241f27b10f64f731/Foundation/Modal/Kripke/Balloon.lean#L63"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-26T09:19:50+09:00",
      "inclusion_date": "2025-05-12T21:07:16.153700+00:00"
    },
    "id": "d5a63e717f6209eb6b5ce01b626d579c90ced0c6357714fa024f01dca887f63b"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "14e440084440c995745fbffc241f27b10f64f731",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/Kripke/Hilbert/GrzPoint3.lean",
      "start_line": 42,
      "start_column": 4,
      "end_line": 42,
      "end_column": 9
    },
    "debug_info": {
      "goal": "\u22a2 \u2200 {\u03c6 : Formula \u2115}, Grz.miniCanonicalFrame Hilbert.GrzPoint3 \u03c6 \u2208 FrameClass.finite_connected_partial_order",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/14e440084440c995745fbffc241f27b10f64f731/Foundation/Modal/Kripke/Hilbert/GrzPoint3.lean#L42"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-14T14:50:18+09:00",
      "inclusion_date": "2025-05-12T21:07:16.153700+00:00"
    },
    "id": "573ee9adfac1c5bb18affc242305cd16ab7aca4afe61f60245e6d7eae80ee0f8"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "14e440084440c995745fbffc241f27b10f64f731",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/Kripke/Hilbert/GLPoint3.lean",
      "start_line": 33,
      "start_column": 101,
      "end_line": 33,
      "end_column": 106
    },
    "debug_info": {
      "goal": "\u22a2 Complete Hilbert.GLPoint3 FrameClass.finite_strict_linear_order",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/14e440084440c995745fbffc241f27b10f64f731/Foundation/Modal/Kripke/Hilbert/GLPoint3.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-17T22:57:50+09:00",
      "inclusion_date": "2025-05-12T21:07:16.153700+00:00"
    },
    "id": "66f1ccf53fcf769d8668e027ded3630640243743cec408528bf17c25ccd70e88"
  },
  {
    "repo": {
      "remote": "https://github.com/HEPLean/PhysLean",
      "branch": "EMwave",
      "commit": "1a485b181fd479295c2fb42f33cf1c2537bd8f08",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PhysLean/Electromagnetism/Wave.lean",
      "start_line": 212,
      "start_column": 2,
      "end_line": 212,
      "end_column": 7
    },
    "debug_info": {
      "goal": "OM : OpticalMedium\nt : Time\nx : Space\n_p\u271d : ENNReal\ns : WithLp _p\u271d (Fin 3 \u2192 \u211d)\nE : ElectricField\nB : MagneticField\n\u22a2 \u221a(OM.\u03bc \u2022 OM.\u03b5)\u207b\u00b9 \u2022 B t x =\n    (WithLp.equiv 2 (Fin 3 \u2192 \u211d)).symm\n      ((crossProduct ((WithLp.equiv _p\u271d (Fin 3 \u2192 \u211d)) s)) ((WithLp.equiv 2 (Fin 3 \u2192 \u211d)) (E t x)))",
      "url": "https://github.com/HEPLean/PhysLean/blob/1a485b181fd479295c2fb42f33cf1c2537bd8f08/PhysLean/Electromagnetism/Wave.lean#L212"
    },
    "metadata": {
      "blame_email_hash": "95cd4b9b9759",
      "blame_date": "2025-05-11T15:58:00+01:00",
      "inclusion_date": "2025-05-12T21:29:35.871869+00:00"
    },
    "id": "6b6eba850caddc1f1c4115e76da72fe13cc0dedc9e47bcdbbaa861d65fd3d767"
  },
  {
    "repo": {
      "remote": "https://github.com/HEPLean/PhysLean",
      "branch": "EMwave",
      "commit": "1a485b181fd479295c2fb42f33cf1c2537bd8f08",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PhysLean/Electromagnetism/Wave.lean",
      "start_line": 217,
      "start_column": 2,
      "end_line": 217,
      "end_column": 7
    },
    "debug_info": {
      "goal": "OM : OpticalMedium\nt : Time\nx : Space\n_p\u271d : ENNReal\ns : WithLp _p\u271d (Fin 3 \u2192 \u211d)\nE : ElectricField\nB : MagneticField\n\u22a2 \u221a(OM.\u03bc \u2022 OM.\u03b5)\u207b\u00b9 \u2022 E t x =\n    (WithLp.equiv 2 (Fin 3 \u2192 \u211d)).symm\n      ((crossProduct ((WithLp.equiv _p\u271d (Fin 3 \u2192 \u211d)) s)) ((WithLp.equiv 2 (Fin 3 \u2192 \u211d)) (B t x)))",
      "url": "https://github.com/HEPLean/PhysLean/blob/1a485b181fd479295c2fb42f33cf1c2537bd8f08/PhysLean/Electromagnetism/Wave.lean#L217"
    },
    "metadata": {
      "blame_email_hash": "95cd4b9b9759",
      "blame_date": "2025-05-11T15:58:00+01:00",
      "inclusion_date": "2025-05-12T21:29:35.871869+00:00"
    },
    "id": "b4b84951b233c073f2979b62b63ff4f573acab44aa89beed1becaa52ff8ffa8f"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "e374975037c1fafa9c100468cec20c1c1829a3b0",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Smt/Reconstruct/BitVec/Bitblast.lean",
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7
    },
    "debug_info": {
      "goal": "w : Nat\nx y : BitVec w\n\u22a2 (x = y) = (BitVec.beq w x y = true)",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/e374975037c1fafa9c100468cec20c1c1829a3b0/Smt/Reconstruct/BitVec/Bitblast.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "a29bc6f92c6c",
      "blame_date": "2024-05-08T17:36:04-07:00",
      "inclusion_date": "2025-05-14T21:24:03.854153+00:00"
    },
    "id": "8516e21dbf639a609d1ba64b5b9a0e4d541aa642903d47566217b8562a2aec9e"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "e374975037c1fafa9c100468cec20c1c1829a3b0",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Test/BitVec/Shift.lean",
      "start_line": 8,
      "start_column": 2,
      "end_line": 8,
      "end_column": 7
    },
    "debug_info": {
      "goal": "x y : BitVec 2\n\u22a2 x ++ y = zeroExtend 4 x <<< 2#2 ||| zeroExtend 4 y",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/e374975037c1fafa9c100468cec20c1c1829a3b0/Test/BitVec/Shift.lean#L8"
    },
    "metadata": {
      "blame_email_hash": "2d71a621927f",
      "blame_date": "2022-08-05T17:11:15+02:00",
      "inclusion_date": "2025-05-14T21:24:03.854153+00:00"
    },
    "id": "d4ffb8f05b70b0916c481ed92ccc2807f6da9495c9ca06bbdf374401966e4d5f"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "e374975037c1fafa9c100468cec20c1c1829a3b0",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Test/BitVec/Shift.lean",
      "start_line": 13,
      "start_column": 2,
      "end_line": 13,
      "end_column": 7
    },
    "debug_info": {
      "goal": "x y : BitVec 3\n\u22a2 x ++ y = zeroExtend 6 x <<< 3#2 ||| zeroExtend 6 y",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/e374975037c1fafa9c100468cec20c1c1829a3b0/Test/BitVec/Shift.lean#L13"
    },
    "metadata": {
      "blame_email_hash": "2d71a621927f",
      "blame_date": "2022-08-05T17:11:15+02:00",
      "inclusion_date": "2025-05-14T21:24:03.854153+00:00"
    },
    "id": "0f50ca20250f77cb6186aa83021fed6ad59e867239ae61958fabc708cf77d9d8"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "e374975037c1fafa9c100468cec20c1c1829a3b0",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Test/BitVec/XorComm.lean",
      "start_line": 5,
      "start_column": 2,
      "end_line": 5,
      "end_column": 7
    },
    "debug_info": {
      "goal": "x y : BitVec 2\n\u22a2 x ^^^ y = y ^^^ x",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/e374975037c1fafa9c100468cec20c1c1829a3b0/Test/BitVec/XorComm.lean#L5"
    },
    "metadata": {
      "blame_email_hash": "2d71a621927f",
      "blame_date": "2022-07-14T12:41:05-04:00",
      "inclusion_date": "2025-05-14T21:24:03.854153+00:00"
    },
    "id": "b1b8a17ad03630dc282f3b45339bdf93203a4db61f07e7ba9a504e8ab41b44f9"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "e374975037c1fafa9c100468cec20c1c1829a3b0",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Test/BitVec/XorComm.lean",
      "start_line": 9,
      "start_column": 2,
      "end_line": 9,
      "end_column": 7
    },
    "debug_info": {
      "goal": "x y : BitVec (4 + 4)\n\u22a2 x ^^^ y = y ^^^ x",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/e374975037c1fafa9c100468cec20c1c1829a3b0/Test/BitVec/XorComm.lean#L9"
    },
    "metadata": {
      "blame_email_hash": "2d71a621927f",
      "blame_date": "2022-07-14T12:41:05-04:00",
      "inclusion_date": "2025-05-14T21:24:03.854153+00:00"
    },
    "id": "0855ee59ec5f9377d9d121f85d005d3e45e8c70a44eb3accef6588c057a87bc5"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "5d35ecc273cb1f8344b23f6d23dd69f33601ed31",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Test/String/Contains.lean",
      "start_line": 5,
      "start_column": 2,
      "end_line": 5,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 \"a\".contains 'a' = true",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/5d35ecc273cb1f8344b23f6d23dd69f33601ed31/Test/String/Contains.lean#L5"
    },
    "metadata": {
      "blame_email_hash": "a29bc6f92c6c",
      "blame_date": "2022-11-12T16:45:23-08:00",
      "inclusion_date": "2025-05-12T22:08:32.207683+00:00"
    },
    "id": "80d094f4e3c509afd0a796f85ff118e070893c7da20af85fedc39aa7fedc301d"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "e374975037c1fafa9c100468cec20c1c1829a3b0",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Test/Int/DefineSort.lean",
      "start_line": 8,
      "start_column": 2,
      "end_line": 8,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : MyInt\n\u22a2 MyInt.add a b = MyInt.add b a",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/e374975037c1fafa9c100468cec20c1c1829a3b0/Test/Int/DefineSort.lean#L8"
    },
    "metadata": {
      "blame_email_hash": "2d71a621927f",
      "blame_date": "2022-07-14T12:41:05-04:00",
      "inclusion_date": "2025-05-14T21:24:03.854153+00:00"
    },
    "id": "414bc67af76b66535c04f59d8bceea99da51b65863ee8144575069fa53d2d754"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "e374975037c1fafa9c100468cec20c1c1829a3b0",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Test/Int/Binders.lean",
      "start_line": 7,
      "start_column": 2,
      "end_line": 7,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : Int\n\u22a2 curryAdd a b = curryAdd b a",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/e374975037c1fafa9c100468cec20c1c1829a3b0/Test/Int/Binders.lean#L7"
    },
    "metadata": {
      "blame_email_hash": "2d71a621927f",
      "blame_date": "2022-07-14T12:41:05-04:00",
      "inclusion_date": "2025-05-14T21:24:03.854153+00:00"
    },
    "id": "c40c2b199e8e70cd7530ef40aa540f6659b012113ebc29689c14b32eb5a107d3"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "e374975037c1fafa9c100468cec20c1c1829a3b0",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Test/Int/Binders.lean",
      "start_line": 13,
      "start_column": 2,
      "end_line": 13,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : Int\n\u22a2 partCurryAdd a b = partCurryAdd b a",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/e374975037c1fafa9c100468cec20c1c1829a3b0/Test/Int/Binders.lean#L13"
    },
    "metadata": {
      "blame_email_hash": "2d71a621927f",
      "blame_date": "2022-07-14T12:41:05-04:00",
      "inclusion_date": "2025-05-14T21:24:03.854153+00:00"
    },
    "id": "3a081373cba48ef829ef0f5f948c26b2805880e2cefb980acac9913ef01871af"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "e374975037c1fafa9c100468cec20c1c1829a3b0",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Test/Int/Binders.lean",
      "start_line": 20,
      "start_column": 2,
      "end_line": 20,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : Int\npartCurryAdd' : Int \u2192 Int \u2192 Int := fun a => HAdd.hAdd a\n\u22a2 partCurryAdd' a b = partCurryAdd' b a",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/e374975037c1fafa9c100468cec20c1c1829a3b0/Test/Int/Binders.lean#L20"
    },
    "metadata": {
      "blame_email_hash": "2d71a621927f",
      "blame_date": "2022-07-14T12:41:05-04:00",
      "inclusion_date": "2025-05-14T21:24:03.854153+00:00"
    },
    "id": "a8b9e635192b3fb87a629d1efaefd0e3a6f4eaae0aa6cca06e55d3b3bf1d08ab"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "e374975037c1fafa9c100468cec20c1c1829a3b0",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Test/Int/Binders.lean",
      "start_line": 27,
      "start_column": 2,
      "end_line": 27,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : Int\n\u22a2 mismatchNamesAdd a b = mismatchNamesAdd b a",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/e374975037c1fafa9c100468cec20c1c1829a3b0/Test/Int/Binders.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "2d71a621927f",
      "blame_date": "2022-07-14T12:41:05-04:00",
      "inclusion_date": "2025-05-14T21:24:03.854153+00:00"
    },
    "id": "87d23c6a2b8b43f8679417d036cb2f214ebc5e4e2523bb4dd51d0ce61601d6e8"
  },
  {
    "repo": {
      "remote": "https://github.com/HEPLean/PhysLean",
      "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
      "commit": "b4a420deef68762a68898a4245f54fb1992b6f4c",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
      "start_line": 75,
      "start_column": 17,
      "end_line": 75,
      "end_column": 22
    },
    "debug_info": {
      "goal": "d : \u2115\n\u22a2 (detRep 1, orthchroRep 1) = 1",
      "url": "https://github.com/HEPLean/PhysLean/blob/b4a420deef68762a68898a4245f54fb1992b6f4c/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L75"
    },
    "metadata": {
      "blame_email_hash": "f5ab4f28bed3",
      "blame_date": "2025-05-05T23:32:38+10:00",
      "inclusion_date": "2025-05-13T21:05:20.577468+00:00"
    },
    "id": "650ac535039891699611762b1607ed5e85a37f70539ce611cc534d7ae0dc8af2"
  },
  {
    "repo": {
      "remote": "https://github.com/HEPLean/PhysLean",
      "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
      "commit": "b4a420deef68762a68898a4245f54fb1992b6f4c",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
      "start_line": 76,
      "start_column": 17,
      "end_line": 76,
      "end_column": 22
    },
    "debug_info": {
      "goal": "d : \u2115\n\u22a2 \u2200 (x y : \u2191(LorentzGroup d)),\n    (detRep (x * y), orthchroRep (x * y)) = (detRep x, orthchroRep x) * (detRep y, orthchroRep y)",
      "url": "https://github.com/HEPLean/PhysLean/blob/b4a420deef68762a68898a4245f54fb1992b6f4c/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "f5ab4f28bed3",
      "blame_date": "2025-05-05T23:32:38+10:00",
      "inclusion_date": "2025-05-13T21:05:20.577468+00:00"
    },
    "id": "022053c370c0e74a030bf4a71f656252c855fee8d8d97949bb939c36be855ca5"
  },
  {
    "repo": {
      "remote": "https://github.com/HEPLean/PhysLean",
      "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
      "commit": "b4a420deef68762a68898a4245f54fb1992b6f4c",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
      "start_line": 77,
      "start_column": 25,
      "end_line": 77,
      "end_column": 30
    },
    "debug_info": {
      "goal": "d : \u2115\n\u22a2 Continuous fun \u039b => (detRep \u039b, orthchroRep \u039b)",
      "url": "https://github.com/HEPLean/PhysLean/blob/b4a420deef68762a68898a4245f54fb1992b6f4c/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L77"
    },
    "metadata": {
      "blame_email_hash": "f5ab4f28bed3",
      "blame_date": "2025-05-05T23:32:38+10:00",
      "inclusion_date": "2025-05-13T21:05:20.577468+00:00"
    },
    "id": "69f4ede4c712f7bd8247e7278dc2e2e3b63522028b4a9ef070ef8fb870983b6c"
  },
  {
    "repo": {
      "remote": "https://github.com/HEPLean/PhysLean",
      "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
      "commit": "b4a420deef68762a68898a4245f54fb1992b6f4c",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
      "start_line": 86,
      "start_column": 2,
      "end_line": 86,
      "end_column": 7
    },
    "debug_info": {
      "goal": "d : \u2115\n\u22a2 _root_.IsConnected \u2191(LorentzGroup.restricted d)",
      "url": "https://github.com/HEPLean/PhysLean/blob/b4a420deef68762a68898a4245f54fb1992b6f4c/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L86"
    },
    "metadata": {
      "blame_email_hash": "f5ab4f28bed3",
      "blame_date": "2025-05-13T20:30:02+10:00",
      "inclusion_date": "2025-05-13T21:05:20.577468+00:00"
    },
    "id": "56d416332db27680a625dc9e3fcef645b48675ece9e1ee3f47398a3dcf1da58f"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/ProofSystem/Components.lean",
      "start_line": 62,
      "start_column": 9,
      "end_line": 62,
      "end_column": 14
    },
    "debug_info": {
      "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b9 : (i : \u03b9\u209b\u1d62) \u2192 OracleInterface (OStatement i)\nWitEquiv : Type\ninst\u271d : OracleInterface WitEquiv\nequiv : Witness \u2243 WitEquiv\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 Unit),\n    (OStatement \u2295\u1d65 fun x => WitEquiv) i =\n      match (\u22ef.mpr sorry) i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => (pSpec WitEquiv).Message j",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/ProofSystem/Components.lean#L62"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-24T11:52:07-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "472b72063798b1e718c34c74ccf30900dbd7fe3a5b7e3c6f8252506534d57a74"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/ProofSystem/Components.lean",
      "start_line": 80,
      "start_column": 2,
      "end_line": 80,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b2 : (i : \u03b9\u209b\u1d62) \u2192 OracleInterface (OStatement i)\nWitEquiv : Type\ninst\u271d\u00b9 : OracleInterface WitEquiv\nequiv : Witness \u2243 WitEquiv\nrelIn : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Witness \u2192 Prop\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness relIn (toRelOut Statement Witness OStatement WitEquiv equiv relIn)\n    (oracleReduction oSpec Statement Witness OStatement WitEquiv equiv)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/ProofSystem/Components.lean#L80"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-24T11:52:07-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "5852199af5febf0c3dedaf9367e2c27b4c70b00536b2255efcca56f524330ef2"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/ProofSystem/Components.lean",
      "start_line": 141,
      "start_column": 9,
      "end_line": 141,
      "end_column": 14
    },
    "debug_info": {
      "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst : (i : \u03b9\u209b\u1d62) \u2192 OracleInterface (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 \u03b9\u209b\u1d62),\n    (OStatement \u2295\u1d65 OStatement) i =\n      match sorry i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => (pSpec OStatement).Message j",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/ProofSystem/Components.lean#L141"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-24T11:52:07-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "3006ab34e1b4376f8024560eec434e629056b03a0bcd45e1a6c922c7cb04bdac"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/ProofSystem/Components.lean",
      "start_line": 167,
      "start_column": 2,
      "end_line": 167,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d\u00b9 : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst : (i : \u03b9\u209b\u1d62) \u2192 OracleInterface (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (fun x x_1 => rel x) (relOut OStatement)\n    (oracleReduction oSpec Statement OStatement relComp)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/ProofSystem/Components.lean#L167"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-24T11:52:07-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "bfae598ed623c9d6dee60f2dcad11cb025e62ccb829e4658612f84a33ed2c20c"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/ProofSystem/Components.lean",
      "start_line": 259,
      "start_column": 2,
      "end_line": 259,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nOStatement : Type\ninst\u271d\u00b9 : OracleInterface OStatement\ninst : VCVCompatible (Query OStatement)\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (relIn OStatement) (relOut OStatement) (oracleReduction oSpec OStatement)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/ProofSystem/Components.lean#L259"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-24T11:52:07-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "bf5d03fcb0c18ad74f5f8455b7a9050759ae5e6d7ab9000e90eb83ad74b30d70"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Execution.lean",
      "start_line": 185,
      "start_column": 2,
      "end_line": 185,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let a \u2190 (simulateQ loggingOracle (Prover.runToRound (Fin.last n) stmt wit reduction.prover)).run\n      (fun a_1 => (reduction.prover.toProverOut.1 a.1.2, a_1.1, a.1.1)) <$>\n          (simulateQ loggingOracle (reduction.verifier.verify stmt a.1.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190 Prover.run stmt wit reduction.prover\n    (fun a => ((__discr.1, __discr.2.1), a, __discr.2.2)) <$>\n        (reduction.verifier.verify stmt __discr.2.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/Execution.lean#L185"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "b99f04f31d85811623fb1f710339a7c41971e75d88e113970bdfa9233f23bfde"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Execution.lean",
      "start_line": 278,
      "start_column": 2,
      "end_line": 278,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\npSpec : ProtocolSpec 1\ninst\u271d : pSpec.ProverOnly\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let __discr \u2190\n        (fun a =>\n              ((reduction.prover.toProverOut.1 a.2).1, (reduction.prover.toProverOut.1 a.2).2, fun i =>\n                match i with\n                | \u27e80, isLt\u27e9 => a.1)) <$>\n            (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp\n              (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n      ((fun a => ((__discr.1, __discr.2.1), a, __discr.2.2)) <$> reduction.verifier.verify stmt __discr.2.2).liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190\n      (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n    ((fun a =>\n              (reduction.prover.toProverOut.1 __discr.2, a, fun i =>\n                match i with\n                | \u27e80, isLt\u27e9 => __discr.1)) <$>\n            reduction.verifier.verify stmt fun i =>\n              match i with\n              | \u27e80, isLt\u27e9 => __discr.1).liftComp\n        (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/Execution.lean#L278"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "09b28f441fccfe97242d7e858b48cfefff93a962ff1e6b18692d69d27f6c0af4"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Equiv.lean",
      "start_line": 66,
      "start_column": 2,
      "end_line": 66,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 (do\n      let _ \u2190 liftM (query 0 ())\n      (fun a => (0, \u2191a)) <$> liftM (query 1 ())) =\n    do\n    let y \u2190 liftM (query 1 ())\n    (fun a => (0, \u2191y)) <$> liftM (query 0 ())",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/Equiv.lean#L66"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:31:31-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "385707a9b5a1b4c879255519cb98af23b868bdfd66a13a63b74b26039de81034"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Equiv.lean",
      "start_line": 80,
      "start_column": 4,
      "end_line": 80,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case h.h.none\n\u22a2 (evalDist (OptionT.bind (liftM (query 1 ())) (OptionT.pure \u2218 fun a => (0, \u2191a)))) none =\n    \u2211' (a : Fin 2), 2\u207b\u00b9 * (evalDist (OptionT.bind (liftM (query 0 ())) (OptionT.pure \u2218 fun a_1 => (0, \u2191a)))) none",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/Equiv.lean#L80"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-04-16T18:04:04-04:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "b92017847a0a19596996833d09aaab730e01d51fa3e7a6420058070a72e05ec5"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Equiv.lean",
      "start_line": 85,
      "start_column": 4,
      "end_line": 85,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case h.h.some.mk\nx y : \u2115\n\u22a2 (Option.elimM ((PMF.uniformOfFintype (Fin 1)).bind fun a => PMF.pure (some a)) (PMF.pure none)\n        (OptionT.run \u2218 evalDist \u2218 fun x => OptionT.bind (liftM (query 1 ())) (OptionT.pure \u2218 fun a => (0, \u2191a))))\n      (some (x, y)) =\n    (Option.elimM ((PMF.uniformOfFintype (Fin 2)).bind fun a => PMF.pure (some a)) (PMF.pure none)\n        (OptionT.run \u2218 evalDist \u2218 fun y => OptionT.bind (liftM (query 0 ())) (OptionT.pure \u2218 fun a => (0, \u2191y))))\n      (some (x, y))",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/Equiv.lean#L85"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:31:31-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "f194fc129803a2bd52cd0caee751b2ee539cffe707cc3c0a85a124839e1245ed"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Equiv.lean",
      "start_line": 102,
      "start_column": 2,
      "end_line": 102,
      "end_column": 7
    },
    "debug_info": {
      "goal": "f : (i : \u2115) \u2192 unifSpec.domain i \u2192 Fin (i + 1)\n\u22a2 (some (f 0 ()) >>=\n      simulateQ\n          {\n            impl := fun {\u03b1} x =>\n              match \u03b1, x with\n              | .(unifSpec.range i), query i t => some (f i t) } \u2218\n        fun x => (fun a => (0, \u2191a)) <$> lift (query 1 ())) =\n    some (f 1 ()) >>=\n      simulateQ\n          {\n            impl := fun {\u03b1} x =>\n              match \u03b1, x with\n              | .(unifSpec.range i), query i t => some (f i t) } \u2218\n        fun y => (fun a => (0, \u2191y)) <$> lift (query 0 ())",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/Equiv.lean#L102"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:31:31-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "c4c23c0d97b5c2eb1cab8b3170c5b8f80b5897750ddd816727a7c3f5d2ba2a69"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/OracleInterface.lean",
      "start_line": 312,
      "start_column": 2,
      "end_line": 312,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u2075 : CommRing R\nd : \u2115\ninst\u271d\u2074 : Fintype R\ninst\u271d\u00b3 : DecidableEq R\ninst\u271d\u00b2 : IsDomain R\n\u03c3 : Type\ninst\u271d\u00b9 : Fintype \u03c3\ninst\u271d : DecidableEq \u03c3\na : R[X \u03c3]\nha : \u2200 (s : \u03c3 \u2192\u2080 \u2115), \u00acMvPolynomial.coeff s a = 0 \u2192 \u2200 (i : \u03c3), s i \u2264 d\nb : R[X \u03c3]\nhb : \u2200 (s : \u03c3 \u2192\u2080 \u2115), \u00acMvPolynomial.coeff s b = 0 \u2192 \u2200 (i : \u03c3), s i \u2264 d\nhNe : \u00aca = b\n\u22a2 {q | (MvPolynomial.eval q) a = (MvPolynomial.eval q) b}.card \u2264 Fintype.card \u03c3 * d",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/OracleInterface.lean#L312"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "77bfdae5dfd1e09bd9ecfb6464beaadc95a633b3aab75bbfd91919923a72ba77"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/OracleInterface.lean",
      "start_line": 351,
      "start_column": 2,
      "end_line": 351,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\nR : Type\ninst\u271d : CommSemiring R\nm : \u2115\nD : Fin m \u21aa R\np : R[X]\n\u22a2 \u2203 x,\n    ((OptionT.run (mapM (fun i => liftM (query (Sum.inr ()) (D i))) (List.finRange m))).mapM fun {\u03b1} =>\n          (statelessOracle spec [fun x => R[X]]\u2092 fun i q => oracle p q).impl) =\n        pure x \u2227\n      x.getM = pure (List.map (fun i => eval (D i) p) (List.finRange m))",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/OracleInterface.lean#L351"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "5200207ea58f04e38129aac7ebb6422f7136d0b4a89d0abc54fb892ab9f47a72"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Transform/FiatShamir.lean",
      "start_line": 130,
      "start_column": 66,
      "end_line": 130,
      "end_column": 71
    },
    "debug_info": {
      "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u2074 : VCVCompatible StmtIn\ninst\u271d\u00b3 : (i : Fin n) \u2192 VCVCompatible (pSpec i).2\ninst\u271d\u00b2 : DecidableEq \u03b9\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\ncompletenessError : \u211d\u22650\nR : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 Reduction.completeness relIn relOut R completenessError \u2192\n    Reduction.completeness relIn relOut R.fiatShamir completenessError",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Transform/FiatShamir.lean#L130"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-05-06T23:33:56-04:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "cc32c332eb19bc8e556c0b52e12a90eb9ed7278a81ddf947e188a014734b9eb1"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/CommitmentScheme/Fold.lean",
      "start_line": 100,
      "start_column": 2,
      "end_line": 100,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\np : R[X]\n\u22a2 (splitEvenOdd p).1.natDegree \u2264 p.natDegree / 2",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/CommitmentScheme/Fold.lean#L100"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-26T16:07:07-07:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "a04e1af54fa7776b07dfcefbbcae19e4e3e3e45ced10dde730d1b94a4eb62ae6"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/CommitmentScheme/Fold.lean",
      "start_line": 104,
      "start_column": 2,
      "end_line": 104,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\np : R[X]\n\u22a2 (splitEvenOdd p).2.natDegree \u2264 p.natDegree / 2",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/CommitmentScheme/Fold.lean#L104"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-26T16:07:07-07:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "83d7b5106eb9a469c4d3dbcc920f41c508639f755707c7657ed8f12bde4bf8b9"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/CommitmentScheme/Fold.lean",
      "start_line": 116,
      "start_column": 11,
      "end_line": 116,
      "end_column": 16
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\nn deg : \u2115\n\u03b6 : R\u02e3\nhPrim : IsPrimitiveRoot \u03b6 (2 ^ n)\np : \u21a5R\u2983< 2 * n\u2984[X]\npEven pOdd : R[X]\n\u22a2 pEven \u2208 R\u2983< n\u2984[X]",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/CommitmentScheme/Fold.lean#L116"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-26T16:07:07-07:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "72c38c7c778adb969c1177dbce2072fb09f02c64f24d88e32d1ba6e2ed300cc1"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/CommitmentScheme/Fold.lean",
      "start_line": 116,
      "start_column": 26,
      "end_line": 116,
      "end_column": 31
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\nn deg : \u2115\n\u03b6 : R\u02e3\nhPrim : IsPrimitiveRoot \u03b6 (2 ^ n)\np : \u21a5R\u2983< 2 * n\u2984[X]\npEven pOdd : R[X]\n\u22a2 pOdd \u2208 R\u2983< n\u2984[X]",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/CommitmentScheme/Fold.lean#L116"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-26T16:07:07-07:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "308c011a315cefc3e73d235f867d6c7dc470f95432287ea92fd7821aa7e0a07f"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/CommitmentScheme/MerkleTree.lean",
      "start_line": 219,
      "start_column": 6,
      "end_line": 219,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case succ\n\u03b1 : Type\ninst\u271d\u00b2 : DecidableEq \u03b1\ninst\u271d\u00b9 : Inhabited \u03b1\ninst\u271d : Fintype \u03b1\nhash : \u03b1 \u00d7 \u03b1 \u2192 \u03b1\nn : \u2115\nih :\n  \u2200 (leaves : List.Vector \u03b1 (2 ^ n)) (i : Fin (2 ^ n)),\n    (simulateQ (implement_with_function \u03b1 hash)\n        (do\n          let cache \u2190 buildMerkleTree \u03b1 n leaves\n          let proof : List.Vector \u03b1 n := generateProof \u03b1 i cache\n          verifyProof \u03b1 i leaves[i] (getRoot \u03b1 cache) proof\n          pure PUnit.unit)\n        ()).neverFails\nleaves : List.Vector \u03b1 (2 ^ (n + 1))\ni : Fin (2 ^ (n + 1))\n\u22a2 ((((Option.elimM (OptionT.run (buildMerkleTree \u03b1 (n + 1) leaves)) (FreeMonad.pure none)\n              (OptionT.run \u2218 fun cache =>\n                verifyProof \u03b1 i (leaves.get i) (getRoot \u03b1 cache) (generateProof \u03b1 i cache))).mapM\n          fun {\u03b1_1} q =>\n          match \u03b1_1, q with\n          | .((spec \u03b1).range i), query i (left, right) => pure (hash (left, right))) >>=\n        fun __do_lift => __do_lift.getM)\n      ()).neverFails",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/CommitmentScheme/MerkleTree.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "ab200eba5736",
      "blame_date": "2025-04-16T13:24:09-07:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "787c7fd5cf6dc5b7ce252da53374d0a2d2c8329b95f78a1a0f7454e1bdf91b66"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/AGM/Basic.lean",
      "start_line": 160,
      "start_column": 2,
      "end_line": 160,
      "end_column": 7
    },
    "debug_info": {
      "goal": "p : \u2115\ninst\u271d\u00b2 : Fact (Nat.Prime p)\nG\u2081 : Type u_2\ninst\u271d\u00b9 : CommGroup G\u2081\ninst\u271d : IsPrimeOrderWith G\u2081 p\nn : \u2115\ng : G\u2081\na : ZMod p\npoly : \u21a5(degreeLT (ZMod p) (n + 1))\n\u22a2 g ^ \u2211 i, a.val ^ \u2191i * ((degreeLTEquiv (ZMod p) (n + 1)) poly i).val =\n    g ^ (\u2211 x, (degreeLTEquiv (ZMod p) (n + 1)) poly x * a ^ \u2191x).val",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/AGM/Basic.lean#L160"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-15T12:13:54+05:30",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "c899c63402d6ea794df77623c317f7c282131b7596b804a84b91fe1b2f4f86bb"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/AGM/Basic.lean",
      "start_line": 171,
      "start_column": 6,
      "end_line": 171,
      "end_column": 11
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst\u271d\u2078 : CommGroup G\np : \u2115\ninst\u271d\u2077 : Fact (Nat.Prime p)\nh : Nat.card G = p\ng : G\nG\u2081 : Type u_2\ninst\u271d\u2076 : CommGroup G\u2081\ninst\u271d\u2075 : IsPrimeOrderWith G\u2081 p\ng\u2081 : G\u2081\nG\u2082 : Type u_3\ninst\u271d\u2074 : CommGroup G\u2082\ninst\u271d\u00b3 : IsPrimeOrderWith G\u2082 p\ng\u2082 : G\u2082\nG\u209c : Type u_4\ninst\u271d\u00b2 : CommGroup G\u209c\ninst\u271d\u00b9 : IsPrimeOrderWith G\u209c p\npairing : Additive G\u2081 \u2192\u2097[\u2124] Additive G\u2082 \u2192\u2097[\u2124] Additive G\u209c\nn : \u2115\ninst\u271d : Fact (Nat.Prime p)\nsrs : Vector G\u2081 (n + 1)\ncoeffs : Fin (n + 1) \u2192 ZMod p\nz : ZMod p\npoly : \u21a5(degreeLT (ZMod p) (n + 1)) := (degreeLTEquiv (ZMod p) (n + 1)).invFun coeffs\nthis : Field (ZMod p)\n\u22a2 ((\u2191poly - C (eval z \u2191poly)) / (X - C z)).degree < \u2191(n + 1)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/AGM/Basic.lean#L171"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-03-15T21:13:06-06:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "388ae1fa2474679fccce6dc5f26228777c72851394eb4a3e82a332aa0c42522d"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/CodingTheory/Basic.lean",
      "start_line": 186,
      "start_column": 33,
      "end_line": 186,
      "end_column": 38
    },
    "debug_info": {
      "goal": "n : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\nC : Set (n \u2192 R)\ninst\u271d : Fintype \u2191C\nh : \u00acSubsingleton \u2191C\n\u22a2 \u2016C\u2016\u2080' \u2260 \u22a4",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/CodingTheory/Basic.lean#L186"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-13T15:41:38-06:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "cf783a520f0506889f487116d9fff6f29744d362dff376c534d7ea162108bf27"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/CodingTheory/Basic.lean",
      "start_line": 187,
      "start_column": 4,
      "end_line": 187,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case neg\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\nC : Set (n \u2192 R)\ninst\u271d : Fintype \u2191C\nh : \u00acSubsingleton \u2191C\nthis : \u2016C\u2016\u2080' \u2260 \u22a4\n\u22a2 ENat.toNat (Finset.image (fun x => \u0394\u2080(\u2191x.1, \u2191x.2)) {p | \u00acp.1 = p.2}).min =\n    sInf {d | \u2203 u \u2208 C, \u2203 v \u2208 C, \u00acu = v \u2227 \u0394\u2080(u, v) \u2264 d}",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/CodingTheory/Basic.lean#L187"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-13T15:41:38-06:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "22e2de5c10e5bd92faa27fab9cd5d89000d5492a4596c077257b5680e6150a6f"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/CodingTheory/Basic.lean",
      "start_line": 231,
      "start_column": 4,
      "end_line": 231,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case e_a.h.h\u2081.intro.intro.intro.intro.intro\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : CommSemiring R\nC : Submodule R (n \u2192 R)\nd : \u2115\nu : n \u2192 R\nhu : u \u2208 C\nv : n \u2192 R\nhv : v \u2208 C\nhuv : \u00acu = v\nhDist : \u0394\u2080(u, v) \u2264 d\n\u22a2 \u2203 u \u2208 C, \u00acu = 0 \u2227 \u2016u\u2016\u2080 \u2264 d",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/CodingTheory/Basic.lean#L231"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-13T15:41:38-06:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "0136e865b42cdd8a152f671d40500cbe174000c1a112743a2ce525cc797a9378"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/CodingTheory/Basic.lean",
      "start_line": 234,
      "start_column": 4,
      "end_line": 234,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case e_a.h.h\u2082.intro.intro.intro\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : CommSemiring R\nC : Submodule R (n \u2192 R)\nd : \u2115\nu : n \u2192 R\nhu : u \u2208 C\nhNorm : \u00acu = 0\nhDist : \u2016u\u2016\u2080 \u2264 d\n\u22a2 \u2203 u \u2208 C, \u2203 v \u2208 C, \u00acu = v \u2227 \u0394\u2080(u, v) \u2264 d",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/CodingTheory/Basic.lean#L234"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-13T15:41:38-06:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "5eec9d65b1c5edb761a90e0d67b31f06f9e8e32f88c1f1997a6beaa94a3faf91"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/CodingTheory/Basic.lean",
      "start_line": 269,
      "start_column": 67,
      "end_line": 269,
      "end_column": 72
    },
    "debug_info": {
      "goal": "n : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : Finite R\nC : Set (n \u2192 R)\n\u22a2 card \u2191C \u2264 card R ^ (card n - \u2016C\u2016\u2080 + 1)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/CodingTheory/Basic.lean#L269"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-26T22:44:38-04:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "af371b5e5907f189659ea1ef6f1803fcdf4b3fb24d4b8da8eb8ce1bd7ff85542"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/CodingTheory/Basic.lean",
      "start_line": 275,
      "start_column": 65,
      "end_line": 275,
      "end_column": 70
    },
    "debug_info": {
      "goal": "n : Type u_1\ninst\u271d\u00b3 : Fintype n\nR : Type u_2\ninst\u271d\u00b2 : DecidableEq R\ninst\u271d\u00b9 : Finite R\ninst\u271d : DivisionRing R\nC : Submodule R (n \u2192 R)\n\u22a2 Module.finrank R \u21a5C \u2264 card n - \u2016C.carrier\u2016\u2080 + 1",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/CodingTheory/Basic.lean#L275"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-26T22:44:38-04:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "56ac21692ef3f9886bc6e2cb0ad6dd215fce3522ce2be0ddf7f34c947af916cf"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/Probability/Notation.lean",
      "start_line": 70,
      "start_column": 76,
      "end_line": 70,
      "end_column": 81
    },
    "debug_info": {
      "goal": "F : Type\ninst\u271d\u00b9 : Nonempty F\ninst\u271d : Fintype F\n\u22a2 \u2191(do\n          let x \u2190 $\u1d56 F\n          let y \u2190 $\u1d56 F\n          let z \u2190 $\u1d56 (F \u00d7 F)\n          Pure.pure (z = (x, y)))\n      True =\n    1 / \u2191(Fintype.card (F \u00d7 F))",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/Probability/Notation.lean#L70"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-05-06T23:33:56-04:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "5905254e77793066d816b0857f6a0605f6410d2fe911de49833be32885770097"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Equiv.lean",
      "start_line": 34,
      "start_column": 14,
      "end_line": 34,
      "end_column": 19
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\n\u22a2 Function.LeftInverse ofSpec toSpec",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/MlPoly/Equiv.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "1d49ba8969c77c0b3ea6d779b6b92f93a29ecdcb256614b80619bcc59653c39e"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Equiv.lean",
      "start_line": 35,
      "start_column": 15,
      "end_line": 35,
      "end_column": 20
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\n\u22a2 Function.RightInverse ofSpec toSpec",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/MlPoly/Equiv.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "aaba4dc6bd90f9af2aadc22b8803e5a4ffd865cea5d8c0b1b96f47426616d0fb"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Equiv.lean",
      "start_line": 43,
      "start_column": 2,
      "end_line": 43,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\np q : MlPoly R n\n\u22a2 (p + q).toSpec = p.toSpec + q.toSpec",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/MlPoly/Equiv.lean#L43"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "0b2bf8a622c30070ad60e74be76a5305c25ebd4ef58908040d5c22f052aa4223"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Equiv.lean",
      "start_line": 47,
      "start_column": 2,
      "end_line": 47,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d\u00b9 : CommSemiring R\nn : \u2115\nS : Type u_2\ninst\u271d : CommSemiring S\nf : R \u2192+* S\np : MlPoly R n\nx : Vector S n\n\u22a2 p.eval\u2082 f x = MvPolynomial.eval\u2082 f x.get \u2191p.toSpec",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/MlPoly/Equiv.lean#L47"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "4bc8db816555a96e007e00e582487f0dc2dafc0430df6f843c5ea06d2cfc4558"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Basic.lean",
      "start_line": 77,
      "start_column": 2,
      "end_line": 77,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : AddCommMonoid R\nn : \u2115\na : R\nb : Vector R n\nc : R\nd : Vector R n\n\u22a2 List.foldl (fun x1 x2 => x1 + x2) (a * c) (List.zipWith (fun x1 x2 => x1 * x2) b.toList d.toList) =\n    a * c + Array.foldl (fun x1 x2 => x1 + x2) 0 (Array.zipWith (fun x1 x2 => x1 * x2) b.toArray d.toArray) 0 n",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/MlPoly/Basic.lean#L77"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-14T11:09:39-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "b640e09d54f471d55f03e51da091ba0acd0cd6571f6c2634fb36114e74be806d"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Basic.lean",
      "start_line": 81,
      "start_column": 2,
      "end_line": 81,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : AddCommMonoid R\nn : \u2115\na : R\nb : Vector R n\nc : R\nd : Vector R n\n\u22a2 (cons a b).get \u2b1d\u1d65 (cons c d).get = a * c + b.get \u2b1d\u1d65 d.get",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/MlPoly/Basic.lean#L81"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-14T11:09:39-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "32d4349d1b6f3f3e04c1329fe1cff609833f7fa3bfff9e529895286478e876a2"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Basic.lean",
      "start_line": 138,
      "start_column": 20,
      "end_line": 138,
      "end_column": 25
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a b c : MlPoly R n), a + b + c = a + (b + c)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/MlPoly/Basic.lean#L138"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "5649c34f428f0e08a39f8b315e8b87751c5fd3f3067095bc009828b087fd11f8"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Basic.lean",
      "start_line": 141,
      "start_column": 19,
      "end_line": 141,
      "end_column": 24
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a : MlPoly R n), 0 + a = a",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/MlPoly/Basic.lean#L141"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "d10d74d1f3699790e61891177856a8e21fa3c0963af99f49a2c14acc0e8900ea"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Basic.lean",
      "start_line": 142,
      "start_column": 19,
      "end_line": 142,
      "end_column": 24
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a : MlPoly R n), a + 0 = a",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/MlPoly/Basic.lean#L142"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "35441596be1699802eab6a0465358451864ffa85d77153f49d95c3da760ce99a"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Basic.lean",
      "start_line": 144,
      "start_column": 21,
      "end_line": 144,
      "end_column": 26
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (x : MlPoly R n), nsmul 0 x = 0",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/MlPoly/Basic.lean#L144"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "b7e89b305c3a2db4827b50fb99b0824c9557ee8b29864a7543abcf76a7bb86ca"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Basic.lean",
      "start_line": 145,
      "start_column": 21,
      "end_line": 145,
      "end_column": 26
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (n_1 : \u2115) (x : MlPoly R n), nsmul (n_1 + 1) x = nsmul n_1 x + x",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/MlPoly/Basic.lean#L145"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "82d4489e4a816140fac5e2c01b858f80e3ce29a9826376c32bb55f43ecfb7235"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Basic.lean",
      "start_line": 139,
      "start_column": 19,
      "end_line": 139,
      "end_column": 24
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a b : MlPoly R n), a + b = b + a",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/MlPoly/Basic.lean#L139"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "a8e9e472041a10df5e30b08323c2467e34d03a1551de7d91a31afe5750d35082"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Basic.lean",
      "start_line": 151,
      "start_column": 17,
      "end_line": 151,
      "end_column": 22
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : \u2115\ninst\u271d : Semiring R\n\u22a2 \u2200 (b : MlPoly R n), 1 \u2022 b = b",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/MlPoly/Basic.lean#L151"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "a6af2b837b67cb9787beb57b055d87cdfd4dbd5dff5d8d14dabe256c2daa283e"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Basic.lean",
      "start_line": 156,
      "start_column": 18,
      "end_line": 156,
      "end_column": 23
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : \u2115\ninst\u271d : Semiring R\n\u22a2 \u2200 (x : MlPoly R n), 0 \u2022 x = 0",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/MlPoly/Basic.lean#L156"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "677ea3dde0cc4918b84b989c16046af1827285a929117f9793249548ff54612d"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/Math/Fin.lean",
      "start_line": 374,
      "start_column": 43,
      "end_line": 374,
      "end_column": 48
    },
    "debug_info": {
      "goal": "n : \u2115\n\u03b1 : Fin n \u2192 Sort u\nl : List \u2115\nn' : \u2115\nl' : List \u2115\nmotive : Fin (n' :: l').sum \u2192 Sort u_1\ncases : (n : \u2115) \u2192 (h : n \u2208 n' :: l') \u2192 (i : Fin n) \u2192 motive (castSum (n' :: l') h i)\ni : Fin (n' + l'.sum)\nhi : \u00ac\u2191i < n'\n\u22a2 \u2191i - n' < l'.sum",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/Math/Fin.lean#L374"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-07T14:25:30-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "be09573e0c6c349a0f309df1380f2b4987849c9493a39b964bb9fedc81826bf0"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/Math/Fin.lean",
      "start_line": 402,
      "start_column": 16,
      "end_line": 402,
      "end_column": 21
    },
    "debug_info": {
      "goal": "case ind\nn\u271d n : \u2115\nIH : \u2200 m < n, \u2200 {a : Fin m \u2192 \u2115}, (List.ofFn fun i => List.ofFn (ranges a i)) = (List.ofFn a).ranges\na : Fin n \u2192 \u2115\n\u22a2 (List.ofFn fun i => List.ofFn (ranges a i)) = (List.ofFn a).ranges",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/Math/Fin.lean#L402"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-11T17:39:02-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "8779c3defe1b521da171e31173d3c8afa487cd6bbc2c79f4b81a1aa7a1d3c758"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/Math/Fin.lean",
      "start_line": 497,
      "start_column": 32,
      "end_line": 497,
      "end_column": 37
    },
    "debug_info": {
      "goal": "\u22a2 True",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/Math/Fin.lean#L497"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-11T17:39:02-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "c9ac30c4edeb9a18ff3985771fc9e130c4c8c93ce1f1b1095edeec5311b830bc"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/Math/Fin.lean",
      "start_line": 557,
      "start_column": 4,
      "end_line": 557,
      "end_column": 9
    },
    "debug_info": {
      "goal": "l : List \u2115\nj a : \u2115\nl' : List \u2115\nh : j < a + l'.sum\n\u22a2 \u2203 n, (a :: l').findSum j = some n",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/Math/Fin.lean#L557"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-03-14T00:01:07-04:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "ee6f44e72051943c4d7eee240535cafdbfe0735ecffac4634960347da8e15c42"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/Math/Fin.lean",
      "start_line": 569,
      "start_column": 80,
      "end_line": 569,
      "end_column": 85
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\ninst\u271d\u00b2 : AddMonoid \u03b1\ninst\u271d\u00b9 : Preorder \u03b1\ninst\u271d : DecidableRel fun x1 x2 => x1 < x2\nl : List \u2115\nj : Fin l.sum\n\u22a2 l.findSumIdx \u2191j < l.length",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/Math/Fin.lean#L569"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-03-14T00:01:07-04:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "e648f1947ac1d9d4ce4e2e05455722f54cf5aee065b1545478757ad13b1e0608"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/Math/Operations.lean",
      "start_line": 155,
      "start_column": 2,
      "end_line": 155,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\nunit : \u03b1\nl l' : List \u03b1\nm n n' : \u2115\nh : n \u2264 m\nh' : n' \u2264 m\nhEq : rightpad n unit l = rightpad n' unit l'\nhLen : n \u2294 l.length = n' \u2294 l'.length\n\u22a2 l ++ replicate (n - l.length + (m - n' \u2294 l'.length)) unit =\n    l' ++ replicate (n' - l'.length + (m - n' \u2294 l'.length)) unit",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/Math/Operations.lean#L155"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-13T15:41:38-06:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "3d7b557b16d8245fb84bd12a57d0ca83fd5620fcc4f6eb41af555cade0bbe965"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/Math/Operations.lean",
      "start_line": 209,
      "start_column": 5,
      "end_line": 209,
      "end_column": 10
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\nl\u2081 l\u2082 : List \u03b1\nunit : \u03b1\n\u22a2 (fun x =>\n        match x with\n        | (x, y) => x = y)\n      (l\u2081.matchSize l\u2082 unit) \u2194\n    \u2200 (i : \u2115), l\u2081.getD i unit = l\u2082.getD i unit",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/Math/Operations.lean#L209"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-14T17:35:17-06:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "32556bf039527b058f217f3780e099e436d9fbc44c366e36b247a4e6fcc4e8ac"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/Math/Operations.lean",
      "start_line": 257,
      "start_column": 2,
      "end_line": 257,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\na : Array \u03b1\nn : \u2115\nunit : \u03b1\ni : \u2115\nh\u271d : i < (rightpad n unit a).size\nh : i < { toList := List.rightpad n unit a.toList }.size\n\u22a2 { toList := List.rightpad n unit a.toList }[i] = a.getD i unit",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/Math/Operations.lean#L257"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "d945008a024e2ffe451c5b85458ae77fa9a31850c094777996e1fcc352f9c5e6"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/Math/Operations.lean",
      "start_line": 391,
      "start_column": 75,
      "end_line": 391,
      "end_column": 80
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\np : \u03b1 \u2192 Bool\nas : Array \u03b1\nh : (popWhile p as).size > 0\n\u22a2 \u00acp ((popWhile p as).getLast h) = true",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/Math/Operations.lean#L391"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-14T17:35:17-06:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "6069cfb46d6f324f53e1bb11f7fca312b115c8621920955be3e78fb5033fa857"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MvPolynomial/Sumcheck.lean",
      "start_line": 75,
      "start_column": 2,
      "end_line": 75,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d : CommSemiring R\n\u03c3 : Type u_3\n\u03c3\u2081 : Type u_4\n\u03c3\u2082 : Type u_5\nx : \u03c3\u2081 \u2192 R\nf : \u03c3 \u2192 \u03c3\u2081 \u2295 \u03c3\u2082\np : R[X \u03c3]\nb : \u03c3\u2081 \u2192\u2080 \u2115\nh : \u00accoeff b ((sumToIter R \u03c3\u2081 \u03c3\u2082) ((rename f) p)) = 0\n\u22a2 (coeff b ((sumToIter R \u03c3\u2081 \u03c3\u2082) ((rename f) p))).degrees \u2264 Multiset.filterMap Sum.getRight? (Multiset.map f p.degrees)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/MvPolynomial/Sumcheck.lean#L75"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-16T12:52:41-06:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "cd937d8045795f453b69afeb5fec57b089b56602f55831dbb5b60e9d24ef5243"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MvPolynomial/Sumcheck.lean",
      "start_line": 112,
      "start_column": 2,
      "end_line": 112,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\nh : n > 0\nD : Fin (n - 1) \u2192 Finset R\np : R[X Fin n]\n\u22a2 ((sumExceptFirst' n h D) p).degree \u2264 \u2191(degreeOf \u27e80, h\u27e9 p)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/MvPolynomial/Sumcheck.lean#L112"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-09-13T15:50:48-04:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "3103d0ae22803b574ea7c9055b647cc1b1fbaf9ec95c6e66563ffd3c7627619b"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MvPolynomial/Interpolation.lean",
      "start_line": 69,
      "start_column": 58,
      "end_line": 69,
      "end_column": 63
    },
    "debug_info": {
      "goal": "\u03c3 : Type u_1\ninst\u271d\u2074 : DecidableEq \u03c3\ninst\u271d\u00b3 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : IsDomain R\ninst\u271d : DecidableEq R\np : R[X \u03c3]\nhp : p \u2260 0\nS : \u03c3 \u2192 Finset R\n\u22a2 \u2191(#({x \u2208 p.vars.pi S | (eval (extendDomain x)) p = 0})) / \u220f i \u2208 p.vars, \u2191(#(S i)) \u2264\n    \u2211 i \u2208 p.vars, \u2191(degreeOf i p) / \u2191(#(S i))",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/MvPolynomial/Interpolation.lean#L69"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-30T15:40:43-04:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "70d3a6a8d3d04ee97ebbaef1c6728e8727be8f703b75971a0efe2c7c49aed3aa"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MvPolynomial/Interpolation.lean",
      "start_line": 171,
      "start_column": 76,
      "end_line": 171,
      "end_column": 81
    },
    "debug_info": {
      "goal": "\u03c3 : Type u_1\ninst\u271d\u00b3 : DecidableEq \u03c3\ninst\u271d\u00b2 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b9 : CommRing R\ninst\u271d : IsDomain R\np q : R[X \u03c3]\nS : \u03c3 \u2192 Finset R\nhDegree : \u2200 (i : \u03c3), degreeOf i p < #(S i)\nhEval : \u2200 x \u2208 piFinset fun i => S i, (eval x) p = (eval x) q\n\u22a2 p = q",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/MvPolynomial/Interpolation.lean#L171"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-30T15:40:43-04:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "48fcee153751f08c6e97aef1710419ab9ce60b59f2a3fdae0d91fee47c42eccf"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/UniPoly/Basic.lean",
      "start_line": 571,
      "start_column": 2,
      "end_line": 571,
      "end_column": 7
    },
    "debug_info": {
      "goal": "Q : Type u_2\ninst\u271d : Ring Q\np q : UniPoly Q\ni : \u2115\nhi : i < Array.size (p.add_raw q)\n\u22a2 (p ++ mkArray (Array.size q - Array.size p) 0)[i] + (q ++ mkArray (Array.size p - Array.size q) 0)[i] =\n    p[i]?.getD 0 + q[i]?.getD 0",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/UniPoly/Basic.lean#L571"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "50c99598f1d6f27a6ec9f73ef2a04d87c29a57f5a8f588ceb4f3dd9a3fcac943"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/UniPoly/Basic.lean",
      "start_line": 899,
      "start_column": 4,
      "end_line": 899,
      "end_column": 9
    },
    "debug_info": {
      "goal": "Q : Type u_2\ninst\u271d : Ring Q\np q r : UniPoly Q\nhpq : p ++ mkArray (Array.size q - Array.size p) 0 = q ++ mkArray (Array.size p - Array.size q) 0\nhqr : q ++ mkArray (Array.size r - Array.size q) 0 = r ++ mkArray (Array.size q - Array.size r) 0\n\u22a2 p ++ mkArray (Array.size r - Array.size p) 0 = r ++ mkArray (Array.size p - Array.size r) 0",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/UniPoly/Basic.lean#L899"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "c4c488e7c12b672866fb96311d6394f3b848d83c9ed8049a103fb5a408cfc6aa"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/UniPoly/Basic.lean",
      "start_line": 975,
      "start_column": 6,
      "end_line": 975,
      "end_column": 11
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : Ring R\ninst\u271d : BEq R\np : UniPoly R\n\u22a2 (p.toPoly, Tropical.trop (OrderDual.toDual p.degreeBound)) \u2208 TropicallyBoundPoly R",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/UniPoly/Basic.lean#L975"
    },
    "metadata": {
      "blame_email_hash": "ab200eba5736",
      "blame_date": "2025-03-12T19:59:09-07:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "b1bb8b43d190cad0ae8662a722da194c9514546acfdddb34a40ce04de33c299d"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/UniPoly/Basic.lean",
      "start_line": 1005,
      "start_column": 22,
      "end_line": 1005,
      "end_column": 27
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 Function.RightInverse TropicallyBoundPolynomial.toUniPoly UniPoly.toTropicallyBoundPolynomial",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/UniPoly/Basic.lean#L1005"
    },
    "metadata": {
      "blame_email_hash": "94b4cc0e139f",
      "blame_date": "2024-05-31T16:31:08-04:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "d80fed6a0dd5fb09ff59340280bc493d2c5d97536eb98d4b85fc1b99675e8fed"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/UniPoly/Basic.lean",
      "start_line": 1006,
      "start_column": 21,
      "end_line": 1006,
      "end_column": 26
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 \u2200 (x y : UniPoly R),\n    { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n            right_inv := \u22ef }.toFun\n        (x * y) =\n      { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          x *\n        { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          y",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/UniPoly/Basic.lean#L1006"
    },
    "metadata": {
      "blame_email_hash": "94b4cc0e139f",
      "blame_date": "2024-05-31T16:31:08-04:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "d93152020de69636ee61b53a9382e4ccdee0b82bb4ba52017a28852a15107756"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/UniPoly/Basic.lean",
      "start_line": 1007,
      "start_column": 21,
      "end_line": 1007,
      "end_column": 26
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 \u2200 (x y : UniPoly R),\n    { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n            right_inv := \u22ef }.toFun\n        (x + y) =\n      { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          x +\n        { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          y",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/Data/UniPoly/Basic.lean#L1007"
    },
    "metadata": {
      "blame_email_hash": "94b4cc0e139f",
      "blame_date": "2024-05-31T16:31:08-04:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "6dd2fb4bea58ce68b27b033b5e539c099b5c7c9bb3113f509b98a484043babf8"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Sequential.lean",
      "start_line": 254,
      "start_column": 2,
      "end_line": 254,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case h\nm n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\nT : pSpec\u2081.FullTranscript\nT' : pSpec\u2082.FullTranscript\ni : Fin m\n\u22a2 _root_.cast \u22ef (T i) = (\u22ef \u25b8 T) i",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/Composition/Sequential.lean#L254"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-07T12:49:22-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "b4cf6ab8308056e13a712819cf3b9b3f86d7ec3766f2776d0160d5e18f593e58"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Sequential.lean",
      "start_line": 559,
      "start_column": 55,
      "end_line": 559,
      "end_column": 60
    },
    "debug_info": {
      "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u22a2 (compose 0 (fun x => n) fun x => pSpec) = pSpec",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/Composition/Sequential.lean#L559"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-18T18:57:31+07:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "7184a04a9dcc70a7b65c84ce9ff50f9b9b5d4b1c5ab2f33ae200d0f08f522f36"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Sequential.lean",
      "start_line": 575,
      "start_column": 2,
      "end_line": 575,
      "end_column": 7
    },
    "debug_info": {
      "goal": "m : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\ni : Fin m\n\u22a2 compose (\u2191i + 1) (Fin.take (\u2191i + 2) \u22ef n) (Fin.take (\u2191i + 2) \u22ef pSpec) =\n    cast \u22ef (compose (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) (Fin.take (\u2191i + 1) \u22ef pSpec) ++\u209a pSpec i.succ)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/Composition/Sequential.lean#L575"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-12-06T19:22:58-03:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "5f9ebc7dfc86facf702165963fe73cb0e4bbe8ae6b325aece2a8ddc18d725e2a"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Sequential.lean",
      "start_line": 702,
      "start_column": 2,
      "end_line": 702,
      "end_column": 7
    },
    "debug_info": {
      "goal": "m n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nO\u2098\u2081 : (i : pSpec\u2081.MessageIdx) \u2192 OracleInterface (pSpec\u2081.Message i)\nO\u2098\u2082 : (i : pSpec\u2082.MessageIdx) \u2192 OracleInterface (pSpec\u2082.Message i)\ninst\u271d\u00b2 : (i : pSpec\u2081.ChallengeIdx) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b9 : (i : pSpec\u2082.ChallengeIdx) \u2192 Sampleable (pSpec\u2082.Challenge i)\ninst\u271d : oSpec.DecidableEq\nP\u2081 : Prover pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nP\u2082 : Prover pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\nstmt : Stmt\u2081\nwit : Wit\u2081\n\u22a2 run stmt wit (P\u2081.append P\u2082) = do\n    let __discr \u2190 liftM (run stmt wit P\u2081)\n    match __discr with\n      | (stmt\u2082, wit\u2082, transcript\u2081) => do\n        let __discr \u2190 liftM (run stmt\u2082 wit\u2082 P\u2082)\n        match __discr with\n          | (stmt\u2083, wit\u2083, transcript\u2082) => pure (stmt\u2083, wit\u2083, transcript\u2081 ++\u209c transcript\u2082)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/Composition/Sequential.lean#L702"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-12-28T16:03:02+07:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "c86f57b1015dd68b2ee9a669a6efd83724fe3678ec7c063ce1791ce714dc0097"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Sequential.lean",
      "start_line": 728,
      "start_column": 89,
      "end_line": 728,
      "end_column": 94
    },
    "debug_info": {
      "goal": "m n : \u2115\n\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\ninst\u271d\u00b3 : (i : pSpec\u2081.ChallengeIdx) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b2 : (i : pSpec\u2082.ChallengeIdx) \u2192 Sampleable (pSpec\u2082.Challenge i)\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nrel\u2081 : Stmt\u2081 \u2192 Wit\u2081 \u2192 Prop\nrel\u2082 : Stmt\u2082 \u2192 Wit\u2082 \u2192 Prop\nrel\u2083 : Stmt\u2083 \u2192 Wit\u2083 \u2192 Prop\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nR\u2081 : Reduction pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nR\u2082 : Reduction pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\ncompletenessError\u2081 completenessError\u2082 : \u211d\u22650\nh\u2081 : completeness rel\u2081 rel\u2082 R\u2081 completenessError\u2081\nh\u2082 : completeness rel\u2082 rel\u2083 R\u2082 completenessError\u2082\n\u22a2 completeness rel\u2081 rel\u2083 (R\u2081.append R\u2082) (completenessError\u2081 + completenessError\u2082)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/Composition/Sequential.lean#L728"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-12-01T17:09:18-07:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "e04b5e32e73324de04ebe96c8e5caff23f0265736f0324fc24a79c21eb210dd7"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Sequential.lean",
      "start_line": 755,
      "start_column": 38,
      "end_line": 755,
      "end_column": 43
    },
    "debug_info": {
      "goal": "\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nm : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\ninst\u271d\u00b2 : (i : Fin (m + 1)) \u2192 (j : (pSpec i).ChallengeIdx) \u2192 Sampleable ((pSpec i).Challenge j)\nStmt Wit : Fin (m + 2) \u2192 Type\nrel : (i : Fin (m + 2)) \u2192 Stmt i \u2192 Wit i \u2192 Prop\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nR : (i : Fin (m + 1)) \u2192 Reduction (pSpec i) oSpec (Stmt i.castSucc) (Wit i.castSucc) (Stmt i.succ) (Wit i.succ)\ncompletenessError : Fin (m + 1) \u2192 \u211d\u22650\nh : \u2200 (i : Fin (m + 1)), completeness (rel i.castSucc) (rel i.succ) (R i) (completenessError i)\n\u22a2 completeness (rel 0) (rel (Fin.last (m + 1))) (compose m n pSpec Stmt Wit R) (\u2211 i, completenessError i)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/Composition/Sequential.lean#L755"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-12-06T19:22:58-03:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "4ccfa85e6e3a6a57275680344e4082e4349f429ec07a698497ad16f577d7c9b6"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
      "start_line": 151,
      "start_column": 2,
      "end_line": 151,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nP : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (fun a =>\n        (data.fStmtOut (a.2.2.1, (P.toProverOut.1 a.2.1).1), data.fWitOut (a.2.2.2, (P.toProverOut.1 a.2.1).2),\n          a.1)) <$>\n      Fin.induction (pure (default, P.input (data.fStmtIn stmtIn) (data.fWitIn witIn), stmtIn, witIn))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2.1 a, __discr.2.2)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2, __discr.2.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2.1).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n) =\n    (fun a => (data.fStmtOut (stmtIn, (P.toProverOut.1 a.2).1), data.fWitOut (witIn, (P.toProverOut.1 a.2).2), a.1)) <$>\n      Fin.induction (pure (default, P.input (data.fStmtIn stmtIn) (data.fWitIn witIn)))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2 a)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/Composition/Virtual.lean#L151"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "dd5e1596d73994edc58fb1a2ee3f167553afb0160465350b3ebe82e130dd937e"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
      "start_line": 164,
      "start_column": 2,
      "end_line": 164,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n      (fun a_1 => ((data.fStmtOut (stmtIn, a.1), data.fWitOut (witIn, a.2.1)), a_1, a.2.2)) <$>\n          (Verifier.run stmtIn a.2.2\n                {\n                  verify := fun stmtIn transcript =>\n                    (fun a => data.fStmtOut (stmtIn, a)) <$>\n                      R.verifier.verify (data.fStmtIn stmtIn) transcript }).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 => ((data.fStmtOut (stmtIn, a.1), data.fWitOut (witIn, a.2.1)), data.fStmtOut (stmtIn, a_1), a.2.2)) <$>\n        (Verifier.run (data.fStmtIn stmtIn) a.2.2 R.verifier).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/Composition/Virtual.lean#L164"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "d6d6a4fa3b526ceef0b8eef7d69538237750127f6d35f92c7c2d49a4a640ec7a"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
      "start_line": 177,
      "start_column": 2,
      "end_line": 177,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let __discr \u2190 Prover.runWithLog stmtIn witIn (Prover.transport data R.prover)\n      (fun a => ((__discr.1, __discr.2.1), a.1, __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (Verifier.run stmtIn __discr.2.2.1\n                    {\n                      verify := fun stmtIn transcript =>\n                        (fun a => data.fStmtOut (stmtIn, a)) <$>\n                          R.verifier.verify (data.fStmtIn stmtIn) transcript })).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.runWithLog (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 =>\n          ((data.fStmtOut (stmtIn, a.1), data.fWitOut (witIn, a.2.1)), data.fStmtOut (stmtIn, a_1.1), a.2.2.1, a.2.2.2,\n            a_1.2)) <$>\n        (simulateQ loggingOracle (Verifier.run (data.fStmtIn stmtIn) a.2.2.1 R.verifier)).run.liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/Composition/Virtual.lean#L177"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "e2c7ad0b3d8520dbed8638fe2fa9d1ef6abd541f2223f854988109ff194e933d"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
      "start_line": 201,
      "start_column": 2,
      "end_line": 201,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nrelIn' : StmtIn' \u2192 WitIn' \u2192 Prop\nrelOut' : StmtOut' \u2192 WitOut' \u2192 Prop\ncompletenessError : \u211d\u22650\ndata : TransportDataComplete StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\nh :\n  \u2200 (stmtIn : StmtIn') (witIn : WitIn'),\n    relIn' stmtIn witIn \u2192\n      [fun x =>\n          match x with\n          | ((prvStmtOut, witOut), stmtOut, snd) => relOut' stmtOut witOut \u2227 prvStmtOut = stmtOut|run stmtIn witIn R] \u2265\n        1 - \u2191completenessError\nstmtIn : StmtIn\nwitIn : WitIn\nhRelIn : relIn stmtIn witIn\nhR :\n  [fun x =>\n      match x with\n      | ((prvStmtOut, witOut), stmtOut, snd) =>\n        relOut' stmtOut witOut \u2227 prvStmtOut = stmtOut|run (data.fStmtIn stmtIn) (data.fWitIn witIn) R] \u2265\n    1 - \u2191completenessError\nx\u271d : (StmtOut' \u00d7 WitOut') \u00d7 StmtOut' \u00d7 pSpec.FullTranscript\na\u271d : x\u271d \u2208 (run (data.fStmtIn stmtIn) (data.fWitIn witIn) R).support\nhRelOut' : relOut' x\u271d.2.1 x\u271d.1.2 \u2227 x\u271d.1.1 = x\u271d.2.1\n\u22a2 ((fun x => relOut x.2.1 x.1.2 \u2227 x.1.1 = x.2.1) \u2218 fun a =>\n      ((data.fStmtOut (stmtIn, a.1.1), data.fWitOut (witIn, a.1.2)), data.fStmtOut (stmtIn, a.2.1), a.2.2))\n    x\u271d",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/Composition/Virtual.lean#L201"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-04-22T09:32:10-04:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "92092e6b4c6961651739b55eea1a39f0c644f34f4b74f24e814d6dab3ed7f139"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
      "start_line": 215,
      "start_column": 2,
      "end_line": 215,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn StmtOut StmtIn' StmtOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nlangIn' : Set StmtIn'\nlangOut' : Set StmtOut'\nsoundnessError : \u211d\u22650\ndata : TransportDataSound StmtIn StmtOut StmtIn' StmtOut' langIn langOut langIn' langOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nh :\n  \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn' WitIn StmtOut' WitOut),\n    \u2200 stmtIn \u2209 langIn',\n      [fun x =>\n          match x with\n          | (fst, stmtOut, snd) => stmtOut \u2209 langOut'|run stmtIn witIn { prover := prover, verifier := V }] \u2264\n        \u2191soundnessError\nstmtIn hStmtIn : Type\nWitIn : stmtIn\nWitOut : Prover pSpec oSpec StmtIn stmtIn StmtOut hStmtIn\nwitIn : StmtIn\nprover : witIn \u2209 langIn\n\u22a2 [fun x =>\n      match x with\n      | (fst, stmtOut, snd) =>\n        stmtOut \u2209\n          langOut|run witIn WitIn { prover := WitOut, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n    \u2191soundnessError",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/Composition/Virtual.lean#L215"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "51efe11c7e6666ca5cfe9d2cc126dc55a88f5d90e8b0c0938e34e865262f8b60"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
      "start_line": 229,
      "start_column": 2,
      "end_line": 234,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nrelIn' : StmtIn' \u2192 WitIn' \u2192 Prop\nrelOut' : StmtOut' \u2192 WitOut' \u2192 Prop\nsoundnessError : \u211d\u22650\ndata :\n  TransportDataKnowledgeSound StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nE : StraightlineExtractor\nh' :\n  \u2200 (stmtIn : StmtIn') (witIn : WitIn') (prover : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'),\n    [fun x =>\n        match x with\n        | ((fst, witOut), stmtOut, transcript, proveQueryLog, snd) =>\n          \u00acrelIn' stmtIn (E stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n            relOut' stmtOut witOut|runWithLog stmtIn witIn { prover := prover, verifier := V }] \u2264\n      \u2191soundnessError\n\u22a2 \u2203 extractor,\n    \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n      [fun x =>\n          match x with\n          | ((fst, witOut), stmtOut, transcript, proveQueryLog, snd) =>\n            \u00acrelIn stmtIn (extractor stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n              relOut stmtOut\n                witOut|runWithLog stmtIn witIn\n            { prover := prover, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n        \u2191soundnessError",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/Composition/Virtual.lean#L229"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "b9f6f4ab7a51355e9785e8e97b3943332bab82001240d9c8c8515fcc9cee657d"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
      "start_line": 278,
      "start_column": 4,
      "end_line": 278,
      "end_column": 9
    },
    "debug_info": {
      "goal": "x\u271d\u00b3 : StmtIn\nx\u271d\u00b2 : Unit\nx\u271d\u00b9 : StmtOut'\nx\u271d : Unit\np q : \u2124[X]\nt : \u2124\nf : \u2124[X]\nt' r : \u2124\nhRelOut' : eval r f = t'\nhRelIn : eval 0 p * eval 0 q + eval 1 p * eval 1 q = t\n\u22a2 eval r p * eval r q = t'",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/Composition/Virtual.lean#L278"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:31:31-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "f450a60b5bf8d39d999a099c6dda7f59cc6666a3e917bef339066e7ed820f8b6"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Security/Basic.lean",
      "start_line": 389,
      "start_column": 2,
      "end_line": 389,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nStmtIn WitIn StmtOut WitOut : Type\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nknowledgeError : \u211d\u22650\nhLt : knowledgeError < 1\nextractor : StraightlineExtractor\nhKS :\n  \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n    [fun x =>\n        \u00acrelIn stmtIn (extractor stmtIn x.2.1 x.1.2 x.2.2.1 x.2.2.2.1) \u2227\n          relOut x.2.1 x.1.2|runWithLog stmtIn witIn { prover := prover, verifier := verifier }] \u2264\n      \u2191knowledgeError\nWitIn' WitOut' : Type\nwitIn' : WitIn'\nprover : Prover pSpec oSpec StmtIn WitIn' StmtOut WitOut'\nstmtIn : StmtIn\nhStmtIn : \u2200 (x : WitIn), \u00acrelIn stmtIn x\n\u22a2 [fun x => \u2200 (x_1 : WitOut), \u00acrelOut x.2.1 x_1|run stmtIn witIn' { prover := prover, verifier := verifier }] \u2264\n    \u2191knowledgeError",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/Security/Basic.lean#L389"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "6a65d7fdce9bd35d82178272165f3b53c2a76a738289aa07077e6d03218ed3af"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Security/Basic.lean",
      "start_line": 409,
      "start_column": 75,
      "end_line": 409,
      "end_column": 80
    },
    "debug_info": {
      "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nStmtIn StmtOut : Type\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nrbrSoundnessError : pSpec.ChallengeIdx \u2192 \u211d\u22650\n\u22a2 rbrSoundness langIn langOut verifier rbrSoundnessError \u2192 soundness langIn langOut verifier (\u2211 i, rbrSoundnessError i)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/Security/Basic.lean#L409"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-28T13:43:25-07:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "814ba909af0db7c55dcf2038309bccf9f72d8565d703ec472dc92278c27915b6"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Security/Basic.lean",
      "start_line": 419,
      "start_column": 2,
      "end_line": 419,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nStmtIn WitIn StmtOut WitOut : Type\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nrbrKnowledgeError : pSpec.ChallengeIdx \u2192 \u211d\u22650\n\u22a2 rbrKnowledgeSoundness relIn relOut verifier rbrKnowledgeError \u2192\n    rbrSoundness (Function.language relIn) (Function.language relOut) verifier rbrKnowledgeError",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/Security/Basic.lean#L419"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-28T13:43:25-07:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "184a37ea0391be9239c4e5c47fc8ea1b0a793f373f48ba6680a4fa9e72f5d510"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Security/Basic.lean",
      "start_line": 428,
      "start_column": 82,
      "end_line": 428,
      "end_column": 87
    },
    "debug_info": {
      "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nStmtIn WitIn StmtOut WitOut : Type\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nrbrKnowledgeError : pSpec.ChallengeIdx \u2192 \u211d\u22650\n\u22a2 rbrKnowledgeSoundness relIn relOut verifier rbrKnowledgeError \u2192\n    knowledgeSoundness relIn relOut verifier (\u2211 i, rbrKnowledgeError i)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/OracleReduction/Security/Basic.lean#L428"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-28T13:43:25-07:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "a8aaeecc9be98e17260130940e25d063f180b5c702cb8ddb454f07c442e5c9dc"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
      "start_line": 495,
      "start_column": 2,
      "end_line": 495,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\ninst\u271d : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\nstmt : Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 OracleStatement R n deg i)\ntranscript : FullTranscript ![(Direction.P_to_V, \u21a5R\u2983\u2264 \u2191deg\u2984[X]), (Direction.V_to_P, R)]\nx : (pSpec R deg).getType 0\nhp_i : \u2191(transcript 0) \u2208 R\u2983\u2264 \u2191deg\u2984[X]\nhEq : transcript 0 = \u27e8\u2191(transcript 0), hp_i\u27e9\n\u22a2 (do\n      let a \u2190\n        ((OptionT.run (mapM (fun i => liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (D i))) (List.finRange m))).bind\n                fun __do_lift =>\n                __do_lift.elim (FreeMonad.pure none)\n                  (OptionT.run \u2218 fun evals => do\n                    if evals.sum = stmt.1.target then pure () else failure\n                    (fun a => { target := a, challenges := Fin.snoc stmt.1.challenges (transcript 1) }) <$>\n                        liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (transcript 1)))).mapM\n            fun {\u03b1} => (OracleInterface.simOracle2 oSpec stmt.2 transcript.messages).impl\n      (fun a => (a, fun i_1 => stmt.2 i_1)) <$> a.getM) =\n    (fun a =>\n        ({ target := Polynomial.eval (transcript 1) \u2191(transcript 0),\n            challenges := Fin.snoc stmt.1.challenges (transcript 1) },\n          stmt.2)) <$>\n      if \u2211 x, Polynomial.eval (D x) \u2191(transcript 0) = stmt.1.target then pure () else failure",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/ProofSystem/Sumcheck/Basic.lean#L495"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-18T19:07:20+07:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "ef09cb7d839cdf351f2ad86ad96a8190f01de318f9f8dbdd36b41139aac09de0"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
      "start_line": 513,
      "start_column": 57,
      "end_line": 513,
      "end_column": 62
    },
    "debug_info": {
      "goal": "case left\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 OracleStatement R n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast \u22ef)) \u2191(oStmt 0) =\n    target\n\u22a2 (do\n      let x \u2190\n        ({ prover := prover R n deg D oSpec i,\n                        verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.sendMessage\n                \u27e80, \u22ef\u27e9\n                ({ prover := prover R n deg D oSpec i,\n                          verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.input\n                  ({ target := target, challenges := challenge }, oStmt) witIn\u271d)).liftComp\n            (oSpec ++\u2092 [(pSpec R deg).Challenge]\u2092)\n      let a \u2190 liftM (query (Sum.inr \u27e81, \u22ef\u27e9) ())\n      (fun a_1 =>\n            ({ prover := prover R n deg D oSpec i,\n                          verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.toProverOut.1\n                ({ prover := prover R n deg D oSpec i,\n                          verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.receiveChallenge\n                  \u27e81, \u22ef\u27e9 x.2 a),\n              a_1, Transcript.snoc a (Transcript.snoc x.1 default))) <$>\n          (Verifier.run ({ target := target, challenges := challenge }, oStmt)\n                (Transcript.snoc a (Transcript.snoc x.1 default))\n                { prover := prover R n deg D oSpec i,\n                      verifier := oracleVerifier R n deg D oSpec i }.toReduction.verifier).liftComp\n            (oSpec ++\u2092 [(pSpec R deg).Challenge]\u2092)).neverFails",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/ProofSystem/Sumcheck/Basic.lean#L513"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "3c215078ff51babcaa5e2dcae9fb16a36e7246ff4683aca656e6a86f371d0561"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
      "start_line": 522,
      "start_column": 2,
      "end_line": 522,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case right\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 OracleStatement R n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast \u22ef)) \u2191(oStmt 0) =\n    target\n\u22a2 \u2200 (a : Statement R n i.succ) (b : (i : Fin 1) \u2192 OracleStatement R n deg i) (b_1 : Unit) (a_1 : Statement R n i.succ)\n    (b_2 : (i : Fin 1) \u2192 OracleStatement R n deg i) (b_3 : (pSpec R deg).FullTranscript),\n    (((a, b), b_1), (a_1, b_2), b_3) \u2208\n        (run ({ target := target, challenges := challenge }, oStmt) witIn\u271d\n            { prover := prover R n deg D oSpec i, verifier := oracleVerifier R n deg D oSpec i }.toReduction).support \u2192\n      (match (a_1, b_2) with\n        | ({ target := target, challenges := challenges }, oStmt) =>\n          match oStmt 0 with\n          | \u27e8poly, property\u27e9 =>\n            \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n                (MvPolynomial.eval (Fin.append challenges x \u2218 Fin.cast \u22ef)) poly =\n              target) \u2227\n        (a, b) = (a_1, b_2)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/ProofSystem/Sumcheck/Basic.lean#L522"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-18T19:07:20+07:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "b718e33e2e072d3dc5e6ef9efda8456feca1795bcb6a01d4580af88b7c5e503c"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
      "start_line": 571,
      "start_column": 4,
      "end_line": 571,
      "end_column": 9
    },
    "debug_info": {
      "goal": "R\u271d : Type\ninst\u271d\u2075 : CommSemiring R\u271d\nn\u271d deg\u271d m\u271d : \u2115\nD\u271d : Fin m\u271d \u21aa R\u271d\n\u03b9\u271d : Type\noSpec\u271d : OracleSpec \u03b9\u271d\ninst\u271d\u2074 : VCVCompatible R\u271d\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni\u271d : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ni : Fin (n + 1)\nstmt : Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 OracleStatement R n deg i)\ntr : Transcript (Fin.last 2) (pSpec R deg)\nhFalse :\n  \u00acrelation R n deg D i.succ ({ target := stmt.1.target, challenges := Fin.snoc stmt.1.challenges (tr 1) }, stmt.2) ()\n\u22a2 \u2200 (a : Statement R n i.succ) (b : (i : Fin 1) \u2192 OracleStatement R n deg i),\n    (a, b) \u2208 (Verifier.run stmt tr (verifier R n deg D oSpec i)).support \u2192\n      \u2200 (x : Unit), \u00acrelation R n deg D i.succ (a, b) x",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/ProofSystem/Sumcheck/Basic.lean#L571"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "972278824d0ac6f5cf311ee0b21fa5c2ae972d9f530ebe9b763986f5f5070b5d"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "9fa15e88afe6d16e929a5941637ab9d05a376b20",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
      "start_line": 646,
      "start_column": 42,
      "end_line": 646,
      "end_column": 47
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\nn deg m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\n\u22a2 OracleReduction.perfectCompleteness (relIn R n deg D) (relOut R n deg) (reduction R n deg)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/9fa15e88afe6d16e929a5941637ab9d05a376b20/ArkLib/ProofSystem/Sumcheck/Basic.lean#L646"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-24T11:52:07-05:00",
      "inclusion_date": "2025-05-13T21:24:48.559392+00:00"
    },
    "id": "d4a9f1c84717b74f0c3a246277ce9dc840d5203b71c17fdb2a7b89d1009a6efa"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/duper",
      "branch": "dev",
      "commit": "0f56e6f6463c4d8d406de52cc69b29036e4bed7b",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Duper/Tests/lastAsylum.lean",
      "start_line": 35,
      "start_column": 13,
      "end_line": 35,
      "end_column": 18
    },
    "debug_info": {
      "goal": "ax1 : \u2200 (x : Inhab), Peculiar x \u2194 (Sane x \u2194 \u00acDoctor x)\nax2 : \u2200 (x : Inhab), Special x \u2194 \u2200 (y : Inhab), \u00acDoctor y \u2194 (Sane y \u2194 Peculiar x)\nax3 : \u2200 (x y : Inhab), (Sane x \u2194 Special y) \u2192 (Sane (bf x) \u2194 \u00acDoctor y)\nax4 : Sane Tarr \u2194 (x : Inhab) \u2192 Doctor x \u2192 Sane x\nax5 : Sane Fether \u2194 \u2200 (x : Inhab), \u00acDoctor x \u2192 \u00acSane x\nax6 : Sane Fether \u2194 Sane Tarr\n\u22a2 False",
      "url": "https://github.com/leanprover-community/duper/blob/0f56e6f6463c4d8d406de52cc69b29036e4bed7b/Duper/Tests/lastAsylum.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "d9c480704efb",
      "blame_date": "2022-08-01T22:37:02-04:00",
      "inclusion_date": "2025-05-14T21:05:24.329083+00:00"
    },
    "id": "3c116486d136d45fb4070181901af621002bb468281e1b49223e1212129ef279"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/duper",
      "branch": "dev",
      "commit": "0f56e6f6463c4d8d406de52cc69b29036e4bed7b",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Duper/Tests/test_continuity.lean",
      "start_line": 18,
      "start_column": 50,
      "end_line": 18,
      "end_column": 55
    },
    "debug_info": {
      "goal": "a : Real\n\u22a2 dist a a = zero",
      "url": "https://github.com/leanprover-community/duper/blob/0f56e6f6463c4d8d406de52cc69b29036e4bed7b/Duper/Tests/test_continuity.lean#L18"
    },
    "metadata": {
      "blame_email_hash": "4ac7eab8a488",
      "blame_date": "2023-06-05T10:39:00+02:00",
      "inclusion_date": "2025-05-14T21:05:24.329083+00:00"
    },
    "id": "f44f898036e0dc7614077ce5565e09d3488e31c69d59e89890de3e29cad71ab7"
  }
]