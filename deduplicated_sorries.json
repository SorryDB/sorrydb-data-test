{
  "documentation": "deduplicated list of sorries, for each unique goal string the most recent inclusion date is chosen",
  "sorries": [
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "df155621bd7f37f347b8e9ba71f7ccc6408eed0e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/EasyDirection.lean",
        "start_line": 24,
        "start_column": 20,
        "end_line": 24,
        "end_column": 25
      },
      "debug_info": {
        "goal": "case cographic\n\u03b1 : Type\ninst\u271d : DecidableEq \u03b1\nM M\u271d : Matroid \u03b1\nhM : M\u271d.IsCographic\n\u22a2 M\u271d.IsRegular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/df155621bd7f37f347b8e9ba71f7ccc6408eed0e/Seymour/EasyDirection.lean#L24"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-17T15:49:08+02:00",
        "inclusion_date": "2025-06-06T05:15:18.267794+00:00"
      },
      "id": "41b748c34788912f32d2f028775d82eb48ac9e799e2785e2bece3ec7025096b8"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "df155621bd7f37f347b8e9ba71f7ccc6408eed0e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/HardDirection.lean",
        "start_line": 8,
        "start_column": 2,
        "end_line": 8,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d : DecidableEq \u03b1\nM : Matroid \u03b1\nhM : M.IsRegular\n\u22a2 M.IsGood",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/df155621bd7f37f347b8e9ba71f7ccc6408eed0e/Seymour/HardDirection.lean#L8"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-02-13T12:19:44+01:00",
        "inclusion_date": "2025-06-06T05:15:18.267794+00:00"
      },
      "id": "4f073bbdc8b221bafc1389d63b64e18846c973138724bb21d43a490f10ec48cc"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "df155621bd7f37f347b8e9ba71f7ccc6408eed0e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum1.lean",
        "start_line": 60,
        "start_column": 6,
        "end_line": 60,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h.mp\n\u03b1 : Type\ninst\u271d : DecidableEq \u03b1\nS\u2097 S\u1d63 : StandardRepr \u03b1 Z2\nhXY : S\u2097.X \u2ad7 S\u1d63.Y\nhYX : S\u2097.Y \u2ad7 S\u1d63.X\nvalid : (standardRepr1sumComposition hXY hYX).2\nI : Set \u03b1\nhI : I \u2286 (standardRepr1sumComposition hXY hYX).1.toMatroid.E\nlinearlyI :\n  I \u2286 (standardRepr1sumComposition hXY hYX).1.X \u222a (standardRepr1sumComposition hXY hYX).1.Y \u2227\n    LinearIndepOn Z2 (Matrix.transpose fun x => (1 \u25eb (standardRepr1sumComposition hXY hYX).1.B) x \u2218 Subtype.toSum)\n      (Subtype.val \u207b\u00b9' I)\n\u22a2 (True \u2227\n      LinearIndepOn Z2 (Matrix.transpose fun x => (1 \u25eb S\u2097.B) x \u2218 Subtype.toSum) (Subtype.val \u207b\u00b9' (I \u2229 (S\u2097.X \u222a S\u2097.Y)))) \u2227\n    (True \u2227\n        LinearIndepOn Z2 (Matrix.transpose fun x => (1 \u25eb S\u1d63.B) x \u2218 Subtype.toSum)\n          (Subtype.val \u207b\u00b9' (I \u2229 (S\u1d63.X \u222a S\u1d63.Y)))) \u2227\n      I \u2286 S\u2097.X \u222a S\u2097.Y \u222a (S\u1d63.X \u222a S\u1d63.Y)",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/df155621bd7f37f347b8e9ba71f7ccc6408eed0e/Seymour/Matroid/Operations/Sum1.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-02-15T17:08:53+01:00",
        "inclusion_date": "2025-06-06T05:15:18.267794+00:00"
      },
      "id": "e1da24fc8f34ae78aabb8eed3211de0fb0be27966f01dbb41a552ad65938d964"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "df155621bd7f37f347b8e9ba71f7ccc6408eed0e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum1.lean",
        "start_line": 62,
        "start_column": 6,
        "end_line": 62,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case right\n\u03b1 : Type\ninst\u271d : DecidableEq \u03b1\nS\u2097 S\u1d63 : StandardRepr \u03b1 Z2\nhXY : S\u2097.X \u2ad7 S\u1d63.Y\nhYX : S\u2097.Y \u2ad7 S\u1d63.X\nvalid : (standardRepr1sumComposition hXY hYX).2\nI : Set \u03b1\nhI : I \u2286 (standardRepr1sumComposition hXY hYX).1.toMatroid.E\nlinearlyI :\n  (True \u2227\n      LinearIndepOn Z2 (Matrix.transpose fun x => (1 \u25eb S\u2097.B) x \u2218 Subtype.toSum) (Subtype.val \u207b\u00b9' (I \u2229 (S\u2097.X \u222a S\u2097.Y)))) \u2227\n    (True \u2227\n        LinearIndepOn Z2 (Matrix.transpose fun x => (1 \u25eb S\u1d63.B) x \u2218 Subtype.toSum)\n          (Subtype.val \u207b\u00b9' (I \u2229 (S\u1d63.X \u222a S\u1d63.Y)))) \u2227\n      I \u2286 S\u2097.X \u222a S\u2097.Y \u222a (S\u1d63.X \u222a S\u1d63.Y)\n\u22a2 LinearIndepOn Z2 (Matrix.transpose fun x => (1 \u25eb (standardRepr1sumComposition hXY hYX).1.B) x \u2218 Subtype.toSum)\n    (Subtype.val \u207b\u00b9' I)",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/df155621bd7f37f347b8e9ba71f7ccc6408eed0e/Seymour/Matroid/Operations/Sum1.lean#L62"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-02-15T17:08:53+01:00",
        "inclusion_date": "2025-06-06T05:15:18.267794+00:00"
      },
      "id": "e4edc6a78448c80182aafe94ed8c7627ab72e28d342094f99916957d9e98e649"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "74640d8a57a6c95bc7e7007559554a1ec7835267",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3.lean",
        "start_line": 446,
        "start_column": 2,
        "end_line": 446,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d : DecidableEq \u03b1\nX Y : Set \u03b1\nQ : Matrix \u2191X \u2191Y \u211a\nx' y\u2080 y\u2081 : \u03b1\nhQ : Q.IsTotallyUnimodular\nhx' : x' \u2208 X\nhy\u2080 : y\u2080 \u2208 Y\nhy\u2081 : y\u2081 \u2208 Y\nhyy : y\u2080 \u2260 y\u2081\nhQy\u2080 : Q \u27e8x', hx'\u27e9 \u27e8y\u2080, hy\u2080\u27e9 = 1\nhQy\u2081 : Q \u27e8x', hx'\u27e9 \u27e8y\u2081, hy\u2081\u27e9 = 1\nhQy : \u2200 (y : \u2191Y), \u2191y \u2260 y\u2080 \u2227 \u2191y \u2260 y\u2081 \u2192 Q \u27e8x', hx'\u27e9 y = 0\n\u22a2 let c\u2080 := fun j => Q (\u22ef.elem j) \u27e8y\u2080, hy\u2080\u27e9;\n  let c\u2081 := fun j => Q (\u22ef.elem j) \u27e8y\u2081, hy\u2081\u27e9;\n  let Q' := Q.submatrix \u22ef.elem \u22ef.elem;\n  (Q' \u25eb \u25aec\u2080 \u25eb \u25aec\u2081 \u25eb \u25ae(c\u2080 - c\u2081)).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/74640d8a57a6c95bc7e7007559554a1ec7835267/Seymour/Matroid/Operations/Sum3.lean#L446"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-20T12:58:38+02:00",
        "inclusion_date": "2025-05-21T05:06:30.038457+00:00"
      },
      "id": "429799f4e3b1e04f23af2a35557b3f848631a0652a62d962dd8d31502554ff90"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "74640d8a57a6c95bc7e7007559554a1ec7835267",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3.lean",
        "start_line": 640,
        "start_column": 2,
        "end_line": 640,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x' y\u2080 y\u2081 y' : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097 \\ (x\u2080 \u1543 x\u2081 \u1543 {x'}))\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63 \\ (x\u2080 \u1543 x\u2081 \u1543 {x'}))\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097 \\ (y\u2080 \u1543 y\u2081 \u1543 {y'}))\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63 \\ (y\u2080 \u1543 y\u2081 \u1543 {y'}))\nB\u2097' : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63' : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhB\u2097'\u271d : B\u2097'.IsTotallyUnimodular\nhB\u1d63'\u271d : B\u1d63'.IsTotallyUnimodular\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x'}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y'}\nhB\u2097' :\n  (Matrix.submatrix3x3mems B\u2097' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2080 \u2228\n    (Matrix.submatrix3x3mems B\u2097' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2081\nhB\u1d63' :\n  (Matrix.submatrix3x3mems B\u1d63' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2080 \u2228\n    (Matrix.submatrix3x3mems B\u1d63' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2081\n\u22a2 let x\u2080\u2097 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2080\u1d63 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2081\u2097 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2081\u1d63 := \u27e8x\u2081, \u22ef\u27e9;\n  let x'\u2097 := \u27e8x', \u22ef\u27e9;\n  let x'\u1d63 := \u27e8x', \u22ef\u27e9;\n  let y\u2080\u2097 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2080\u1d63 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2081\u2097 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2081\u1d63 := \u27e8y\u2081, \u22ef\u27e9;\n  let y'\u2097 := \u27e8y', \u22ef\u27e9;\n  let y'\u1d63 := \u27e8y', \u22ef\u27e9;\n  let B\u2097 := Matrix.toCanonicalSigning B\u2097' x\u2080\u2097 x\u2081\u2097 x'\u2097 y\u2080\u2097 y\u2081\u2097 y'\u2097;\n  let B\u1d63 := Matrix.toCanonicalSigning B\u1d63' x\u2080\u1d63 x\u2081\u1d63 x'\u1d63 y\u2080\u1d63 y\u2081\u1d63 y'\u1d63;\n  let A\u2097 := B\u2097.submatrix \u22ef.elem \u22ef.elem;\n  let A\u1d63 := B\u1d63.submatrix \u22ef.elem \u22ef.elem;\n  let D\u2080\u2097 := !![B\u2097 x\u2080\u2097 y\u2080\u2097, B\u2097 x\u2080\u2097 y\u2081\u2097; B\u2097 x\u2081\u2097 y\u2080\u2097, B\u2097 x\u2081\u2097 y\u2081\u2097];\n  let D\u2080\u1d63 := !![B\u1d63 x\u2080\u1d63 y\u2080\u1d63, B\u1d63 x\u2080\u1d63 y\u2081\u1d63; B\u1d63 x\u2081\u1d63 y\u2080\u1d63, B\u1d63 x\u2081\u1d63 y\u2081\u1d63];\n  let D\u2097 := ![B\u2097 x\u2080\u2097 \u2218 \u22ef.elem, B\u2097 x\u2081\u2097 \u2218 \u22ef.elem];\n  let D\u1d63 := Matrix.of fun i => ![B\u1d63 (\u22ef.elem i) y\u2080\u1d63, B\u1d63 (\u22ef.elem i) y\u2081\u1d63];\n  let D\u2097\u1d63 := D\u1d63 * D\u2080\u2097\u207b\u00b9 * D\u2097;\n  let D' := \u229e D\u2097 D\u2080\u2097 D\u2097\u1d63 D\u1d63;\n  let f\u1d63 := fun i =>\n    if hi\u2080 : \u2191i = x\u2080 then \u25e90\n    else if hi\u2081 : \u2191i = x\u2081 then \u25e91 else if hi : \u2191i \u2208 X\u1d63 \\ (x\u2080 \u1543 x\u2081 \u1543 {x'}) then \u25ea\u27e8\u2191i, hi\u27e9 else \u22ef.elim;\n  let f\u2097 := fun j =>\n    if hj\u2080 : \u2191j = y\u2080 then \u25ea0\n    else if hj\u2081 : \u2191j = y\u2081 then \u25ea1 else if hj : \u2191j \u2208 Y\u2097 \\ (y\u2080 \u1543 y\u2081 \u1543 {y'}) then \u25e9\u27e8\u2191j, hj\u27e9 else \u22ef.elim;\n  let D := D'.submatrix f\u1d63 f\u2097;\n  let c\u2080 := fun j => B\u1d63 (\u22ef.elem j) y\u2080\u1d63;\n  let c\u2081 := fun j => B\u1d63 (\u22ef.elem j) y\u2081\u1d63;\n  let d\u2080 := fun i => B\u2097 x\u2080\u2097 (\u22ef.elem i);\n  let d\u2081 := fun i => B\u2097 x\u2081\u2097 (\u22ef.elem i);\n  let D\u2080' := (Matrix.submatrix3x3mems B\u2097' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs;\n  let r\u2080 := if hD\u2080\u2080 : D\u2080' = matrix3x3unsigned\u2080 then d\u2080 else if hD\u2080\u2081 : D\u2080' = matrix3x3unsigned\u2081 then d\u2080 - d\u2081 else \u22ef.elim;\n  let r\u2081 := if hD\u2080\u2080 : D\u2080' = matrix3x3unsigned\u2080 then -d\u2081 else if hD\u2080\u2081 : D\u2080' = matrix3x3unsigned\u2081 then d\u2081 else \u22ef.elim;\n  let r\u2082 := if hD\u2080\u2080 : D\u2080' = matrix3x3unsigned\u2080 then d\u2080 - d\u2081 else if hD\u2080\u2081 : D\u2080' = matrix3x3unsigned\u2081 then d\u2080 else \u22ef.elim;\n  D =\n    (fun {X Y \u03b1} [Mul \u03b1] c r => Matrix.of fun i j => c i * r j) c\u2080 r\u2080 +\n      (fun {X Y \u03b1} [Mul \u03b1] c r => Matrix.of fun i j => c i * r j) c\u2081 r\u2081",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/74640d8a57a6c95bc7e7007559554a1ec7835267/Seymour/Matroid/Operations/Sum3.lean#L640"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-20T12:58:38+02:00",
        "inclusion_date": "2025-05-21T05:06:30.038457+00:00"
      },
      "id": "690c78822fa6e7ef8386935e976ac323da917650b794d0aaa94461617fa2700f"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "74640d8a57a6c95bc7e7007559554a1ec7835267",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3.lean",
        "start_line": 729,
        "start_column": 2,
        "end_line": 729,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x' y\u2080 y\u2081 y' : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097 \\ (x\u2080 \u1543 x\u2081 \u1543 {x'}))\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63 \\ (x\u2080 \u1543 x\u2081 \u1543 {x'}))\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097 \\ (y\u2080 \u1543 y\u2081 \u1543 {y'}))\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63 \\ (y\u2080 \u1543 y\u2081 \u1543 {y'}))\nB\u2097' : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63' : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhB\u2097'\u271d : B\u2097'.IsTotallyUnimodular\nhB\u1d63'\u271d : B\u1d63'.IsTotallyUnimodular\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x'}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y'}\nhB\u2097' :\n  (Matrix.submatrix3x3mems B\u2097' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2080 \u2228\n    (Matrix.submatrix3x3mems B\u2097' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2081\nhB\u1d63' :\n  (Matrix.submatrix3x3mems B\u1d63' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2080 \u2228\n    (Matrix.submatrix3x3mems B\u1d63' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2081\n\u22a2 let x\u2080\u2097 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2080\u1d63 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2081\u2097 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2081\u1d63 := \u27e8x\u2081, \u22ef\u27e9;\n  let x'\u2097 := \u27e8x', \u22ef\u27e9;\n  let x'\u1d63 := \u27e8x', \u22ef\u27e9;\n  let y\u2080\u2097 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2080\u1d63 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2081\u2097 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2081\u1d63 := \u27e8y\u2081, \u22ef\u27e9;\n  let y'\u2097 := \u27e8y', \u22ef\u27e9;\n  let y'\u1d63 := \u27e8y', \u22ef\u27e9;\n  let B\u2097 := Matrix.toCanonicalSigning B\u2097' x\u2080\u2097 x\u2081\u2097 x'\u2097 y\u2080\u2097 y\u2081\u2097 y'\u2097;\n  let B\u1d63 := Matrix.toCanonicalSigning B\u1d63' x\u2080\u1d63 x\u2081\u1d63 x'\u1d63 y\u2080\u1d63 y\u2081\u1d63 y'\u1d63;\n  let A\u2097 := B\u2097.submatrix \u22ef.elem \u22ef.elem;\n  let A\u1d63 := B\u1d63.submatrix \u22ef.elem \u22ef.elem;\n  let D\u2080\u2097 := !![B\u2097 x\u2080\u2097 y\u2080\u2097, B\u2097 x\u2080\u2097 y\u2081\u2097; B\u2097 x\u2081\u2097 y\u2080\u2097, B\u2097 x\u2081\u2097 y\u2081\u2097];\n  let D\u2080\u1d63 := !![B\u1d63 x\u2080\u1d63 y\u2080\u1d63, B\u1d63 x\u2080\u1d63 y\u2081\u1d63; B\u1d63 x\u2081\u1d63 y\u2080\u1d63, B\u1d63 x\u2081\u1d63 y\u2081\u1d63];\n  let D\u2097 := ![B\u2097 x\u2080\u2097 \u2218 \u22ef.elem, B\u2097 x\u2081\u2097 \u2218 \u22ef.elem];\n  let D\u1d63 := Matrix.of fun i => ![B\u1d63 (\u22ef.elem i) y\u2080\u1d63, B\u1d63 (\u22ef.elem i) y\u2081\u1d63];\n  let D\u2097\u1d63 := D\u1d63 * D\u2080\u2097\u207b\u00b9 * D\u2097;\n  let D' := \u229e D\u2097 D\u2080\u2097 D\u2097\u1d63 D\u1d63;\n  let f\u1d63 := fun i =>\n    if hi\u2080 : \u2191i = x\u2080 then \u25e90\n    else if hi\u2081 : \u2191i = x\u2081 then \u25e91 else if hi : \u2191i \u2208 X\u1d63 \\ (x\u2080 \u1543 x\u2081 \u1543 {x'}) then \u25ea\u27e8\u2191i, hi\u27e9 else \u22ef.elim;\n  let f\u2097 := fun j =>\n    if hj\u2080 : \u2191j = y\u2080 then \u25ea0\n    else if hj\u2081 : \u2191j = y\u2081 then \u25ea1 else if hj : \u2191j \u2208 Y\u2097 \\ (y\u2080 \u1543 y\u2081 \u1543 {y'}) then \u25e9\u27e8\u2191j, hj\u27e9 else \u22ef.elim;\n  let D := D'.submatrix f\u1d63 f\u2097;\n  let c\u2080 := fun j => B\u1d63 (\u22ef.elem j) y\u2080\u1d63;\n  let c\u2081 := fun j => B\u1d63 (\u22ef.elem j) y\u2081\u1d63;\n  let d\u2080 := fun i => B\u2097 x\u2080\u2097 (\u22ef.elem i);\n  let d\u2081 := fun i => B\u2097 x\u2081\u2097 (\u22ef.elem i);\n  let D\u2080' := (Matrix.submatrix3x3mems B\u2097' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs;\n  let r\u2080 := if hD\u2080\u2080 : D\u2080' = matrix3x3unsigned\u2080 then d\u2080 else if hD\u2080\u2081 : D\u2080' = matrix3x3unsigned\u2081 then d\u2080 - d\u2081 else \u22ef.elim;\n  let r\u2081 := if hD\u2080\u2080 : D\u2080' = matrix3x3unsigned\u2080 then -d\u2081 else if hD\u2080\u2081 : D\u2080' = matrix3x3unsigned\u2081 then d\u2081 else \u22ef.elim;\n  let r\u2082 := if hD\u2080\u2080 : D\u2080' = matrix3x3unsigned\u2080 then d\u2080 - d\u2081 else if hD\u2080\u2081 : D\u2080' = matrix3x3unsigned\u2081 then d\u2080 else \u22ef.elim;\n  \u2200 (i : \u2191(X\u1d63 \\ {x'})), D i = r\u2080 \u2228 D i = -r\u2080 \u2228 D i = r\u2081 \u2228 D i = -r\u2081 \u2228 D i = r\u2082 \u2228 D i = -r\u2082 \u2228 D i = 0",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/74640d8a57a6c95bc7e7007559554a1ec7835267/Seymour/Matroid/Operations/Sum3.lean#L729"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-20T12:58:38+02:00",
        "inclusion_date": "2025-05-21T05:06:30.038457+00:00"
      },
      "id": "cb2584c0dd84e62d560f3a126bd33b3129dd4ff1f51f0382dc5b61f970b87067"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "74640d8a57a6c95bc7e7007559554a1ec7835267",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3.lean",
        "start_line": 818,
        "start_column": 2,
        "end_line": 818,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x' y\u2080 y\u2081 y' : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097 \\ (x\u2080 \u1543 x\u2081 \u1543 {x'}))\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63 \\ (x\u2080 \u1543 x\u2081 \u1543 {x'}))\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097 \\ (y\u2080 \u1543 y\u2081 \u1543 {y'}))\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63 \\ (y\u2080 \u1543 y\u2081 \u1543 {y'}))\nB\u2097' : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63' : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhB\u2097'\u271d : B\u2097'.IsTotallyUnimodular\nhB\u1d63'\u271d : B\u1d63'.IsTotallyUnimodular\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x'}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y'}\nhB\u2097' :\n  (Matrix.submatrix3x3mems B\u2097' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2080 \u2228\n    (Matrix.submatrix3x3mems B\u2097' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2081\nhB\u1d63' :\n  (Matrix.submatrix3x3mems B\u1d63' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2080 \u2228\n    (Matrix.submatrix3x3mems B\u1d63' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2081\n\u22a2 let x\u2080\u2097 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2080\u1d63 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2081\u2097 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2081\u1d63 := \u27e8x\u2081, \u22ef\u27e9;\n  let x'\u2097 := \u27e8x', \u22ef\u27e9;\n  let x'\u1d63 := \u27e8x', \u22ef\u27e9;\n  let y\u2080\u2097 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2080\u1d63 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2081\u2097 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2081\u1d63 := \u27e8y\u2081, \u22ef\u27e9;\n  let y'\u2097 := \u27e8y', \u22ef\u27e9;\n  let y'\u1d63 := \u27e8y', \u22ef\u27e9;\n  let B\u2097 := Matrix.toCanonicalSigning B\u2097' x\u2080\u2097 x\u2081\u2097 x'\u2097 y\u2080\u2097 y\u2081\u2097 y'\u2097;\n  let B\u1d63 := Matrix.toCanonicalSigning B\u1d63' x\u2080\u1d63 x\u2081\u1d63 x'\u1d63 y\u2080\u1d63 y\u2081\u1d63 y'\u1d63;\n  let A\u2097 := B\u2097.submatrix \u22ef.elem \u22ef.elem;\n  let A\u1d63 := B\u1d63.submatrix \u22ef.elem \u22ef.elem;\n  let D\u2080\u2097 := !![B\u2097 x\u2080\u2097 y\u2080\u2097, B\u2097 x\u2080\u2097 y\u2081\u2097; B\u2097 x\u2081\u2097 y\u2080\u2097, B\u2097 x\u2081\u2097 y\u2081\u2097];\n  let D\u2080\u1d63 := !![B\u1d63 x\u2080\u1d63 y\u2080\u1d63, B\u1d63 x\u2080\u1d63 y\u2081\u1d63; B\u1d63 x\u2081\u1d63 y\u2080\u1d63, B\u1d63 x\u2081\u1d63 y\u2081\u1d63];\n  let D\u2097 := ![B\u2097 x\u2080\u2097 \u2218 \u22ef.elem, B\u2097 x\u2081\u2097 \u2218 \u22ef.elem];\n  let D\u1d63 := Matrix.of fun i => ![B\u1d63 (\u22ef.elem i) y\u2080\u1d63, B\u1d63 (\u22ef.elem i) y\u2081\u1d63];\n  let D\u2097\u1d63 := D\u1d63 * D\u2080\u2097\u207b\u00b9 * D\u2097;\n  let D' := \u229e D\u2097 D\u2080\u2097 D\u2097\u1d63 D\u1d63;\n  let f\u1d63 := fun i =>\n    if hi\u2080 : \u2191i = x\u2080 then \u25e90\n    else if hi\u2081 : \u2191i = x\u2081 then \u25e91 else if hi : \u2191i \u2208 X\u1d63 \\ (x\u2080 \u1543 x\u2081 \u1543 {x'}) then \u25ea\u27e8\u2191i, hi\u27e9 else \u22ef.elim;\n  let f\u2097 := fun j =>\n    if hj\u2080 : \u2191j = y\u2080 then \u25ea0\n    else if hj\u2081 : \u2191j = y\u2081 then \u25ea1 else if hj : \u2191j \u2208 Y\u2097 \\ (y\u2080 \u1543 y\u2081 \u1543 {y'}) then \u25e9\u27e8\u2191j, hj\u27e9 else \u22ef.elim;\n  let D := D'.submatrix f\u1d63 f\u2097;\n  let c\u2080 := fun j => B\u1d63 (\u22ef.elem j) y\u2080\u1d63;\n  let c\u2081 := fun j => B\u1d63 (\u22ef.elem j) y\u2081\u1d63;\n  let d\u2080 := fun i => B\u2097 x\u2080\u2097 (\u22ef.elem i);\n  let d\u2081 := fun i => B\u2097 x\u2081\u2097 (\u22ef.elem i);\n  let D\u2080' := (Matrix.submatrix3x3mems B\u2097' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs;\n  let r\u2080 := if hD\u2080\u2080 : D\u2080' = matrix3x3unsigned\u2080 then d\u2080 else if hD\u2080\u2081 : D\u2080' = matrix3x3unsigned\u2081 then d\u2080 - d\u2081 else \u22ef.elim;\n  let r\u2081 := if hD\u2080\u2080 : D\u2080' = matrix3x3unsigned\u2080 then -d\u2081 else if hD\u2080\u2081 : D\u2080' = matrix3x3unsigned\u2081 then d\u2081 else \u22ef.elim;\n  let r\u2082 := if hD\u2080\u2080 : D\u2080' = matrix3x3unsigned\u2080 then d\u2080 - d\u2081 else if hD\u2080\u2081 : D\u2080' = matrix3x3unsigned\u2081 then d\u2080 else \u22ef.elim;\n  \u2200 (j : \u2191(Y\u2097 \\ {y'})),\n    (fun x => D x j) = c\u2080 \u2228\n      (fun x => D x j) = -c\u2080 \u2228\n        (fun x => D x j) = c\u2081 \u2228\n          (fun x => D x j) = -c\u2081 \u2228 (fun x => D x j) = c\u2080 - c\u2081 \u2228 (fun x => D x j) = c\u2081 - c\u2080 \u2228 (fun x => D x j) = 0",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/74640d8a57a6c95bc7e7007559554a1ec7835267/Seymour/Matroid/Operations/Sum3.lean#L818"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-20T12:58:38+02:00",
        "inclusion_date": "2025-05-21T05:06:30.038457+00:00"
      },
      "id": "e3f51d8945dabb8fbd0a5e82a7aae928c7ddf8c1c547392dc82a6c40bd9cad23"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "74640d8a57a6c95bc7e7007559554a1ec7835267",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3.lean",
        "start_line": 907,
        "start_column": 2,
        "end_line": 907,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x' y\u2080 y\u2081 y' : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097 \\ (x\u2080 \u1543 x\u2081 \u1543 {x'}))\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63 \\ (x\u2080 \u1543 x\u2081 \u1543 {x'}))\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097 \\ (y\u2080 \u1543 y\u2081 \u1543 {y'}))\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63 \\ (y\u2080 \u1543 y\u2081 \u1543 {y'}))\nB\u2097' : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63' : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhB\u2097'\u271d : B\u2097'.IsTotallyUnimodular\nhB\u1d63'\u271d : B\u1d63'.IsTotallyUnimodular\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x'}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y'}\nhB\u2097' :\n  (Matrix.submatrix3x3mems B\u2097' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2080 \u2228\n    (Matrix.submatrix3x3mems B\u2097' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2081\nhB\u1d63' :\n  (Matrix.submatrix3x3mems B\u1d63' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2080 \u2228\n    (Matrix.submatrix3x3mems B\u1d63' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2081\n\u22a2 let x\u2080\u2097 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2080\u1d63 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2081\u2097 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2081\u1d63 := \u27e8x\u2081, \u22ef\u27e9;\n  let x'\u2097 := \u27e8x', \u22ef\u27e9;\n  let x'\u1d63 := \u27e8x', \u22ef\u27e9;\n  let y\u2080\u2097 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2080\u1d63 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2081\u2097 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2081\u1d63 := \u27e8y\u2081, \u22ef\u27e9;\n  let y'\u2097 := \u27e8y', \u22ef\u27e9;\n  let y'\u1d63 := \u27e8y', \u22ef\u27e9;\n  let B\u2097 := Matrix.toCanonicalSigning B\u2097' x\u2080\u2097 x\u2081\u2097 x'\u2097 y\u2080\u2097 y\u2081\u2097 y'\u2097;\n  let B\u1d63 := Matrix.toCanonicalSigning B\u1d63' x\u2080\u1d63 x\u2081\u1d63 x'\u1d63 y\u2080\u1d63 y\u2081\u1d63 y'\u1d63;\n  let A\u2097 := B\u2097.submatrix \u22ef.elem \u22ef.elem;\n  let A\u1d63 := B\u1d63.submatrix \u22ef.elem \u22ef.elem;\n  let D\u2080\u2097 := !![B\u2097 x\u2080\u2097 y\u2080\u2097, B\u2097 x\u2080\u2097 y\u2081\u2097; B\u2097 x\u2081\u2097 y\u2080\u2097, B\u2097 x\u2081\u2097 y\u2081\u2097];\n  let D\u2080\u1d63 := !![B\u1d63 x\u2080\u1d63 y\u2080\u1d63, B\u1d63 x\u2080\u1d63 y\u2081\u1d63; B\u1d63 x\u2081\u1d63 y\u2080\u1d63, B\u1d63 x\u2081\u1d63 y\u2081\u1d63];\n  let D\u2097 := ![B\u2097 x\u2080\u2097 \u2218 \u22ef.elem, B\u2097 x\u2081\u2097 \u2218 \u22ef.elem];\n  let D\u1d63 := Matrix.of fun i => ![B\u1d63 (\u22ef.elem i) y\u2080\u1d63, B\u1d63 (\u22ef.elem i) y\u2081\u1d63];\n  let D\u2097\u1d63 := D\u1d63 * D\u2080\u2097\u207b\u00b9 * D\u2097;\n  let D' := \u229e D\u2097 D\u2080\u2097 D\u2097\u1d63 D\u1d63;\n  let f\u1d63 := fun i =>\n    if hi\u2080 : \u2191i = x\u2080 then \u25e90\n    else if hi\u2081 : \u2191i = x\u2081 then \u25e91 else if hi : \u2191i \u2208 X\u1d63 \\ (x\u2080 \u1543 x\u2081 \u1543 {x'}) then \u25ea\u27e8\u2191i, hi\u27e9 else \u22ef.elim;\n  let f\u2097 := fun j =>\n    if hj\u2080 : \u2191j = y\u2080 then \u25ea0\n    else if hj\u2081 : \u2191j = y\u2081 then \u25ea1 else if hj : \u2191j \u2208 Y\u2097 \\ (y\u2080 \u1543 y\u2081 \u1543 {y'}) then \u25e9\u27e8\u2191j, hj\u27e9 else \u22ef.elim;\n  let D := D'.submatrix f\u1d63 f\u2097;\n  let c\u2080 := fun j => B\u1d63 (\u22ef.elem j) y\u2080\u1d63;\n  let c\u2081 := fun j => B\u1d63 (\u22ef.elem j) y\u2081\u1d63;\n  let d\u2080 := fun i => B\u2097 x\u2080\u2097 (\u22ef.elem i);\n  let d\u2081 := fun i => B\u2097 x\u2081\u2097 (\u22ef.elem i);\n  let D\u2080' := (Matrix.submatrix3x3mems B\u2097' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs;\n  let r\u2080 := if hD\u2080\u2080 : D\u2080' = matrix3x3unsigned\u2080 then d\u2080 else if hD\u2080\u2081 : D\u2080' = matrix3x3unsigned\u2081 then d\u2080 - d\u2081 else \u22ef.elim;\n  let r\u2081 := if hD\u2080\u2080 : D\u2080' = matrix3x3unsigned\u2080 then -d\u2081 else if hD\u2080\u2081 : D\u2080' = matrix3x3unsigned\u2081 then d\u2081 else \u22ef.elim;\n  let r\u2082 := if hD\u2080\u2080 : D\u2080' = matrix3x3unsigned\u2080 then d\u2080 - d\u2081 else if hD\u2080\u2081 : D\u2080' = matrix3x3unsigned\u2081 then d\u2080 else \u22ef.elim;\n  (A\u1d63 \u25eb D).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/74640d8a57a6c95bc7e7007559554a1ec7835267/Seymour/Matroid/Operations/Sum3.lean#L907"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-20T12:58:38+02:00",
        "inclusion_date": "2025-05-21T05:06:30.038457+00:00"
      },
      "id": "1f0883d9f106b8938e9f6e43961f0a7249dce894331d4961a6c8c4ea3c9864a5"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "74640d8a57a6c95bc7e7007559554a1ec7835267",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3.lean",
        "start_line": 996,
        "start_column": 2,
        "end_line": 996,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x' y\u2080 y\u2081 y' : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097 \\ (x\u2080 \u1543 x\u2081 \u1543 {x'}))\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63 \\ (x\u2080 \u1543 x\u2081 \u1543 {x'}))\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097 \\ (y\u2080 \u1543 y\u2081 \u1543 {y'}))\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63 \\ (y\u2080 \u1543 y\u2081 \u1543 {y'}))\nB\u2097' : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63' : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhB\u2097'\u271d : B\u2097'.IsTotallyUnimodular\nhB\u1d63'\u271d : B\u1d63'.IsTotallyUnimodular\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x'}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y'}\nhB\u2097' :\n  (Matrix.submatrix3x3mems B\u2097' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2080 \u2228\n    (Matrix.submatrix3x3mems B\u2097' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2081\nhB\u1d63' :\n  (Matrix.submatrix3x3mems B\u1d63' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2080 \u2228\n    (Matrix.submatrix3x3mems B\u1d63' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2081\n\u22a2 let x\u2080\u2097 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2080\u1d63 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2081\u2097 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2081\u1d63 := \u27e8x\u2081, \u22ef\u27e9;\n  let x'\u2097 := \u27e8x', \u22ef\u27e9;\n  let x'\u1d63 := \u27e8x', \u22ef\u27e9;\n  let y\u2080\u2097 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2080\u1d63 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2081\u2097 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2081\u1d63 := \u27e8y\u2081, \u22ef\u27e9;\n  let y'\u2097 := \u27e8y', \u22ef\u27e9;\n  let y'\u1d63 := \u27e8y', \u22ef\u27e9;\n  let B\u2097 := Matrix.toCanonicalSigning B\u2097' x\u2080\u2097 x\u2081\u2097 x'\u2097 y\u2080\u2097 y\u2081\u2097 y'\u2097;\n  let B\u1d63 := Matrix.toCanonicalSigning B\u1d63' x\u2080\u1d63 x\u2081\u1d63 x'\u1d63 y\u2080\u1d63 y\u2081\u1d63 y'\u1d63;\n  let A\u2097 := B\u2097.submatrix \u22ef.elem \u22ef.elem;\n  let A\u1d63 := B\u1d63.submatrix \u22ef.elem \u22ef.elem;\n  let D\u2080\u2097 := !![B\u2097 x\u2080\u2097 y\u2080\u2097, B\u2097 x\u2080\u2097 y\u2081\u2097; B\u2097 x\u2081\u2097 y\u2080\u2097, B\u2097 x\u2081\u2097 y\u2081\u2097];\n  let D\u2080\u1d63 := !![B\u1d63 x\u2080\u1d63 y\u2080\u1d63, B\u1d63 x\u2080\u1d63 y\u2081\u1d63; B\u1d63 x\u2081\u1d63 y\u2080\u1d63, B\u1d63 x\u2081\u1d63 y\u2081\u1d63];\n  let D\u2097 := ![B\u2097 x\u2080\u2097 \u2218 \u22ef.elem, B\u2097 x\u2081\u2097 \u2218 \u22ef.elem];\n  let D\u1d63 := Matrix.of fun i => ![B\u1d63 (\u22ef.elem i) y\u2080\u1d63, B\u1d63 (\u22ef.elem i) y\u2081\u1d63];\n  let D\u2097\u1d63 := D\u1d63 * D\u2080\u2097\u207b\u00b9 * D\u2097;\n  let D' := \u229e D\u2097 D\u2080\u2097 D\u2097\u1d63 D\u1d63;\n  let f\u1d63 := fun i =>\n    if hi\u2080 : \u2191i = x\u2080 then \u25e90\n    else if hi\u2081 : \u2191i = x\u2081 then \u25e91 else if hi : \u2191i \u2208 X\u1d63 \\ (x\u2080 \u1543 x\u2081 \u1543 {x'}) then \u25ea\u27e8\u2191i, hi\u27e9 else \u22ef.elim;\n  let f\u2097 := fun j =>\n    if hj\u2080 : \u2191j = y\u2080 then \u25ea0\n    else if hj\u2081 : \u2191j = y\u2081 then \u25ea1 else if hj : \u2191j \u2208 Y\u2097 \\ (y\u2080 \u1543 y\u2081 \u1543 {y'}) then \u25e9\u27e8\u2191j, hj\u27e9 else \u22ef.elim;\n  let D := D'.submatrix f\u1d63 f\u2097;\n  let c\u2080 := fun j => B\u1d63 (\u22ef.elem j) y\u2080\u1d63;\n  let c\u2081 := fun j => B\u1d63 (\u22ef.elem j) y\u2081\u1d63;\n  let d\u2080 := fun i => B\u2097 x\u2080\u2097 (\u22ef.elem i);\n  let d\u2081 := fun i => B\u2097 x\u2081\u2097 (\u22ef.elem i);\n  let D\u2080' := (Matrix.submatrix3x3mems B\u2097' \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs;\n  let r\u2080 := if hD\u2080\u2080 : D\u2080' = matrix3x3unsigned\u2080 then d\u2080 else if hD\u2080\u2081 : D\u2080' = matrix3x3unsigned\u2081 then d\u2080 - d\u2081 else \u22ef.elim;\n  let r\u2081 := if hD\u2080\u2080 : D\u2080' = matrix3x3unsigned\u2080 then -d\u2081 else if hD\u2080\u2081 : D\u2080' = matrix3x3unsigned\u2081 then d\u2081 else \u22ef.elim;\n  let r\u2082 := if hD\u2080\u2080 : D\u2080' = matrix3x3unsigned\u2080 then d\u2080 - d\u2081 else if hD\u2080\u2081 : D\u2080' = matrix3x3unsigned\u2081 then d\u2080 else \u22ef.elim;\n  (A\u2097 \u229f D).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/74640d8a57a6c95bc7e7007559554a1ec7835267/Seymour/Matroid/Operations/Sum3.lean#L996"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-20T12:58:38+02:00",
        "inclusion_date": "2025-05-21T05:06:30.038457+00:00"
      },
      "id": "116de01ff2b0257b395c9b107da9c556ee9ecd3a8428f071b5672fbdfa04e823"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "74640d8a57a6c95bc7e7007559554a1ec7835267",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3.lean",
        "start_line": 1060,
        "start_column": 2,
        "end_line": 1060,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro.intro.intro.intro\n\u03b1 : Type\ninst\u271d : DecidableEq \u03b1\nS\u2097 S\u1d63 : StandardRepr \u03b1 Z2\nx\u2080 x\u2081 x' y\u2080 y\u2081 y' : \u03b1\nhXX : S\u2097.X \u2229 S\u1d63.X = x\u2080 \u1543 x\u2081 \u1543 {x'}\nhYY : S\u2097.Y \u2229 S\u1d63.Y = y\u2080 \u1543 y\u2081 \u1543 {y'}\nhXY : S\u2097.X \u2ad7 S\u1d63.Y\nhYX : S\u2097.Y \u2ad7 S\u1d63.X\nB\u2097 : Matrix \u2191S\u2097.X \u2191S\u2097.Y \u211a\nhB\u2097 : B\u2097.IsTotallyUnimodular\nhBB\u2097 : B\u2097.IsSigningOf S\u2097.B\nB\u1d63 : Matrix \u2191S\u1d63.X \u2191S\u1d63.Y \u211a\nhB\u1d63 : B\u1d63.IsTotallyUnimodular\nhBB\u1d63 : B\u1d63.IsSigningOf S\u1d63.B\n\u22a2 (standardRepr3sumComposition_standard hXX hYY hXY hYX).1.B.HasTuSigning",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/74640d8a57a6c95bc7e7007559554a1ec7835267/Seymour/Matroid/Operations/Sum3.lean#L1060"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-04-10T17:54:51+02:00",
        "inclusion_date": "2025-05-21T05:06:30.038457+00:00"
      },
      "id": "bcc918ff93ca21eafc49ff7367831aa26042190cd694b3309b259ba5c3c3cd44"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "a9175fe24622b2ff7155ad85c1307639e69feda3",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/LawfulEqOrd.lean",
        "start_line": 9,
        "start_column": 2,
        "end_line": 9,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\no : Ord \u03b1\nd : DecidableEq \u03b1\nx y : \u03b1\nneq : x \u2260 y\n\u22a2 x < y \u2228 x > y",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/a9175fe24622b2ff7155ad85c1307639e69feda3/Katydid/Regex/Smart/LawfulEqOrd.lean#L9"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-24T12:13:44+01:00",
        "inclusion_date": "2025-05-29T05:25:51.849295+00:00"
      },
      "id": "b0f3611384d4f3d4c2e42f5894495d55f5f4a7a43f694ce4908c80e3feed671e"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "1e788736f206c0c111682f566380c757a6ec0c77",
        "lean_version": "v4.14.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/SmartPropOr.lean",
        "start_line": 389,
        "start_column": 2,
        "end_line": 389,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u00b9 : Ord \u03b1\ninst\u271d : DecidableEq \u03b1\nx y : Regex \u03b1\nhx : OrIsSmart x\nhy : Regex.notOr y\n\u22a2 OrIsSmart (insertOr x y)",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/1e788736f206c0c111682f566380c757a6ec0c77/Katydid/Regex/Smart/SmartPropOr.lean#L389"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-19T15:53:17+02:00",
        "inclusion_date": "2025-05-21T05:20:22.105045+00:00"
      },
      "id": "556213af6d62a5dc3a2c50222b82a8c4361c5452f114946c826a99a30d7e2e83"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "1e788736f206c0c111682f566380c757a6ec0c77",
        "lean_version": "v4.14.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/SmartPropOr.lean",
        "start_line": 394,
        "start_column": 2,
        "end_line": 394,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u00b9 : Ord \u03b1\ninst\u271d : DecidableEq \u03b1\nx y : Regex \u03b1\nhx : OrIsSmart x\nhy : OrIsSmart y\n\u22a2 OrIsSmart (mergeOr x y)",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/1e788736f206c0c111682f566380c757a6ec0c77/Katydid/Regex/Smart/SmartPropOr.lean#L394"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-15T15:28:17+02:00",
        "inclusion_date": "2025-05-21T05:20:22.105045+00:00"
      },
      "id": "d03824fe8e5542a27c2ef5fdcce8ffaca864d633f564122920b4432eaa85c82b"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "1e788736f206c0c111682f566380c757a6ec0c77",
        "lean_version": "v4.14.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/SmartPropOr.lean",
        "start_line": 399,
        "start_column": 2,
        "end_line": 399,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u00b9 : Ord \u03b1\ninst\u271d : DecidableEq \u03b1\nx y : Regex \u03b1\nhx : OrIsSmart x\nhy : OrIsSmart y\n\u22a2 OrIsSmart (smartOr x y)",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/1e788736f206c0c111682f566380c757a6ec0c77/Katydid/Regex/Smart/SmartPropOr.lean#L399"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-15T15:28:17+02:00",
        "inclusion_date": "2025-05-21T05:20:22.105045+00:00"
      },
      "id": "38e3014f89189364f6ecdfc2980c13019738ee80663f7bf782b6d46b6cb19937"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "poly-time",
        "commit": "236395c3a405733a87116434c9134a33770e43e0",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Examples/Regev.lean",
        "start_line": 433,
        "start_column": 2,
        "end_line": 433,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n m p : \u2115\nhp2 : p.AtLeastTwo\ninst\u271d : NeZero m\n\u03c7 : \u2115\nhe : p > 4 * (\u03c7 * m + 1)\nadv : IND_CPA_Adv (uniformRegevAsymmEnc n m p hp2 inst\u271d \u03c7 he)\n\u22a2 |[=true|(toExecutionMethod (regevAsymmEnc n m p hp2 (uniformErrSamp p \u03c7 (relax_p_bound p \u03c7 m inst\u271d he)))).exec do\n              let b \u2190\n                (toExecutionMethod\n                        (regevAsymmEnc n m p hp2 (uniformErrSamp p \u03c7 (relax_p_bound p \u03c7 m inst\u271d he)))).lift_probComp\n                    ($\u1d57Bool)\n              let __discr \u2190 keygen (regevAsymmEnc n m p hp2 (uniformErrSamp p \u03c7 (relax_p_bound p \u03c7 m inst\u271d he)))\n              match __discr with\n                | (pk, snd) => do\n                  let __discr \u2190 adv.chooseMessages pk\n                  match __discr with\n                    | (m\u2081, m\u2082, state) =>\n                      let m_1 := if b = true then m\u2081 else m\u2082;\n                      do\n                      let c \u2190\n                        encrypt (regevAsymmEnc n m p hp2 (uniformErrSamp p \u03c7 (relax_p_bound p \u03c7 m inst\u271d he))) pk m_1\n                      let b' \u2190 adv.distinguish state c\n                      pure (decide (b = b'))].toReal -\n        [=false|(toExecutionMethod (regevAsymmEnc n m p hp2 (uniformErrSamp p \u03c7 (relax_p_bound p \u03c7 m inst\u271d he)))).exec\n              do\n              let b \u2190\n                (toExecutionMethod\n                        (regevAsymmEnc n m p hp2 (uniformErrSamp p \u03c7 (relax_p_bound p \u03c7 m inst\u271d he)))).lift_probComp\n                    ($\u1d57Bool)\n              let __discr \u2190 keygen (regevAsymmEnc n m p hp2 (uniformErrSamp p \u03c7 (relax_p_bound p \u03c7 m inst\u271d he)))\n              match __discr with\n                | (pk, snd) => do\n                  let __discr \u2190 adv.chooseMessages pk\n                  match __discr with\n                    | (m\u2081, m\u2082, state) =>\n                      let m_1 := if b = true then m\u2081 else m\u2082;\n                      do\n                      let c \u2190\n                        encrypt (regevAsymmEnc n m p hp2 (uniformErrSamp p \u03c7 (relax_p_bound p \u03c7 m inst\u271d he))) pk m_1\n                      let b' \u2190 adv.distinguish state c\n                      pure (decide (b = b'))].toReal| \u2264\n    |[=true|do\n              let b \u2190 $\u1d57Bool\n              let A \u2190 $\u1d57Matrix (Fin n) (Fin m) (Fin p)\n              let u \u2190 $\u1d57Vector (Fin p) m\n              let __discr \u2190 adv.chooseMessages (A, u)\n              @Regev.Hybrid_1.match_1 n m p hp2 inst\u271d \u03c7 he adv (fun __discr => ProbComp Bool) __discr fun m\u2081 m\u2082 st =>\n                  let __do_jp := fun c => do\n                    let b' \u2190 adv.distinguish st c\n                    pure (decide (b = b'));\n                  if b = true then do\n                    let y \u2190\n                      encrypt (regevAsymmEnc n m p hp2 (uniformErrSamp p \u03c7 (relax_p_bound p \u03c7 m inst\u271d he))) (A, u) m\u2081\n                    __do_jp y\n                  else do\n                    let y \u2190\n                      encrypt (regevAsymmEnc n m p hp2 (uniformErrSamp p \u03c7 (relax_p_bound p \u03c7 m inst\u271d he))) (A, u) m\u2082\n                    __do_jp y].toReal -\n          [=false|do\n              let b \u2190 $\u1d57Bool\n              let A \u2190 $\u1d57Matrix (Fin n) (Fin m) (Fin p)\n              let u \u2190 $\u1d57Vector (Fin p) m\n              let __discr \u2190 adv.chooseMessages (A, u)\n              @Regev.Hybrid_1.match_1 n m p hp2 inst\u271d \u03c7 he adv (fun __discr => ProbComp Bool) __discr fun m\u2081 m\u2082 st =>\n                  let __do_jp := fun c => do\n                    let b' \u2190 adv.distinguish st c\n                    pure (decide (b = b'));\n                  if b = true then do\n                    let y \u2190\n                      encrypt (regevAsymmEnc n m p hp2 (uniformErrSamp p \u03c7 (relax_p_bound p \u03c7 m inst\u271d he))) (A, u) m\u2081\n                    __do_jp y\n                  else do\n                    let y \u2190\n                      encrypt (regevAsymmEnc n m p hp2 (uniformErrSamp p \u03c7 (relax_p_bound p \u03c7 m inst\u271d he))) (A, u) m\u2082\n                    __do_jp y].toReal| +\n      |[=true|do\n              let b \u2190 $\u1d57Bool\n              let __do_jp : Matrix (Fin n) (Fin m) (Fin p) \u00d7 Vector (Fin p) m \u2192 ProbComp Bool := fun distr => do\n                let b' \u2190\n                  (fun Au => do\n                        let b \u2190 $\u1d57Bool\n                        let __discr \u2190 adv.chooseMessages Au\n                        @Regev.Hybrid_1.match_1 n m p hp2 inst\u271d \u03c7 he adv (fun __discr => ProbComp Bool) __discr\n                            fun m\u2081 m\u2082 st =>\n                            let __do_jp := fun c => do\n                              let b' \u2190 adv.distinguish st c\n                              pure b';\n                            if b = true then do\n                              let y \u2190\n                                encrypt (regevAsymmEnc n m p hp2 (uniformErrSamp p \u03c7 (relax_p_bound p \u03c7 m inst\u271d he))) Au\n                                    m\u2081\n                              __do_jp y\n                            else do\n                              let y \u2190\n                                encrypt (regevAsymmEnc n m p hp2 (uniformErrSamp p \u03c7 (relax_p_bound p \u03c7 m inst\u271d he))) Au\n                                    m\u2082\n                              __do_jp y)\n                      distr\n                pure (decide (b' = b))\n              if b = true then do\n                  let y \u2190 LWE_Distr n m p (uniformErrSamp p \u03c7 (relax_p_bound p \u03c7 m inst\u271d he))\n                  __do_jp y\n                else do\n                  let y \u2190 LWE_Uniform_Distr n m p\n                  __do_jp y].toReal -\n          [=false|do\n              let b \u2190 $\u1d57Bool\n              let __do_jp : Matrix (Fin n) (Fin m) (Fin p) \u00d7 Vector (Fin p) m \u2192 ProbComp Bool := fun distr => do\n                let b' \u2190\n                  (fun Au => do\n                        let b \u2190 $\u1d57Bool\n                        let __discr \u2190 adv.chooseMessages Au\n                        @Regev.Hybrid_1.match_1 n m p hp2 inst\u271d \u03c7 he adv (fun __discr => ProbComp Bool) __discr\n                            fun m\u2081 m\u2082 st =>\n                            let __do_jp := fun c => do\n                              let b' \u2190 adv.distinguish st c\n                              pure b';\n                            if b = true then do\n                              let y \u2190\n                                encrypt (regevAsymmEnc n m p hp2 (uniformErrSamp p \u03c7 (relax_p_bound p \u03c7 m inst\u271d he))) Au\n                                    m\u2081\n                              __do_jp y\n                            else do\n                              let y \u2190\n                                encrypt (regevAsymmEnc n m p hp2 (uniformErrSamp p \u03c7 (relax_p_bound p \u03c7 m inst\u271d he))) Au\n                                    m\u2082\n                              __do_jp y)\n                      distr\n                pure (decide (b' = b))\n              if b = true then do\n                  let y \u2190 LWE_Distr n m p (uniformErrSamp p \u03c7 (relax_p_bound p \u03c7 m inst\u271d he))\n                  __do_jp y\n                else do\n                  let y \u2190 LWE_Uniform_Distr n m p\n                  __do_jp y].toReal|",
        "url": "https://github.com/dtumad/VCV-io/blob/236395c3a405733a87116434c9134a33770e43e0/Examples/Regev.lean#L433"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-27T11:58:04-04:00",
        "inclusion_date": "2025-05-29T05:07:29.806343+00:00"
      },
      "id": "dad53e3a7a62e7a45cae4083bfa2beb6261599c8a40657878f1f413b88a917f8"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Examples/Regev.lean",
        "start_line": 487,
        "start_column": 2,
        "end_line": 487,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n m p : \u2115\nhp2 : p.AtLeastTwo\ninst\u271d : NeZero m\n\u03c7 : \u2115\nhe : p > 4 * (\u03c7 * m + 1)\nadv : IND_CPA_Adv (uniformRegevAsymmEnc n m p hp2 inst\u271d \u03c7 he)\n\u22a2 |(2\u207b\u00b9 *\n              [=true|do\n                let A \u2190 $\u1d57Matrix (Fin n) (Fin m) (Fin p)\n                let u \u2190 $\u1d57Vector (Fin p) m\n                let __discr \u2190 adv.chooseMessages (A, u)\n                let a \u2190 $\u1d57Vector (Fin 2) m\n                adv.distinguish __discr.2.2\n                    (Vector.ofFn (A.mulVec (Vector.map (Fin.castLE \u22ef) a).get),\n                      u.get \u2b1d\u1d65 (Vector.map (Fin.castLE \u22ef) a).get + if __discr.1 = true then 0 else \u2191(p / 2))] +\n            2\u207b\u00b9 *\n              [=true|do\n                let A \u2190 $\u1d57Matrix (Fin n) (Fin m) (Fin p)\n                let u \u2190 $\u1d57Vector (Fin p) m\n                let __discr \u2190 adv.chooseMessages (A, u)\n                let a \u2190 $\u1d57Vector (Fin 2) m\n                (fun a => !a) <$>\n                    adv.distinguish __discr.2.2\n                      (Vector.ofFn (A.mulVec (Vector.map (Fin.castLE \u22ef) a).get),\n                        u.get \u2b1d\u1d65 (Vector.map (Fin.castLE \u22ef) a).get +\n                          if __discr.2.1 = true then 0 else \u2191(p / 2))]).toReal -\n        (2\u207b\u00b9 *\n              [=false|do\n                let A \u2190 $\u1d57Matrix (Fin n) (Fin m) (Fin p)\n                let u \u2190 $\u1d57Vector (Fin p) m\n                let __discr \u2190 adv.chooseMessages (A, u)\n                let a \u2190 $\u1d57Vector (Fin 2) m\n                adv.distinguish __discr.2.2\n                    (Vector.ofFn (A.mulVec (Vector.map (Fin.castLE \u22ef) a).get),\n                      u.get \u2b1d\u1d65 (Vector.map (Fin.castLE \u22ef) a).get + if __discr.1 = true then 0 else \u2191(p / 2))] +\n            2\u207b\u00b9 *\n              [=false|do\n                let A \u2190 $\u1d57Matrix (Fin n) (Fin m) (Fin p)\n                let u \u2190 $\u1d57Vector (Fin p) m\n                let __discr \u2190 adv.chooseMessages (A, u)\n                let a \u2190 $\u1d57Vector (Fin 2) m\n                (fun a => !a) <$>\n                    adv.distinguish __discr.2.2\n                      (Vector.ofFn (A.mulVec (Vector.map (Fin.castLE \u22ef) a).get),\n                        u.get \u2b1d\u1d65 (Vector.map (Fin.castLE \u22ef) a).get +\n                          if __discr.2.1 = true then 0 else \u2191(p / 2))]).toReal| \u2264\n    |[=true|do\n              let b \u2190 $\u1d57Bool\n              let A \u2190 $\u1d57Matrix (Fin n) (Fin m) (Fin p)\n              let u \u2190 $\u1d57Vector (Fin p) m\n              let __discr \u2190 adv.chooseMessages (A, u)\n              let c\u2081 \u2190 $\u1d57Vector (Fin p) n\n              let c\u2082 \u2190 $\u1d57Fin p\n              (fun a => decide (b = a)) <$> adv.distinguish __discr.2.2 (c\u2081, c\u2082)].toReal -\n          [=false|do\n              let b \u2190 $\u1d57Bool\n              let A \u2190 $\u1d57Matrix (Fin n) (Fin m) (Fin p)\n              let u \u2190 $\u1d57Vector (Fin p) m\n              let __discr \u2190 adv.chooseMessages (A, u)\n              let c\u2081 \u2190 $\u1d57Vector (Fin p) n\n              let c\u2082 \u2190 $\u1d57Fin p\n              (fun a => decide (b = a)) <$> adv.distinguish __discr.2.2 (c\u2081, c\u2082)].toReal| +\n      |[=true|do\n              let A \u2190 $\u1d57Matrix (Fin n) (Fin m) (Fin p)\n              let u \u2190 $\u1d57Vector (Fin p) m\n              let r2 \u2190 $\u1d57Vector (Fin 2) m\n              let b \u2190 $\u1d57Bool\n              let A_1 \u2190 $\u1d57Matrix (Fin n) (Fin m) (Fin p)\n              let u_1 \u2190 $\u1d57Vector (Fin p) m\n              let __discr \u2190 adv.chooseMessages (A_1, u_1)\n              (fun a => decide (b = a)) <$>\n                  adv.distinguish __discr.2.2\n                    (Vector.ofFn (A.mulVec (Vector.map (Fin.castLE \u22ef) r2).get),\n                      u.get \u2b1d\u1d65 (Vector.map (Fin.castLE \u22ef) r2).get)].toReal -\n          [=true|do\n              let x \u2190 $\u1d57Vector (Fin p) n\n              let y \u2190 $\u1d57Fin p\n              let b \u2190 $\u1d57Bool\n              let A \u2190 $\u1d57Matrix (Fin n) (Fin m) (Fin p)\n              let u \u2190 $\u1d57Vector (Fin p) m\n              let __discr \u2190 adv.chooseMessages (A, u)\n              (fun a => decide (b = a)) <$> adv.distinguish __discr.2.2 (x, y)].toReal|",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/Examples/Regev.lean#L487"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-27T11:58:04-04:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "1de01266c74bb4d9512c409c3fde958dd1e2cc8a68211c1232b8e09f4ae87f7a"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Examples/FrankingProtocol.lean",
        "start_line": 223,
        "start_column": 2,
        "end_line": 223,
        "end_column": 7
      },
      "debug_info": {
        "goal": "bv : BitVec 256\n\u22a2 String.foldl (fun acc c => acc <<< 8 + BitVec.ofNat 256 c.toNat) 0#256\n      { data := bitvec_to_string.chars bv.toNat [] } =\n    bv",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/Examples/FrankingProtocol.lean#L223"
      },
      "metadata": {
        "blame_email_hash": "f78b4540360d",
        "blame_date": "2025-02-05T21:14:45-06:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "2741d324bb2df1a84d3e6f71cc958b9d07ed1147312ea149f2660a7808e75a49"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Examples/FrankingProtocol.lean",
        "start_line": 257,
        "start_column": 2,
        "end_line": 257,
        "end_column": 7
      },
      "debug_info": {
        "goal": "message_content : String\n\u22a2 (\u2200 (x : BitVec 256),\n      (if\n              mock_hmac_sha256 x\n                  (serialize_message_data (deserialize_message_data ((serialize_message_data message_content x).1, x)).1\n                      x).1 =\n                mock_hmac_sha256 x (serialize_message_data message_content x).1 then\n            pure\n              (some (SecretMessage.mk (deserialize_message_data ((serialize_message_data message_content x).1, x)).1 x))\n          else pure none).neverFails \u2227\n        \u2200\n          x_1 \u2208\n            if\n                mock_hmac_sha256 x\n                    (serialize_message_data\n                        (deserialize_message_data ((serialize_message_data message_content x).1, x)).1 x).1 =\n                  mock_hmac_sha256 x (serialize_message_data message_content x).1 then\n              {some (SecretMessage.mk (deserialize_message_data ((serialize_message_data message_content x).1, x)).1 x)}\n            else {none},\n          OracleComp.neverFails\n              (@simulation_setup.match_1 (fun maybeVerifiedMsg => OracleComp unifSpec (Option SimulationData)) x_1\n                (fun _ => pure none) fun verified_msg =>\n                pure\n                  (some\n                    (SimulationData.mk verified_msg\n                      (MessagePackage.mk\n                        (EncryptedMessage.mk (mock_encrypt (serialize_message_data message_content x).1))\n                        (FrankingTag.mk (mock_hmac_sha256 x (serialize_message_data message_content x).1))\n                        (ReportingTag.mk\n                          (mock_hmac_sha256 (123456789#256)\n                            (string_to_bitvec\n                              (String.append (mock_hmac_sha256 x (serialize_message_data message_content x).1)\n                                (bitvec_to_string 1730230302#256)))))\n                        (Context.mk (1001#256) (1002#256) 1730230302 123) x)\n                      123456789#256))) \u2227\n            \u2200\n              x_2 \u2208\n                OracleComp.support\n                  (@simulation_setup.match_1 (fun maybeVerifiedMsg => OracleComp unifSpec (Option SimulationData)) x_1\n                    (fun _ => pure none) fun verified_msg =>\n                    pure\n                      (some\n                        (SimulationData.mk verified_msg\n                          (MessagePackage.mk\n                            (EncryptedMessage.mk (mock_encrypt (serialize_message_data message_content x).1))\n                            (FrankingTag.mk (mock_hmac_sha256 x (serialize_message_data message_content x).1))\n                            (ReportingTag.mk\n                              (mock_hmac_sha256 (123456789#256)\n                                (string_to_bitvec\n                                  (String.append (mock_hmac_sha256 x (serialize_message_data message_content x).1)\n                                    (bitvec_to_string 1730230302#256)))))\n                            (Context.mk (1001#256) (1002#256) 1730230302 123) x)\n                          123456789#256))),\n              OracleComp.neverFails\n                (@test_abuse_report_validation.match_1 (fun maybeData => OracleComp unifSpec Bool) x_2\n                  (fun _ => pure false) fun data =>\n                  pure\n                    (decide\n                        (mock_hmac_sha256 (SecretMessage.nonce (SimulationData.verified_msg data))\n                            (serialize_message_data (SecretMessage.content (SimulationData.verified_msg data))\n                                (SecretMessage.nonce (SimulationData.verified_msg data))).1 =\n                          FrankingTag.tag (MessagePackage.franking_tag (SimulationData.message_package data))) &&\n                      decide\n                        (mock_hmac_sha256 (SimulationData.facebook_key data)\n                            (string_to_bitvec\n                              (String.append\n                                (FrankingTag.tag (MessagePackage.franking_tag (SimulationData.message_package data)))\n                                (bitvec_to_string\n                                  (BitVec.ofNat 256\n                                    (Context.timestamp\n                                      (MessagePackage.context (SimulationData.message_package data))))))) =\n                          ReportingTag.tag (MessagePackage.reporting_tag (SimulationData.message_package data)))))) \u2227\n    (\u2200 (x : BitVec 256),\n        false \u2209\n          (do\n              let x_1 \u2190\n                if\n                      mock_hmac_sha256 x\n                          (serialize_message_data\n                              (deserialize_message_data ((serialize_message_data message_content x).1, x)).1 x).1 =\n                        mock_hmac_sha256 x (serialize_message_data message_content x).1 then\n                    pure\n                      (some\n                        (SecretMessage.mk (deserialize_message_data ((serialize_message_data message_content x).1, x)).1\n                          x))\n                  else pure none\n              let maybeData \u2190\n                @simulation_setup.match_1 (fun maybeVerifiedMsg => OracleComp unifSpec (Option SimulationData)) x_1\n                    (fun _ => pure none) fun verified_msg =>\n                    pure\n                      (some\n                        (SimulationData.mk verified_msg\n                          (MessagePackage.mk\n                            (EncryptedMessage.mk (mock_encrypt (serialize_message_data message_content x).1))\n                            (FrankingTag.mk (mock_hmac_sha256 x (serialize_message_data message_content x).1))\n                            (ReportingTag.mk\n                              (mock_hmac_sha256 (123456789#256)\n                                (string_to_bitvec\n                                  (String.append (mock_hmac_sha256 x (serialize_message_data message_content x).1)\n                                    (bitvec_to_string 1730230302#256)))))\n                            (Context.mk (1001#256) (1002#256) 1730230302 123) x)\n                          123456789#256))\n              @test_abuse_report_validation.match_1 (fun maybeData => OracleComp unifSpec Bool) maybeData\n                  (fun _ => pure false) fun data =>\n                  pure\n                    (decide\n                        (mock_hmac_sha256 (SecretMessage.nonce (SimulationData.verified_msg data))\n                            (serialize_message_data (SecretMessage.content (SimulationData.verified_msg data))\n                                (SecretMessage.nonce (SimulationData.verified_msg data))).1 =\n                          FrankingTag.tag (MessagePackage.franking_tag (SimulationData.message_package data))) &&\n                      decide\n                        (mock_hmac_sha256 (SimulationData.facebook_key data)\n                            (string_to_bitvec\n                              (String.append\n                                (FrankingTag.tag (MessagePackage.franking_tag (SimulationData.message_package data)))\n                                (bitvec_to_string\n                                  (BitVec.ofNat 256\n                                    (Context.timestamp\n                                      (MessagePackage.context (SimulationData.message_package data))))))) =\n                          ReportingTag.tag\n                            (MessagePackage.reporting_tag (SimulationData.message_package data))))).finSupport) \u2227\n      \u2203 a,\n        true \u2208\n          (do\n              let x \u2190\n                if\n                      mock_hmac_sha256 a\n                          (serialize_message_data\n                              (deserialize_message_data ((serialize_message_data message_content a).1, a)).1 a).1 =\n                        mock_hmac_sha256 a (serialize_message_data message_content a).1 then\n                    pure\n                      (some\n                        (SecretMessage.mk (deserialize_message_data ((serialize_message_data message_content a).1, a)).1\n                          a))\n                  else pure none\n              let maybeData \u2190\n                @simulation_setup.match_1 (fun maybeVerifiedMsg => OracleComp unifSpec (Option SimulationData)) x\n                    (fun _ => pure none) fun verified_msg =>\n                    pure\n                      (some\n                        (SimulationData.mk verified_msg\n                          (MessagePackage.mk\n                            (EncryptedMessage.mk (mock_encrypt (serialize_message_data message_content a).1))\n                            (FrankingTag.mk (mock_hmac_sha256 a (serialize_message_data message_content a).1))\n                            (ReportingTag.mk\n                              (mock_hmac_sha256 (123456789#256)\n                                (string_to_bitvec\n                                  (String.append (mock_hmac_sha256 a (serialize_message_data message_content a).1)\n                                    (bitvec_to_string 1730230302#256)))))\n                            (Context.mk (1001#256) (1002#256) 1730230302 123) a)\n                          123456789#256))\n              @test_abuse_report_validation.match_1 (fun maybeData => OracleComp unifSpec Bool) maybeData\n                  (fun _ => pure false) fun data =>\n                  pure\n                    (decide\n                        (mock_hmac_sha256 (SecretMessage.nonce (SimulationData.verified_msg data))\n                            (serialize_message_data (SecretMessage.content (SimulationData.verified_msg data))\n                                (SecretMessage.nonce (SimulationData.verified_msg data))).1 =\n                          FrankingTag.tag (MessagePackage.franking_tag (SimulationData.message_package data))) &&\n                      decide\n                        (mock_hmac_sha256 (SimulationData.facebook_key data)\n                            (string_to_bitvec\n                              (String.append\n                                (FrankingTag.tag (MessagePackage.franking_tag (SimulationData.message_package data)))\n                                (bitvec_to_string\n                                  (BitVec.ofNat 256\n                                    (Context.timestamp\n                                      (MessagePackage.context (SimulationData.message_package data))))))) =\n                          ReportingTag.tag\n                            (MessagePackage.reporting_tag (SimulationData.message_package data))))).finSupport",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/Examples/FrankingProtocol.lean#L257"
      },
      "metadata": {
        "blame_email_hash": "f78b4540360d",
        "blame_date": "2025-02-05T21:14:45-06:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "545ef858433e5671eb28b79f97a40c79265f3a503f688bb8218bc0d5aa4414bf"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Examples/FrankingProtocol.lean",
        "start_line": 269,
        "start_column": 2,
        "end_line": 269,
        "end_column": 7
      },
      "debug_info": {
        "goal": "message_content : String\n\u22a2 \u2200 (x : BitVec 256),\n    (if\n            mock_hmac_sha256 x\n                (serialize_message_data (deserialize_message_data ((serialize_message_data message_content x).1, x)).1\n                    x).1 =\n              mock_hmac_sha256 x (serialize_message_data message_content x).1 then\n          pure\n            (some (SecretMessage.mk (deserialize_message_data ((serialize_message_data message_content x).1, x)).1 x))\n        else pure none).neverFails \u2227\n      \u2200\n        x_1 \u2208\n          if\n              mock_hmac_sha256 x\n                  (serialize_message_data (deserialize_message_data ((serialize_message_data message_content x).1, x)).1\n                      x).1 =\n                mock_hmac_sha256 x (serialize_message_data message_content x).1 then\n            {some (SecretMessage.mk (deserialize_message_data ((serialize_message_data message_content x).1, x)).1 x)}\n          else {none},\n        OracleComp.neverFails\n            (@simulation_setup.match_1 (fun maybeVerifiedMsg => OracleComp unifSpec (Option SimulationData)) x_1\n              (fun _ => pure none) fun verified_msg =>\n              pure\n                (some\n                  (SimulationData.mk verified_msg\n                    (MessagePackage.mk (EncryptedMessage.mk (mock_encrypt (serialize_message_data message_content x).1))\n                      (FrankingTag.mk (mock_hmac_sha256 x (serialize_message_data message_content x).1))\n                      (ReportingTag.mk\n                        (mock_hmac_sha256 (123456789#256)\n                          (string_to_bitvec\n                            (String.append (mock_hmac_sha256 x (serialize_message_data message_content x).1)\n                              (bitvec_to_string 1730230302#256)))))\n                      (Context.mk (1001#256) (1002#256) 1730230302 123) x)\n                    123456789#256))) \u2227\n          \u2200\n            x_2 \u2208\n              OracleComp.support\n                (@simulation_setup.match_1 (fun maybeVerifiedMsg => OracleComp unifSpec (Option SimulationData)) x_1\n                  (fun _ => pure none) fun verified_msg =>\n                  pure\n                    (some\n                      (SimulationData.mk verified_msg\n                        (MessagePackage.mk\n                          (EncryptedMessage.mk (mock_encrypt (serialize_message_data message_content x).1))\n                          (FrankingTag.mk (mock_hmac_sha256 x (serialize_message_data message_content x).1))\n                          (ReportingTag.mk\n                            (mock_hmac_sha256 (123456789#256)\n                              (string_to_bitvec\n                                (String.append (mock_hmac_sha256 x (serialize_message_data message_content x).1)\n                                  (bitvec_to_string 1730230302#256)))))\n                          (Context.mk (1001#256) (1002#256) 1730230302 123) x)\n                        123456789#256))),\n            OracleComp.neverFails\n              (@test_abuse_report_validation.match_1 (fun maybeData => OracleComp unifSpec Bool) x_2\n                (fun _ => pure true) fun val => pure false)",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/Examples/FrankingProtocol.lean#L269"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-09T11:17:26-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "17c19c6f7c8acebd709caaf260021cb8ac1da49a1d24cc12376d1617aedb97bf"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Examples/FrankingProtocol.lean",
        "start_line": 290,
        "start_column": 2,
        "end_line": 290,
        "end_column": 7
      },
      "debug_info": {
        "goal": "facebook_key : BitVec 256\nmessage_content : String\ncontext : Context\n\u22a2 \u2200 (x : BitVec 256),\n    (if\n          mock_hmac_sha256 x\n              (serialize_message_data (deserialize_message_data ((serialize_message_data message_content x).1, x)).1\n                  x).1 =\n            mock_hmac_sha256 x (serialize_message_data message_content x).1 then\n        pure (some (SecretMessage.mk (deserialize_message_data ((serialize_message_data message_content x).1, x)).1 x))\n      else pure none).neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/Examples/FrankingProtocol.lean#L290"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-09T11:17:26-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "ba0e035c3a4b78bf74f3d1aea8d4f89dfd6d541f3f4976a96e6cbd7f3afd7418"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Examples/HHS_Elgamal.lean",
        "start_line": 28,
        "start_column": 2,
        "end_line": 28,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nspec : OracleSpec \u03b9\ninst\u271d : spec.FiniteRange\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b5 : Type\noa : OracleComp spec \u03b1\nob : OracleComp spec \u03b2\noc : OracleComp spec \u03b3\nod : OracleComp spec \u03b4\noe : \u03b1 \u2192 \u03b2 \u2192 \u03b3 \u2192 \u03b4 \u2192 OracleComp spec \u03b5\nz : \u03b5\n\u22a2 [=z|do\n      let a \u2190 oa\n      let b \u2190 ob\n      let c \u2190 oc\n      let d \u2190 od\n      oe a b c d] =\n    [=z|do\n      let d \u2190 od\n      let a \u2190 oa\n      let b \u2190 ob\n      let c \u2190 oc\n      oe a b c d]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/Examples/HHS_Elgamal.lean#L28"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "40bfed0141433ad45d692687137b2186b712c19ad07babf3a2b1730b53f2c3bf"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Examples/HHS_Elgamal.lean",
        "start_line": 33,
        "start_column": 2,
        "end_line": 33,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\noa : Bool \u2192 ProbComp \u03b1\nx : \u03b1\n\u22a2 [=x|$\u1d57Bool >>= oa] = [=x|oa true] / 2 + [=x|oa false] / 2",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/Examples/HHS_Elgamal.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "0f7240e2a5697fa6dc2055f8377a04047ecb0c84ee2c77cface2a42f1366c175"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "poly-time",
        "commit": "236395c3a405733a87116434c9134a33770e43e0",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Examples/HHS_Elgamal.lean",
        "start_line": 93,
        "start_column": 4,
        "end_line": 93,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case e_a.e_a\nG P : Type\ninst\u271d\u2076 : SelectableType G\ninst\u271d\u2075 : SelectableType P\ninst\u271d\u2074 : AddCommGroup G\ninst\u271d\u00b3 : Group P\ninst\u271d\u00b2 : AddTorsor G P\ninst\u271d\u00b9 : DecidableEq G\ninst\u271d : DecidableEq P\nadversary : IND_CPA_adversary (elgamalAsymmEnc G P inst\u271d\u2076 inst\u271d\u2075 AddCommGroup.toAddGroup inst\u271d\u00b3 inst\u271d\u00b2)\nx : P\ng\u2081 : G\n\u22a2 [=()|do\n      let a \u2190\n        (simulateQ\n                (idOracle ++\u209b\u2092\n                  {\n                      impl := fun {\u03b1} x_1 =>\n                        match \u03b1, x_1 with\n                        | .((P \u00d7 P \u2192\u2092 P \u00d7 P).range ()), query PUnit.unit (m\u2081, m\u2082) =>\n                          (fun a => (a +\u1d65 x, m\u2081 * (a +\u1d65 g\u2081 +\u1d65 x))) <$> ($\u1d57G) }.withCaching)\n                (adversary (x, g\u2081 +\u1d65 x))).run\n            \u2205\n      if a.1 = true then pure () else failure] =\n    [=()|do\n      let c \u2190 $\u1d57G\n      let b' \u2190\n        simulateQ\n            (idOracle ++\u209b\u2092\n              {\n                impl := fun {\u03b1} x_1 =>\n                  @elgamalAsymmEnc.IND_CPA_parallelTesting_reduction.match_1 P (fun \u03b1 x => ProbComp \u03b1) \u03b1 x_1\n                    fun m\u2081 _m\u2082 => pure (c +\u1d65 x, m\u2081 * (c +\u1d65 g\u2081 +\u1d65 x)) })\n            (adversary (x, g\u2081 +\u1d65 x))\n      if b' = true then pure () else failure]",
        "url": "https://github.com/dtumad/VCV-io/blob/236395c3a405733a87116434c9134a33770e43e0/Examples/HHS_Elgamal.lean#L93"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-05-29T05:07:29.806343+00:00"
      },
      "id": "86d3515967b35f117f4abd3c72e729335226984921160759380f6f2f357797ac"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "poly-time",
        "commit": "236395c3a405733a87116434c9134a33770e43e0",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Examples/HHS_Elgamal.lean",
        "start_line": 98,
        "start_column": 4,
        "end_line": 98,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case e_a.e_a\nG P : Type\ninst\u271d\u2076 : SelectableType G\ninst\u271d\u2075 : SelectableType P\ninst\u271d\u2074 : AddCommGroup G\ninst\u271d\u00b3 : Group P\ninst\u271d\u00b2 : AddTorsor G P\ninst\u271d\u00b9 : DecidableEq G\ninst\u271d : DecidableEq P\nadversary : IND_CPA_adversary (elgamalAsymmEnc G P inst\u271d\u2076 inst\u271d\u2075 AddCommGroup.toAddGroup inst\u271d\u00b3 inst\u271d\u00b2)\nx : P\ng\u2081 : G\n\u22a2 [=()|do\n      let a \u2190\n        (simulateQ\n                (idOracle ++\u209b\u2092\n                  {\n                      impl := fun {\u03b1} x_1 =>\n                        match \u03b1, x_1 with\n                        | .((P \u00d7 P \u2192\u2092 P \u00d7 P).range ()), query PUnit.unit (m\u2081, m\u2082) =>\n                          (fun a => (a +\u1d65 x, m\u2082 * (a +\u1d65 g\u2081 +\u1d65 x))) <$> ($\u1d57G) }.withCaching)\n                (adversary (x, g\u2081 +\u1d65 x))).run\n            \u2205\n      if a.1 = false then pure () else failure] =\n    [=()|do\n      let c \u2190 $\u1d57G\n      let y \u2190 $\u1d57P\n      let b' \u2190\n        simulateQ\n            (idOracle ++\u209b\u2092\n              {\n                impl := fun {\u03b1} x_1 =>\n                  @elgamalAsymmEnc.IND_CPA_parallelTesting_reduction.match_1 P (fun \u03b1 x => ProbComp \u03b1) \u03b1 x_1\n                    fun m\u2081 _m\u2082 => pure (c +\u1d65 x, m\u2081 * y) })\n            (adversary (x, g\u2081 +\u1d65 x))\n      if b' = false then pure () else failure]",
        "url": "https://github.com/dtumad/VCV-io/blob/236395c3a405733a87116434c9134a33770e43e0/Examples/HHS_Elgamal.lean#L98"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-05-29T05:07:29.806343+00:00"
      },
      "id": "3e625aea966deb624f93daa942c9f9428339fca2bdb156cbb89f3bc897ab2d26"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/Traversal.lean",
        "start_line": 83,
        "start_column": 4,
        "end_line": 83,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case query_bind\n\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type v\nQ : {\u03b1 : Type v} \u2192 spec.OracleQuery \u03b1 \u2192 Prop\nF : Prop\npossible_outputs : {\u03b1 : Type v} \u2192 spec.OracleQuery \u03b1 \u2192 Set \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\ni : \u03b9\nt : spec.domain i\noa : spec.range i \u2192 OracleComp spec \u03b1\nh :\n  \u2200 (u : spec.range i),\n    @OracleComp.allWhen \u03b9 spec \u03b2 (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa u >>= ob) \u2194\n      @OracleComp.allWhen \u03b9 spec \u03b1 (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa u) \u2227\n        ((x : \u03b1) \u2192\n          (x \u2208 (oa u).supportWhen fun {\u03b1} => possible_outputs) \u2192\n            @OracleComp.allWhen \u03b9 spec \u03b2 (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (ob x))\n\u22a2 (Q (query i t) \u2227\n      \u2200 x \u2208 possible_outputs (query i t),\n        @OracleComp.allWhen \u03b9 spec \u03b1 (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa x) \u2227\n          ((x_1 : \u03b1) \u2192\n            x_1 \u2208 OracleComp.construct (fun x => {x}) (fun {\u03b2} q oa f => \u22c3 u \u2208 possible_outputs q, f u) \u2205 (oa x) \u2192\n              @OracleComp.allWhen \u03b9 spec \u03b2 (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (ob x_1))) \u2194\n    (Q (query i t) \u2227\n        ((x : spec.range i) \u2192\n          x \u2208 possible_outputs (query i t) \u2192\n            @OracleComp.allWhen \u03b9 spec \u03b1 (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa x))) \u2227\n      ((x : \u03b1) \u2192\n        (x_1 : spec.range i) \u2192\n          x_1 \u2208 possible_outputs (query i t) \u2192\n            x \u2208 OracleComp.construct (fun x => {x}) (fun {\u03b2} q oa f => \u22c3 u \u2208 possible_outputs q, f u) \u2205 (oa x_1) \u2192\n              @OracleComp.allWhen \u03b9 spec \u03b2 (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (ob x))",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/Traversal.lean#L83"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "c0beae1a0c942f5e8d3461f5055c5a4196a8a465a34fa355f75b17b222a57412"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/QueryBound.lean",
        "start_line": 49,
        "start_column": 2,
        "end_line": 49,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\ninst\u271d\u00b9 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\n\u03b1 : Type u\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\n\u22a2 (\u2200 (qc : spec.QueryCount) (x : \u03b1), (x, qc) \u2208 (simulateQ countingOracle oa).run.support \u2192 qc \u2264 qb) \u2194\n    \u2200\n      x \u2208\n        if oa.neverFails then snd '' (simulateQ countingOracle oa).run.support\n        else insert 0 (snd '' (simulateQ countingOracle oa).run.support),\n      x \u2264 qb",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/QueryBound.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "d3d72d855d1bc5229e1b4f23c4f80ec6489781f1944f073718493aada695c62c"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 27,
        "start_column": 2,
        "end_line": 27,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type v\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : OracleComp spec \u03b2\nz : \u03b1 \u00d7 \u03b2\n\u22a2 [=z|(fun x1 x2 => (x1, x2)) <$> oa <*> ob] = [=z.1|oa] * [=z.2|ob]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/Fork.lean#L27"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "181efeff1b09af13385b58c78a547374c4a5efc92ff28090a6c5a1befbec5ecc"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 32,
        "start_column": 2,
        "end_line": 32,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type v\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : OracleComp spec \u03b2\nx : \u03b1\ny : \u03b2\n\u22a2 [=(x, y)|(fun x1 x2 => (x1, x2)) <$> oa <*> ob] = [=x|oa] * [=y|ob]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/Fork.lean#L32"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "c20704b00d8a02aac2acc0233c5dd5dd7733e104773e4487a6a3e47163767d07"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 38,
        "start_column": 2,
        "end_line": 38,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 \u03b3 \u03b4 : Type v\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : OracleComp spec \u03b2\nf : \u03b1 \u2192 \u03b3\ng : \u03b2 \u2192 \u03b4\nz : \u03b3 \u00d7 \u03b4\n\u22a2 [=z|(fun x1 x2 => (f x1, g x2)) <$> oa <*> ob] = [=z.1|f <$> oa] * [=z.2|g <$> ob]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/Fork.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "269426e70f9942568f8be6d15ed5e511b1d7139fc10703998cd653fb66196b03"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 44,
        "start_column": 2,
        "end_line": 44,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 \u03b3 \u03b4 : Type v\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : OracleComp spec \u03b2\nf : \u03b1 \u2192 \u03b3\ng : \u03b2 \u2192 \u03b4\nx : \u03b3\ny : \u03b4\n\u22a2 [=(x, y)|(fun x1 x2 => (f x1, g x2)) <$> oa <*> ob] = [=x|f <$> oa] * [=y|g <$> ob]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/Fork.lean#L44"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "924a66e190ca3dfc1da49bc30d196d005c1db0e1903062d55484ae8c7dca79ea"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 50,
        "start_column": 2,
        "end_line": 50,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 \u03b3 \u03b4 : Type v\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : OracleComp spec \u03b2\nf : \u03b1 \u2192 \u03b3\ng : \u03b2 \u2192 \u03b4\nz : \u03b3 \u00d7 \u03b4\n\u22a2 [=z|do\n      let x \u2190 oa\n      let y \u2190 ob\n      pure (f x, g y)] =\n    [=z.1|f <$> oa] * [=z.2|g <$> ob]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/Fork.lean#L50"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "65102e5629c005414eb8ccf69dc5c34c1a40374d1552f7bb3017fd20bdb470da"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 57,
        "start_column": 2,
        "end_line": 57,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 \u03b3 \u03b4 : Type v\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : OracleComp spec \u03b2\nf : \u03b1 \u2192 \u03b3\ng : \u03b2 \u2192 \u03b4\nx : \u03b3\ny : \u03b4\n\u22a2 [=(x, y)|do\n      let x \u2190 oa\n      let y \u2190 ob\n      pure (f x, g y)] =\n    [=x|f <$> oa] * [=y|g <$> ob]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/Fork.lean#L57"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "22bc107ae1819cb27939ec39731745caa32df9aa19c632aa99c671547157e937"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 67,
        "start_column": 2,
        "end_line": 67,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 \u03b3 : Type v\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\n\u03c3 : Type u\ns : Finset \u03c3\noc : \u03c3 \u2192 \u03b1 \u2192 OracleComp spec \u03b3\n\u22a2 [\u22a5|oa >>= ob] = \u2211 x \u2208 s, [\u22a5|oa >>= oc x]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/Fork.lean#L67"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "5df956229d2e02fd83a7264bc21b1f7ce3f6452de3d650fbef3d63a091cdf3df"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 77,
        "start_column": 2,
        "end_line": 77,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type v\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\ny : \u03b2\nz : \u03b1 \u00d7 \u03b2\n\u22a2 [=z|(fun x => (x, y)) <$> oa] = [=z.1|oa] * [=z.2|pure y]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/Fork.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "341c9eded1dea1c1c3675bd71f6f2af15e33b2b5a2bee101de9ec34263079d6a"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 82,
        "start_column": 2,
        "end_line": 82,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type v\ninst\u271d : spec.FiniteRange\nob : OracleComp spec \u03b2\nx : \u03b1\nz : \u03b1 \u00d7 \u03b2\n\u22a2 [=z|(fun x_1 => (x, x_1)) <$> ob] = [=z.1|pure x] * [=z.2|ob]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/Fork.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "9a02405abaab092b8be407666ea746765a527e29302f5f21157387de0db8c204"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 88,
        "start_column": 2,
        "end_line": 88,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 \u03b3 : Type v\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nf : \u03b1 \u2192 \u03b3\ny : \u03b2\nz : \u03b3 \u00d7 \u03b2\n\u22a2 [=z|(fun x => (f x, y)) <$> oa] = [=z.1|f <$> oa] * [=z.2|pure y]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/Fork.lean#L88"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "b2f0afc2898224321cb24d0d6c2d7c9b63ce527a8f3a27861db7bcdcb811a783"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 94,
        "start_column": 2,
        "end_line": 94,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 \u03b3 : Type v\ninst\u271d : spec.FiniteRange\nob : OracleComp spec \u03b2\nf : \u03b2 \u2192 \u03b3\nx : \u03b1\nz : \u03b1 \u00d7 \u03b3\n\u22a2 [=z|(fun x_1 => (x, f x_1)) <$> ob] = [=z.1|pure x] * [=z.2|f <$> ob]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/Fork.lean#L94"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "ae78e7bc97db0a082e20a21307ffe6b7ee4e9640bef63984c06bfc3250ab913a"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 142,
        "start_column": 2,
        "end_line": 142,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\n\u22a2 (Prod.map cf cf <$> OracleComp.fork \u03b9 inst\u271d\u2074 spec inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 \u03b1 main qb js i cf).support =\n    (fun s => (s, s)) '' (cf <$> main).support",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/Fork.lean#L142"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "12545cf96291df540a6835133b527546af3aaedca2cf04a6edad1ce421b04090"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 146,
        "start_column": 2,
        "end_line": 146,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\n\u22a2 (Prod.map cf cf <$> OracleComp.fork \u03b9 inst\u271d\u2074 spec inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 \u03b1 main qb js i cf).finSupport =\n    Finset.image (fun s => (s, s)) (cf <$> main).finSupport",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/Fork.lean#L146"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "4c2fab15e33fe882f66b232c2733cd352fa3cc6f8f19a1c77a700f67bb9718d8"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 150,
        "start_column": 2,
        "end_line": 150,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nx\u2081 x\u2082 : \u03b1\nh : (x\u2081, x\u2082) \u2208 support (OracleComp.fork \u03b9 inst\u271d\u2074 spec inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 \u03b1 main qb js i cf)\n\u22a2 cf x\u2081 = cf x\u2082",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/Fork.lean#L150"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "0fac3ca482c818ccf5dc853731238161b1efa20d74d3a2e243ac428b0cd509f0"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 154,
        "start_column": 2,
        "end_line": 154,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Option (Fin (qb i + 1))\n\u22a2 [=(none, s)|Prod.map cf cf <$> OracleComp.fork \u03b9 inst\u271d\u2074 spec inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 \u03b1 main qb js i cf] = 0",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/Fork.lean#L154"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "0082a33e17800c345eb6901c326ef5d2379fb74439c3df609546e6cd04a6c131"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 158,
        "start_column": 2,
        "end_line": 158,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Option (Fin (qb i + 1))\n\u22a2 [=(s, none)|Prod.map cf cf <$> OracleComp.fork \u03b9 inst\u271d\u2074 spec inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 \u03b1 main qb js i cf] = 0",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/Fork.lean#L158"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "8e14074ca39eff90d2fb9848c563c502be3006b8572dffa1b519628024a13515"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 169,
        "start_column": 2,
        "end_line": 169,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nx\u2081 x\u2082 : \u03b1\nh : (x\u2081, x\u2082) \u2208 support (OracleComp.fork \u03b9 inst\u271d\u2074 spec inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 \u03b1 main qb js i cf)\n\u22a2 \u2203 s,\n    cf x\u2081 = some s \u2227\n      cf x\u2082 = some s \u2227\n        \u2203 log\u2081,\n          \u2203 (hcf\u2081 : \u2191s < log\u2081.countQ i),\n            \u2203 log\u2082,\n              \u2203 (hcf\u2081_1 : \u2191s < log\u2082.countQ i),\n                (log\u2081.getQ i)[s].1 = (log\u2082.getQ i)[s].1 \u2227\n                  (log\u2081.getQ i)[s].2 \u2260 (log\u2082.getQ i)[s].2 \u2227\n                    (x\u2081, log\u2081) \u2208 (simulateQ loggingOracle main).run.support \u2227\n                      (x\u2082, log\u2082) \u2208 (simulateQ loggingOracle main).run.support",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/Fork.lean#L169"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "78f2f9286fdd07940ae4545b456a47f4e21747f3895c07acd4249b6a59b1719b"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 272,
        "start_column": 10,
        "end_line": 272,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case e_a\n\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Fin (qb i + 1)\nh : ENNReal := \u2191(Fintype.card (spec.range i))\nthis\u271d : DecidableEq \u03b1\nthis : DecidableEq spec.QuerySeed\n\u22a2 [=(some s, some s)|do\n      let seed \u2190 liftM (generateSeed spec qb js)\n      let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n      let u \u2190 liftM ($\u1d57spec.range i)\n      let seed' : spec.QuerySeed := (seed.takeAtIndex i \u2191s).addValue i u\n      let x\u2082 \u2190 (simulateQ seededOracle main).run seed'\n      pure (cf x\u2081, cf x\u2082)] =\n    [=(some s, some s)|do\n      let shared_seed \u2190 liftM (generateSeed spec (update qb i \u2191s) js)\n      let x\u2081 \u2190 (simulateQ seededOracle main).run shared_seed\n      let x\u2082 \u2190 (simulateQ seededOracle main).run shared_seed\n      pure (cf x\u2081, cf x\u2082)]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/Fork.lean#L272"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "c218d538ecf46785bfecb2dccbf2ad1780d55fa034d5af27b2447f60e0543c60"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "poly-time",
        "commit": "236395c3a405733a87116434c9134a33770e43e0",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 282,
        "start_column": 53,
        "end_line": 282,
        "end_column": 58
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Fin (qb i + 1)\nh : ENNReal := \u2191(Fintype.card (spec.range i))\nthis\u271d : DecidableEq \u03b1\nthis : DecidableEq spec.QuerySeed\nseed : spec.QuerySeed\nhseed : seed \u2208 (liftM (generateSeed spec qb js)).support\n\u22a2 \u2191(s + 1) < (seed i).length",
        "url": "https://github.com/dtumad/VCV-io/blob/236395c3a405733a87116434c9134a33770e43e0/VCVio/CryptoFoundations/Fork.lean#L282"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-05-29T05:07:29.806343+00:00"
      },
      "id": "50ae737d4f719f628789bef508e5931760b60a5e17bdd77590d65dfd97f4cc74"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 374,
        "start_column": 6,
        "end_line": 374,
        "end_column": 11
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : ENNReal := \u2211 s, [=some s|cf <$> main]\nh : ENNReal := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 \u2211 s, [=some s|cf <$> main] ^ 2 - \u2211 s, [=some s|cf <$> main] / h \u2264\n    \u2211 s, ([=some s|cf <$> main] ^ 2 - [=some s|cf <$> main] / h)",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/Fork.lean#L374"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "1d47e5b2706d99d5185a34488fb4ff5fd46c815290bd27eae24d9fe1b0ddd6f0"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 376,
        "start_column": 6,
        "end_line": 376,
        "end_column": 11
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : ENNReal := \u2211 s, [=some s|cf <$> main]\nh : ENNReal := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 - (\u2211 s, [=some s|cf <$> main] ^ 2 - \u2211 s, [=some s|cf <$> main] / h) =\n    1 - \u2211 s, [=some s|cf <$> main] ^ 2 + \u2211 s, [=some s|cf <$> main] / h",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/Fork.lean#L376"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "5a20a749b2de101a443f574b4017efa0d09cefc543468f1ad2952b7a1d1e8f9b"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 396,
        "start_column": 8,
        "end_line": 396,
        "end_column": 13
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : ENNReal := \u2211 s, [=some s|cf <$> main]\nh : ENNReal := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 acc * h\u207b\u00b9 + (1 - acc ^ 2 * (\u2191q)\u207b\u00b9) = 1 - (acc ^ 2 * (\u2191q)\u207b\u00b9 - acc * h\u207b\u00b9)",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/Fork.lean#L396"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "711b307ab2f5b63d80961c8bc52738fdf2a40011ccf7cc1ff1aba605b8029978"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "poly-time",
        "commit": "236395c3a405733a87116434c9134a33770e43e0",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/SymmEncAlg.lean",
        "start_line": 66,
        "start_column": 2,
        "end_line": 66,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : Type \u2192 Type v\nM K C : Type\ninst\u271d\u2075 : AlternativeMonad m\ninst\u271d\u2074 : LawfulAlternative m\ninst\u271d\u00b3 : Fintype M\ninst\u271d\u00b2 : Fintype K\ninst\u271d\u00b9 : Fintype C\nencAlg : @SymmEncAlg m M K C\ninst\u271d : @SymmEncAlg.Complete m M K C inst\u271d\u2075 encAlg\nh1 : Fintype.card M = Fintype.card K\nh2 : Fintype.card K = Fintype.card C\n\u22a2 @SymmEncAlg.perfectSecrecy m M K C inst\u271d\u2075 encAlg \u2194\n    (\u2200 (k : K),\n        [=k|ExecutionMethod.exec (@SymmEncAlg.toExecutionMethod m M K C encAlg) (@SymmEncAlg.keygen m M K C encAlg)] =\n          (\u2191(Fintype.card K))\u207b\u00b9) \u2227\n      \u2200 (m_1 : M) (c : m C),\n        \u2203! k,\n          k \u2208\n              support\n                (ExecutionMethod.exec (@SymmEncAlg.toExecutionMethod m M K C encAlg)\n                  (@SymmEncAlg.keygen m M K C encAlg)) \u2227\n            @SymmEncAlg.encrypt m M K C encAlg k m_1 = c",
        "url": "https://github.com/dtumad/VCV-io/blob/236395c3a405733a87116434c9134a33770e43e0/VCVio/CryptoFoundations/SymmEncAlg.lean#L66"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-05-29T05:07:29.806343+00:00"
      },
      "id": "f1ef372d1ba0ccc89a632514f600c1800d85465ee45abf4655524e578a0cc15e"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/FiatShamir.lean",
        "start_line": 79,
        "start_column": 29,
        "end_line": 79,
        "end_column": 34
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\n\u03c3 X W PC SC \u03a9 P : Type\np : X \u2192 W \u2192 Bool\ninst\u271d\u2075 : SelectableType X\ninst\u271d\u2074 : SelectableType W\ninst\u271d\u00b3 : DecidableEq PC\ninst\u271d\u00b2 : DecidableEq \u03a9\ninst\u271d\u00b9 : SelectableType \u03a9\nsigmaAlg : SigmaAlg X W PC SC \u03a9 P p\nhr : GenerableRelation X W p inst\u271d\u2075 inst\u271d\u2074\nM : Type\ninst\u271d : DecidableEq M\n\u03b1\u271d : Type\nc : ProbComp \u03b1\u271d\n\u22a2 (let so := idOracle ++\u209b\u2092 randomOracle;\n    (simulateQ so (monadLift c)).run' \u2205) =\n    c",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/FiatShamir.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "71c4588075996d377a418cd2a101231ba27334ff6c0ab403ed69e6f124732fec"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/HardnessAssumptions/LWE.lean",
        "start_line": 126,
        "start_column": 2,
        "end_line": 126,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n m p : \u2115\ninst\u271d : NeZero p\nerrSamp : ProbComp (Fin p)\nadv : LWE_Adversary n m p\n\u22a2 |[=true|do\n              let y \u2190 LWE_Distr n m p inst\u271d errSamp\n              @adv y].toReal +\n          [=true|do\n              let y \u2190 LWE_Uniform_Distr n m p inst\u271d\n              (fun a => !a) <$> @adv y].toReal -\n        ([=true|do\n              let a \u2190 LWE_Distr n m p inst\u271d errSamp\n              not <$> @adv a].toReal +\n          [=true|do\n              let a \u2190 LWE_Uniform_Distr n m p inst\u271d\n              @adv a].toReal)| =\n    |[=true|do\n            let y \u2190 LWE_Distr n m p inst\u271d errSamp\n            @adv y].toReal -\n        [=true|do\n            let a \u2190 LWE_Uniform_Distr n m p inst\u271d\n            @adv a].toReal|",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/HardnessAssumptions/LWE.lean#L126"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-27T11:58:04-04:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "50e70e60b8f248c37304e5e9e117028dda179f0a4dd50316a048b2fe20fbf03e"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "poly-time",
        "commit": "236395c3a405733a87116434c9134a33770e43e0",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "VCVio/ProgramLogic/Unary/DijkstraMonad.lean",
        "start_line": 138,
        "start_column": 45,
        "end_line": 138,
        "end_column": 50
      },
      "debug_info": {
        "goal": "m : Type u \u2192 Type v\nn : Type u \u2192 Type w\nw : Type u_1 \u2192 Type u_2\nd : {\u03b1 : Type u_1} \u2192 w \u03b1 \u2192 Type u_3\ninst\u271d\u00b2 : Monad w\ninst\u271d\u00b9 : @DijkstraMonad w d inst\u271d\u00b2\nh : LawfulMonad w\ninst\u271d : @LawfulDijkstraMonad w (fun {\u03b1} => d) inst\u271d\u00b2 h inst\u271d\u00b9\n\u03b1 : Type u_1\nx : w \u03b1\ny : d x\n\u22a2 HEq\n    (@DijkstraMonad.dBind w d inst\u271d\u00b2 inst\u271d\u00b9 \u03b1 \u03b1 x (fun a => pure a) y fun a =>\n      @DijkstraMonad.dPure w d inst\u271d\u00b2 inst\u271d\u00b9 \u03b1 a)\n    y",
        "url": "https://github.com/dtumad/VCV-io/blob/236395c3a405733a87116434c9134a33770e43e0/VCVio/ProgramLogic/Unary/DijkstraMonad.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-23T11:21:13+07:00",
        "inclusion_date": "2025-05-29T05:07:29.806343+00:00"
      },
      "id": "08c59e44cc0a253dfa192b44e11cd8857137caa76a0d0393c47c3a0f0069c521"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/Coercions/SubSpec.lean",
        "start_line": 79,
        "start_column": 2,
        "end_line": 79,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\n\u03c4 : Type v\nspec : OracleSpec \u03b9\nsuperSpec : OracleSpec \u03c4\n\u03b1 : Type w\nh : MonadLift spec.OracleQuery superSpec.OracleQuery\ninst\u271d\u2074 : spec.DecidableEq\ninst\u271d\u00b3 : superSpec.DecidableEq\ninst\u271d\u00b2 : superSpec.FiniteRange\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : Fintype \u03b1\nq : spec.OracleQuery \u03b1\n\u22a2 (liftM (MonadLift.monadLift q)).finSupport = Finset.univ",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/Coercions/SubSpec.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "f0058e14d692a11f974e772118d955c66966888f7a0b6f8eade61d6a6361ff3d"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/Coercions/SubSpec.lean",
        "start_line": 186,
        "start_column": 2,
        "end_line": 186,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\n\u03c4 : Type v\nspec : OracleSpec \u03b9\n\u03b1 : Type w\nsuperSpec : OracleSpec \u03c4\nh : MonadLift spec.OracleQuery superSpec.OracleQuery\noa : OracleComp spec \u03b1\n\u22a2 (simulateQ { impl := fun {\u03b1} => liftM } oa).neverFails \u2194 oa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/Coercions/SubSpec.lean#L186"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "c95ad27118d5818f13f921f5951c5fb16df5fca39fcdc73ff00b6e8bc64026aa"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/QueryTracking/SeededOracle.lean",
        "start_line": 74,
        "start_column": 2,
        "end_line": 74,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\ninst\u271d\u00b2 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\ninst\u271d : spec.FiniteRange\nqc : \u03b9 \u2192 \u2115\njs : List \u03b9\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\ny : \u03b2\n\u22a2 [=y|do\n      let seed \u2190 liftComp (generateSeed spec qc js) spec\n      let x \u2190 (simulateQ (@seededOracle \u03b9 spec inst\u271d\u00b3) oa).run seed\n      ob x] =\n    [=y|oa >>= ob]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/QueryTracking/SeededOracle.lean#L74"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "186d03d2c01d9f6df34e1a67f7952c8c37003210bc91cc007e3d2b747a8ada1b"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/QueryTracking/SeededOracle.lean",
        "start_line": 85,
        "start_column": 2,
        "end_line": 85,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\ninst\u271d\u00b2 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\ninst\u271d : spec.FiniteRange\nqc : \u03b9 \u2192 \u2115\njs : List \u03b9\noa : OracleComp spec \u03b1\nf : \u03b1 \u2192 \u03b2\ny : \u03b2\n\u22a2 [=y|do\n      let seed \u2190 liftComp (generateSeed spec qc js) spec\n      f <$> (simulateQ (@seededOracle \u03b9 spec inst\u271d\u00b3) oa).run seed] =\n    [=y|f <$> oa]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/QueryTracking/SeededOracle.lean#L85"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "96825dbaa1db18c66b01fbabc5c81267ca568d2412fee799ab26e772e6e0a4cf"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "poly-time",
        "commit": "236395c3a405733a87116434c9134a33770e43e0",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "VCVio/OracleComp/QueryTracking/CountingOracle.lean",
        "start_line": 69,
        "start_column": 53,
        "end_line": 69,
        "end_column": 58
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\ninst\u271d : DecidableEq \u03b9\nspec : OracleSpec \u03b9\n\u03b1 : Type u\noa : OracleComp spec \u03b1\n\u22a2 \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (QueryImpl.impl (@countingOracle \u03b9 inst\u271d spec) q).run.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/236395c3a405733a87116434c9134a33770e43e0/VCVio/OracleComp/QueryTracking/CountingOracle.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-05-29T05:07:29.806343+00:00"
      },
      "id": "8c48063e43aed75ceab11d330d8de04976b5986c7d92f90a5faab0bd8288ce66"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "poly-time",
        "commit": "236395c3a405733a87116434c9134a33770e43e0",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "VCVio/OracleComp/QueryTracking/LoggingOracle.lean",
        "start_line": 72,
        "start_column": 53,
        "end_line": 72,
        "end_column": 58
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type u\noa : OracleComp spec \u03b1\n\u22a2 \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (QueryImpl.impl (@loggingOracle \u03b9 spec) q).run.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/236395c3a405733a87116434c9134a33770e43e0/VCVio/OracleComp/QueryTracking/LoggingOracle.lean#L72"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-05-29T05:07:29.806343+00:00"
      },
      "id": "846bcc2c02e588efe56f0c66847bfdb6fe8bd3d77cf83fde2d1e02100426c7b5"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/Constructions/UniformSelect.lean",
        "start_line": 280,
        "start_column": 2,
        "end_line": 280,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\nh\u03b1 : OracleComp.SelectableType \u03b1\n\u22a2 neverFails (OracleComp.uniformOfFintype \u03b1 h\u03b1)",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/Constructions/UniformSelect.lean#L280"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "34efab9697142af6f74604a6c510bacc333b22b0feead29fd4c7e37254705b84"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/Constructions/UniformSelect.lean",
        "start_line": 405,
        "start_column": 4,
        "end_line": 405,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case zero\n\u03b1\u271d : Type\nh\u03b1 : OracleComp.SelectableType \u03b1\u271d\n\u03b1 : Type\nm : \u2115\ninst\u271d : OracleComp.SelectableType \u03b1\nx y : Matrix (Fin 0) (Fin m) \u03b1\n\u22a2 (if x = Matrix.of ![] then 1 else 0) = if y = Matrix.of ![] then 1 else 0",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/Constructions/UniformSelect.lean#L405"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-26T12:07:39-04:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "39ce8757e1eca999161d1291bf3ca93c1369895859aacfbbe88a35db67649171"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/Constructions/UniformSelect.lean",
        "start_line": 407,
        "start_column": 4,
        "end_line": 407,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case succ\n\u03b1\u271d : Type\nh\u03b1 : OracleComp.SelectableType \u03b1\u271d\n\u03b1 : Type\nm\u271d : \u2115\ninst\u271d : OracleComp.SelectableType \u03b1\nm : \u2115\nih :\n  \u2200 (x y : Matrix (Fin m) (Fin m\u271d) \u03b1),\n    [=x|Nat.recAux (pure (Matrix.of ![]))\n          (fun n ihn => do\n            let top \u2190 OracleComp.uniformOfFintype (Vector \u03b1 m\u271d) (OracleComp.instSelectableTypeVector \u03b1 m\u271d inst\u271d)\n            let bot \u2190 ihn\n            pure (Fin.cons top.get bot))\n          m] =\n      [=y|Nat.recAux (pure (Matrix.of ![]))\n          (fun n ihn => do\n            let top \u2190 OracleComp.uniformOfFintype (Vector \u03b1 m\u271d) (OracleComp.instSelectableTypeVector \u03b1 m\u271d inst\u271d)\n            let bot \u2190 ihn\n            pure (Fin.cons top.get bot))\n          m]\nx y : Matrix (Fin (m + 1)) (Fin m\u271d) \u03b1\n\u22a2 [=x|Nat.recAux (pure (Matrix.of ![]))\n        (fun n ihn => do\n          let top \u2190 OracleComp.uniformOfFintype (Vector \u03b1 m\u271d) (OracleComp.instSelectableTypeVector \u03b1 m\u271d inst\u271d)\n          let bot \u2190 ihn\n          pure (Fin.cons top.get bot))\n        (m + 1)] =\n    [=y|Nat.recAux (pure (Matrix.of ![]))\n        (fun n ihn => do\n          let top \u2190 OracleComp.uniformOfFintype (Vector \u03b1 m\u271d) (OracleComp.instSelectableTypeVector \u03b1 m\u271d inst\u271d)\n          let bot \u2190 ihn\n          pure (Fin.cons top.get bot))\n        (m + 1)]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/Constructions/UniformSelect.lean#L407"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-26T12:07:39-04:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "daf36cf7cf45f736018fd239cf31040a3abb49ec3a84a7334a5f1740fb8e31f5"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "poly-time",
        "commit": "236395c3a405733a87116434c9134a33770e43e0",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "VCVio/OracleComp/Constructions/UniformSelect.lean",
        "start_line": 412,
        "start_column": 4,
        "end_line": 412,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case succ\n\u03b1\u271d : Type\nh\u03b1 : OracleComp.SelectableType \u03b1\u271d\n\u03b1 : Type\nm\u271d : \u2115\ninst\u271d : OracleComp.SelectableType \u03b1\nm : \u2115\nih :\n  [\u22a5|Nat.recAux (pure (Matrix.of ![]))\n        (fun n ihn => do\n          let top \u2190 OracleComp.uniformOfFintype (Vector \u03b1 m\u271d) (OracleComp.instSelectableTypeVector \u03b1 m\u271d inst\u271d)\n          let bot \u2190 ihn\n          pure (Fin.cons top.get bot))\n        m] =\n    0\n\u22a2 Vector \u03b1 m\u271d \u2192\n    neverFails\n      (Nat.rec (pure (Matrix.of ![]))\n        (fun n ihn => do\n          let top \u2190 OracleComp.uniformOfFintype (Vector \u03b1 m\u271d) (OracleComp.instSelectableTypeVector \u03b1 m\u271d inst\u271d)\n          Fin.cons top.get <$> ihn)\n        m)",
        "url": "https://github.com/dtumad/VCV-io/blob/236395c3a405733a87116434c9134a33770e43e0/VCVio/OracleComp/Constructions/UniformSelect.lean#L412"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-26T12:07:39-04:00",
        "inclusion_date": "2025-05-29T05:07:29.806343+00:00"
      },
      "id": "2fbaae014c51d619e5204344840f210aa042c1491a28617d9f423400623d4e02"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/Constructions/GenerateSeed.lean",
        "start_line": 77,
        "start_column": 2,
        "end_line": 77,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b9 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d : (i : \u03b9) \u2192 SelectableType (spec.range i)\nqc : \u03b9 \u2192 \u2115\nj : \u03b9\njs : List \u03b9\n\u22a2 (do\n      let x \u2190 replicate (qc j) ($\u1d57spec.range j)\n      forIn js (QuerySeed.addValues x fun x => []) fun j r =>\n          replicate (qc j) ($\u1d57spec.range j) >>= pure \u2218 fun a => ForInStep.yield (QuerySeed.addValues a r)) =\n    do\n    let _ \u2190 replicate (qc j) ($\u1d57spec.range j)\n    forIn js (fun x => []) fun j r =>\n        replicate (qc j) ($\u1d57spec.range j) >>= pure \u2218 fun a => ForInStep.yield (QuerySeed.addValues a r)",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/Constructions/GenerateSeed.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-01-16T01:24:48-06:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "01ebbbed91f2d772286824e225cae51fe56d62a819f197ed8dea336622fccb7c"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/Constructions/GenerateSeed.lean",
        "start_line": 86,
        "start_column": 2,
        "end_line": 86,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b9 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d : (i : \u03b9) \u2192 SelectableType (spec.range i)\nqc : \u03b9 \u2192 \u2115\njs : List \u03b9\n\u22a2 support (OracleComp.generateSeed \u03b9 inst\u271d\u00b9 spec inst\u271d qc js) =\n    {seed | \u2200 (i : \u03b9), (seed i).length = qc i * List.count i js}",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/Constructions/GenerateSeed.lean#L86"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2024-12-05T21:45:03-06:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "8061488dfb90817b4e7872bc3dc728f67957fc6b310171eb04923c2ceacc04c5"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/Constructions/GenerateSeed.lean",
        "start_line": 117,
        "start_column": 2,
        "end_line": 117,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b9 : (i : \u03b9) \u2192 SelectableType (spec.range i)\nqc : \u03b9 \u2192 \u2115\njs : List \u03b9\ninst\u271d : DecidableEq spec.QuerySeed\n\u22a2 finSupport (OracleComp.generateSeed \u03b9 inst\u271d\u00b2 spec inst\u271d\u00b9 qc js) \u2260 \u2205",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/Constructions/GenerateSeed.lean#L117"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "61f9829c5db24fcc86b6d251d6f0ae204b2105dd40ad91b854dc11d6f8393e5c"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/Constructions/GenerateSeed.lean",
        "start_line": 134,
        "start_column": 4,
        "end_line": 134,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case append_singleton\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b9 : (i : \u03b9) \u2192 SelectableType (spec.range i)\nqc : \u03b9 \u2192 \u2115\njs\u271d : List \u03b9\ninst\u271d : spec.FiniteRange\nj : List \u03b9\njs : \u03b9\nhjs :\n  \u2200 seed \u2208 support (OracleComp.generateSeed \u03b9 inst\u271d\u00b2 spec inst\u271d\u00b9 qc j),\n    [=seed|OracleComp.generateSeed \u03b9 inst\u271d\u00b2 spec inst\u271d\u00b9 qc j] =\n      1 / \u2191(List.map (fun j => Fintype.card (spec.range j) ^ qc j) j).prod\nseed : spec.QuerySeed\nhs : seed \u2208 support (OracleComp.generateSeed \u03b9 inst\u271d\u00b2 spec inst\u271d\u00b9 qc (j ++ [js]))\n\u22a2 [=seed|do\n      let a \u2190\n        List.foldlM\n            (fun b a =>\n              match b with\n              | ForInStep.yield b =>\n                (fun a_1 => ForInStep.yield (QuerySeed.addValues a_1 b)) <$> replicate (qc a) ($\u1d57spec.range a)\n              | ForInStep.done b => pure (ForInStep.done b))\n            (ForInStep.yield fun x => []) j\n      ForInStep.value <$>\n          match a with\n          | ForInStep.yield b =>\n            (fun a => ForInStep.yield (QuerySeed.addValues a b)) <$> replicate (qc js) ($\u1d57spec.range js)\n          | ForInStep.done b => pure (ForInStep.done b)] =\n    ((List.map (Nat.cast \u2218 fun j => Fintype.card (spec.range j) ^ qc j) j).prod *\n        \u2191(Fintype.card (spec.range js)) ^ qc js)\u207b\u00b9",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/Constructions/GenerateSeed.lean#L134"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-01-16T01:24:48-06:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "3b4a96afcd44de258d3b6c82e5c5e8a60ff5ad017c61e523372ce8c0f748f59a"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/Constructions/GenerateSeed.lean",
        "start_line": 141,
        "start_column": 2,
        "end_line": 141,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b2 : (i : \u03b9) \u2192 SelectableType (spec.range i)\nqc : \u03b9 \u2192 \u2115\njs : List \u03b9\ninst\u271d\u00b9 : spec.FiniteRange\ninst\u271d : DecidableEq spec.QuerySeed\nseed : spec.QuerySeed\nh : seed \u2208 support (OracleComp.generateSeed \u03b9 inst\u271d\u00b3 spec inst\u271d\u00b2 qc js)\n\u22a2 [=seed|OracleComp.generateSeed \u03b9 inst\u271d\u00b3 spec inst\u271d\u00b2 qc js] =\n    (\u2191(finSupport (OracleComp.generateSeed \u03b9 inst\u271d\u00b3 spec inst\u271d\u00b2 qc js)).card)\u207b\u00b9",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/Constructions/GenerateSeed.lean#L141"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "60a60bef0014312e522e0942b6aeb426e1c341ba18e7827ed450495420e80940"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/Monad.lean",
        "start_line": 28,
        "start_column": 2,
        "end_line": 28,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type v\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 \u03b3 : Type u\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\noc : \u03b1 \u2192 OracleComp spec \u03b3\nh : \u2200 x \u2208 oa.support, [\u22a5|ob x] = [\u22a5|oc x]\n\u22a2 [\u22a5|oa >>= ob] = [\u22a5|oa >>= oc]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/DistSemantics/Monad.lean#L28"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "f640f1562b67f5e205822e6677a4d09002594c4f1387696a98c9c06ae5a25560"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/Monad.lean",
        "start_line": 33,
        "start_column": 2,
        "end_line": 33,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type v\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 \u03b3 : Type u\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\noc : \u03b1 \u2192 OracleComp spec \u03b3\nh : \u2200 (x : \u03b1), [\u22a5|ob x] = [\u22a5|oc x]\n\u22a2 [\u22a5|oa >>= ob] = [\u22a5|oa >>= oc]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/DistSemantics/Monad.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "5a4bcf3a00d9a9dc26ddb124fbc558383c6f3044974813cfede340cb31d2d0be"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/Monad.lean",
        "start_line": 38,
        "start_column": 2,
        "end_line": 38,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type v\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type u\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob\u2081 ob\u2082 : \u03b1 \u2192 OracleComp spec \u03b2\ny : \u03b2\nh : \u2200 x \u2208 oa.support, [=y|ob\u2081 x] = [=y|ob\u2082 x]\n\u22a2 [=y|oa >>= ob\u2081] = [=y|oa >>= ob\u2082]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/DistSemantics/Monad.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "795c4bfcd15975d42890f721567b9ae18b63924271c4265f1c1764f0a8b1bd24"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/Monad.lean",
        "start_line": 43,
        "start_column": 2,
        "end_line": 43,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type v\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type u\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob\u2081 ob\u2082 : \u03b1 \u2192 OracleComp spec \u03b2\ny : \u03b2\nh : \u2200 (x : \u03b1), [=y|ob\u2081 x] = [=y|ob\u2082 x]\n\u22a2 [=y|oa >>= ob\u2081] = [=y|oa >>= ob\u2082]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/DistSemantics/Monad.lean#L43"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "d8d8211465189db9b4bcfb6ea15071161f07722c625c946e7239062569730e56"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/Monad.lean",
        "start_line": 49,
        "start_column": 2,
        "end_line": 49,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type v\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 \u03b3 : Type u\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\noc : \u03b1 \u2192 OracleComp spec \u03b3\ny : \u03b2\nz : \u03b3\nh : \u2200 x \u2208 oa.support, [=y|ob x] \u2264 [=z|oc x]\n\u22a2 [=y|oa >>= ob] \u2264 [=z|oa >>= oc]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/DistSemantics/Monad.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "3ff57fd184ce279cf9d4b61785e806e7269433dc73d44fa7a4ef07bbc412e418"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/Monad.lean",
        "start_line": 55,
        "start_column": 2,
        "end_line": 55,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type v\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type u\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob\u2081 ob\u2082 : \u03b1 \u2192 OracleComp spec \u03b2\ny : \u03b2\nr : ENNReal\nh : \u2200 x \u2208 oa.support, [=y|ob\u2081 x] = [=y|ob\u2082 x] / r\n\u22a2 [=y|oa >>= ob\u2081] = [=y|oa >>= ob\u2082] / r",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/DistSemantics/Monad.lean#L55"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "f0541513ca6f814e7b823f99062aac72611750b852e677f1ff00d9613a432c0b"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/Monad.lean",
        "start_line": 75,
        "start_column": 2,
        "end_line": 75,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type v\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type u\ninst\u271d : spec.FiniteRange\n\u03b3\u2081 \u03b3\u2082 : Type u\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\noc\u2081 : \u03b1 \u2192 OracleComp spec \u03b3\u2081\noc\u2082 : \u03b1 \u2192 OracleComp spec \u03b3\u2082\ny : \u03b2\nz\u2081 : \u03b3\u2081\nz\u2082 : \u03b3\u2082\nh : \u2200 x \u2208 oa.support, [=y|ob x] \u2264 [=z\u2081|oc\u2081 x] + [=z\u2082|oc\u2082 x]\n\u22a2 [=y|oa >>= ob] \u2264 [=z\u2081|oa >>= oc\u2081] + [=z\u2082|oa >>= oc\u2082]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/DistSemantics/Monad.lean#L75"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "876deb4281780458383dccfb35259a2581d597ab981f247744e936cdf71670ab"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/Monad.lean",
        "start_line": 83,
        "start_column": 2,
        "end_line": 83,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type v\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type u\ninst\u271d : spec.FiniteRange\n\u03b3\u2081 \u03b3\u2082 : Type u\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\noc\u2081 : \u03b1 \u2192 OracleComp spec \u03b3\u2081\noc\u2082 : \u03b1 \u2192 OracleComp spec \u03b3\u2082\ny : \u03b2\nz\u2081 : \u03b3\u2081\nz\u2082 : \u03b3\u2082\nh : \u2200 x \u2208 oa.support, [=z\u2081|oc\u2081 x] + [=z\u2082|oc\u2082 x] \u2264 [=y|ob x]\n\u22a2 [=z\u2081|oa >>= oc\u2081] + [=z\u2082|oa >>= oc\u2082] \u2264 [=y|oa >>= ob]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/DistSemantics/Monad.lean#L83"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "9eb8f431318a819cd88835a20039d2e5323a7847eb434c3d5f429dc66c7a9624"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/Monad.lean",
        "start_line": 91,
        "start_column": 2,
        "end_line": 91,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type v\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type u\ninst\u271d : spec.FiniteRange\n\u03b3\u2081 \u03b3\u2082 : Type u\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\noc\u2081 : \u03b1 \u2192 OracleComp spec \u03b3\u2081\noc\u2082 : \u03b1 \u2192 OracleComp spec \u03b3\u2082\ny : \u03b2\nz\u2081 : \u03b3\u2081\nz\u2082 : \u03b3\u2082\nh : \u2200 x \u2208 oa.support, [=y|ob x] \u2264 [=z\u2081|oc\u2081 x] - [=z\u2082|oc\u2082 x]\n\u22a2 [=y|oa >>= ob] \u2264 [=z\u2081|oa >>= oc\u2081] - [=z\u2082|oa >>= oc\u2082]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/DistSemantics/Monad.lean#L91"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "10a832fba9d45e21ed7de9d6404cdeaa7c755e05a8f1a50a5d07ac509b03a260"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/Monad.lean",
        "start_line": 99,
        "start_column": 2,
        "end_line": 99,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type v\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type u\ninst\u271d : spec.FiniteRange\n\u03b3\u2081 \u03b3\u2082 : Type u\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\noc\u2081 : \u03b1 \u2192 OracleComp spec \u03b3\u2081\noc\u2082 : \u03b1 \u2192 OracleComp spec \u03b3\u2082\ny : \u03b2\nz\u2081 : \u03b3\u2081\nz\u2082 : \u03b3\u2082\nh : \u2200 x \u2208 oa.support, [=z\u2081|oc\u2081 x] - [=z\u2082|oc\u2082 x] \u2264 [=y|ob x]\n\u22a2 [=z\u2081|oa >>= oc\u2081] - [=z\u2082|oa >>= oc\u2082] \u2264 [=y|oa >>= ob]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/DistSemantics/Monad.lean#L99"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "203d5021e491413e0847f19a31dc4fedc038e742e8271706cfcaf90170b19cea"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/EvalDist.lean",
        "start_line": 721,
        "start_column": 83,
        "end_line": 721,
        "end_column": 88
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\ns : ENNReal\nh' : @OracleComp.probFailure \u03b9 spec \u03b1 inst\u271d oa = s\nob : \u03b1 \u2192 OracleComp spec \u03b2\nr : ENNReal\nhr : \u2200 x \u2208 oa.support, @OracleComp.probFailure \u03b9 spec \u03b2 inst\u271d (ob x) \u2264 r\n\u22a2 @OracleComp.probFailure \u03b9 spec \u03b2 inst\u271d (oa >>= ob) \u2264 s + (1 - s) * r",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/DistSemantics/EvalDist.lean#L721"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "256178b81d9c87963a6219c1ee1ebdb20c20a78defdaa53ad0e0c8ada3c7d20c"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/EvalDist.lean",
        "start_line": 727,
        "start_column": 73,
        "end_line": 727,
        "end_column": 78
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\ns : ENNReal\nh' : @OracleComp.probFailure \u03b9 spec \u03b1 inst\u271d oa = s\nob : \u03b1 \u2192 OracleComp spec \u03b2\nr : ENNReal\nhr : \u2200 x \u2208 oa.support, @OracleComp.probFailure \u03b9 spec \u03b2 inst\u271d (ob x) \u2264 r\n\u22a2 @OracleComp.probFailure \u03b9 spec \u03b2 inst\u271d (oa >>= ob) \u2264 s + r",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/DistSemantics/EvalDist.lean#L727"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "9eb3e9612d505ae8380ab7955c73554dda79a49dfc4e3a645e3b6cfd660d222f"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/EvalDist.lean",
        "start_line": 732,
        "start_column": 69,
        "end_line": 732,
        "end_column": 74
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nh' : oa.neverFails\nob : \u03b1 \u2192 OracleComp spec \u03b2\nr : ENNReal\nhr : \u2200 x \u2208 oa.support, @OracleComp.probFailure \u03b9 spec \u03b2 inst\u271d (ob x) \u2264 r\n\u22a2 @OracleComp.probFailure \u03b9 spec \u03b2 inst\u271d (oa >>= ob) \u2264 r",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/DistSemantics/EvalDist.lean#L732"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "ee636168da0b75a5820fd4b4ae2e3cb65042d9bd099876e86b9638677ee1f283"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/EvalDist.lean",
        "start_line": 736,
        "start_column": 59,
        "end_line": 736,
        "end_column": 64
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nh : oa.neverFails\nob : \u03b1 \u2192 OracleComp spec \u03b2\n\u22a2 @OracleComp.probFailure \u03b9 spec \u03b2 inst\u271d (oa >>= ob) =\n    \u2211' (x : \u03b1), @OracleComp.probOutput \u03b9 spec \u03b1 inst\u271d oa x * @OracleComp.probFailure \u03b9 spec \u03b2 inst\u271d (ob x)",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/DistSemantics/EvalDist.lean#L736"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "52660aa01946b4a6bac67d2ad0e18528c4cec57cdd2972232fb4223119a7e41a"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/EvalDist.lean",
        "start_line": 932,
        "start_column": 2,
        "end_line": 932,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\n\u22a2 @OracleComp.probFailure \u03b9 spec \u03b1 inst\u271d oa = 0 \u2194 oa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/DistSemantics/EvalDist.lean#L932"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "c72fe4caaf9c4bc0e5ab499ce447c6a6f4b72d6f2e2b03651d0eabc1c39bcac5"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/EvalDist.lean",
        "start_line": 940,
        "start_column": 2,
        "end_line": 940,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\n\u22a2 0 < @OracleComp.probFailure \u03b9 spec \u03b1 inst\u271d oa \u2194 \u00acoa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/DistSemantics/EvalDist.lean#L940"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "0f5694bf8d106da8f25156bd687ea52cba3c17236e0cd0f8b0ba989afcc09258"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/EvalDist.lean",
        "start_line": 972,
        "start_column": 2,
        "end_line": 972,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\ninst\u271d\u00b9 : spec.FiniteRange\n\u03b1 : Type\noa : OracleComp spec \u03b1\nh : oa.neverFails\np : \u03b1 \u2192 Prop\ninst\u271d : DecidablePred p\n\u22a2 (\u2211' (x : \u03b1), if p x then @OracleComp.probOutput \u03b9 spec \u03b1 inst\u271d\u00b9 oa x else 0) =\n    1 - \u2211' (x : \u03b1), if p x then 0 else @OracleComp.probOutput \u03b9 spec \u03b1 inst\u271d\u00b9 oa x",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/DistSemantics/EvalDist.lean#L972"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-27T11:58:04-04:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "bbd49a624ea09ace9aa36618eaa725740e1ef958864ad8041e3d0c24ae003c6c"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/Alternative.lean",
        "start_line": 26,
        "start_column": 35,
        "end_line": 26,
        "end_column": 40
      },
      "debug_info": {
        "goal": "case pure\n\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type v\nh : spec.FiniteRange\noa' : OracleComp spec \u03b1\nx : \u03b1\n\u22a2 (pure x <|> oa').evalDist = (pure x <|> oa'.evalDist)",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/DistSemantics/Alternative.lean#L26"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-16T14:51:55-04:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "10a1200605604f7c5f22ad71dbe6541be3a6e2318986566a3fae4b4c530fac2a"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/Alternative.lean",
        "start_line": 29,
        "start_column": 4,
        "end_line": 29,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case query_bind\n\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type v\nh\u271d : spec.FiniteRange\noa' : OracleComp spec \u03b1\ni : \u03b9\nt : spec.domain i\noa : spec.range i \u2192 OracleComp spec \u03b1\nh : \u2200 (u : spec.range i), (oa u <|> oa').evalDist = ((oa u).evalDist <|> oa'.evalDist)\n\u22a2 (liftM (OracleSpec.query i t) >>= oa <|> oa').evalDist =\n    ((liftM (OracleSpec.query i t) >>= oa).evalDist <|> oa'.evalDist)",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/DistSemantics/Alternative.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "7026278710d38e45959c7de14f7cf3d4190bff37873c96d690253d16abb819ea"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/Alternative.lean",
        "start_line": 52,
        "start_column": 2,
        "end_line": 52,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type u\noa oa' : OracleComp spec \u03b1\ninst\u271d : Decidable oa.neverFails\n\u22a2 (oa <|> oa').support = if oa.neverFails then oa.support else oa.support \u222a oa'.support",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/DistSemantics/Alternative.lean#L52"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "cf3dfa7e58a8c78c1dde948bb2748ab3febc63f788fbefc52681c7b8fbbe8491"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/List.lean",
        "start_line": 180,
        "start_column": 8,
        "end_line": 180,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case pos.append_singleton.cons\n\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type u_1\n\u03b2 : Type u_2\ninst\u271d\u00b9 : DecidableEq \u03b2\ninst\u271d : spec.FiniteRange\nf : \u03b1 \u2192 OracleComp spec \u03b2\nys zs : List \u03b2\nz : \u03b2\nh : take ys.length (zs ++ [z]) = ys.reverse\nx : \u03b1\nxs : List \u03b1\nhzs :\n  take ys.length zs = ys.reverse \u2192\n    [=drop ys.length zs|mapM.loop f (x :: xs) []] =\n      if zs.length = (x :: xs).length + ys.length then\n        (zipWith (fun x z => [=z|f x]) (x :: xs) (drop ys.length zs)).prod\n      else 0\n\u22a2 [=drop ys.length (zs ++ [z])|do\n      let __do_lift \u2190 f x\n      mapM.loop f xs [__do_lift]] =\n    if zs.length = xs.length + ys.length then\n      (zipWith (fun x z => [=z|f x]) (x :: xs) (drop ys.length (zs ++ [z]))).prod\n    else 0",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/DistSemantics/List.lean#L180"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-01-28T07:23:40-06:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "d5e3863b40a92de31863c2165cdce86baa5196b51d3f22605a6445437cda1a8c"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/List.lean",
        "start_line": 315,
        "start_column": 4,
        "end_line": 315,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case cons\n\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type v\nf : \u03b1 \u2192 OracleComp spec \u03b2\nx : \u03b1\nxs : List \u03b1\nas : Array \u03b1\nh : \u2200 x \u2208 as, (f x).neverFails\nha : as.toList = x :: xs\nih : as.toList = xs \u2192 (List.mapM f as.toList).neverFails\n\u22a2 (f x).neverFails \u2227 \u2200 x_1 \u2208 (f x).support, (List.mapM f xs).neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/DistSemantics/List.lean#L315"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "6a94b544369efd0c8ccfe3ef31cffe332f6df082953b9c7863676f9fe0f247c3"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/List.lean",
        "start_line": 327,
        "start_column": 4,
        "end_line": 327,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case v_insert\n\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type v\nn : \u2115\nf : \u03b1 \u2192 OracleComp spec \u03b2\nn\u271d : \u2115\nhd : \u03b1\ntl : Vector \u03b1 n\u271d\nih : \u2200 {x : Vector \u03b2 n\u271d}, x \u2208 (Vector.mapM f tl).support \u2194 \u2200 (i : Fin n\u271d), x[i] \u2208 (f tl[i]).support\nx : Vector \u03b2 (n\u271d + 1)\n\u22a2 x \u2208 (Vector.mapM f { toArray := #[hd] ++ tl.toArray, size_toArray := \u22ef }).support \u2194\n    \u2200 (i : Fin (n\u271d + 1)), x[\u2191i] \u2208 (f (#[hd] ++ tl.toArray)[\u2191i]).support",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/DistSemantics/List.lean#L327"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-26T12:07:39-04:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "dbf937757ca5c3b01b3bd501f78adef72cfe910c71b75d0396e0f7dd1a0690af"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/SimSemantics/StateT.lean",
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nspec : OracleSpec \u03b9\n\u03c3 : Type u\ninst\u271d : Subsingleton \u03c3\n\u03b1 : Type u\nso : QueryImpl spec (StateT \u03c3 (OracleComp spec))\nh : \u2200 (\u03b1 : Type u) (q : spec.OracleQuery \u03b1) (s : \u03c3), (so.impl q).run' s = liftM q\noa : OracleComp spec \u03b1\ns : \u03c3\n\u22a2 (simulateQ so oa).run' s = oa",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/SimSemantics/StateT.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "c320e503aff62056c8af23aa994b03f60babb01145cfaacfd79b6cadd05698c5"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/SimSemantics/WriterT.lean",
        "start_line": 61,
        "start_column": 2,
        "end_line": 61,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03c9 : Type u\ninst\u271d : Monoid \u03c9\nso : QueryImpl spec (WriterT \u03c9 (OracleComp spec))\nhso : \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (fst <$> (so.impl q).run).support = \u22a4\nhso' : \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (so.impl q).run.neverFails\noa : OracleComp spec \u03b1\n\u22a2 (simulateQ so oa).run.neverFails \u2194 oa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/SimSemantics/WriterT.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "749aa5d7431d7d0397338ce9c8d45c7b8eb33a9f48f60922fb62b3033db211af"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ToMathlib/ProbabilityTheory/Coupling.lean",
        "start_line": 66,
        "start_column": 2,
        "end_line": 66,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u\np : PMF \u03b1\nx : \u03b1\n\u22a2 (PMF.map some p) (some x) = p x",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/ToMathlib/ProbabilityTheory/Coupling.lean#L66"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-06-04T21:00:14-07:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "d807f7ac97ac8dca40df317a64362c23b4b333ea6f505fbde978f37de9ebd6ac"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ToMathlib/ProbabilityTheory/Coupling.lean",
        "start_line": 69,
        "start_column": 2,
        "end_line": 69,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u\np : PMF \u03b1\nx : \u03b1\n\u22a2 (some <$> p) (some x) = p x",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/ToMathlib/ProbabilityTheory/Coupling.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-06-04T21:00:14-07:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "3c776356e923037b5a65abac3d09457aaba32d197af887061f6ae0a13f3e16b0"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "poly-time",
        "commit": "236395c3a405733a87116434c9134a33770e43e0",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ToMathlib/ProbabilityTheory/Coupling.lean",
        "start_line": 84,
        "start_column": 4,
        "end_line": 84,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mp\n\u03b1 \u03b2 : Type u\na : \u03b1\nb : \u03b2\nc : @SPMF (\u03b1 \u00d7 \u03b2)\nh1 : @Functor.map SPMF Applicative.toFunctor (\u03b1 \u00d7 \u03b2) \u03b1 Prod.fst c = some <$> PMF.pure a\nh2 : @Functor.map SPMF Applicative.toFunctor (\u03b1 \u00d7 \u03b2) \u03b2 Prod.snd c = some <$> PMF.pure b\nthis : \u2200 (x : Option \u03b1), (@Functor.map SPMF Applicative.toFunctor (\u03b1 \u00d7 \u03b2) \u03b1 Prod.fst c) x = (some <$> PMF.pure a) x\n\u22a2 c = @pure SPMF Applicative.toPure (\u03b1 \u00d7 \u03b2) (a, b)",
        "url": "https://github.com/dtumad/VCV-io/blob/236395c3a405733a87116434c9134a33770e43e0/ToMathlib/ProbabilityTheory/Coupling.lean#L84"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-05-29T05:07:29.806343+00:00"
      },
      "id": "dcad48ad1c1f1e9f5b91d1a7f65327642aa67925d1ebccbe9c1b09cf9afa66fd"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ToMathlib/ProbabilityTheory/Coupling.lean",
        "start_line": 98,
        "start_column": 13,
        "end_line": 98,
        "end_column": 18
      },
      "debug_info": {
        "goal": "case mp\n\u03b1 \u03b2 : Type u\nc : @SPMF (\u03b1 \u00d7 \u03b2)\nh : @SPMF.IsCoupling \u03b1 \u03b2 c OptionT.fail OptionT.fail\n\u22a2 c = OptionT.fail",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/ToMathlib/ProbabilityTheory/Coupling.lean#L98"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "7a40e43f186ba9112fa79e7dbebada55eccc5848bd0f31dd9b387dd434516762"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "poly-time",
        "commit": "236395c3a405733a87116434c9134a33770e43e0",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ToMathlib/ProbabilityTheory/Coupling.lean",
        "start_line": 92,
        "start_column": 42,
        "end_line": 92,
        "end_column": 47
      },
      "debug_info": {
        "goal": "case mpr.map_fst\n\u03b1 \u03b2 : Type u\nc : @SPMF (\u03b1 \u00d7 \u03b2)\nh : c = OptionT.fail\n\u22a2 @Functor.map SPMF Applicative.toFunctor (\u03b1 \u00d7 \u03b2) \u03b1 Prod.fst OptionT.fail = OptionT.fail",
        "url": "https://github.com/dtumad/VCV-io/blob/236395c3a405733a87116434c9134a33770e43e0/ToMathlib/ProbabilityTheory/Coupling.lean#L92"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-05-29T05:07:29.806343+00:00"
      },
      "id": "5b51e7d835744b83eb1fffae81cddd04a6fe03bcce04236b9e353a47cbf152f2"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "poly-time",
        "commit": "236395c3a405733a87116434c9134a33770e43e0",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ToMathlib/ProbabilityTheory/Coupling.lean",
        "start_line": 92,
        "start_column": 42,
        "end_line": 92,
        "end_column": 47
      },
      "debug_info": {
        "goal": "case mpr.map_snd\n\u03b1 \u03b2 : Type u\nc : @SPMF (\u03b1 \u00d7 \u03b2)\nh : c = OptionT.fail\n\u22a2 @Functor.map SPMF Applicative.toFunctor (\u03b1 \u00d7 \u03b2) \u03b2 Prod.snd OptionT.fail = OptionT.fail",
        "url": "https://github.com/dtumad/VCV-io/blob/236395c3a405733a87116434c9134a33770e43e0/ToMathlib/ProbabilityTheory/Coupling.lean#L92"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-05-29T05:07:29.806343+00:00"
      },
      "id": "3fa4af87a471f2ca85f24a4c5310b5d1b30dadfd768623280704fda26828e566"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "poly-time",
        "commit": "236395c3a405733a87116434c9134a33770e43e0",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ToMathlib/ProbabilityTheory/Coupling.lean",
        "start_line": 102,
        "start_column": 59,
        "end_line": 102,
        "end_column": 64
      },
      "debug_info": {
        "goal": "case mk.map_fst.e_a.h\n\u03b1\u2081 \u03b1\u2082 \u03b2\u2081 \u03b2\u2082 : Type u\np : @SPMF \u03b1\u2081\nq : @SPMF \u03b1\u2082\nf : \u03b1\u2081 \u2192 @SPMF \u03b2\u2081\ng : \u03b1\u2082 \u2192 @SPMF \u03b2\u2082\nc : @SPMF.Coupling \u03b1\u2081 \u03b1\u2082 p q\nd : \u03b1\u2081 \u2192 \u03b1\u2082 \u2192 @SPMF (\u03b2\u2081 \u00d7 \u03b2\u2082)\nh : (a\u2081 : \u03b1\u2081) \u2192 (a\u2082 : \u03b1\u2082) \u2192 \u2191\u2191c (some (a\u2081, a\u2082)) \u2260 0 \u2192 @SPMF.IsCoupling \u03b2\u2081 \u03b2\u2082 (@d a\u2081 a\u2082) (@f a\u2081) (@g a\u2082)\nhc\u2081 : @Functor.map SPMF Applicative.toFunctor (\u03b1\u2081 \u00d7 \u03b1\u2082) \u03b1\u2081 Prod.fst \u2191c = p\nhc\u2082 : @Functor.map SPMF Applicative.toFunctor (\u03b1\u2081 \u00d7 \u03b1\u2082) \u03b1\u2082 Prod.snd \u2191c = q\na\u2081 : \u03b1\u2081\na\u2082 : \u03b1\u2082\nthis : \u2191\u2191c (some (a\u2081, a\u2082)) \u2260 0 \u2192 @SPMF.IsCoupling \u03b2\u2081 \u03b2\u2082 (@d a\u2081 a\u2082) (@f a\u2081) (@g a\u2082)\n\u22a2 @Functor.map SPMF Applicative.toFunctor (\u03b2\u2081 \u00d7 \u03b2\u2082) \u03b2\u2081 Prod.fst (@d (a\u2081, a\u2082).1 (a\u2081, a\u2082).2) = @f (a\u2081, a\u2082).1",
        "url": "https://github.com/dtumad/VCV-io/blob/236395c3a405733a87116434c9134a33770e43e0/ToMathlib/ProbabilityTheory/Coupling.lean#L102"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-05-29T05:07:29.806343+00:00"
      },
      "id": "b244f1012fe2271f5c5d00c64d556e9c1080fb7b41e913b4db1a7aea0645e502"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "poly-time",
        "commit": "236395c3a405733a87116434c9134a33770e43e0",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ToMathlib/ProbabilityTheory/Coupling.lean",
        "start_line": 103,
        "start_column": 18,
        "end_line": 103,
        "end_column": 23
      },
      "debug_info": {
        "goal": "case mk.map_snd\n\u03b1\u2081 \u03b1\u2082 \u03b2\u2081 \u03b2\u2082 : Type u\np : @SPMF \u03b1\u2081\nq : @SPMF \u03b1\u2082\nf : \u03b1\u2081 \u2192 @SPMF \u03b2\u2081\ng : \u03b1\u2082 \u2192 @SPMF \u03b2\u2082\nc : @SPMF.Coupling \u03b1\u2081 \u03b1\u2082 p q\nd : \u03b1\u2081 \u2192 \u03b1\u2082 \u2192 @SPMF (\u03b2\u2081 \u00d7 \u03b2\u2082)\nh : (a\u2081 : \u03b1\u2081) \u2192 (a\u2082 : \u03b1\u2082) \u2192 \u2191\u2191c (some (a\u2081, a\u2082)) \u2260 0 \u2192 @SPMF.IsCoupling \u03b2\u2081 \u03b2\u2082 (@d a\u2081 a\u2082) (@f a\u2081) (@g a\u2082)\nhc\u2081 : @Functor.map SPMF Applicative.toFunctor (\u03b1\u2081 \u00d7 \u03b1\u2082) \u03b1\u2081 Prod.fst \u2191c = p\nhc\u2082 : @Functor.map SPMF Applicative.toFunctor (\u03b1\u2081 \u00d7 \u03b1\u2082) \u03b1\u2082 Prod.snd \u2191c = q\n\u22a2 (do\n      let a \u2190 \u2191c\n      @Functor.map SPMF Applicative.toFunctor (\u03b2\u2081 \u00d7 \u03b2\u2082) \u03b2\u2082 Prod.snd (@d a.1 a.2)) =\n    do\n    let a \u2190 \u2191c\n    @g a.2",
        "url": "https://github.com/dtumad/VCV-io/blob/236395c3a405733a87116434c9134a33770e43e0/ToMathlib/ProbabilityTheory/Coupling.lean#L103"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-05-29T05:07:29.806343+00:00"
      },
      "id": "fb9d8f5d717f7a6e8418809f8634f5a74f8b16b03040281c1a8af7675e3b155c"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ToMathlib/Control/WriterT.lean",
        "start_line": 94,
        "start_column": 39,
        "end_line": 94,
        "end_column": 44
      },
      "debug_info": {
        "goal": "m : Type u \u2192 Type v\ninst\u271d\u00b3 : AlternativeMonad m\n\u03c9 \u03b1 \u03b2 \u03b3 : Type u\ninst\u271d\u00b2 : Monoid \u03c9\ninst\u271d\u00b9 : LawfulMonad m\ninst\u271d : LawfulAlternative m\n\u22a2 LawfulAlternative (WriterT \u03c9 m)",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/ToMathlib/Control/WriterT.lean#L94"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "73b9ec3e3d3f2c675c4e4387e925fb58de2dc432da7b5bd902d78939807118d6"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "bfc80735dd2c5a8d30221d977686cb1d82fc517b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3.lean",
        "start_line": 794,
        "start_column": 2,
        "end_line": 794,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d : DecidableEq \u03b1\nX Y : Set \u03b1\nQ : Matrix \u2191X \u2191Y \u211a\nx\u2082 y\u2080 y\u2081 : \u03b1\nhQ : Q.IsTotallyUnimodular\nhx\u2082 : x\u2082 \u2208 X\nhy\u2080 : y\u2080 \u2208 Y\nhy\u2081 : y\u2081 \u2208 Y\nhyy : y\u2080 \u2260 y\u2081\nhQy\u2080 : Q \u27e8x\u2082, hx\u2082\u27e9 \u27e8y\u2080, hy\u2080\u27e9 = 1\nhQy\u2081 : Q \u27e8x\u2082, hx\u2082\u27e9 \u27e8y\u2081, hy\u2081\u27e9 = 1\nhQy : \u2200 (y : \u2191Y), \u2191y \u2260 y\u2080 \u2227 \u2191y \u2260 y\u2081 \u2192 Q \u27e8x\u2082, hx\u2082\u27e9 y = 0\n\u22a2 let c\u2080 := Q._col \u27e8y\u2080, hy\u2080\u27e9;\n  let c\u2081 := Q._col \u27e8y\u2081, hy\u2081\u27e9;\n  let Q' := Q.drop1row2cols x\u2082 y\u2080 y\u2081;\n  (Q' \u25eb \u25aec\u2080 \u25eb \u25aec\u2081 \u25eb \u25ae(c\u2080 - c\u2081)).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/bfc80735dd2c5a8d30221d977686cb1d82fc517b/Seymour/Matroid/Operations/Sum3.lean#L794"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-20T12:58:38+02:00",
        "inclusion_date": "2025-05-25T05:46:47.508244+00:00"
      },
      "id": "c833c00894ea246d3aa7016afc87c00ea738c29cda662f021fc46681769f46f2"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "bfc80735dd2c5a8d30221d977686cb1d82fc517b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3.lean",
        "start_line": 896,
        "start_column": 2,
        "end_line": 896,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097' : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63' : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhB\u2097'\u271d : B\u2097'.IsTotallyUnimodular\nhB\u1d63'\u271d : B\u1d63'.IsTotallyUnimodular\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097' :\n  (B\u2097'.submatrix3x3mems \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2080 \u2228\n    (B\u2097'.submatrix3x3mems \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2081\nhB\u1d63' :\n  (B\u1d63'.submatrix3x3mems \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2080 \u2228\n    (B\u1d63'.submatrix3x3mems \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2081\n\u22a2 let x\u2080\u2097 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2080\u1d63 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2081\u2097 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2081\u1d63 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2082\u2097 := \u27e8x\u2082, \u22ef\u27e9;\n  let x\u2082\u1d63 := \u27e8x\u2082, \u22ef\u27e9;\n  let y\u2080\u2097 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2080\u1d63 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2081\u2097 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2081\u1d63 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2082\u2097 := \u27e8y\u2082, \u22ef\u27e9;\n  let y\u2082\u1d63 := \u27e8y\u2082, \u22ef\u27e9;\n  let B\u2097 := B\u2097'.toCanonicalSigning x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n  let B\u1d63 := B\u1d63'.toCanonicalSigning x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63;\n  let D\u2080\u2097 := B\u2097.submatrix2x2 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097;\n  let D\u2097 := B\u2097.submatrix2x7 x\u2080\u2097 x\u2081\u2097 y\u2080 y\u2081 y\u2082;\n  let D\u1d63 := B\u1d63.submatrix7x2 x\u2080 x\u2081 x\u2082 y\u2080\u1d63 y\u2081\u1d63;\n  let c\u2080 := B\u1d63._col y\u2080\u1d63;\n  let c\u2081 := B\u1d63._col y\u2081\u1d63;\n  match B\u2097'._rrr x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097 hB\u2097' with\n  | (r\u2080, r\u2081, snd) =>\n    (\u229e D\u2097 D\u2080\u2097(D\u1d63 * D\u2080\u2097\u207b\u00b9 * D\u2097)D\u1d63).submatrix mapX mapY =\n      (fun {X Y \u03b1} [Mul \u03b1] c r => Matrix.of fun i j => c i * r j) c\u2080 r\u2080 +\n        (fun {X Y \u03b1} [Mul \u03b1] c r => Matrix.of fun i j => c i * r j) c\u2081 r\u2081",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/bfc80735dd2c5a8d30221d977686cb1d82fc517b/Seymour/Matroid/Operations/Sum3.lean#L896"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-20T12:58:38+02:00",
        "inclusion_date": "2025-05-25T05:46:47.508244+00:00"
      },
      "id": "511d2ccc1ef5704e69ed15ff82098947f851c8e36ab9ccc25c8d4de4dcbee03e"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "bfc80735dd2c5a8d30221d977686cb1d82fc517b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3.lean",
        "start_line": 934,
        "start_column": 2,
        "end_line": 934,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097' : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63' : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhB\u2097'\u271d : B\u2097'.IsTotallyUnimodular\nhB\u1d63'\u271d : B\u1d63'.IsTotallyUnimodular\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097' :\n  (B\u2097'.submatrix3x3mems \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2080 \u2228\n    (B\u2097'.submatrix3x3mems \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2081\nhB\u1d63' :\n  (B\u1d63'.submatrix3x3mems \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2080 \u2228\n    (B\u1d63'.submatrix3x3mems \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2081\n\u22a2 let x\u2080\u2097 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2080\u1d63 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2081\u2097 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2081\u1d63 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2082\u2097 := \u27e8x\u2082, \u22ef\u27e9;\n  let x\u2082\u1d63 := \u27e8x\u2082, \u22ef\u27e9;\n  let y\u2080\u2097 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2080\u1d63 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2081\u2097 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2081\u1d63 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2082\u2097 := \u27e8y\u2082, \u22ef\u27e9;\n  let y\u2082\u1d63 := \u27e8y\u2082, \u22ef\u27e9;\n  let B\u2097 := B\u2097'.toCanonicalSigning x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n  let B\u1d63 := B\u1d63'.toCanonicalSigning x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63;\n  let D\u2080\u2097 := B\u2097.submatrix2x2 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097;\n  let D\u2097 := B\u2097.submatrix2x7 x\u2080\u2097 x\u2081\u2097 y\u2080 y\u2081 y\u2082;\n  let D\u1d63 := B\u1d63.submatrix7x2 x\u2080 x\u2081 x\u2082 y\u2080\u1d63 y\u2081\u1d63;\n  let D := (\u229e D\u2097 D\u2080\u2097(D\u1d63 * D\u2080\u2097\u207b\u00b9 * D\u2097)D\u1d63).submatrix mapX mapY;\n  match B\u2097'._rrr x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097 hB\u2097' with\n  | (r\u2080, r\u2081, r\u2082) => \u2200 (i : \u2191(X\u1d63 \\ {x\u2082})), D i = r\u2080 \u2228 D i = -r\u2080 \u2228 D i = r\u2081 \u2228 D i = -r\u2081 \u2228 D i = r\u2082 \u2228 D i = -r\u2082 \u2228 D i = 0",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/bfc80735dd2c5a8d30221d977686cb1d82fc517b/Seymour/Matroid/Operations/Sum3.lean#L934"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-20T12:58:38+02:00",
        "inclusion_date": "2025-05-25T05:46:47.508244+00:00"
      },
      "id": "8b1edfd9257dbae318f31e8ecdf61f3d5504d09d9f3a020f8714a493fa9681a7"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "bfc80735dd2c5a8d30221d977686cb1d82fc517b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3.lean",
        "start_line": 973,
        "start_column": 2,
        "end_line": 973,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097' : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63' : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhB\u2097'\u271d : B\u2097'.IsTotallyUnimodular\nhB\u1d63'\u271d : B\u1d63'.IsTotallyUnimodular\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097' :\n  (B\u2097'.submatrix3x3mems \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2080 \u2228\n    (B\u2097'.submatrix3x3mems \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2081\nhB\u1d63' :\n  (B\u1d63'.submatrix3x3mems \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2080 \u2228\n    (B\u1d63'.submatrix3x3mems \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2081\n\u22a2 let x\u2080\u2097 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2080\u1d63 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2081\u2097 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2081\u1d63 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2082\u2097 := \u27e8x\u2082, \u22ef\u27e9;\n  let x\u2082\u1d63 := \u27e8x\u2082, \u22ef\u27e9;\n  let y\u2080\u2097 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2080\u1d63 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2081\u2097 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2081\u1d63 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2082\u2097 := \u27e8y\u2082, \u22ef\u27e9;\n  let y\u2082\u1d63 := \u27e8y\u2082, \u22ef\u27e9;\n  let B\u2097 := B\u2097'.toCanonicalSigning x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n  let B\u1d63 := B\u1d63'.toCanonicalSigning x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63;\n  let D\u2080\u2097 := B\u2097.submatrix2x2 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097;\n  let D\u2097 := B\u2097.submatrix2x7 x\u2080\u2097 x\u2081\u2097 y\u2080 y\u2081 y\u2082;\n  let D\u1d63 := B\u1d63.submatrix7x2 x\u2080 x\u2081 x\u2082 y\u2080\u1d63 y\u2081\u1d63;\n  let D := (\u229e D\u2097 D\u2080\u2097(D\u1d63 * D\u2080\u2097\u207b\u00b9 * D\u2097)D\u1d63).submatrix mapX mapY;\n  let c\u2080 := B\u1d63._col y\u2080\u1d63;\n  let c\u2081 := B\u1d63._col y\u2081\u1d63;\n  \u2200 (j : \u2191(Y\u2097 \\ {y\u2082})),\n    (fun x => D x j) = c\u2080 \u2228\n      (fun x => D x j) = -c\u2080 \u2228\n        (fun x => D x j) = c\u2081 \u2228\n          (fun x => D x j) = -c\u2081 \u2228 (fun x => D x j) = c\u2080 - c\u2081 \u2228 (fun x => D x j) = c\u2081 - c\u2080 \u2228 (fun x => D x j) = 0",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/bfc80735dd2c5a8d30221d977686cb1d82fc517b/Seymour/Matroid/Operations/Sum3.lean#L973"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-20T12:58:38+02:00",
        "inclusion_date": "2025-05-25T05:46:47.508244+00:00"
      },
      "id": "9b7db6ed1cc4680de38ea8a85abb6a768fdd27ab2b32c3bb539d116e88d7a315"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "bfc80735dd2c5a8d30221d977686cb1d82fc517b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3.lean",
        "start_line": 996,
        "start_column": 2,
        "end_line": 996,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097' : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63' : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhB\u2097'\u271d : B\u2097'.IsTotallyUnimodular\nhB\u1d63'\u271d : B\u1d63'.IsTotallyUnimodular\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097' :\n  (B\u2097'.submatrix3x3mems \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2080 \u2228\n    (B\u2097'.submatrix3x3mems \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2081\nhB\u1d63' :\n  (B\u1d63'.submatrix3x3mems \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2080 \u2228\n    (B\u1d63'.submatrix3x3mems \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2081\n\u22a2 match hXX.inter3all with\n  | ((x\u2080\u2097, x\u2081\u2097, x\u2082\u2097), x\u2080\u1d63, x\u2081\u1d63, x\u2082\u1d63) =>\n    match hYY.inter3all with\n    | ((y\u2080\u2097, y\u2081\u2097, y\u2082\u2097), y\u2080\u1d63, y\u2081\u1d63, y\u2082\u1d63) =>\n      let B\u2097 := B\u2097'.toCanonicalSigning x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n      let B\u1d63 := B\u1d63'.toCanonicalSigning x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63;\n      let D\u2080\u1d63 := B\u1d63.submatrix2x2 x\u2080\u1d63 x\u2081\u1d63 y\u2080\u1d63 y\u2081\u1d63;\n      let D\u2097 := B\u2097.submatrix2x7 x\u2080\u2097 x\u2081\u2097 y\u2080 y\u2081 y\u2082;\n      let D\u1d63 := B\u1d63.submatrix7x2 x\u2080 x\u2081 x\u2082 y\u2080\u1d63 y\u2081\u1d63;\n      (B\u1d63.drop1row2cols x\u2082 y\u2080 y\u2081 \u25eb (\u229e D\u2097 D\u2080\u1d63(D\u1d63 * D\u2080\u1d63\u207b\u00b9 * D\u2097)D\u1d63).submatrix mapX mapY).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/bfc80735dd2c5a8d30221d977686cb1d82fc517b/Seymour/Matroid/Operations/Sum3.lean#L996"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-20T12:58:38+02:00",
        "inclusion_date": "2025-05-25T05:46:47.508244+00:00"
      },
      "id": "f8b063eeb98107caa45a1b9de0f4ddb9895beac709d01be58e3bde0111d3f93c"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "bfc80735dd2c5a8d30221d977686cb1d82fc517b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3.lean",
        "start_line": 1019,
        "start_column": 2,
        "end_line": 1019,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097' : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63' : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhB\u2097'\u271d : B\u2097'.IsTotallyUnimodular\nhB\u1d63'\u271d : B\u1d63'.IsTotallyUnimodular\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097' :\n  (B\u2097'.submatrix3x3mems \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2080 \u2228\n    (B\u2097'.submatrix3x3mems \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2081\nhB\u1d63' :\n  (B\u1d63'.submatrix3x3mems \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2080 \u2228\n    (B\u1d63'.submatrix3x3mems \u22ef \u22ef \u22ef \u22ef \u22ef \u22ef).abs = matrix3x3unsigned\u2081\n\u22a2 match hXX.inter3all with\n  | ((x\u2080\u2097, x\u2081\u2097, x\u2082\u2097), x\u2080\u1d63, x\u2081\u1d63, x\u2082\u1d63) =>\n    match hYY.inter3all with\n    | ((y\u2080\u2097, y\u2081\u2097, y\u2082\u2097), y\u2080\u1d63, y\u2081\u1d63, y\u2082\u1d63) =>\n      let B\u2097 := B\u2097'.toCanonicalSigning x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n      let B\u1d63 := B\u1d63'.toCanonicalSigning x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63;\n      let D\u2080\u2097 := B\u2097.submatrix2x2 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097;\n      let D\u2097 := B\u2097.submatrix2x7 x\u2080\u2097 x\u2081\u2097 y\u2080 y\u2081 y\u2082;\n      let D\u1d63 := B\u1d63.submatrix7x2 x\u2080 x\u2081 x\u2082 y\u2080\u1d63 y\u2081\u1d63;\n      (B\u2097.drop2rows1col x\u2080 x\u2081 y\u2082 \u229f (\u229e D\u2097 D\u2080\u2097(D\u1d63 * D\u2080\u2097\u207b\u00b9 * D\u2097)D\u1d63).submatrix mapX mapY).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/bfc80735dd2c5a8d30221d977686cb1d82fc517b/Seymour/Matroid/Operations/Sum3.lean#L1019"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-20T12:58:38+02:00",
        "inclusion_date": "2025-05-25T05:46:47.508244+00:00"
      },
      "id": "cf5fbb6cc193d50f37fc3a5bc56c5e28de3fbf58cfd479a5940587f14ef250aa"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "bfc80735dd2c5a8d30221d977686cb1d82fc517b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3.lean",
        "start_line": 1101,
        "start_column": 4,
        "end_line": 1101,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h.left\n\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix (\u2191X\u2097) (\u2191Y\u2097) Z2\nB\u1d63 : Matrix (\u2191X\u1d63) (\u2191Y\u1d63) Z2\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhXY : X\u2097 \u2ad7 Y\u1d63\nhYX : Y\u2097 \u2ad7 X\u1d63\nhSS : (matrix3sumComposition B\u2097 B\u1d63 hXX hYY).2\nA\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nhA\u2097 : A\u2097.IsTotallyUnimodular\nhAB\u2097 : A\u2097.IsSigningOf B\u2097\nA\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhA\u1d63 : A\u1d63.IsTotallyUnimodular\nhAB\u1d63 : A\u1d63.IsSigningOf B\u1d63\nhxx\u2082 : x\u2081 \u2260 x\u2080\nhxx\u2081 : x\u2082 \u2260 x\u2080\nhxx\u2080 : x\u2082 \u2260 x\u2081\nhyy\u2082 : y\u2081 \u2260 y\u2080\nhyy\u2081 : y\u2082 \u2260 y\u2080\nhyy\u2080 : y\u2082 \u2260 y\u2081\n\u22a2 (matrix3sumCompositionCanonicalSigning A\u2097 A\u1d63 hXX hYY).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/bfc80735dd2c5a8d30221d977686cb1d82fc517b/Seymour/Matroid/Operations/Sum3.lean#L1101"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-23T09:42:03+02:00",
        "inclusion_date": "2025-05-25T05:46:47.508244+00:00"
      },
      "id": "ca7e0efa923f051cd9cdee3b5c6bc9ab24bd1d131d8cbd85443f873b10949137"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "bfc80735dd2c5a8d30221d977686cb1d82fc517b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3.lean",
        "start_line": 1144,
        "start_column": 10,
        "end_line": 1144,
        "end_column": 15
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix (\u2191X\u2097) (\u2191Y\u2097) Z2\nB\u1d63 : Matrix (\u2191X\u1d63) (\u2191Y\u1d63) Z2\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhXY : X\u2097 \u2ad7 Y\u1d63\nhYX : Y\u2097 \u2ad7 X\u1d63\nhSS : (matrix3sumComposition B\u2097 B\u1d63 hXX hYY).2\nA\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nhA\u2097 : A\u2097.IsTotallyUnimodular\nhAB\u2097 : A\u2097.IsSigningOf B\u2097\nA\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhA\u1d63 : A\u1d63.IsTotallyUnimodular\nhAB\u1d63 : A\u1d63.IsSigningOf B\u1d63\nhxx\u2082 : x\u2081 \u2260 x\u2080\nhxx\u2081 : x\u2082 \u2260 x\u2080\nhxx\u2080 : x\u2082 \u2260 x\u2081\nhyy\u2082 : y\u2081 \u2260 y\u2080\nhyy\u2081 : y\u2082 \u2260 y\u2080\nhyy\u2080 : y\u2082 \u2260 y\u2081\ni\u2097 : \u2191(X\u2097 \\ (x\u2080 \u1543 {x\u2081}))\nj\u1d63 : \u2191(Y\u1d63 \\ (y\u2080 \u1543 {y\u2081}))\nhx\u2082 : \u2191i\u2097 = x\u2082\nhy\u2082 : \u00ac\u2191j\u1d63 = y\u2082\n\u22a2 |matrix3sumCompositionCanonicalSigning A\u2097 A\u1d63 hXX hYY \u25e9i\u2097 \u25eaj\u1d63| =\n    \u2191(ZMod.val ((matrix3sumComposition B\u2097 B\u1d63 hXX hYY).1 \u25e9i\u2097 \u25eaj\u1d63))",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/bfc80735dd2c5a8d30221d977686cb1d82fc517b/Seymour/Matroid/Operations/Sum3.lean#L1144"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-23T09:42:03+02:00",
        "inclusion_date": "2025-05-25T05:46:47.508244+00:00"
      },
      "id": "08bcd4ff94909e5b2acdfa86dc69816ccf3c1f3536bddc3998ccb76fd4b8862e"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "bfc80735dd2c5a8d30221d977686cb1d82fc517b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3.lean",
        "start_line": 1146,
        "start_column": 8,
        "end_line": 1146,
        "end_column": 13
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix (\u2191X\u2097) (\u2191Y\u2097) Z2\nB\u1d63 : Matrix (\u2191X\u1d63) (\u2191Y\u1d63) Z2\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhXY : X\u2097 \u2ad7 Y\u1d63\nhYX : Y\u2097 \u2ad7 X\u1d63\nhSS : (matrix3sumComposition B\u2097 B\u1d63 hXX hYY).2\nA\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nhA\u2097 : A\u2097.IsTotallyUnimodular\nhAB\u2097 : A\u2097.IsSigningOf B\u2097\nA\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhA\u1d63 : A\u1d63.IsTotallyUnimodular\nhAB\u1d63 : A\u1d63.IsSigningOf B\u1d63\nhxx\u2082 : x\u2081 \u2260 x\u2080\nhxx\u2081 : x\u2082 \u2260 x\u2080\nhxx\u2080 : x\u2082 \u2260 x\u2081\nhyy\u2082 : y\u2081 \u2260 y\u2080\nhyy\u2081 : y\u2082 \u2260 y\u2080\nhyy\u2080 : y\u2082 \u2260 y\u2081\ni\u2097 : \u2191(X\u2097 \\ (x\u2080 \u1543 {x\u2081}))\nj\u1d63 : \u2191(Y\u1d63 \\ (y\u2080 \u1543 {y\u2081}))\nhx\u2082 : \u00ac\u2191i\u2097 = x\u2082\n\u22a2 |matrix3sumCompositionCanonicalSigning A\u2097 A\u1d63 hXX hYY \u25e9i\u2097 \u25eaj\u1d63| =\n    \u2191(ZMod.val ((matrix3sumComposition B\u2097 B\u1d63 hXX hYY).1 \u25e9i\u2097 \u25eaj\u1d63))",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/bfc80735dd2c5a8d30221d977686cb1d82fc517b/Seymour/Matroid/Operations/Sum3.lean#L1146"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-23T09:42:03+02:00",
        "inclusion_date": "2025-05-25T05:46:47.508244+00:00"
      },
      "id": "cf0c4cb5fcfe0c6b4b354738e6a11c86da06509f0ea04247bc71d3ed820383a2"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "bfc80735dd2c5a8d30221d977686cb1d82fc517b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3.lean",
        "start_line": 1147,
        "start_column": 6,
        "end_line": 1147,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h.right.inr.inl\n\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix (\u2191X\u2097) (\u2191Y\u2097) Z2\nB\u1d63 : Matrix (\u2191X\u1d63) (\u2191Y\u1d63) Z2\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhXY : X\u2097 \u2ad7 Y\u1d63\nhYX : Y\u2097 \u2ad7 X\u1d63\nhSS : (matrix3sumComposition B\u2097 B\u1d63 hXX hYY).2\nA\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nhA\u2097 : A\u2097.IsTotallyUnimodular\nhAB\u2097 : A\u2097.IsSigningOf B\u2097\nA\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhA\u1d63 : A\u1d63.IsTotallyUnimodular\nhAB\u1d63 : A\u1d63.IsSigningOf B\u1d63\nhxx\u2082 : x\u2081 \u2260 x\u2080\nhxx\u2081 : x\u2082 \u2260 x\u2080\nhxx\u2080 : x\u2082 \u2260 x\u2081\nhyy\u2082 : y\u2081 \u2260 y\u2080\nhyy\u2081 : y\u2082 \u2260 y\u2080\nhyy\u2080 : y\u2082 \u2260 y\u2081\ni\u1d63 : \u2191(X\u1d63 \\ {x\u2082})\nj\u2097 : \u2191(Y\u2097 \\ {y\u2082})\n\u22a2 |matrix3sumCompositionCanonicalSigning A\u2097 A\u1d63 hXX hYY \u25eai\u1d63 \u25e9j\u2097| =\n    \u2191(ZMod.val ((matrix3sumComposition B\u2097 B\u1d63 hXX hYY).1 \u25eai\u1d63 \u25e9j\u2097))",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/bfc80735dd2c5a8d30221d977686cb1d82fc517b/Seymour/Matroid/Operations/Sum3.lean#L1147"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-23T09:42:03+02:00",
        "inclusion_date": "2025-05-25T05:46:47.508244+00:00"
      },
      "id": "b2ccfca0a6268e1db0180f2955d0a7fb3ac63dbf8dfbdfa97f04122b610db907"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "bfc80735dd2c5a8d30221d977686cb1d82fc517b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3.lean",
        "start_line": 1148,
        "start_column": 6,
        "end_line": 1148,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h.right.inr.inr\n\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix (\u2191X\u2097) (\u2191Y\u2097) Z2\nB\u1d63 : Matrix (\u2191X\u1d63) (\u2191Y\u1d63) Z2\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhXY : X\u2097 \u2ad7 Y\u1d63\nhYX : Y\u2097 \u2ad7 X\u1d63\nhSS : (matrix3sumComposition B\u2097 B\u1d63 hXX hYY).2\nA\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nhA\u2097 : A\u2097.IsTotallyUnimodular\nhAB\u2097 : A\u2097.IsSigningOf B\u2097\nA\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhA\u1d63 : A\u1d63.IsTotallyUnimodular\nhAB\u1d63 : A\u1d63.IsSigningOf B\u1d63\nhxx\u2082 : x\u2081 \u2260 x\u2080\nhxx\u2081 : x\u2082 \u2260 x\u2080\nhxx\u2080 : x\u2082 \u2260 x\u2081\nhyy\u2082 : y\u2081 \u2260 y\u2080\nhyy\u2081 : y\u2082 \u2260 y\u2080\nhyy\u2080 : y\u2082 \u2260 y\u2081\ni\u1d63 : \u2191(X\u1d63 \\ {x\u2082})\nj\u1d63 : \u2191(Y\u1d63 \\ (y\u2080 \u1543 {y\u2081}))\n\u22a2 |matrix3sumCompositionCanonicalSigning A\u2097 A\u1d63 hXX hYY \u25eai\u1d63 \u25eaj\u1d63| =\n    \u2191(ZMod.val ((matrix3sumComposition B\u2097 B\u1d63 hXX hYY).1 \u25eai\u1d63 \u25eaj\u1d63))",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/bfc80735dd2c5a8d30221d977686cb1d82fc517b/Seymour/Matroid/Operations/Sum3.lean#L1148"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-23T09:54:27+02:00",
        "inclusion_date": "2025-05-25T05:46:47.508244+00:00"
      },
      "id": "ccfcd1ea3895e781fa5b563b54e46140cf4063ea289b028a08be04543373fcc9"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "bfc80735dd2c5a8d30221d977686cb1d82fc517b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3RefactorTest.lean",
        "start_line": 359,
        "start_column": 2,
        "end_line": 359,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d : DecidableEq \u03b1\nS\u2097 S\u1d63 : StandardRepr \u03b1 Z2\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\nhXX : S\u2097.X \u2229 S\u1d63.X = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : S\u2097.Y \u2229 S\u1d63.Y = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\n\u22a2 let x\u2080\u2097 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2080\u1d63 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2081\u2097 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2081\u1d63 := \u27e8x\u2081, \u22ef\u27e9;\n  let _x\u2082\u2097 := \u27e8x\u2082, \u22ef\u27e9;\n  let x\u2082\u1d63 := \u27e8x\u2082, \u22ef\u27e9;\n  let y\u2080\u2097 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2080\u1d63 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2081\u2097 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2081\u1d63 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2082\u2097 := \u27e8y\u2082, \u22ef\u27e9;\n  let _y\u2082\u1d63 := \u27e8y\u2082, \u22ef\u27e9;\n  let A\u2097 := Matrix.A\u2097_alt2 S\u2097.B x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n  let A\u2097' := Matrix.A\u2097'_alt2 S\u2097.B x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097;\n  let D\u2097 := Matrix.D\u2097_alt2 S\u2097.B x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n  let D\u2080 := Matrix.D\u2080_alt2 S\u2097.B x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097;\n  let D\u1d63 := Matrix.D\u1d63_alt2 S\u1d63.B x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63;\n  let A\u1d63' := Matrix.A\u1d63'_alt2 S\u1d63.B x\u2080\u1d63 x\u2081\u1d63 y\u2080\u1d63 y\u2081\u1d63;\n  let A\u1d63 := Matrix.A\u1d63_alt2 S\u1d63.B x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63;\n  let S := matrix3sumComposition_alt2 A\u2097 A\u2097' D\u2097 D\u2080 D\u1d63 A\u1d63' A\u1d63;\n  matrix3sumComposition_alt2_mapped' S = matrix3sumComposition_curr S\u2097.B S\u1d63.B hXX hYY",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/bfc80735dd2c5a8d30221d977686cb1d82fc517b/Seymour/Matroid/Operations/Sum3RefactorTest.lean#L359"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-05-23T19:21:41+02:00",
        "inclusion_date": "2025-05-25T05:46:47.508244+00:00"
      },
      "id": "fecfcd460fee795d31706f5cd1dec7b77e0bd6a3246c9a96ed56dc99f13c407b"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "bfc80735dd2c5a8d30221d977686cb1d82fc517b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3RefactorTest.lean",
        "start_line": 391,
        "start_column": 2,
        "end_line": 391,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d : DecidableEq \u03b1\nS\u2097 S\u1d63 : StandardRepr \u03b1 Z2\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\nhXX : S\u2097.X \u2229 S\u1d63.X = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : S\u2097.Y \u2229 S\u1d63.Y = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhXY : S\u2097.X \u2ad7 S\u1d63.Y\nhYX : S\u2097.Y \u2ad7 S\u1d63.X\n\u22a2 standardRepr3sumComposition_alt2 hXX hYY hXY hYX = standardRepr3sumComposition_curr hXX hYY hXY hYX",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/bfc80735dd2c5a8d30221d977686cb1d82fc517b/Seymour/Matroid/Operations/Sum3RefactorTest.lean#L391"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-05-23T19:21:41+02:00",
        "inclusion_date": "2025-05-25T05:46:47.508244+00:00"
      },
      "id": "2c9443fcb82e64add418da5fdec62c3bbde4e4b86ba0a50cf643afab5f58f5b3"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "311fe74883f7d50aa3ebbb1301e5a69415358743",
        "lean_version": "v4.14.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/SmartOr.lean",
        "start_line": 163,
        "start_column": 6,
        "end_line": 163,
        "end_column": 11
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u00b9 : Ord \u03b1\ninst\u271d : DecidableEq \u03b1\nx y z1 z2 : Regex \u03b1\nhx : Regex.SmartOrElem x\nhy : Regex.NotOr y\nhny : y \u2260 Regex.any.star\nhi : OrIsSmart (insertOr y (z1.or z2))\nhlty : x < y\nhltz1 : x < z1\nh : z1 = y\n\u22a2 OrIsSmart (z1.or z2)",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/311fe74883f7d50aa3ebbb1301e5a69415358743/Katydid/Regex/Smart/SmartOr.lean#L163"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-24T14:29:51+01:00",
        "inclusion_date": "2025-05-25T05:51:43.879168+00:00"
      },
      "id": "0795b5a855a8a96f21ff3d57526a36dafa6372c1ec93b975cfd2550366f28e73"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "311fe74883f7d50aa3ebbb1301e5a69415358743",
        "lean_version": "v4.14.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/SmartOr.lean",
        "start_line": 166,
        "start_column": 6,
        "end_line": 166,
        "end_column": 11
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u00b9 : Ord \u03b1\ninst\u271d : DecidableEq \u03b1\nx y z1 z2 : Regex \u03b1\nhx : Regex.SmartOrElem x\nhy : Regex.NotOr y\nhny : y \u2260 Regex.any.star\nhi : OrIsSmart (insertOr y (z1.or z2))\nhlty : x < y\nhltz1 : x < z1\nh\u271d : \u00acz1 = y\nh : z1 < y\n\u22a2 OrIsSmart (z1.or (insertOr y z2))",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/311fe74883f7d50aa3ebbb1301e5a69415358743/Katydid/Regex/Smart/SmartOr.lean#L166"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-24T14:29:51+01:00",
        "inclusion_date": "2025-05-25T05:51:43.879168+00:00"
      },
      "id": "0e418e6715bdb1ade9ed6b376531fc245b37660de998a287a08d9883f9fe3919"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "311fe74883f7d50aa3ebbb1301e5a69415358743",
        "lean_version": "v4.14.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/SmartOr.lean",
        "start_line": 168,
        "start_column": 6,
        "end_line": 168,
        "end_column": 11
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u00b9 : Ord \u03b1\ninst\u271d : DecidableEq \u03b1\nx y z1 z2 : Regex \u03b1\nhx : Regex.SmartOrElem x\nhy : Regex.NotOr y\nhny : y \u2260 Regex.any.star\nhi : OrIsSmart (insertOr y (z1.or z2))\nhlty : x < y\nhltz1 : x < z1\nh\u271d : \u00acz1 = y\nh : \u00acz1 < y\n\u22a2 OrIsSmart (x.or (consOr y (z1.or z2)))",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/311fe74883f7d50aa3ebbb1301e5a69415358743/Katydid/Regex/Smart/SmartOr.lean#L168"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-24T14:29:51+01:00",
        "inclusion_date": "2025-05-25T05:51:43.879168+00:00"
      },
      "id": "e384f72ddd3bb1e2ebc724ca8fa1a3a2835cb01b2bd239f51c3f55d3f24771c4"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/SemQuot.lean",
        "start_line": 22,
        "start_column": 31,
        "end_line": 22,
        "end_column": 36
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 \u2983a b : Formula\u2984, a \u2248 b \u2192 (~a) \u2248 (~b)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/SemQuot.lean#L22"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-07-22T18:21:35+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "01ed67d8c16722b32b32639c0d76168ecb412ea23aa222a84eae84188bc8a239"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/SemQuot.lean",
        "start_line": 25,
        "start_column": 32,
        "end_line": 25,
        "end_column": 37
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 \u2983a\u2081 a\u2082 : Formula\u2984, a\u2081 \u2248 a\u2082 \u2192 \u2200 \u2983b\u2081 b\u2082 : Formula\u2984, b\u2081 \u2248 b\u2082 \u2192 a\u2081\u22c0b\u2081 \u2248 a\u2082\u22c0b\u2082",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/SemQuot.lean#L25"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-07-22T18:21:35+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "d67b1d71db9d7423c7218101a17961e225436344081c3824e5fb9c332bab26a6"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "5efd5c9ae89d274ed5932ca3d01ff307d9aa38a2",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 1574,
        "start_column": 10,
        "end_line": 1574,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case refine_1\nX : Sequent\nW : Type\nM : KripkeModel W\nv w : W\nside : Side\nB : List Sequent\nnext : (Y : Sequent) \u2192 Y \u2208 B \u2192 LocalTableau Y\n\u03b1 : Program\nv_\u03b1_w : relate M \u03b1 v w\nL R : List Formula\nO : Olf\nv_t : (M, v)\u22a8(L, R, O)\nF : List Formula\n\u03b4 : List Program\n_in_H : (F, \u03b4) \u2208 H \u03b1\nv_F : \u2200 f \u2208 F, evaluate M v f\nv_\u03b4_w : relateSeq M \u03b4 v w\n\u03c7' : LoadFormula\nw_n\u03be : (M, w)\u22a8~''(AnyFormula.loaded \u03c7')\nIH :\n  \u2200 (Y : Sequent) (a : Y \u2208 B) (\u03b1 : Program),\n    relate M \u03b1 v w \u2192\n      (M, v)\u22a8Y \u2192\n        (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loaded \u03c7'))).in_side side Y \u2192\n          \u2203 Y_1 \u2208 endNodesOf (next Y a),\n            (M, v)\u22a8Y_1 \u2227\n              (Y_1.isFree = true \u2228\n                \u2203 F \u03b3,\n                  (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.loaded \u03c7'))).in_side side Y_1 \u2227\n                    relateSeq M \u03b3 v w \u2227\n                      (\u2200 f \u2208 F, evaluate M v f) \u2227\n                        (F, \u03b3) \u2208 H \u03b1 \u2227 (Y_1.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.loaded \u03c7')))).isFree = true)\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loaded \u03c7'))).in_side side (L, R, O)\n\u03b1'_not_atomic : \u00ac\u03b1.isAtomic\nprecons : \u2205.Subperm L \u2227 \u2205.Subperm R \u2227 some (Sum.inl (~'\u230a\u03b1\u230bAnyFormula.loaded \u03c7')) \u2286 O\nB_def_apply_r_LRO :\n  B = applyLocalRule (LocalRule.loadedL (\u230a\u03b1\u230bAnyFormula.loaded \u03c7') (LoadRule.dia \u03b1'_not_atomic)) (L, R, O)\nclaim : (L ++ F, R, some (Sum.inl (~'\u230a\u230a\u03b4\u230b\u230b\u03c7'))) \u2208 B\n\u22a2 sorry \u2208 endNodesOf (next (L ++ F, R, some (Sum.inl (~'\u230a\u230a\u03b4\u230b\u230b\u03c7'))) \u22ef)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/5efd5c9ae89d274ed5932ca3d01ff307d9aa38a2/Pdl/Soundness.lean#L1574"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-12-15T19:37:25+01:00",
        "inclusion_date": "2025-06-02T05:03:52.703931+00:00"
      },
      "id": "d658efffa3826431d611daefe0b163e10f87b431ab3260a14021658c981cfaca"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "5efd5c9ae89d274ed5932ca3d01ff307d9aa38a2",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 1575,
        "start_column": 10,
        "end_line": 1575,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case refine_2\nX : Sequent\nW : Type\nM : KripkeModel W\nv w : W\nside : Side\nB : List Sequent\nnext : (Y : Sequent) \u2192 Y \u2208 B \u2192 LocalTableau Y\n\u03b1 : Program\nv_\u03b1_w : relate M \u03b1 v w\nL R : List Formula\nO : Olf\nv_t : (M, v)\u22a8(L, R, O)\nF : List Formula\n\u03b4 : List Program\n_in_H : (F, \u03b4) \u2208 H \u03b1\nv_F : \u2200 f \u2208 F, evaluate M v f\nv_\u03b4_w : relateSeq M \u03b4 v w\n\u03c7' : LoadFormula\nw_n\u03be : (M, w)\u22a8~''(AnyFormula.loaded \u03c7')\nIH :\n  \u2200 (Y : Sequent) (a : Y \u2208 B) (\u03b1 : Program),\n    relate M \u03b1 v w \u2192\n      (M, v)\u22a8Y \u2192\n        (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loaded \u03c7'))).in_side side Y \u2192\n          \u2203 Y_1 \u2208 endNodesOf (next Y a),\n            (M, v)\u22a8Y_1 \u2227\n              (Y_1.isFree = true \u2228\n                \u2203 F \u03b3,\n                  (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.loaded \u03c7'))).in_side side Y_1 \u2227\n                    relateSeq M \u03b3 v w \u2227\n                      (\u2200 f \u2208 F, evaluate M v f) \u2227\n                        (F, \u03b3) \u2208 H \u03b1 \u2227 (Y_1.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.loaded \u03c7')))).isFree = true)\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loaded \u03c7'))).in_side side (L, R, O)\n\u03b1'_not_atomic : \u00ac\u03b1.isAtomic\nprecons : \u2205.Subperm L \u2227 \u2205.Subperm R \u2227 some (Sum.inl (~'\u230a\u03b1\u230bAnyFormula.loaded \u03c7')) \u2286 O\nB_def_apply_r_LRO :\n  B = applyLocalRule (LocalRule.loadedL (\u230a\u03b1\u230bAnyFormula.loaded \u03c7') (LoadRule.dia \u03b1'_not_atomic)) (L, R, O)\nclaim : (L ++ F, R, some (Sum.inl (~'\u230a\u230a\u03b4\u230b\u230b\u03c7'))) \u2208 B\n\u22a2 (M, v)\u22a8sorry \u2227\n    (sorry.isFree = true \u2228\n      \u2203 F \u03b3,\n        (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.loaded \u03c7'))).in_side side sorry \u2227\n          relateSeq M \u03b3 v w \u2227\n            (\u2200 f \u2208 F, evaluate M v f) \u2227\n              (F, \u03b3) \u2208 H \u03b1 \u2227 (sorry.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.loaded \u03c7')))).isFree = true)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/5efd5c9ae89d274ed5932ca3d01ff307d9aa38a2/Pdl/Soundness.lean#L1575"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-12-15T19:37:25+01:00",
        "inclusion_date": "2025-06-02T05:03:52.703931+00:00"
      },
      "id": "764323f4cc6ab24faefc0f9a4b401e8ce63a069f65e7b262f7a409b698094272"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "multisetEqTo",
        "commit": "60a4762da27ce47c06ad3174d8fb9e8ad3311ac7",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 802,
        "start_column": 8,
        "end_line": 802,
        "end_column": 13
      },
      "debug_info": {
        "goal": "X : Sequent\nW : Type\nM : KripkeModel W\nv w : W\n\u03be : AnyFormula\nside : Side\nw_n\u03be : (M, w)\u22a8~''\u03be\nB : List Sequent\nnext : (Y : Sequent) \u2192 Y \u2208 B \u2192 LocalTableau Y\nIH :\n  \u2200 (Y : Sequent) (a : Y \u2208 B) (\u03b1 : Program),\n    relate M \u03b1 v w \u2192\n      (M, v)\u22a8Y \u2192\n        (~''(AnyFormula.loaded (\u230a\u03b1\u230b\u03be))).in_side side Y \u2192\n          \u2203 Y_1 \u2208 endNodesOf (next Y a),\n            (M, v)\u22a8Y_1 \u2227\n              (Y_1.isFree = true \u2228\n                \u2203 F \u03b3,\n                  (~''(AnyFormula.loadBoxes \u03b3 \u03be)).in_side side Y_1 \u2227\n                    relateSeq M \u03b3 v w \u2227\n                      (\u2200 f \u2208 F, evaluate M v f) \u2227\n                        (F, \u03b3) \u2208 H \u03b1 \u2227 (Y_1.without (~''(AnyFormula.loadBoxes \u03b3 \u03be))).isFree = true)\n\u03b1 : Program\nv_\u03b1_w : relate M \u03b1 v w\nL R : List Formula\nO : Olf\nv_t : (M, v)\u22a8(L, R, O)\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230b\u03be))).in_side side (L, R, O)\nF : List Formula\n\u03b4 : List Program\n_in_H : (F, \u03b4) \u2208 H \u03b1\nv_F : \u2200 f \u2208 F, evaluate M v f\nv_\u03b4_w : relateSeq M \u03b4 v w\n\u03b1' : Program\n\u03c6 : Formula\n\u03b1'_not_atomic : \u00ac\u03b1'.isAtomic\nprecons : \u2205.Subperm L \u2227 \u2205.Subperm R \u2227 some (Sum.inl (~'\u230a\u03b1'\u230bAnyFormula.normal \u03c6)) \u2286 O\nB_def_apply_r_LRO :\n  B = applyLocalRule (LocalRule.loadedL (\u230a\u03b1'\u230bAnyFormula.normal \u03c6) (LoadRule.dia' \u03b1'_not_atomic)) (L, R, O)\n\u22a2 \u2203 Y,\n    (\u2203 l, (\u2203 a, \u2203 (h : a \u2208 B), endNodesOf (next a \u22ef) = l) \u2227 Y \u2208 l) \u2227\n      (M, v)\u22a8Y \u2227\n        (Y.isFree = true \u2228\n          \u2203 F \u03b3,\n            (~''(AnyFormula.loadBoxes \u03b3 \u03be)).in_side side Y \u2227\n              relateSeq M \u03b3 v w \u2227\n                (\u2200 f \u2208 F, evaluate M v f) \u2227 (F, \u03b3) \u2208 H \u03b1 \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 \u03be))).isFree = true)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/60a4762da27ce47c06ad3174d8fb9e8ad3311ac7/Pdl/Soundness.lean#L802"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-12-15T19:37:25+01:00",
        "inclusion_date": "2025-05-28T05:43:22.902231+00:00"
      },
      "id": "f9ea62d5eca41a7d045a8e1b41674837ac69c05db4a748d8af5ef4981607aaa2"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "5efd5c9ae89d274ed5932ca3d01ff307d9aa38a2",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 1582,
        "start_column": 6,
        "end_line": 1582,
        "end_column": 11
      },
      "debug_info": {
        "goal": "X : Sequent\nW : Type\nM : KripkeModel W\nv w : W\n\u03be : AnyFormula\nside : Side\nw_n\u03be : (M, w)\u22a8~''\u03be\nB : List Sequent\nnext : (Y : Sequent) \u2192 Y \u2208 B \u2192 LocalTableau Y\nIH :\n  \u2200 (Y : Sequent) (a : Y \u2208 B) (\u03b1 : Program),\n    relate M \u03b1 v w \u2192\n      (M, v)\u22a8Y \u2192\n        (~''(AnyFormula.loaded (\u230a\u03b1\u230b\u03be))).in_side side Y \u2192\n          \u2203 Y_1 \u2208 endNodesOf (next Y a),\n            (M, v)\u22a8Y_1 \u2227\n              (Y_1.isFree = true \u2228\n                \u2203 F \u03b3,\n                  (~''(AnyFormula.loadBoxes \u03b3 \u03be)).in_side side Y_1 \u2227\n                    relateSeq M \u03b3 v w \u2227\n                      (M, v)\u22a8F \u2227 (F, \u03b3) \u2208 H \u03b1 \u2227 (Y_1.without (~''(AnyFormula.loadBoxes \u03b3 \u03be))).isFree = true)\n\u03b1 : Program\nv_\u03b1_w : relate M \u03b1 v w\nL R : List Formula\nO : Olf\nv_t : (M, v)\u22a8(L, R, O)\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230b\u03be))).in_side side (L, R, O)\nlocRulTru : \u2200 (w : W), (M, w)\u22a8(L, R, O) \u2194 \u2203 Ci \u2208 B, (M, w)\u22a8Ci\nress\u271d : List (List Formula \u00d7 Option NegLoadFormula)\n\u03c7\u271d : LoadFormula\nlrule\u271d : LoadRule (~'\u03c7\u271d) ress\u271d\nprecons : \u2205.Subperm L \u2227 \u2205.Subperm R \u2227 some (Sum.inr (~'\u03c7\u271d)) \u2286 O\nB_def_apply_r_LRO : B = applyLocalRule (LocalRule.loadedR \u03c7\u271d lrule\u271d) (L, R, O)\n\u22a2 \u2203\n    Y \u2208\n      endNodesOf\n        (LocalTableau.byLocalRule (LocalRuleApp.mk \u2205 \u2205 (some (Sum.inr (~'\u03c7\u271d))) (LocalRule.loadedR \u03c7\u271d lrule\u271d) precons)\n          next),\n    (M, v)\u22a8Y \u2227\n      (Y.isFree = true \u2228\n        \u2203 F \u03b3,\n          (~''(AnyFormula.loadBoxes \u03b3 \u03be)).in_side side Y \u2227\n            relateSeq M \u03b3 v w \u2227 (M, v)\u22a8F \u2227 (F, \u03b3) \u2208 H \u03b1 \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 \u03be))).isFree = true)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/5efd5c9ae89d274ed5932ca3d01ff307d9aa38a2/Pdl/Soundness.lean#L1582"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-12-15T19:37:25+01:00",
        "inclusion_date": "2025-06-02T05:03:52.703931+00:00"
      },
      "id": "5489b25609c5c0572000067c9bee750f5c8a8f32a20aaf68df924ffce55e6b54"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "main",
        "commit": "1e2c5ddff9323c3319579ee6a909bed7f8709d29",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 844,
        "start_column": 2,
        "end_line": 844,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Program\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03be : AnyFormula\nside : Side\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230b\u03be))).in_side side (nodeAt t)\nv_\u03b1_w : relate M \u03b1 v w\nw_n\u03be : (M, w)\u22a8~''\u03be\n\u22a2 \u2203 s,\n    Relation.TransGen (cEdge X tab) t s \u2227\n      satisfiable (nodeAt s) \u2227\n        (\u00accEquiv X tab s t \u2228\n          (~''\u03be).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 ((nodeAt s).without (~''\u03be)).isFree = true)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/1e2c5ddff9323c3319579ee6a909bed7f8709d29/Pdl/Soundness.lean#L844"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-04-09T11:04:11+02:00",
        "inclusion_date": "2025-05-25T06:15:42.613459+00:00"
      },
      "id": "18dfb1953a0d28f5ea92372abefe2584b42b9e49ddbd8918137bd8537deb4a7f"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "main",
        "commit": "1e2c5ddff9323c3319579ee6a909bed7f8709d29",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 1021,
        "start_column": 16,
        "end_line": 1021,
        "end_column": 21
      },
      "debug_info": {
        "goal": "X : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03be : AnyFormula\nside : Side\nw_n\u03be : (M, w)\u22a8~''\u03be\ns : PathIn tab\ns_t0 : s \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nw_Y : (M, v)\u22a8Y\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nF : List Formula\n\u03b4 : List Program\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 \u03be)).in_side side Y\nv_seq_w : relateSeq M \u03b4 v w\nv_F : \u2200 f \u2208 F, evaluate M v f\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 \u03be))).isFree = true\nh\u271d : \u00ac\u03b4 = []\nws : List.Vector W \u03b4.length.succ\nv_def : v = ws.head\nw_def : w = ws.last\nk : Fin \u03b4.length\nsk : PathIn tab\nt_sk : Relation.TransGen (cEdge X tab) t sk\n_in_node_sk : (~''(AnyFormula.loadBoxes (List.drop (\u2191k) \u03b4) \u03be)).in_side side (nodeAt sk)\nwsk_sk : (M, ws[\u2191k])\u22a8nodeAt sk\nanf_in_sk : ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191k) \u03b4) \u03be))).isFree = true\na\u271d : \u2115\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u00b7a\u271d\u230b\u03be))).in_side side (nodeAt t)\nv_\u03b1_w : M.Rel a\u271d v w\nF\u03b4_in_H : (F, \u03b4) \u2208 H (\u00b7a\u271d)\nws_rel : \u2200 (i : Fin \u03b4.length), relate M \u03b4[\u2191i] (ws.get i.castSucc) (ws.get i.succ)\nthis : \u03b4[\u2191k] = \u00b7a\u271d\n\u22a2 False",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/1e2c5ddff9323c3319579ee6a909bed7f8709d29/Pdl/Soundness.lean#L1021"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-12-21T00:03:28+01:00",
        "inclusion_date": "2025-05-25T06:15:42.613459+00:00"
      },
      "id": "a8d9aaca55b8fa15a40801a99fdb558f4114123502b455396067280acb923214"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "main",
        "commit": "1e2c5ddff9323c3319579ee6a909bed7f8709d29",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 1025,
        "start_column": 16,
        "end_line": 1025,
        "end_column": 21
      },
      "debug_info": {
        "goal": "X : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03be : AnyFormula\nside : Side\nw_n\u03be : (M, w)\u22a8~''\u03be\ns : PathIn tab\ns_t0 : s \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nw_Y : (M, v)\u22a8Y\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nF : List Formula\n\u03b4 : List Program\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 \u03be)).in_side side Y\nv_seq_w : relateSeq M \u03b4 v w\nv_F : \u2200 f \u2208 F, evaluate M v f\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 \u03be))).isFree = true\nh\u271d : \u00ac\u03b4 = []\nws : List.Vector W \u03b4.length.succ\nv_def : v = ws.head\nw_def : w = ws.last\nk : Fin \u03b4.length\nsk : PathIn tab\nt_sk : Relation.TransGen (cEdge X tab) t sk\n_in_node_sk : (~''(AnyFormula.loadBoxes (List.drop (\u2191k) \u03b4) \u03be)).in_side side (nodeAt sk)\nwsk_sk : (M, ws[\u2191k])\u22a8nodeAt sk\nanf_in_sk : ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191k) \u03b4) \u03be))).isFree = true\na\u271d : Program\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u2217a\u271d\u230b\u03be))).in_side side (nodeAt t)\nv_\u03b1_w : Relation.ReflTransGen (relate M a\u271d) v w\nF\u03b4_in_H : (F, \u03b4) \u2208 H (\u2217a\u271d)\nws_rel : \u2200 (i : Fin \u03b4.length), relate M \u03b4[\u2191i] (ws.get i.castSucc) (ws.get i.succ)\nthis : lengthOfProgram \u03b4[\u2191k] \u2264 1 + lengthOfProgram a\u271d\n\u22a2 lengthOfProgram \u03b4[\u2191k] < 1 + lengthOfProgram a\u271d",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/1e2c5ddff9323c3319579ee6a909bed7f8709d29/Pdl/Soundness.lean#L1025"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-12-21T00:03:28+01:00",
        "inclusion_date": "2025-05-25T06:15:42.613459+00:00"
      },
      "id": "fd08048676cc54ddaa64757d999b54fe3bc589fcf320148ac31b41f3a5fa234e"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "main",
        "commit": "1e2c5ddff9323c3319579ee6a909bed7f8709d29",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 1362,
        "start_column": 6,
        "end_line": 1362,
        "end_column": 11
      },
      "debug_info": {
        "goal": "\u03b1 : Program\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03be : AnyFormula\nside : Side\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230b\u03be))).in_side side (nodeAt t)\nv_\u03b1_w : relate M \u03b1 v w\nw_n\u03be : (M, w)\u22a8~''\u03be\ns : PathIn tab\nIH :\n  t = s \u2192\n    \u2203 s_1,\n      Relation.TransGen (cEdge X tab) s s_1 \u2227\n        (satisfiable (nodeAt s_1) \u2227 \u00accEquiv X tab s_1 s \u2228\n          (~''\u03be).in_side side (nodeAt s_1) \u2227 (M, w)\u22a8nodeAt s_1 \u2227 ((nodeAt s_1).without (~''\u03be)).isFree = true)\ns_t0 : s \u22d6_ t\nHist : History\nZ : Sequent\nlpr : LoadedPathRepeat Hist Z\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.lrep lpr\u27e9\u27e9\n\u22a2 (tabAt t).snd.snd = Tableau.lrep (\u22ef \u25b8 lpr)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/1e2c5ddff9323c3319579ee6a909bed7f8709d29/Pdl/Soundness.lean#L1362"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-11-21T22:55:48+01:00",
        "inclusion_date": "2025-05-25T06:15:42.613459+00:00"
      },
      "id": "96f22d4d42ae5622d1adb4559d423d44894e1a2307c895995a5ff91ce4254210"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/TableauGame.lean",
        "start_line": 21,
        "start_column": 13,
        "end_line": 21,
        "end_column": 18
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 (p next : Sequent \u2295 Sequent \u00d7 Formula \u00d7 Rule), next \u2208 sorry p \u2192 sorry next < sorry p",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/TableauGame.lean#L21"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-12-03T14:06:27+01:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "da520002a90840138eac323c05516f5fb4311557736f37a24c235af885d33cb2"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/TableauGame.lean",
        "start_line": 42,
        "start_column": 2,
        "end_line": 42,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Sequent\ns : Strategy tableauGame Player.A\nh : winning (Sum.inl X) s\n\u22a2 Nonempty (Tableau [] X)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/TableauGame.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-12-26T00:40:09+01:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "e6f5b59f0a6a4065515fc66e9d762c7b15cc07648e4d139a324cffa9345fba8c"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/TableauGame.lean",
        "start_line": 49,
        "start_column": 2,
        "end_line": 49,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Sequent\ns : Strategy tableauGame Player.B\nh : winning (Sum.inl X) s\n\u22a2 \u2203 WS mg, X.toFinset \u2208 WS",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/TableauGame.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-12-26T00:40:09+01:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "66aae29519a71c0801222512bf21a2eb9a4148777482de5cb318167a11209596"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/PartInterpolation.lean",
        "start_line": 40,
        "start_column": 4,
        "end_line": 40,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case inr.inl.intro.intro.h\nx : \u2115 \u2295 \u2115\n\u03b1 : Program\n\u03c6 : Formula\nL : List Formula\nL_in : L \u2208 unfoldBox \u03b1 \u03c6\n\u03c4 : Formula\n\u03c4_in : \u03c4 \u2208 testsOfProgram \u03b1\n\u03c8_in : (~\u03c4) \u2208 L\nx_in_voc_\u03c8 : x \u2208 \u03c4.voc\n\u22a2 x \u2208 \u03b1.voc",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/PartInterpolation.lean#L40"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-10-18T22:57:53+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "02d7c48b498e766ab04dcd1a1beb2a7ed259fa1fc76a45f4a61ef671591ff20d"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/PartInterpolation.lean",
        "start_line": 43,
        "start_column": 4,
        "end_line": 43,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case inr.inr.intro.intro.intro\nx : \u2115 \u2295 \u2115\n\u03b1 : Program\n\u03c6 : Formula\nL : List Formula\nL_in : L \u2208 unfoldBox \u03b1 \u03c6\na : \u2115\n\u03b4 : List Program\n\u03c8_in : (\u2308\u00b7a\u2309\u2308\u2308\u03b4\u2309\u2309\u03c6) \u2208 L\nright\u271d : \u00b7a \u2208 subprograms \u03b1 \u2227 \u2200 a \u2208 \u03b4, a \u2208 subprograms \u03b1\nx_in_voc_\u03c8 : x = Sum.inr a \u2228 x \u2208 \u03b4.pvoc \u222a \u03c6.voc\n\u22a2 x \u2208 \u03b1.voc \u2228 x \u2208 \u03c6.voc",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/PartInterpolation.lean#L43"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-10-18T22:57:53+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "e046cb4f745f6213f1250c2a22019f6abed081da94232634ee1ca541cfa1ada8"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/PartInterpolation.lean",
        "start_line": 70,
        "start_column": 6,
        "end_line": 70,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h.intro.intro\nx : \u2115 \u2295 \u2115\n\u03b1 : Program\n\u03c6 : Formula\nFs : List Formula\n\u03b4 : List Program\nin_H : (Fs, \u03b4) \u2208 H \u03b1\nthis : \u2200 (\u03b1 : Program) {Fs : List Formula} {\u03b4 : List Program}, (Fs, \u03b4) \u2208 H \u03b1 \u2192 \u03b4 = [] \u2228 \u2203 a \u03b4', \u03b4 = \u00b7a :: \u03b4'\n\u03b1' : Program\n\u03b1'_in : \u03b1' \u2208 \u03b4\nx_in : x \u2208 \u03b1'.voc\n\u22a2 x \u2208 \u03b1.voc",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/PartInterpolation.lean#L70"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-10-18T22:57:53+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "c94b081471588ae9ba9ef5b0071675a55fe1e9806f5c3218eb0d981dcc0a432d"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/PartInterpolation.lean",
        "start_line": 108,
        "start_column": 4,
        "end_line": 108,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case intro.intro.intro.intro.intro\nx : \u2115 \u2295 \u2115\nress : List (List Formula \u00d7 Option NegLoadFormula)\n\u03c7 : LoadFormula\nlrule : LoadRule (~'\u03c7) ress\nL : List Formula\nlnf : Option NegLoadFormula\nin_ress : (L, lnf) \u2208 ress\n\u03c6 : Formula\n\u03c6_in_L : \u03c6 \u2208 L\nbla : x \u2208 \u03c6.voc\n\u22a2 False",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/PartInterpolation.lean#L108"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-10-18T22:57:53+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "b008dcd44fae81b2d95f69dfe3b3d92cbc28e33f2b5feac6dde8433c102100c4"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/PartInterpolation.lean",
        "start_line": 114,
        "start_column": 2,
        "end_line": 114,
        "end_column": 7
      },
      "debug_info": {
        "goal": "Lcond Rcond : List Formula\nOcond : Olf\nress : List Sequent\nrule : LocalRule (Lcond, Rcond, Ocond) ress\n\u22a2 \u2200 res \u2208 ress, res.2.1.fvoc \u2286 Rcond.fvoc",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/PartInterpolation.lean#L114"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-09-13T00:22:40+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "1d7fada31a87f3f31839b0acc45cea0b01e5434c42987b382e42a97b30f67ae8"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/PartInterpolation.lean",
        "start_line": 118,
        "start_column": 2,
        "end_line": 118,
        "end_column": 7
      },
      "debug_info": {
        "goal": "Lcond Rcond : List Formula\nOcond : Olf\nress : List Sequent\nrule : LocalRule (Lcond, Rcond, Ocond) ress\n\u22a2 \u2200 res \u2208 ress, res.2.2.voc \u2286 Ocond.voc",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/PartInterpolation.lean#L118"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-09-13T00:22:40+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "a2031a788eebfe77470cf96dbb7184614f2e282feb02f176e13a48581d1f1172"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/PartInterpolation.lean",
        "start_line": 129,
        "start_column": 4,
        "end_line": 129,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mk.mk\nX : Sequent\nC : List Sequent\nruleA : LocalRuleApp X C\nL R : List Formula\nress : List Sequent\nO : Olf\nLcond Rcond : List Formula\nOcond : Olf\nlrule : LocalRule (Lcond, Rcond, Ocond) ress\npreconditionProof : Lcond.Subperm L \u2227 Rcond.Subperm R \u2227 Ocond \u2286 O\ncL cR : List Formula\ncO : Olf\nx : \u2115 \u2295 \u2115\nx_in_voc_C :\n  (x \u2208 Vocab.fromList (List.map Formula.voc cL) \u2228 x \u2208 Vocab.fromList (List.map Formula.voc (Olf.toForms cO))) \u2227\n    (x \u2208 Vocab.fromList (List.map Formula.voc cR) \u2228 x \u2208 Vocab.fromList (List.map Formula.voc (Olf.toForms cO)))\nthis : \u2200 res \u2208 ress, res.1.fvoc \u2286 Lcond.fvoc\nC_in : (cL, cR, cO) \u2208 applyLocalRule lrule (L, R, O)\n\u22a2 x \u2208 jvoc (L, R, O)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/PartInterpolation.lean#L129"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-09-13T00:22:40+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "2941d18c275f537df768eed644d1eebe4b5093f713fadcbb2e92680deef9451d"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/PartInterpolation.lean",
        "start_line": 154,
        "start_column": 8,
        "end_line": 154,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case property.right.left\nC : List Sequent\nL R : List Formula\no : Olf\nruleA : LocalRuleApp (L, R, o) C\nsub\u03b8s : (c : Sequent) \u2192 c \u2208 C \u2192 PartInterpolant c\nLcond : List Formula\nress\u271d : List (List Formula)\norule : OneSidedLocalRule Lcond ress\u271d\nprecondProof : Lcond.Subperm L \u2227 \u2205.Subperm R \u2227 none \u2286 o\nrule : LocalRule (Lcond, \u2205, none) (List.map (fun res => (res, \u2205, none)) ress\u271d)\nhc : C = applyLocalRule rule (L, R, o)\ndef_ruleA : ruleA = LocalRuleApp.mk Lcond \u2205 none rule precondProof\ndef_rule : rule = LocalRule.oneSidedL orule\ninterList : List Formula :=\n  List.map (fun x => @localInterpolantStep.match_1 C (fun x => Formula) x fun c cinC => \u2191(@sub\u03b8s c cinC)) C.attach\nL_and_n\u03b8_sat : satisfiable ((~dis interList) :: Sequent.left (L, R, o))\n\u22a2 False",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/PartInterpolation.lean#L154"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-07-11T22:21:56+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "ceedc0f1c86c8bb5751ab0e76ef0b6d771204bde8863f978a2300cdc068c0d62"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/PartInterpolation.lean",
        "start_line": 156,
        "start_column": 8,
        "end_line": 156,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case property.right.right\nC : List Sequent\nL R : List Formula\no : Olf\nruleA : LocalRuleApp (L, R, o) C\nsub\u03b8s : (c : Sequent) \u2192 c \u2208 C \u2192 PartInterpolant c\nLcond : List Formula\nress\u271d : List (List Formula)\norule : OneSidedLocalRule Lcond ress\u271d\nprecondProof : Lcond.Subperm L \u2227 \u2205.Subperm R \u2227 none \u2286 o\nrule : LocalRule (Lcond, \u2205, none) (List.map (fun res => (res, \u2205, none)) ress\u271d)\nhc : C = applyLocalRule rule (L, R, o)\ndef_ruleA : ruleA = LocalRuleApp.mk Lcond \u2205 none rule precondProof\ndef_rule : rule = LocalRule.oneSidedL orule\ninterList : List Formula :=\n  List.map (fun x => @localInterpolantStep.match_1 C (fun x => Formula) x fun c cinC => \u2191(@sub\u03b8s c cinC)) C.attach\nR_and_\u03b8_sat : satisfiable (dis interList :: Sequent.right (L, R, o))\n\u22a2 False",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/PartInterpolation.lean#L156"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-07-11T22:21:56+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "8c401c050a530c3f4883f1cd62dee1a43e2a6f6e5caad03ef4ca848227d55c4c"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/PartInterpolation.lean",
        "start_line": 170,
        "start_column": 6,
        "end_line": 170,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case property.refine_2\nC : List Sequent\nL R : List Formula\no : Olf\nruleA : LocalRuleApp (L, R, o) C\nsub\u03b8s : (c : Sequent) \u2192 c \u2208 C \u2192 PartInterpolant c\nRcond : List Formula\nress\u271d : List (List Formula)\norule : OneSidedLocalRule Rcond ress\u271d\nprecondProof : \u2205.Subperm L \u2227 Rcond.Subperm R \u2227 none \u2286 o\nrule : LocalRule (\u2205, Rcond, none) (List.map (fun res => (\u2205, res, none)) ress\u271d)\nhc : C = applyLocalRule rule (L, R, o)\ndef_ruleA : ruleA = LocalRuleApp.mk \u2205 Rcond none rule precondProof\ndef_rule : rule = LocalRule.oneSidedR orule\ninterList : List Formula :=\n  List.map (fun x => @localInterpolantStep.match_1 C (fun x => Formula) x fun c cinC => \u2191(@sub\u03b8s c cinC)) C.attach\nL_and_n\u03b8_sat : satisfiable ((~Con interList) :: Sequent.left (L, R, o))\n\u22a2 False",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/PartInterpolation.lean#L170"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-09-13T00:22:40+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "3f0a02d5f722312fe939f053eb5ca73d8e54bb9fd0e32ffb672b7687fdc524b7"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/PartInterpolation.lean",
        "start_line": 172,
        "start_column": 6,
        "end_line": 172,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case property.refine_3\nC : List Sequent\nL R : List Formula\no : Olf\nruleA : LocalRuleApp (L, R, o) C\nsub\u03b8s : (c : Sequent) \u2192 c \u2208 C \u2192 PartInterpolant c\nRcond : List Formula\nress\u271d : List (List Formula)\norule : OneSidedLocalRule Rcond ress\u271d\nprecondProof : \u2205.Subperm L \u2227 Rcond.Subperm R \u2227 none \u2286 o\nrule : LocalRule (\u2205, Rcond, none) (List.map (fun res => (\u2205, res, none)) ress\u271d)\nhc : C = applyLocalRule rule (L, R, o)\ndef_ruleA : ruleA = LocalRuleApp.mk \u2205 Rcond none rule precondProof\ndef_rule : rule = LocalRule.oneSidedR orule\ninterList : List Formula :=\n  List.map (fun x => @localInterpolantStep.match_1 C (fun x => Formula) x fun c cinC => \u2191(@sub\u03b8s c cinC)) C.attach\nR_and_\u03b8_sat : satisfiable (Con interList :: Sequent.right (L, R, o))\n\u22a2 False",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/PartInterpolation.lean#L172"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-09-13T00:22:40+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "21489fee2c221388fb30efb9689642bd756edfe51a7406127166fdb71238e2c5"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/TableauExamples.lean",
        "start_line": 165,
        "start_column": 2,
        "end_line": 165,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u00acprovable (~(\u2308\u2217a\u2309~\u2308a\u2309p)\u22c0(~p))",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/TableauExamples.lean#L165"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-01-24T21:13:32+01:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "ec044b3531e1e8be8d5642b93bdf5acee002e382a7e769be0777e96688e62fff"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/TableauExamples.lean",
        "start_line": 170,
        "start_column": 2,
        "end_line": 170,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u00acprovable (~(\u2308a\u2309\u2308\u2217a\u2309p)\u22c0(~\u2308a\u2309\u2308\u2217a\u2309q))",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/TableauExamples.lean#L170"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-01-24T21:13:32+01:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "81496475c0e377c401c4e592de2af0bd7daf73cf4b89a3bf8bb820b89a823b00"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Unused/Repeat.lean",
        "start_line": 55,
        "start_column": 42,
        "end_line": 55,
        "end_column": 47
      },
      "debug_info": {
        "goal": "\u22a2 4 \u2208 []",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Unused/Repeat.lean#L55"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-07-03T12:15:03+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "66b35d949f11c2503eff630cc1c5f904cfbcaaea7aeb7cf76b89f2e68bc843d8"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Unused/Repeat.lean",
        "start_line": 56,
        "start_column": 42,
        "end_line": 56,
        "end_column": 47
      },
      "debug_info": {
        "goal": "\u22a2 4 \u2208 [3]",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Unused/Repeat.lean#L56"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-07-03T12:15:03+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "fbea4d46fef3700f78f23e35eec38a7e0eca23722934ce91919b61115bef7081"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Unused/Repeat.lean",
        "start_line": 68,
        "start_column": 2,
        "end_line": 68,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a\u271d : List \u2115\nt : NiceTree a\u271d\nk : \u2115\nk_in_N : k \u2208 a\u271d\n\u22a2 failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Unused/Repeat.lean#L68"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-07-03T12:15:03+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "43e6b32305cbe4dcb4ddaef6854d0cde52f05efc9035ad090bad2beab360bc6e"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Unused/Repeat.lean",
        "start_line": 227,
        "start_column": 4,
        "end_line": 227,
        "end_column": 9
      },
      "debug_info": {
        "goal": "n : \u2115\nroot : HisTree [] n\np : PathIn [] n root\nHp : History\nm k : \u2115\nk_eq : some k = List.idxOf? m Hp\nHp_len_def : List.length (Sigma.fst (treeAt [] n root p)) = [].length + PathIn.length [] n root p\nthis : k < List.length Hp\n\u22a2 k \u2264 PathIn.length [] n root p",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Unused/Repeat.lean#L227"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-05-13T21:59:41+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "a19283678a73e685a68cb42a168474b46307642ec0437ccf2d8e1349b7d12b03"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Unused/Repeat.lean",
        "start_line": 222,
        "start_column": 28,
        "end_line": 222,
        "end_column": 33
      },
      "debug_info": {
        "goal": "n : \u2115\nroot : HisTree [] n\np : PathIn [] n root\nHp : History\nm k : \u2115\nk_eq : some k = List.idxOf? m Hp\nHp_len_def : List.length (Sigma.fst (treeAt [] n root p)) = [].length + PathIn.length [] n root p\n\u22a2 k < List.length Hp",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Unused/Repeat.lean#L222"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-05-13T21:59:41+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "7689ec781fd7e5fc94f486b17bf91c247d0e92c2e4df71b87d83a422aabc08d2"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Unused/Repeat.lean",
        "start_line": 248,
        "start_column": 4,
        "end_line": 248,
        "end_column": 9
      },
      "debug_info": {
        "goal": "H : History\nn : \u2115\nroot : HisTree H n\np : PathIn H n root\nHp : History\nm k : \u2115\nk_eq : some k = List.idxOf? m Hp\nHp_len_def : List.length (Sigma.fst (treeAt H n root p)) = List.length H + PathIn.length H n root p\nthis : k < List.length Hp\n\u22a2 k \u2264 PathIn.length H n root p",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Unused/Repeat.lean#L248"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-05-09T19:21:30+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "535e704928a3e9f69195c1ee03a50c526a4e01f5c1812eb004dab8b83f179b6b"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Unused/Repeat.lean",
        "start_line": 243,
        "start_column": 28,
        "end_line": 243,
        "end_column": 33
      },
      "debug_info": {
        "goal": "H : History\nn : \u2115\nroot : HisTree H n\np : PathIn H n root\nHp : History\nm k : \u2115\nk_eq : some k = List.idxOf? m Hp\nHp_len_def : List.length (Sigma.fst (treeAt H n root p)) = List.length H + PathIn.length H n root p\n\u22a2 k < List.length Hp",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Unused/Repeat.lean#L243"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-05-13T21:59:41+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "b9277c8b667358d2f214f8a0c9e56abe488865b60cc0d0bcc9bff0799b9ad9d1"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Unused/Repeat.lean",
        "start_line": 289,
        "start_column": 2,
        "end_line": 289,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : \u2115\na\u271d\u00b9 : List \u2115\nm_in_ms : m \u2208 a\u271d\u00b9\na\u271d : \u2115\nst : Step a\u271d a\u271d\u00b9\ntail\u271d : List \u2115\nnext : {m : \u2115} \u2192 m \u2208 a\u271d\u00b9 \u2192 HisTree (a\u271d :: tail\u271d) m\nrest rest' : PathIn (a\u271d :: tail\u271d) m (@next m m_in_ms)\nhyp :\n  Sigma.fst (treeAtP (a\u271d :: tail\u271d) m (@next m m_in_ms) rest) =\n    Sigma.fst (treeAtP (a\u271d :: tail\u271d) m (@next m m_in_ms) rest')\n\u22a2 (treeAtP._proof_27 tail\u271d a\u271d a\u271d\u00b9 m m_in_ms next rest \u25b8 treeAtP (a\u271d :: tail\u271d) m (@next m m_in_ms) rest).fst =\n    (treeAtP._proof_27 tail\u271d a\u271d a\u271d\u00b9 m m_in_ms (fun {m} => @next m) rest' \u25b8\n        treeAtP (a\u271d :: tail\u271d) m (@next m m_in_ms) rest').fst",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Unused/Repeat.lean#L289"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-04-01T19:43:15+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "f9be000a857c802b52c039176cafbf285c7a96ba36d237fa6d866cb1f02b01df"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Unused/Repeat.lean",
        "start_line": 311,
        "start_column": 4,
        "end_line": 311,
        "end_column": 9
      },
      "debug_info": {
        "goal": "n : \u2115\nms : List \u2115\nm : \u2115\nm_in_ms : m \u2208 ms\nst : Step n ms\nnext : {m : \u2115} \u2192 m \u2208 ms \u2192 HisTree [n] m\nrest : PathIn [n] m (@next m m_in_ms)\np_is_rep : isRep (treeAt [] n (HisTree.step n [] ms st next) (PathIn.cons [] ms n m m_in_ms st next rest))\n\u22a2 failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Unused/Repeat.lean#L311"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-04-01T19:43:15+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "39b56d5e1e0bdecce6ca1a119d0a97c10d0e22dc6b67519d4b25270f7e208cad"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Unused/Repeat.lean",
        "start_line": 350,
        "start_column": 8,
        "end_line": 350,
        "end_column": 13
      },
      "debug_info": {
        "goal": "n st : \u2115\nH : List \u2115\nk\u271d : \u2115\n_in_empty : some k\u271d = List.idxOf? n (st :: H)\np_is_rep : True\n\u22a2 failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Unused/Repeat.lean#L350"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-04-01T19:43:15+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "caf7997b2ebf0a21b76b88fe958b34d30e3590f5abaad839632c321f38e66afd"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Unused/Repeat.lean",
        "start_line": 370,
        "start_column": 4,
        "end_line": 370,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case refl.refl.refl.refl\nn\u271d : \u2115\nms\u271d : List \u2115\nm\u271d : \u2115\nm_in\u271d : m\u271d \u2208 ms\u271d\ns\u271d : Step n\u271d ms\u271d\nnext\u271d : {m : \u2115} \u2192 m \u2208 ms\u271d \u2192 HisTree [n\u271d] m\nrest\u271d : PathIn [n\u271d] m\u271d (@next\u271d m\u271d m_in\u271d)\np_is_rep\u271d\u00b2 : isRep (treeAt [] n\u271d (HisTree.step n\u271d [] ms\u271d s\u271d next\u271d) (PathIn.cons [] ms\u271d n\u271d m\u271d m_in\u271d s\u271d next\u271d rest\u271d))\nn : (n : \u2115) \u00d7' (ht : HisTree [] n) \u00d7' (p : PathIn [] n ht) \u00d7' isRep (treeAt [] n ht p)\na\u271d\u00b3 : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\nht\u271d : (ht : HisTree [] n\u271d) \u00d7' (p : PathIn [] n\u271d ht) \u00d7' isRep (treeAt [] n\u271d ht p)\na\u271d\u00b2 : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\nht : HisTree [] n\u271d\np\u271d\u00b9 : (p : PathIn [] n\u271d ht) \u00d7' isRep (treeAt [] n\u271d ht p)\na\u271d\u00b9 : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\np\u271d : PathIn [] n\u271d ht\np_is_rep\u271d\u00b9 : isRep (treeAt [] n\u271d ht p\u271d)\na\u271d : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\n\u03b2\u271d : Type\np : PathIn [] n\u271d (HisTree.step n\u271d [] ms\u271d s\u271d next\u271d)\np_is_rep\u271d : isRep (treeAt [] n\u271d (HisTree.step n\u271d [] ms\u271d s\u271d next\u271d) p)\n\u03b2 : Type\np_is_rep : isRep (treeAt [] n\u271d (HisTree.step n\u271d [] ms\u271d s\u271d next\u271d) (PathIn.cons [] ms\u271d n\u271d m\u271d m_in\u271d s\u271d next\u271d rest\u271d))\n\u22a2 1 + PathIn.length [n\u271d] m\u271d (@next\u271d m\u271d m_in\u271d) rest\u271d < [].length + PathIn.length [] n\u271d ht p\u271d",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Unused/Repeat.lean#L370"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-04-01T19:43:15+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "ed35774caa08b53d7163a64d356b26d1e80343ce1933cf27aba38c966322f616"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Unused/Repeat.lean",
        "start_line": 373,
        "start_column": 4,
        "end_line": 373,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case refl.refl.refl.refl.refl\nn\u271d head\u271d : \u2115\ntail\u271d ms\u271d : List \u2115\nm\u271d : \u2115\nm_in\u271d : m\u271d \u2208 ms\u271d\ns\u271d : Step n\u271d ms\u271d\nnext\u271d : {m : \u2115} \u2192 m \u2208 ms\u271d \u2192 HisTree (n\u271d :: head\u271d :: tail\u271d) m\nrest\u271d : PathIn (n\u271d :: head\u271d :: tail\u271d) m\u271d (@next\u271d m\u271d m_in\u271d)\np_is_rep\u271d\u00b2 :\n  isRep\n    (treeAt (head\u271d :: tail\u271d) n\u271d (HisTree.step n\u271d (head\u271d :: tail\u271d) ms\u271d s\u271d next\u271d)\n      (PathIn.cons (head\u271d :: tail\u271d) ms\u271d n\u271d m\u271d m_in\u271d s\u271d next\u271d rest\u271d))\nn :\n  (n : \u2115) \u00d7'\n    (ht : HisTree (head\u271d :: tail\u271d) n) \u00d7' (p : PathIn (head\u271d :: tail\u271d) n ht) \u00d7' isRep (treeAt (head\u271d :: tail\u271d) n ht p)\na\u271d\u00b3 : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\nht\u271d :\n  (ht : HisTree (head\u271d :: tail\u271d) n\u271d) \u00d7' (p : PathIn (head\u271d :: tail\u271d) n\u271d ht) \u00d7' isRep (treeAt (head\u271d :: tail\u271d) n\u271d ht p)\na\u271d\u00b2 : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\nht : HisTree (head\u271d :: tail\u271d) n\u271d\np\u271d\u00b9 : (p : PathIn (head\u271d :: tail\u271d) n\u271d ht) \u00d7' isRep (treeAt (head\u271d :: tail\u271d) n\u271d ht p)\na\u271d\u00b9 : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\np\u271d : PathIn (head\u271d :: tail\u271d) n\u271d ht\np_is_rep\u271d\u00b9 : isRep (treeAt (head\u271d :: tail\u271d) n\u271d ht p\u271d)\na\u271d : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\n\u03b2\u271d : Type\np : PathIn (head\u271d :: tail\u271d) n\u271d (HisTree.step n\u271d (head\u271d :: tail\u271d) ms\u271d s\u271d next\u271d)\np_is_rep\u271d : isRep (treeAt (head\u271d :: tail\u271d) n\u271d (HisTree.step n\u271d (head\u271d :: tail\u271d) ms\u271d s\u271d next\u271d) p)\n\u03b2 : Type\np_is_rep :\n  isRep\n    (treeAt (head\u271d :: tail\u271d) n\u271d (HisTree.step n\u271d (head\u271d :: tail\u271d) ms\u271d s\u271d next\u271d)\n      (PathIn.cons (head\u271d :: tail\u271d) ms\u271d n\u271d m\u271d m_in\u271d s\u271d next\u271d rest\u271d))\n\u22a2 tail\u271d.length + 1 + 1 + PathIn.length (n\u271d :: head\u271d :: tail\u271d) m\u271d (@next\u271d m\u271d m_in\u271d) rest\u271d <\n    (head\u271d :: tail\u271d).length + PathIn.length (head\u271d :: tail\u271d) n\u271d ht p\u271d",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Unused/Repeat.lean#L373"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-04-01T19:43:15+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "82b93b62037bba95c8a34cea899a1dc1b68edcaebe17a8807e1b78a8076fa7a8"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Unused/Repeat.lean",
        "start_line": 397,
        "start_column": 6,
        "end_line": 397,
        "end_column": 11
      },
      "debug_info": {
        "goal": "n : \u2115\nH' : History\nn' : \u2115\nH\u271d : History\nm\u271d k\u271d : \u2115\n_in_H : some k\u271d = List.idxOf? m\u271d H\u271d\np_is_rep :\n  @isRep.match_1 (fun x => Prop) \u27e8H\u271d, \u27e8m\u271d, HisTree.rep H\u271d m\u271d k\u271d _in_H\u27e9\u27e9 (fun fst fst_1 k a => True) fun x => False\nms : List \u2115\nm : \u2115\nm_in : m \u2208 ms\ns : Step n ms\nnext : {m : \u2115} \u2192 m \u2208 ms \u2192 HisTree [n] m\nrest : PathIn [n] m (@next m m_in)\np_ht_def :\n  \u27e8H\u271d, \u27e8m\u271d, HisTree.rep H\u271d m\u271d k\u271d _in_H\u27e9\u27e9 =\n    treeAt [] n (HisTree.step n [] ms s next) (PathIn.cons [] ms n m m_in s next rest)\n\u22a2 failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Unused/Repeat.lean#L397"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-04-01T19:43:15+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "9fc26e0235cade0417cbc32923774af8c4244bb9e8c99cbbaeddb3891c9b9d47"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "multisetEqTo",
        "commit": "60a4762da27ce47c06ad3174d8fb9e8ad3311ac7",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 1014,
        "start_column": 112,
        "end_line": 1014,
        "end_column": 117
      },
      "debug_info": {
        "goal": "\u03c7 : LoadFormula\n\u03b1 : Program\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv : W\nv_t : (M, v)\u22a8nodeAt t\n\u03be : AnyFormula\nside : Side\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230b\u03be))).in_side side (nodeAt t)\n\u03b1_natom : \u00ac\u03b1.isAtomic\n\u22a2 \u2203 s,\n    t \u22d6_ s \u2227\n      \u2200 F\u03b4 \u2208 H \u03b1,\n        if side = Side.LL then\n          if \u03be = AnyFormula.loaded \u03c7 then\n            nodeAt s = ((nodeAt s).1 ++ F\u03b4.1, (nodeAt s).2.1, some (Sum.inl (~'\u230a\u230aF\u03b4.2\u230b\u230b\u03c7)))\n          else nodeAt s = ((nodeAt s).1 ++ F\u03b4.1, (nodeAt s).2.1, some (Sum.inl (~'\u230a\u230aF\u03b4.2\u230b\u230b\u03c7)))\n        else\n          if \u03be = AnyFormula.loaded \u03c7 then\n            nodeAt s = ((nodeAt s).1, (nodeAt s).2.1 ++ F\u03b4.1, some (Sum.inr (~'\u230a\u230aF\u03b4.2\u230b\u230b\u03c7)))\n          else nodeAt s = ((nodeAt s).1, (nodeAt s).2.1 ++ F\u03b4.1, some (Sum.inr (~'\u230a\u230aF\u03b4.2\u230b\u230b\u03c7)))",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/60a4762da27ce47c06ad3174d8fb9e8ad3311ac7/Pdl/Soundness.lean#L1014"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-05-24T17:50:42+02:00",
        "inclusion_date": "2025-05-28T05:43:22.902231+00:00"
      },
      "id": "3f2eb8de55a908de8373768e620a3c11988221a849c12b51e0f31e5e2a32e398"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "5efd5c9ae89d274ed5932ca3d01ff307d9aa38a2",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2377,
        "start_column": 16,
        "end_line": 2377,
        "end_column": 21
      },
      "debug_info": {
        "goal": "case inr.intro.intro.intro.intro\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03be : AnyFormula\nside : Side\nw_n\u03be : (M, w)\u22a8~''\u03be\nt0 : PathIn tab\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\n\u03b2 : Program\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u2217\u03b2\u230b\u03be))).in_side side (nodeAt t)\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nw_Y : (M, v)\u22a8Y\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nF\u271d : List Formula\n\u03b4\u271d : List Program\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4\u271d \u03be)).in_side side Y\nv_seq_w : relateSeq M \u03b4\u271d v w\nv_F : (M, v)\u22a8F\u271d\nF\u03b4_in_H : (F\u271d, \u03b4\u271d) \u2208 H (\u2217\u03b2)\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4\u271d \u03be))).isFree = true\n\u03b4_ne\u271d : \u00ac\u03b4\u271d = []\nv_\u03b1_w : Relation.ReflTransGen (relate M \u03b2) v w\nn : \u2115\nws : List.Vector W n.succ\nv_head : v = ws.head\nw_tail : w = ws.last\nrel : \u2200 (i : Fin n), relate M \u03b2 (ws.get i.castSucc) (ws.get i.succ)\nk : Fin n\nih :\n  \u2203 sk,\n    Relation.TransGen (cEdge X tab) t sk \u2227\n      (satisfiable (nodeAt sk) \u2227 \u00accEquiv X tab sk t \u2228\n        \u2203 \u03b3,\n          (~''(AnyFormula.loaded (\u230a\u230a\u03b3\u230b\u230b\u230a\u2217\u03b2\u230b\u03be))).in_side side (nodeAt sk) \u2227\n            (M, ws[k.castSucc])\u22a8nodeAt sk \u2227\n              ((nodeAt sk).without (~''(AnyFormula.loaded (\u230a\u230a\u03b3\u230b\u230b\u230a\u2217\u03b2\u230b\u03be)))).isFree = true \u2227 True)\nne : \u00acws[k.castSucc] = ws[k.succ]\nsk : PathIn tab\nt_sk : Relation.TransGen (cEdge X tab) t sk\n\u03b3 : List Program\ninside_con : (~''(AnyFormula.loaded (\u230a\u230a\u03b3\u230b\u230b\u230a\u2217\u03b2\u230b\u03be))).in_side side (nodeAt sk)\nwk_sk : (M, ws[k.castSucc])\u22a8nodeAt sk\nloaded_con : ((nodeAt sk).without (~''(AnyFormula.loaded (\u230a\u230a\u03b3\u230b\u230b\u230a\u2217\u03b2\u230b\u03be)))).isFree = true\nprincipal_con : True\nF : List Formula\n\u03b4 : List Program\nF\u03b4_in : (F, \u03b4) \u2208 H \u03b2\nwk_F : (M, ws[k.castSucc])\u22a8(F, \u03b4).1\nwk_\u03b4_wk1 : relateSeq M (F, \u03b4).2 ws[k.castSucc] ws[k.succ]\n\u03b4_ne : \u03b4 \u2260 []\nH\u03b2star_prop : (F, \u03b4 ++ [\u2217\u03b2]) \u2208 H (\u2217\u03b2)\n\u22a2 \u2203 sk,\n    Relation.TransGen (cEdge X tab) t sk \u2227\n      (satisfiable (nodeAt sk) \u2227 \u00accEquiv X tab sk t \u2228\n        \u2203 \u03b3,\n          (~''(AnyFormula.loaded (\u230a\u230a\u03b3\u230b\u230b\u230a\u2217\u03b2\u230b\u03be))).in_side side (nodeAt sk) \u2227\n            (M, ws[k.succ])\u22a8nodeAt sk \u2227\n              ((nodeAt sk).without (~''(AnyFormula.loaded (\u230a\u230a\u03b3\u230b\u230b\u230a\u2217\u03b2\u230b\u03be)))).isFree = true \u2227 True)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/5efd5c9ae89d274ed5932ca3d01ff307d9aa38a2/Pdl/Soundness.lean#L2377"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-05-24T17:50:42+02:00",
        "inclusion_date": "2025-06-02T05:03:52.703931+00:00"
      },
      "id": "bd25906dd90c4b2a26ed06d90de37d67885769f1c128614f3bcf857bad815fec"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "5efd5c9ae89d274ed5932ca3d01ff307d9aa38a2",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2387,
        "start_column": 10,
        "end_line": 2387,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case inr.intro.intro\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03be : AnyFormula\nside : Side\nw_n\u03be : (M, w)\u22a8~''\u03be\nt0 : PathIn tab\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\n\u03b2 : Program\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u2217\u03b2\u230b\u03be))).in_side side (nodeAt t)\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nw_Y : (M, v)\u22a8Y\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nF : List Formula\n\u03b4 : List Program\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 \u03be)).in_side side Y\nv_seq_w : relateSeq M \u03b4 v w\nv_F : (M, v)\u22a8F\nF\u03b4_in_H : (F, \u03b4) \u2208 H (\u2217\u03b2)\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 \u03be))).isFree = true\n\u03b4_ne : \u00ac\u03b4 = []\nv_\u03b1_w : Relation.ReflTransGen (relate M \u03b2) v w\nn : \u2115\nws : List.Vector W n.succ\nv_head : v = ws.head\nw_tail : w = ws.last\nrel : \u2200 (i : Fin n), relate M \u03b2 (ws.get i.castSucc) (ws.get i.succ)\nclaim :\n  \u2200 (k : Fin n.succ),\n    \u2203 sk,\n      Relation.TransGen (cEdge X tab) t sk \u2227\n        (satisfiable (nodeAt sk) \u2227 \u00accEquiv X tab sk t \u2228\n          \u2203 \u03b3,\n            (~''(AnyFormula.loaded (\u230a\u230a\u03b3\u230b\u230b\u230a\u2217\u03b2\u230b\u03be))).in_side side (nodeAt sk) \u2227\n              (M, ws[k])\u22a8nodeAt sk \u2227 ((nodeAt sk).without (~''(AnyFormula.loaded (\u230a\u230a\u03b3\u230b\u230b\u230a\u2217\u03b2\u230b\u03be)))).isFree = true \u2227 True)\nh : w = w\nsn : PathIn tab\nt_sn : Relation.TransGen (cEdge X tab) t sn\nloaded_con : List Program\nw_sn : (~''(AnyFormula.loaded (\u230a\u230aloaded_con\u230b\u230b\u230a\u2217\u03b2\u230b\u03be))).in_side side (nodeAt sn)\nwithout_con :\n  (M, w)\u22a8nodeAt sn \u2227 ((nodeAt sn).without (~''(AnyFormula.loaded (\u230a\u230aloaded_con\u230b\u230b\u230a\u2217\u03b2\u230b\u03be)))).isFree = true \u2227 True\n\u03b1_natom : \u00ac(\u2217\u03b2).isAtomic\n\u22a2 \u2203 s,\n    Relation.TransGen (cEdge X tab) t s \u2227\n      (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n        (~''\u03be).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 ((nodeAt s).without (~''\u03be)).isFree = true)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/5efd5c9ae89d274ed5932ca3d01ff307d9aa38a2/Pdl/Soundness.lean#L2387"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-05-24T17:50:42+02:00",
        "inclusion_date": "2025-06-02T05:03:52.703931+00:00"
      },
      "id": "ea8433dd5488dcbedbe0cec39268c06670c94580ab80023105c2f39019717815"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "Scratch/Fiddle4.lean",
        "start_line": 204,
        "start_column": 2,
        "end_line": 204,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 2 \u2264 1",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/Scratch/Fiddle4.lean#L204"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2024-04-30T15:46:18+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "1d8c13cb641cfa8ee2fbaa845a999b7faf166b4d0ff7b14e0af4496943eda9a6"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "Scratch/Fiddle4.lean",
        "start_line": 235,
        "start_column": 18,
        "end_line": 235,
        "end_column": 23
      },
      "debug_info": {
        "goal": "P Q : Prop\n\u22a2 Q",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/Scratch/Fiddle4.lean#L235"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2024-07-22T19:06:07+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "1f1e3d5391e33236b0c03246f431b10efbb3152bf242177c6b77cbc1373d72e9"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "Scratch/Fiddle4.lean",
        "start_line": 236,
        "start_column": 22,
        "end_line": 236,
        "end_column": 27
      },
      "debug_info": {
        "goal": "P Q : Prop\nass : Q\n\u22a2 Q \u2192 P",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/Scratch/Fiddle4.lean#L236"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2024-07-22T19:06:07+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "75f643671f206ab8fd150b7e2dfd92c487872d20c7b5c860f26b337b43829e04"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "Scratch/Fiddle4.lean",
        "start_line": 240,
        "start_column": 25,
        "end_line": 240,
        "end_column": 30
      },
      "debug_info": {
        "goal": "P : \u2115 \u2192 Prop\nf : \u2115 \u2192 \u2115\n\u22a2 \u2200 (n : \u2115), P n",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/Scratch/Fiddle4.lean#L240"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2024-07-22T19:06:07+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "75f32c4dfbf34a2d36b446246bd89b612abaae3307c219c05d8444e488e461a8"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "Scratch/Fiddle4.lean",
        "start_line": 244,
        "start_column": 28,
        "end_line": 244,
        "end_column": 33
      },
      "debug_info": {
        "goal": "p\u2081 p\u2082 p\u2083 q : Prop\n\u22a2 p\u2081 \u2228 p\u2082 \u2228 p\u2083",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/Scratch/Fiddle4.lean#L244"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2024-08-02T10:30:50+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "21fff1f9b24d57b35d1f9a087e09ec96f469a480739757b18295d335002ff271"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "Scratch/Fiddle4.lean",
        "start_line": 251,
        "start_column": 43,
        "end_line": 251,
        "end_column": 48
      },
      "debug_info": {
        "goal": "n : \u2115\nq : Prop\n\u22a2 n = 1 \u2228 n = 2 \u2228 n = 3",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/Scratch/Fiddle4.lean#L251"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2024-08-02T10:30:50+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "ecfcac178112cb3ed01592658e9735163298ff0a960b0d8434c6cc585b943432"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/Data/Fin/Basic.lean",
        "start_line": 559,
        "start_column": 32,
        "end_line": 559,
        "end_column": 37
      },
      "debug_info": {
        "goal": "\u22a2 True",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/Data/Fin/Basic.lean#L559"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-23T10:22:30+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "69e786284c9cdba373b543eb4101c3a5b038ea6cd0df41b7f0aed9ee9bde41f6"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "CodeGen/from_statement_17638710709303199183.lean",
        "start_line": 86,
        "start_column": 78,
        "end_line": 86,
        "end_column": 83
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u271d : Even n\ncalculation_104313057753019104 : \u2203 k, \u2191n = 2 * k \u2192 \u2191n * (\u2191n + 1) = 2 * k * (2 * k + 1)\n\u22a2 \u2203 k, \u2191n = 2 * k",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/CodeGen/from_statement_17638710709303199183.lean#L86"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2025-02-01T02:51:42+00:00",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "e6aeef103bc76c78daa33b9f09ea88178008b67a2fa6418f79f9400262f80b51"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "CodeGen/from_statement_17638710709303199183.lean",
        "start_line": 93,
        "start_column": 49,
        "end_line": 93,
        "end_column": 54
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u271d : \u00acEven n\n\u22a2 Odd n",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/CodeGen/from_statement_17638710709303199183.lean#L93"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2025-02-01T02:51:42+00:00",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "bb5f56168db714ae0c718fd665b31f8d393726809b120d67a2111e0c56d5c3cf"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "CodeGen/from_statement_17638710709303199183.lean",
        "start_line": 100,
        "start_column": 6,
        "end_line": 100,
        "end_column": 11
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u271d : \u00acEven n\ncond_2667733541464095191 : Odd n\ncalculation_11723580698188269905 : \u2203 k, \u2191n = 2 * k + 1 \u2192 True\n\u22a2 \u2203 k, \u2191n = 2 * k + 1 \u2192 2 * k + 1 = (2 * k + 1) * (2 * k + 2)",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/CodeGen/from_statement_17638710709303199183.lean#L100"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2025-02-01T02:51:42+00:00",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "4e924b57dacee05e0002b97af35a770bdabf52be54ae2257527706d253ce6516"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "CodeGen/from_statement_17638710709303199183.lean",
        "start_line": 104,
        "start_column": 6,
        "end_line": 104,
        "end_column": 11
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u271d : \u00acEven n\ncond_2667733541464095191 : Odd n\ncalculation_11723580698188269905 : \u2203 k, \u2191n = 2 * k + 1 \u2192 True\ncalculation_2616508765904695607 : \u2203 k, \u2191n = 2 * k + 1 \u2192 2 * k + 1 = (2 * k + 1) * (2 * k + 2)\n\u22a2 \u2203 k, \u2191n = 2 * (2 * k + 1) * (k + 1)",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/CodeGen/from_statement_17638710709303199183.lean#L104"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2025-02-01T02:51:42+00:00",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "3e942c094bdf0d4011fd6edb710cf7f2afaa345d83f22d7ee528871aa6495115"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "DataGenAide/ThmInfo.lean",
        "start_line": 36,
        "start_column": 51,
        "end_line": 36,
        "end_column": 56
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 (n : Nat), n + 2 = 2 + n",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/DataGenAide/ThmInfo.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "daa7bcb7d9e3",
        "blame_date": "2022-08-16T17:16:08+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "24d12d6cd84441c7eb895c91c41f66b7ed3f701d7496f4a203e4149a9ca25a4c"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "DataGenAide/ThmInfo.lean",
        "start_line": 39,
        "start_column": 50,
        "end_line": 39,
        "end_column": 55
      },
      "debug_info": {
        "goal": "a b c : Nat\n\u22a2 a ^ 3 + b ^ 3 = c ^ 3 \u2192 a * b * c = 0",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/DataGenAide/ThmInfo.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "daa7bcb7d9e3",
        "blame_date": "2022-08-16T17:16:08+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "4ff4ef2469c39ed29c844bb2e9ca36b7d7bac5718a7734fa4083a79e7ec47890"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "DataGenAide/ConstDeps.lean",
        "start_line": 114,
        "start_column": 17,
        "end_line": 114,
        "end_column": 22
      },
      "debug_info": {
        "goal": "case succ\nm n : Nat\nih : n + m = m + n\n\u22a2 n + 1 + m = m + (n + 1)",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/DataGenAide/ConstDeps.lean#L114"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2024-05-05T19:52:08+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "9f64c0f1806d95b6b97f5c4eeffc1c224e33d6c21b27edff6402198521a73e45"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanAide/CheckedSorry.lean",
        "start_line": 41,
        "start_column": 26,
        "end_line": 41,
        "end_column": 41
      },
      "debug_info": {
        "goal": "\u22a2 1 + 1 = 2",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanAide/CheckedSorry.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2024-11-11T13:21:12+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "04fbbd3219e3ce35da235ce13fc79688ce71eec178cb4d7df5d35b5ae36e5e8d"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanAide/CheckedSorry.lean",
        "start_line": 46,
        "start_column": 44,
        "end_line": 46,
        "end_column": 59
      },
      "debug_info": {
        "goal": "n : Nat\n\u22a2 1 + 1 = 2",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanAide/CheckedSorry.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2024-11-11T13:21:12+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "b9d0801f14f16efcabba4ba5f71a4a4eb50e5383ba7619643f785fd75ce8aeca"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanAide/CheckedSorry.lean",
        "start_line": 99,
        "start_column": 2,
        "end_line": 99,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case left\n\u22a2 1 + 1 = 2",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanAide/CheckedSorry.lean#L99"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2024-11-11T13:21:12+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "e75f70b4da0b640ce9e82e86cbb6718f132933109300f5b91b8d8cfb9b1f9198"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanAide/CheckedSorry.lean",
        "start_line": 101,
        "start_column": 2,
        "end_line": 101,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case right.left\n\u22a2 2 + 2 = 4",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanAide/CheckedSorry.lean#L101"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2024-11-11T13:21:12+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "51e3d6445513419086c34eb4be9c3ef3e457e9dc5fadc3caf9a3fa9430251fa9"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanAide/CheckedSorry.lean",
        "start_line": 102,
        "start_column": 2,
        "end_line": 102,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case right.right\n\u22a2 1 + 1 = 2",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanAide/CheckedSorry.lean#L102"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2024-11-11T13:21:12+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "99609258755d4f4b66d6203b7d3a3d829ab36e5283163e6261daba4382335b9c"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 19,
        "start_column": 104,
        "end_line": 19,
        "end_column": 109
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 {a b : \u2124},\n      \u2203 x y z w,\n        a = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2 \u2227\n          \u2203 x y z w, b = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2 \u2192 \u2203 x y z w, a * b = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2) \u2192\n    let is_sum_of_four_squares := fun n => \u2203 a b c d, n = a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2;\n    \u2200 (x y : \u2115), is_sum_of_four_squares x \u2192 is_sum_of_four_squares y \u2192 is_sum_of_four_squares (x * y)",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L19"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T10:45:47+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "48d77f756d8066f732ad4f85432fee4a9e7c79386ea608529778cf1e52732131"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 21,
        "start_column": 267,
        "end_line": 21,
        "end_column": 272
      },
      "debug_info": {
        "goal": "\u22a2 (let is_sum_of_four_squares := fun n => \u2203 a b c d, n = a ^ 2 + b ^ 2 + c ^ 2 + d ^ 2;\n    \u2200 (x y : \u2115), is_sum_of_four_squares x \u2192 is_sum_of_four_squares y \u2192 is_sum_of_four_squares (x * y)) \u2192\n    \u2200 {a b : \u2124},\n      \u2203 x y z w,\n        a = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2 \u2227 b = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2 \u2192\n          \u2203 x y z w, a * b = x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L21"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T11:31:19+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "1466d4d2ed54a1b606ce44fb73af87baebc3750d46e0c4f76b60ff02573dcaf9"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 30,
        "start_column": 2,
        "end_line": 30,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case a\nh : {R : Type u} \u2192 [inst : CommRing R] \u2192 (\u2200 (x : R), x * x = x) \u2192 CommRing R\nR : Type u\nRRing : Ring R\nhyp : \u2200 (x : R), x * x = x\nthis : CommRing R\nx : R\n\u22a2 x * x = x",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "daa7bcb7d9e3",
        "blame_date": "2022-11-12T12:43:25+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "c2f49702eb70d8b1b49486ba176a1d7e9c9ff265ba4570f0a29d2399eeec1c6d"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 40,
        "start_column": 2,
        "end_line": 40,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case h.left\nh : \u2200 (n : \u2115), \u2203 p\u2081 p\u2082, Nat.Prime p\u2081 \u2227 Nat.Prime p\u2082 \u2227 p\u2081 + 2 = p\u2082 \u2227 2 + n < p\u2082\nn p\u2081 p\u2082 : \u2115\nPrime_p\u2081 : Nat.Prime p\u2081\nPrime_p\u2082 : Nat.Prime p\u2082\nhyp\u2081 : p\u2081 + 2 = p\u2082\nhyp\u2082 : 2 + n < p\u2082\n\u22a2 p\u2081 > n",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L40"
      },
      "metadata": {
        "blame_email_hash": "daa7bcb7d9e3",
        "blame_date": "2022-11-12T12:43:25+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "e6b4a437f672869d90a4b118a2c3c979229703c192c536495000804e0628b351"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 51,
        "start_column": 28,
        "end_line": 51,
        "end_column": 33
      },
      "debug_info": {
        "goal": "h : \u2200 (n : \u2115), \u2203 p > n, Nat.Prime p \u2227 Nat.Prime (p + 2)\nn p : \u2115\nhpn : p > n\nPrime_p : Nat.Prime p\nPrime_pp2 : Nat.Prime (p + 2)\n\u22a2 2 + n < p + 2",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L51"
      },
      "metadata": {
        "blame_email_hash": "daa7bcb7d9e3",
        "blame_date": "2022-11-14T19:44:46+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "25b55f5c4dca5be24a3701da08658b2a5394e8a50ca8099430288d5dcfce62a0"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 58,
        "start_column": 350,
        "end_line": 58,
        "end_column": 355
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 {\u03b1 : Type u_1} {r : \u03b1 \u2192 \u03b1 \u2192 Prop} [inst : Preorder \u03b1],\n      (\u2200 (c : Set \u03b1), IsChain r c \u2192 \u2203 ub, \u2200 a \u2208 c, r a ub) \u2192 \u2200 [inst : Nonempty \u03b1], \u2203 m, \u2200 (a : \u03b1), r m a \u2192 r a m) \u2192\n    \u2200 {\u03b1 : Type u} [inst : PartialOrder \u03b1] [inst_1 : Nonempty \u03b1],\n      (\u2200 (c : Set \u03b1), IsChain LE.le c \u2192 \u2203 b, \u2200 a \u2208 c, a \u2264 b) \u2192 \u2203 m, \u2200 (a : \u03b1), m \u2264 a \u2192 a = m",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L58"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T10:45:47+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "3730e1ed66fb6af8919b206ebf5898c31009a6deec7cdb94b4a83cf201287e02"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 59,
        "start_column": 350,
        "end_line": 59,
        "end_column": 355
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 {\u03b1 : Type u} [inst : PartialOrder \u03b1] [inst_1 : Nonempty \u03b1],\n      (\u2200 (c : Set \u03b1), IsChain LE.le c \u2192 \u2203 b, \u2200 a \u2208 c, a \u2264 b) \u2192 \u2203 m, \u2200 (a : \u03b1), m \u2264 a \u2192 a = m) \u2192\n    \u2200 {\u03b1 : Type u_1} {r : \u03b1 \u2192 \u03b1 \u2192 Prop} [inst : Preorder \u03b1],\n      (\u2200 (c : Set \u03b1), IsChain r c \u2192 \u2203 ub, \u2200 a \u2208 c, r a ub) \u2192 \u2200 [inst : Nonempty \u03b1], \u2203 m, \u2200 (a : \u03b1), r m a \u2192 r a m",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L59"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T10:45:47+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "f9fae8451c95310312ca2c41dc718d56851af215fbb91edc61dff24dbd7457e5"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 62,
        "start_column": 420,
        "end_line": 62,
        "end_column": 425
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 {\u03b1 : Type u_1} {\u03b2 : Type u_2} {\u03b3 : Type u_3} [inst : UniformSpace \u03b1] [inst_1 : UniformSpace \u03b2]\n      [inst_2 : UniformSpace \u03b3] {f : \u03b1 \u2192 \u03b2} {g : \u03b2 \u2192 \u03b3},\n      UniformContinuous f \u2192 UniformContinuous g \u2192 UniformContinuous (g \u2218 f)) \u2192\n    \u2200 {\u03b1 \u03b2 \u03b3 : Type u} [inst : UniformSpace \u03b1] [inst_1 : UniformSpace \u03b2] [inst_2 : UniformSpace \u03b3] (f : \u03b1 \u2192 \u03b2)\n      (g : \u03b2 \u2192 \u03b3), UniformContinuous f \u2192 UniformContinuous g \u2192 UniformContinuous (g \u2218 f)",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L62"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T10:45:47+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "8eeb78bb94912275902458658e3d591ce26289cc3049d60b8d5e2ad54a9a3442"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 63,
        "start_column": 420,
        "end_line": 63,
        "end_column": 425
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 {\u03b1 \u03b2 \u03b3 : Type u} [inst : UniformSpace \u03b1] [inst_1 : UniformSpace \u03b2] [inst_2 : UniformSpace \u03b3] (f : \u03b1 \u2192 \u03b2)\n      (g : \u03b2 \u2192 \u03b3), UniformContinuous f \u2192 UniformContinuous g \u2192 UniformContinuous (g \u2218 f)) \u2192\n    \u2200 {\u03b1 : Type u_1} {\u03b2 : Type u_2} {\u03b3 : Type u_3} [inst : UniformSpace \u03b1] [inst_1 : UniformSpace \u03b2]\n      [inst_2 : UniformSpace \u03b3] {f : \u03b1 \u2192 \u03b2} {g : \u03b2 \u2192 \u03b3},\n      UniformContinuous f \u2192 UniformContinuous g \u2192 UniformContinuous (g \u2218 f)",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L63"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T10:45:47+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "9653b53030ccee8faa061eb1da6aa87a04d194aa1d041d77fc0251264e482352"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 67,
        "start_column": 488,
        "end_line": 67,
        "end_column": 493
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 {C : Type u\u2081} [inst : CategoryTheory.Category.{u_3, u\u2081} C] [inst_1 : CategoryTheory.Limits.HasTerminal C]\n      {T T' : C} (t : CategoryTheory.Limits.IsTerminal T),\n      CategoryTheory.Limits.IsTerminal T' \u2192 CategoryTheory.IsIso (t.from T')) \u2192\n    \u2200 {C : Type u_4} [inst : CategoryTheory.Category.{u_5, u_4} C] (T\u2081 T\u2082 : C),\n      CategoryTheory.Limits.IsTerminal T\u2081 \u2192 CategoryTheory.Limits.IsTerminal T\u2082 \u2192 \u2203 \u03b9, \u2200 (\u03b9' : T\u2081 \u2245 T\u2082), \u03b9 = \u03b9'",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L67"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T10:45:47+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "4e38532ba91c21da2c35ecaab29a29f496fa4077ae7a5e6572611b4fa2636f1e"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 68,
        "start_column": 488,
        "end_line": 68,
        "end_column": 493
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 {C : Type u_3} [inst : CategoryTheory.Category.{u_4, u_3} C] (T\u2081 T\u2082 : C),\n      CategoryTheory.Limits.IsTerminal T\u2081 \u2192 CategoryTheory.Limits.IsTerminal T\u2082 \u2192 \u2203 \u03b9, \u2200 (\u03b9' : T\u2081 \u2245 T\u2082), \u03b9 = \u03b9') \u2192\n    \u2200 {C : Type u\u2081} [inst : CategoryTheory.Category.{u_5, u\u2081} C] [inst_1 : CategoryTheory.Limits.HasTerminal C]\n      {T T' : C} (t : CategoryTheory.Limits.IsTerminal T),\n      CategoryTheory.Limits.IsTerminal T' \u2192 CategoryTheory.IsIso (t.from T')",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L68"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T10:45:47+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "f728c89c91bed4880979c39b3623554b1888cf9194315afc8040360f745e771c"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 71,
        "start_column": 104,
        "end_line": 71,
        "end_column": 109
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 (a b c : \u2124), a ^ 3 + b ^ 3 \u2260 c ^ 3) \u2192 \u2200 (a b c : \u2115), a > 0 \u2192 b > 0 \u2192 \u00aca ^ 3 + b ^ 3 = c ^ 3",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L71"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T10:45:47+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "087d9347e2a164c3a8c531bda43705603f9a461de93b4d27dd7095944b02435b"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 72,
        "start_column": 104,
        "end_line": 72,
        "end_column": 109
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 (a b c : \u2115), a > 0 \u2192 b > 0 \u2192 \u00aca ^ 3 + b ^ 3 = c ^ 3) \u2192 \u2200 (a b c : \u2124), a ^ 3 + b ^ 3 \u2260 c ^ 3",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L72"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T10:45:47+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "3586910bff4d25dafa9ce73bfe8896c1011c81e42b2eab2ec6abb526fa6ad628"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 75,
        "start_column": 183,
        "end_line": 75,
        "end_column": 188
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 {G : Type u_1} [inst : Group G], (\u2200 (x : G), x ^ 2 = 1) \u2192 \u2200 {x y : G}, Commute x y) \u2192\n    \u2200 {G : Type u} [inst : Group G], (\u2200 (x : G), G \u2192 x * x = 1) \u2192 \u2200 (x y : G), Commute x y",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L75"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T11:31:19+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "fe31775789e82784f29a09ecdcbbb7b74756da5e538f7c2fed887be70215f47e"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 76,
        "start_column": 183,
        "end_line": 76,
        "end_column": 188
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 {G : Type u} [inst : Group G], (\u2200 (x : G), G \u2192 x * x = 1) \u2192 \u2200 (x y : G), Commute x y) \u2192\n    \u2200 {G : Type u_1} [inst : Group G], (\u2200 (x : G), x ^ 2 = 1) \u2192 \u2200 {x y : G}, Commute x y",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T11:31:19+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "8fb525b1dd6199a474d135cb7ec7fc81b427e675fbbca9201af57329d3e5ec97"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 79,
        "start_column": 89,
        "end_line": 79,
        "end_column": 94
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 {p q : \u2115}, p = q + 1 \u2192 Even (p * q)) \u2192 \u2200 (n : \u2115), Even (n * (n + 1))",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T10:45:47+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "4718a347037d01517a7e887696613699ff3bdc8a77f90547ad79b7a1203ac6a4"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 80,
        "start_column": 89,
        "end_line": 80,
        "end_column": 94
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 (n : \u2115), Even (n * (n + 1))) \u2192 \u2200 {p q : \u2115}, p = q + 1 \u2192 Even (p * q)",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T10:45:47+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "14c1de779cd6863a09827f1cc919a9cc672bbe46dfd5222a9cc3284d12a81b41"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 83,
        "start_column": 120,
        "end_line": 83,
        "end_column": 125
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 (\u03b1 : Type u), Monoid.IsTorsionFree (FreeGroup \u03b1)) \u2192 \u2200 {\u03b1 : Type u}, Monoid.IsTorsionFree (FreeGroup \u03b1)",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L83"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T11:31:19+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "2eb2b9b6e0667ea460ec19819423acc945c1a9f4725f7ad3cdf320ea8a29cbe2"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 84,
        "start_column": 120,
        "end_line": 84,
        "end_column": 125
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 {\u03b1 : Type u}, Monoid.IsTorsionFree (FreeGroup \u03b1)) \u2192 \u2200 (\u03b1 : Type u), Monoid.IsTorsionFree (FreeGroup \u03b1)",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L84"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T11:31:19+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "abf3e93aab97584b2aa3a340a41db9accc2c1cbb23836f1e8dedf0c0473eac8a"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 88,
        "start_column": 58,
        "end_line": 88,
        "end_column": 63
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 {n : \u2115}, 1 < n \u2192 \u2203 p, Nat.Prime p \u2227 p \u2223 n) \u2192 \u2200 n > 1, \u2203 p, Nat.Prime p \u2227 \u2203 d, p * d = n",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L88"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T11:31:19+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "7631f0dda98a1ac49e807f37a1784a62353879634b489aad2eb7916c7b4cd145"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 89,
        "start_column": 124,
        "end_line": 89,
        "end_column": 129
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 n > 1, \u2203 p, Nat.Prime p \u2227 \u2203 d, p * d = n) \u2192 \u2200 {n : \u2115}, 1 < n \u2192 \u2203 p, Nat.Prime p \u2227 p \u2223 n",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L89"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T11:31:19+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "93d5ccef9b39a72123f25b3d70c61cfb611716c6c2c02d34dba4267684b131fc"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 98,
        "start_column": 310,
        "end_line": 98,
        "end_column": 315
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 {\u03b1 : Type u_1} {\u03b2 : Type u_2} [inst : Group \u03b1] [inst_1 : Group \u03b2] [inst_2 : Fintype \u03b1] [inst_3 : Fintype \u03b2]\n      {f : \u03b1 \u2192 \u03b2}, IsGroupHom f \u2192 Function.Surjective f \u2192 Function.Injective f) \u2192\n    \u2200 {\u03b1 : Type u} [inst : Finite \u03b1] (f : FreeGroup \u03b1 \u2192 FreeGroup \u03b1),\n      IsGroupHom f \u2192 Function.Surjective f \u2192 Function.Injective f",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L98"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T11:31:19+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "8f19c65b2bfc664792186f241dcb596b9e1e496dce79ba3a92b21f980a452cf1"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 99,
        "start_column": 310,
        "end_line": 99,
        "end_column": 315
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 {\u03b1 : Type u} [inst : Finite \u03b1] (f : FreeGroup \u03b1 \u2192 FreeGroup \u03b1),\n      IsGroupHom f \u2192 Function.Surjective f \u2192 Function.Injective f) \u2192\n    \u2200 {\u03b1 : Type u_1} {\u03b2 : Type u_2} [inst : Group \u03b1] [inst_1 : Group \u03b2] [inst_2 : Fintype \u03b1] [inst_3 : Fintype \u03b2]\n      {f : \u03b1 \u2192 \u03b2}, IsGroupHom f \u2192 Function.Surjective f \u2192 Function.Injective f",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L99"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T11:31:19+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "c8032dd2c729ac720cb62d49451a2c981aeb6e4d6b3ecd532fc6a1494bb939c0"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 102,
        "start_column": 167,
        "end_line": 102,
        "end_column": 172
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 {n : \u2115}, 0 < n \u2192 Even n \u2192 \u2203 p q, Nat.Prime p \u2227 Nat.Prime q \u2227 p + q = n) \u2192\n    \u2200 n > 0, Even n \u2192 \u2203 p q, Nat.Prime p \u2192 Nat.Prime q \u2192 n = p + q",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L102"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T11:31:19+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "063fd3592cbaa176733ba70a71d0973e37e6ff236fbd45adaa2974c93f8f8796"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 103,
        "start_column": 167,
        "end_line": 103,
        "end_column": 172
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 n > 0, Even n \u2192 \u2203 p q, Nat.Prime p \u2192 Nat.Prime q \u2192 n = p + q) \u2192\n    \u2200 {n : \u2115}, 0 < n \u2192 Even n \u2192 \u2203 p q, Nat.Prime p \u2227 Nat.Prime q \u2227 p + q = n",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L103"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T11:31:19+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "f353d6d343f13d3a09f425181e5f8b6966a18a09e637e9097fb75b7ee0138dd5"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 108,
        "start_column": 139,
        "end_line": 108,
        "end_column": 144
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 {M : Type u} [inst : Semiring M] [inst_1 : DecidableEq M] (a : M), Even (a * a) \u2192 Even a) \u2192\n    \u2200 (n : \u2115), Even (n ^ 2) \u2192 Even n",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L108"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T11:02:22+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "a82bbd3bc010a1eac382f395b202fd4f4e94b3869b65f67b350113382ebb3fd8"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 109,
        "start_column": 139,
        "end_line": 109,
        "end_column": 144
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 (n : \u2115), Even (n ^ 2) \u2192 Even n) \u2192\n    \u2200 {M : Type u} [inst : Semiring M] [inst_1 : DecidableEq M] (a : M), Even (a * a) \u2192 Even a",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L109"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T11:02:22+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "03683f93aae155146b2ff9031a0062b3ce0c8c7abdb2ac123c469532ad1f9a38"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 113,
        "start_column": 228,
        "end_line": 113,
        "end_column": 233
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] {s : Set \u03b1}, (\u2200 x \u2208 s, \u2203 t, IsOpen t \u2227 x \u2208 t) \u2192 IsOpen s) \u2192\n    \u2200 {X : Type u} [inst : TopologicalSpace X] (S : Set X), (\u2200 x \u2208 S, \u2203 U, IsOpen U) \u2192 IsOpen S",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L113"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T11:02:22+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "8efd8d2be94635c1a1b74130540b073a2a400c5a74f289e0c987615827636587"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 114,
        "start_column": 228,
        "end_line": 114,
        "end_column": 233
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 {X : Type u} [inst : TopologicalSpace X] (S : Set X), (\u2200 x \u2208 S, \u2203 U, IsOpen U) \u2192 IsOpen S) \u2192\n    \u2200 {\u03b1 : Type u} [inst : TopologicalSpace \u03b1] {s : Set \u03b1}, (\u2200 x \u2208 s, \u2203 t, IsOpen t \u2227 x \u2208 t) \u2192 IsOpen s",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L114"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T11:02:22+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "55957027286d41a22c620de37d2d270f8a9dcbab4203ca7f8675a3d42e68268a"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 117,
        "start_column": 176,
        "end_line": 117,
        "end_column": 181
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 {\u03b1 : Type u} [inst : DecidableEq \u03b1] {x : FreeGroup \u03b1}, x \u2260 1 \u2192 \u00acIsOfFinOrder x) \u2192\n    \u2200 {G : Type u} [inst : Group G], FreeGroup G \u2192 \u2200 (g : G), g \u2260 1 \u2192 orderOf g = 0",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L117"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T11:31:19+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "b40ab7f20f9fe0d61cc51bb06acc9aac507ba23f305e32e5688f317173eb54fe"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 118,
        "start_column": 176,
        "end_line": 118,
        "end_column": 181
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 {G : Type u} [inst : Group G], FreeGroup G \u2192 \u2200 (g : G), g \u2260 1 \u2192 orderOf g = 0) \u2192\n    \u2200 {\u03b1 : Type u} [inst : DecidableEq \u03b1] {x : FreeGroup \u03b1}, x \u2260 1 \u2192 \u00acIsOfFinOrder x",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L118"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T11:31:19+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "db6be38618c06d6eb1cccad94f699c0d14649bd738e2a0f0144bdd0a94ffa084"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 121,
        "start_column": 220,
        "end_line": 121,
        "end_column": 225
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 {m n : \u2115}, 0 < m \u2192 0 < n \u2192 m.gcd n = 1 \u2192 \u2200 N > m * n, \u2203 x y, N = m * x + n * y) \u2192\n    \u2200 (a b : \u2115), a > 0 \u2192 b > 0 \u2192 a.Coprime b \u2192 \u2203 m, \u2200 N > m, \u2203 x y, N = a * x + b * y",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L121"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2024-02-07T16:00:51+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "2970e36c95d9a09709032f460e2529c4094ed1a5743cfc8b5d2a28accc55eccd"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 122,
        "start_column": 220,
        "end_line": 122,
        "end_column": 225
      },
      "debug_info": {
        "goal": "\u22a2 (\u2200 (a b : \u2115), a > 0 \u2192 b > 0 \u2192 a.Coprime b \u2192 \u2203 m, \u2200 N > m, \u2203 x y, N = a * x + b * y) \u2192\n    \u2200 {m n : \u2115}, 0 < m \u2192 0 < n \u2192 m.gcd n = 1 \u2192 \u2200 N > m * n, \u2203 x y, N = m * x + n * y",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L122"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2024-02-07T16:00:51+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "c012bdad7d34bd86c6ab24a862b0b6ebbee4758c8e340b698a069994b6112a9a"
    },
    {
      "repo": {
        "remote": "https://github.com/siddhartha-gadgil/LeanAide",
        "branch": "main",
        "commit": "c23cfc71454586d9c68bb40930665d4d9fe4e2ec",
        "lean_version": "v4.15.0"
      },
      "location": {
        "path": "LeanCodePrompts/Examples/EquivalenceProofExercises.lean",
        "start_line": 133,
        "start_column": 189,
        "end_line": 133,
        "end_column": 194
      },
      "debug_info": {
        "goal": "\u22a2 Unit \u2192\n    \u2200 {\u03b7 : Type u_1} (G : Type u_2) [inst : Group G] {\u0393 : Type u_3} [inst_1 : Group \u0393],\n      Monoid.IsTorsionFree (G \u00d7 \u0393) \u2192 Monoid.IsTorsionFree G \u2227 Monoid.IsTorsionFree \u0393",
        "url": "https://github.com/siddhartha-gadgil/LeanAide/blob/c23cfc71454586d9c68bb40930665d4d9fe4e2ec/LeanCodePrompts/Examples/EquivalenceProofExercises.lean#L133"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2022-11-12T11:31:19+05:30",
        "inclusion_date": "2025-06-06T06:19:07.353776+00:00"
      },
      "id": "b14ba536dd173e790fef68b58a847adc45b1a115502a28d442633f08daa67dc1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "rotation32",
        "commit": "ab8e6e6fa93c0fd4f936d96937778c4123f69a48",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Clean/Examples/Add32LawfulCircuit.lean",
        "start_line": 48,
        "start_column": 2,
        "end_line": 48,
        "end_column": 7
      },
      "debug_info": {
        "goal": "input : Var Inputs (F p)\nenv : Environment (F p)\ni0 : \u2115\nx y : U32 (Expression (F p))\ncarry_in x0 x1 x2 x3 y0 y1 y2 y3 : Expression (F p)\n\u22a2 (Gadgets.ByteLookup (var { index := i0 })).table.contains\n      (Vector.map (fun x => Expression.eval env x) (Gadgets.ByteLookup (var { index := i0 })).entry) \u2227\n    (True \u2192 env.get (i0 + 1) = 0 \u2228 env.get (i0 + 1) = 1) \u2227\n      Expression.eval env x0 + Expression.eval env y0 + Expression.eval env carry_in + -env.get i0 +\n            -(env.get (i0 + 1) * 256) =\n          0 \u2227\n        (Gadgets.ByteLookup (var { index := i0 + 1 + 0 + 1 + 0 + 0 })).table.contains\n            (Vector.map (fun x => Expression.eval env x)\n              (Gadgets.ByteLookup (var { index := i0 + 1 + 0 + 1 + 0 + 0 })).entry) \u2227\n          (True \u2192 env.get (i0 + 1 + 1 + 1) = 0 \u2228 env.get (i0 + 1 + 1 + 1) = 1) \u2227\n            Expression.eval env x1 + Expression.eval env y1 + env.get (i0 + 1) + -env.get (i0 + 1 + 1) +\n                  -(env.get (i0 + 1 + 1 + 1) * 256) =\n                0 \u2227\n              (Gadgets.ByteLookup (var { index := i0 + 1 + 0 + 1 + 0 + 0 + 1 + 0 + 1 + 0 + 0 })).table.contains\n                  (Vector.map (fun x => Expression.eval env x)\n                    (Gadgets.ByteLookup (var { index := i0 + 1 + 0 + 1 + 0 + 0 + 1 + 0 + 1 + 0 + 0 })).entry) \u2227\n                (True \u2192 env.get (i0 + 1 + 1 + 1 + 1 + 1) = 0 \u2228 env.get (i0 + 1 + 1 + 1 + 1 + 1) = 1) \u2227\n                  Expression.eval env x2 + Expression.eval env y2 + env.get (i0 + 1 + 1 + 1) +\n                          -env.get (i0 + 1 + 1 + 1 + 1) +\n                        -(env.get (i0 + 1 + 1 + 1 + 1 + 1) * 256) =\n                      0 \u2227\n                    (Gadgets.ByteLookup\n                              (var\n                                {\n                                  index :=\n                                    i0 + 1 + 0 + 1 + 0 + 0 + 1 + 0 + 1 + 0 + 0 + 1 + 0 + 1 + 0 + 0 })).table.contains\n                        (Vector.map (fun x => Expression.eval env x)\n                          (Gadgets.ByteLookup\n                              (var\n                                { index := i0 + 1 + 0 + 1 + 0 + 0 + 1 + 0 + 1 + 0 + 0 + 1 + 0 + 1 + 0 + 0 })).entry) \u2227\n                      (True \u2192\n                          env.get (i0 + 1 + 1 + 1 + 1 + 1 + 1 + 1) = 0 \u2228 env.get (i0 + 1 + 1 + 1 + 1 + 1 + 1 + 1) = 1) \u2227\n                        Expression.eval env x3 + Expression.eval env y3 + env.get (i0 + 1 + 1 + 1 + 1 + 1) +\n                              -env.get (i0 + 1 + 1 + 1 + 1 + 1 + 1) +\n                            -(env.get (i0 + 1 + 1 + 1 + 1 + 1 + 1 + 1) * 256) =\n                          0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/ab8e6e6fa93c0fd4f936d96937778c4123f69a48/Clean/Examples/Add32LawfulCircuit.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "0130f16e5d6d",
        "blame_date": "2025-04-09T16:01:46+02:00",
        "inclusion_date": "2025-06-06T07:08:38.978762+00:00"
      },
      "id": "4052b6ece5170fdcf37e32b0aaa7446b2dd0d1a18f5e0e25c0e5d2da3c9fca9f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "blake3-blueprint",
        "commit": "c710c9904f3cdb6a70012542e1b7ca5642de15af",
        "lean_version": "v4.17.0"
      },
      "location": {
        "path": "Clean/Gadgets/ByteDecomposition/ByteDecomposition.lean",
        "start_line": 95,
        "start_column": 2,
        "end_line": 95,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 2 ^ 16 + 2 ^ 8)\noffset : Fin 8\ni0 : \u2115\nenv : Environment (F p)\nx_var : Var field (F p)\nx : F p\nh_eval : Expression.eval env x_var = x\nas : ZMod.val x < 256\nhenv :\n  env.get i0 = FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191offset, \u22ef\u27e9 \u22ef \u2227\n    env.get (i0 + 1) = FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191offset)\nh0 : env.get i0 = FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191offset, \u22ef\u27e9 \u22ef\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191offset)\n\u22a2 (ZMod.val (FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191offset, \u22ef\u27e9 \u22ef) < 2 ^ \u2191offset.castSucc \u2227\n      ZMod.val (FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191offset)) < 2 ^ \u2191(8 - offset.castSucc)) \u2227\n    FieldUtils.mod (Expression.eval env x_var) \u27e82 ^ \u2191offset, \u22ef\u27e9 \u22ef +\n          FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191offset) * 2 ^ \u2191offset +\n        -x =\n      0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/c710c9904f3cdb6a70012542e1b7ca5642de15af/Clean/Gadgets/ByteDecomposition/ByteDecomposition.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-05-15T17:59:45+02:00",
        "inclusion_date": "2025-05-25T07:11:19.300056+00:00"
      },
      "id": "74b0c0d504d68ffe06c9e81635cd8db56a92bf63319a791d180d9b1b3b676f41"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "rotation32",
        "commit": "ab8e6e6fa93c0fd4f936d96937778c4123f69a48",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Clean/Gadgets/ByteDecomposition/ByteDecomposition.lean",
        "start_line": 195,
        "start_column": 2,
        "end_line": 195,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case mk.mk\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 2 ^ 16 + 2 ^ 8)\noffset : Fin 8\ni0 : \u2115\nenv : Environment (F p)\nx0_var x1_var x2_var x3_var x4_var x5_var x6_var x7_var : Expression (F p)\nhenv :\n  env.uses_local_witnesses_completeness\n    ((ElaboratedCircuit.main\n          { x0 := x0_var, x1 := x1_var, x2 := x2_var, x3 := x3_var, x4 := x4_var, x5 := x5_var, x6 := x6_var,\n            x7 := x7_var }).operations\n      i0)\nx0 x1 x2 x3 x4 x5 x6 x7 : F p\nh_eval :\n  eval env\n      { x0 := x0_var, x1 := x1_var, x2 := x2_var, x3 := x3_var, x4 := x4_var, x5 := x5_var, x6 := x6_var,\n        x7 := x7_var } =\n    { x0 := x0, x1 := x1, x2 := x2, x3 := x3, x4 := x4, x5 := x5, x6 := x6, x7 := x7 }\nas : { x0 := x0, x1 := x1, x2 := x2, x3 := x3, x4 := x4, x5 := x5, x6 := x6, x7 := x7 }.is_normalized\n\u22a2 Circuit.constraints_hold.completeness env\n    ((ElaboratedCircuit.main\n          { x0 := x0_var, x1 := x1_var, x2 := x2_var, x3 := x3_var, x4 := x4_var, x5 := x5_var, x6 := x6_var,\n            x7 := x7_var }).operations\n      i0)",
        "url": "https://github.com/Verified-zkEVM/clean/blob/ab8e6e6fa93c0fd4f936d96937778c4123f69a48/Clean/Gadgets/ByteDecomposition/ByteDecomposition.lean#L195"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-24T23:40:51+02:00",
        "inclusion_date": "2025-06-06T07:08:38.978762+00:00"
      },
      "id": "8ae0171e83762ac495f438faf3149e394e8580f058ca053cd947c37477d645ea"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "rotation32",
        "commit": "ab8e6e6fa93c0fd4f936d96937778c4123f69a48",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Clean/Gadgets/Rotation64/Rotation64Bits.lean",
        "start_line": 102,
        "start_column": 2,
        "end_line": 102,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 2 ^ 16 + 2 ^ 8)\noffset : Fin 8\nx0 x1 x2 x3 x4 x5 x6 x7 y0 y1 y2 y3 y4 y5 y6 y7 x0_l x1_l x2_l x3_l x4_l x5_l x6_l x7_l x0_h x1_h x2_h x3_h x4_h x5_h x6_h x7_h :\n  F p\nh_x0_l : ZMod.val x0_l = ZMod.val x0 % 2 ^ \u2191offset\nh_x0_h : ZMod.val x0_h = ZMod.val x0 / 2 ^ \u2191offset\nh_x1_l : ZMod.val x1_l = ZMod.val x1 % 2 ^ \u2191offset\nh_x1_h : ZMod.val x1_h = ZMod.val x1 / 2 ^ \u2191offset\nh_x2_l : ZMod.val x2_l = ZMod.val x2 % 2 ^ \u2191offset\nh_x2_h : ZMod.val x2_h = ZMod.val x2 / 2 ^ \u2191offset\nh_x3_l : ZMod.val x3_l = ZMod.val x3 % 2 ^ \u2191offset\nh_x3_h : ZMod.val x3_h = ZMod.val x3 / 2 ^ \u2191offset\nh_x4_l : ZMod.val x4_l = ZMod.val x4 % 2 ^ \u2191offset\nh_x4_h : ZMod.val x4_h = ZMod.val x4 / 2 ^ \u2191offset\nh_x5_l : ZMod.val x5_l = ZMod.val x5 % 2 ^ \u2191offset\nh_x5_h : ZMod.val x5_h = ZMod.val x5 / 2 ^ \u2191offset\nh_x6_l : ZMod.val x6_l = ZMod.val x6 % 2 ^ \u2191offset\nh_x6_h : ZMod.val x6_h = ZMod.val x6 / 2 ^ \u2191offset\nh_x7_l : ZMod.val x7_l = ZMod.val x7 % 2 ^ \u2191offset\nh_x7_h : ZMod.val x7_h = ZMod.val x7 / 2 ^ \u2191offset\neq0 : x1_l * 2 ^ \u2191offset + x0_h + -y0 = 0\neq1 : x2_l * 2 ^ \u2191offset + x1_h + -y1 = 0\neq2 : x3_l * 2 ^ \u2191offset + x2_h + -y2 = 0\neq3 : x4_l * 2 ^ \u2191offset + x3_h + -y3 = 0\neq4 : x5_l * 2 ^ \u2191offset + x4_h + -y4 = 0\neq5 : x6_l * 2 ^ \u2191offset + x5_h + -y5 = 0\neq6 : x7_l * 2 ^ \u2191offset + x6_h + -y6 = 0\neq7 : x0_l * 2 ^ \u2191offset + x7_h + -y7 = 0\n\u22a2 let x_val :=\n    ZMod.val x0 + ZMod.val x1 * 256 + ZMod.val x2 * 256 ^ 2 + ZMod.val x3 * 256 ^ 3 + ZMod.val x4 * 256 ^ 4 +\n          ZMod.val x5 * 256 ^ 5 +\n        ZMod.val x6 * 256 ^ 6 +\n      ZMod.val x7 * 256 ^ 7;\n  let y_val :=\n    ZMod.val y0 + ZMod.val y1 * 256 + ZMod.val y2 * 256 ^ 2 + ZMod.val y3 * 256 ^ 3 + ZMod.val y4 * 256 ^ 4 +\n          ZMod.val y5 * 256 ^ 5 +\n        ZMod.val y6 * 256 ^ 6 +\n      ZMod.val y7 * 256 ^ 7;\n  y_val = x_val % 2 ^ (\u2191offset % 64) * 2 ^ (64 - \u2191offset % 64) + x_val / 2 ^ (\u2191offset % 64)",
        "url": "https://github.com/Verified-zkEVM/clean/blob/ab8e6e6fa93c0fd4f936d96937778c4123f69a48/Clean/Gadgets/Rotation64/Rotation64Bits.lean#L102"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-05-14T10:54:41+02:00",
        "inclusion_date": "2025-06-06T07:08:38.978762+00:00"
      },
      "id": "e90243c0be4849ce84b68f51a982c7b070f40c5c23978c42989ca55f750f3e66"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "blake3-blueprint",
        "commit": "c710c9904f3cdb6a70012542e1b7ca5642de15af",
        "lean_version": "v4.17.0"
      },
      "location": {
        "path": "Clean/Gadgets/Rotation64/Rotation64Bits.lean",
        "start_line": 144,
        "start_column": 2,
        "end_line": 144,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 2 ^ 16 + 2 ^ 8)\noffset : Fin 8\n\u22a2 Completeness (F p) (elaborated offset) assumptions",
        "url": "https://github.com/Verified-zkEVM/clean/blob/c710c9904f3cdb6a70012542e1b7ca5642de15af/Clean/Gadgets/Rotation64/Rotation64Bits.lean#L144"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-05-13T11:26:47+02:00",
        "inclusion_date": "2025-05-25T07:11:19.300056+00:00"
      },
      "id": "73640cd7f201a98d030dbe244c200522848e43f9a7ee96fa6af9dea3d47ffe50"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "rotation32",
        "commit": "ab8e6e6fa93c0fd4f936d96937778c4123f69a48",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Clean/Gadgets/Rotation64/Theorems.lean",
        "start_line": 22,
        "start_column": 2,
        "end_line": 22,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\nx : \u2115\nh : x < 2 ^ 64\noffset : \u2115\n\u22a2 rot_right64 x offset = (x.toUInt64.toBitVec.rotateRight offset).toNat",
        "url": "https://github.com/Verified-zkEVM/clean/blob/ab8e6e6fa93c0fd4f936d96937778c4123f69a48/Clean/Gadgets/Rotation64/Theorems.lean#L22"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-05-14T10:55:07+02:00",
        "inclusion_date": "2025-06-06T07:08:38.978762+00:00"
      },
      "id": "57d1296e0826556c3c43038cbd33766dbdbadde9de97ac4497689d8690e4a079"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "rotation32",
        "commit": "ab8e6e6fa93c0fd4f936d96937778c4123f69a48",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Clean/Gadgets/Rotation64/Theorems.lean",
        "start_line": 41,
        "start_column": 35,
        "end_line": 41,
        "end_column": 40
      },
      "debug_info": {
        "goal": "x n m : \u2115\nh : x < 2 ^ 64\n\u22a2 (x.toUInt64.toBitVec.rotateRight n).toNat < 2 ^ 64",
        "url": "https://github.com/Verified-zkEVM/clean/blob/ab8e6e6fa93c0fd4f936d96937778c4123f69a48/Clean/Gadgets/Rotation64/Theorems.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-05-14T10:55:07+02:00",
        "inclusion_date": "2025-06-06T07:08:38.978762+00:00"
      },
      "id": "3ae23ad98e984d19248d28aca959bc65394356bc6da1b8f55e4dabdba2937fb8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "rotation32",
        "commit": "ab8e6e6fa93c0fd4f936d96937778c4123f69a48",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Clean/Gadgets/Rotation64/Theorems.lean",
        "start_line": 43,
        "start_column": 2,
        "end_line": 43,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x n m : \u2115\nh : x < 2 ^ 64\n\u22a2 ((x.toUInt64.toBitVec.rotateRight n).toNat.toUInt64.toBitVec.rotateRight m).toNat =\n    (x.toUInt64.toBitVec.rotateRight (n + m)).toNat",
        "url": "https://github.com/Verified-zkEVM/clean/blob/ab8e6e6fa93c0fd4f936d96937778c4123f69a48/Clean/Gadgets/Rotation64/Theorems.lean#L43"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-05-13T16:41:17+02:00",
        "inclusion_date": "2025-06-06T07:08:38.978762+00:00"
      },
      "id": "7f447aff33e093822bc37c803037428cb7a96b71beab70f23faac17e623dafba"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "blake3-blueprint",
        "commit": "c710c9904f3cdb6a70012542e1b7ca5642de15af",
        "lean_version": "v4.17.0"
      },
      "location": {
        "path": "Clean/Gadgets/Keccak/ThetaD.lean",
        "start_line": 93,
        "start_column": 2,
        "end_line": 93,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 2 ^ 16 + 2 ^ 8)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var KeccakRow (F p)\nh_env : env.uses_local_witnesses_completeness ((ElaboratedCircuit.main state_var).operations i0)\nstate : KeccakRow (F p)\nh_assumptions : assumptions state\nh_input : Vector.map (eval env) state_var = state\n\u22a2 ((((((((Rotation64.assumptions (eval env state_var[1]) \u2227\n                    (eval env state_var[4]).is_normalized \u2227\n                      (eval env (ElaboratedCircuit.output state_var[1] i0)).is_normalized) \u2227\n                  Rotation64.assumptions (eval env state_var[2])) \u2227\n                (eval env state_var[0]).is_normalized \u2227\n                  (eval env\n                      (ElaboratedCircuit.output state_var[2]\n                        (i0 + (ElaboratedCircuit.local_length U64 state_var[1] + 8)))).is_normalized) \u2227\n              Rotation64.assumptions (eval env state_var[3])) \u2227\n            (eval env state_var[1]).is_normalized \u2227\n              (eval env\n                  (ElaboratedCircuit.output state_var[3]\n                    (i0 +\n                      (ElaboratedCircuit.local_length U64 state_var[1] +\n                        (8 + (ElaboratedCircuit.local_length U64 state_var[2] + 8)))))).is_normalized) \u2227\n          Rotation64.assumptions (eval env state_var[4])) \u2227\n        (eval env state_var[2]).is_normalized \u2227\n          (eval env\n              (ElaboratedCircuit.output state_var[4]\n                (i0 +\n                  (ElaboratedCircuit.local_length U64 state_var[1] +\n                    (8 +\n                      (ElaboratedCircuit.local_length U64 state_var[2] +\n                        (8 + (ElaboratedCircuit.local_length U64 state_var[3] + 8)))))))).is_normalized) \u2227\n      Rotation64.assumptions (eval env state_var[0])) \u2227\n    (eval env state_var[3]).is_normalized \u2227\n      (eval env\n          (ElaboratedCircuit.output state_var[0]\n            (i0 +\n              (ElaboratedCircuit.local_length U64 state_var[1] +\n                (8 +\n                  (ElaboratedCircuit.local_length U64 state_var[2] +\n                    (8 +\n                      (ElaboratedCircuit.local_length U64 state_var[3] +\n                        (8 + (ElaboratedCircuit.local_length U64 state_var[4] + 8)))))))))).is_normalized",
        "url": "https://github.com/Verified-zkEVM/clean/blob/c710c9904f3cdb6a70012542e1b7ca5642de15af/Clean/Gadgets/Keccak/ThetaD.lean#L93"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-15T00:48:02+02:00",
        "inclusion_date": "2025-05-25T07:11:19.300056+00:00"
      },
      "id": "c97b72c6c746ca6a5cf69a3d0da4c36e62d4fb22f473375a9f93a0b3fcb8ef12"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "rotation32",
        "commit": "ab8e6e6fa93c0fd4f936d96937778c4123f69a48",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Clean/Gadgets/ByteDecomposition/ByteDecomposition.lean",
        "start_line": 95,
        "start_column": 2,
        "end_line": 95,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 2 ^ 16 + 2 ^ 8)\noffset : Fin 8\ni0 : \u2115\nenv : Environment (F p)\nx_var : Var field (F p)\nx : F p\nh_eval : Expression.eval env x_var = x\nas : ZMod.val x < 256\nhenv :\n  env.get i0 =\n      FieldUtils.mod (Expression.eval env x_var)\n        \u27e82 ^ \u2191offset, Gadgets.ByteDecomposition.byte_decomposition._proof_4 offset\u27e9\n        (Gadgets.ByteDecomposition.byte_decomposition._proof_5 p p_large_enough offset) \u2227\n    env.get (i0 + 1) = FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191offset)\nh0 :\n  env.get i0 =\n    FieldUtils.mod (Expression.eval env x_var)\n      \u27e82 ^ \u2191offset, Gadgets.ByteDecomposition.byte_decomposition._proof_4 offset\u27e9\n      (Gadgets.ByteDecomposition.byte_decomposition._proof_5 p p_large_enough offset)\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191offset)\n\u22a2 (ZMod.val\n          (FieldUtils.mod (Expression.eval env x_var)\n            \u27e82 ^ \u2191offset, Gadgets.ByteDecomposition.byte_decomposition._proof_4 offset\u27e9\n            (Gadgets.ByteDecomposition.byte_decomposition._proof_5 p p_large_enough offset)) <\n        2 ^ \u2191offset.castSucc \u2227\n      ZMod.val (FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191offset)) < 2 ^ \u2191(8 - offset.castSucc)) \u2227\n    FieldUtils.mod (Expression.eval env x_var)\n            \u27e82 ^ \u2191offset, Gadgets.ByteDecomposition.byte_decomposition._proof_4 offset\u27e9\n            (Gadgets.ByteDecomposition.byte_decomposition._proof_5 p p_large_enough offset) +\n          FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191offset) * 2 ^ \u2191offset +\n        -x =\n      0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/ab8e6e6fa93c0fd4f936d96937778c4123f69a48/Clean/Gadgets/ByteDecomposition/ByteDecomposition.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-05-15T17:59:45+02:00",
        "inclusion_date": "2025-06-06T07:08:38.978762+00:00"
      },
      "id": "001432a7fcb459d7f6b69e66d5ed48fcde5234876a654974d20615fa30271050"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "rotation32",
        "commit": "ab8e6e6fa93c0fd4f936d96937778c4123f69a48",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Clean/Gadgets/Rotation64/Rotation64Bits.lean",
        "start_line": 144,
        "start_column": 2,
        "end_line": 144,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 2 ^ 16 + 2 ^ 8)\noffset : Fin 8\n\u22a2 Completeness (F p) (Gadgets.Rotation64Bits.elaborated p inst\u271d p_large_enough offset)\n    (Gadgets.Rotation64Bits.assumptions p)",
        "url": "https://github.com/Verified-zkEVM/clean/blob/ab8e6e6fa93c0fd4f936d96937778c4123f69a48/Clean/Gadgets/Rotation64/Rotation64Bits.lean#L144"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-05-13T11:26:47+02:00",
        "inclusion_date": "2025-06-06T07:08:38.978762+00:00"
      },
      "id": "44047896a8a7a4d2fbfaea65f954031f04dab9c3deb65f9ad8a9b409a96796ba"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "rotation32",
        "commit": "ab8e6e6fa93c0fd4f936d96937778c4123f69a48",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Clean/Gadgets/Keccak/ThetaD.lean",
        "start_line": 93,
        "start_column": 2,
        "end_line": 93,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 2 ^ 16 + 2 ^ 8)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var KeccakRow (F p)\nh_env : env.uses_local_witnesses_completeness ((ElaboratedCircuit.main state_var).operations i0)\nstate : KeccakRow (F p)\nh_assumptions : Gadgets.Keccak256.ThetaD.assumptions p state\nh_input : Vector.map (eval env) state_var = state\n\u22a2 ((((((((Rotation64.assumptions (eval env state_var[1]) \u2227\n                    (eval env state_var[4]).is_normalized \u2227\n                      (eval env (ElaboratedCircuit.output state_var[1] i0)).is_normalized) \u2227\n                  Rotation64.assumptions (eval env state_var[2])) \u2227\n                (eval env state_var[0]).is_normalized \u2227\n                  (eval env\n                      (ElaboratedCircuit.output state_var[2]\n                        (i0 + (ElaboratedCircuit.local_length U64 state_var[1] + 8)))).is_normalized) \u2227\n              Rotation64.assumptions (eval env state_var[3])) \u2227\n            (eval env state_var[1]).is_normalized \u2227\n              (eval env\n                  (ElaboratedCircuit.output state_var[3]\n                    (i0 +\n                      (ElaboratedCircuit.local_length U64 state_var[1] +\n                        (8 + (ElaboratedCircuit.local_length U64 state_var[2] + 8)))))).is_normalized) \u2227\n          Rotation64.assumptions (eval env state_var[4])) \u2227\n        (eval env state_var[2]).is_normalized \u2227\n          (eval env\n              (ElaboratedCircuit.output state_var[4]\n                (i0 +\n                  (ElaboratedCircuit.local_length U64 state_var[1] +\n                    (8 +\n                      (ElaboratedCircuit.local_length U64 state_var[2] +\n                        (8 + (ElaboratedCircuit.local_length U64 state_var[3] + 8)))))))).is_normalized) \u2227\n      Rotation64.assumptions (eval env state_var[0])) \u2227\n    (eval env state_var[3]).is_normalized \u2227\n      (eval env\n          (ElaboratedCircuit.output state_var[0]\n            (i0 +\n              (ElaboratedCircuit.local_length U64 state_var[1] +\n                (8 +\n                  (ElaboratedCircuit.local_length U64 state_var[2] +\n                    (8 +\n                      (ElaboratedCircuit.local_length U64 state_var[3] +\n                        (8 + (ElaboratedCircuit.local_length U64 state_var[4] + 8)))))))))).is_normalized",
        "url": "https://github.com/Verified-zkEVM/clean/blob/ab8e6e6fa93c0fd4f936d96937778c4123f69a48/Clean/Gadgets/Keccak/ThetaD.lean#L93"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-15T00:48:02+02:00",
        "inclusion_date": "2025-06-06T07:08:38.978762+00:00"
      },
      "id": "52a9864980fbae47e953ce5d691096812f6c283dcb6c833e6035d8434c6e4e69"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "num2bits",
        "commit": "fe70fa95eb5c5d39b68d32d50e62318a233c082b",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Clean/Gadgets/Bits.lean",
        "start_line": 57,
        "start_column": 4,
        "end_line": 57,
        "end_column": 9
      },
      "debug_info": {
        "goal": "p : \u2115\nprime : Fact (Nat.Prime p)\nn k : \u2115\nenv : Environment (F p)\nx_var : Var field (F p)\nx : field (F p)\nh_input : Expression.eval env x_var = x\nh_assumptions : ZMod.val x < 2 ^ n\nh_holds :\n  match\n    (Circuit.forEach (Vector.mapRange n fun i => var { index := k + i })\n          (fun bit =>\n            StateT.modifyGet fun s =>\n              (PUnit.unit,\n                { offset := s.offset + ElaboratedCircuit.local_length unit bit,\n                  withLength := s.withLength.subcircuit (Boolean.circuit.to_subcircuit s.offset bit) }))\n          (ConstantLawfulCircuits.from_constant_length (fun a => inferInstance) (Gadgets.ToBits.main._proof_3 p prime))\n          { offset := k + n,\n            withLength :=\n              (Operations.empty k).witness n fun eval =>\n                Vector.ofFn fun i =>\n                  if (ZMod.val (Expression.eval eval x_var)).testBit \u2191i = true then 1 else 0 }).2.offset,\n    (Circuit.forEach (Vector.mapRange n fun i => var { index := k + i })\n          (fun bit =>\n            StateT.modifyGet fun s =>\n              (PUnit.unit,\n                { offset := s.offset + ElaboratedCircuit.local_length unit bit,\n                  withLength := s.withLength.subcircuit (Boolean.circuit.to_subcircuit s.offset bit) }))\n          (ConstantLawfulCircuits.from_constant_length (fun a => inferInstance) (Gadgets.ToBits.main._proof_3 p prime))\n          { offset := k + n,\n            withLength :=\n              (Operations.empty k).witness n fun eval =>\n                Vector.ofFn fun i =>\n                  if (ZMod.val (Expression.eval eval x_var)).testBit \u2191i = true then 1 else 0 }).2.withLength,\n    (Equality.circuit id).to_subcircuit\n      (Circuit.forEach (Vector.mapRange n fun i => var { index := k + i })\n            (fun bit =>\n              StateT.modifyGet fun s =>\n                (PUnit.unit,\n                  { offset := s.offset + ElaboratedCircuit.local_length unit bit,\n                    withLength := s.withLength.subcircuit (Boolean.circuit.to_subcircuit s.offset bit) }))\n            (ConstantLawfulCircuits.from_constant_length (fun a => inferInstance)\n              (Gadgets.ToBits.main._proof_3 p prime))\n            { offset := k + n,\n              withLength :=\n                (Operations.empty k).witness n fun eval =>\n                  Vector.ofFn fun i =>\n                    if (ZMod.val (Expression.eval eval x_var)).testBit \u2191i = true then 1 else 0 }).2.offset\n      (x_var, Fin.foldl n (fun acc x => acc + var { index := k + \u2191x } * Expression.const (2 ^ \u2191x)) 0) with\n  | m, Operations.empty .(m), s =>\n    Expression.eval env x_var =\n      Expression.eval env (Fin.foldl n (fun acc x => acc + var { index := k + \u2191x } * Expression.const (2 ^ \u2191x)) 0)\n  | x, x_1, s =>\n    Circuit.constraints_hold.soundness env\n        (Circuit.forEach (Vector.mapRange n fun i => var { index := k + i })\n              (fun bit =>\n                StateT.modifyGet fun s =>\n                  (PUnit.unit,\n                    { offset := s.offset + ElaboratedCircuit.local_length unit bit,\n                      withLength := s.withLength.subcircuit (Boolean.circuit.to_subcircuit s.offset bit) }))\n              (ConstantLawfulCircuits.from_constant_length (fun a => inferInstance)\n                (Gadgets.ToBits.main._proof_3 p prime))\n              { offset := k + n,\n                withLength :=\n                  (Operations.empty k).witness n fun eval =>\n                    Vector.ofFn fun i =>\n                      if (ZMod.val (Expression.eval eval x_var)).testBit \u2191i = true then 1 else 0 }).2.withLength \u2227\n      Expression.eval env x_var =\n        Expression.eval env (Fin.foldl n (fun acc x => acc + var { index := k + \u2191x } * Expression.const (2 ^ \u2191x)) 0)\n\u22a2 \u2200 i < n, env.get (k + i) = if (ZMod.val x).testBit i = true then 1 else 0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/fe70fa95eb5c5d39b68d32d50e62318a233c082b/Clean/Gadgets/Bits.lean#L57"
      },
      "metadata": {
        "blame_email_hash": "0130f16e5d6d",
        "blame_date": "2025-05-23T17:56:13+02:00",
        "inclusion_date": "2025-05-25T07:22:18.332874+00:00"
      },
      "id": "b0c6b16f96678fba0d31f695cf18f4aef9fca34891abab9e89999a8e1020e98a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "num2bits",
        "commit": "fe70fa95eb5c5d39b68d32d50e62318a233c082b",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Clean/Gadgets/Bits.lean",
        "start_line": 62,
        "start_column": 4,
        "end_line": 62,
        "end_column": 9
      },
      "debug_info": {
        "goal": "p : \u2115\nprime : Fact (Nat.Prime p)\nn k : \u2115\nenv : Environment (F p)\nx_var : Var field (F p)\nx : field (F p)\nh_input : Expression.eval env x_var = x\nh_assumptions : ZMod.val x < 2 ^ n\nh_env :\n  env.uses_local_witnesses_completeness\n      (Circuit.forEach (Vector.mapRange n fun i => var { index := k + i })\n            (fun bit =>\n              StateT.modifyGet fun s =>\n                (PUnit.unit,\n                  { offset := s.offset + ElaboratedCircuit.local_length unit bit,\n                    withLength := s.withLength.subcircuit (Boolean.circuit.to_subcircuit s.offset bit) }))\n            (ConstantLawfulCircuits.from_constant_length (fun a => inferInstance)\n              (Gadgets.ToBits.main._proof_3 p prime))\n            { offset := k + n,\n              withLength :=\n                (Operations.empty k).witness n fun eval =>\n                  Vector.ofFn fun i =>\n                    if (ZMod.val (Expression.eval eval x_var)).testBit \u2191i = true then 1 else 0 }).2.withLength \u2227\n    ((Equality.circuit id).to_subcircuit\n          (Circuit.forEach (Vector.mapRange n fun i => var { index := k + i })\n                (fun bit =>\n                  StateT.modifyGet fun s =>\n                    (PUnit.unit,\n                      { offset := s.offset + ElaboratedCircuit.local_length unit bit,\n                        withLength := s.withLength.subcircuit (Boolean.circuit.to_subcircuit s.offset bit) }))\n                (ConstantLawfulCircuits.from_constant_length (fun a => inferInstance)\n                  (Gadgets.ToBits.main._proof_3 p prime))\n                { offset := k + n,\n                  withLength :=\n                    (Operations.empty k).witness n fun eval =>\n                      Vector.ofFn fun i =>\n                        if (ZMod.val (Expression.eval eval x_var)).testBit \u2191i = true then 1 else 0 }).2.offset\n          (x_var,\n            Fin.foldl n (fun acc x => acc + var { index := k + \u2191x } * Expression.const (2 ^ \u2191x))\n              0)).uses_local_witnesses\n      env\n\u22a2 match\n    (Circuit.forEach (Vector.mapRange n fun i => var { index := k + i })\n          (fun bit =>\n            StateT.modifyGet fun s =>\n              (PUnit.unit,\n                { offset := s.offset + ElaboratedCircuit.local_length unit bit,\n                  withLength := s.withLength.subcircuit (Boolean.circuit.to_subcircuit s.offset bit) }))\n          (ConstantLawfulCircuits.from_constant_length (fun a => inferInstance) (Gadgets.ToBits.main._proof_3 p prime))\n          { offset := k + n,\n            withLength :=\n              (Operations.empty k).witness n fun eval =>\n                Vector.ofFn fun i =>\n                  if (ZMod.val (Expression.eval eval x_var)).testBit \u2191i = true then 1 else 0 }).2.offset,\n    (Circuit.forEach (Vector.mapRange n fun i => var { index := k + i })\n          (fun bit =>\n            StateT.modifyGet fun s =>\n              (PUnit.unit,\n                { offset := s.offset + ElaboratedCircuit.local_length unit bit,\n                  withLength := s.withLength.subcircuit (Boolean.circuit.to_subcircuit s.offset bit) }))\n          (ConstantLawfulCircuits.from_constant_length (fun a => inferInstance) (Gadgets.ToBits.main._proof_3 p prime))\n          { offset := k + n,\n            withLength :=\n              (Operations.empty k).witness n fun eval =>\n                Vector.ofFn fun i =>\n                  if (ZMod.val (Expression.eval eval x_var)).testBit \u2191i = true then 1 else 0 }).2.withLength,\n    (Equality.circuit id).to_subcircuit\n      (Circuit.forEach (Vector.mapRange n fun i => var { index := k + i })\n            (fun bit =>\n              StateT.modifyGet fun s =>\n                (PUnit.unit,\n                  { offset := s.offset + ElaboratedCircuit.local_length unit bit,\n                    withLength := s.withLength.subcircuit (Boolean.circuit.to_subcircuit s.offset bit) }))\n            (ConstantLawfulCircuits.from_constant_length (fun a => inferInstance)\n              (Gadgets.ToBits.main._proof_3 p prime))\n            { offset := k + n,\n              withLength :=\n                (Operations.empty k).witness n fun eval =>\n                  Vector.ofFn fun i =>\n                    if (ZMod.val (Expression.eval eval x_var)).testBit \u2191i = true then 1 else 0 }).2.offset\n      (x_var, Fin.foldl n (fun acc x => acc + var { index := k + \u2191x } * Expression.const (2 ^ \u2191x)) 0) with\n  | m, Operations.empty .(m), s =>\n    Expression.eval env x_var =\n      Expression.eval env (Fin.foldl n (fun acc x => acc + var { index := k + \u2191x } * Expression.const (2 ^ \u2191x)) 0)\n  | x, x_1, s =>\n    Circuit.constraints_hold.completeness env\n        (Circuit.forEach (Vector.mapRange n fun i => var { index := k + i })\n              (fun bit =>\n                StateT.modifyGet fun s =>\n                  (PUnit.unit,\n                    { offset := s.offset + ElaboratedCircuit.local_length unit bit,\n                      withLength := s.withLength.subcircuit (Boolean.circuit.to_subcircuit s.offset bit) }))\n              (ConstantLawfulCircuits.from_constant_length (fun a => inferInstance)\n                (Gadgets.ToBits.main._proof_3 p prime))\n              { offset := k + n,\n                withLength :=\n                  (Operations.empty k).witness n fun eval =>\n                    Vector.ofFn fun i =>\n                      if (ZMod.val (Expression.eval eval x_var)).testBit \u2191i = true then 1 else 0 }).2.withLength \u2227\n      Expression.eval env x_var =\n        Expression.eval env (Fin.foldl n (fun acc x => acc + var { index := k + \u2191x } * Expression.const (2 ^ \u2191x)) 0)",
        "url": "https://github.com/Verified-zkEVM/clean/blob/fe70fa95eb5c5d39b68d32d50e62318a233c082b/Clean/Gadgets/Bits.lean#L62"
      },
      "metadata": {
        "blame_email_hash": "0130f16e5d6d",
        "blame_date": "2025-05-23T17:56:13+02:00",
        "inclusion_date": "2025-05-25T07:22:18.332874+00:00"
      },
      "id": "7d551fb92a802b27274735eb877a266592b6e82182d7e6a094ec0794db89aabe"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "rotation-composition",
        "commit": "c28f35fab01a83f0942f37eb0ecd41b149b59dfd",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Clean/Gadgets/Rotation64/Theorems.lean",
        "start_line": 171,
        "start_column": 2,
        "end_line": 171,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case pred\nx n m : \u2115\nh : x < 2 ^ 64\nx' : BitVec 64 := BitVec.ofNat 64 x\ni : \u2115\nhi : i < 64\n\u22a2 (bif decide (i < 64 - m % 64) then (x'.rotateRight n).getLsbD (m % 64 + i)\n    else decide (i < 64) && (x'.rotateRight n).getLsbD (i - (64 - m % 64))) =\n    (x'.rotateRight (n + m)).getLsbD i",
        "url": "https://github.com/Verified-zkEVM/clean/blob/c28f35fab01a83f0942f37eb0ecd41b149b59dfd/Clean/Gadgets/Rotation64/Theorems.lean#L171"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-05-13T16:41:17+02:00",
        "inclusion_date": "2025-05-25T07:25:38.579713+00:00"
      },
      "id": "92720eb8e709c6b9c2a459d883b49596c566037fee15e7d4bd4ccd504dc98fe6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 62,
        "start_column": 9,
        "end_line": 62,
        "end_column": 14
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b9 : (i : \u03b9\u209b\u1d62) \u2192 OracleInterface (OStatement i)\nWitEquiv : Type\ninst\u271d : OracleInterface WitEquiv\nequiv : Witness \u2243 WitEquiv\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 Unit),\n    (OStatement \u2295\u1d65 fun x => WitEquiv) i =\n      match (\u22ef.mpr sorry) i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => (pSpec WitEquiv).Message j",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/ProofSystem/Components.lean#L62"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "97aa16f9a8af4f414c4128b572e9e6a19fbd44cd675108fc3610e421ab8bd6bc"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 80,
        "start_column": 2,
        "end_line": 80,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b2 : (i : \u03b9\u209b\u1d62) \u2192 OracleInterface (OStatement i)\nWitEquiv : Type\ninst\u271d\u00b9 : OracleInterface WitEquiv\nequiv : Witness \u2243 WitEquiv\nrelIn : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Witness \u2192 Prop\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness relIn (toRelOut Statement Witness OStatement WitEquiv equiv relIn)\n    (oracleReduction oSpec Statement Witness OStatement WitEquiv equiv)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/ProofSystem/Components.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "dbcc645bb6f878d24f46fc861fa646b55f514e691bb48d6d2a6e90ce49e71266"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 141,
        "start_column": 9,
        "end_line": 141,
        "end_column": 14
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst : (i : \u03b9\u209b\u1d62) \u2192 OracleInterface (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 \u03b9\u209b\u1d62),\n    (OStatement \u2295\u1d65 OStatement) i =\n      match sorry i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => (pSpec OStatement).Message j",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/ProofSystem/Components.lean#L141"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "773e371970a6e26ff0c722aaf561c13030bb4f6324f2a983ba22dcedf407e40d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 167,
        "start_column": 2,
        "end_line": 167,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d\u00b9 : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst : (i : \u03b9\u209b\u1d62) \u2192 OracleInterface (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (fun x x_1 => rel x) (relOut OStatement)\n    (oracleReduction oSpec Statement OStatement relComp)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/ProofSystem/Components.lean#L167"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "191e218863e97da77bda846402aeee2b1610bccf7e0c5c43a204eca965d0a659"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 259,
        "start_column": 2,
        "end_line": 259,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nOStatement : Type\ninst\u271d\u00b9 : OracleInterface OStatement\ninst : VCVCompatible (Query OStatement)\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (relIn OStatement) (relOut OStatement) (oracleReduction oSpec OStatement)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/ProofSystem/Components.lean#L259"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "1d32f3467a459ffcceaf7a9ece9c7d1d4634a1b70f860a47fbf74f80ea9fe8df"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Execution.lean",
        "start_line": 185,
        "start_column": 2,
        "end_line": 185,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let a \u2190 (simulateQ loggingOracle (Prover.runToRound (Fin.last n) stmt wit reduction.prover)).run\n      (fun a_1 => (reduction.prover.toProverOut.1 a.1.2, a_1.1, a.1.1)) <$>\n          (simulateQ loggingOracle (reduction.verifier.verify stmt a.1.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190 Prover.run stmt wit reduction.prover\n    (fun a => ((__discr.1, __discr.2.1), a, __discr.2.2)) <$>\n        (reduction.verifier.verify stmt __discr.2.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/OracleReduction/Execution.lean#L185"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "568e916ecdea4ca421599b43c67580d82ecd96d04cbfddd9964b37d6e7c74af6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Execution.lean",
        "start_line": 278,
        "start_column": 2,
        "end_line": 278,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\npSpec : ProtocolSpec 1\ninst\u271d : pSpec.ProverOnly\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let __discr \u2190\n        (fun a =>\n              ((reduction.prover.toProverOut.1 a.2).1, (reduction.prover.toProverOut.1 a.2).2, fun i =>\n                match i with\n                | \u27e80, isLt\u27e9 => a.1)) <$>\n            (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp\n              (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n      ((fun a => ((__discr.1, __discr.2.1), a, __discr.2.2)) <$> reduction.verifier.verify stmt __discr.2.2).liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190\n      (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n    ((fun a =>\n              (reduction.prover.toProverOut.1 __discr.2, a, fun i =>\n                match i with\n                | \u27e80, isLt\u27e9 => __discr.1)) <$>\n            reduction.verifier.verify stmt fun i =>\n              match i with\n              | \u27e80, isLt\u27e9 => __discr.1).liftComp\n        (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/OracleReduction/Execution.lean#L278"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "0b7d3ffdef348d6460dbe6ea9c5c933d52ed63bc57ad329cc074b4b047402918"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Equiv.lean",
        "start_line": 66,
        "start_column": 2,
        "end_line": 66,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 (do\n      let _ \u2190 liftM (query 0 ())\n      (fun a => (0, \u2191a)) <$> liftM (query 1 ())) =\n    do\n    let y \u2190 liftM (query 1 ())\n    (fun a => (0, \u2191y)) <$> liftM (query 0 ())",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/OracleReduction/Equiv.lean#L66"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "785752b4a04616fd033aa12ac113453553b90b2676c3db5a1104b2fa8a4180ad"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Equiv.lean",
        "start_line": 80,
        "start_column": 4,
        "end_line": 80,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h.h.none\n\u22a2 (evalDist (OptionT.bind (liftM (query 1 ())) (OptionT.pure \u2218 fun a => (0, \u2191a)))) none =\n    \u2211' (a : Fin 2), 2\u207b\u00b9 * (evalDist (OptionT.bind (liftM (query 0 ())) (OptionT.pure \u2218 fun a_1 => (0, \u2191a)))) none",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/OracleReduction/Equiv.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-16T18:04:04-04:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "7b3b3e5d1dd22b7743c09c140206a18fa03f94de3a117640a204f3473fb1dc61"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Equiv.lean",
        "start_line": 85,
        "start_column": 4,
        "end_line": 85,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h.h.some.mk\nx y : \u2115\n\u22a2 (Option.elimM ((PMF.uniformOfFintype (Fin 1)).bind fun a => PMF.pure (some a)) (PMF.pure none)\n        (OptionT.run \u2218 evalDist \u2218 fun x => OptionT.bind (liftM (query 1 ())) (OptionT.pure \u2218 fun a => (0, \u2191a))))\n      (some (x, y)) =\n    (Option.elimM ((PMF.uniformOfFintype (Fin 2)).bind fun a => PMF.pure (some a)) (PMF.pure none)\n        (OptionT.run \u2218 evalDist \u2218 fun y => OptionT.bind (liftM (query 0 ())) (OptionT.pure \u2218 fun a => (0, \u2191y))))\n      (some (x, y))",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/OracleReduction/Equiv.lean#L85"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "8e06b24b0ad73eb403e9cf9a2e43653a19abf508fc956309a8b43bc40c1b2717"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Equiv.lean",
        "start_line": 102,
        "start_column": 2,
        "end_line": 102,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : (i : \u2115) \u2192 unifSpec.domain i \u2192 Fin (i + 1)\n\u22a2 (some (f 0 ()) >>=\n      simulateQ\n          {\n            impl := fun {\u03b1} x =>\n              match \u03b1, x with\n              | .(unifSpec.range i), query i t => some (f i t) } \u2218\n        fun x => (fun a => (0, \u2191a)) <$> lift (query 1 ())) =\n    some (f 1 ()) >>=\n      simulateQ\n          {\n            impl := fun {\u03b1} x =>\n              match \u03b1, x with\n              | .(unifSpec.range i), query i t => some (f i t) } \u2218\n        fun y => (fun a => (0, \u2191y)) <$> lift (query 0 ())",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/OracleReduction/Equiv.lean#L102"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "699977d00a1318b1802b20923147fcfa0660c807fd3b8483205d64cdb9342f5f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/OracleInterface.lean",
        "start_line": 312,
        "start_column": 2,
        "end_line": 312,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u2075 : CommRing R\nd : \u2115\ninst\u271d\u2074 : Fintype R\ninst\u271d\u00b3 : DecidableEq R\ninst\u271d\u00b2 : IsDomain R\n\u03c3 : Type\ninst\u271d\u00b9 : Fintype \u03c3\ninst\u271d : DecidableEq \u03c3\na : R[X \u03c3]\nha : \u2200 (s : \u03c3 \u2192\u2080 \u2115), \u00acMvPolynomial.coeff s a = 0 \u2192 \u2200 (i : \u03c3), s i \u2264 d\nb : R[X \u03c3]\nhb : \u2200 (s : \u03c3 \u2192\u2080 \u2115), \u00acMvPolynomial.coeff s b = 0 \u2192 \u2200 (i : \u03c3), s i \u2264 d\nhNe : \u00aca = b\n\u22a2 {q | (MvPolynomial.eval q) a = (MvPolynomial.eval q) b}.card \u2264 Fintype.card \u03c3 * d",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/OracleReduction/OracleInterface.lean#L312"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "466ceb2e8a9afb46f22708412c1b38c4d73ff7939f912f485a81ab77ca9b4871"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/OracleInterface.lean",
        "start_line": 351,
        "start_column": 2,
        "end_line": 351,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\nR : Type\ninst\u271d : CommSemiring R\nm : \u2115\nD : Fin m \u21aa R\np : R[X]\n\u22a2 \u2203 x,\n    ((OptionT.run (mapM (fun i => liftM (query (Sum.inr ()) (D i))) (List.finRange m))).mapM fun {\u03b1} =>\n          (statelessOracle spec [fun x => R[X]]\u2092 fun i q => oracle p q).impl) =\n        pure x \u2227\n      x.getM = pure (List.map (fun i => eval (D i) p) (List.finRange m))",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/OracleReduction/OracleInterface.lean#L351"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "87e932ac9c431c5a841c8f23f707b86e2603cef6c3ba446def1e676209a21ce7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Transform/FiatShamir.lean",
        "start_line": 130,
        "start_column": 66,
        "end_line": 130,
        "end_column": 71
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u2074 : VCVCompatible StmtIn\ninst\u271d\u00b3 : (i : Fin n) \u2192 VCVCompatible (pSpec i).2\ninst\u271d\u00b2 : DecidableEq \u03b9\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\ncompletenessError : \u211d\u22650\nR : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 Reduction.completeness relIn relOut R completenessError \u2192\n    Reduction.completeness relIn relOut R.fiatShamir completenessError",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Transform/FiatShamir.lean#L130"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-06T23:33:56-04:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "be469d7e55aea58ba3ae87928d7217273f7ebdcf64b482edbabdf03ecfc51ed2"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/CommitmentScheme/Fold.lean",
        "start_line": 100,
        "start_column": 2,
        "end_line": 100,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\np : R[X]\n\u22a2 (splitEvenOdd p).1.natDegree \u2264 p.natDegree / 2",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/CommitmentScheme/Fold.lean#L100"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "2c5c59d0a0d95590e3f09c94073c3204f524bdb56c398f439802847ab3a2449e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/CommitmentScheme/Fold.lean",
        "start_line": 104,
        "start_column": 2,
        "end_line": 104,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\np : R[X]\n\u22a2 (splitEvenOdd p).2.natDegree \u2264 p.natDegree / 2",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/CommitmentScheme/Fold.lean#L104"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "e147048be72f759311af06deb9b0abe77cef8ecb09fb43af7bd5363022418fe4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/CommitmentScheme/Fold.lean",
        "start_line": 116,
        "start_column": 11,
        "end_line": 116,
        "end_column": 16
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\nn deg : \u2115\n\u03b6 : R\u02e3\nhPrim : IsPrimitiveRoot \u03b6 (2 ^ n)\np : \u21a5R\u2983< 2 * n\u2984[X]\npEven pOdd : R[X]\n\u22a2 pEven \u2208 R\u2983< n\u2984[X]",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/CommitmentScheme/Fold.lean#L116"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "abd32a2462082659bc6718289b097b3e6e39175fd7f9c823b94292b02da7388d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/CommitmentScheme/Fold.lean",
        "start_line": 116,
        "start_column": 26,
        "end_line": 116,
        "end_column": 31
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\nn deg : \u2115\n\u03b6 : R\u02e3\nhPrim : IsPrimitiveRoot \u03b6 (2 ^ n)\np : \u21a5R\u2983< 2 * n\u2984[X]\npEven pOdd : R[X]\n\u22a2 pOdd \u2208 R\u2983< n\u2984[X]",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/CommitmentScheme/Fold.lean#L116"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "07bdac06e3f99ca0f4f31961ed90ff433cb15866257ea17547733ef66bae571d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/CommitmentScheme/MerkleTree.lean",
        "start_line": 219,
        "start_column": 6,
        "end_line": 219,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case succ\n\u03b1 : Type\ninst\u271d\u00b2 : DecidableEq \u03b1\ninst\u271d\u00b9 : Inhabited \u03b1\ninst\u271d : Fintype \u03b1\nhash : \u03b1 \u00d7 \u03b1 \u2192 \u03b1\nn : \u2115\nih :\n  \u2200 (leaves : List.Vector \u03b1 (2 ^ n)) (i : Fin (2 ^ n)),\n    (simulateQ (implement_with_function \u03b1 hash)\n        (do\n          let cache \u2190 buildMerkleTree \u03b1 n leaves\n          let proof : List.Vector \u03b1 n := generateProof \u03b1 i cache\n          verifyProof \u03b1 i leaves[i] (getRoot \u03b1 cache) proof\n          pure PUnit.unit)\n        ()).neverFails\nleaves : List.Vector \u03b1 (2 ^ (n + 1))\ni : Fin (2 ^ (n + 1))\n\u22a2 ((((Option.elimM (OptionT.run (buildMerkleTree \u03b1 (n + 1) leaves)) (FreeMonad.pure none)\n              (OptionT.run \u2218 fun cache =>\n                verifyProof \u03b1 i (leaves.get i) (getRoot \u03b1 cache) (generateProof \u03b1 i cache))).mapM\n          fun {\u03b1_1} q =>\n          match \u03b1_1, q with\n          | .((spec \u03b1).range i), query i (left, right) => pure (hash (left, right))) >>=\n        fun __do_lift => __do_lift.getM)\n      ()).neverFails",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/CommitmentScheme/MerkleTree.lean#L219"
      },
      "metadata": {
        "blame_email_hash": "ab200eba5736",
        "blame_date": "2025-04-16T13:24:09-07:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "d12410bcb99b6142a6622c964a0336184ee8966c679e85fa74b28674f0ee094c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/AGM/Basic.lean",
        "start_line": 160,
        "start_column": 2,
        "end_line": 160,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d\u00b2 : Fact (Nat.Prime p)\nG\u2081 : Type u_2\ninst\u271d\u00b9 : CommGroup G\u2081\ninst\u271d : IsPrimeOrderWith G\u2081 p\nn : \u2115\ng : G\u2081\na : ZMod p\npoly : \u21a5(degreeLT (ZMod p) (n + 1))\n\u22a2 g ^ \u2211 i, a.val ^ \u2191i * ((degreeLTEquiv (ZMod p) (n + 1)) poly i).val =\n    g ^ (\u2211 x, (degreeLTEquiv (ZMod p) (n + 1)) poly x * a ^ \u2191x).val",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/AGM/Basic.lean#L160"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-15T12:13:54+05:30",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "3bce7a2bfc31b2c514ed165e702cb2c63d260d7267af7bf882376f27cfa6080a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/AGM/Basic.lean",
        "start_line": 171,
        "start_column": 6,
        "end_line": 171,
        "end_column": 11
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u2078 : CommGroup G\np : \u2115\ninst\u271d\u2077 : Fact (Nat.Prime p)\nh : Nat.card G = p\ng : G\nG\u2081 : Type u_2\ninst\u271d\u2076 : CommGroup G\u2081\ninst\u271d\u2075 : IsPrimeOrderWith G\u2081 p\ng\u2081 : G\u2081\nG\u2082 : Type u_3\ninst\u271d\u2074 : CommGroup G\u2082\ninst\u271d\u00b3 : IsPrimeOrderWith G\u2082 p\ng\u2082 : G\u2082\nG\u209c : Type u_4\ninst\u271d\u00b2 : CommGroup G\u209c\ninst\u271d\u00b9 : IsPrimeOrderWith G\u209c p\npairing : Additive G\u2081 \u2192\u2097[\u2124] Additive G\u2082 \u2192\u2097[\u2124] Additive G\u209c\nn : \u2115\ninst\u271d : Fact (Nat.Prime p)\nsrs : Vector G\u2081 (n + 1)\ncoeffs : Fin (n + 1) \u2192 ZMod p\nz : ZMod p\npoly : \u21a5(degreeLT (ZMod p) (n + 1)) := (degreeLTEquiv (ZMod p) (n + 1)).invFun coeffs\nthis : Field (ZMod p)\n\u22a2 ((\u2191poly - C (eval z \u2191poly)) / (X - C z)).degree < \u2191(n + 1)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/AGM/Basic.lean#L171"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-03-15T21:13:06-06:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "fd50eb520f249e187c4cc17da4b90f04d44f1cc638f8fedce8eb19be7b7e8ee8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/Basic.lean",
        "start_line": 186,
        "start_column": 33,
        "end_line": 186,
        "end_column": 38
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\nC : Set (n \u2192 R)\ninst\u271d : Fintype \u2191C\nh : \u00acSubsingleton \u2191C\n\u22a2 \u2016C\u2016\u2080' \u2260 \u22a4",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/CodingTheory/Basic.lean#L186"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "3009d57d0e90edd1050f2535b78f9e4f60cfd039f8ccbfbcd16a52cd702b891d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/Basic.lean",
        "start_line": 187,
        "start_column": 4,
        "end_line": 187,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case neg\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\nC : Set (n \u2192 R)\ninst\u271d : Fintype \u2191C\nh : \u00acSubsingleton \u2191C\nthis : \u2016C\u2016\u2080' \u2260 \u22a4\n\u22a2 ENat.toNat (Finset.image (fun x => \u0394\u2080(\u2191x.1, \u2191x.2)) {p | \u00acp.1 = p.2}).min =\n    sInf {d | \u2203 u \u2208 C, \u2203 v \u2208 C, \u00acu = v \u2227 \u0394\u2080(u, v) \u2264 d}",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/CodingTheory/Basic.lean#L187"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "5eb12568cfc88f855ce8e1aa5eb37e600543cc30a15d7683127ada27583d4463"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/Basic.lean",
        "start_line": 231,
        "start_column": 4,
        "end_line": 231,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case e_a.h.h\u2081.intro.intro.intro.intro.intro\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : CommSemiring R\nC : Submodule R (n \u2192 R)\nd : \u2115\nu : n \u2192 R\nhu : u \u2208 C\nv : n \u2192 R\nhv : v \u2208 C\nhuv : \u00acu = v\nhDist : \u0394\u2080(u, v) \u2264 d\n\u22a2 \u2203 u \u2208 C, \u00acu = 0 \u2227 \u2016u\u2016\u2080 \u2264 d",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/CodingTheory/Basic.lean#L231"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "6827f6e2af2e914c7b8e3d932d9fa3520d9cf00c1bf6f10b54d7bb2ce2ea1ebb"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/Basic.lean",
        "start_line": 234,
        "start_column": 4,
        "end_line": 234,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case e_a.h.h\u2082.intro.intro.intro\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : CommSemiring R\nC : Submodule R (n \u2192 R)\nd : \u2115\nu : n \u2192 R\nhu : u \u2208 C\nhNorm : \u00acu = 0\nhDist : \u2016u\u2016\u2080 \u2264 d\n\u22a2 \u2203 u \u2208 C, \u2203 v \u2208 C, \u00acu = v \u2227 \u0394\u2080(u, v) \u2264 d",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/CodingTheory/Basic.lean#L234"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "26d6446692aed7438cf4ca9710a4b11e615d0a4de6c914dc4cccf5a9cb898451"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/Basic.lean",
        "start_line": 395,
        "start_column": 65,
        "end_line": 395,
        "end_column": 70
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b3 : Fintype n\nR : Type u_2\ninst\u271d\u00b2 : DecidableEq R\ninst\u271d\u00b9 : Finite R\ninst\u271d : DivisionRing R\nC : Submodule R (n \u2192 R)\n\u22a2 Module.finrank R \u21a5C \u2264 card n - \u2016C.carrier\u2016\u2080 + 1",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/CodingTheory/Basic.lean#L395"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-26T22:44:38-04:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "ebbcf02281803aa3f1ad085205ffae9455bf0080876cac3ddf59c6b00037b095"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 34,
        "start_column": 14,
        "end_line": 34,
        "end_column": 19
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\n\u22a2 Function.LeftInverse ofSpec toSpec",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/MlPoly/Equiv.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "55d356c561bd0ef9c2c2a5faee2211f6e5804bd0cb7c371c52cbd652a198bea4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 35,
        "start_column": 15,
        "end_line": 35,
        "end_column": 20
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\n\u22a2 Function.RightInverse ofSpec toSpec",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/MlPoly/Equiv.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "733709b0b3eb61737241c7d253801f7b75b63c187dd6cddfd2025a376fa75cd4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 43,
        "start_column": 2,
        "end_line": 43,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\np q : MlPoly R n\n\u22a2 (p + q).toSpec = p.toSpec + q.toSpec",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/MlPoly/Equiv.lean#L43"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "dcd0b4dbe6b1ed9578696200172010514927605fccbb9579ca901fdb47a1fe75"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 47,
        "start_column": 2,
        "end_line": 47,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : CommSemiring R\nn : \u2115\nS : Type u_2\ninst\u271d : CommSemiring S\nf : R \u2192+* S\np : MlPoly R n\nx : Vector S n\n\u22a2 p.eval\u2082 f x = MvPolynomial.eval\u2082 f x.get \u2191p.toSpec",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/MlPoly/Equiv.lean#L47"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "e6da4863dd6a091b176d7d5e3e364886431d4e3fa96abd1856f5e90ad00278f0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 45,
        "start_column": 2,
        "end_line": 45,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : AddCommMonoid R\nn : \u2115\na : R\nb : Vector R n\nc : R\nd : Vector R n\n\u22a2 List.foldl (fun x1 x2 => x1 + x2) (a * c) (List.zipWith (fun x1 x2 => x1 * x2) b.toList d.toList) =\n    a * c + Array.foldl (fun x1 x2 => x1 + x2) 0 (Array.zipWith (fun x1 x2 => x1 * x2) b.toArray d.toArray) 0 n",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/MlPoly/Basic.lean#L45"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-14T11:09:39-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "c3421e962af79ccbd6215d683a709c250ec8c813cd81ab99c2a9ec6b7e437f59"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 81,
        "start_column": 2,
        "end_line": 81,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : AddCommMonoid R\nn : \u2115\na : R\nb : Vector R n\nc : R\nd : Vector R n\n\u22a2 (cons a b).get \u2b1d\u1d65 (cons c d).get = a * c + b.get \u2b1d\u1d65 d.get",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/MlPoly/Basic.lean#L81"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-14T11:09:39-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "8451e357d7c05083e9d922a97c7dd9f04b3ddf282eeb79223682bb59b43b4bac"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 138,
        "start_column": 20,
        "end_line": 138,
        "end_column": 25
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a b c : MlPoly R n), a + b + c = a + (b + c)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/MlPoly/Basic.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "8c8b0ec8a96778394f7a99ce84f781374e31d1d000fb791f81eecd6cc0e110aa"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 141,
        "start_column": 19,
        "end_line": 141,
        "end_column": 24
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a : MlPoly R n), 0 + a = a",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/MlPoly/Basic.lean#L141"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "10f21bccf93bda0f6ac9ed3034c4c7b5577881ba3dcc2e0ebffb57492de10fd3"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 142,
        "start_column": 19,
        "end_line": 142,
        "end_column": 24
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a : MlPoly R n), a + 0 = a",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/MlPoly/Basic.lean#L142"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "d26fddddac39506548395e2ff1a06aa68bca512166c25274e0572eea85d2572a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 144,
        "start_column": 21,
        "end_line": 144,
        "end_column": 26
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (x : MlPoly R n), nsmul 0 x = 0",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/MlPoly/Basic.lean#L144"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "5f3f7be8e2f427c7689f43fb1d21a72a01141e166f652943090465f67bc7cc44"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 145,
        "start_column": 21,
        "end_line": 145,
        "end_column": 26
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (n_1 : \u2115) (x : MlPoly R n), nsmul (n_1 + 1) x = nsmul n_1 x + x",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/MlPoly/Basic.lean#L145"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "15146d0ea41040b73992e26171f22283cf3638e4a72dedf94668231296528b7e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 139,
        "start_column": 19,
        "end_line": 139,
        "end_column": 24
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a b : MlPoly R n), a + b = b + a",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/MlPoly/Basic.lean#L139"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "868ab7a0efed5031b7e04f4d3b923346a42a39ff6ae28d596c7ba442c267909d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 151,
        "start_column": 17,
        "end_line": 151,
        "end_column": 22
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : Semiring R\n\u22a2 \u2200 (b : MlPoly R n), 1 \u2022 b = b",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/MlPoly/Basic.lean#L151"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "3ad86c7f3f1e3d2be1812433b8cc0eab51171e5e61ea4928992cb723d37d96c6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 156,
        "start_column": 18,
        "end_line": 156,
        "end_column": 23
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : Semiring R\n\u22a2 \u2200 (x : MlPoly R n), 0 \u2022 x = 0",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/MlPoly/Basic.lean#L156"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "09cec9f7ac47cd375b8365ff39899f9cc3d7b705d6c730af3e224b0a139b1f5a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Basic.lean",
        "start_line": 155,
        "start_column": 2,
        "end_line": 155,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nunit : \u03b1\nl l' : List \u03b1\nm n n' : \u2115\nh : n \u2264 m\nh' : n' \u2264 m\nhEq : rightpad n unit l = rightpad n' unit l'\nhLen : n \u2294 l.length = n' \u2294 l'.length\n\u22a2 l ++ replicate (n - l.length + (m - n' \u2294 l'.length)) unit =\n    l' ++ replicate (n' - l'.length + (m - n' \u2294 l'.length)) unit",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/Math/Basic.lean#L155"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "23597376809ed0dd1820b5788a632d56392b0458b608e84f3e7f9a01b2e54e35"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Basic.lean",
        "start_line": 209,
        "start_column": 5,
        "end_line": 209,
        "end_column": 10
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nl\u2081 l\u2082 : List \u03b1\nunit : \u03b1\n\u22a2 (fun x =>\n        match x with\n        | (x, y) => x = y)\n      (l\u2081.matchSize l\u2082 unit) \u2194\n    \u2200 (i : \u2115), l\u2081.getD i unit = l\u2082.getD i unit",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/Math/Basic.lean#L209"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-14T17:35:17-06:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "bdc1ceac3ccfafecaec8c45a71ad75e64a4346ea31d0d51338b3fff59aadcb6d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Basic.lean",
        "start_line": 248,
        "start_column": 2,
        "end_line": 248,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\na : Array \u03b1\nn : \u2115\nunit : \u03b1\ni : \u2115\nh\u271d : i < (rightpad n unit a).size\nh : i < { toList := List.rightpad n unit a.toList }.size\n\u22a2 { toList := List.rightpad n unit a.toList }[i] = a.getD i unit",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/Math/Basic.lean#L248"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "a7d2a1f24e09d6000cbeaf6feae74fd9861d9a71c7142d7140e7b62f2a386c7c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Basic.lean",
        "start_line": 391,
        "start_column": 75,
        "end_line": 391,
        "end_column": 80
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\np : \u03b1 \u2192 Bool\nas : Array \u03b1\nh : (popWhile p as).size > 0\n\u22a2 \u00acp ((popWhile p as).getLast h) = true",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/Math/Basic.lean#L391"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-14T17:35:17-06:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "80b4e920ce514d601f468a11fbffb8057a08720c1ab1e5b35c22c742b79c19d5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Basic.lean",
        "start_line": 469,
        "start_column": 4,
        "end_line": 469,
        "end_column": 9
      },
      "debug_info": {
        "goal": "l : List \u2115\nj a : \u2115\nl' : List \u2115\nh : j < a + l'.sum\n\u22a2 \u2203 n, (a :: l').findSum j = some n",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/Math/Basic.lean#L469"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-23T10:22:30+07:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "cd143a88ad9e31e826b00c24f4dd3dc3f8985d99e39765a4385c377b7da471ee"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Basic.lean",
        "start_line": 481,
        "start_column": 80,
        "end_line": 481,
        "end_column": 85
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d\u00b2 : AddMonoid \u03b1\ninst\u271d\u00b9 : Preorder \u03b1\ninst\u271d : DecidableRel fun x1 x2 => x1 < x2\nl : List \u2115\nj : Fin l.sum\n\u22a2 l.findSumIdx \u2191j < l.length",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/Math/Basic.lean#L481"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-23T10:22:30+07:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "6f78c462297f0e4cd5c48a684c88b578a4359d608848fa8d7f35892be2685179"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MvPolynomial/Sumcheck.lean",
        "start_line": 75,
        "start_column": 2,
        "end_line": 75,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\n\u03c3 : Type u_3\n\u03c3\u2081 : Type u_4\n\u03c3\u2082 : Type u_5\nx : \u03c3\u2081 \u2192 R\nf : \u03c3 \u2192 \u03c3\u2081 \u2295 \u03c3\u2082\np : R[X \u03c3]\nb : \u03c3\u2081 \u2192\u2080 \u2115\nh : \u00accoeff b ((sumToIter R \u03c3\u2081 \u03c3\u2082) ((rename f) p)) = 0\n\u22a2 (coeff b ((sumToIter R \u03c3\u2081 \u03c3\u2082) ((rename f) p))).degrees \u2264 Multiset.filterMap Sum.getRight? (Multiset.map f p.degrees)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/MvPolynomial/Sumcheck.lean#L75"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-16T12:52:41-06:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "3464a6856e1d089e7ce351210c1c0c0fce92da8ae1d61547f7b44e97fd899105"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MvPolynomial/Sumcheck.lean",
        "start_line": 112,
        "start_column": 2,
        "end_line": 112,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\nh : n > 0\nD : Fin (n - 1) \u2192 Finset R\np : R[X Fin n]\n\u22a2 ((sumExceptFirst' n h D) p).degree \u2264 \u2191(degreeOf \u27e80, h\u27e9 p)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/MvPolynomial/Sumcheck.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-13T15:50:48-04:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "7d5e20caac6893c3674c953bec16cb092f20fdceb57956d888049701943245c9"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MvPolynomial/Interpolation.lean",
        "start_line": 69,
        "start_column": 58,
        "end_line": 69,
        "end_column": 63
      },
      "debug_info": {
        "goal": "\u03c3 : Type u_1\ninst\u271d\u2074 : DecidableEq \u03c3\ninst\u271d\u00b3 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : IsDomain R\ninst\u271d : DecidableEq R\np : R[X \u03c3]\nhp : p \u2260 0\nS : \u03c3 \u2192 Finset R\n\u22a2 \u2191(#({x \u2208 p.vars.pi S | (eval (extendDomain x)) p = 0})) / \u220f i \u2208 p.vars, \u2191(#(S i)) \u2264\n    \u2211 i \u2208 p.vars, \u2191(degreeOf i p) / \u2191(#(S i))",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/MvPolynomial/Interpolation.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-30T15:40:43-04:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "1af9daf427587928cdf589f4d82b368bfc21a0a34848ba23a328f93988c922d1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MvPolynomial/Interpolation.lean",
        "start_line": 171,
        "start_column": 76,
        "end_line": 171,
        "end_column": 81
      },
      "debug_info": {
        "goal": "\u03c3 : Type u_1\ninst\u271d\u00b3 : DecidableEq \u03c3\ninst\u271d\u00b2 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b9 : CommRing R\ninst\u271d : IsDomain R\np q : R[X \u03c3]\nS : \u03c3 \u2192 Finset R\nhDegree : \u2200 (i : \u03c3), degreeOf i p < #(S i)\nhEval : \u2200 x \u2208 piFinset fun i => S i, (eval x) p = (eval x) q\n\u22a2 p = q",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/MvPolynomial/Interpolation.lean#L171"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-30T15:40:43-04:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "f9c5c4078caaeb5ea9a096da386729d8e7d2602bb881943905c6f04cc44e287f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/Fin/Basic.lean",
        "start_line": 422,
        "start_column": 43,
        "end_line": 422,
        "end_column": 48
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b1 : Fin n \u2192 Sort u\nl : List \u2115\nn' : \u2115\nl' : List \u2115\nmotive : Fin (n' :: l').sum \u2192 Sort u_1\ncases : (n : \u2115) \u2192 (h : n \u2208 n' :: l') \u2192 (i : Fin n) \u2192 motive (castSum (n' :: l') h i)\ni : Fin (n' + l'.sum)\nhi : \u00ac\u2191i < n'\n\u22a2 \u2191i - n' < l'.sum",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/Fin/Basic.lean#L422"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-23T10:22:30+07:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "411d4e93182014c105091b33e53b3b6d5d799cb23da0f2ec94196ed042240822"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/Fin/Basic.lean",
        "start_line": 450,
        "start_column": 16,
        "end_line": 450,
        "end_column": 21
      },
      "debug_info": {
        "goal": "case ind\nn\u271d n : \u2115\nIH : \u2200 m < n, \u2200 {a : Fin m \u2192 \u2115}, (List.ofFn fun i => List.ofFn (ranges a i)) = (List.ofFn a).ranges\na : Fin n \u2192 \u2115\n\u22a2 (List.ofFn fun i => List.ofFn (ranges a i)) = (List.ofFn a).ranges",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/Fin/Basic.lean#L450"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-23T10:22:30+07:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "c27e3b013cb8a561d94ba9842b1473e1fc573152e13a028548254969bf650b2a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/UniPoly/Basic.lean",
        "start_line": 571,
        "start_column": 2,
        "end_line": 571,
        "end_column": 7
      },
      "debug_info": {
        "goal": "Q : Type u_2\ninst\u271d : Ring Q\np q : UniPoly Q\ni : \u2115\nhi : i < Array.size (p.add_raw q)\n\u22a2 (p ++ mkArray (Array.size q - Array.size p) 0)[i] + (q ++ mkArray (Array.size p - Array.size q) 0)[i] =\n    p[i]?.getD 0 + q[i]?.getD 0",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/UniPoly/Basic.lean#L571"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "0ac3987f91918316115bcbd5a5190f334718b43eef6d6a44d86861af2e6a0e98"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/UniPoly/Basic.lean",
        "start_line": 899,
        "start_column": 4,
        "end_line": 899,
        "end_column": 9
      },
      "debug_info": {
        "goal": "Q : Type u_2\ninst\u271d : Ring Q\np q r : UniPoly Q\nhpq : p ++ mkArray (Array.size q - Array.size p) 0 = q ++ mkArray (Array.size p - Array.size q) 0\nhqr : q ++ mkArray (Array.size r - Array.size q) 0 = r ++ mkArray (Array.size q - Array.size r) 0\n\u22a2 p ++ mkArray (Array.size r - Array.size p) 0 = r ++ mkArray (Array.size p - Array.size r) 0",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/UniPoly/Basic.lean#L899"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "7feadb1d1938b120c33ecd0497379e7edda0d34dd6a460c54ce4c81cbe63f302"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/UniPoly/Basic.lean",
        "start_line": 975,
        "start_column": 6,
        "end_line": 975,
        "end_column": 11
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : Ring R\ninst\u271d : BEq R\np : UniPoly R\n\u22a2 (p.toPoly, Tropical.trop (OrderDual.toDual p.degreeBound)) \u2208 TropicallyBoundPoly R",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/UniPoly/Basic.lean#L975"
      },
      "metadata": {
        "blame_email_hash": "ab200eba5736",
        "blame_date": "2025-03-12T19:59:09-07:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "b9dd5c0fe5236091ea8855dc3155bd98bb0faa5dd1e6a63db924678e498d338e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/UniPoly/Basic.lean",
        "start_line": 1005,
        "start_column": 22,
        "end_line": 1005,
        "end_column": 27
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 Function.RightInverse TropicallyBoundPolynomial.toUniPoly UniPoly.toTropicallyBoundPolynomial",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/UniPoly/Basic.lean#L1005"
      },
      "metadata": {
        "blame_email_hash": "94b4cc0e139f",
        "blame_date": "2024-05-31T16:31:08-04:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "21251d59309e749d53a0e3786bd81a88574eeca70048432b2247a03423b05129"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/UniPoly/Basic.lean",
        "start_line": 1006,
        "start_column": 21,
        "end_line": 1006,
        "end_column": 26
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 \u2200 (x y : UniPoly R),\n    { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n            right_inv := \u22ef }.toFun\n        (x * y) =\n      { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          x *\n        { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/UniPoly/Basic.lean#L1006"
      },
      "metadata": {
        "blame_email_hash": "94b4cc0e139f",
        "blame_date": "2024-05-31T16:31:08-04:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "01133ba8828bec9ecd45b93bb9f3585cbd6dcf7ba219d843d0a8517c8bbfa34e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/UniPoly/Basic.lean",
        "start_line": 1007,
        "start_column": 21,
        "end_line": 1007,
        "end_column": 26
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 \u2200 (x y : UniPoly R),\n    { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n            right_inv := \u22ef }.toFun\n        (x + y) =\n      { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          x +\n        { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/Data/UniPoly/Basic.lean#L1007"
      },
      "metadata": {
        "blame_email_hash": "94b4cc0e139f",
        "blame_date": "2024-05-31T16:31:08-04:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "e9400b844e33b3d7a18d8cd41ed92f1807e43589f763603212d3a8e31e94310f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 151,
        "start_column": 2,
        "end_line": 151,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nP : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (fun a =>\n        (data.fStmtOut (a.2.2.1, (P.toProverOut.1 a.2.1).1), data.fWitOut (a.2.2.2, (P.toProverOut.1 a.2.1).2),\n          a.1)) <$>\n      Fin.induction (pure (default, P.input (data.fStmtIn stmtIn) (data.fWitIn witIn), stmtIn, witIn))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2.1 a, __discr.2.2)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2, __discr.2.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2.1).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n) =\n    (fun a => (data.fStmtOut (stmtIn, (P.toProverOut.1 a.2).1), data.fWitOut (witIn, (P.toProverOut.1 a.2).2), a.1)) <$>\n      Fin.induction (pure (default, P.input (data.fStmtIn stmtIn) (data.fWitIn witIn)))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2 a)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/OracleReduction/Composition/Virtual.lean#L151"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "896bb0b36b0139fe1ea5349fb71c1901c89cf9e690bbbc785a2cb5fa62768eab"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 164,
        "start_column": 2,
        "end_line": 164,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n      (fun a_1 => ((data.fStmtOut (stmtIn, a.1), data.fWitOut (witIn, a.2.1)), a_1, a.2.2)) <$>\n          (Verifier.run stmtIn a.2.2\n                {\n                  verify := fun stmtIn transcript =>\n                    (fun a => data.fStmtOut (stmtIn, a)) <$>\n                      R.verifier.verify (data.fStmtIn stmtIn) transcript }).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 => ((data.fStmtOut (stmtIn, a.1), data.fWitOut (witIn, a.2.1)), data.fStmtOut (stmtIn, a_1), a.2.2)) <$>\n        (Verifier.run (data.fStmtIn stmtIn) a.2.2 R.verifier).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/OracleReduction/Composition/Virtual.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "33227c9041bfb79809b37c45d9782948363814999aa7b5b1b56115b4ab529a0c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 177,
        "start_column": 2,
        "end_line": 177,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let __discr \u2190 Prover.runWithLog stmtIn witIn (Prover.transport data R.prover)\n      (fun a => ((__discr.1, __discr.2.1), a.1, __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (Verifier.run stmtIn __discr.2.2.1\n                    {\n                      verify := fun stmtIn transcript =>\n                        (fun a => data.fStmtOut (stmtIn, a)) <$>\n                          R.verifier.verify (data.fStmtIn stmtIn) transcript })).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.runWithLog (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 =>\n          ((data.fStmtOut (stmtIn, a.1), data.fWitOut (witIn, a.2.1)), data.fStmtOut (stmtIn, a_1.1), a.2.2.1, a.2.2.2,\n            a_1.2)) <$>\n        (simulateQ loggingOracle (Verifier.run (data.fStmtIn stmtIn) a.2.2.1 R.verifier)).run.liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/OracleReduction/Composition/Virtual.lean#L177"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "1037dbfd13e7075f7f2df9ff6acc04c06f4f8eadc10bdcfe1c10621d0293caac"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 201,
        "start_column": 2,
        "end_line": 201,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nrelIn' : StmtIn' \u2192 WitIn' \u2192 Prop\nrelOut' : StmtOut' \u2192 WitOut' \u2192 Prop\ncompletenessError : \u211d\u22650\ndata : TransportDataComplete StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\nh :\n  \u2200 (stmtIn : StmtIn') (witIn : WitIn'),\n    relIn' stmtIn witIn \u2192\n      [fun x =>\n          match x with\n          | ((prvStmtOut, witOut), stmtOut, snd) => relOut' stmtOut witOut \u2227 prvStmtOut = stmtOut|run stmtIn witIn R] \u2265\n        1 - \u2191completenessError\nstmtIn : StmtIn\nwitIn : WitIn\nhRelIn : relIn stmtIn witIn\nhR :\n  [fun x =>\n      match x with\n      | ((prvStmtOut, witOut), stmtOut, snd) =>\n        relOut' stmtOut witOut \u2227 prvStmtOut = stmtOut|run (data.fStmtIn stmtIn) (data.fWitIn witIn) R] \u2265\n    1 - \u2191completenessError\nx\u271d : (StmtOut' \u00d7 WitOut') \u00d7 StmtOut' \u00d7 pSpec.FullTranscript\na\u271d : x\u271d \u2208 (run (data.fStmtIn stmtIn) (data.fWitIn witIn) R).support\nhRelOut' : relOut' x\u271d.2.1 x\u271d.1.2 \u2227 x\u271d.1.1 = x\u271d.2.1\n\u22a2 ((fun x => relOut x.2.1 x.1.2 \u2227 x.1.1 = x.2.1) \u2218 fun a =>\n      ((data.fStmtOut (stmtIn, a.1.1), data.fWitOut (witIn, a.1.2)), data.fStmtOut (stmtIn, a.2.1), a.2.2))\n    x\u271d",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/OracleReduction/Composition/Virtual.lean#L201"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-22T09:32:10-04:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "b7e7785ddd0e7960be7923733551337f7ec78b3cec30de41c822cf0c03ad97e0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 215,
        "start_column": 2,
        "end_line": 215,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn StmtOut StmtIn' StmtOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nlangIn' : Set StmtIn'\nlangOut' : Set StmtOut'\nsoundnessError : \u211d\u22650\ndata : TransportDataSound StmtIn StmtOut StmtIn' StmtOut' langIn langOut langIn' langOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nh :\n  \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn' WitIn StmtOut' WitOut),\n    \u2200 stmtIn \u2209 langIn',\n      [fun x =>\n          match x with\n          | (fst, stmtOut, snd) => stmtOut \u2209 langOut'|run stmtIn witIn { prover := prover, verifier := V }] \u2264\n        \u2191soundnessError\nstmtIn hStmtIn : Type\nWitIn : stmtIn\nWitOut : Prover pSpec oSpec StmtIn stmtIn StmtOut hStmtIn\nwitIn : StmtIn\nprover : witIn \u2209 langIn\n\u22a2 [fun x =>\n      match x with\n      | (fst, stmtOut, snd) =>\n        stmtOut \u2209\n          langOut|run witIn WitIn { prover := WitOut, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n    \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/OracleReduction/Composition/Virtual.lean#L215"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "afc81d98ed41f5f375579541273fc760226c833fd3841423ee3bf424d1fac91e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 229,
        "start_column": 2,
        "end_line": 234,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nrelIn' : StmtIn' \u2192 WitIn' \u2192 Prop\nrelOut' : StmtOut' \u2192 WitOut' \u2192 Prop\nsoundnessError : \u211d\u22650\ndata :\n  TransportDataKnowledgeSound StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nE : StraightlineExtractor\nh' :\n  \u2200 (stmtIn : StmtIn') (witIn : WitIn') (prover : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'),\n    [fun x =>\n        match x with\n        | ((fst, witOut), stmtOut, transcript, proveQueryLog, snd) =>\n          \u00acrelIn' stmtIn (E stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n            relOut' stmtOut witOut|runWithLog stmtIn witIn { prover := prover, verifier := V }] \u2264\n      \u2191soundnessError\n\u22a2 \u2203 extractor,\n    \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n      [fun x =>\n          match x with\n          | ((fst, witOut), stmtOut, transcript, proveQueryLog, snd) =>\n            \u00acrelIn stmtIn (extractor stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n              relOut stmtOut\n                witOut|runWithLog stmtIn witIn\n            { prover := prover, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n        \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/OracleReduction/Composition/Virtual.lean#L229"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "33d5b993990508a7aa631aa5108a54a42173506d8d6c9e672e3c2f582ae39edc"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 278,
        "start_column": 4,
        "end_line": 278,
        "end_column": 9
      },
      "debug_info": {
        "goal": "x\u271d\u00b3 : StmtIn\nx\u271d\u00b2 : Unit\nx\u271d\u00b9 : StmtOut'\nx\u271d : Unit\np q : \u2124[X]\nt : \u2124\nf : \u2124[X]\nt' r : \u2124\nhRelOut' : eval r f = t'\nhRelIn : eval 0 p * eval 0 q + eval 1 p * eval 1 q = t\n\u22a2 eval r p * eval r q = t'",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/OracleReduction/Composition/Virtual.lean#L278"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "b86f06e3609ce072183a451094d605a9386986f26397b83d153721c340f42524"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Security/Basic.lean",
        "start_line": 390,
        "start_column": 2,
        "end_line": 390,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nStmtIn WitIn StmtOut WitOut : Type\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nknowledgeError : \u211d\u22650\nhLt : knowledgeError < 1\nextractor : StraightlineExtractor\nhKS :\n  \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n    [fun x =>\n        \u00acrelIn stmtIn (extractor stmtIn x.2.1 x.1.2 x.2.2.1 x.2.2.2.1) \u2227\n          relOut x.2.1 x.1.2|runWithLog stmtIn witIn { prover := prover, verifier := verifier }] \u2264\n      \u2191knowledgeError\nWitIn' WitOut' : Type\nwitIn' : WitIn'\nprover : Prover pSpec oSpec StmtIn WitIn' StmtOut WitOut'\nstmtIn : StmtIn\nhStmtIn : \u2200 (x : WitIn), \u00acrelIn stmtIn x\n\u22a2 [fun x => \u2200 (x_1 : WitOut), \u00acrelOut x.2.1 x_1|run stmtIn witIn' { prover := prover, verifier := verifier }] \u2264\n    \u2191knowledgeError",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/OracleReduction/Security/Basic.lean#L390"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "770f12482cdc9debff51d443ef514dd48ce83a009069228b67fc5e321558fa48"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Security/Basic.lean",
        "start_line": 410,
        "start_column": 75,
        "end_line": 410,
        "end_column": 80
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nStmtIn StmtOut : Type\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nrbrSoundnessError : pSpec.ChallengeIdx \u2192 \u211d\u22650\n\u22a2 rbrSoundness langIn langOut verifier rbrSoundnessError \u2192 soundness langIn langOut verifier (\u2211 i, rbrSoundnessError i)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/OracleReduction/Security/Basic.lean#L410"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-28T13:43:25-07:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "86a6c29152a515529a53df345ef9924a23cc8bbe29734cbbc53ec7c45ce1de11"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Security/Basic.lean",
        "start_line": 420,
        "start_column": 2,
        "end_line": 420,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nStmtIn WitIn StmtOut WitOut : Type\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nrbrKnowledgeError : pSpec.ChallengeIdx \u2192 \u211d\u22650\n\u22a2 rbrKnowledgeSoundness relIn relOut verifier rbrKnowledgeError \u2192\n    rbrSoundness (Function.language relIn) (Function.language relOut) verifier rbrKnowledgeError",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/OracleReduction/Security/Basic.lean#L420"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-28T13:43:25-07:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "e7b53eaa74b194b826fd0dadd533183d29bce9f0eb460d261efe4b0d69ddcbe5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Security/Basic.lean",
        "start_line": 429,
        "start_column": 82,
        "end_line": 429,
        "end_column": 87
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nStmtIn WitIn StmtOut WitOut : Type\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nrbrKnowledgeError : pSpec.ChallengeIdx \u2192 \u211d\u22650\n\u22a2 rbrKnowledgeSoundness relIn relOut verifier rbrKnowledgeError \u2192\n    knowledgeSoundness relIn relOut verifier (\u2211 i, rbrKnowledgeError i)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/OracleReduction/Security/Basic.lean#L429"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-28T13:43:25-07:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "9403abb6223ce075cfcc6cab81eb0a1b10e8e621d5db2ebc1016d6facae1fdef"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/Basic.lean",
        "start_line": 429,
        "start_column": 2,
        "end_line": 429,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nO\u2098\u2081 : (i : pSpec\u2081.MessageIdx) \u2192 OracleInterface (pSpec\u2081.Message i)\nO\u2098\u2082 : (i : pSpec\u2082.MessageIdx) \u2192 OracleInterface (pSpec\u2082.Message i)\ninst\u271d\u00b2 : (i : pSpec\u2081.ChallengeIdx) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b9 : (i : pSpec\u2082.ChallengeIdx) \u2192 Sampleable (pSpec\u2082.Challenge i)\ninst\u271d : oSpec.DecidableEq\nP\u2081 : Prover pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nP\u2082 : Prover pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\nstmt : Stmt\u2081\nwit : Wit\u2081\n\u22a2 run stmt wit (P\u2081.append P\u2082) = do\n    let __discr \u2190 liftM (run stmt wit P\u2081)\n    match __discr with\n      | (stmt\u2082, wit\u2082, transcript\u2081) => do\n        let __discr \u2190 liftM (run stmt\u2082 wit\u2082 P\u2082)\n        match __discr with\n          | (stmt\u2083, wit\u2083, transcript\u2082) => pure (stmt\u2083, wit\u2083, transcript\u2081 ++\u209c transcript\u2082)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/OracleReduction/Composition/Sequential/Basic.lean#L429"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-28T16:03:02+07:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "ff389583a3a14493ea88d311f5bd7f386e2094d95b6749f378cd71e1a0b95d48"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/Basic.lean",
        "start_line": 459,
        "start_column": 89,
        "end_line": 459,
        "end_column": 94
      },
      "debug_info": {
        "goal": "m n : \u2115\n\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\ninst\u271d\u00b3 : (i : pSpec\u2081.ChallengeIdx) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b2 : (i : pSpec\u2082.ChallengeIdx) \u2192 Sampleable (pSpec\u2082.Challenge i)\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nrel\u2081 : Stmt\u2081 \u2192 Wit\u2081 \u2192 Prop\nrel\u2082 : Stmt\u2082 \u2192 Wit\u2082 \u2192 Prop\nrel\u2083 : Stmt\u2083 \u2192 Wit\u2083 \u2192 Prop\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nR\u2081 : Reduction pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nR\u2082 : Reduction pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\ncompletenessError\u2081 completenessError\u2082 : \u211d\u22650\nh\u2081 : completeness rel\u2081 rel\u2082 R\u2081 completenessError\u2081\nh\u2082 : completeness rel\u2082 rel\u2083 R\u2082 completenessError\u2082\n\u22a2 completeness rel\u2081 rel\u2083 (R\u2081.append R\u2082) (completenessError\u2081 + completenessError\u2082)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/OracleReduction/Composition/Sequential/Basic.lean#L459"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-01T17:09:18-07:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "6981c0322199ff97ae32e02f728534c69de6b0a529caba6749265f2f4a372c1d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/Basic.lean",
        "start_line": 489,
        "start_column": 27,
        "end_line": 489,
        "end_column": 32
      },
      "debug_info": {
        "goal": "case h.e'_6.h.h.h.h.e'_2.h.h.e\n\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\ninst\u271d\u00b2 : oSpec.DecidableEq\ninst\u271d\u00b9 : oSpec.FiniteRange\nn : Fin (0 + 1) \u2192 \u2115\npSpec : (i : Fin (0 + 1)) \u2192 ProtocolSpec (n i)\ninst\u271d : (i : Fin (0 + 1)) \u2192 (j : (pSpec i).ChallengeIdx) \u2192 Sampleable ((pSpec i).Challenge j)\nStmt Wit : Fin (0 + 2) \u2192 Type\nrel : (i : Fin (0 + 2)) \u2192 Stmt i \u2192 Wit i \u2192 Prop\nR : (i : Fin (0 + 1)) \u2192 Reduction (pSpec i) oSpec (Stmt i.castSucc) (Wit i.castSucc) (Stmt i.succ) (Wit i.succ)\ncompletenessError : Fin (0 + 1) \u2192 \u211d\u22650\nh : \u2200 (i : Fin 1), completeness (rel i.castSucc) (rel i.succ) (R i) (completenessError i)\ne_1\u271d\u00b9 : \u2211 i, n i = n 0\nhe\u271d : ProtocolSpec.compose 0 n pSpec = pSpec 0\nx\u271d : { i // (ProtocolSpec.compose 0 n pSpec i).1 = Direction.V_to_P }\ne_1\u271d : (ProtocolSpec.compose 0 n pSpec \u2191x\u271d).2 = (pSpec 0 \u2191x\u271d).2\n\u22a2 instSampleableChallengeCompose = inst\u271d 0",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/OracleReduction/Composition/Sequential/Basic.lean#L489"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-23T10:22:30+07:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "46190574d912f3b276b8956b56e28a4bde53f2ec71fd292107be42e3d80131d8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/Basic.lean",
        "start_line": 491,
        "start_column": 4,
        "end_line": 491,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case succ\n\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\ninst\u271d\u00b2 : oSpec.DecidableEq\ninst\u271d\u00b9 : oSpec.FiniteRange\nm : \u2115\nih :\n  \u2200 {n : Fin (m + 1) \u2192 \u2115} {pSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)}\n    [inst : (i : Fin (m + 1)) \u2192 (j : (pSpec i).ChallengeIdx) \u2192 Sampleable ((pSpec i).Challenge j)]\n    {Stmt Wit : Fin (m + 2) \u2192 Type} {rel : (i : Fin (m + 2)) \u2192 Stmt i \u2192 Wit i \u2192 Prop}\n    (R : (i : Fin (m + 1)) \u2192 Reduction (pSpec i) oSpec (Stmt i.castSucc) (Wit i.castSucc) (Stmt i.succ) (Wit i.succ))\n    (completenessError : Fin (m + 1) \u2192 \u211d\u22650),\n    (\u2200 (i : Fin (m + 1)), completeness (rel i.castSucc) (rel i.succ) (R i) (completenessError i)) \u2192\n      completeness (rel 0) (rel (Fin.last (m + 1))) (compose m n pSpec Stmt Wit R) (\u2211 i, completenessError i)\nn : Fin (m + 1 + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1 + 1)) \u2192 ProtocolSpec (n i)\ninst\u271d : (i : Fin (m + 1 + 1)) \u2192 (j : (pSpec i).ChallengeIdx) \u2192 Sampleable ((pSpec i).Challenge j)\nStmt Wit : Fin (m + 1 + 2) \u2192 Type\nrel : (i : Fin (m + 1 + 2)) \u2192 Stmt i \u2192 Wit i \u2192 Prop\nR : (i : Fin (m + 1 + 1)) \u2192 Reduction (pSpec i) oSpec (Stmt i.castSucc) (Wit i.castSucc) (Stmt i.succ) (Wit i.succ)\ncompletenessError : Fin (m + 1 + 1) \u2192 \u211d\u22650\nh : \u2200 (i : Fin (m + 1 + 1)), completeness (rel i.castSucc) (rel i.succ) (R i) (completenessError i)\n\u22a2 completeness (rel 0) (rel (Fin.last (m + 1 + 1))) (compose (m + 1) n pSpec Stmt Wit R) (\u2211 i, completenessError i)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/OracleReduction/Composition/Sequential/Basic.lean#L491"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-23T10:22:30+07:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "ae62a720f32f451490cdd962d1e3e6708b6e82e162cee3ef8e6ed17411e9e945"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
        "start_line": 495,
        "start_column": 2,
        "end_line": 495,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\ninst\u271d : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\nstmt : Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 OracleStatement R n deg i)\ntranscript : FullTranscript ![(Direction.P_to_V, \u21a5R\u2983\u2264 \u2191deg\u2984[X]), (Direction.V_to_P, R)]\nx : (pSpec R deg).getType 0\nhp_i : \u2191(transcript 0) \u2208 R\u2983\u2264 \u2191deg\u2984[X]\nhEq : transcript 0 = \u27e8\u2191(transcript 0), hp_i\u27e9\n\u22a2 (do\n      let a \u2190\n        ((OptionT.run (mapM (fun i => liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (D i))) (List.finRange m))).bind\n                fun __do_lift =>\n                __do_lift.elim (FreeMonad.pure none)\n                  (OptionT.run \u2218 fun evals => do\n                    if evals.sum = stmt.1.target then pure () else failure\n                    (fun a => { target := a, challenges := Fin.snoc stmt.1.challenges (transcript 1) }) <$>\n                        liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (transcript 1)))).mapM\n            fun {\u03b1} => (OracleInterface.simOracle2 oSpec stmt.2 transcript.messages).impl\n      (fun a => (a, fun i_1 => stmt.2 i_1)) <$> a.getM) =\n    (fun a =>\n        ({ target := Polynomial.eval (transcript 1) \u2191(transcript 0),\n            challenges := Fin.snoc stmt.1.challenges (transcript 1) },\n          stmt.2)) <$>\n      if \u2211 x, Polynomial.eval (D x) \u2191(transcript 0) = stmt.1.target then pure () else failure",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/ProofSystem/Sumcheck/Basic.lean#L495"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-18T19:07:20+07:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "b811112245ecb5dca87a20a0fd136ace45bc965f2f942d4af4cba61eb86bd5ce"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
        "start_line": 513,
        "start_column": 57,
        "end_line": 513,
        "end_column": 62
      },
      "debug_info": {
        "goal": "case left\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 OracleStatement R n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast \u22ef)) \u2191(oStmt 0) =\n    target\n\u22a2 (do\n      let x \u2190\n        ({ prover := prover R n deg D oSpec i,\n                        verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.sendMessage\n                \u27e80, \u22ef\u27e9\n                ({ prover := prover R n deg D oSpec i,\n                          verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.input\n                  ({ target := target, challenges := challenge }, oStmt) witIn\u271d)).liftComp\n            (oSpec ++\u2092 [(pSpec R deg).Challenge]\u2092)\n      let a \u2190 liftM (query (Sum.inr \u27e81, \u22ef\u27e9) ())\n      (fun a_1 =>\n            ({ prover := prover R n deg D oSpec i,\n                          verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.toProverOut.1\n                ({ prover := prover R n deg D oSpec i,\n                          verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.receiveChallenge\n                  \u27e81, \u22ef\u27e9 x.2 a),\n              a_1, Transcript.snoc a (Transcript.snoc x.1 default))) <$>\n          (Verifier.run ({ target := target, challenges := challenge }, oStmt)\n                (Transcript.snoc a (Transcript.snoc x.1 default))\n                { prover := prover R n deg D oSpec i,\n                      verifier := oracleVerifier R n deg D oSpec i }.toReduction.verifier).liftComp\n            (oSpec ++\u2092 [(pSpec R deg).Challenge]\u2092)).neverFails",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/ProofSystem/Sumcheck/Basic.lean#L513"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "3ac088511b47029a26d9c4c323340dc5ebdf616a1f950c9b6a9299018b5b40d8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
        "start_line": 522,
        "start_column": 2,
        "end_line": 522,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case right\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 OracleStatement R n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast \u22ef)) \u2191(oStmt 0) =\n    target\n\u22a2 \u2200 (a : Statement R n i.succ) (b : (i : Fin 1) \u2192 OracleStatement R n deg i) (b_1 : Unit) (a_1 : Statement R n i.succ)\n    (b_2 : (i : Fin 1) \u2192 OracleStatement R n deg i) (b_3 : (pSpec R deg).FullTranscript),\n    (((a, b), b_1), (a_1, b_2), b_3) \u2208\n        (run ({ target := target, challenges := challenge }, oStmt) witIn\u271d\n            { prover := prover R n deg D oSpec i, verifier := oracleVerifier R n deg D oSpec i }.toReduction).support \u2192\n      (match (a_1, b_2) with\n        | ({ target := target, challenges := challenges }, oStmt) =>\n          match oStmt 0 with\n          | \u27e8poly, property\u27e9 =>\n            \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n                (MvPolynomial.eval (Fin.append challenges x \u2218 Fin.cast \u22ef)) poly =\n              target) \u2227\n        (a, b) = (a_1, b_2)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/ProofSystem/Sumcheck/Basic.lean#L522"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-18T19:07:20+07:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "a7f2757e01506bedc5df9fa6f778328519644a12cfefe1cf14d7d1406ec143f0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
        "start_line": 571,
        "start_column": 4,
        "end_line": 571,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R\u271d : Type\ninst\u271d\u2075 : CommSemiring R\u271d\nn\u271d deg\u271d m\u271d : \u2115\nD\u271d : Fin m\u271d \u21aa R\u271d\n\u03b9\u271d : Type\noSpec\u271d : OracleSpec \u03b9\u271d\ninst\u271d\u2074 : VCVCompatible R\u271d\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni\u271d : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ni : Fin (n + 1)\nstmt : Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 OracleStatement R n deg i)\ntr : Transcript (Fin.last 2) (pSpec R deg)\nhFalse :\n  \u00acrelation R n deg D i.succ ({ target := stmt.1.target, challenges := Fin.snoc stmt.1.challenges (tr 1) }, stmt.2) ()\n\u22a2 \u2200 (a : Statement R n i.succ) (b : (i : Fin 1) \u2192 OracleStatement R n deg i),\n    (a, b) \u2208 (Verifier.run stmt tr (verifier R n deg D oSpec i)).support \u2192\n      \u2200 (x : Unit), \u00acrelation R n deg D i.succ (a, b) x",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/ProofSystem/Sumcheck/Basic.lean#L571"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "7eb57337a4a53afb95245e7e428de73d21423347faef6a472bf1ca807546d58b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "BoltonBailey/sumcheck-blueprint-graph",
        "commit": "20200cc6a383c7a9a393c07401eca95d6ddc2ab5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
        "start_line": 646,
        "start_column": 42,
        "end_line": 646,
        "end_column": 47
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\nn deg m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\n\u22a2 OracleReduction.perfectCompleteness (relIn R n deg D) (relOut R n deg) (reduction R n deg)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/20200cc6a383c7a9a393c07401eca95d6ddc2ab5/ArkLib/ProofSystem/Sumcheck/Basic.lean#L646"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-05-25T07:29:19.858722+00:00"
      },
      "id": "155192ee144b7a2eca0dac294e33382594c03befc133f75acbedddc961502efa"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 62,
        "start_column": 9,
        "end_line": 62,
        "end_column": 14
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b9 : (i : \u03b9\u209b\u1d62) \u2192 OracleInterface (OStatement i)\nWitEquiv : Type\ninst\u271d : OracleInterface WitEquiv\nequiv : Witness \u2243 WitEquiv\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 Unit),\n    (OStatement \u2295\u1d65 fun x => WitEquiv) i =\n      match (\u22ef.mpr sorry) i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => ProtocolSpec.Message (SendWitness.pSpec WitEquiv) j",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/ProofSystem/Components.lean#L62"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "59cb2a8e77b7aebdf6e666635ddbbfeb9a50f64f721652a83e914369d8206535"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 80,
        "start_column": 2,
        "end_line": 80,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b2 : (i : \u03b9\u209b\u1d62) \u2192 OracleInterface (OStatement i)\nWitEquiv : Type\ninst\u271d\u00b9 : OracleInterface WitEquiv\nequiv : Witness \u2243 WitEquiv\nrelIn : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Witness \u2192 Prop\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness relIn (SendWitness.toRelOut Statement Witness \u03b9\u209b\u1d62 OStatement WitEquiv equiv relIn)\n    (SendWitness.oracleReduction \u03b9 oSpec Statement Witness \u03b9\u209b\u1d62 OStatement inst\u271d\u00b2 WitEquiv inst\u271d\u00b9 equiv)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/ProofSystem/Components.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "01da9ad8055daf439c35e257a4b0510d6cc61f7e9ffdd0990d1e510c25b5f1b0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 141,
        "start_column": 9,
        "end_line": 141,
        "end_column": 14
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst : (i : \u03b9\u209b\u1d62) \u2192 OracleInterface (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 \u03b9\u209b\u1d62),\n    (OStatement \u2295\u1d65 OStatement) i =\n      match sorry i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => ProtocolSpec.Message (SameOracle.pSpec \u03b9\u209b\u1d62 inst\u271d OStatement) j",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/ProofSystem/Components.lean#L141"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "8162fd53799f1bd17008cf041e9e1f8e315523a6cc929020bba713bcc43389de"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 167,
        "start_column": 2,
        "end_line": 167,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d\u00b9 : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst : (i : \u03b9\u209b\u1d62) \u2192 OracleInterface (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (fun x x_1 => rel x) (SameOracle.relOut \u03b9\u209b\u1d62 inst\u271d\u00b9 OStatement)\n    (SameOracle.oracleReduction \u03b9 oSpec Statement \u03b9\u209b\u1d62 inst\u271d\u00b9 OStatement inst relComp)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/ProofSystem/Components.lean#L167"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "5c25ea2e4631fc3c1682bbca28aa010d2ce494beff7f7e822e53e6d81a7bfe6d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 259,
        "start_column": 2,
        "end_line": 259,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nOStatement : Type\ninst\u271d\u00b9 : OracleInterface OStatement\ninst : VCVCompatible (Query OStatement)\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (RandomQuery.relIn OStatement) (RandomQuery.relOut OStatement inst\u271d\u00b9)\n    (RandomQuery.oracleReduction \u03b9 oSpec OStatement inst\u271d\u00b9)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/ProofSystem/Components.lean#L259"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "5cf4c87c671aba39bd57acc260219fd430fdb1fa31a1e1d18af9f855b60997c8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Execution.lean",
        "start_line": 185,
        "start_column": 2,
        "end_line": 185,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let a \u2190\n        (simulateQ loggingOracle\n              (Prover.runToRound n pSpec \u03b9 oSpec StmtIn WitIn StmtOut WitOut inst\u271d (Fin.last n) stmt wit\n                reduction.prover)).run\n      (fun a_1 => (reduction.prover.toProverOut.1 a.1.2, a_1.1, a.1.1)) <$>\n          (simulateQ loggingOracle (reduction.verifier.verify stmt a.1.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190 Prover.run n pSpec \u03b9 oSpec StmtIn WitIn StmtOut WitOut inst\u271d stmt wit reduction.prover\n    (fun a => ((__discr.1, __discr.2.1), a, __discr.2.2)) <$>\n        (reduction.verifier.verify stmt __discr.2.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/OracleReduction/Execution.lean#L185"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "df1be8046dbdb54fbb8bfffd52016bcf0620f70f1f069484c9ad5fc253ca1850"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Execution.lean",
        "start_line": 278,
        "start_column": 2,
        "end_line": 278,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\npSpec : ProtocolSpec 1\ninst\u271d : pSpec.ProverOnly\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let __discr \u2190\n        (fun a =>\n              ((reduction.prover.toProverOut.1 a.2).1, (reduction.prover.toProverOut.1 a.2).2, fun i =>\n                @Prover.run_of_prover_first.match_1 (fun i => (pSpec i).2) i fun isLt => a.1)) <$>\n            (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp\n              (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n      ((fun a => ((__discr.1, __discr.2.1), a, __discr.2.2)) <$> reduction.verifier.verify stmt __discr.2.2).liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190\n      (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n    ((fun a =>\n              (reduction.prover.toProverOut.1 __discr.2, a, fun i =>\n                @Prover.run_of_prover_first.match_1 (fun i => (pSpec i).2) i fun isLt => __discr.1)) <$>\n            reduction.verifier.verify stmt fun i =>\n              @Prover.run_of_prover_first.match_1 (fun i => (pSpec i).2) i fun isLt => __discr.1).liftComp\n        (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/OracleReduction/Execution.lean#L278"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "401b9ab50dea6d1e30874c6facfec0987981b9acd81d53fd92c250b89deeec94"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/OracleInterface.lean",
        "start_line": 312,
        "start_column": 2,
        "end_line": 312,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u2075 : CommRing R\nd : \u2115\ninst\u271d\u2074 : Fintype R\ninst\u271d\u00b3 : DecidableEq R\ninst\u271d\u00b2 : IsDomain R\n\u03c3 : Type\ninst\u271d\u00b9 : Fintype \u03c3\ninst\u271d : DecidableEq \u03c3\na : MvPolynomial \u03c3 R\nha : \u2200 (s : \u03c3 \u2192\u2080 \u2115), \u00acMvPolynomial.coeff s a = 0 \u2192 \u2200 (i : \u03c3), s i \u2264 d\nb : MvPolynomial \u03c3 R\nhb : \u2200 (s : \u03c3 \u2192\u2080 \u2115), \u00acMvPolynomial.coeff s b = 0 \u2192 \u2200 (i : \u03c3), s i \u2264 d\nhNe : \u00aca = b\n\u22a2 {q | (MvPolynomial.eval q) a = (MvPolynomial.eval q) b}.card \u2264 Fintype.card \u03c3 * d",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/OracleReduction/OracleInterface.lean#L312"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "06887689f3d7ce5013e74a50e2ff948963e2a34a70074cc63ce33f53ed9effd8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/OracleInterface.lean",
        "start_line": 351,
        "start_column": 2,
        "end_line": 351,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\nR : Type\ninst\u271d : CommSemiring R\nm : \u2115\nD : Fin m \u21aa R\np : Polynomial R\n\u22a2 \u2203 x,\n    ((OptionT.run (List.mapM (fun i => liftM (query (Sum.inr ()) (D i))) (List.finRange m))).mapM fun {\u03b1} =>\n          QueryImpl.impl\n            (@SimOracle.statelessOracle Unit \u03b9 spec\n              (OracleInterface.toOracleSpec Unit (fun x => Polynomial R) fun i => instOracleInterfacePolynomial R inst\u271d)\n              fun i q => OracleInterface.oracle (Polynomial R) (instOracleInterfacePolynomial R inst\u271d) p q)) =\n        pure x \u2227\n      x.getM = pure (List.map (fun i => eval (D i) p) (List.finRange m))",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/OracleReduction/OracleInterface.lean#L351"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "70b415361105d28e2a3d656b57d017e6bfb2b0b5807ed452213f8d5fc2293246"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Transform/FiatShamir.lean",
        "start_line": 130,
        "start_column": 66,
        "end_line": 130,
        "end_column": 71
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u2074 : VCVCompatible StmtIn\ninst\u271d\u00b3 : (i : Fin n) \u2192 VCVCompatible (pSpec i).2\ninst\u271d\u00b2 : DecidableEq \u03b9\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\ncompletenessError : NNReal\nR : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 Reduction.completeness relIn relOut R completenessError \u2192\n    Reduction.completeness relIn relOut (Reduction.fiatShamir n pSpec \u03b9 oSpec StmtIn WitIn StmtOut WitOut R)\n      completenessError",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Transform/FiatShamir.lean#L130"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-06T23:33:56-04:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "73ca76d415451210a07fff351932422a0fc7fc7027f2c9e1fd7071f45b78ddeb"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/CommitmentScheme/Fold.lean",
        "start_line": 103,
        "start_column": 2,
        "end_line": 103,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\np : Polynomial R\n\u22a2 (FRI.splitEvenOdd R inst\u271d\u00b9 p).1.natDegree \u2264 p.natDegree / 2",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/CommitmentScheme/Fold.lean#L103"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "2e3e614447057d8114f3512b660d034c24abdf12252f1d4567117c8013be1aa0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/CommitmentScheme/Fold.lean",
        "start_line": 107,
        "start_column": 2,
        "end_line": 107,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\np : Polynomial R\n\u22a2 (FRI.splitEvenOdd R inst\u271d\u00b9 p).2.natDegree \u2264 p.natDegree / 2",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/CommitmentScheme/Fold.lean#L107"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "0db3a2a71e4e312af69225830b895f175be70a311c5bafa963d44e6c24f4f75c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/CommitmentScheme/Fold.lean",
        "start_line": 119,
        "start_column": 11,
        "end_line": 119,
        "end_column": 16
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\nn deg : \u2115\n\u03b6 : R\u02e3\nhPrim : IsPrimitiveRoot \u03b6 (2 ^ n)\np : \u21a5(Polynomial.degreeLT R (2 * n))\npEven pOdd : Polynomial R\n\u22a2 pEven \u2208 Polynomial.degreeLT R n",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/CommitmentScheme/Fold.lean#L119"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "5e2d31ad1fbc511fb0b30dcaca118e1a9a49fe6d09c795383f55e84c9c4b206d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/CommitmentScheme/Fold.lean",
        "start_line": 119,
        "start_column": 26,
        "end_line": 119,
        "end_column": 31
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\nn deg : \u2115\n\u03b6 : R\u02e3\nhPrim : IsPrimitiveRoot \u03b6 (2 ^ n)\np : \u21a5(Polynomial.degreeLT R (2 * n))\npEven pOdd : Polynomial R\n\u22a2 pOdd \u2208 Polynomial.degreeLT R n",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/CommitmentScheme/Fold.lean#L119"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "343eaff5f9295e67689d38bb541df2f16d16979346a3283e92833d8174c37ac1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/CommitmentScheme/MerkleTree.lean",
        "start_line": 219,
        "start_column": 6,
        "end_line": 219,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case succ\n\u03b1 : Type\ninst\u271d\u00b2 : DecidableEq \u03b1\ninst\u271d\u00b9 : Inhabited \u03b1\ninst\u271d : Fintype \u03b1\nhash : \u03b1 \u00d7 \u03b1 \u2192 \u03b1\nn : \u2115\nih :\n  \u2200 (leaves : List.Vector \u03b1 (2 ^ n)) (i : Fin (2 ^ n)),\n    (simulateQ (@MerkleTree.implement_with_function \u03b1 hash)\n        (do\n          let cache \u2190 MerkleTree.buildMerkleTree \u03b1 n leaves\n          let proof : List.Vector \u03b1 n := MerkleTree.generateProof \u03b1 n i cache\n          MerkleTree.verifyProof \u03b1 inst\u271d\u00b2 n i leaves[i] (MerkleTree.getRoot \u03b1 n cache) proof\n          pure PUnit.unit)\n        ()).neverFails\nleaves : List.Vector \u03b1 (2 ^ (n + 1))\ni : Fin (2 ^ (n + 1))\n\u22a2 ((((Option.elimM (OptionT.run (MerkleTree.buildMerkleTree \u03b1 (n + 1) leaves)) (FreeMonad.pure none)\n              (@Function.comp (MerkleTree.Cache \u03b1 (n + 1))\n                (OptionT (FreeMonad (OracleQuery (MerkleTree.spec \u03b1))) PUnit.{1})\n                (FreeMonad (OracleQuery (MerkleTree.spec \u03b1)) (Option PUnit.{1})) OptionT.run fun cache =>\n                MerkleTree.verifyProof \u03b1 inst\u271d\u00b2 (n + 1) i (leaves.get i) (MerkleTree.getRoot \u03b1 (n + 1) cache)\n                  (MerkleTree.generateProof \u03b1 (n + 1) i cache))).mapM\n          fun {\u03b1_1} q =>\n          @MerkleTree.implement_with_function.match_1 \u03b1 (fun \u03b1_2 q => StateT Unit (OracleComp []\u2092) \u03b1_2) \u03b1_1 q\n            fun i left right => pure (hash (left, right))) >>=\n        fun __do_lift => __do_lift.getM)\n      ()).neverFails",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/CommitmentScheme/MerkleTree.lean#L219"
      },
      "metadata": {
        "blame_email_hash": "ab200eba5736",
        "blame_date": "2025-04-16T13:24:09-07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "d48bc9e7ab12c38ff7b5c4164caf37ae26818f1c8bcb86e02166004d69630b36"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/AGM/Basic.lean",
        "start_line": 160,
        "start_column": 2,
        "end_line": 160,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d\u00b2 : Fact (Nat.Prime p)\nG\u2081 : Type u_2\ninst\u271d\u00b9 : CommGroup G\u2081\ninst\u271d : @IsPrimeOrderWith G\u2081 CommGroup.toGroup p inst\u271d\u00b2\nn : \u2115\ng : G\u2081\na : ZMod p\npoly : \u21a5(degreeLT (ZMod p) (n + 1))\n\u22a2 g ^ \u2211 i, a.val ^ \u2191i * ((degreeLTEquiv (ZMod p) (n + 1)) poly i).val =\n    g ^ (\u2211 x, (degreeLTEquiv (ZMod p) (n + 1)) poly x * a ^ \u2191x).val",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/AGM/Basic.lean#L160"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-15T12:13:54+05:30",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "0b4bb24c55e6c623a28dfb1e84d797a33b17a735020648db11a4aa465a26f174"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/AGM/Basic.lean",
        "start_line": 171,
        "start_column": 6,
        "end_line": 171,
        "end_column": 11
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u2078 : CommGroup G\np : \u2115\ninst\u271d\u2077 : Fact (Nat.Prime p)\nh : Nat.card G = p\ng : G\nG\u2081 : Type u_2\ninst\u271d\u2076 : CommGroup G\u2081\ninst\u271d\u2075 : @IsPrimeOrderWith G\u2081 CommGroup.toGroup p inst\u271d\u2077\ng\u2081 : G\u2081\nG\u2082 : Type u_3\ninst\u271d\u2074 : CommGroup G\u2082\ninst\u271d\u00b3 : @IsPrimeOrderWith G\u2082 CommGroup.toGroup p inst\u271d\u2077\ng\u2082 : G\u2082\nG\u209c : Type u_4\ninst\u271d\u00b2 : CommGroup G\u209c\ninst\u271d\u00b9 : @IsPrimeOrderWith G\u209c CommGroup.toGroup p inst\u271d\u2077\npairing : Additive G\u2081 \u2192\u2097[\u2124] Additive G\u2082 \u2192\u2097[\u2124] Additive G\u209c\nn : \u2115\ninst\u271d : Fact (Nat.Prime p)\nsrs : Vector G\u2081 (n + 1)\ncoeffs : Fin (n + 1) \u2192 ZMod p\nz : ZMod p\npoly : \u21a5(degreeLT (ZMod p) (n + 1)) := (degreeLTEquiv (ZMod p) (n + 1)).invFun coeffs\nthis : Field (ZMod p)\n\u22a2 ((\u2191poly - C (eval z \u2191poly)) / (X - C z)).degree < \u2191(n + 1)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/AGM/Basic.lean#L171"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-03-15T21:13:06-06:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "e6fb1b57c97da1b95f3f6c70cd9698c6bac7e19b7122d6f0fb601ca32c1fb168"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/Basic.lean",
        "start_line": 186,
        "start_column": 33,
        "end_line": 186,
        "end_column": 38
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\nC : Set (n \u2192 R)\ninst\u271d : Fintype \u2191C\nh : \u00acSubsingleton \u2191C\n\u22a2 @codeDist' n inst\u271d\u00b2 R inst\u271d\u00b9 C inst\u271d \u2260 \u22a4",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/CodingTheory/Basic.lean#L186"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "e334b63a6910320226b166c9879a4c5f7522aaebdc925600ea86e3ecf029b2bd"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/Basic.lean",
        "start_line": 187,
        "start_column": 4,
        "end_line": 187,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case neg\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\nC : Set (n \u2192 R)\ninst\u271d : Fintype \u2191C\nh : \u00acSubsingleton \u2191C\nthis : @codeDist' n inst\u271d\u00b2 R inst\u271d\u00b9 C inst\u271d \u2260 \u22a4\n\u22a2 ENat.toNat (Finset.image (fun x => hammingDist \u2191x.1 \u2191x.2) {p | \u00acp.1 = p.2}).min =\n    sInf {d | \u2203 u \u2208 C, \u2203 v \u2208 C, \u00acu = v \u2227 hammingDist u v \u2264 d}",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/CodingTheory/Basic.lean#L187"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "83cb34385467da6ef6f2f42d37220876f4b767596bcf7eb5b0443d8914094551"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/Basic.lean",
        "start_line": 231,
        "start_column": 4,
        "end_line": 231,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case e_a.h.h\u2081.intro.intro.intro.intro.intro\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : CommSemiring R\nC : Submodule R (n \u2192 R)\nd : \u2115\nu : n \u2192 R\nhu : u \u2208 C\nv : n \u2192 R\nhv : v \u2208 C\nhuv : \u00acu = v\nhDist : hammingDist u v \u2264 d\n\u22a2 \u2203 u \u2208 C, \u00acu = 0 \u2227 hammingNorm u \u2264 d",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/CodingTheory/Basic.lean#L231"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "ac4452ae0341c64ff1591498d568223a01e9572ab6da22f2adef3a74b2fa8ff6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/Basic.lean",
        "start_line": 234,
        "start_column": 4,
        "end_line": 234,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case e_a.h.h\u2082.intro.intro.intro\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : CommSemiring R\nC : Submodule R (n \u2192 R)\nd : \u2115\nu : n \u2192 R\nhu : u \u2208 C\nhNorm : \u00acu = 0\nhDist : hammingNorm u \u2264 d\n\u22a2 \u2203 u \u2208 C, \u2203 v \u2208 C, \u00acu = v \u2227 hammingDist u v \u2264 d",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/CodingTheory/Basic.lean#L234"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "83dc4122f940919185d0f2a4b73a28222704bbef631f1dbafca6817ee5c4df94"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/Basic.lean",
        "start_line": 395,
        "start_column": 65,
        "end_line": 395,
        "end_column": 70
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b3 : Fintype n\nR : Type u_2\ninst\u271d\u00b2 : DecidableEq R\ninst\u271d\u00b9 : Finite R\ninst\u271d : DivisionRing R\nC : Submodule R (n \u2192 R)\n\u22a2 Module.finrank R \u21a5C \u2264 card n - @codeDist n inst\u271d\u00b3 R inst\u271d\u00b2 C.carrier + 1",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/CodingTheory/Basic.lean#L395"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-26T22:44:38-04:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "f857a4ab278795ce626753cd4ad7b1e55176d9d5a2ffd06b730856080c4372c1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 34,
        "start_column": 14,
        "end_line": 34,
        "end_column": 19
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\n\u22a2 Function.LeftInverse (@MlPoly.ofSpec R inst\u271d n) (@MlPoly.toSpec R inst\u271d n)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/MlPoly/Equiv.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "f38a5d3c751a173534fa517146ed7b5aea57fa55b2b221e6fd519ac15844e93e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 35,
        "start_column": 15,
        "end_line": 35,
        "end_column": 20
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\n\u22a2 Function.RightInverse (@MlPoly.ofSpec R inst\u271d n) (@MlPoly.toSpec R inst\u271d n)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/MlPoly/Equiv.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "f33e54ce5593c1338d0da2021be5ca16e3053e8e26e42f044923ccb0ce11e5f0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 43,
        "start_column": 2,
        "end_line": 43,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\np q : MlPoly R n\n\u22a2 @MlPoly.toSpec R inst\u271d n (p + q) = @MlPoly.toSpec R inst\u271d n p + @MlPoly.toSpec R inst\u271d n q",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/MlPoly/Equiv.lean#L43"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "076f6024e6f2357d7c867b5c02bf3f9bba2302a3c0a674ab698e9794ae8fedfa"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 47,
        "start_column": 2,
        "end_line": 47,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : CommSemiring R\nn : \u2115\nS : Type u_2\ninst\u271d : CommSemiring S\nf : R \u2192+* S\np : MlPoly R n\nx : Vector S n\n\u22a2 p.eval\u2082 f x = MvPolynomial.eval\u2082 f x.get \u2191(@MlPoly.toSpec R inst\u271d\u00b9 n p)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/MlPoly/Equiv.lean#L47"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "fadc040af24b99b885604f219ba0cccf060c682350377adf6f823a6fca12f9d6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 49,
        "start_column": 2,
        "end_line": 49,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : AddCommMonoid R\nn : \u2115\na : R\nb : Vector R n\nc : R\nd : Vector R n\n\u22a2 get (@Vector.cons R n a b) \u2b1d\u1d65 get (@Vector.cons R n c d) = a * c + b.get \u2b1d\u1d65 d.get",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/MlPoly/Basic.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-14T11:09:39-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "094ec93426749dc9861964706185ac83f93f3faf1e8bb46834817bb2919ed798"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 121,
        "start_column": 18,
        "end_line": 121,
        "end_column": 23
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : Semiring R\n\u22a2 \u2200 (a : R), @HSMul.hSMul R (@MlPoly R n) (@MlPoly R n) instHSMul a 0 = 0",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/MlPoly/Basic.lean#L121"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "a6845759532794135c64a3e579621839c67e34af3deb5b43194f3e59deafd38a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Basic.lean",
        "start_line": 149,
        "start_column": 2,
        "end_line": 149,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nunit : \u03b1\nl l' : List \u03b1\nm n n' : \u2115\nh : n \u2264 m\nh' : n' \u2264 m\nhEq : rightpad n unit l = rightpad n' unit l'\nhLen : max n l.length = max n' l'.length\n\u22a2 l ++ replicate (n - l.length + (m - max n' l'.length)) unit =\n    l' ++ replicate (n' - l'.length + (m - max n' l'.length)) unit",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/Math/Basic.lean#L149"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "4931e867e4a649cdbfdfb154a71f893941f28d4413a34e703f1d9e801c00e55f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Basic.lean",
        "start_line": 203,
        "start_column": 5,
        "end_line": 203,
        "end_column": 10
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nl\u2081 l\u2082 : List \u03b1\nunit : \u03b1\n\u22a2 (@fun x => @List.matchSize_eq_iff_forall_eq.match_1 \u03b1 (fun x => Prop) x fun x y => x = y)\n      (@List.matchSize \u03b1 l\u2081 l\u2082 unit) \u2194\n    \u2200 (i : \u2115), l\u2081.getD i unit = l\u2082.getD i unit",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/Math/Basic.lean#L203"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-14T17:35:17-06:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "e241f2ffb8e9170c1591f43b3e3c3e921c51ef1a0c2131a42175611cfcf0b062"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Basic.lean",
        "start_line": 382,
        "start_column": 75,
        "end_line": 382,
        "end_column": 80
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\np : \u03b1 \u2192 Bool\nas : Array \u03b1\nh : (popWhile p as).size > 0\n\u22a2 \u00acp (@Array.getLast \u03b1 (popWhile p as) h) = true",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/Math/Basic.lean#L382"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-14T17:35:17-06:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "dfacbde3be889fa49e7597a35096fd6b06522834ead9050a4b48e18ae3cfb087"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Basic.lean",
        "start_line": 460,
        "start_column": 4,
        "end_line": 460,
        "end_column": 9
      },
      "debug_info": {
        "goal": "l : List \u2115\nj a : \u2115\nl' : List \u2115\nh : j < a + l'.sum\n\u22a2 \u2203 n, @List.findSum \u2115 Nat.instAddMonoid Nat.instPreorder Nat.decLt (a :: l') j = some n",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/Math/Basic.lean#L460"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-23T10:22:30+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "5bbeb190df4fc4f28311f02ad036f9b470fba1c8e768f3c8f0f6138c570ded98"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Basic.lean",
        "start_line": 472,
        "start_column": 80,
        "end_line": 472,
        "end_column": 85
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d\u00b2 : AddMonoid \u03b1\ninst\u271d\u00b9 : Preorder \u03b1\ninst\u271d : DecidableRel fun x1 x2 => x1 < x2\nl : List \u2115\nj : Fin l.sum\n\u22a2 @List.findSumIdx \u2115 Nat.instAddMonoid Nat.instPreorder Nat.decLt l \u2191j < l.length",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/Math/Basic.lean#L472"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-23T10:22:30+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "b941c63125079541585e54d0dc2d60f2b7820c29f0f44391f536eeb77a559139"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MvPolynomial/Sumcheck.lean",
        "start_line": 75,
        "start_column": 2,
        "end_line": 75,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\n\u03c3 : Type u_3\n\u03c3\u2081 : Type u_4\n\u03c3\u2082 : Type u_5\nx : \u03c3\u2081 \u2192 R\nf : \u03c3 \u2192 \u03c3\u2081 \u2295 \u03c3\u2082\np : MvPolynomial \u03c3 R\nb : \u03c3\u2081 \u2192\u2080 \u2115\nh : \u00accoeff b ((sumToIter R \u03c3\u2081 \u03c3\u2082) ((rename f) p)) = 0\n\u22a2 (coeff b ((sumToIter R \u03c3\u2081 \u03c3\u2082) ((rename f) p))).degrees \u2264 Multiset.filterMap Sum.getRight? (Multiset.map f p.degrees)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/MvPolynomial/Sumcheck.lean#L75"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-16T12:52:41-06:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "7c93facd5b53e3239bc6aba0e100c730d360ceab34eaafe261e1480df5fc6da3"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MvPolynomial/Sumcheck.lean",
        "start_line": 112,
        "start_column": 2,
        "end_line": 112,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\nh : n > 0\nD : Fin (n - 1) \u2192 Finset R\np : MvPolynomial (Fin n) R\n\u22a2 ((@MvPolynomial.sumExceptFirst' R inst\u271d n h D) p).degree \u2264 \u2191(degreeOf \u27e80, h\u27e9 p)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/MvPolynomial/Sumcheck.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-13T15:50:48-04:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "75afa2bc7213299da164585dc4de3e2151a04314243afc9a2e0d56de6374f93f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MvPolynomial/Interpolation.lean",
        "start_line": 69,
        "start_column": 58,
        "end_line": 69,
        "end_column": 63
      },
      "debug_info": {
        "goal": "\u03c3 : Type u_1\ninst\u271d\u2074 : DecidableEq \u03c3\ninst\u271d\u00b3 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : IsDomain R\ninst\u271d : DecidableEq R\np : MvPolynomial \u03c3 R\nhp : p \u2260 0\nS : \u03c3 \u2192 Finset R\n\u22a2 \u2191{x \u2208 p.vars.pi S | (eval (@MvPolynomial.Function.extendDomain \u03c3 R inst\u271d\u2074 MulZeroClass.toZero p.vars x)) p = 0}.card /\n      \u220f i \u2208 p.vars, \u2191(S i).card \u2264\n    \u2211 i \u2208 p.vars, \u2191(degreeOf i p) / \u2191(S i).card",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/MvPolynomial/Interpolation.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-30T15:40:43-04:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "3e2b7e0cc62b0a56014cf52558c8262ea9482e7d2806cc57f54615be8707bfd8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MvPolynomial/Interpolation.lean",
        "start_line": 171,
        "start_column": 76,
        "end_line": 171,
        "end_column": 81
      },
      "debug_info": {
        "goal": "\u03c3 : Type u_1\ninst\u271d\u00b3 : DecidableEq \u03c3\ninst\u271d\u00b2 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b9 : CommRing R\ninst\u271d : IsDomain R\np q : MvPolynomial \u03c3 R\nS : \u03c3 \u2192 Finset R\nhDegree : \u2200 (i : \u03c3), degreeOf i p < (S i).card\nhEval : \u2200 x \u2208 piFinset fun i => S i, (eval x) p = (eval x) q\n\u22a2 p = q",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/MvPolynomial/Interpolation.lean#L171"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-30T15:40:43-04:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "b9ea72ffc6d98d9dac789e5199ed151c9cc824da463d600736888e0d86298c04"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/UniPoly/Basic.lean",
        "start_line": 571,
        "start_column": 2,
        "end_line": 571,
        "end_column": 7
      },
      "debug_info": {
        "goal": "Q : Type u_2\ninst\u271d : Ring Q\np q : @UniPoly Q\ni : \u2115\nhi : i < Array.size (@UniPoly.add_raw Q inst\u271d p q)\n\u22a2 (p ++ Array.replicate (Array.size q - Array.size p) 0)[i] +\n      (q ++ Array.replicate (Array.size p - Array.size q) 0)[i] =\n    p[i]?.getD 0 + q[i]?.getD 0",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/UniPoly/Basic.lean#L571"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "c39861799911bcbe8e3530923ba81d1a7ec4c7551de89309de0f4e1aa4fa701c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/UniPoly/Basic.lean",
        "start_line": 899,
        "start_column": 4,
        "end_line": 899,
        "end_column": 9
      },
      "debug_info": {
        "goal": "Q : Type u_2\ninst\u271d : Ring Q\np q r : @UniPoly Q\nhpq : p ++ Array.replicate (Array.size q - Array.size p) 0 = q ++ Array.replicate (Array.size p - Array.size q) 0\nhqr : q ++ Array.replicate (Array.size r - Array.size q) 0 = r ++ Array.replicate (Array.size q - Array.size r) 0\n\u22a2 p ++ Array.replicate (Array.size r - Array.size p) 0 = r ++ Array.replicate (Array.size p - Array.size r) 0",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/UniPoly/Basic.lean#L899"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "377d800abd3fa33e775f5c25cf33ea263c2a447493772292c3829d807b4d0a0d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 151,
        "start_column": 2,
        "end_line": 151,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nP : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (fun a =>\n        (TransportStatement.fStmtOut StmtIn StmtOut StmtIn' StmtOut'\n            (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n            (a.2.2.1, (P.toProverOut.1 a.2.1).1),\n          TransportWitness.fWitOut WitIn WitOut WitIn' WitOut'\n            (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n            (a.2.2.2, (P.toProverOut.1 a.2.1).2),\n          a.1)) <$>\n      Fin.induction\n        (pure\n          (default,\n            P.input\n              (TransportStatement.fStmtIn StmtIn StmtOut StmtIn' StmtOut'\n                (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n                stmtIn)\n              (TransportWitness.fWitIn WitIn WitOut WitIn' WitOut'\n                (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n                witIn),\n            stmtIn, witIn))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2.1 a, __discr.2.2)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2, __discr.2.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2.1).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n) =\n    (fun a =>\n        (TransportStatement.fStmtOut StmtIn StmtOut StmtIn' StmtOut'\n            (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n            (stmtIn, (P.toProverOut.1 a.2).1),\n          TransportWitness.fWitOut WitIn WitOut WitIn' WitOut'\n            (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n            (witIn, (P.toProverOut.1 a.2).2),\n          a.1)) <$>\n      Fin.induction\n        (pure\n          (default,\n            P.input\n              (TransportStatement.fStmtIn StmtIn StmtOut StmtIn' StmtOut'\n                (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n                stmtIn)\n              (TransportWitness.fWitIn WitIn WitOut WitIn' WitOut'\n                (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n                witIn)))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2 a)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/OracleReduction/Composition/Virtual.lean#L151"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "45ae6e2c20fa508a546f0122eb0e098538b40d49c4d93c8f5a24a00cda204688"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 164,
        "start_column": 2,
        "end_line": 164,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let a \u2190\n        Prover.run\n            (TransportStatement.fStmtIn StmtIn StmtOut StmtIn' StmtOut'\n              (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n              stmtIn)\n            (TransportWitness.fWitIn WitIn WitOut WitIn' WitOut'\n              (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data) witIn)\n            R.prover\n      (fun a_1 =>\n            ((TransportStatement.fStmtOut StmtIn StmtOut StmtIn' StmtOut'\n                  (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n                  (stmtIn, a.1),\n                TransportWitness.fWitOut WitIn WitOut WitIn' WitOut'\n                  (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n                  (witIn, a.2.1)),\n              a_1, a.2.2)) <$>\n          (Verifier.run stmtIn a.2.2\n                {\n                  verify := fun stmtIn transcript =>\n                    (fun a =>\n                        TransportStatement.fStmtOut StmtIn StmtOut StmtIn' StmtOut'\n                          (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut'\n                            WitOut' data)\n                          (stmtIn, a)) <$>\n                      R.verifier.verify\n                        (TransportStatement.fStmtIn StmtIn StmtOut StmtIn' StmtOut'\n                          (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut'\n                            WitOut' data)\n                          stmtIn)\n                        transcript }).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190\n      Prover.run\n          (TransportStatement.fStmtIn StmtIn StmtOut StmtIn' StmtOut'\n            (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n            stmtIn)\n          (TransportWitness.fWitIn WitIn WitOut WitIn' WitOut'\n            (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data) witIn)\n          R.prover\n    (fun a_1 =>\n          ((TransportStatement.fStmtOut StmtIn StmtOut StmtIn' StmtOut'\n                (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n                (stmtIn, a.1),\n              TransportWitness.fWitOut WitIn WitOut WitIn' WitOut'\n                (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n                (witIn, a.2.1)),\n            TransportStatement.fStmtOut StmtIn StmtOut StmtIn' StmtOut'\n              (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n              (stmtIn, a_1),\n            a.2.2)) <$>\n        (Verifier.run\n              (TransportStatement.fStmtIn StmtIn StmtOut StmtIn' StmtOut'\n                (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n                stmtIn)\n              a.2.2 R.verifier).liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/OracleReduction/Composition/Virtual.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "2dc888fc0f899b43675e64b5906f37b2f2f7a56b3e61a5a859847e6725daabc7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 177,
        "start_column": 2,
        "end_line": 177,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let __discr \u2190\n        Prover.runWithLog stmtIn witIn\n            (Prover.transport n pSpec \u03b9 oSpec StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data R.prover)\n      (fun a => ((__discr.1, __discr.2.1), a.1, __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (Verifier.run stmtIn __discr.2.2.1\n                    {\n                      verify := fun stmtIn transcript =>\n                        (fun a =>\n                            TransportStatement.fStmtOut StmtIn StmtOut StmtIn' StmtOut'\n                              (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut'\n                                WitOut' data)\n                              (stmtIn, a)) <$>\n                          R.verifier.verify\n                            (TransportStatement.fStmtIn StmtIn StmtOut StmtIn' StmtOut'\n                              (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut'\n                                WitOut' data)\n                              stmtIn)\n                            transcript })).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190\n      Prover.runWithLog\n          (TransportStatement.fStmtIn StmtIn StmtOut StmtIn' StmtOut'\n            (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n            stmtIn)\n          (TransportWitness.fWitIn WitIn WitOut WitIn' WitOut'\n            (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data) witIn)\n          R.prover\n    (fun a_1 =>\n          ((TransportStatement.fStmtOut StmtIn StmtOut StmtIn' StmtOut'\n                (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n                (stmtIn, a.1),\n              TransportWitness.fWitOut WitIn WitOut WitIn' WitOut'\n                (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n                (witIn, a.2.1)),\n            TransportStatement.fStmtOut StmtIn StmtOut StmtIn' StmtOut'\n              (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n              (stmtIn, a_1.1),\n            a.2.2.1, a.2.2.2, a_1.2)) <$>\n        (simulateQ loggingOracle\n                (Verifier.run\n                  (TransportStatement.fStmtIn StmtIn StmtOut StmtIn' StmtOut'\n                    (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\n                      data)\n                    stmtIn)\n                  a.2.2.1 R.verifier)).run.liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/OracleReduction/Composition/Virtual.lean#L177"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "cc65a67a614d56741d82a7cd6c6a7f9b5343ef004ee9605371c5fe4f5689571b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 201,
        "start_column": 2,
        "end_line": 201,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nrelIn' : StmtIn' \u2192 WitIn' \u2192 Prop\nrelOut' : StmtOut' \u2192 WitOut' \u2192 Prop\ncompletenessError : NNReal\ndata : TransportDataComplete StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\nh :\n  \u2200 (stmtIn : StmtIn') (witIn : WitIn'),\n    relIn' stmtIn witIn \u2192\n      [fun x =>\n          match x with\n          | ((prvStmtOut, witOut), stmtOut, snd) => relOut' stmtOut witOut \u2227 prvStmtOut = stmtOut|run stmtIn witIn R] \u2265\n        1 - \u2191completenessError\nstmtIn : StmtIn\nwitIn : WitIn\nhRelIn : relIn stmtIn witIn\nhR :\n  [fun x =>\n      match x with\n      | ((prvStmtOut, witOut), stmtOut, snd) =>\n        relOut' stmtOut witOut \u2227\n          prvStmtOut =\n            stmtOut|run\n        (TransportStatement.fStmtIn StmtIn StmtOut StmtIn' StmtOut'\n          (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\n            (TransportDataComplete.toTransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn\n              relIn' relOut relOut' data))\n          stmtIn)\n        (TransportWitness.fWitIn WitIn WitOut WitIn' WitOut'\n          (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\n            (TransportDataComplete.toTransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn\n              relIn' relOut relOut' data))\n          witIn)\n        R] \u2265\n    1 - \u2191completenessError\nx\u271d : (StmtOut' \u00d7 WitOut') \u00d7 StmtOut' \u00d7 pSpec.FullTranscript\na\u271d :\n  x\u271d \u2208\n    (run\n        (TransportStatement.fStmtIn StmtIn StmtOut StmtIn' StmtOut'\n          (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\n            (TransportDataComplete.toTransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn\n              relIn' relOut relOut' data))\n          stmtIn)\n        (TransportWitness.fWitIn WitIn WitOut WitIn' WitOut'\n          (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\n            (TransportDataComplete.toTransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn\n              relIn' relOut relOut' data))\n          witIn)\n        R).support\nhRelOut' : relOut' x\u271d.2.1 x\u271d.1.2 \u2227 x\u271d.1.1 = x\u271d.2.1\n\u22a2 ((fun x => relOut x.2.1 x.1.2 \u2227 x.1.1 = x.2.1) \u2218 fun a =>\n      ((TransportStatement.fStmtOut StmtIn StmtOut StmtIn' StmtOut'\n            (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\n              (TransportDataComplete.toTransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn\n                relIn' relOut relOut' data))\n            (stmtIn, a.1.1),\n          TransportWitness.fWitOut WitIn WitOut WitIn' WitOut'\n            (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\n              (TransportDataComplete.toTransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn\n                relIn' relOut relOut' data))\n            (witIn, a.1.2)),\n        TransportStatement.fStmtOut StmtIn StmtOut StmtIn' StmtOut'\n          (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\n            (TransportDataComplete.toTransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn\n              relIn' relOut relOut' data))\n          (stmtIn, a.2.1),\n        a.2.2))\n    x\u271d",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/OracleReduction/Composition/Virtual.lean#L201"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-22T09:32:10-04:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "c05873415bab228efe4c3d4bdbb1eb70fd118bf80310786ce7084a9574e6f67a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 215,
        "start_column": 2,
        "end_line": 215,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn StmtOut StmtIn' StmtOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nlangIn' : Set StmtIn'\nlangOut' : Set StmtOut'\nsoundnessError : NNReal\ndata : TransportDataSound StmtIn StmtOut StmtIn' StmtOut' langIn langOut langIn' langOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nh :\n  \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn' WitIn StmtOut' WitOut),\n    \u2200 stmtIn \u2209 langIn',\n      [fun x =>\n          match x with\n          | (fst, stmtOut, snd) => stmtOut \u2209 langOut'|run stmtIn witIn { prover := prover, verifier := V }] \u2264\n        \u2191soundnessError\nstmtIn hStmtIn : Type\nWitIn : stmtIn\nWitOut : Prover pSpec oSpec StmtIn stmtIn StmtOut hStmtIn\nwitIn : StmtIn\nprover : witIn \u2209 langIn\n\u22a2 [fun x =>\n      match x with\n      | (fst, stmtOut, snd) =>\n        stmtOut \u2209\n          langOut|run witIn WitIn\n        { prover := WitOut,\n          verifier :=\n            Verifier.transport n pSpec \u03b9 oSpec StmtIn StmtOut StmtIn' StmtOut'\n              (TransportDataSound.toTransportStatement StmtIn StmtOut StmtIn' StmtOut' langIn langOut langIn' langOut'\n                data)\n              V }] \u2264\n    \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/OracleReduction/Composition/Virtual.lean#L215"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "5bca257663ac7dc800fe8ed1dad31cc8c2598995833c05c387ddd4d6f8a951d7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 229,
        "start_column": 2,
        "end_line": 234,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nrelIn' : StmtIn' \u2192 WitIn' \u2192 Prop\nrelOut' : StmtOut' \u2192 WitOut' \u2192 Prop\nsoundnessError : NNReal\ndata :\n  TransportDataKnowledgeSound StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nE : StraightlineExtractor\nh' :\n  \u2200 (stmtIn : StmtIn') (witIn : WitIn') (prover : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'),\n    [fun x =>\n        match x with\n        | ((fst, witOut), stmtOut, transcript, proveQueryLog, snd) =>\n          \u00acrelIn' stmtIn (E stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n            relOut' stmtOut witOut|runWithLog stmtIn witIn { prover := prover, verifier := V }] \u2264\n      \u2191soundnessError\n\u22a2 \u2203 extractor,\n    \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n      [fun x =>\n          match x with\n          | ((fst, witOut), stmtOut, transcript, proveQueryLog, snd) =>\n            \u00acrelIn stmtIn (extractor stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n              relOut stmtOut\n                witOut|runWithLog stmtIn witIn\n            { prover := prover,\n              verifier :=\n                Verifier.transport n pSpec \u03b9 oSpec StmtIn StmtOut StmtIn' StmtOut'\n                  (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\n                    (TransportDataKnowledgeSound.toTransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut'\n                      WitOut' relIn relIn' relOut relOut' data))\n                  V }] \u2264\n        \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/OracleReduction/Composition/Virtual.lean#L229"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "85bad8c03b8510cd01eca4945372344694c27b6707e17a6d8c8680a3c3886e2c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 278,
        "start_column": 4,
        "end_line": 278,
        "end_column": 9
      },
      "debug_info": {
        "goal": "x\u271d\u00b3 : StmtIn\nx\u271d\u00b2 : Unit\nx\u271d\u00b9 : StmtOut'\nx\u271d : Unit\np q : Polynomial \u2124\nt : \u2124\nf : Polynomial \u2124\nt' r : \u2124\nhRelOut' : eval r f = t'\nhRelIn : eval 0 p * eval 0 q + eval 1 p * eval 1 q = t\n\u22a2 eval r p * eval r q = t'",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/OracleReduction/Composition/Virtual.lean#L278"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "a79feaa858cad030245f1ad7d4b47706b09ccb5867ebe0790c15549a2463d853"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Security/Basic.lean",
        "start_line": 390,
        "start_column": 2,
        "end_line": 390,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nStmtIn WitIn StmtOut WitOut : Type\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nknowledgeError : NNReal\nhLt : knowledgeError < 1\nextractor :\n  @Reduction.StraightlineExtractor n pSpec (\u03b9 \u2295 { i // (pSpec i).1 = Direction.V_to_P }) (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n    StmtIn WitIn StmtOut WitOut\nhKS :\n  \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n    [fun x =>\n        \u00acrelIn stmtIn (@extractor stmtIn x.2.1 x.1.2 x.2.2.1 x.2.2.2.1) \u2227\n          relOut x.2.1 x.1.2|runWithLog stmtIn witIn { prover := prover, verifier := verifier }] \u2264\n      \u2191knowledgeError\nWitIn' WitOut' : Type\nwitIn' : WitIn'\nprover : Prover pSpec oSpec StmtIn WitIn' StmtOut WitOut'\nstmtIn : StmtIn\nhStmtIn : \u2200 (x : WitIn), \u00acrelIn stmtIn x\n\u22a2 [fun x => \u2200 (x_1 : WitOut), \u00acrelOut x.2.1 x_1|run stmtIn witIn' { prover := prover, verifier := verifier }] \u2264\n    \u2191knowledgeError",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/OracleReduction/Security/Basic.lean#L390"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "e09fb2d795aef199d0ca032d6099baf76ea86d53d8578287529ee976262220b9"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/Basic.lean",
        "start_line": 404,
        "start_column": 2,
        "end_line": 404,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nO\u2098\u2081 : (i : pSpec\u2081.MessageIdx) \u2192 OracleInterface (pSpec\u2081.Message i)\nO\u2098\u2082 : (i : pSpec\u2082.MessageIdx) \u2192 OracleInterface (pSpec\u2082.Message i)\ninst\u271d\u00b2 : (i : pSpec\u2081.ChallengeIdx) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b9 : (i : pSpec\u2082.ChallengeIdx) \u2192 Sampleable (pSpec\u2082.Challenge i)\ninst\u271d : oSpec.DecidableEq\nP\u2081 : Prover pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nP\u2082 : Prover pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\nstmt : Stmt\u2081\nwit : Wit\u2081\n\u22a2 run stmt wit (Prover.append m n pSpec\u2081 pSpec\u2082 \u03b9 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 P\u2081 P\u2082) = do\n    let __discr \u2190 liftM (run stmt wit P\u2081)\n    @Prover.append_run.match_1 m pSpec\u2081 Stmt\u2082 Wit\u2082\n        (fun __discr =>\n          OracleComp (oSpec ++\u2092 [(pSpec\u2081 ++\u209a pSpec\u2082).Challenge]\u2092) (Stmt\u2083 \u00d7 Wit\u2083 \u00d7 (pSpec\u2081 ++\u209a pSpec\u2082).FullTranscript))\n        __discr fun stmt\u2082 wit\u2082 transcript\u2081 => do\n        let __discr \u2190 liftM (run stmt\u2082 wit\u2082 P\u2082)\n        @Prover.append_run.match_1 n pSpec\u2082 Stmt\u2083 Wit\u2083\n            (fun __discr =>\n              OracleComp (oSpec ++\u2092 [(pSpec\u2081 ++\u209a pSpec\u2082).Challenge]\u2092)\n                (Stmt\u2083 \u00d7 Wit\u2083 \u00d7 (pSpec\u2081 ++\u209a pSpec\u2082).FullTranscript))\n            __discr fun stmt\u2083 wit\u2083 transcript\u2082 => pure (stmt\u2083, wit\u2083, transcript\u2081 ++\u209c transcript\u2082)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/OracleReduction/Composition/Sequential/Basic.lean#L404"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-28T16:03:02+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "99cf6e1ba8f9cce7f09183e51280334e65c4f98bbc46faa7aed2268e821b4e59"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/Basic.lean",
        "start_line": 434,
        "start_column": 89,
        "end_line": 434,
        "end_column": 94
      },
      "debug_info": {
        "goal": "m n : \u2115\n\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\ninst\u271d\u00b3 : (i : pSpec\u2081.ChallengeIdx) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b2 : (i : pSpec\u2082.ChallengeIdx) \u2192 Sampleable (pSpec\u2082.Challenge i)\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nrel\u2081 : Stmt\u2081 \u2192 Wit\u2081 \u2192 Prop\nrel\u2082 : Stmt\u2082 \u2192 Wit\u2082 \u2192 Prop\nrel\u2083 : Stmt\u2083 \u2192 Wit\u2083 \u2192 Prop\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nR\u2081 : Reduction pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nR\u2082 : Reduction pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\ncompletenessError\u2081 completenessError\u2082 : NNReal\nh\u2081 : completeness rel\u2081 rel\u2082 R\u2081 completenessError\u2081\nh\u2082 : completeness rel\u2082 rel\u2083 R\u2082 completenessError\u2082\n\u22a2 completeness rel\u2081 rel\u2083 (Reduction.append m n pSpec\u2081 pSpec\u2082 \u03b9 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 R\u2081 R\u2082)\n    (completenessError\u2081 + completenessError\u2082)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/OracleReduction/Composition/Sequential/Basic.lean#L434"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-01T17:09:18-07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "9eea85fdcdacfa1de56200a9af928607cf2a0a3d1fc2dbe987d65c5039a5ff40"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/Basic.lean",
        "start_line": 464,
        "start_column": 27,
        "end_line": 464,
        "end_column": 32
      },
      "debug_info": {
        "goal": "case h.e'_6.h.h.h.h.e'_2.h.h.e\n\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\ninst\u271d\u00b2 : oSpec.DecidableEq\ninst\u271d\u00b9 : oSpec.FiniteRange\nn : Fin (0 + 1) \u2192 \u2115\npSpec : (i : Fin (0 + 1)) \u2192 ProtocolSpec (n i)\ninst\u271d : (i : Fin (0 + 1)) \u2192 (j : (pSpec i).ChallengeIdx) \u2192 Sampleable ((pSpec i).Challenge j)\nStmt Wit : Fin (0 + 2) \u2192 Type\nrel : (i : Fin (0 + 2)) \u2192 Stmt i \u2192 Wit i \u2192 Prop\nR : (i : Fin (0 + 1)) \u2192 Reduction (pSpec i) oSpec (Stmt i.castSucc) (Wit i.castSucc) (Stmt i.succ) (Wit i.succ)\ncompletenessError : Fin (0 + 1) \u2192 NNReal\nh : \u2200 (i : Fin 1), completeness (rel i.castSucc) (rel i.succ) (R i) (completenessError i)\ne_1\u271d\u00b9 : \u2211 i, n i = n 0\nhe\u271d : compose 0 n pSpec = pSpec 0\nx\u271d : { i // (compose 0 n pSpec i).1 = Direction.V_to_P }\ne_1\u271d : (compose 0 n pSpec \u2191x\u271d).2 = (pSpec 0 \u2191x\u271d).2\n\u22a2 instSampleableChallengeCompose 0 n pSpec inst\u271d = inst\u271d 0",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/OracleReduction/Composition/Sequential/Basic.lean#L464"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-23T10:22:30+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "bfd0a6530280f5b3ea2e9646de76e4e8fb431db372b77c8ef2cb3c63582ccd86"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/Basic.lean",
        "start_line": 466,
        "start_column": 4,
        "end_line": 466,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case succ\n\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\ninst\u271d\u00b2 : oSpec.DecidableEq\ninst\u271d\u00b9 : oSpec.FiniteRange\nm : \u2115\nih :\n  \u2200 {n : Fin (m + 1) \u2192 \u2115} {pSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)}\n    [inst : (i : Fin (m + 1)) \u2192 (j : (pSpec i).ChallengeIdx) \u2192 Sampleable ((pSpec i).Challenge j)]\n    {Stmt Wit : Fin (m + 2) \u2192 Type} {rel : (i : Fin (m + 2)) \u2192 Stmt i \u2192 Wit i \u2192 Prop}\n    (R : (i : Fin (m + 1)) \u2192 Reduction (pSpec i) oSpec (Stmt i.castSucc) (Wit i.castSucc) (Stmt i.succ) (Wit i.succ))\n    (completenessError : Fin (m + 1) \u2192 NNReal),\n    (\u2200 (i : Fin (m + 1)), completeness (rel i.castSucc) (rel i.succ) (R i) (completenessError i)) \u2192\n      completeness (rel 0) (rel (Fin.last (m + 1))) (Reduction.compose \u03b9 oSpec m n pSpec Stmt Wit R)\n        (\u2211 i, completenessError i)\nn : Fin (m + 1 + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1 + 1)) \u2192 ProtocolSpec (n i)\ninst\u271d : (i : Fin (m + 1 + 1)) \u2192 (j : (pSpec i).ChallengeIdx) \u2192 Sampleable ((pSpec i).Challenge j)\nStmt Wit : Fin (m + 1 + 2) \u2192 Type\nrel : (i : Fin (m + 1 + 2)) \u2192 Stmt i \u2192 Wit i \u2192 Prop\nR : (i : Fin (m + 1 + 1)) \u2192 Reduction (pSpec i) oSpec (Stmt i.castSucc) (Wit i.castSucc) (Stmt i.succ) (Wit i.succ)\ncompletenessError : Fin (m + 1 + 1) \u2192 NNReal\nh : \u2200 (i : Fin (m + 1 + 1)), completeness (rel i.castSucc) (rel i.succ) (R i) (completenessError i)\n\u22a2 completeness (rel 0) (rel (Fin.last (m + 1 + 1))) (Reduction.compose \u03b9 oSpec (m + 1) n pSpec Stmt Wit R)\n    (\u2211 i, completenessError i)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/OracleReduction/Composition/Sequential/Basic.lean#L466"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-23T10:22:30+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "85b3cc91c3e41c7a01d72874992343ab93f09e6050a1b9eff2195875222ad612"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/ProtocolSpec.lean",
        "start_line": 354,
        "start_column": 2,
        "end_line": 354,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\nT : (i : Fin (m + 1)) \u2192 (pSpec i).FullTranscript\ni : Fin m\n\u22a2 @Fin.dfoldl (\u2191i + 1)\n      (fun i_1 =>\n        FullTranscript\n          (ProtocolSpec.compose (\u2191i_1)\n            (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_38 (\u2191i + 1) i_1)\n              (Fin.take (\u2191i + 1 + 1) \u22ef n))\n            (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_38 (\u2191i + 1) i_1)\n              (Fin.take (\u2191i + 1 + 1) \u22ef pSpec))))\n      (fun i_1 acc =>\n        @dcast\u2082 \u2115 ProtocolSpec (@FullTranscript) ProtocolSpec.instDepCast ProtocolSpec.FullTranscript.instDepCast\u2082\n          (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i + 1) i_1) i_2)) +\n            n (Fin.castLE \u22ef i_1.succ))\n          (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_40 (\u2191i + 1) i_1) i_2)))\n          (ProtocolSpec.append\n            (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i + 1) i_1) i_2)))\n            (n (Fin.castLE \u22ef i_1.succ))\n            (ProtocolSpec.compose (\u2191i_1)\n              (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i + 1) i_1)\n                (Fin.take (\u2191i + 1 + 1) \u22ef n))\n              (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i + 1) i_1)\n                (Fin.take (\u2191i + 1 + 1) \u22ef pSpec)))\n            (pSpec (Fin.castLE \u22ef i_1.succ)))\n          (ProtocolSpec.compose (\u2191i_1 + 1)\n            (Fin.take (\u2191i_1 + 1 + 1) (ProtocolSpec.FullTranscript.compose._proof_40 (\u2191i + 1) i_1)\n              (Fin.take (\u2191i + 1 + 1) \u22ef n))\n            (Fin.take (\u2191i_1 + 1 + 1) (ProtocolSpec.FullTranscript.compose._proof_40 (\u2191i + 1) i_1)\n              (Fin.take (\u2191i + 1 + 1) \u22ef pSpec)))\n          (ProtocolSpec.FullTranscript.compose._proof_41 (\u2191i + 1) (Fin.take (\u2191i + 1 + 1) \u22ef n) i_1)\n          (ProtocolSpec.FullTranscript.compose._proof_44 (\u2191i + 1) (Fin.take (\u2191i + 1 + 1) \u22ef n)\n            (Fin.take (\u2191i + 1 + 1) \u22ef pSpec) i_1)\n          (ProtocolSpec.FullTranscript.append\n            (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i + 1) i_1) i_2)))\n            (n (Fin.castLE \u22ef i_1.succ))\n            (ProtocolSpec.compose (\u2191i_1)\n              (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i + 1) i_1)\n                (Fin.take (\u2191i + 1 + 1) \u22ef n))\n              (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i + 1) i_1)\n                (Fin.take (\u2191i + 1 + 1) \u22ef pSpec)))\n            (pSpec (Fin.castLE \u22ef i_1.succ)) acc (T (Fin.castLE \u22ef i_1.succ))))\n      (T (Fin.castLE \u22ef 0)) =\n    @dcast\u2082 \u2115 ProtocolSpec (@FullTranscript) ProtocolSpec.instDepCast ProtocolSpec.FullTranscript.instDepCast\u2082\n      (\u2211 i_1, n (Fin.castLE \u22ef i_1) + n i.succ) (\u2211 i_1, n (Fin.castLE \u22ef i_1))\n      (ProtocolSpec.append (\u2211 i_1, n (Fin.castLE \u22ef i_1)) (n i.succ)\n        (ProtocolSpec.compose (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) (Fin.take (\u2191i + 1) \u22ef pSpec)) (pSpec i.succ))\n      (ProtocolSpec.compose (\u2191i + 1) (Fin.take (\u2191i + 1 + 1) \u22ef n) (Fin.take (\u2191i + 1 + 1) \u22ef pSpec)) \u22ef \u22ef\n      (ProtocolSpec.FullTranscript.append (\u2211 i_1, n (Fin.castLE \u22ef i_1)) (n i.succ)\n        (ProtocolSpec.compose (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) (Fin.take (\u2191i + 1) \u22ef pSpec)) (pSpec i.succ)\n        (@Fin.dfoldl (\u2191i)\n          (fun i_1 =>\n            FullTranscript\n              (ProtocolSpec.compose (\u2191i_1)\n                (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_38 (\u2191i) i_1) (Fin.take (\u2191i + 1) \u22ef n))\n                (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_38 (\u2191i) i_1)\n                  (Fin.take (\u2191i + 1) \u22ef pSpec))))\n          (fun i_1 acc =>\n            @dcast\u2082 \u2115 ProtocolSpec (@FullTranscript) ProtocolSpec.instDepCast ProtocolSpec.FullTranscript.instDepCast\u2082\n              (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i) i_1) i_2)) +\n                n (Fin.castLE \u22ef i_1.succ))\n              (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_40 (\u2191i) i_1) i_2)))\n              (ProtocolSpec.append\n                (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i) i_1) i_2)))\n                (n (Fin.castLE \u22ef i_1.succ))\n                (ProtocolSpec.compose (\u2191i_1)\n                  (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i) i_1) (Fin.take (\u2191i + 1) \u22ef n))\n                  (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i) i_1)\n                    (Fin.take (\u2191i + 1) \u22ef pSpec)))\n                (pSpec (Fin.castLE \u22ef i_1.succ)))\n              (ProtocolSpec.compose (\u2191i_1 + 1)\n                (Fin.take (\u2191i_1 + 1 + 1) (ProtocolSpec.FullTranscript.compose._proof_40 (\u2191i) i_1)\n                  (Fin.take (\u2191i + 1) \u22ef n))\n                (Fin.take (\u2191i_1 + 1 + 1) (ProtocolSpec.FullTranscript.compose._proof_40 (\u2191i) i_1)\n                  (Fin.take (\u2191i + 1) \u22ef pSpec)))\n              (ProtocolSpec.FullTranscript.compose._proof_41 (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) i_1)\n              (ProtocolSpec.FullTranscript.compose._proof_44 (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) (Fin.take (\u2191i + 1) \u22ef pSpec)\n                i_1)\n              (ProtocolSpec.FullTranscript.append\n                (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i) i_1) i_2)))\n                (n (Fin.castLE \u22ef i_1.succ))\n                (ProtocolSpec.compose (\u2191i_1)\n                  (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i) i_1) (Fin.take (\u2191i + 1) \u22ef n))\n                  (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i) i_1)\n                    (Fin.take (\u2191i + 1) \u22ef pSpec)))\n                (pSpec (Fin.castLE \u22ef i_1.succ)) acc (T (Fin.castLE \u22ef i_1.succ))))\n          (T (Fin.castLE \u22ef 0)))\n        (T i.succ))",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/OracleReduction/Composition/Sequential/ProtocolSpec.lean#L354"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-25T11:02:32+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "ce6023a9d618a4cbefef3bfa079959648ac5d5c42c5ca253a88ecc23dc0b9da9"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
        "start_line": 492,
        "start_column": 2,
        "end_line": 492,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\ninst\u271d : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\nstmt : Sumcheck.Spec.Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 Sumcheck.Spec.OracleStatement R inst\u271d\u00b9 n deg i)\ntranscript : FullTranscript ![(Direction.P_to_V, \u21a5(degreeLE R \u2191deg)), (Direction.V_to_P, R)]\nx : getType (Sumcheck.Spec.pSpec R inst\u271d\u00b9 deg) 0\nhp_i : \u2191(transcript 0) \u2208 degreeLE R \u2191deg\nhEq : transcript 0 = \u27e8\u2191(transcript 0), hp_i\u27e9\n\u22a2 (do\n      let a \u2190\n        ((OptionT.run (List.mapM (fun i => liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (D i))) (List.finRange m))).bind\n                fun __do_lift =>\n                __do_lift.elim (FreeMonad.pure none)\n                  (OptionT.run \u2218 fun evals => do\n                    if evals.sum = Sumcheck.Spec.Statement.target R n i.castSucc stmt.1 then pure () else failure\n                    (fun a =>\n                          Sumcheck.Spec.Statement.mk R n i.succ a\n                            (Fin.snoc (Sumcheck.Spec.Statement.challenges R n i.castSucc stmt.1) (transcript 1))) <$>\n                        liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (transcript 1)))).mapM\n            fun {\u03b1} => (OracleInterface.simOracle2 oSpec stmt.2 transcript.messages).impl\n      (fun a =>\n            (a, fun i_1 =>\n              @Prod.snd (Sumcheck.Spec.Statement R n i.castSucc)\n                ((i : Fin 1) \u2192 Sumcheck.Spec.OracleStatement R inst\u271d\u00b9 n deg i) stmt i_1)) <$>\n          a.getM) =\n    (fun a =>\n        (Sumcheck.Spec.Statement.mk R n i.succ (Polynomial.eval (transcript 1) \u2191(transcript 0))\n            (Fin.snoc (Sumcheck.Spec.Statement.challenges R n i.castSucc stmt.1) (transcript 1)),\n          stmt.2)) <$>\n      if \u2211 x, Polynomial.eval (D x) \u2191(transcript 0) = Sumcheck.Spec.Statement.target R n i.castSucc stmt.1 then pure ()\n      else failure",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/ProofSystem/Sumcheck/Basic.lean#L492"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-18T19:07:20+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "6431f2d5ef862e803504646f7e47d011555ebd0c47dd0cf50718bce20418376b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
        "start_line": 510,
        "start_column": 57,
        "end_line": 510,
        "end_column": 62
      },
      "debug_info": {
        "goal": "case left\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 Sumcheck.Spec.OracleStatement R inst\u271d\u00b3 n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast (Sumcheck.Spec.relation._proof_12 n i.castSucc)))\n        \u2191(@oStmt 0) =\n    target\n\u22a2 ({ prover := Sumcheck.Spec.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                verifier :=\n                  Sumcheck.Spec.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2 i }.toReduction.prover.sendMessage\n        \u27e80, \u22ef\u27e9\n        ({ prover := Sumcheck.Spec.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                    verifier :=\n                      Sumcheck.Spec.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                        i }.toReduction.prover.toProverIn.input\n          (Sumcheck.Spec.Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 Sumcheck.Spec.OracleStatement R inst\u271d\u00b3 n deg i)) Unit\n          ({ prover := Sumcheck.Spec.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                    verifier :=\n                      Sumcheck.Spec.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2 i }.toReduction.prover.PrvState\n            0)\n          (Sumcheck.Spec.Statement.mk R n i.castSucc target challenge, oStmt) witIn\u271d)).neverFails \u2227\n    \u2200 (a : Polynomial R) (b : a \u2208 degreeLE R \u2191deg)\n      (b_1 :\n        { prover := Sumcheck.Spec.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                  verifier :=\n                    Sumcheck.Spec.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2 i }.toReduction.prover.PrvState\n          1),\n      (\u27e8a, b\u27e9, b_1) \u2208\n          ({ prover := Sumcheck.Spec.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                      verifier :=\n                        Sumcheck.Spec.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                          i }.toReduction.prover.sendMessage\n              \u27e80, \u22ef\u27e9\n              ({ prover := Sumcheck.Spec.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                          verifier :=\n                            Sumcheck.Spec.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                              i }.toReduction.prover.toProverIn.input\n                (Sumcheck.Spec.Statement R n i.castSucc \u00d7\n                  ((i : Fin 1) \u2192 Sumcheck.Spec.OracleStatement R inst\u271d\u00b3 n deg i))\n                Unit\n                ({ prover := Sumcheck.Spec.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                          verifier :=\n                            Sumcheck.Spec.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                              i }.toReduction.prover.PrvState\n                  0)\n                (Sumcheck.Spec.Statement.mk R n i.castSucc target challenge, oStmt) witIn\u271d)).support \u2192\n        \u2200 (x : R),\n          (Verifier.run (Sumcheck.Spec.Statement.mk R n i.castSucc target challenge, oStmt)\n              (Transcript.snoc 2 (Sumcheck.Spec.pSpec R inst\u271d\u00b3 deg) 1 x\n                (Transcript.snoc 2 (Sumcheck.Spec.pSpec R inst\u271d\u00b3 deg) 0 \u27e8a, b\u27e9\n                  (@default (Transcript 0 (Sumcheck.Spec.pSpec R inst\u271d\u00b3 deg)) Unique.instInhabited)))\n              { prover := Sumcheck.Spec.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                    verifier :=\n                      Sumcheck.Spec.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                        i }.toReduction.verifier).neverFails",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/ProofSystem/Sumcheck/Basic.lean#L510"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "3ef485bed31019ba9a51a3afa2afcb3f924f44d142984c90bc0866f53ea2bb7e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
        "start_line": 643,
        "start_column": 42,
        "end_line": 643,
        "end_column": 47
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\nn deg m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\n\u22a2 OracleReduction.perfectCompleteness (Sumcheck.Spec.Combined.relIn R inst\u271d\u00b9 n deg m D)\n    (Sumcheck.Spec.Combined.relOut R inst\u271d\u00b9 n deg) (Sumcheck.Spec.Combined.reduction R inst\u271d\u00b9 n deg)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/ProofSystem/Sumcheck/Basic.lean#L643"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "a46202133971bed862e30f02064732c2c6a4ed3b634ddb01de9619a472cd257a"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Examples/OneTimePad.lean",
        "start_line": 36,
        "start_column": 2,
        "end_line": 36,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nthis : \u2200 (m \u03c3 : BitVec n), {x | \u03c3 = x ^^^ m} = {\u03c3 ^^^ m}\n\u22a2 (oneTimePad n).OneTimeUniformCiphers",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/Examples/OneTimePad.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-05-06T08:17:02-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "40141c69b50bcaf588ae726e748bcf5d439218d2929fc57d821fd2cfda75bcb8"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Examples/OneTimePad.lean",
        "start_line": 35,
        "start_column": 73,
        "end_line": 35,
        "end_column": 78
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 \u2200 (m \u03c3 : BitVec n), {x | \u03c3 = x ^^^ m} = {\u03c3 ^^^ m}",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/Examples/OneTimePad.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-05-04T12:41:02-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "b0064ce11301249cb79e5a96498176ea5c8f5550f72812106d3f08f90b505f39"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Examples/Regev.lean",
        "start_line": 432,
        "start_column": 2,
        "end_line": 432,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n m p : \u2115\nhp2 : p.AtLeastTwo\ninst\u271d : NeZero m\n\u03c7 : \u2115\nhe : p > 4 * (\u03c7 * m + 1)\nadv : (uniformRegevAsymmEnc n m p \u03c7 he).IND_CPA_Adv\n\u22a2 |[=true|(regevAsymmEnc n m p (uniformErrSamp \u03c7 \u22ef)).exec do\n              let b \u2190 (regevAsymmEnc n m p (uniformErrSamp \u03c7 \u22ef)).lift_probComp ($\u1d57Bool)\n              let __discr \u2190 (regevAsymmEnc n m p (uniformErrSamp \u03c7 \u22ef)).keygen\n              match __discr with\n                | (pk, snd) => do\n                  let __discr \u2190 adv.chooseMessages pk\n                  match __discr with\n                    | (m\u2081, m\u2082, state) =>\n                      let m_1 := if b = true then m\u2081 else m\u2082;\n                      do\n                      let c \u2190 (regevAsymmEnc n m p (uniformErrSamp \u03c7 \u22ef)).encrypt pk m_1\n                      let b' \u2190 adv.distinguish state c\n                      pure (decide (b = b'))].toReal -\n        [=false|(regevAsymmEnc n m p (uniformErrSamp \u03c7 \u22ef)).exec do\n              let b \u2190 (regevAsymmEnc n m p (uniformErrSamp \u03c7 \u22ef)).lift_probComp ($\u1d57Bool)\n              let __discr \u2190 (regevAsymmEnc n m p (uniformErrSamp \u03c7 \u22ef)).keygen\n              match __discr with\n                | (pk, snd) => do\n                  let __discr \u2190 adv.chooseMessages pk\n                  match __discr with\n                    | (m\u2081, m\u2082, state) =>\n                      let m_1 := if b = true then m\u2081 else m\u2082;\n                      do\n                      let c \u2190 (regevAsymmEnc n m p (uniformErrSamp \u03c7 \u22ef)).encrypt pk m_1\n                      let b' \u2190 adv.distinguish state c\n                      pure (decide (b = b'))].toReal| \u2264\n    |[=true|do\n              let b \u2190 $\u1d57Bool\n              let A \u2190 $\u1d57Matrix (Fin n) (Fin m) (Fin p)\n              let u \u2190 $\u1d57Vector (Fin p) m\n              let __discr \u2190 adv.chooseMessages (A, u)\n              match __discr with\n                | (m\u2081, m\u2082, st) =>\n                  let __do_jp := fun c => do\n                    let b' \u2190 adv.distinguish st c\n                    pure (decide (b = b'));\n                  if b = true then do\n                    let y \u2190 (regevAsymmEnc n m p (uniformErrSamp \u03c7 \u22ef)).encrypt (A, u) m\u2081\n                    __do_jp y\n                  else do\n                    let y \u2190 (regevAsymmEnc n m p (uniformErrSamp \u03c7 \u22ef)).encrypt (A, u) m\u2082\n                    __do_jp y].toReal -\n          [=false|do\n              let b \u2190 $\u1d57Bool\n              let A \u2190 $\u1d57Matrix (Fin n) (Fin m) (Fin p)\n              let u \u2190 $\u1d57Vector (Fin p) m\n              let __discr \u2190 adv.chooseMessages (A, u)\n              match __discr with\n                | (m\u2081, m\u2082, st) =>\n                  let __do_jp := fun c => do\n                    let b' \u2190 adv.distinguish st c\n                    pure (decide (b = b'));\n                  if b = true then do\n                    let y \u2190 (regevAsymmEnc n m p (uniformErrSamp \u03c7 \u22ef)).encrypt (A, u) m\u2081\n                    __do_jp y\n                  else do\n                    let y \u2190 (regevAsymmEnc n m p (uniformErrSamp \u03c7 \u22ef)).encrypt (A, u) m\u2082\n                    __do_jp y].toReal| +\n      |[=true|do\n              let b \u2190 $\u1d57Bool\n              let __do_jp : Matrix (Fin n) (Fin m) (Fin p) \u00d7 Vector (Fin p) m \u2192 ProbComp Bool := fun distr => do\n                let b' \u2190\n                  (fun Au => do\n                        let b \u2190 $\u1d57Bool\n                        let __discr \u2190 adv.chooseMessages Au\n                        match __discr with\n                          | (m\u2081, m\u2082, st) =>\n                            let __do_jp := fun c => do\n                              let b' \u2190 adv.distinguish st c\n                              pure b';\n                            if b = true then do\n                              let y \u2190 (regevAsymmEnc n m p (uniformErrSamp \u03c7 \u22ef)).encrypt Au m\u2081\n                              __do_jp y\n                            else do\n                              let y \u2190 (regevAsymmEnc n m p (uniformErrSamp \u03c7 \u22ef)).encrypt Au m\u2082\n                              __do_jp y)\n                      distr\n                pure (decide (b' = b))\n              if b = true then do\n                  let y \u2190 LWE_Distr n m p (uniformErrSamp \u03c7 \u22ef)\n                  __do_jp y\n                else do\n                  let y \u2190 LWE_Uniform_Distr n m p\n                  __do_jp y].toReal -\n          [=false|do\n              let b \u2190 $\u1d57Bool\n              let __do_jp : Matrix (Fin n) (Fin m) (Fin p) \u00d7 Vector (Fin p) m \u2192 ProbComp Bool := fun distr => do\n                let b' \u2190\n                  (fun Au => do\n                        let b \u2190 $\u1d57Bool\n                        let __discr \u2190 adv.chooseMessages Au\n                        match __discr with\n                          | (m\u2081, m\u2082, st) =>\n                            let __do_jp := fun c => do\n                              let b' \u2190 adv.distinguish st c\n                              pure b';\n                            if b = true then do\n                              let y \u2190 (regevAsymmEnc n m p (uniformErrSamp \u03c7 \u22ef)).encrypt Au m\u2081\n                              __do_jp y\n                            else do\n                              let y \u2190 (regevAsymmEnc n m p (uniformErrSamp \u03c7 \u22ef)).encrypt Au m\u2082\n                              __do_jp y)\n                      distr\n                pure (decide (b' = b))\n              if b = true then do\n                  let y \u2190 LWE_Distr n m p (uniformErrSamp \u03c7 \u22ef)\n                  __do_jp y\n                else do\n                  let y \u2190 LWE_Uniform_Distr n m p\n                  __do_jp y].toReal|",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/Examples/Regev.lean#L432"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-27T11:58:04-04:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "cb6bb8cef7c557c8e1b9df6d3ccfab038ddabdc36f482c13b3b45290c88f69b7"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Examples/Regev.lean",
        "start_line": 493,
        "start_column": 2,
        "end_line": 493,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n m p : \u2115\nhp2 : p.AtLeastTwo\ninst\u271d : NeZero m\n\u03c7 : \u2115\nhe : p > 4 * (\u03c7 * m + 1)\nadv : (uniformRegevAsymmEnc n m p \u03c7 he).IND_CPA_Adv\n\u22a2 |(2\u207b\u00b9 *\n              [=true|do\n                let A \u2190 $\u1d57Matrix (Fin n) (Fin m) (Fin p)\n                let u \u2190 $\u1d57Vector (Fin p) m\n                let __discr \u2190 adv.chooseMessages (A, u)\n                let a \u2190 $\u1d57Vector (Fin 2) m\n                adv.distinguish __discr.2.2\n                    (Vector.ofFn (A.mulVec (Vector.map (Fin.castLE \u22ef) a).get),\n                      u.get \u2b1d\u1d65 (Vector.map (Fin.castLE \u22ef) a).get + if __discr.1 = true then 0 else \u2191(p / 2))] +\n            2\u207b\u00b9 *\n              [=true|do\n                let A \u2190 $\u1d57Matrix (Fin n) (Fin m) (Fin p)\n                let u \u2190 $\u1d57Vector (Fin p) m\n                let __discr \u2190 adv.chooseMessages (A, u)\n                let a \u2190 $\u1d57Vector (Fin 2) m\n                (fun a => !a) <$>\n                    adv.distinguish __discr.2.2\n                      (Vector.ofFn (A.mulVec (Vector.map (Fin.castLE \u22ef) a).get),\n                        u.get \u2b1d\u1d65 (Vector.map (Fin.castLE \u22ef) a).get +\n                          if __discr.2.1 = true then 0 else \u2191(p / 2))]).toReal -\n        (2\u207b\u00b9 *\n              [=false|do\n                let A \u2190 $\u1d57Matrix (Fin n) (Fin m) (Fin p)\n                let u \u2190 $\u1d57Vector (Fin p) m\n                let __discr \u2190 adv.chooseMessages (A, u)\n                let a \u2190 $\u1d57Vector (Fin 2) m\n                adv.distinguish __discr.2.2\n                    (Vector.ofFn (A.mulVec (Vector.map (Fin.castLE \u22ef) a).get),\n                      u.get \u2b1d\u1d65 (Vector.map (Fin.castLE \u22ef) a).get + if __discr.1 = true then 0 else \u2191(p / 2))] +\n            2\u207b\u00b9 *\n              [=false|do\n                let A \u2190 $\u1d57Matrix (Fin n) (Fin m) (Fin p)\n                let u \u2190 $\u1d57Vector (Fin p) m\n                let __discr \u2190 adv.chooseMessages (A, u)\n                let a \u2190 $\u1d57Vector (Fin 2) m\n                (fun a => !a) <$>\n                    adv.distinguish __discr.2.2\n                      (Vector.ofFn (A.mulVec (Vector.map (Fin.castLE \u22ef) a).get),\n                        u.get \u2b1d\u1d65 (Vector.map (Fin.castLE \u22ef) a).get +\n                          if __discr.2.1 = true then 0 else \u2191(p / 2))]).toReal| \u2264\n    |[=true|do\n              let b \u2190 $\u1d57Bool\n              let A \u2190 $\u1d57Matrix (Fin n) (Fin m) (Fin p)\n              let u \u2190 $\u1d57Vector (Fin p) m\n              let __discr \u2190 adv.chooseMessages (A, u)\n              let c\u2081 \u2190 $\u1d57Vector (Fin p) n\n              let c\u2082 \u2190 $\u1d57Fin p\n              (fun a => decide (b = a)) <$> adv.distinguish __discr.2.2 (c\u2081, c\u2082)].toReal -\n          [=false|do\n              let b \u2190 $\u1d57Bool\n              let A \u2190 $\u1d57Matrix (Fin n) (Fin m) (Fin p)\n              let u \u2190 $\u1d57Vector (Fin p) m\n              let __discr \u2190 adv.chooseMessages (A, u)\n              let c\u2081 \u2190 $\u1d57Vector (Fin p) n\n              let c\u2082 \u2190 $\u1d57Fin p\n              (fun a => decide (b = a)) <$> adv.distinguish __discr.2.2 (c\u2081, c\u2082)].toReal| +\n      |[=true|do\n              let A \u2190 $\u1d57Matrix (Fin n) (Fin m) (Fin p)\n              let u \u2190 $\u1d57Vector (Fin p) m\n              let r2 \u2190 $\u1d57Vector (Fin 2) m\n              let b \u2190 $\u1d57Bool\n              let A_1 \u2190 $\u1d57Matrix (Fin n) (Fin m) (Fin p)\n              let u_1 \u2190 $\u1d57Vector (Fin p) m\n              let __discr \u2190 adv.chooseMessages (A_1, u_1)\n              (fun a => decide (b = a)) <$>\n                  adv.distinguish __discr.2.2\n                    (Vector.ofFn (A.mulVec (Vector.map (Fin.castLE \u22ef) r2).get),\n                      u.get \u2b1d\u1d65 (Vector.map (Fin.castLE \u22ef) r2).get)].toReal -\n          [=true|do\n              let x \u2190 $\u1d57Vector (Fin p) n\n              let y \u2190 $\u1d57Fin p\n              let b \u2190 $\u1d57Bool\n              let A \u2190 $\u1d57Matrix (Fin n) (Fin m) (Fin p)\n              let u \u2190 $\u1d57Vector (Fin p) m\n              let __discr \u2190 adv.chooseMessages (A, u)\n              (fun a => decide (b = a)) <$> adv.distinguish __discr.2.2 (x, y)].toReal|",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/Examples/Regev.lean#L493"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-27T11:58:04-04:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "c367405be8e308e25b07e8d918d7db5f991bd7b531c948e41879df5213381735"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Examples/FrankingProtocol.lean",
        "start_line": 257,
        "start_column": 2,
        "end_line": 257,
        "end_column": 7
      },
      "debug_info": {
        "goal": "message_content : String\n\u22a2 (\u2200 (x : BitVec 256),\n      (if\n              mock_hmac_sha256 x\n                  (serialize_message_data (deserialize_message_data ((serialize_message_data message_content x).1, x)).1\n                      x).1 =\n                mock_hmac_sha256 x (serialize_message_data message_content x).1 then\n            pure\n              (some\n                { content := (deserialize_message_data ((serialize_message_data message_content x).1, x)).1,\n                  nonce := x })\n          else pure none).neverFails \u2227\n        \u2200\n          x_1 \u2208\n            if\n                mock_hmac_sha256 x\n                    (serialize_message_data\n                        (deserialize_message_data ((serialize_message_data message_content x).1, x)).1 x).1 =\n                  mock_hmac_sha256 x (serialize_message_data message_content x).1 then\n              {some\n                  { content := (deserialize_message_data ((serialize_message_data message_content x).1, x)).1,\n                    nonce := x }}\n            else {none},\n          (match x_1 with\n              | none => pure none\n              | some verified_msg =>\n                pure\n                  (some\n                    { verified_msg := verified_msg,\n                      message_package :=\n                        {\n                          encrypted_message :=\n                            { ciphertext := mock_encrypt (serialize_message_data message_content x).1 },\n                          franking_tag := { tag := mock_hmac_sha256 x (serialize_message_data message_content x).1 },\n                          reporting_tag :=\n                            {\n                              tag :=\n                                mock_hmac_sha256 (123456789#256)\n                                  (string_to_bitvec\n                                    (String.append (mock_hmac_sha256 x (serialize_message_data message_content x).1)\n                                      (bitvec_to_string 1730230302#256))) },\n                          context :=\n                            { sender_id := 1001#256, recipient_id := 1002#256, timestamp := 1730230302,\n                              message_id := 123 },\n                          nonce := x },\n                      facebook_key := 123456789#256 })).neverFails \u2227\n            \u2200\n              x_2 \u2208\n                (match x_1 with\n                  | none => pure none\n                  | some verified_msg =>\n                    pure\n                      (some\n                        { verified_msg := verified_msg,\n                          message_package :=\n                            {\n                              encrypted_message :=\n                                { ciphertext := mock_encrypt (serialize_message_data message_content x).1 },\n                              franking_tag :=\n                                { tag := mock_hmac_sha256 x (serialize_message_data message_content x).1 },\n                              reporting_tag :=\n                                {\n                                  tag :=\n                                    mock_hmac_sha256 (123456789#256)\n                                      (string_to_bitvec\n                                        (String.append (mock_hmac_sha256 x (serialize_message_data message_content x).1)\n                                          (bitvec_to_string 1730230302#256))) },\n                              context :=\n                                { sender_id := 1001#256, recipient_id := 1002#256, timestamp := 1730230302,\n                                  message_id := 123 },\n                              nonce := x },\n                          facebook_key := 123456789#256 })).support,\n              (match x_2 with\n                | none => pure false\n                | some data =>\n                  pure\n                    (decide\n                        (mock_hmac_sha256 data.verified_msg.nonce\n                            (serialize_message_data data.verified_msg.content data.verified_msg.nonce).1 =\n                          data.message_package.franking_tag.tag) &&\n                      decide\n                        (mock_hmac_sha256 data.facebook_key\n                            (string_to_bitvec\n                              (String.append data.message_package.franking_tag.tag\n                                (bitvec_to_string (BitVec.ofNat 256 data.message_package.context.timestamp)))) =\n                          data.message_package.reporting_tag.tag))).neverFails) \u2227\n    (\u2200 (x : BitVec 256),\n        false \u2209\n          (do\n              let x_1 \u2190\n                if\n                      mock_hmac_sha256 x\n                          (serialize_message_data\n                              (deserialize_message_data ((serialize_message_data message_content x).1, x)).1 x).1 =\n                        mock_hmac_sha256 x (serialize_message_data message_content x).1 then\n                    pure\n                      (some\n                        { content := (deserialize_message_data ((serialize_message_data message_content x).1, x)).1,\n                          nonce := x })\n                  else pure none\n              let maybeData \u2190\n                match x_1 with\n                  | none => pure none\n                  | some verified_msg =>\n                    pure\n                      (some\n                        { verified_msg := verified_msg,\n                          message_package :=\n                            {\n                              encrypted_message :=\n                                { ciphertext := mock_encrypt (serialize_message_data message_content x).1 },\n                              franking_tag :=\n                                { tag := mock_hmac_sha256 x (serialize_message_data message_content x).1 },\n                              reporting_tag :=\n                                {\n                                  tag :=\n                                    mock_hmac_sha256 (123456789#256)\n                                      (string_to_bitvec\n                                        (String.append (mock_hmac_sha256 x (serialize_message_data message_content x).1)\n                                          (bitvec_to_string 1730230302#256))) },\n                              context :=\n                                { sender_id := 1001#256, recipient_id := 1002#256, timestamp := 1730230302,\n                                  message_id := 123 },\n                              nonce := x },\n                          facebook_key := 123456789#256 })\n              match maybeData with\n                | none => pure false\n                | some data =>\n                  pure\n                    (decide\n                        (mock_hmac_sha256 data.verified_msg.nonce\n                            (serialize_message_data data.verified_msg.content data.verified_msg.nonce).1 =\n                          data.message_package.franking_tag.tag) &&\n                      decide\n                        (mock_hmac_sha256 data.facebook_key\n                            (string_to_bitvec\n                              (String.append data.message_package.franking_tag.tag\n                                (bitvec_to_string (BitVec.ofNat 256 data.message_package.context.timestamp)))) =\n                          data.message_package.reporting_tag.tag))).finSupport) \u2227\n      \u2203 a,\n        true \u2208\n          (do\n              let x \u2190\n                if\n                      mock_hmac_sha256 a\n                          (serialize_message_data\n                              (deserialize_message_data ((serialize_message_data message_content a).1, a)).1 a).1 =\n                        mock_hmac_sha256 a (serialize_message_data message_content a).1 then\n                    pure\n                      (some\n                        { content := (deserialize_message_data ((serialize_message_data message_content a).1, a)).1,\n                          nonce := a })\n                  else pure none\n              let maybeData \u2190\n                match x with\n                  | none => pure none\n                  | some verified_msg =>\n                    pure\n                      (some\n                        { verified_msg := verified_msg,\n                          message_package :=\n                            {\n                              encrypted_message :=\n                                { ciphertext := mock_encrypt (serialize_message_data message_content a).1 },\n                              franking_tag :=\n                                { tag := mock_hmac_sha256 a (serialize_message_data message_content a).1 },\n                              reporting_tag :=\n                                {\n                                  tag :=\n                                    mock_hmac_sha256 (123456789#256)\n                                      (string_to_bitvec\n                                        (String.append (mock_hmac_sha256 a (serialize_message_data message_content a).1)\n                                          (bitvec_to_string 1730230302#256))) },\n                              context :=\n                                { sender_id := 1001#256, recipient_id := 1002#256, timestamp := 1730230302,\n                                  message_id := 123 },\n                              nonce := a },\n                          facebook_key := 123456789#256 })\n              match maybeData with\n                | none => pure false\n                | some data =>\n                  pure\n                    (decide\n                        (mock_hmac_sha256 data.verified_msg.nonce\n                            (serialize_message_data data.verified_msg.content data.verified_msg.nonce).1 =\n                          data.message_package.franking_tag.tag) &&\n                      decide\n                        (mock_hmac_sha256 data.facebook_key\n                            (string_to_bitvec\n                              (String.append data.message_package.franking_tag.tag\n                                (bitvec_to_string (BitVec.ofNat 256 data.message_package.context.timestamp)))) =\n                          data.message_package.reporting_tag.tag))).finSupport",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/Examples/FrankingProtocol.lean#L257"
      },
      "metadata": {
        "blame_email_hash": "f78b4540360d",
        "blame_date": "2025-02-05T21:14:45-06:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "6ba3c20d2e53e2012f378e7ad10453532f041ccb08be37c98021fc8d77f70b29"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Examples/FrankingProtocol.lean",
        "start_line": 269,
        "start_column": 2,
        "end_line": 269,
        "end_column": 7
      },
      "debug_info": {
        "goal": "message_content : String\n\u22a2 \u2200 (x : BitVec 256),\n    (if\n            mock_hmac_sha256 x\n                (serialize_message_data (deserialize_message_data ((serialize_message_data message_content x).1, x)).1\n                    x).1 =\n              mock_hmac_sha256 x (serialize_message_data message_content x).1 then\n          pure\n            (some\n              { content := (deserialize_message_data ((serialize_message_data message_content x).1, x)).1, nonce := x })\n        else pure none).neverFails \u2227\n      \u2200\n        x_1 \u2208\n          if\n              mock_hmac_sha256 x\n                  (serialize_message_data (deserialize_message_data ((serialize_message_data message_content x).1, x)).1\n                      x).1 =\n                mock_hmac_sha256 x (serialize_message_data message_content x).1 then\n            {some\n                { content := (deserialize_message_data ((serialize_message_data message_content x).1, x)).1,\n                  nonce := x }}\n          else {none},\n        (match x_1 with\n            | none => pure none\n            | some verified_msg =>\n              pure\n                (some\n                  { verified_msg := verified_msg,\n                    message_package :=\n                      {\n                        encrypted_message :=\n                          { ciphertext := mock_encrypt (serialize_message_data message_content x).1 },\n                        franking_tag := { tag := mock_hmac_sha256 x (serialize_message_data message_content x).1 },\n                        reporting_tag :=\n                          {\n                            tag :=\n                              mock_hmac_sha256 (123456789#256)\n                                (string_to_bitvec\n                                  (String.append (mock_hmac_sha256 x (serialize_message_data message_content x).1)\n                                    (bitvec_to_string 1730230302#256))) },\n                        context :=\n                          { sender_id := 1001#256, recipient_id := 1002#256, timestamp := 1730230302,\n                            message_id := 123 },\n                        nonce := x },\n                    facebook_key := 123456789#256 })).neverFails \u2227\n          \u2200\n            x_2 \u2208\n              (match x_1 with\n                | none => pure none\n                | some verified_msg =>\n                  pure\n                    (some\n                      { verified_msg := verified_msg,\n                        message_package :=\n                          {\n                            encrypted_message :=\n                              { ciphertext := mock_encrypt (serialize_message_data message_content x).1 },\n                            franking_tag := { tag := mock_hmac_sha256 x (serialize_message_data message_content x).1 },\n                            reporting_tag :=\n                              {\n                                tag :=\n                                  mock_hmac_sha256 (123456789#256)\n                                    (string_to_bitvec\n                                      (String.append (mock_hmac_sha256 x (serialize_message_data message_content x).1)\n                                        (bitvec_to_string 1730230302#256))) },\n                            context :=\n                              { sender_id := 1001#256, recipient_id := 1002#256, timestamp := 1730230302,\n                                message_id := 123 },\n                            nonce := x },\n                        facebook_key := 123456789#256 })).support,\n            (match x_2 with\n              | none => pure true\n              | some val => pure false).neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/Examples/FrankingProtocol.lean#L269"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-09T11:17:26-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "7016aca2232422e6303fba2cd4fdf1c18182245bec17b4e3aaee1ba20bc8a3a4"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Examples/FrankingProtocol.lean",
        "start_line": 290,
        "start_column": 2,
        "end_line": 290,
        "end_column": 7
      },
      "debug_info": {
        "goal": "facebook_key : BitVec 256\nmessage_content : String\ncontext : Context\n\u22a2 \u2200 (x : BitVec 256),\n    (if\n          mock_hmac_sha256 x\n              (serialize_message_data (deserialize_message_data ((serialize_message_data message_content x).1, x)).1\n                  x).1 =\n            mock_hmac_sha256 x (serialize_message_data message_content x).1 then\n        pure\n          (some\n            { content := (deserialize_message_data ((serialize_message_data message_content x).1, x)).1, nonce := x })\n      else pure none).neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/Examples/FrankingProtocol.lean#L290"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-09T11:17:26-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "6c0ad4855367097a6ecd0242388d05073605f4230745e68f05ed87bd82bae9e8"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Examples/HHS_Elgamal.lean",
        "start_line": 90,
        "start_column": 4,
        "end_line": 90,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case e_a.e_a\nG P : Type\ninst\u271d\u2076 : SelectableType G\ninst\u271d\u2075 : SelectableType P\ninst\u271d\u2074 : AddCommGroup G\ninst\u271d\u00b3 : Group P\ninst\u271d\u00b2 : AddTorsor G P\ninst\u271d\u00b9 : DecidableEq G\ninst\u271d : DecidableEq P\nadversary : (elgamalAsymmEnc G P).IND_CPA_adversary\nx : P\ng\u2081 : G\n\u22a2 [fun x =>\n      x.1 =\n        true|(simulateQ ((elgamalAsymmEnc G P).IND_CPA_queryImpl' (x, g\u2081 +\u1d65 x) true) (adversary (x, g\u2081 +\u1d65 x))).run \u2205] =\n    [=()|do\n      let c \u2190 $\u1d57G\n      let b' \u2190\n        simulateQ (idOracle unifSpec ++\u209b\u2092 QueryImpl.ofFn fun x_1 => pure (c +\u1d65 x, x_1.1 * (c +\u1d65 g\u2081 +\u1d65 x)))\n            (adversary (x, g\u2081 +\u1d65 x))\n      if b' = true then pure () else failure]",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/Examples/HHS_Elgamal.lean#L90"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "5207334ea127e72fbba9493656cbaab04217c144d5a28aaca33cfedeed83f508"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Examples/HHS_Elgamal.lean",
        "start_line": 98,
        "start_column": 4,
        "end_line": 98,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case e_a.e_a\nG P : Type\ninst\u271d\u2076 : SelectableType G\ninst\u271d\u2075 : SelectableType P\ninst\u271d\u2074 : AddCommGroup G\ninst\u271d\u00b3 : Group P\ninst\u271d\u00b2 : AddTorsor G P\ninst\u271d\u00b9 : DecidableEq G\ninst\u271d : DecidableEq P\nadversary : (elgamalAsymmEnc G P).IND_CPA_adversary\nx : P\ng\u2081 : G\n\u22a2 [fun x =>\n      x.1 = false|(simulateQ\n            ({ impl := fun {\u03b1} q => liftM (liftM q) } ++\u209b\u2092\n              {\n                  impl := fun {\u03b1} x_1 =>\n                    match \u03b1, x_1 with\n                    | .((P \u00d7 P \u2192\u2092 P \u00d7 P).range ()), query PUnit.unit (m\u2081, m\u2082) =>\n                      (fun a => (a +\u1d65 x, m\u2082 * (a +\u1d65 g\u2081 +\u1d65 x))) <$> ($\u1d57G) }.withCaching)\n            (adversary (x, g\u2081 +\u1d65 x))).run\n        \u2205] =\n    [=()|do\n      let c \u2190 $\u1d57G\n      let y \u2190 $\u1d57P\n      let b' \u2190\n        simulateQ (idOracle unifSpec ++\u209b\u2092 QueryImpl.ofFn fun x_1 => pure (c +\u1d65 x, x_1.1 * y)) (adversary (x, g\u2081 +\u1d65 x))\n      if b' = false then pure () else failure]",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/Examples/HHS_Elgamal.lean#L98"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "e54ae9cef69ace4b7c561d5025fb371aae8a33f8a6b55eccad246b6db54cf0e7"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/Traversal.lean",
        "start_line": 83,
        "start_column": 4,
        "end_line": 83,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case query_bind\n\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type v\nQ : {\u03b1 : Type v} \u2192 spec.OracleQuery \u03b1 \u2192 Prop\nF : Prop\npossible_outputs : {\u03b1 : Type v} \u2192 spec.OracleQuery \u03b1 \u2192 Set \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\ni : \u03b9\nt : spec.domain i\noa : spec.range i \u2192 OracleComp spec \u03b1\nh :\n  \u2200 (u : spec.range i),\n    allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa u >>= ob) \u2194\n      allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa u) \u2227\n        \u2200 x \u2208 (oa u).supportWhen fun {\u03b1} => possible_outputs,\n          allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (ob x)\n\u22a2 (Q (query i t) \u2227\n      \u2200 x \u2208 possible_outputs (query i t),\n        allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa x) \u2227\n          \u2200 x_1 \u2208 OracleComp.construct (fun x => {x}) (fun {\u03b2} q oa f => \u22c3 u \u2208 possible_outputs q, f u) \u2205 (oa x),\n            allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (ob x_1)) \u2194\n    (Q (query i t) \u2227\n        \u2200 x \u2208 possible_outputs (query i t), allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (oa x)) \u2227\n      \u2200 (x : \u03b1),\n        \u2200 x_1 \u2208 possible_outputs (query i t),\n          x \u2208 OracleComp.construct (fun x => {x}) (fun {\u03b2} q oa f => \u22c3 u \u2208 possible_outputs q, f u) \u2205 (oa x_1) \u2192\n            allWhen (fun {\u03b1} => Q) F (fun {\u03b1} => possible_outputs) (ob x)",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/Traversal.lean#L83"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "df009a51ea4c60974fd041477513bf8237c51113d870816a9ab066fcc97d3619"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/Traversal.lean",
        "start_line": 117,
        "start_column": 36,
        "end_line": 117,
        "end_column": 41
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type v\n\u03b9' : Type u_1\nspec' : OracleSpec \u03b9'\noa : OracleComp spec \u03b1\npossible_outputs : {\u03b1 : Type v} \u2192 spec.OracleQuery \u03b1 \u2192 Set \u03b1\nh : oa.neverFailsWhen fun {\u03b1} => possible_outputs\nso : QueryImpl spec (OracleComp spec')\nh' : \u2200 {\u03b1 : Type v} (q : spec.OracleQuery \u03b1), (so.impl q).support \u2286 possible_outputs q\nhso : \u2200 {\u03b1 : Type v} (q : spec.OracleQuery \u03b1), (so.impl q).neverFails\n\u22a2 (simulateQ so oa).neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/Traversal.lean#L117"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "bfbd462400ae827743451fe17e54d12d4e5f520f9c4c35d235dbe31ee0594584"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 150,
        "start_column": 2,
        "end_line": 150,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\n\u22a2 (Prod.map cf cf <$> main.fork qb js i cf).support = (fun s => (s, s)) '' (cf <$> main).support",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/CryptoFoundations/Fork.lean#L150"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "038744c370b04caf7058d6e0f202fdba361c83925993127b2163e041065f9996"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 154,
        "start_column": 2,
        "end_line": 154,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\n\u22a2 (Prod.map cf cf <$> main.fork qb js i cf).finSupport = Finset.image (fun s => (s, s)) (cf <$> main).finSupport",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/CryptoFoundations/Fork.lean#L154"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "7a509562660d66531f047d039839f6787adcc1d8ba450a82cf1eab5f35dbf66e"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 158,
        "start_column": 2,
        "end_line": 158,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nx\u2081 x\u2082 : \u03b1\nh : (x\u2081, x\u2082) \u2208 (main.fork qb js i cf).support\n\u22a2 cf x\u2081 = cf x\u2082",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/CryptoFoundations/Fork.lean#L158"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "2464950c7bb1454f6f8880b62204f5fef6cf19689abca7e02a7181486ac8feef"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 162,
        "start_column": 2,
        "end_line": 162,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Option (Fin (qb i + 1))\n\u22a2 [=(none, s)|Prod.map cf cf <$> main.fork qb js i cf] = 0",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/CryptoFoundations/Fork.lean#L162"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "ec73e6f45939a9e30ada77a354d35fd4bcf065b146abf8f938fb6e9a74610b76"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 166,
        "start_column": 2,
        "end_line": 166,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Option (Fin (qb i + 1))\n\u22a2 [=(s, none)|Prod.map cf cf <$> main.fork qb js i cf] = 0",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/CryptoFoundations/Fork.lean#L166"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "fc3476cdf27d888e95cd9eeda1acc879fab712974e7ffc8b8259c1aa76d1222f"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 177,
        "start_column": 2,
        "end_line": 177,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nx\u2081 x\u2082 : \u03b1\nh : (x\u2081, x\u2082) \u2208 (main.fork qb js i cf).support\n\u22a2 \u2203 s,\n    cf x\u2081 = some s \u2227\n      cf x\u2082 = some s \u2227\n        \u2203 log\u2081,\n          \u2203 (hcf\u2081 : \u2191s < log\u2081.countQ i),\n            \u2203 log\u2082,\n              \u2203 (hcf\u2081_1 : \u2191s < log\u2082.countQ i),\n                (log\u2081.getQ i)[s].1 = (log\u2082.getQ i)[s].1 \u2227\n                  (log\u2081.getQ i)[s].2 \u2260 (log\u2082.getQ i)[s].2 \u2227\n                    (x\u2081, log\u2081) \u2208 (simulateQ loggingOracle main).run.support \u2227\n                      (x\u2082, log\u2082) \u2208 (simulateQ loggingOracle main).run.support",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/CryptoFoundations/Fork.lean#L177"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "429425517f880599b21c84117b838644e71a7dfad1c3dc7debb7b4e04be52b76"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 280,
        "start_column": 10,
        "end_line": 280,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case e_a\n\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Fin (qb i + 1)\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nthis\u271d : DecidableEq \u03b1\nthis : DecidableEq spec.QuerySeed\n\u22a2 [=(some s, some s)|do\n      let seed \u2190 liftM (generateSeed spec qb js)\n      let x\u2081 \u2190 (simulateQ seededOracle main).run seed\n      let u \u2190 liftM ($\u1d57spec.range i)\n      let seed' : spec.QuerySeed := (seed.takeAtIndex i \u2191s).addValue i u\n      let x\u2082 \u2190 (simulateQ seededOracle main).run seed'\n      pure (cf x\u2081, cf x\u2082)] =\n    [=(some s, some s)|do\n      let shared_seed \u2190 liftM (generateSeed spec (update qb i \u2191s) js)\n      let x\u2081 \u2190 (simulateQ seededOracle main).run shared_seed\n      let x\u2082 \u2190 (simulateQ seededOracle main).run shared_seed\n      pure (cf x\u2081, cf x\u2082)]",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/CryptoFoundations/Fork.lean#L280"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "4e244fc84869d0e35434be5d3c28eb09a77578bd6f51fd05f5cab1219b7192b0"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 282,
        "start_column": 53,
        "end_line": 282,
        "end_column": 58
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Fin (qb i + 1)\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nthis\u271d : DecidableEq \u03b1\nthis : DecidableEq spec.QuerySeed\nseed : spec.QuerySeed\nhseed : seed \u2208 (liftM (generateSeed spec qb js)).support\n\u22a2 \u2191(s + 1) < (seed i).length",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/CryptoFoundations/Fork.lean#L282"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "7d8349c80c833a53270ba8a0c0c7756f678327f8230cceaed54f0589541cf828"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 382,
        "start_column": 6,
        "end_line": 382,
        "end_column": 11
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := \u2211 s, [=some s|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 \u2211 s, [=some s|cf <$> main] ^ 2 - \u2211 s, [=some s|cf <$> main] / h \u2264\n    \u2211 s, ([=some s|cf <$> main] ^ 2 - [=some s|cf <$> main] / h)",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/CryptoFoundations/Fork.lean#L382"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "009535090ecdb1a1938879ecdd03b26d4593c2e631da1219af4ec6b798ccce00"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 384,
        "start_column": 6,
        "end_line": 384,
        "end_column": 11
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := \u2211 s, [=some s|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 1 - (\u2211 s, [=some s|cf <$> main] ^ 2 - \u2211 s, [=some s|cf <$> main] / h) =\n    1 - \u2211 s, [=some s|cf <$> main] ^ 2 + \u2211 s, [=some s|cf <$> main] / h",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/CryptoFoundations/Fork.lean#L384"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "b443b9f1921f990818cd4d5679908ab6b5277725be06793a0e3373c4681931a4"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 404,
        "start_column": 8,
        "end_line": 404,
        "end_column": 13
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\nacc : \u211d\u22650\u221e := \u2211 s, [=some s|cf <$> main]\nh : \u211d\u22650\u221e := \u2191(Fintype.card (spec.range i))\nq : \u2115 := qb i + 1\n\u22a2 acc * h\u207b\u00b9 + (1 - acc ^ 2 * (\u2191q)\u207b\u00b9) = 1 - (acc ^ 2 * (\u2191q)\u207b\u00b9 - acc * h\u207b\u00b9)",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/CryptoFoundations/Fork.lean#L404"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "556e116e7fb6debda8ae0daa74212c17d27af2eb090e7674cfcaf17063b5914c"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/SymmEncAlg.lean",
        "start_line": 84,
        "start_column": 2,
        "end_line": 84,
        "end_column": 7
      },
      "debug_info": {
        "goal": "M K C : Type\ninst\u271d\u00b2 : SelectableType C\ninst\u271d\u00b9 : Fintype C\ninst\u271d : Inhabited C\nencAlg : SymmEncAlg ProbComp M K C\nh :\n  (QueryImpl.ofFn fun m => do\n      let __do_lift \u2190 encAlg.keygen\n      encAlg.encrypt __do_lift m) \u2243\u209b\u2092\n    QueryImpl.ofFn fun x => $\u1d57C\n\u22a2 (QueryImpl.ofFn fun ms => do\n      let __do_lift \u2190 encAlg.keygen\n      encAlg.encrypt __do_lift ms.1) \u2243\u209b\u2092\n    QueryImpl.ofFn fun ms => do\n      let __do_lift \u2190 encAlg.keygen\n      encAlg.encrypt __do_lift ms.2",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/CryptoFoundations/SymmEncAlg.lean#L84"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-05-04T12:41:02-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "b3b250e7bf9385c105bf26376b038d15fc28a5473b7d070ebedcf12e00479d35"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/SymmEncAlg.lean",
        "start_line": 115,
        "start_column": 2,
        "end_line": 115,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : Type \u2192 Type v\nM K C : Type\ninst\u271d\u2075 : AlternativeMonad m\ninst\u271d\u2074 : LawfulAlternative m\ninst\u271d\u00b3 : Fintype M\ninst\u271d\u00b2 : Fintype K\ninst\u271d\u00b9 : Fintype C\nencAlg : SymmEncAlg m M K C\ninst\u271d : encAlg.Correct\nh1 : Fintype.card M = Fintype.card K\nh2 : Fintype.card K = Fintype.card C\n\u22a2 encAlg.perfectSecrecy \u2194\n    (\u2200 (k : K), [=k|encAlg.exec encAlg.keygen] = (\u2191(Fintype.card K))\u207b\u00b9) \u2227\n      \u2200 (m_1 : M) (c : m C), \u2203! k, k \u2208 support (encAlg.exec encAlg.keygen) \u2227 encAlg.encrypt k m_1 = c",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/CryptoFoundations/SymmEncAlg.lean#L115"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "4ba34cc5bc4b644f86ba59d7751c299ebcd45a4eed6284801f1e8588771a750a"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/FiatShamir.lean",
        "start_line": 79,
        "start_column": 29,
        "end_line": 79,
        "end_column": 34
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\n\u03c3 X W PC SC \u03a9 P : Type\np : X \u2192 W \u2192 Bool\ninst\u271d\u2075 : SelectableType X\ninst\u271d\u2074 : SelectableType W\ninst\u271d\u00b3 : DecidableEq PC\ninst\u271d\u00b2 : DecidableEq \u03a9\ninst\u271d\u00b9 : SelectableType \u03a9\nsigmaAlg : SigmaAlg X W PC SC \u03a9 P p\nhr : GenerableRelation X W p\nM : Type\ninst\u271d : DecidableEq M\n\u03b1\u271d : Type\nc : ProbComp \u03b1\u271d\n\u22a2 (fun {\u03b1} comp =>\n        let so := { impl := fun {\u03b1} q => liftM ((idOracle unifSpec).impl q) } ++\u209b\u2092 randomOracle;\n        (simulateQ so comp).run' \u2205)\n      ((fun {\u03b1} => monadLift) c) =\n    c",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/CryptoFoundations/FiatShamir.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "1d2d5d0835ede201d9442761d9905fbecce90bd492cdee336f46a1e8a0d34b3c"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/HardnessAssumptions/LWE.lean",
        "start_line": 126,
        "start_column": 2,
        "end_line": 126,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n m p : \u2115\ninst\u271d : NeZero p\nerrSamp : ProbComp (Fin p)\nadv : LWE_Adversary n m p\n\u22a2 |[=true|do\n              let y \u2190 LWE_Distr n m p errSamp\n              adv y].toReal +\n          [=true|do\n              let y \u2190 LWE_Uniform_Distr n m p\n              (fun a => !a) <$> adv y].toReal -\n        ([=true|do\n              let a \u2190 LWE_Distr n m p errSamp\n              not <$> adv a].toReal +\n          [=true|do\n              let a \u2190 LWE_Uniform_Distr n m p\n              adv a].toReal)| =\n    |[=true|do\n            let y \u2190 LWE_Distr n m p errSamp\n            adv y].toReal -\n        [=true|do\n            let a \u2190 LWE_Uniform_Distr n m p\n            adv a].toReal|",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/CryptoFoundations/HardnessAssumptions/LWE.lean#L126"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-27T11:58:04-04:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "0d2623954da1769d8be00ef06c7d7550d6bc4c3f707c8b27f9f2d484a89a1610"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Asymptotics/PolyTimeOC.lean",
        "start_line": 124,
        "start_column": 2,
        "end_line": 124,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nspec : OracleSpec \u03b9\n\u03b1 : Type\n\u22a2 IsComputableInPolyTime id",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/CryptoFoundations/Asymptotics/PolyTimeOC.lean#L124"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-05-25T21:32:28-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "619602315f11ebd1056a7130d668bf889d243f944c72c2ee4119c28cbb3d78a3"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/QueryTracking/SeededOracle.lean",
        "start_line": 74,
        "start_column": 2,
        "end_line": 74,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\ninst\u271d\u00b2 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\ninst\u271d : spec.FiniteRange\nqc : \u03b9 \u2192 \u2115\njs : List \u03b9\noa : OracleComp spec \u03b1\nob : \u03b1 \u2192 OracleComp spec \u03b2\ny : \u03b2\n\u22a2 [=y|do\n      let seed \u2190 liftComp (generateSeed spec qc js) spec\n      let x \u2190 (simulateQ seededOracle oa).run seed\n      ob x] =\n    [=y|oa >>= ob]",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/QueryTracking/SeededOracle.lean#L74"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "1c1d6254145b149c697f216cb95b6e29815e33cd7efb61cbafef187addd8d99e"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/QueryTracking/SeededOracle.lean",
        "start_line": 85,
        "start_column": 2,
        "end_line": 85,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\ninst\u271d\u00b2 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\ninst\u271d : spec.FiniteRange\nqc : \u03b9 \u2192 \u2115\njs : List \u03b9\noa : OracleComp spec \u03b1\nf : \u03b1 \u2192 \u03b2\ny : \u03b2\n\u22a2 [=y|do\n      let seed \u2190 liftComp (generateSeed spec qc js) spec\n      f <$> (simulateQ seededOracle oa).run seed] =\n    [=y|f <$> oa]",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/QueryTracking/SeededOracle.lean#L85"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "1eed6a9f7b1391fd6c2bf7160d633cdc534f5b109ad683cd2802529366c764e4"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/QueryTracking/CountingOracle.lean",
        "start_line": 69,
        "start_column": 53,
        "end_line": 69,
        "end_column": 58
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\ninst\u271d : DecidableEq \u03b9\nspec : OracleSpec \u03b9\n\u03b1 : Type u\noa : OracleComp spec \u03b1\n\u22a2 \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (countingOracle.impl q).run.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/QueryTracking/CountingOracle.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "03c08959af5935d899a235846f9186181c5bec7c059f25067f83ed2080df8c6a"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/QueryTracking/LoggingOracle.lean",
        "start_line": 72,
        "start_column": 53,
        "end_line": 72,
        "end_column": 58
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type u\noa : OracleComp spec \u03b1\n\u22a2 \u2200 {\u03b1 : Type u} (q : spec.OracleQuery \u03b1), (loggingOracle.impl q).run.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/QueryTracking/LoggingOracle.lean#L72"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "827253760606e8a8b6a6723e954614f5bd3f6c0a89bd2ab8578a3b0bde8569c2"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/Constructions/UniformSelect.lean",
        "start_line": 280,
        "start_column": 2,
        "end_line": 280,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\nh\u03b1 : SelectableType \u03b1\n\u22a2 neverFails ($\u1d57\u03b1)",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/Constructions/UniformSelect.lean#L280"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "6ceff0f784cc29485189a0ace8b41d69577e984c328dd41a5b7b23108324e9f7"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/Constructions/UniformSelect.lean",
        "start_line": 410,
        "start_column": 4,
        "end_line": 410,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case zero\n\u03b1\u271d : Type\nh\u03b1 : SelectableType \u03b1\u271d\n\u03b1 : Type\nm : \u2115\ninst\u271d : SelectableType \u03b1\nx y : Matrix (Fin 0) (Fin m) \u03b1\n\u22a2 (if x = Matrix.of ![] then 1 else 0) = if y = Matrix.of ![] then 1 else 0",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/Constructions/UniformSelect.lean#L410"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-26T12:07:39-04:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "b3e561ed5d666cb4b9887dca774aad2c4ad9d585cf7d7dae527664efdef9bcce"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/Constructions/UniformSelect.lean",
        "start_line": 412,
        "start_column": 4,
        "end_line": 412,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case succ\n\u03b1\u271d : Type\nh\u03b1 : SelectableType \u03b1\u271d\n\u03b1 : Type\nm\u271d : \u2115\ninst\u271d : SelectableType \u03b1\nm : \u2115\nih :\n  \u2200 (x y : Matrix (Fin m) (Fin m\u271d) \u03b1),\n    [=x|Nat.recAux (pure (Matrix.of ![]))\n          (fun n ihn => do\n            let top \u2190 $\u1d57Vector \u03b1 m\u271d\n            let bot \u2190 ihn\n            pure (Fin.cons top.get bot))\n          m] =\n      [=y|Nat.recAux (pure (Matrix.of ![]))\n          (fun n ihn => do\n            let top \u2190 $\u1d57Vector \u03b1 m\u271d\n            let bot \u2190 ihn\n            pure (Fin.cons top.get bot))\n          m]\nx y : Matrix (Fin (m + 1)) (Fin m\u271d) \u03b1\n\u22a2 [=x|Nat.recAux (pure (Matrix.of ![]))\n        (fun n ihn => do\n          let top \u2190 $\u1d57Vector \u03b1 m\u271d\n          let bot \u2190 ihn\n          pure (Fin.cons top.get bot))\n        (m + 1)] =\n    [=y|Nat.recAux (pure (Matrix.of ![]))\n        (fun n ihn => do\n          let top \u2190 $\u1d57Vector \u03b1 m\u271d\n          let bot \u2190 ihn\n          pure (Fin.cons top.get bot))\n        (m + 1)]",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/Constructions/UniformSelect.lean#L412"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-26T12:07:39-04:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "146b7107419cef61607514115a8700c342fbe461710912b2dbc572ebe9c7af32"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/Constructions/UniformSelect.lean",
        "start_line": 417,
        "start_column": 4,
        "end_line": 417,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case succ\n\u03b1\u271d : Type\nh\u03b1 : SelectableType \u03b1\u271d\n\u03b1 : Type\nm\u271d : \u2115\ninst\u271d : SelectableType \u03b1\nm : \u2115\nih :\n  [\u22a5|Nat.recAux (pure (Matrix.of ![]))\n        (fun n ihn => do\n          let top \u2190 $\u1d57Vector \u03b1 m\u271d\n          let bot \u2190 ihn\n          pure (Fin.cons top.get bot))\n        m] =\n    0\n\u22a2 Vector \u03b1 m\u271d \u2192\n    neverFails\n      (Nat.rec (pure (Matrix.of ![]))\n        (fun n ihn => do\n          let top \u2190 $\u1d57Vector \u03b1 m\u271d\n          Fin.cons top.get <$> ihn)\n        m)",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/Constructions/UniformSelect.lean#L417"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-26T12:07:39-04:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "41db34b3d9b2b821b234570efc31dac7a838c6239c2a07a33d585efdef6a8192"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/Constructions/GenerateSeed.lean",
        "start_line": 86,
        "start_column": 2,
        "end_line": 86,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b9 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d : (i : \u03b9) \u2192 SelectableType (spec.range i)\nqc : \u03b9 \u2192 \u2115\njs : List \u03b9\n\u22a2 support (generateSeed spec qc js) = {seed | \u2200 (i : \u03b9), (seed i).length = qc i * List.count i js}",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/Constructions/GenerateSeed.lean#L86"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2024-12-05T21:45:03-06:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "8a99bd81780b12b71e6ba2ecfe0d2417dc6290136afa68a96d8e50400713ce0c"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/Constructions/GenerateSeed.lean",
        "start_line": 117,
        "start_column": 2,
        "end_line": 117,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b9 : (i : \u03b9) \u2192 SelectableType (spec.range i)\nqc : \u03b9 \u2192 \u2115\njs : List \u03b9\ninst\u271d : DecidableEq spec.QuerySeed\n\u22a2 finSupport (generateSeed spec qc js) \u2260 \u2205",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/Constructions/GenerateSeed.lean#L117"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "30f38f18d205a6359aa954cd6541ea7ef7a830a358dfedb5923bf50a9ec9abeb"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/Constructions/GenerateSeed.lean",
        "start_line": 134,
        "start_column": 4,
        "end_line": 134,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case append_singleton\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b9 : (i : \u03b9) \u2192 SelectableType (spec.range i)\nqc : \u03b9 \u2192 \u2115\njs\u271d : List \u03b9\ninst\u271d : spec.FiniteRange\nj : List \u03b9\njs : \u03b9\nhjs :\n  \u2200 seed \u2208 support (generateSeed spec qc j),\n    [=seed|generateSeed spec qc j] = 1 / \u2191(List.map (fun j => Fintype.card (spec.range j) ^ qc j) j).prod\nseed : spec.QuerySeed\nhs : seed \u2208 support (generateSeed spec qc (j ++ [js]))\n\u22a2 [=seed|do\n      let a \u2190\n        foldlM\n            (fun b a =>\n              match b with\n              | ForInStep.yield b =>\n                (fun a_1 => ForInStep.yield (QuerySeed.addValues a_1 b)) <$> replicate (qc a) ($\u1d57spec.range a)\n              | ForInStep.done b => pure (ForInStep.done b))\n            (ForInStep.yield fun x => []) j\n      ForInStep.value <$>\n          match a with\n          | ForInStep.yield b =>\n            (fun a => ForInStep.yield (QuerySeed.addValues a b)) <$> replicate (qc js) ($\u1d57spec.range js)\n          | ForInStep.done b => pure (ForInStep.done b)] =\n    ((List.map (Nat.cast \u2218 fun j => Fintype.card (spec.range j) ^ qc j) j).prod *\n        \u2191(Fintype.card (spec.range js)) ^ qc js)\u207b\u00b9",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/Constructions/GenerateSeed.lean#L134"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-01-16T01:24:48-06:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "84ae24acbfe5d8e5df8bcc29621c8d4954f3bf7f0a0ce962ab1021997e61a013"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/Constructions/GenerateSeed.lean",
        "start_line": 141,
        "start_column": 2,
        "end_line": 141,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b2 : (i : \u03b9) \u2192 SelectableType (spec.range i)\nqc : \u03b9 \u2192 \u2115\njs : List \u03b9\ninst\u271d\u00b9 : spec.FiniteRange\ninst\u271d : DecidableEq spec.QuerySeed\nseed : spec.QuerySeed\nh : seed \u2208 support (generateSeed spec qc js)\n\u22a2 [=seed|generateSeed spec qc js] = (\u2191(finSupport (generateSeed spec qc js)).card)\u207b\u00b9",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/Constructions/GenerateSeed.lean#L141"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "cba45e89f3bdce2ab191c056fc36ce509342e3bfd92daa900d300e0d704dfa09"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/Monad.lean",
        "start_line": 55,
        "start_column": 2,
        "end_line": 55,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type v\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type u\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nob\u2081 ob\u2082 : \u03b1 \u2192 OracleComp spec \u03b2\ny : \u03b2\nr : \u211d\u22650\u221e\nh : \u2200 x \u2208 oa.support, [=y|ob\u2081 x] = [=y|ob\u2082 x] / r\n\u22a2 [=y|oa >>= ob\u2081] = [=y|oa >>= ob\u2082] / r",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/DistSemantics/Monad.lean#L55"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "66dce363f6607205651ad23df0c59b888e55d34f8bec58775232aa7924d458a0"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/EvalDist.lean",
        "start_line": 727,
        "start_column": 83,
        "end_line": 727,
        "end_column": 88
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\ns : \u211d\u22650\u221e\nh' : [\u22a5|oa] = s\nob : \u03b1 \u2192 OracleComp spec \u03b2\nr : \u211d\u22650\u221e\nhr : \u2200 x \u2208 oa.support, [\u22a5|ob x] \u2264 r\n\u22a2 [\u22a5|oa >>= ob] \u2264 s + (1 - s) * r",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/DistSemantics/EvalDist.lean#L727"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "3df933b2a6c4b159afdd7c33b092341a9dacea9bc4b3801a5cc2a43fd05a268e"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/EvalDist.lean",
        "start_line": 733,
        "start_column": 73,
        "end_line": 733,
        "end_column": 78
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\ns : \u211d\u22650\u221e\nh' : [\u22a5|oa] = s\nob : \u03b1 \u2192 OracleComp spec \u03b2\nr : \u211d\u22650\u221e\nhr : \u2200 x \u2208 oa.support, [\u22a5|ob x] \u2264 r\n\u22a2 [\u22a5|oa >>= ob] \u2264 s + r",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/DistSemantics/EvalDist.lean#L733"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "bbcd9bee655439588389ef1dac8f541c6fbe4c2f2668100803c942d09458c9fb"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/EvalDist.lean",
        "start_line": 738,
        "start_column": 69,
        "end_line": 738,
        "end_column": 74
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nh' : oa.neverFails\nob : \u03b1 \u2192 OracleComp spec \u03b2\nr : \u211d\u22650\u221e\nhr : \u2200 x \u2208 oa.support, [\u22a5|ob x] \u2264 r\n\u22a2 [\u22a5|oa >>= ob] \u2264 r",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/DistSemantics/EvalDist.lean#L738"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "2fcc43049f60e18f342c03245dbea097f68877242e70361badbc016856683cd3"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/EvalDist.lean",
        "start_line": 742,
        "start_column": 59,
        "end_line": 742,
        "end_column": 64
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 \u03b2 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\nh : oa.neverFails\nob : \u03b1 \u2192 OracleComp spec \u03b2\n\u22a2 [\u22a5|oa >>= ob] = \u2211' (x : \u03b1), [=x|oa] * [\u22a5|ob x]",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/DistSemantics/EvalDist.lean#L742"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "092f02da75be70b38a5f82f4eed32a082f04b090813c4bfc69301fc256d12939"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/EvalDist.lean",
        "start_line": 938,
        "start_column": 2,
        "end_line": 938,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\n\u22a2 [\u22a5|oa] = 0 \u2194 oa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/DistSemantics/EvalDist.lean#L938"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "c23e45f48f15c8193c4ce8e586ced416ae2f8d8059c738b383968fd8b6920df0"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/EvalDist.lean",
        "start_line": 946,
        "start_column": 2,
        "end_line": 946,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type w\ninst\u271d : spec.FiniteRange\noa : OracleComp spec \u03b1\n\u22a2 0 < [\u22a5|oa] \u2194 \u00acoa.neverFails",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/DistSemantics/EvalDist.lean#L946"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "945b3d96f4bda8b81ea3c2626393ce39c8aacecdd3ae9a72d39126731193ddb6"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/DistSemantics/EvalDist.lean",
        "start_line": 978,
        "start_column": 2,
        "end_line": 978,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\ninst\u271d\u00b9 : spec.FiniteRange\n\u03b1 : Type\noa : OracleComp spec \u03b1\nh : oa.neverFails\np : \u03b1 \u2192 Prop\ninst\u271d : DecidablePred p\n\u22a2 (\u2211' (x : \u03b1), if p x then [=x|oa] else 0) = 1 - \u2211' (x : \u03b1), if p x then 0 else [=x|oa]",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/DistSemantics/EvalDist.lean#L978"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-27T11:58:04-04:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "5ff371b939ddc711855c86898f82c85a2b0893ed2b3c41bf69432fffc3105a08"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/SimSemantics/Append.lean",
        "start_line": 113,
        "start_column": 2,
        "end_line": 113,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9\u2081 : Type u_1\n\u03b9\u2082 : Type u_2\n\u03b9\u2083 : Type u_3\nspec\u2081 : OracleSpec \u03b9\u2081\nspec\u2082 : OracleSpec \u03b9\u2082\nspec\u2083 : OracleSpec \u03b9\u2083\n\u03b1 : Type u\nm : Type u \u2192 Type u_4\ninst\u271d : AlternativeMonad m\nso : QueryImpl spec\u2081 m\nso' : QueryImpl spec\u2082 m\nso'' : QueryImpl spec\u2083 m\noa : OracleComp (spec\u2081 ++\u2092 spec\u2082) \u03b1\n\u22a2 simulateQ (so ++\u209b\u2092 (so' ++\u209b\u2092 so'')) (oa.liftComp (spec\u2081 ++\u2092 (spec\u2082 ++\u2092 spec\u2083))) = simulateQ (so ++\u209b\u2092 so') oa",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/SimSemantics/Append.lean#L113"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-05-11T18:03:03-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "d24577ae55b81f6fcbdf1f01bb6df6f076c8b5c835f53543667182e5c9a19ce1"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/SimSemantics/Distinguisher.lean",
        "start_line": 87,
        "start_column": 2,
        "end_line": 87,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nspec : OracleSpec \u03b9\nimpl\u2081 impl\u2082 : QueryImpl spec ProbComp\n\u22a2 impl\u2081 \u2243\u209b\u2092 impl\u2082 \u2194\n    \u2200 (adv : Distinguisher spec),\n      [=false|simulateR impl\u2081 adv] = [=false|simulateR impl\u2082 adv] \u2227 [\u22a5|simulateR impl\u2081 adv] = [\u22a5|simulateR impl\u2082 adv]",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/SimSemantics/Distinguisher.lean#L87"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-05-04T12:41:02-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "e86e95d4acebb5537e62ad2460eff69e275feb8710274556b2987346f9df1718"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/SimSemantics/Distinguisher.lean",
        "start_line": 94,
        "start_column": 2,
        "end_line": 94,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nspec : OracleSpec \u03b9\nimpl\u2081 impl\u2082 : QueryImpl spec ProbComp\n\u22a2 impl\u2081 \u2243\u209b\u2092 impl\u2082 \u2194\n    \u2200 (adv : Distinguisher spec),\n      [=true|simulateR impl\u2081 adv] = [=true|simulateR impl\u2082 adv] \u2227\n        [=false|simulateR impl\u2081 adv] = [=false|simulateR impl\u2082 adv] \u2227 [\u22a5|simulateR impl\u2081 adv] = [\u22a5|simulateR impl\u2082 adv]",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/SimSemantics/Distinguisher.lean#L94"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-05-04T13:19:21-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "cbfa4c8b697ae9d5aa303deae358ba22981234680dba2ffa94266ad5186e9443"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/SimSemantics/Distinguisher.lean",
        "start_line": 102,
        "start_column": 2,
        "end_line": 102,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nspec : OracleSpec \u03b9\nimpl\u2081 impl\u2082 : QueryImpl spec ProbComp\n\u22a2 impl\u2081 \u2243\u209b\u2092 impl\u2082 \u2194\n    \u2200 (adv : Distinguisher spec),\n      [=true = true|do\n          let b \u2190 $\u1d57Bool\n          let b' \u2190 simulateR (if b = true then impl\u2081 else impl\u2082) adv\n          pure (b = b')] =\n        2\u207b\u00b9",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/SimSemantics/Distinguisher.lean#L102"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-05-04T12:41:02-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "585a8cb36f0d05638a899dcdbbf07fc9291333d5ffb33ce7b06bd16bc31c7564"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/SimSemantics/Distinguisher.lean",
        "start_line": 110,
        "start_column": 2,
        "end_line": 110,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nspec : OracleSpec \u03b9\nimpl\u2081 impl\u2082 : QueryImpl spec ProbComp\n\u22a2 impl\u2081 \u2243\u209b\u2092 impl\u2082 \u2194\n    \u2200 (adv : Distinguisher spec),\n      [=false = true|do\n          let b \u2190 $\u1d57Bool\n          let b' \u2190 simulateR (if b = true then impl\u2081 else impl\u2082) adv\n          pure (b = b')] =\n        2\u207b\u00b9",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/SimSemantics/Distinguisher.lean#L110"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-05-04T12:41:02-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "973b4cb3d427c05ef16102dd5f5e0e7cd61d9ce64ee34984d76afac6446e9a44"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/SimSemantics/Distinguisher.lean",
        "start_line": 136,
        "start_column": 2,
        "end_line": 136,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nspec : OracleSpec \u03b9\nimpl\u2081 impl\u2082 : QueryImpl spec ProbComp\nb : \u211d\u22650\u221e\n\u22a2 DistinguisherBound impl\u2081 impl\u2082 b \u2194\n    \u2200 (adv : Distinguisher spec), neverFails adv \u2192 DistinguisherAdvantage impl\u2081 impl\u2082 adv \u2264 b",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/SimSemantics/Distinguisher.lean#L136"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-05-25T21:32:28-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "c1eb6cd140f17dbd2e2e81f17df0971d7ecfbaa5da80286af6761dac33a02553"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/SimSemantics/Distinguisher.lean",
        "start_line": 160,
        "start_column": 6,
        "end_line": 160,
        "end_column": 11
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nspec : OracleSpec \u03b9\nimpl\u2081 impl\u2082 : QueryImpl spec ProbComp\nb : \u211d\u22650\u221e\nadv : Distinguisher spec\nh :\n  1 - [=true|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2081) adv] - [\u22a5|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2081) adv] -\n      (1 - [=true|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2082) adv] - [\u22a5|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2082) adv]) \u2264\n    b\n\u22a2 [=true|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2082) adv].toReal -\n      [=true|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2081) adv].toReal \u2264\n    (1 - [=true|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2081) adv] - [\u22a5|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2081) adv] -\n        (1 - [=true|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2082) adv] -\n          [\u22a5|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2082) adv])).toReal",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/SimSemantics/Distinguisher.lean#L160"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-05-25T21:32:28-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "c24625618f1a1a2e5ff5504de9deacdcc378fc2fd52e76471b436dcafbf59930"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/SimSemantics/Distinguisher.lean",
        "start_line": 162,
        "start_column": 6,
        "end_line": 162,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case hba\n\u03b9 : Type u_1\nspec : OracleSpec \u03b9\nimpl\u2081 impl\u2082 : QueryImpl spec ProbComp\nb : \u211d\u22650\u221e\nadv : Distinguisher spec\nh :\n  1 - [=true|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2081) adv] - [\u22a5|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2081) adv] -\n      (1 - [=true|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2082) adv] - [\u22a5|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2082) adv]) \u2264\n    b\n\u22a2 [=true|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2081) adv] \u2264 [=true|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2082) adv]",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/SimSemantics/Distinguisher.lean#L162"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-05-25T21:32:28-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "6097e9ba77c5f1542291ee6072a67292a6a4cd283b1c38fd7e87899114389f0d"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/SimSemantics/Distinguisher.lean",
        "start_line": 164,
        "start_column": 4,
        "end_line": 164,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case ha\n\u03b9 : Type u_1\nspec : OracleSpec \u03b9\nimpl\u2081 impl\u2082 : QueryImpl spec ProbComp\nb : \u211d\u22650\u221e\nadv : Distinguisher spec\nh :\n  1 - [=true|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2081) adv] - [\u22a5|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2081) adv] -\n      (1 - [=true|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2082) adv] - [\u22a5|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2082) adv]) \u2264\n    b\n\u22a2 [=true|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2082) adv] \u2260 \u22a4",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/SimSemantics/Distinguisher.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-05-25T21:32:28-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "ca438264a6803c294e3e6873d78482e4a63dfa4e1eca104a7a5a513b33807dc2"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/SimSemantics/Distinguisher.lean",
        "start_line": 166,
        "start_column": 4,
        "end_line": 166,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case ha\n\u03b9 : Type u_1\nspec : OracleSpec \u03b9\nimpl\u2081 impl\u2082 : QueryImpl spec ProbComp\nb : \u211d\u22650\u221e\nadv : Distinguisher spec\nh :\n  1 - [=true|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2081) adv] - [\u22a5|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2081) adv] -\n      (1 - [=true|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2082) adv] - [\u22a5|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2082) adv]) \u2264\n    b\n\u22a2 [=true|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2082) adv] - [=true|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2081) adv] \u2260 \u22a4",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/SimSemantics/Distinguisher.lean#L166"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-05-25T21:32:28-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "6208083e48d2db1c38d638dd6288dd1caa13d28eaa426ec83eb28308e71b1d7e"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/SimSemantics/Distinguisher.lean",
        "start_line": 168,
        "start_column": 4,
        "end_line": 168,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case hb\n\u03b9 : Type u_1\nspec : OracleSpec \u03b9\nimpl\u2081 impl\u2082 : QueryImpl spec ProbComp\nb : \u211d\u22650\u221e\nadv : Distinguisher spec\nh :\n  1 - [=true|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2081) adv] - [\u22a5|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2081) adv] -\n      (1 - [=true|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2082) adv] - [\u22a5|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2082) adv]) \u2264\n    b\n\u22a2 1 - [=true|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2081) adv] - [\u22a5|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2081) adv] -\n      (1 - [=true|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2082) adv] - [\u22a5|simulateQ (idOracle unifSpec ++\u209b\u2092 impl\u2082) adv]) \u2260\n    \u22a4",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/SimSemantics/Distinguisher.lean#L168"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-05-25T21:32:28-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "4d30da99ad2d3b9fb32b89b45241924c471075314a394c87bb35e8dbc4bfd9ea"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/SimSemantics/Distinguisher.lean",
        "start_line": 148,
        "start_column": 27,
        "end_line": 148,
        "end_column": 32
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nspec : OracleSpec \u03b9\nimpl\u2081 impl\u2082 : QueryImpl spec ProbComp\nb : \u211d\u22650\u221e\n\u22a2 DistinguisherBound impl\u2082 impl\u2081 b \u2192 DistinguisherBound impl\u2081 impl\u2082 b",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/SimSemantics/Distinguisher.lean#L148"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-05-25T21:32:28-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "212d2e542f15ca1f0c94bbb235b66c3a8435c40beb2c9d270d6dc41c34da7baf"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/SimSemantics/Distinguisher.lean",
        "start_line": 174,
        "start_column": 2,
        "end_line": 174,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nspec : OracleSpec \u03b9\nimpl\u2081 impl\u2082 impl\u2083 : QueryImpl spec ProbComp\nb b' : \u211d\u22650\u221e\nh : DistinguisherBound impl\u2081 impl\u2082 b\nh' : DistinguisherBound impl\u2082 impl\u2083 b'\n\u22a2 DistinguisherBound impl\u2081 impl\u2083 (b + b')",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/SimSemantics/Distinguisher.lean#L174"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-05-25T21:32:28-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "051e650cd77e31f2f0a6ccc2f9497b2a67d85389d8b6e6c20395705ce41ea292"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/SimSemantics/Distinguisher.lean",
        "start_line": 187,
        "start_column": 2,
        "end_line": 187,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nspec : OracleSpec \u03b9\nimpl\u2081 impl\u2082 : QueryImpl spec ProbComp\nb : \u211d\u22650\u221e\n\u22a2 DistinguisherBound impl\u2081 impl\u2082 b \u2194\n    \u2200 (adv : Distinguisher spec), [=true|simulateR impl\u2082 adv] - [=true|simulateR impl\u2081 adv] \u2264 b",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/SimSemantics/Distinguisher.lean#L187"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-05-25T21:32:28-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "657c849587bb0a8af0cffe049277193d71162901b314fcd09c3ad9f8911521f9"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/SimSemantics/Distinguisher.lean",
        "start_line": 193,
        "start_column": 2,
        "end_line": 193,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nspec : OracleSpec \u03b9\nimpl\u2081 impl\u2082 : QueryImpl spec ProbComp\nb : \u211d\u22650\u221e\n\u22a2 DistinguisherBound impl\u2081 impl\u2082 b \u2194\n    \u2200 (adv : Distinguisher spec), [=false|simulateR impl\u2081 adv] - [=false|simulateR impl\u2082 adv] \u2264 b",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/SimSemantics/Distinguisher.lean#L193"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-05-25T21:32:28-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "13d3f63b1fed913114e9b95b88fba7fcd18a1bd59a5d16ca54ffdfd3d0952b9a"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/SimSemantics/Distinguisher.lean",
        "start_line": 198,
        "start_column": 2,
        "end_line": 198,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nspec : OracleSpec \u03b9\nimpl\u2081 impl\u2082 : QueryImpl spec ProbComp\nb : \u211d\u22650\u221e\n\u22a2 DistinguisherBound impl\u2081 impl\u2082 b \u2194\n    \u2200 (adv : Distinguisher spec), [=false|simulateR impl\u2082 adv] - [=false|simulateR impl\u2081 adv] \u2264 b",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/SimSemantics/Distinguisher.lean#L198"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-05-25T21:32:28-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "602db1321bec0635d4d2a92f19ccfd0291255aa54ba868e69c3b7d7487e5cd9c"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/SimSemantics/Distinguisher.lean",
        "start_line": 212,
        "start_column": 2,
        "end_line": 212,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_2\nspec : OracleSpec \u03b9\n\u03b9' : Type u_1\nrspec : OracleSpec \u03b9'\nimpl\u2081 impl\u2082 : QueryImpl spec ProbComp\nred_impl\u2081 red_impl\u2082 : QueryImpl rspec ProbComp\nb r : \u211d\u22650\u221e\nhr : DistinguisherBound red_impl\u2081 red_impl\u2082 r\nreduction : Distinguisher spec \u2192 Distinguisher rspec\nh :\n  \u2200 (adv : Distinguisher spec),\n    DistinguisherAdvantage impl\u2081 impl\u2082 adv > b \u2192 DistinguisherAdvantage red_impl\u2081 red_impl\u2082 (reduction adv) > r\n\u22a2 DistinguisherBound impl\u2081 impl\u2082 b",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/SimSemantics/Distinguisher.lean#L212"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-05-06T22:11:43-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "e5b0ad84e88b5aaceb5cedadac1d7d77140d4e80c9dddd6b83b74bb49ffe5e9a"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "VCVio/OracleComp/SimSemantics/Distinguisher.lean",
        "start_line": 266,
        "start_column": 2,
        "end_line": 266,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nspec : OracleSpec \u03b9\nimpl\u2081 impl\u2082 : QueryImpl spec ProbComp\nb : \u211d\u22650\u221e\n\u22a2 DistinguisherBound impl\u2081 impl\u2082 b \u2194\n    \u2200 (adv : Distinguisher spec),\n      [=true|simulateR impl\u2081 adv] - [=true|simulateR impl\u2082 adv] \u2264 b \u2227\n        [=false|simulateR impl\u2081 adv] - [=false|simulateR impl\u2082 adv] \u2264 b \u2227\n          [=true|simulateR impl\u2082 adv] - [=true|simulateR impl\u2081 adv] \u2264 b \u2227\n            [=false|simulateR impl\u2082 adv] - [=false|simulateR impl\u2081 adv] \u2264 b",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/VCVio/OracleComp/SimSemantics/Distinguisher.lean#L266"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-05-06T08:17:02-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "a9c015f9189962305bce4c226dff47be2f1dbf19b5f0c7af841b6da4e4581758"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ToMathlib/ProbabilityTheory/Coupling.lean",
        "start_line": 84,
        "start_column": 4,
        "end_line": 84,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mp\n\u03b1 \u03b2 : Type u\na : \u03b1\nb : \u03b2\nc : SPMF (\u03b1 \u00d7 \u03b2)\nh1 : Prod.fst <$> c = some <$> PMF.pure a\nh2 : Prod.snd <$> c = some <$> PMF.pure b\nthis : \u2200 (x : Option \u03b1), (Prod.fst <$> c) x = (some <$> PMF.pure a) x\n\u22a2 c = pure (a, b)",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/ToMathlib/ProbabilityTheory/Coupling.lean#L84"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "7bd1fe3630025fd3885ea115a1fa19ca51e1e6cdfe32b3ac5b405c6284b4c988"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ToMathlib/ProbabilityTheory/Coupling.lean",
        "start_line": 91,
        "start_column": 13,
        "end_line": 91,
        "end_column": 18
      },
      "debug_info": {
        "goal": "case mp\n\u03b1 \u03b2 : Type u\nc : SPMF (\u03b1 \u00d7 \u03b2)\nh : c.IsCoupling OptionT.fail OptionT.fail\n\u22a2 c = OptionT.fail",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/ToMathlib/ProbabilityTheory/Coupling.lean#L91"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "f8626bba402e37f9b4c21deef87820b89204060f83c44241ea0b9640604a31b7"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ToMathlib/ProbabilityTheory/Coupling.lean",
        "start_line": 92,
        "start_column": 42,
        "end_line": 92,
        "end_column": 47
      },
      "debug_info": {
        "goal": "case mpr.map_fst\n\u03b1 \u03b2 : Type u\nc : SPMF (\u03b1 \u00d7 \u03b2)\nh : c = OptionT.fail\n\u22a2 Prod.fst <$> OptionT.fail = OptionT.fail",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/ToMathlib/ProbabilityTheory/Coupling.lean#L92"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "164f63a020f185188fe230ea38c555689a5b3445c4f7f76e7d050334353b6b4e"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ToMathlib/ProbabilityTheory/Coupling.lean",
        "start_line": 92,
        "start_column": 42,
        "end_line": 92,
        "end_column": 47
      },
      "debug_info": {
        "goal": "case mpr.map_snd\n\u03b1 \u03b2 : Type u\nc : SPMF (\u03b1 \u00d7 \u03b2)\nh : c = OptionT.fail\n\u22a2 Prod.snd <$> OptionT.fail = OptionT.fail",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/ToMathlib/ProbabilityTheory/Coupling.lean#L92"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "f261a16bf477f735d7e37cf81894388102209231e4499744ac85a894c2e4b32f"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ToMathlib/ProbabilityTheory/Coupling.lean",
        "start_line": 102,
        "start_column": 59,
        "end_line": 102,
        "end_column": 64
      },
      "debug_info": {
        "goal": "case mk.map_fst.e_a.h\n\u03b1\u2081 \u03b1\u2082 \u03b2\u2081 \u03b2\u2082 : Type u\np : SPMF \u03b1\u2081\nq : SPMF \u03b1\u2082\nf : \u03b1\u2081 \u2192 SPMF \u03b2\u2081\ng : \u03b1\u2082 \u2192 SPMF \u03b2\u2082\nc : p.Coupling q\nd : \u03b1\u2081 \u2192 \u03b1\u2082 \u2192 SPMF (\u03b2\u2081 \u00d7 \u03b2\u2082)\nh : \u2200 (a\u2081 : \u03b1\u2081) (a\u2082 : \u03b1\u2082), \u2191\u2191c (some (a\u2081, a\u2082)) \u2260 0 \u2192 (d a\u2081 a\u2082).IsCoupling (f a\u2081) (g a\u2082)\nhc\u2081 : Prod.fst <$> \u2191c = p\nhc\u2082 : Prod.snd <$> \u2191c = q\na\u2081 : \u03b1\u2081\na\u2082 : \u03b1\u2082\nthis : \u2191\u2191c (some (a\u2081, a\u2082)) \u2260 0 \u2192 (d a\u2081 a\u2082).IsCoupling (f a\u2081) (g a\u2082)\n\u22a2 Prod.fst <$> d (a\u2081, a\u2082).1 (a\u2081, a\u2082).2 = f (a\u2081, a\u2082).1",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/ToMathlib/ProbabilityTheory/Coupling.lean#L102"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "011a720194ff65c70101116805c2519980f35075457362ceea7971a505d72595"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "joy-of-crypto",
        "commit": "2910279805aa6fe34c92a48cb96265cf0910d7f0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ToMathlib/ProbabilityTheory/Coupling.lean",
        "start_line": 103,
        "start_column": 18,
        "end_line": 103,
        "end_column": 23
      },
      "debug_info": {
        "goal": "case mk.map_snd\n\u03b1\u2081 \u03b1\u2082 \u03b2\u2081 \u03b2\u2082 : Type u\np : SPMF \u03b1\u2081\nq : SPMF \u03b1\u2082\nf : \u03b1\u2081 \u2192 SPMF \u03b2\u2081\ng : \u03b1\u2082 \u2192 SPMF \u03b2\u2082\nc : p.Coupling q\nd : \u03b1\u2081 \u2192 \u03b1\u2082 \u2192 SPMF (\u03b2\u2081 \u00d7 \u03b2\u2082)\nh : \u2200 (a\u2081 : \u03b1\u2081) (a\u2082 : \u03b1\u2082), \u2191\u2191c (some (a\u2081, a\u2082)) \u2260 0 \u2192 (d a\u2081 a\u2082).IsCoupling (f a\u2081) (g a\u2082)\nhc\u2081 : Prod.fst <$> \u2191c = p\nhc\u2082 : Prod.snd <$> \u2191c = q\n\u22a2 (do\n      let a \u2190 \u2191c\n      Prod.snd <$> d a.1 a.2) =\n    do\n    let a \u2190 \u2191c\n    g a.2",
        "url": "https://github.com/dtumad/VCV-io/blob/2910279805aa6fe34c92a48cb96265cf0910d7f0/ToMathlib/ProbabilityTheory/Coupling.lean#L103"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-05-27T05:01:00.635043+00:00"
      },
      "id": "f309304b3c164c344ebe35225f0fdd246afa9831187bfbf41b6ca91be7d6e5f7"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "1ed6e4e1fa37beaa8248f4882a2109daf07cb9c6",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/Matroid3sum.lean",
        "start_line": 112,
        "start_column": 2,
        "end_line": 112,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro.intro.intro.intro\n\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix (\u2191X\u2097) (\u2191Y\u2097) Z2\nB\u1d63 : Matrix (\u2191X\u1d63) (\u2191Y\u1d63) Z2\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhXY : X\u2097 \u2ad7 Y\u1d63\nhYX : Y\u2097 \u2ad7 X\u1d63\nA\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nhA\u2097 : A\u2097.IsTotallyUnimodular\nhAB\u2097 : A\u2097.IsSigningOf B\u2097\nA\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhA\u1d63 : A\u1d63.IsTotallyUnimodular\nhAB\u1d63 : A\u1d63.IsSigningOf B\u1d63\n\u22a2 match hXX.inter3all with\n  | ((x\u2080\u2097, x\u2081\u2097, x\u2082\u2097), x\u2080\u1d63, x\u2081\u1d63, x\u2082\u1d63) =>\n    match hYY.inter3all with\n    | ((y\u2080\u2097, y\u2081\u2097, y\u2082\u2097), y\u2080\u1d63, y\u2081\u1d63, y\u2082\u1d63) =>\n      let A\u2097 := B\u2097.A\u2097 x\u2080\u2097 x\u2081\u2097 y\u2082\u2097;\n      let D\u2097 := B\u2097.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n      let D\u2080 := B\u2097.D\u2080 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097;\n      let D\u1d63 := B\u1d63.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63;\n      let A\u1d63 := B\u1d63.A\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63;\n      (matrix3sumComposition x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 A\u2097 D\u2097 D\u2080 D\u1d63 A\u1d63).HasTuSigning",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/1ed6e4e1fa37beaa8248f4882a2109daf07cb9c6/Seymour/Matroid/Operations/Sum3/Matroid3sum.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-26T16:45:43+02:00",
        "inclusion_date": "2025-05-28T05:15:38.612257+00:00"
      },
      "id": "ba1ccb2fd741f6e24f32c761e524c5a8aeafd4e83fde552f3d08e05c737cf005"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 334,
        "start_column": 2,
        "end_line": 334,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d : DecidableEq \u03b1\nX Y : Set \u03b1\nQ : Matrix \u2191X \u2191Y \u211a\nhQ : Q.IsTotallyUnimodular\nx\u2082 : \u2191X\ny\u2080 y\u2081 : \u2191Y\nhyy : y\u2080 \u2260 y\u2081\nhQy\u2080 : Q x\u2082 y\u2080 = 1\nhQy\u2081 : Q x\u2082 y\u2081 = 1\nhQy : \u2200 (y : \u2191Y), \u2191y \u2260 \u2191y\u2080 \u2227 \u2191y \u2260 \u2191y\u2081 \u2192 Q x\u2082 y = 0\n\u22a2 let c\u2080 := Q._col y\u2080;\n  let c\u2081 := Q._col y\u2081;\n  let Q' := Q.A\u1d63 x\u2082 y\u2080 y\u2081;\n  (Q' \u25eb \u25aec\u2080 \u25eb \u25aec\u2081 \u25eb \u25ae(c\u2080 - c\u2081)).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L334"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-26T16:45:43+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "4debebeb100844cd40e7fd431a6ec269e91a670e3ff6a5a9c91e15dbe234bae1"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "1ed6e4e1fa37beaa8248f4882a2109daf07cb9c6",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 431,
        "start_column": 2,
        "end_line": 431,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097' : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63' : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhB\u2097' : B\u2097'.IsTotallyUnimodular\nhB\u1d63' : B\u1d63'.IsTotallyUnimodular\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\n\u22a2 let x\u2080\u2097 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2080\u1d63 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2081\u2097 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2081\u1d63 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2082\u2097 := \u27e8x\u2082, \u22ef\u27e9;\n  let x\u2082\u1d63 := \u27e8x\u2082, \u22ef\u27e9;\n  let y\u2080\u2097 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2080\u1d63 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2081\u2097 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2081\u1d63 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2082\u2097 := \u27e8y\u2082, \u22ef\u27e9;\n  let y\u2082\u1d63 := \u27e8y\u2082, \u22ef\u27e9;\n  let B\u2097 := B\u2097'.toCanonicalSigning x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n  let B\u1d63 := B\u1d63'.toCanonicalSigning x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63;\n  let D\u2080 := B\u2097.D\u2080 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097;\n  let D\u2097 := B\u2097.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n  let D\u1d63 := B\u1d63.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63;\n  let c\u2080 := B\u1d63._col y\u2080\u1d63;\n  let c\u2081 := B\u1d63._col y\u2081\u1d63;\n  \u2200\n    (hB\u2097' :\n      (B\u2097'.submatrix3x3 x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097).abs = matrix3x3unsigned\u2080 \u2228\n        (B\u2097'.submatrix3x3 x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097).abs = matrix3x3unsigned\u2081),\n    (B\u1d63'.submatrix3x3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63).abs = matrix3x3unsigned\u2080 \u2228\n        (B\u1d63'.submatrix3x3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63).abs = matrix3x3unsigned\u2081 \u2192\n      match B\u2097'._rrr x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097 hB\u2097' with\n      | (r\u2080, r\u2081, snd) =>\n        (\u229e D\u2097 D\u2080(D\u1d63 * D\u2080\u207b\u00b9 * D\u2097)D\u1d63).submatrix mapX mapY =\n          (fun {X Y \u03b1} [Mul \u03b1] c r => Matrix.of fun i j => c i * r j) c\u2080 r\u2080 +\n            (fun {X Y \u03b1} [Mul \u03b1] c r => Matrix.of fun i j => c i * r j) c\u2081 r\u2081",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/1ed6e4e1fa37beaa8248f4882a2109daf07cb9c6/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L431"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-26T16:45:43+02:00",
        "inclusion_date": "2025-05-28T05:15:38.612257+00:00"
      },
      "id": "68ca41ef70f7e4c6e7d3eba89e65af9687b838d9afa9bdfb9e4b3189723c8ef8"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "1ed6e4e1fa37beaa8248f4882a2109daf07cb9c6",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 470,
        "start_column": 2,
        "end_line": 470,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097' : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63' : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhB\u2097' : B\u2097'.IsTotallyUnimodular\nhB\u1d63' : B\u1d63'.IsTotallyUnimodular\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\n\u22a2 let x\u2080\u2097 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2080\u1d63 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2081\u2097 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2081\u1d63 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2082\u2097 := \u27e8x\u2082, \u22ef\u27e9;\n  let x\u2082\u1d63 := \u27e8x\u2082, \u22ef\u27e9;\n  let y\u2080\u2097 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2080\u1d63 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2081\u2097 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2081\u1d63 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2082\u2097 := \u27e8y\u2082, \u22ef\u27e9;\n  let y\u2082\u1d63 := \u27e8y\u2082, \u22ef\u27e9;\n  let B\u2097 := B\u2097'.toCanonicalSigning x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n  let B\u1d63 := B\u1d63'.toCanonicalSigning x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63;\n  let D\u2080 := B\u2097.D\u2080 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097;\n  let D\u2097 := B\u2097.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n  let D\u1d63 := B\u1d63.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63;\n  let D := (\u229e D\u2097 D\u2080(D\u1d63 * D\u2080\u207b\u00b9 * D\u2097)D\u1d63).submatrix mapX mapY;\n  \u2200\n    (hB\u2097' :\n      (B\u2097'.submatrix3x3 x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097).abs = matrix3x3unsigned\u2080 \u2228\n        (B\u2097'.submatrix3x3 x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097).abs = matrix3x3unsigned\u2081),\n    (B\u1d63'.submatrix3x3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63).abs = matrix3x3unsigned\u2080 \u2228\n        (B\u1d63'.submatrix3x3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63).abs = matrix3x3unsigned\u2081 \u2192\n      match B\u2097'._rrr x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097 hB\u2097' with\n      | (r\u2080, r\u2081, r\u2082) =>\n        \u2200 (i : \u2191(X\u1d63.drop1 x\u2082\u1d63)), D i = r\u2080 \u2228 D i = -r\u2080 \u2228 D i = r\u2081 \u2228 D i = -r\u2081 \u2228 D i = r\u2082 \u2228 D i = -r\u2082 \u2228 D i = 0",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/1ed6e4e1fa37beaa8248f4882a2109daf07cb9c6/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L470"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-26T16:45:43+02:00",
        "inclusion_date": "2025-05-28T05:15:38.612257+00:00"
      },
      "id": "2ea7a6a93633e3e1b17aea862e8934072ac40c04822bcc33574127d05cd6d03f"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "1ed6e4e1fa37beaa8248f4882a2109daf07cb9c6",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 510,
        "start_column": 2,
        "end_line": 510,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097' : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63' : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhB\u2097' : B\u2097'.IsTotallyUnimodular\nhB\u1d63' : B\u1d63'.IsTotallyUnimodular\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\n\u22a2 let x\u2080\u2097 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2080\u1d63 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2081\u2097 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2081\u1d63 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2082\u2097 := \u27e8x\u2082, \u22ef\u27e9;\n  let x\u2082\u1d63 := \u27e8x\u2082, \u22ef\u27e9;\n  let y\u2080\u2097 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2080\u1d63 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2081\u2097 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2081\u1d63 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2082\u2097 := \u27e8y\u2082, \u22ef\u27e9;\n  let y\u2082\u1d63 := \u27e8y\u2082, \u22ef\u27e9;\n  let B\u2097 := B\u2097'.toCanonicalSigning x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n  let B\u1d63 := B\u1d63'.toCanonicalSigning x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63;\n  let D\u2080 := B\u2097.D\u2080 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097;\n  let D\u2097 := B\u2097.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n  let D\u1d63 := B\u1d63.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63;\n  let D := (\u229e D\u2097 D\u2080(D\u1d63 * D\u2080\u207b\u00b9 * D\u2097)D\u1d63).submatrix mapX mapY;\n  let c\u2080 := B\u1d63._col y\u2080\u1d63;\n  let c\u2081 := B\u1d63._col y\u2081\u1d63;\n  (B\u2097'.submatrix3x3 x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097).abs = matrix3x3unsigned\u2080 \u2228\n      (B\u2097'.submatrix3x3 x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097).abs = matrix3x3unsigned\u2081 \u2192\n    (B\u1d63'.submatrix3x3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63).abs = matrix3x3unsigned\u2080 \u2228\n        (B\u1d63'.submatrix3x3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63).abs = matrix3x3unsigned\u2081 \u2192\n      \u2200 (j : \u2191(Y\u2097.drop1 y\u2082\u2097)),\n        (fun x => D x j) = c\u2080 \u2228\n          (fun x => D x j) = -c\u2080 \u2228\n            (fun x => D x j) = c\u2081 \u2228\n              (fun x => D x j) = -c\u2081 \u2228 (fun x => D x j) = c\u2080 - c\u2081 \u2228 (fun x => D x j) = c\u2081 - c\u2080 \u2228 (fun x => D x j) = 0",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/1ed6e4e1fa37beaa8248f4882a2109daf07cb9c6/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L510"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-26T16:45:43+02:00",
        "inclusion_date": "2025-05-28T05:15:38.612257+00:00"
      },
      "id": "b9293258d8fc1b8f230be9c9d835ca73016976233c8f8499f220905fdc49e418"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "1ed6e4e1fa37beaa8248f4882a2109daf07cb9c6",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 537,
        "start_column": 2,
        "end_line": 537,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097' : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63' : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhB\u2097' : B\u2097'.IsTotallyUnimodular\nhB\u1d63' : B\u1d63'.IsTotallyUnimodular\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\n\u22a2 match hXX.inter3all with\n  | ((x\u2080\u2097, x\u2081\u2097, x\u2082\u2097), x\u2080\u1d63, x\u2081\u1d63, x\u2082\u1d63) =>\n    match hYY.inter3all with\n    | ((y\u2080\u2097, y\u2081\u2097, y\u2082\u2097), y\u2080\u1d63, y\u2081\u1d63, y\u2082\u1d63) =>\n      let B\u2097 := B\u2097'.toCanonicalSigning x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n      let B\u1d63 := B\u1d63'.toCanonicalSigning x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63;\n      let D\u2080 := B\u1d63.D\u2080 x\u2080\u1d63 x\u2081\u1d63 y\u2080\u1d63 y\u2081\u1d63;\n      let D\u2097 := B\u2097.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n      let D\u1d63 := B\u1d63.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63;\n      (B\u2097'.submatrix3x3 x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097).abs = matrix3x3unsigned\u2080 \u2228\n          (B\u2097'.submatrix3x3 x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097).abs = matrix3x3unsigned\u2081 \u2192\n        (B\u1d63'.submatrix3x3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63).abs = matrix3x3unsigned\u2080 \u2228\n            (B\u1d63'.submatrix3x3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63).abs = matrix3x3unsigned\u2081 \u2192\n          (B\u1d63.A\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 \u25eb (\u229e D\u2097 D\u2080(D\u1d63 * D\u2080\u207b\u00b9 * D\u2097)D\u1d63).submatrix mapX mapY).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/1ed6e4e1fa37beaa8248f4882a2109daf07cb9c6/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L537"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-26T16:45:43+02:00",
        "inclusion_date": "2025-05-28T05:15:38.612257+00:00"
      },
      "id": "4a01b1a342313e82599d16c52f0f6bee7c3204dc014997daf54af54cb321bb80"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "1ed6e4e1fa37beaa8248f4882a2109daf07cb9c6",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 561,
        "start_column": 2,
        "end_line": 561,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097' : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63' : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhB\u2097' : B\u2097'.IsTotallyUnimodular\nhB\u1d63' : B\u1d63'.IsTotallyUnimodular\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\n\u22a2 match hXX.inter3all with\n  | ((x\u2080\u2097, x\u2081\u2097, x\u2082\u2097), x\u2080\u1d63, x\u2081\u1d63, x\u2082\u1d63) =>\n    match hYY.inter3all with\n    | ((y\u2080\u2097, y\u2081\u2097, y\u2082\u2097), y\u2080\u1d63, y\u2081\u1d63, y\u2082\u1d63) =>\n      let B\u2097 := B\u2097'.toCanonicalSigning x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n      let B\u1d63 := B\u1d63'.toCanonicalSigning x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63;\n      let D\u2080 := B\u2097.D\u2080 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097;\n      let D\u2097 := B\u2097.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n      let D\u1d63 := B\u1d63.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63;\n      (B\u2097'.submatrix3x3 x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097).abs = matrix3x3unsigned\u2080 \u2228\n          (B\u2097'.submatrix3x3 x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097).abs = matrix3x3unsigned\u2081 \u2192\n        (B\u1d63'.submatrix3x3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63).abs = matrix3x3unsigned\u2080 \u2228\n            (B\u1d63'.submatrix3x3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63).abs = matrix3x3unsigned\u2081 \u2192\n          (B\u2097.A\u2097 x\u2080\u2097 x\u2081\u2097 y\u2082\u2097 \u229f (\u229e D\u2097 D\u2080(D\u1d63 * D\u2080\u207b\u00b9 * D\u2097)D\u1d63).submatrix mapX mapY).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/1ed6e4e1fa37beaa8248f4882a2109daf07cb9c6/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L561"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-26T16:45:43+02:00",
        "inclusion_date": "2025-05-28T05:15:38.612257+00:00"
      },
      "id": "7ae831725ef2ca4fa1752d527538520a273887edbf18b2c1397ee2b47ba55f4d"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/LeanSearchClient",
        "branch": "main",
        "commit": "6c62474116f525d2814f0157bb468bf3a4f9f120",
        "lean_version": "v4.17.0"
      },
      "location": {
        "path": "LeanSearchClientTest/MoogleExamples.lean",
        "start_line": 33,
        "start_column": 2,
        "end_line": 33,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 3 \u2264 5",
        "url": "https://github.com/leanprover-community/LeanSearchClient/blob/6c62474116f525d2814f0157bb468bf3a4f9f120/LeanSearchClientTest/MoogleExamples.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "7b8d77610b35",
        "blame_date": "2025-03-20T02:55:26+05:30",
        "inclusion_date": "2025-05-27T05:38:27.112195+00:00"
      },
      "id": "ade6d9ef1ae9dee820f87671aedea2a336556bc7019dadab49a6836d11bd7d7a"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "2ec6b8bfd6b02531d459869014799c186fff7c65",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 884,
        "start_column": 10,
        "end_line": 884,
        "end_column": 15
      },
      "debug_info": {
        "goal": "X : Sequent\nW : Type\nM : KripkeModel W\n\u03c6 : Formula\nside : Side\n\u03b1s : List Program\nB : List Sequent\nnext : (Y : Sequent) \u2192 Y \u2208 B \u2192 LocalTableau Y\nv w : W\nw_n\u03be : (M, w)\u22a8~''(AnyFormula.normal \u03c6)\n\u03b1 : Program\nL R : List Formula\nO : Olf\nv_t : (M, v)\u22a8(L, R, O)\nnegLoad_in : (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6))).in_side side (L, R, O)\nno_other_loading : (Sequent.without (L, R, O) (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6)))).isFree = true\nu : W\nv_\u03b1_u : relate M \u03b1 v u\nu_\u03b1s_w : relateSeq M \u03b1s u w\nF : List Formula\n\u03b4 : List Program\n_in_H : (F, \u03b4) \u2208 H \u03b1\nv_F : (M, v)\u22a8(F, \u03b4).1\nv_\u03b4_w : relateSeq M (F, \u03b4).2 v u\n\u03c7' : LoadFormula\n\u03c7_def : AnyFormula.loaded \u03c7' = AnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)\n\u03b1'_not_atomic : \u00ac\u03b1.isAtomic\nprecons : \u2205.Subperm L \u2227 \u2205.Subperm R \u2227 some (Sum.inl (~'\u230a\u03b1\u230bAnyFormula.loaded \u03c7')) \u2286 O\nB_def_apply_r_LRO :\n  B = applyLocalRule (LocalRule.loadedL (\u230a\u03b1\u230bAnyFormula.loaded \u03c7') (LoadRule.dia \u03b1'_not_atomic)) (L, R, O)\nclaim : (L ++ F, R, some (Sum.inl (~'\u230a\u230a\u03b4\u230b\u230b\u03c7'))) \u2208 B\n\u22a2 \u2203\n    Y \u2208\n      endNodesOf\n        (LocalTableau.byLocalRule\n          (LocalRuleApp.mk \u2205 \u2205 (some (Sum.inl (~'\u230a\u03b1\u230bAnyFormula.loaded \u03c7')))\n            (LocalRule.loadedL (\u230a\u03b1\u230bAnyFormula.loaded \u03c7') (LoadRule.dia \u03b1'_not_atomic)) precons)\n          next),\n    (M, v)\u22a8Y \u2227\n      (Y.isFree = true \u2228\n        \u2203 F \u03b3,\n          (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6))).in_side side Y \u2227\n            relateSeq M \u03b3 v w \u2227\n              (M, v)\u22a8F \u2227\n                (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6)))).isFree = true)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/2ec6b8bfd6b02531d459869014799c186fff7c65/Pdl/Soundness.lean#L884"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-05-26T23:22:48+02:00",
        "inclusion_date": "2025-05-27T05:39:39.837606+00:00"
      },
      "id": "b0785a912095fff90e8b39304388829e4d94ca5992964bd5b878ebbb4d79c742"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "2ec6b8bfd6b02531d459869014799c186fff7c65",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 887,
        "start_column": 10,
        "end_line": 887,
        "end_column": 15
      },
      "debug_info": {
        "goal": "X : Sequent\nW : Type\nM : KripkeModel W\n\u03c6\u271d : Formula\nside : Side\n\u03b1s : List Program\nB : List Sequent\nnext : (Y : Sequent) \u2192 Y \u2208 B \u2192 LocalTableau Y\nv w : W\nw_n\u03be : (M, w)\u22a8~''(AnyFormula.normal \u03c6\u271d)\n\u03b1 : Program\nL R : List Formula\nO : Olf\nv_t : (M, v)\u22a8(L, R, O)\nnegLoad_in : (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6\u271d))).in_side side (L, R, O)\nno_other_loading :\n  (Sequent.without (L, R, O) (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6\u271d)))).isFree = true\nu : W\nv_\u03b1_u : relate M \u03b1 v u\nu_\u03b1s_w : relateSeq M \u03b1s u w\nF : List Formula\n\u03b4 : List Program\n_in_H : (F, \u03b4) \u2208 H \u03b1\nv_F : (M, v)\u22a8(F, \u03b4).1\nv_\u03b4_w : relateSeq M (F, \u03b4).2 v u\n\u03b1' : Program\n\u03c6 : Formula\n\u03b1'_not_atomic : \u00ac\u03b1'.isAtomic\nprecons : \u2205.Subperm L \u2227 \u2205.Subperm R \u2227 some (Sum.inl (~'\u230a\u03b1'\u230bAnyFormula.normal \u03c6)) \u2286 O\nB_def_apply_r_LRO :\n  B = applyLocalRule (LocalRule.loadedL (\u230a\u03b1'\u230bAnyFormula.normal \u03c6) (LoadRule.dia' \u03b1'_not_atomic)) (L, R, O)\n\u22a2 \u2203\n    Y \u2208\n      endNodesOf\n        (LocalTableau.byLocalRule\n          (LocalRuleApp.mk \u2205 \u2205 (some (Sum.inl (~'\u230a\u03b1'\u230bAnyFormula.normal \u03c6)))\n            (LocalRule.loadedL (\u230a\u03b1'\u230bAnyFormula.normal \u03c6) (LoadRule.dia' \u03b1'_not_atomic)) precons)\n          next),\n    (M, v)\u22a8Y \u2227\n      (Y.isFree = true \u2228\n        \u2203 F \u03b3,\n          (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6\u271d))).in_side side Y \u2227\n            relateSeq M \u03b3 v w \u2227\n              (M, v)\u22a8F \u2227\n                (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6\u271d)))).isFree = true)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/2ec6b8bfd6b02531d459869014799c186fff7c65/Pdl/Soundness.lean#L887"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-05-26T23:22:48+02:00",
        "inclusion_date": "2025-05-27T05:39:39.837606+00:00"
      },
      "id": "a4629f81ae48c050c93df114ef46ee098130927c8d763e9282102dea67b738bd"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "2ec6b8bfd6b02531d459869014799c186fff7c65",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 891,
        "start_column": 8,
        "end_line": 891,
        "end_column": 13
      },
      "debug_info": {
        "goal": "X : Sequent\nW : Type\nM : KripkeModel W\n\u03c6 : Formula\nside : Side\n\u03b1s : List Program\nB : List Sequent\nnext : (Y : Sequent) \u2192 Y \u2208 B \u2192 LocalTableau Y\nIH :\n  \u2200 (Y : Sequent) (a : Y \u2208 B) {v w : W},\n    (M, v)\u22a8Y \u2192\n      (M, w)\u22a8~''(AnyFormula.normal \u03c6) \u2192\n        \u2200 (\u03b1 : Program),\n          relateSeq M (\u03b1 :: \u03b1s) v w \u2192\n            (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6))).in_side side Y \u2192\n              (Y.without (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6)))).isFree = true \u2192\n                \u2203 Y_1 \u2208 endNodesOf (next Y a),\n                  (M, v)\u22a8Y_1 \u2227\n                    (Y_1.isFree = true \u2228\n                      \u2203 F \u03b3,\n                        (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6))).in_side side Y_1 \u2227\n                          relateSeq M \u03b3 v w \u2227\n                            (M, v)\u22a8F \u2227\n                              (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227\n                                (Y_1.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6)))).isFree = true)\nv w : W\nw_n\u03be : (M, w)\u22a8~''(AnyFormula.normal \u03c6)\n\u03b1 : Program\nv_\u03b1s_w : relateSeq M (\u03b1 :: \u03b1s) v w\nL R : List Formula\nO : Olf\nv_t : (M, v)\u22a8(L, R, O)\nnegLoad_in : (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6))).in_side side (L, R, O)\nno_other_loading : (Sequent.without (L, R, O) (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6)))).isFree = true\nlocRulTru : \u2200 (w : W), (M, w)\u22a8(L, R, O) \u2194 \u2203 Ci \u2208 B, (M, w)\u22a8Ci\nress\u271d : List (List Formula \u00d7 Option NegLoadFormula)\n\u03c7\u271d : LoadFormula\nlrule\u271d : LoadRule (~'\u03c7\u271d) ress\u271d\nprecons : \u2205.Subperm L \u2227 \u2205.Subperm R \u2227 some (Sum.inr (~'\u03c7\u271d)) \u2286 O\nB_def_apply_r_LRO : B = applyLocalRule (LocalRule.loadedR \u03c7\u271d lrule\u271d) (L, R, O)\n\u22a2 \u2203\n    Y \u2208\n      endNodesOf\n        (LocalTableau.byLocalRule (LocalRuleApp.mk \u2205 \u2205 (some (Sum.inr (~'\u03c7\u271d))) (LocalRule.loadedR \u03c7\u271d lrule\u271d) precons)\n          next),\n    (M, v)\u22a8Y \u2227\n      (Y.isFree = true \u2228\n        \u2203 F \u03b3,\n          (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6))).in_side side Y \u2227\n            relateSeq M \u03b3 v w \u2227\n              (M, v)\u22a8F \u2227\n                (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6)))).isFree = true)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/2ec6b8bfd6b02531d459869014799c186fff7c65/Pdl/Soundness.lean#L891"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-05-26T23:22:48+02:00",
        "inclusion_date": "2025-05-27T05:39:39.837606+00:00"
      },
      "id": "9d5da9bbc1796e3bf148d59134993bbcd8db40404c574d984c8850fa50144167"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "5efd5c9ae89d274ed5932ca3d01ff307d9aa38a2",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 1578,
        "start_column": 8,
        "end_line": 1578,
        "end_column": 13
      },
      "debug_info": {
        "goal": "X : Sequent\nW : Type\nM : KripkeModel W\nv w : W\n\u03be : AnyFormula\nside : Side\nw_n\u03be : (M, w)\u22a8~''\u03be\nB : List Sequent\nnext : (Y : Sequent) \u2192 Y \u2208 B \u2192 LocalTableau Y\nIH :\n  \u2200 (Y : Sequent) (a : Y \u2208 B) (\u03b1 : Program),\n    relate M \u03b1 v w \u2192\n      (M, v)\u22a8Y \u2192\n        (~''(AnyFormula.loaded (\u230a\u03b1\u230b\u03be))).in_side side Y \u2192\n          \u2203 Y_1 \u2208 endNodesOf (next Y a),\n            (M, v)\u22a8Y_1 \u2227\n              (Y_1.isFree = true \u2228\n                \u2203 F \u03b3,\n                  (~''(AnyFormula.loadBoxes \u03b3 \u03be)).in_side side Y_1 \u2227\n                    relateSeq M \u03b3 v w \u2227\n                      (\u2200 f \u2208 F, evaluate M v f) \u2227\n                        (F, \u03b3) \u2208 H \u03b1 \u2227 (Y_1.without (~''(AnyFormula.loadBoxes \u03b3 \u03be))).isFree = true)\n\u03b1 : Program\nv_\u03b1_w : relate M \u03b1 v w\nL R : List Formula\nO : Olf\nv_t : (M, v)\u22a8(L, R, O)\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230b\u03be))).in_side side (L, R, O)\nF : List Formula\n\u03b4 : List Program\n_in_H : (F, \u03b4) \u2208 H \u03b1\nv_F : \u2200 f \u2208 F, evaluate M v f\nv_\u03b4_w : relateSeq M \u03b4 v w\n\u03b1' : Program\n\u03c6 : Formula\n\u03b1'_not_atomic : \u00ac\u03b1'.isAtomic\nprecons : \u2205.Subperm L \u2227 \u2205.Subperm R \u2227 some (Sum.inl (~'\u230a\u03b1'\u230bAnyFormula.normal \u03c6)) \u2286 O\nB_def_apply_r_LRO :\n  B = applyLocalRule (LocalRule.loadedL (\u230a\u03b1'\u230bAnyFormula.normal \u03c6) (LoadRule.dia' \u03b1'_not_atomic)) (L, R, O)\n\u22a2 \u2203 Y,\n    (\u2203 Z, \u2203 (Z_in : Z \u2208 B), Y \u2208 endNodesOf (next Z \u22ef)) \u2227\n      (M, v)\u22a8Y \u2227\n        (Y.isFree = true \u2228\n          \u2203 F \u03b3,\n            (~''(AnyFormula.loadBoxes \u03b3 \u03be)).in_side side Y \u2227\n              relateSeq M \u03b3 v w \u2227\n                (\u2200 f \u2208 F, evaluate M v f) \u2227 (F, \u03b3) \u2208 H \u03b1 \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 \u03be))).isFree = true)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/5efd5c9ae89d274ed5932ca3d01ff307d9aa38a2/Pdl/Soundness.lean#L1578"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2024-12-15T19:37:25+01:00",
        "inclusion_date": "2025-06-02T05:03:52.703931+00:00"
      },
      "id": "713f31ec540dc364bf0f28b82ff5fe57bd7d6df03923529408242b47aa0f0585"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 50,
        "start_column": 77,
        "end_line": 50,
        "end_column": 82
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\n\u22a2 I[\u2211 i, \u2211 j, \u2191\u2191i \u2022 Y (i, j) : \u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j)|\u2211 i, \u2211 j, Y (i, j)] \u2264 4 * \u2191p.m ^ 2 * p.\u03b7 * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/TorsionEndgame.lean#L50"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-09-30T22:19:50+00:00",
        "inclusion_date": "2025-06-01T05:48:08.137702+00:00"
      },
      "id": "29778f1152b52f56e471415ff435d1178960d2b494e0bf5056a34dbea0e71309"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 52,
        "start_column": 77,
        "end_line": 52,
        "end_column": 82
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\n\u22a2 I[\u2211 i, \u2211 j, \u2191\u2191i \u2022 Y (i, j) : \u2211 i, \u2211 j, (-\u2191\u2191i - \u2191\u2191j) \u2022 Y (i, j)|\u2211 i, \u2211 j, Y (i, j)] \u2264\n    4 * \u2191p.m ^ 2 * p.\u03b7 * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/TorsionEndgame.lean#L52"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-09-30T22:19:50+00:00",
        "inclusion_date": "2025-06-01T05:48:08.137702+00:00"
      },
      "id": "4353ed325cd0df36555a1d92cf39ee1f05f229f1bfeb095cd1e7f893188bf0f6"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 54,
        "start_column": 77,
        "end_line": 54,
        "end_column": 82
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\n\u22a2 I[\u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j) : \u2211 i, \u2211 j, (-\u2191\u2191i - \u2191\u2191j) \u2022 Y (i, j)|\u2211 i, \u2211 j, Y (i, j)] \u2264\n    4 * \u2191p.m ^ 2 * p.\u03b7 * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/TorsionEndgame.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-09-30T22:19:50+00:00",
        "inclusion_date": "2025-06-01T05:48:08.137702+00:00"
      },
      "id": "861ef26a6b180dd0b4b9f8b5b1c5d8854478cb6dbf9bc9f02bfebb75167de635"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 58,
        "start_column": 74,
        "end_line": 58,
        "end_column": 79
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\nm : \u211d\n\u22a2 H[\u2211 i, \u2211 j, Y (i, j)] \u2264 (2 * \u2191p.m - 1) * multiTau p \u03a9 h\u03a9 X + m\u207b\u00b9 * \u2211 i, H[X i]",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/TorsionEndgame.lean#L58"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T08:58:11-07:00",
        "inclusion_date": "2025-06-01T05:48:08.137702+00:00"
      },
      "id": "6f463354723a3967221a993ee20ea4665655cd9d78414eebf560f95abe779f2e"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 61,
        "start_column": 94,
        "end_line": 61,
        "end_column": 99
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\nm : \u211d\n\u22a2 H[\u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j)] \u2264 (8 * \u2191p.m ^ 2 - 16 * \u2191p.m + 1) * multiTau p \u03a9 h\u03a9 X + m\u207b\u00b9 * \u2211 i, H[X i]",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/TorsionEndgame.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T08:58:11-07:00",
        "inclusion_date": "2025-06-01T05:48:08.137702+00:00"
      },
      "id": "7c3aed8cd9f21af426a0736f8e83b96ac5b62959ecf090c1e817aaa56108a19a"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 64,
        "start_column": 60,
        "end_line": 64,
        "end_column": 65
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\n\u22a2 I[\u2211 i, \u2211 j, Y (i, j) : \u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j)] \u2264 2 * (\u2191p.m - 1) * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/TorsionEndgame.lean#L64"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T08:58:11-07:00",
        "inclusion_date": "2025-06-01T05:48:08.137702+00:00"
      },
      "id": "9a1404b34047e0b9ec6a3b821d265bb88ed85de064e916d5f4491245acc7039e"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 67,
        "start_column": 88,
        "end_line": 67,
        "end_column": 93
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\n\u22a2 \u2211 i, d[X i # \u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j) | \u2211 i, \u2211 j, Y (i, j)] \u2264 8 * (\u2191p.m ^ 3 - \u2191p.m ^ 2) * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/TorsionEndgame.lean#L67"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T08:58:11-07:00",
        "inclusion_date": "2025-06-01T05:48:08.137702+00:00"
      },
      "id": "3b64a719e1e86892effa18eeda8b3877db4e52f6ef4fc22e290a8abb403731f6"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 79,
        "start_column": 398,
        "end_line": 79,
        "end_column": 403
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : MeasureableFinGroup G\n\u03a9 : Type u_2\ninst\u271d : MeasureSpace \u03a9\nT\u2081 T\u2082 T\u2083 : \u03a9 \u2192 G\nhsum : T\u2081 + T\u2082 + T\u2083 = 0\nn : \u2115\n\u03a9' : Fin n \u2192 Type u_3\nh\u03a9' : (i : Fin n) \u2192 MeasureSpace (\u03a9' i)\nY : (i : Fin n) \u2192 \u03a9' i \u2192 G\n\u03b1 : \u211d\nh\u03b1 : \u03b1 > 0\n\u22a2 \u2203 \u03a9'' h\u03a9'' U,\n    d[U # U] + \u03b1 * \u2211 i, d[Y i # U] \u2264 (2 + \u03b1 * \u2191n / 2) * (I[T\u2081 : T\u2082] + I[T\u2081 : T\u2083] + I[T\u2082 : T\u2083]) + \u03b1 * \u2211 i, d[Y i # T\u2082]",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/TorsionEndgame.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-04-17T21:11:56+01:00",
        "inclusion_date": "2025-06-01T05:48:08.137702+00:00"
      },
      "id": "9349131d79bf0075e62ede60861e7a6797f02f6e391798d2a1d86e672a5a6ab0"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 82,
        "start_column": 27,
        "end_line": 82,
        "end_column": 32
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b9 : MeasureableFinGroup G\ninst\u271d : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u22a2 multiTau p \u03a9 h\u03a9 X = 0",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/TorsionEndgame.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-28T21:28:18-07:00",
        "inclusion_date": "2025-06-01T05:48:08.137702+00:00"
      },
      "id": "1bad888fb80b90a1896023ba386a9e79f0c0c8eb79c066659f07333d5c3e6d63"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 89,
        "start_column": 54,
        "end_line": 89,
        "end_column": 59
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u2074 : AddCommGroup G\ninst\u271d\u00b3 : Fintype G\ninst\u271d\u00b2 : MeasurableSpace G\ninst\u271d\u00b9 : MeasurableSingletonClass G\nm : \u2115\nhm : m \u2265 2\nhtorsion : \u2200 (x : G), m \u2022 x = 0\n\u03a9 : Type u_2\ninst\u271d : MeasureSpace \u03a9\nX : \u03a9 \u2192 G\n\u22a2 \u2203 H \u03a9' m\u03a9 U, IsUniform (\u2191H) U volume \u2227 d[X # U] \u2264 64 * \u2191m ^ 3 * d[X # X]",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/TorsionEndgame.lean#L89"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-28T21:28:18-07:00",
        "inclusion_date": "2025-06-01T05:48:08.137702+00:00"
      },
      "id": "df6a04c325e2991b626b1aad360148be2b60cc867ac78ea434655d13412adadd"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 102,
        "start_column": 64,
        "end_line": 102,
        "end_column": 69
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Fintype G\nm : \u2115\nhm : m \u2265 2\nhtorsion : \u2200 (x : G), m \u2022 x = 0\nA : Set G\ninst\u271d : Finite \u2191A\nK : \u211d\nh\u2080A : A.Nonempty\nhA : \u2191(Nat.card \u2191(A + A)) \u2264 K * \u2191(Nat.card \u2191A)\n\u22a2 \u2203 H c,\n    \u2191(Nat.card \u2191c) \u2264 K ^ (64 * \u2191m ^ 3 + 2) * \u2191(Nat.card \u2191A) ^ (1 / 2) * \u2191(Nat.card \u21a5H) ^ (-1 / 2) \u2227\n      \u2191(Nat.card \u21a5H) \u2264 K ^ (64 * \u2191m ^ 3) * \u2191(Nat.card \u2191A) \u2227\n        \u2191(Nat.card \u2191A) \u2264 K ^ (64 * \u2191m ^ 3) * \u2191(Nat.card \u21a5H) \u2227 A \u2286 c + \u2191H",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/TorsionEndgame.lean#L102"
      },
      "metadata": {
        "blame_email_hash": "7d87c0724495",
        "blame_date": "2024-08-18T18:37:52+02:00",
        "inclusion_date": "2025-06-01T05:48:08.137702+00:00"
      },
      "id": "a3a816a6ca42314d65ca929e6927930ec1151d28c491c3b9b16ad93e9cad997b"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/BoundingMutual.lean",
        "start_line": 36,
        "start_column": 79,
        "end_line": 36,
        "end_column": 84
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Type u\nh\u03a9 : MeasureSpace \u03a9\nX : Fin p.m \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X volume\nh_min : multiTauMinimizes p (fun x => \u03a9) (fun x => h\u03a9) X\n\u03a9' : Type u_1\ninst\u271d : MeasureSpace \u03a9'\nX' : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh_indep' : iIndepFun X' volume\nhperm : \u2200 (j : Fin p.m), \u2203 e, IdentDistrib (fun \u03c9 i => X' (i, j) \u03c9) (fun \u03c9 i => X (e i) \u03c9) volume volume\n\u22a2 I[fun \u03c9 j => \u2211 i, X' (i, j) \u03c9 : fun \u03c9 i => \u2211 j, X' (i, j) \u03c9|fun \u03c9 => \u2211 i, \u2211 j, X' (i, j) \u03c9] \u2264\n    4 * \u2191p.m ^ 2 * p.\u03b7 * D[X ; fun x => h\u03a9]",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/BoundingMutual.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "7d87c0724495",
        "blame_date": "2025-03-07T08:53:46+01:00",
        "inclusion_date": "2025-06-01T05:48:08.137702+00:00"
      },
      "id": "760c97c8db36acdc50f51b10867203a8a1409cd24c60a939e37c5186ba4967ef"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/ApproxHomPFR.lean",
        "start_line": 181,
        "start_column": 65,
        "end_line": 181,
        "end_column": 70
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Fintype G\ninst\u271d : Module (ZMod 2) G\n\u22a2 Nat.card (G \u2192+ ZMod 2) = Nat.card G",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/ApproxHomPFR.lean#L181"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2025-05-01T23:21:54-07:00",
        "inclusion_date": "2025-06-01T05:48:08.137702+00:00"
      },
      "id": "0b0a333097173f6020e721a4295e35b9b92d2dec9e21abe2d182fd2bd4db8136"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/ApproxHomPFR.lean",
        "start_line": 183,
        "start_column": 114,
        "end_line": 183,
        "end_column": 119
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Fintype G\ninst\u271d : Module (ZMod 2) G\nx : G\nhx : x \u2260 0\n\u22a2 Nat.card \u2191{\u03c6 | \u03c6 x = 1} = Nat.card G / 2",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/ApproxHomPFR.lean#L183"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2025-05-01T23:21:54-07:00",
        "inclusion_date": "2025-06-01T05:48:08.137702+00:00"
      },
      "id": "6ae7f947eec4b094d53ce34549c2a563d41d7fbd8a79fae4df113fdc5cce1795"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/ApproxHomPFR.lean",
        "start_line": 185,
        "start_column": 114,
        "end_line": 185,
        "end_column": 119
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Fintype G\ninst\u271d : Module (ZMod 2) G\nA : Set G\n\u22a2 \u2203 \u03c6, Nat.card \u2191{x | x \u2208 A \u2227 \u03c6 x = 1} \u2265 (Nat.card \u2191A - 1) / 2",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/ApproxHomPFR.lean#L185"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2025-05-01T23:21:54-07:00",
        "inclusion_date": "2025-06-01T05:48:08.137702+00:00"
      },
      "id": "92edd06e600f29493199f46c43a85e8ecd63e24d686770fb100b4846983f3094"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/ApproxHomPFR.lean",
        "start_line": 189,
        "start_column": 99,
        "end_line": 189,
        "end_column": 104
      },
      "debug_info": {
        "goal": "G : Type u_1\nG' : Type u_2\ninst\u271d\u2075 : AddCommGroup G\ninst\u271d\u2074 : Fintype G\ninst\u271d\u00b3 : AddCommGroup G'\ninst\u271d\u00b2 : Fintype G'\ninst\u271d\u00b9 : Module (ZMod 2) G\ninst\u271d : Module (ZMod 2) G'\nf : G \u2192 G'\nK : \u211d\nhK : K > 0\nhf : \u2191(Nat.card G) ^ 2 / K \u2264 \u2191(Nat.card \u2191{x | f (x.1 + x.2) = f x.1 + f x.2})\n\u22a2 \u2203 \u03c6'', \u2191(Nat.card \u2191{x | f x = \u03c6'' x}) \u2265 (\u2191(Nat.card G) / (2 ^ 144 * K ^ 122) - 1) / 2",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/ApproxHomPFR.lean#L189"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2025-05-01T23:21:54-07:00",
        "inclusion_date": "2025-06-01T05:48:08.137702+00:00"
      },
      "id": "9de863cf20878ce35c49c24c84ebaa31d77e094ad8451d897059fe9415571343"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 527,
        "start_column": 2,
        "end_line": 527,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type u_1\nG : Type u_5\nm\u03a9 : MeasurableSpace \u03a9\n\u03bc : Measure \u03a9\nhG : MeasurableSpace G\ninst\u271d\u00b3 : MeasurableSingletonClass G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Countable G\ninst\u271d : IsProbabilityMeasure \u03bc\nI : Type u_8\ns t : Finset I\nhdisj : Disjoint s t\nhs : s.Nonempty\nht : t.Nonempty\nX : I \u2192 \u03a9 \u2192 G\nhX : \u2200 (i : I), Measurable (X i)\nhX' : \u2200 (i : I), FiniteRange (X i)\nh_indep : iIndepFun X \u03bc\nf : I \u2192 I\nhf : Finset.image f t \u2286 s\n\u22a2 H[\u2211 i \u2208 t, X i ; \u03bc] \u2264 H[\u2211 i \u2208 s, X i ; \u03bc] + \u2211 i \u2208 t, (H[X i - X (f i) ; \u03bc] - H[X (f i) ; \u03bc])",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/MoreRuzsaDist.lean#L527"
      },
      "metadata": {
        "blame_email_hash": "6e8091041644",
        "blame_date": "2024-05-31T19:35:50+01:00",
        "inclusion_date": "2025-06-01T05:48:08.137702+00:00"
      },
      "id": "0096fe7dfae77c016ed8c38588a02549b90f6ada960a95cd2c357ace26e8437d"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 760,
        "start_column": 62,
        "end_line": 760,
        "end_column": 67
      },
      "debug_info": {
        "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\n\u03a9 : Type u_9\nh\u03a9 : MeasureSpace \u03a9\nX : Fin m \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X volume\n\u22a2 @multiDist G hG inst\u271d\u00b2 m (fun x => \u03a9) (fun x => h\u03a9) X = H[\u2211 i, X i] - (\u2211 i, H[X i]) / \u2191m",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/MoreRuzsaDist.lean#L760"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-22T09:31:46-07:00",
        "inclusion_date": "2025-06-01T05:48:08.137702+00:00"
      },
      "id": "85f23dba03df424ce1af5162c60259cae9aa3eec53d348b0590552a3f8665f87"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "018c619cf93d489a688e485cafd43f5545ddd99e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 1165,
        "start_column": 82,
        "end_line": 1165,
        "end_column": 87
      },
      "debug_info": {
        "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Type u_9\nh\u03a9 : MeasureSpace \u03a9\nX : Fin m \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X volume\n\u22a2 d[\u2211 i, X i # \u2211 i, X i] \u2264 2 * @multiDist G hG inst\u271d\u00b2 m (fun x => \u03a9) (fun x => h\u03a9) X",
        "url": "https://github.com/teorth/pfr/blob/018c619cf93d489a688e485cafd43f5545ddd99e/PFR/MoreRuzsaDist.lean#L1165"
      },
      "metadata": {
        "blame_email_hash": "7d87c0724495",
        "blame_date": "2025-03-07T08:53:46+01:00",
        "inclusion_date": "2025-05-27T06:36:49.192108+00:00"
      },
      "id": "b1d15c92fcf249647ae1963a74809dd64695bde853bfdc48ac27a037a74f2fac"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 2070,
        "start_column": 54,
        "end_line": 2070,
        "end_column": 59
      },
      "debug_info": {
        "goal": "G : Type u_5\nhG : MeasurableSpace G\ninst\u271d\u00b3 : MeasurableSingletonClass G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Countable G\ninst\u271d : Fintype G\nm : \u2115\nhm : m \u2265 1\n\u03a9 : Type u_8\nh\u03a9 : MeasureSpace \u03a9\nX : Fin (m + 1) \u00d7 Fin (m + 1) \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X volume\n\u22a2 I[fun \u03c9 j => \u2211 i, X (i, j) \u03c9 : fun \u03c9 i => \u2211 j, X (i, j) \u03c9|\u2211 p, X p] \u2264\n    (\u2211 j,\n          ((@multiDist G hG inst\u271d\u00b2 (m + 1) (fun x => \u03a9) (fun x => h\u03a9) fun i => X (i, j)) -\n            @condMultiDist G hG inst\u271d\u00b2 (m + 1) (fun x => \u03a9) (fun x => h\u03a9) G inst\u271d (fun i => X (i, j)) fun i =>\n              \u2211 k \u2208 Finset.Ici j, X (i, k)) +\n        @multiDist G hG inst\u271d\u00b2 (m + 1) (fun x => \u03a9) (fun x => h\u03a9) fun i => X (i, \u2191m)) -\n      @multiDist G hG inst\u271d\u00b2 (m + 1) (fun x => \u03a9) (fun x => h\u03a9) fun i => \u2211 j, X (i, j)",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/MoreRuzsaDist.lean#L2070"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-17T18:26:36+00:00",
        "inclusion_date": "2025-06-01T05:48:08.137702+00:00"
      },
      "id": "1b142d902a81e04c62336cb7e4aa8b888fd1f6c73d3c44ccc48c28f49d023db0"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/MultiTauFunctional.lean",
        "start_line": 54,
        "start_column": 111,
        "end_line": 54,
        "end_column": 116
      },
      "debug_info": {
        "goal": "G \u03a9\u2080 : Type u\ninst\u271d\u2074 : @MeasureableFinGroup G\ninst\u271d\u00b3 : TopologicalSpace G\ninst\u271d\u00b2 : DiscreteTopology G\ninst\u271d\u00b9 : BorelSpace G\ninst\u271d : MeasureSpace \u03a9\u2080\np : @multiRefPackage G \u03a9\u2080 inst\u271d\u2074 inst\u271d\n\u22a2 Continuous fun \u03bc =>\n    @multiTau G \u03a9\u2080 inst\u271d\u2074 inst\u271d p (fun x => G)\n      (fun i =>\n        { toMeasurableSpace := @MeasureableFinGroup.toMeasurableSpace ((fun x => G) i) inst\u271d\u2074, volume := \u2191(\u03bc i) })\n      fun x => id",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/MultiTauFunctional.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T09:57:28-07:00",
        "inclusion_date": "2025-06-01T05:48:08.137702+00:00"
      },
      "id": "ae632f5cfb1c738e56ffe7ec61dc56af7d7ed60409e2d817bc0c52075bc50c1f"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/MultiTauFunctional.lean",
        "start_line": 57,
        "start_column": 222,
        "end_line": 57,
        "end_column": 227
      },
      "debug_info": {
        "goal": "G \u03a9\u2080 : Type u\ninst\u271d\u00b9 : @MeasureableFinGroup G\ninst\u271d : MeasureSpace \u03a9\u2080\np : @multiRefPackage G \u03a9\u2080 inst\u271d\u00b9 inst\u271d\n\u22a2 \u2203 \u03a9 h\u03a9 X, @multiTauMinimizes G \u03a9\u2080 inst\u271d\u00b9 inst\u271d p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/MultiTauFunctional.lean#L57"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-08-18T19:14:43-07:00",
        "inclusion_date": "2025-06-01T05:48:08.137702+00:00"
      },
      "id": "fecf7ffa2e403ebfd3a9e6fd155fa2576c144c6d152c674e23d4c38bac773bb0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/CommitmentScheme/MerkleTree.lean",
        "start_line": 193,
        "start_column": 2,
        "end_line": 193,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst : DecidableEq \u03b1\ninst_1 : SelectableType \u03b1\npreexisting_cache : QueryCache (MerkleTree.spec \u03b1)\nn : \u2115\nleaves : List.Vector \u03b1 (2 ^ (n + 1))\n\u22a2 ((simulateQ randomOracle\n          (Vector.mmap (fun x => liftM (query () x))\n            (List.Vector.ofFn fun i =>\n              (leaves.get \u27e82 * \u2191i, MerkleTree.buildLayer._proof_4 n i\u27e9,\n                leaves.get \u27e82 * \u2191i + 1, MerkleTree.buildLayer._proof_5 n i\u27e9)))).run\n      preexisting_cache).neverFails",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/CommitmentScheme/MerkleTree.lean#L193"
      },
      "metadata": {
        "blame_email_hash": "ab200eba5736",
        "blame_date": "2025-05-31T21:50:03-04:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "bc10e76e1d81bfe5c4950a5a3ea1b13b1482438bd5a07fbda797ab01de37d7c4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/CommitmentScheme/MerkleTree.lean",
        "start_line": 238,
        "start_column": 4,
        "end_line": 238,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case right\n\u03b1 : Type\ninst\u271d\u00b3 : DecidableEq \u03b1\ninst\u271d\u00b2 : Inhabited \u03b1\ninst\u271d\u00b9 : Fintype \u03b1\ninst\u271d : SelectableType \u03b1\nn : \u2115\nleaves : List.Vector \u03b1 (2 ^ n)\ni : Fin (2 ^ n)\nhash : \u03b1 \u00d7 \u03b1 \u2192 \u03b1\npreexisting_cache : QueryCache (MerkleTree.spec \u03b1)\nmerkle_tree_cache : MerkleTree.Cache \u03b1 n\nquery_cache : QueryCache (MerkleTree.spec \u03b1)\nh_mem_support :\n  (merkle_tree_cache, query_cache) \u2208\n    ((simulateQ randomOracle (MerkleTree.buildMerkleTree \u03b1 n leaves)).run preexisting_cache).support\n\u22a2 ((simulateQ randomOracle\n          (MerkleTree.verifyProof \u03b1 inst\u271d\u00b3 n i (leaves.get i) (MerkleTree.getRoot \u03b1 n merkle_tree_cache)\n            (MerkleTree.generateProof \u03b1 n i merkle_tree_cache))).run\n      query_cache).neverFails",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/CommitmentScheme/MerkleTree.lean#L238"
      },
      "metadata": {
        "blame_email_hash": "ab200eba5736",
        "blame_date": "2025-05-31T21:50:03-04:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "420c44daeadcbda0ac976d790ad2611ad47fe71f8ab3c48386ad1ceb2703410e"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "007556e200dc1a08fde85d78aecb59a49df65a5d",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/SmartOr.lean",
        "start_line": 52,
        "start_column": 10,
        "end_line": 52,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case a\n\u03b1 : Type\ninst\u271d\u00b9 : Ord \u03b1\ninst\u271d : DecidableEq \u03b1\nx y : Regex \u03b1\nhx : Regex.SmartOrElem x\nhy\u271d : @OrIsSmart \u03b1 instLTRegexOfOrd Regex.emptystr\nhy_emptyset : Regex.emptystr \u2260 Regex.emptyset\nhy_starany : Regex.emptystr \u2260 Regex.any.star\nhy : hy\u271d = @OrIsSmart.singleton \u03b1 instLTRegexOfOrd Regex.emptystr \u22ef\nh' : \u00acx = Regex.emptystr\nh : \u00acRegex.emptystr < x\n\u22a2 x < Regex.emptystr",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/007556e200dc1a08fde85d78aecb59a49df65a5d/Katydid/Regex/Smart/SmartOr.lean#L52"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-27T17:19:07+01:00",
        "inclusion_date": "2025-05-28T05:21:29.223029+00:00"
      },
      "id": "da3eebad8f77f4e3c19c571c149081dc2c1ed093436e0a87ce3953111883e3de"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "007556e200dc1a08fde85d78aecb59a49df65a5d",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/SmartOr.lean",
        "start_line": 65,
        "start_column": 10,
        "end_line": 65,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case a\n\u03b1 : Type\ninst\u271d\u00b9 : Ord \u03b1\ninst\u271d : DecidableEq \u03b1\nx y : Regex \u03b1\nhx : Regex.SmartOrElem x\nhy\u271d : @OrIsSmart \u03b1 instLTRegexOfOrd Regex.any\nhy_emptyset : Regex.any \u2260 Regex.emptyset\nhy_starany : Regex.any \u2260 Regex.any.star\nhy : hy\u271d = @OrIsSmart.singleton \u03b1 instLTRegexOfOrd Regex.any \u22ef\nh' : \u00acx = Regex.any\nh : \u00acRegex.any < x\n\u22a2 x < Regex.any",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/007556e200dc1a08fde85d78aecb59a49df65a5d/Katydid/Regex/Smart/SmartOr.lean#L65"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-27T17:19:07+01:00",
        "inclusion_date": "2025-05-28T05:21:29.223029+00:00"
      },
      "id": "774f1ccad3263da8b2cc76b5a97edcca77d25791b9c7d5dfcbc8993f823f7fe4"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "007556e200dc1a08fde85d78aecb59a49df65a5d",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/SmartOr.lean",
        "start_line": 78,
        "start_column": 10,
        "end_line": 78,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case a\n\u03b1 : Type\ninst\u271d\u00b9 : Ord \u03b1\ninst\u271d : DecidableEq \u03b1\nx y : Regex \u03b1\nhx : Regex.SmartOrElem x\np\u271d : Predicate.Pred \u03b1\nhy\u271d : @OrIsSmart \u03b1 instLTRegexOfOrd (Regex.pred p\u271d)\nhy_emptyset : Regex.pred p\u271d \u2260 Regex.emptyset\nhy_starany : Regex.pred p\u271d \u2260 Regex.any.star\nhy : hy\u271d = @OrIsSmart.singleton \u03b1 instLTRegexOfOrd (Regex.pred p\u271d) \u22ef\nh' : \u00acx = Regex.pred p\u271d\nh : \u00acRegex.pred p\u271d < x\n\u22a2 x < Regex.pred p\u271d",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/007556e200dc1a08fde85d78aecb59a49df65a5d/Katydid/Regex/Smart/SmartOr.lean#L78"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-27T17:19:07+01:00",
        "inclusion_date": "2025-05-28T05:21:29.223029+00:00"
      },
      "id": "a8b5f633fdf0456535a223f93d682b22843a088659a49a427f32b955106f10f0"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "007556e200dc1a08fde85d78aecb59a49df65a5d",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/SmartOr.lean",
        "start_line": 91,
        "start_column": 10,
        "end_line": 91,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case a\n\u03b1 : Type\ninst\u271d\u00b9 : Ord \u03b1\ninst\u271d : DecidableEq \u03b1\nx y : Regex \u03b1\nhx : Regex.SmartOrElem x\nx1\u271d x2\u271d : Regex \u03b1\nhy\u271d : @OrIsSmart \u03b1 instLTRegexOfOrd (x1\u271d.concat x2\u271d)\nhy_emptyset : x1\u271d.concat x2\u271d \u2260 Regex.emptyset\nhy_starany : x1\u271d.concat x2\u271d \u2260 Regex.any.star\nhy : hy\u271d = @OrIsSmart.singleton \u03b1 instLTRegexOfOrd (x1\u271d.concat x2\u271d) \u22ef\nh' : \u00acx = x1\u271d.concat x2\u271d\nh : \u00acx1\u271d.concat x2\u271d < x\n\u22a2 x < x1\u271d.concat x2\u271d",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/007556e200dc1a08fde85d78aecb59a49df65a5d/Katydid/Regex/Smart/SmartOr.lean#L91"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-27T17:19:07+01:00",
        "inclusion_date": "2025-05-28T05:21:29.223029+00:00"
      },
      "id": "a263b7c280e0c1b09f39e25825a5bf7906ba0334f768b9bc71a0090865827df7"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "007556e200dc1a08fde85d78aecb59a49df65a5d",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/SmartOr.lean",
        "start_line": 101,
        "start_column": 8,
        "end_line": 101,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case a.x1nstar\n\u03b1 : Type\ninst\u271d\u00b9 : Ord \u03b1\ninst\u271d : DecidableEq \u03b1\nx y : Regex \u03b1\nhx : Regex.SmartOrElem x\nx1\u271d : Regex \u03b1\nhy\u271d : @OrIsSmart \u03b1 instLTRegexOfOrd x1\u271d.star\nhy_emptyset : x1\u271d.star \u2260 Regex.emptyset\nhy_starany : x1\u271d.star \u2260 Regex.any.star\nhy : hy\u271d = @OrIsSmart.singleton \u03b1 instLTRegexOfOrd x1\u271d.star \u22ef\nh\u271d : \u00acx = x1\u271d.star\nh : x1\u271d.star < x\n\u22a2 x1\u271d \u2260 Regex.any",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/007556e200dc1a08fde85d78aecb59a49df65a5d/Katydid/Regex/Smart/SmartOr.lean#L101"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-27T17:19:07+01:00",
        "inclusion_date": "2025-05-28T05:21:29.223029+00:00"
      },
      "id": "7aa3a5db91a8c16d432fc390e5d004d51a620f7df6f7d096242c0434cb11534e"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "007556e200dc1a08fde85d78aecb59a49df65a5d",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/SmartOr.lean",
        "start_line": 105,
        "start_column": 10,
        "end_line": 105,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case a\n\u03b1 : Type\ninst\u271d\u00b9 : Ord \u03b1\ninst\u271d : DecidableEq \u03b1\nx y : Regex \u03b1\nhx : Regex.SmartOrElem x\nx1\u271d : Regex \u03b1\nhy\u271d : @OrIsSmart \u03b1 instLTRegexOfOrd x1\u271d.star\nhy_emptyset : x1\u271d.star \u2260 Regex.emptyset\nhy_starany : x1\u271d.star \u2260 Regex.any.star\nhy : hy\u271d = @OrIsSmart.singleton \u03b1 instLTRegexOfOrd x1\u271d.star \u22ef\nh' : \u00acx = x1\u271d.star\nh : \u00acx1\u271d.star < x\n\u22a2 x < x1\u271d.star",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/007556e200dc1a08fde85d78aecb59a49df65a5d/Katydid/Regex/Smart/SmartOr.lean#L105"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-27T17:19:07+01:00",
        "inclusion_date": "2025-05-28T05:21:29.223029+00:00"
      },
      "id": "c58ac89ce9d690014f523e9f2acdc1f8574b567f47999f76fb78a9c8b581fee7"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "007556e200dc1a08fde85d78aecb59a49df65a5d",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/SmartOr.lean",
        "start_line": 107,
        "start_column": 10,
        "end_line": 107,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case a.x1nstar\n\u03b1 : Type\ninst\u271d\u00b9 : Ord \u03b1\ninst\u271d : DecidableEq \u03b1\nx y : Regex \u03b1\nhx : Regex.SmartOrElem x\nx1\u271d : Regex \u03b1\nhy\u271d : @OrIsSmart \u03b1 instLTRegexOfOrd x1\u271d.star\nhy_emptyset : x1\u271d.star \u2260 Regex.emptyset\nhy_starany : x1\u271d.star \u2260 Regex.any.star\nhy : hy\u271d = @OrIsSmart.singleton \u03b1 instLTRegexOfOrd x1\u271d.star \u22ef\nh\u271d : \u00acx = x1\u271d.star\nh : \u00acx1\u271d.star < x\n\u22a2 x1\u271d \u2260 Regex.any",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/007556e200dc1a08fde85d78aecb59a49df65a5d/Katydid/Regex/Smart/SmartOr.lean#L107"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-27T17:19:07+01:00",
        "inclusion_date": "2025-05-28T05:21:29.223029+00:00"
      },
      "id": "95b1df9fef5241b9b56ed640a8056113aa2dee9482d18a9dacab8747f344b038"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "007556e200dc1a08fde85d78aecb59a49df65a5d",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/SmartOr.lean",
        "start_line": 117,
        "start_column": 2,
        "end_line": 117,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u00b9 : Ord \u03b1\ninst\u271d : DecidableEq \u03b1\nx1 x2 y : Regex \u03b1\n\u22a2 mergeOr (x1.or x2) y \u2260 Regex.emptyset",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/007556e200dc1a08fde85d78aecb59a49df65a5d/Katydid/Regex/Smart/SmartOr.lean#L117"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-27T17:19:07+01:00",
        "inclusion_date": "2025-05-28T05:21:29.223029+00:00"
      },
      "id": "535b6f121d2c8bbd573ddbfa4470955d027f3611ab448b397ceedbf1954720ad"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "007556e200dc1a08fde85d78aecb59a49df65a5d",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/SmartOr.lean",
        "start_line": 123,
        "start_column": 2,
        "end_line": 123,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u00b9 : Ord \u03b1\ninst\u271d : DecidableEq \u03b1\nx1 x2 y : Regex \u03b1\n\u22a2 mergeOr (x1.or x2) y \u2260 Regex.any.star",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/007556e200dc1a08fde85d78aecb59a49df65a5d/Katydid/Regex/Smart/SmartOr.lean#L123"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-27T17:19:07+01:00",
        "inclusion_date": "2025-05-28T05:21:29.223029+00:00"
      },
      "id": "1b2eeb1f336c2ff225e150a1e33db6b6e96d23ab34ddea5f47dfa2cd5e54121b"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "007556e200dc1a08fde85d78aecb59a49df65a5d",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/SmartOr.lean",
        "start_line": 129,
        "start_column": 2,
        "end_line": 129,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u00b9 : Ord \u03b1\ninst\u271d : DecidableEq \u03b1\nx1 x2 : Regex \u03b1\n\u22a2 x1.or x2 \u2260 Regex.emptyset",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/007556e200dc1a08fde85d78aecb59a49df65a5d/Katydid/Regex/Smart/SmartOr.lean#L129"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-27T17:19:07+01:00",
        "inclusion_date": "2025-05-28T05:21:29.223029+00:00"
      },
      "id": "1024bdab7b634cc53c5ca906e8c051903611a1f2eb28e5ce1490b8f48fe6a352"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "007556e200dc1a08fde85d78aecb59a49df65a5d",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/SmartOr.lean",
        "start_line": 135,
        "start_column": 2,
        "end_line": 135,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u00b9 : Ord \u03b1\ninst\u271d : DecidableEq \u03b1\nx1 x2 : Regex \u03b1\n\u22a2 x1.or x2 \u2260 Regex.any.star",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/007556e200dc1a08fde85d78aecb59a49df65a5d/Katydid/Regex/Smart/SmartOr.lean#L135"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-27T17:19:07+01:00",
        "inclusion_date": "2025-05-28T05:21:29.223029+00:00"
      },
      "id": "835c6582456bd8ba8631ebf5b9f577a0c5a5d1aeefd7251072ec0b83f8a14636"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "multisetEqTo",
        "commit": "60a4762da27ce47c06ad3174d8fb9e8ad3311ac7",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 1626,
        "start_column": 10,
        "end_line": 1626,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case inr.intro.intro.intro\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03be : AnyFormula\nside : Side\nw_n\u03be : (M, w)\u22a8~''\u03be\nt0 : PathIn tab\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\n\u03b2 : Program\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u2217\u03b2\u230b\u03be))).in_side side (nodeAt t)\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nw_Y : (M, v)\u22a8Y\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nF : List Formula\n\u03b4\u271d : List Program\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4\u271d \u03be)).in_side side Y\nv_seq_w : relateSeq M \u03b4\u271d v w\nv_F : (M, v)\u22a8F\nF\u03b4_in_H : (F, \u03b4\u271d) \u2208 H (\u2217\u03b2)\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4\u271d \u03be))).isFree = true\n\u03b4_ne : \u00ac\u03b4\u271d = []\nv_\u03b1_w : Relation.ReflTransGen (relate M \u03b2) v w\nn : \u2115\nws : List.Vector W n.succ\nv_head : v = ws.head\nw_tail : w = ws.last\nrel : \u2200 (i : Fin n), relate M \u03b2 (ws.get i.castSucc) (ws.get i.succ)\nclaim :\n  \u2200 (k : Fin n.succ),\n    \u2203 sk,\n      Relation.TransGen (cEdge X tab) t sk \u2227\n        (satisfiable (nodeAt sk) \u2227 \u00accEquiv X tab sk t \u2228\n          \u2203 \u03b3,\n            (~''(AnyFormula.loaded (\u230a\u230a\u03b3\u230b\u230b\u230a\u2217\u03b2\u230b\u03be))).in_side side (nodeAt sk) \u2227\n              (M, ws[k])\u22a8nodeAt sk \u2227 ((nodeAt sk).without (~''(AnyFormula.loaded (\u230a\u230a\u03b3\u230b\u230b\u230a\u2217\u03b2\u230b\u03be)))).isFree = true \u2227 True)\nh : w = w\nsn : PathIn tab\nt_sn : Relation.TransGen (cEdge X tab) t sn\n\u03b4 : List Program\nloaded_con : (~''(AnyFormula.loaded (\u230a\u230a\u03b4\u230b\u230b\u230a\u2217\u03b2\u230b\u03be))).in_side side (nodeAt sn)\nw_sn : (M, w)\u22a8nodeAt sn\nwithout_con : ((nodeAt sn).without (~''(AnyFormula.loaded (\u230a\u230a\u03b4\u230b\u230b\u230a\u2217\u03b2\u230b\u03be)))).isFree = true \u2227 True\n\u03b1_natom : \u00ac(\u2217\u03b2).isAtomic\n\u22a2 \u2203 s,\n    Relation.TransGen (cEdge X tab) t s \u2227\n      (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n        (~''\u03be).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 ((nodeAt s).without (~''\u03be)).isFree = true)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/60a4762da27ce47c06ad3174d8fb9e8ad3311ac7/Pdl/Soundness.lean#L1626"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-05-27T12:30:10+02:00",
        "inclusion_date": "2025-05-28T05:43:22.902231+00:00"
      },
      "id": "8b559b5d96f45c6fff68e9c4f2a50e80d60bbac5e9f191925e2bdd64e2393798"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "rotation-bits",
        "commit": "1e4b0945f9fc6ffd68e3ccef179a856d8cc6dc60",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Clean/Gadgets/Bits.lean",
        "start_line": 90,
        "start_column": 4,
        "end_line": 90,
        "end_column": 9
      },
      "debug_info": {
        "goal": "p : \u2115\nprime : Fact (Nat.Prime p)\np_large_enough : Fact (p > 2)\nn : \u2115\nhn : 2 ^ n < p\n\u22a2 \u2200 (offset : \u2115) (env : Environment (F p)) (b_var : Var field (F p)) (b : field (F p)),\n    eval env b_var = b \u2192\n      True \u2192\n        Circuit.constraints_hold.soundness env\n            ((do\n                  let __discr \u2190 Gadgets.ToBits.main p prime n b_var\n                  let x : Vector (Expression (F p)) n := __discr\n                  pure PUnit.unit).operations\n              offset) \u2192\n          ZMod.val b < 2 ^ n",
        "url": "https://github.com/Verified-zkEVM/clean/blob/1e4b0945f9fc6ffd68e3ccef179a856d8cc6dc60/Clean/Gadgets/Bits.lean#L90"
      },
      "metadata": {
        "blame_email_hash": "0130f16e5d6d",
        "blame_date": "2025-05-27T15:56:45+02:00",
        "inclusion_date": "2025-06-06T07:04:55.105486+00:00"
      },
      "id": "ce8395235e3df19bba4ffc621f4acf8ef1debdddd28b08cb982129efd6d7a83c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "rotation-bits",
        "commit": "1e4b0945f9fc6ffd68e3ccef179a856d8cc6dc60",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Clean/Gadgets/Bits.lean",
        "start_line": 93,
        "start_column": 4,
        "end_line": 93,
        "end_column": 9
      },
      "debug_info": {
        "goal": "p : \u2115\nprime : Fact (Nat.Prime p)\np_large_enough : Fact (p > 2)\nn : \u2115\nhn : 2 ^ n < p\n\u22a2 \u2200 (offset : \u2115) (env : Environment (F p)) (b_var : Var field (F p)),\n    env.uses_local_witnesses_completeness\n        ((do\n              let __discr \u2190 Gadgets.ToBits.main p prime n b_var\n              let x : Vector (Expression (F p)) n := __discr\n              pure PUnit.unit).operations\n          offset) \u2192\n      \u2200 (b : field (F p)),\n        eval env b_var = b \u2192\n          True \u2192\n            ZMod.val b < 2 ^ n \u2192\n              Circuit.constraints_hold.completeness env\n                ((do\n                      let __discr \u2190 Gadgets.ToBits.main p prime n b_var\n                      let x : Vector (Expression (F p)) n := __discr\n                      pure PUnit.unit).operations\n                  offset)",
        "url": "https://github.com/Verified-zkEVM/clean/blob/1e4b0945f9fc6ffd68e3ccef179a856d8cc6dc60/Clean/Gadgets/Bits.lean#L93"
      },
      "metadata": {
        "blame_email_hash": "0130f16e5d6d",
        "blame_date": "2025-05-27T15:56:45+02:00",
        "inclusion_date": "2025-06-06T07:04:55.105486+00:00"
      },
      "id": "c677afa5262630d53f3ee343b8349040d6a38ca9402229340e21543a29ba165e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "num2bits",
        "commit": "5b052ecbbe4fee21e9eec612282bc31bec494ed6",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Clean/Circuit/Loops.lean",
        "start_line": 773,
        "start_column": 2,
        "end_line": 773,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case mk.intro.intro\nF : Type\ninst\u271d\u00b9 : Field F\n\u03b1 : Type\nm : \u2115\ninst\u271d : Inhabited \u03b1\nxs : Vector \u03b1 m\nbody : \u03b1 \u2192 Circuit F Unit\nlawful : ConstantLawfulCircuits body\nn : \u2115\nops : Operations F n\nh_empty :\n  ops ++ \u27e8operations (Circuit.forEach F inst\u271d\u00b9 \u03b1 m xs inst\u271d body lawful) n, \u22ef\u27e9 =\n    Operations.empty (final_offset (Circuit.forEach F inst\u271d\u00b9 \u03b1 m xs inst\u271d body lawful) n)\nleft\u271d : ops = Operations.empty n\nempty2 :\n  operations (Circuit.forEach F inst\u271d\u00b9 \u03b1 m xs inst\u271d body lawful) n =\n    Operations.empty (final_offset (Circuit.forEach F inst\u271d\u00b9 \u03b1 m xs inst\u271d body lawful) n)\nlawful_loop : ConstantLawfulCircuit (Circuit.forEach F inst\u271d\u00b9 \u03b1 m xs inst\u271d body lawful) :=\n  ConstantLawfulCircuit.from_forM_vector m F inst\u271d\u00b9 \u03b1 body xs lawful\nh_eq : ConstantLawfulCircuits.local_length body = 0 \u2228 m = 0\n\u22a2 m = 0 \u2228 \u2203 (x : m > 0), \u2203 ops, (body xs[m - 1] ops).2.withLength = Operations.empty (body xs[m - 1] ops).2.offset",
        "url": "https://github.com/Verified-zkEVM/clean/blob/5b052ecbbe4fee21e9eec612282bc31bec494ed6/Clean/Circuit/Loops.lean#L773"
      },
      "metadata": {
        "blame_email_hash": "0130f16e5d6d",
        "blame_date": "2025-05-26T18:33:32+02:00",
        "inclusion_date": "2025-05-28T06:45:30.839285+00:00"
      },
      "id": "6a79cc93069fadb8ea9911c5db097491ea4c1d6a484a97fd98d5983f5daaa2e7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "rotation-bits",
        "commit": "1e4b0945f9fc6ffd68e3ccef179a856d8cc6dc60",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Clean/Examples/Add32LawfulCircuit.lean",
        "start_line": 48,
        "start_column": 2,
        "end_line": 48,
        "end_column": 7
      },
      "debug_info": {
        "goal": "input : Var Inputs (F p)\nenv : Environment (F p)\ni0 : \u2115\nx y : U32 (Expression (F p))\ncarry_in x0 x1 x2 x3 y0 y1 y2 y3 : Expression (F p)\n\u22a2 (Gadgets.ByteLookup (var { index := i0 })).table.contains\n      (Vector.map (fun x => Expression.eval env x) (Gadgets.ByteLookup (var { index := i0 })).entry) \u2227\n    (env.get (i0 + 1) = 0 \u2228 env.get (i0 + 1) = 1) \u2227\n      Expression.eval env x0 + Expression.eval env y0 + Expression.eval env carry_in + -env.get i0 +\n            -(env.get (i0 + 1) * 256) =\n          0 \u2227\n        (Gadgets.ByteLookup (var { index := i0 + 1 + 0 + 1 + 0 + 0 })).table.contains\n            (Vector.map (fun x => Expression.eval env x)\n              (Gadgets.ByteLookup (var { index := i0 + 1 + 0 + 1 + 0 + 0 })).entry) \u2227\n          (env.get (i0 + 1 + 1 + 1) = 0 \u2228 env.get (i0 + 1 + 1 + 1) = 1) \u2227\n            Expression.eval env x1 + Expression.eval env y1 + env.get (i0 + 1) + -env.get (i0 + 1 + 1) +\n                  -(env.get (i0 + 1 + 1 + 1) * 256) =\n                0 \u2227\n              (Gadgets.ByteLookup (var { index := i0 + 1 + 0 + 1 + 0 + 0 + 1 + 0 + 1 + 0 + 0 })).table.contains\n                  (Vector.map (fun x => Expression.eval env x)\n                    (Gadgets.ByteLookup (var { index := i0 + 1 + 0 + 1 + 0 + 0 + 1 + 0 + 1 + 0 + 0 })).entry) \u2227\n                (env.get (i0 + 1 + 1 + 1 + 1 + 1) = 0 \u2228 env.get (i0 + 1 + 1 + 1 + 1 + 1) = 1) \u2227\n                  Expression.eval env x2 + Expression.eval env y2 + env.get (i0 + 1 + 1 + 1) +\n                          -env.get (i0 + 1 + 1 + 1 + 1) +\n                        -(env.get (i0 + 1 + 1 + 1 + 1 + 1) * 256) =\n                      0 \u2227\n                    (Gadgets.ByteLookup\n                              (var\n                                {\n                                  index :=\n                                    i0 + 1 + 0 + 1 + 0 + 0 + 1 + 0 + 1 + 0 + 0 + 1 + 0 + 1 + 0 + 0 })).table.contains\n                        (Vector.map (fun x => Expression.eval env x)\n                          (Gadgets.ByteLookup\n                              (var\n                                { index := i0 + 1 + 0 + 1 + 0 + 0 + 1 + 0 + 1 + 0 + 0 + 1 + 0 + 1 + 0 + 0 })).entry) \u2227\n                      (env.get (i0 + 1 + 1 + 1 + 1 + 1 + 1 + 1) = 0 \u2228 env.get (i0 + 1 + 1 + 1 + 1 + 1 + 1 + 1) = 1) \u2227\n                        Expression.eval env x3 + Expression.eval env y3 + env.get (i0 + 1 + 1 + 1 + 1 + 1) +\n                              -env.get (i0 + 1 + 1 + 1 + 1 + 1 + 1) +\n                            -(env.get (i0 + 1 + 1 + 1 + 1 + 1 + 1 + 1) * 256) =\n                          0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/1e4b0945f9fc6ffd68e3ccef179a856d8cc6dc60/Clean/Examples/Add32LawfulCircuit.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "0130f16e5d6d",
        "blame_date": "2025-04-09T16:01:46+02:00",
        "inclusion_date": "2025-06-06T07:04:55.105486+00:00"
      },
      "id": "9d9191940ddb3fbdff287a30eaede66483f94bd7b72ec974284761bbe5721764"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/ToricIdeal.lean",
        "start_line": 79,
        "start_column": 4,
        "end_line": 79,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case intro.intro\nM : Type u_1\nk : Type u_4\ninst\u271d\u00b2 : AddCommMonoid M\ninst\u271d\u00b9 : Field k\ninst\u271d : IsAlgClosed k\nI : Ideal (AddMonoidAlgebra k M)\nG : Type u_1 := AddLocalization \u22a4\nleft\u271d : I.IsPrime\ns : Set (M \u00d7 M)\nhsI :\n  Ideal.span\n      ((fun x =>\n          @AddMonoidAlgebra.isToricIdeal_iff_exists_span_single_sub_single.match_1 M (fun x => AddMonoidAlgebra k M) x\n            fun a b => single a 1 - single b 1) ''\n        s) =\n    I\nV : Scheme := Spec (CommRingCat.of (AddMonoidAlgebra k M \u29f8 I))\nx\u271d\u00b9 : V.Over (Spec (CommRingCat.of (AddMonoidAlgebra k M))) := sorry\nx\u271d : (Spec (CommRingCat.of (AddMonoidAlgebra k G))).Over (Spec (CommRingCat.of (AddMonoidAlgebra k M))) := sorry\nVinterT : Scheme :=\n  pullback (V \u2198 Spec (CommRingCat.of (AddMonoidAlgebra k M)))\n    (Spec (CommRingCat.of (AddMonoidAlgebra k G)) \u2198 Spec (CommRingCat.of (AddMonoidAlgebra k M)))\n\u22a2 \u2203 s,\n    @AddMonoidAlgebra.monoidIdeal M (AddLocalization \u22a4) k inst\u271d\u00b2 AddLocalization.instAddCommGroupTopAddSubmonoid_toric\n        (AddLocalization.addMonoidOf \u22a4) s.toAddSubmonoid EuclideanDomain.toCommRing =\n      I",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/ToricIdeal.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "14eb688933a3",
        "blame_date": "2025-02-27T22:51:53+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "5b5c0e118db4e0f4f074f150a4e2a2e336c0faadb304ace9bcbf026c19ca1ccd"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/ToricVariety/FromMonoid.lean",
        "start_line": 27,
        "start_column": 27,
        "end_line": 27,
        "end_column": 32
      },
      "debug_info": {
        "goal": "R : CommRingCat\ninst\u271d\u00b3 : IsDomain \u2191R\nS : Type u\ninst\u271d\u00b2 : AddCancelCommMonoid S\ninst\u271d\u00b9 : AddMonoid.FG S\ninst\u271d : IsAddTorsionFree S\n\u22a2 CategoryStruct.comp sorry ((algSpec R).obj (Opposite.op (CommAlg.of (\u2191R) (AddMonoidAlgebra (\u2191R) S)))).hom =\n    (MonoidalCategoryStruct.tensorObj (Over.mk ((Spec R).SplitTorus (ULift.{u, 0} (Fin (dim S))) \u2198 Spec R))\n        ((algSpec R).obj (Opposite.op (CommAlg.of (\u2191R) (AddMonoidAlgebra (\u2191R) S))))).hom",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/ToricVariety/FromMonoid.lean#L27"
      },
      "metadata": {
        "blame_email_hash": "14eb688933a3",
        "blame_date": "2025-04-26T12:44:28+01:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "f5ba25777ed3eab8eb314fe60e07fa89bde6e58d166328ca03a405431a408be2"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/ToricVariety/FromMonoid.lean",
        "start_line": 31,
        "start_column": 14,
        "end_line": 31,
        "end_column": 19
      },
      "debug_info": {
        "goal": "R : CommRingCat\ninst\u271d\u00b3 : IsDomain \u2191R\nS : Type u\ninst\u271d\u00b2 : AddCancelCommMonoid S\ninst\u271d\u00b9 : AddMonoid.FG S\ninst\u271d : IsAddTorsionFree S\n\u22a2 CategoryStruct.comp\n      (MonoidalCategoryStruct.whiskerRight Mon_Class.one\n        ((algSpec R).obj (Opposite.op (CommAlg.of (\u2191R) (AddMonoidAlgebra (\u2191R) S)))))\n      (Over.homMk sorry \u22ef) =\n    (MonoidalCategoryStruct.leftUnitor ((algSpec R).obj (Opposite.op (CommAlg.of (\u2191R) (AddMonoidAlgebra (\u2191R) S))))).hom",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/ToricVariety/FromMonoid.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "14eb688933a3",
        "blame_date": "2025-04-26T12:44:28+01:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "e7e2fa6b685177f749e95a12cefc6f55a0773ff2aa0892b2864e0e33663acb20"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/ToricVariety/FromMonoid.lean",
        "start_line": 32,
        "start_column": 14,
        "end_line": 32,
        "end_column": 19
      },
      "debug_info": {
        "goal": "R : CommRingCat\ninst\u271d\u00b3 : IsDomain \u2191R\nS : Type u\ninst\u271d\u00b2 : AddCancelCommMonoid S\ninst\u271d\u00b9 : AddMonoid.FG S\ninst\u271d : IsAddTorsionFree S\n\u22a2 CategoryStruct.comp\n      (MonoidalCategoryStruct.whiskerRight Mon_Class.mul\n        ((algSpec R).obj (Opposite.op (CommAlg.of (\u2191R) (AddMonoidAlgebra (\u2191R) S)))))\n      (Over.homMk sorry \u22ef) =\n    CategoryStruct.comp\n      (MonoidalCategoryStruct.associator (Over.mk ((Spec R).SplitTorus (ULift.{u, 0} (Fin (dim S))) \u2198 Spec R))\n          (Over.mk ((Spec R).SplitTorus (ULift.{u, 0} (Fin (dim S))) \u2198 Spec R))\n          ((algSpec R).obj (Opposite.op (CommAlg.of (\u2191R) (AddMonoidAlgebra (\u2191R) S))))).hom\n      (CategoryStruct.comp\n        (MonoidalCategoryStruct.whiskerLeft (Over.mk ((Spec R).SplitTorus (ULift.{u, 0} (Fin (dim S))) \u2198 Spec R))\n          (Over.homMk sorry \u22ef))\n        (Over.homMk sorry \u22ef))",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/ToricVariety/FromMonoid.lean#L32"
      },
      "metadata": {
        "blame_email_hash": "14eb688933a3",
        "blame_date": "2025-04-26T12:44:28+01:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "4627e0f74ff94dc29552df8b679d5105379ff0f964eccf775e45f4191b08864e"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/ToricVariety/FromMonoid.lean",
        "start_line": 47,
        "start_column": 4,
        "end_line": 54,
        "end_column": 73
      },
      "debug_info": {
        "goal": "R : CommRingCat\ninst\u271d\u00b3 : IsDomain \u2191R\nS : Type u\ninst\u271d\u00b2 : AddCancelCommMonoid S\ninst\u271d\u00b9 : AddMonoid.FG S\ninst\u271d : IsAddTorsionFree S\n\u22a2 IsOpenImmersion sorry.left",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/ToricVariety/FromMonoid.lean#L47"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-04-03T17:36:42+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "62a60e51a5b5d19c5f3d803347a83d4462dfa412f728cd2daa270c61f0704e8c"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/ToricVariety/FromMonoid.lean",
        "start_line": 56,
        "start_column": 4,
        "end_line": 60,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : CommRingCat\ninst\u271d\u00b3 : IsDomain \u2191R\nS : Type u\ninst\u271d\u00b2 : AddCancelCommMonoid S\ninst\u271d\u00b9 : AddMonoid.FG S\ninst\u271d : IsAddTorsionFree S\n\u22a2 IsDominant sorry.left",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/ToricVariety/FromMonoid.lean#L56"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-04-03T17:36:42+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "399628a60278e110c28a13c77d598709c3a3fe34ed67fd3d1bac13bc9042616d"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/ToricVariety/FromMonoid.lean",
        "start_line": 62,
        "start_column": 4,
        "end_line": 64,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : CommRingCat\ninst\u271d\u00b3 : IsDomain \u2191R\nS : Type u\ninst\u271d\u00b2 : AddCancelCommMonoid S\ninst\u271d\u00b9 : AddMonoid.FG S\ninst\u271d : IsAddTorsionFree S\n\u22a2 CategoryStruct.comp\n      (MonoidalCategoryStruct.tensorHom\n        (CategoryStruct.id (Over.mk ((Spec R).SplitTorus (ULift.{u, 0} (Fin (dim S))) \u2198 Spec R))) sorry)\n      Mod_Class.smul =\n    CategoryStruct.comp Mon_Class.mul sorry",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/ToricVariety/FromMonoid.lean#L62"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-04-03T17:36:42+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "dfdb7c42927e144468f1a3fc17529555376b00336e103d1e7803cd808492b213"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/GroupScheme/Torus.lean",
        "start_line": 112,
        "start_column": 37,
        "end_line": 112,
        "end_column": 42
      },
      "debug_info": {
        "goal": "R : CommRingCat\n\u03c3 : Type u_1\n\u22a2 CategoryStruct.comp (Iso.hom (@AlgebraicGeometry.Scheme.splitTorusIsoSpec R \u03c3))\n      (Over.mk (Spec.map (CommRingCat.ofHom (algebraMap (\u2191R) (MvLaurentPolynomial \u03c3 \u2191R))))).hom =\n    (Over.mk (@AlgebraicGeometry.Scheme.SplitTorus (Spec R) \u03c3 \u2198 Spec R)).hom",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/GroupScheme/Torus.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "14eb688933a3",
        "blame_date": "2025-04-26T12:44:28+01:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "fb07012aba9fc5bb12ba5e0dd3891ff8d326eb911e1603b533392302171e57cc"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/GroupScheme/CFPGrp.lean",
        "start_line": 83,
        "start_column": 4,
        "end_line": 83,
        "end_column": 9
      },
      "debug_info": {
        "goal": "C : Type u_1\ninst\u271d\u00b3 : Category.{u_2, u_1} C\ninst\u271d\u00b2 : ChosenFiniteProducts C\nX Y : C\ninst\u271d\u00b9 : Grp_Class X\ninst\u271d : Grp_Class Y\nZ : C\nf g : Z \u27f6 tensorObj X Y\nh\u2081 : CategoryStruct.comp f (fst X Y) = CategoryStruct.comp g (fst X Y)\nh\u2082 : CategoryStruct.comp f (snd X Y) = CategoryStruct.comp g (snd X Y)\n\u22a2 f = g",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/GroupScheme/CFPGrp.lean#L83"
      },
      "metadata": {
        "blame_email_hash": "14eb688933a3",
        "blame_date": "2025-03-13T21:07:25+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "01232ac847c321dabd6b715df38edf9326730eabf9f4b58643b2088b66b333f5"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/GroupScheme/CFPGrp.lean",
        "start_line": 89,
        "start_column": 44,
        "end_line": 89,
        "end_column": 49
      },
      "debug_info": {
        "goal": "C : Type u_1\ninst\u271d\u00b3 : Category.{u_2, u_1} C\ninst\u271d\u00b2 : ChosenFiniteProducts C\nX Y : C\ninst\u271d\u00b9 : Grp_Class X\ninst\u271d : Grp_Class Y\n\u22a2 Grp_Class.inv = tensorHom Grp_Class.inv Grp_Class.inv",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/GroupScheme/CFPGrp.lean#L89"
      },
      "metadata": {
        "blame_email_hash": "14eb688933a3",
        "blame_date": "2025-03-14T16:33:38+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "145a797ae9c662e6294ac3b2a9d940abb44708dd9d1da79c5a2b43932a281b25"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/GroupScheme/CFPGrp.lean",
        "start_line": 99,
        "start_column": 12,
        "end_line": 99,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case mk.left.refine_1\nC : Type u_1\ninst\u271d\u00b3 : Category.{?u.108251, u_1} C\ninst\u271d\u00b2 : ChosenFiniteProducts C\nX\u271d Y\u271d : C\ninst\u271d\u00b9 : Grp_Class X\u271d\ninst\u271d : Grp_Class Y\u271d\nX Y : Grp_ C\n\u22a2 CategoryStruct.comp one (fst X.X Y.X) = X.one",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/GroupScheme/CFPGrp.lean#L99"
      },
      "metadata": {
        "blame_email_hash": "14eb688933a3",
        "blame_date": "2025-03-14T16:33:38+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "aba7dc6c0aa5650fcd72209f3c5e9f6255e910816d1a3c3f2d83c4da2b28f574"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/GroupScheme/CFPGrp.lean",
        "start_line": 101,
        "start_column": 10,
        "end_line": 101,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case mk.left.refine_2\nC : Type u_1\ninst\u271d\u00b3 : Category.{?u.108251, u_1} C\ninst\u271d\u00b2 : ChosenFiniteProducts C\nX\u271d Y\u271d : C\ninst\u271d\u00b9 : Grp_Class X\u271d\ninst\u271d : Grp_Class Y\u271d\nX Y : Grp_ C\n\u22a2 CategoryStruct.comp mul (fst X.X Y.X) = CategoryStruct.comp (tensorHom (fst X.X Y.X) (fst X.X Y.X)) X.mul",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/GroupScheme/CFPGrp.lean#L101"
      },
      "metadata": {
        "blame_email_hash": "14eb688933a3",
        "blame_date": "2025-03-14T16:33:38+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "a403ec9981601a1ac4bff5e2734c6f5df997e7f107da02df719b7ff36116f2d3"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/GroupScheme/CFPGrp.lean",
        "start_line": 103,
        "start_column": 20,
        "end_line": 103,
        "end_column": 25
      },
      "debug_info": {
        "goal": "C : Type u_1\ninst\u271d\u00b3 : Category.{u_2, u_1} C\ninst\u271d\u00b2 : ChosenFiniteProducts C\nX\u271d Y\u271d : C\ninst\u271d\u00b9 : Grp_Class X\u271d\ninst\u271d : Grp_Class Y\u271d\nX Y : Grp_ C\n\u22a2 \u2200 \u2983X_1 Y_1 : Discrete WalkingPair\u2984 (f : X_1 \u27f6 Y_1),\n    CategoryStruct.comp (((Functor.const (Discrete WalkingPair)).obj (Grp_.mk' (tensorObj X.X Y.X))).map f)\n        (Discrete.casesOn Y_1 fun as =>\n          WalkingPair.casesOn as { hom := fst X.X Y.X, one_hom := \u22ef, mul_hom := \u22ef } sorry) =\n      CategoryStruct.comp\n        (Discrete.casesOn X_1 fun as => WalkingPair.casesOn as { hom := fst X.X Y.X, one_hom := \u22ef, mul_hom := \u22ef } sorry)\n        ((pair X Y).map f)",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/GroupScheme/CFPGrp.lean#L103"
      },
      "metadata": {
        "blame_email_hash": "14eb688933a3",
        "blame_date": "2025-03-13T21:07:25+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "2a488b325fe9c1abd68b80980d4bbf43de5a714090657aa3ada00e97f59db6f4"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/GroupScheme/CFPGrp.lean",
        "start_line": 109,
        "start_column": 17,
        "end_line": 109,
        "end_column": 22
      },
      "debug_info": {
        "goal": "C : Type u_1\ninst\u271d\u00b3 : Category.{u_2, u_1} C\ninst\u271d\u00b2 : ChosenFiniteProducts C\nX\u271d Y\u271d : C\ninst\u271d\u00b9 : Grp_Class X\u271d\ninst\u271d : Grp_Class Y\u271d\nX Y : Grp_ C\ns : Cone (pair X Y)\n\u22a2 CategoryStruct.comp s.pt.one (id sorry) =\n    { pt := Grp_.mk' (tensorObj X.X Y.X),\n          \u03c0 :=\n            {\n              app := fun X_1 =>\n                Discrete.casesOn X_1 fun as =>\n                  WalkingPair.casesOn as { hom := fst X.X Y.X, one_hom := \u22ef, mul_hom := \u22ef } sorry,\n              naturality := \u22ef } }.pt.one",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/GroupScheme/CFPGrp.lean#L109"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-13T12:13:41+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "77b0f9d53e4cbaf781c7e39e6da3f22f94c16aa73deae2ccbccad1daffaccbeb"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/GroupScheme/CFPGrp.lean",
        "start_line": 110,
        "start_column": 17,
        "end_line": 110,
        "end_column": 22
      },
      "debug_info": {
        "goal": "C : Type u_1\ninst\u271d\u00b3 : Category.{u_2, u_1} C\ninst\u271d\u00b2 : ChosenFiniteProducts C\nX\u271d Y\u271d : C\ninst\u271d\u00b9 : Grp_Class X\u271d\ninst\u271d : Grp_Class Y\u271d\nX Y : Grp_ C\ns : Cone (pair X Y)\n\u22a2 CategoryStruct.comp s.pt.mul (id sorry) =\n    CategoryStruct.comp (tensorHom (id sorry) (id sorry))\n      { pt := Grp_.mk' (tensorObj X.X Y.X),\n            \u03c0 :=\n              {\n                app := fun X_1 =>\n                  Discrete.casesOn X_1 fun as =>\n                    WalkingPair.casesOn as { hom := fst X.X Y.X, one_hom := \u22ef, mul_hom := \u22ef } sorry,\n                naturality := \u22ef } }.pt.mul",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/GroupScheme/CFPGrp.lean#L110"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-13T12:13:41+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "a8a44d222c50ba07a2e0b7827c92bb2c15fba79324be05abcee25f96f17d4d65"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/GroupScheme/CFPGrp.lean",
        "start_line": 112,
        "start_column": 19,
        "end_line": 112,
        "end_column": 24
      },
      "debug_info": {
        "goal": "C : Type u_1\ninst\u271d\u00b3 : Category.{u_2, u_1} C\ninst\u271d\u00b2 : ChosenFiniteProducts C\nX\u271d Y\u271d : C\ninst\u271d\u00b9 : Grp_Class X\u271d\ninst\u271d : Grp_Class Y\u271d\nX Y : Grp_ C\n\u22a2 \u2200 (s : Cone (pair X Y)) (j : Discrete WalkingPair),\n    CategoryStruct.comp { hom := id sorry, one_hom := \u22ef, mul_hom := \u22ef }\n        ({ pt := Grp_.mk' (tensorObj X.X Y.X),\n                \u03c0 :=\n                  {\n                    app := fun X_1 =>\n                      Discrete.casesOn X_1 fun as =>\n                        WalkingPair.casesOn as { hom := fst X.X Y.X, one_hom := \u22ef, mul_hom := \u22ef } sorry,\n                    naturality := \u22ef } }.\u03c0.app\n          j) =\n      s.\u03c0.app j",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/GroupScheme/CFPGrp.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-13T12:13:41+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "a44f96183cb5d029a17854d2500dc294315624c5aaa24f9326ab445b65885f69"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/GroupScheme/CFPGrp.lean",
        "start_line": 113,
        "start_column": 20,
        "end_line": 113,
        "end_column": 25
      },
      "debug_info": {
        "goal": "C : Type u_1\ninst\u271d\u00b3 : Category.{u_2, u_1} C\ninst\u271d\u00b2 : ChosenFiniteProducts C\nX\u271d Y\u271d : C\ninst\u271d\u00b9 : Grp_Class X\u271d\ninst\u271d : Grp_Class Y\u271d\nX Y : Grp_ C\n\u22a2 \u2200 (s : Cone (pair X Y))\n    (m :\n      s.pt \u27f6\n        { pt := Grp_.mk' (tensorObj X.X Y.X),\n            \u03c0 :=\n              {\n                app := fun X_1 =>\n                  Discrete.casesOn X_1 fun as =>\n                    WalkingPair.casesOn as { hom := fst X.X Y.X, one_hom := \u22ef, mul_hom := \u22ef } sorry,\n                naturality := \u22ef } }.pt),\n    (\u2200 (j : Discrete WalkingPair),\n        CategoryStruct.comp m\n            ({ pt := Grp_.mk' (tensorObj X.X Y.X),\n                    \u03c0 :=\n                      {\n                        app := fun X_1 =>\n                          Discrete.casesOn X_1 fun as =>\n                            WalkingPair.casesOn as { hom := fst X.X Y.X, one_hom := \u22ef, mul_hom := \u22ef } sorry,\n                        naturality := \u22ef } }.\u03c0.app\n              j) =\n          s.\u03c0.app j) \u2192\n      m = { hom := id sorry, one_hom := \u22ef, mul_hom := \u22ef }",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/GroupScheme/CFPGrp.lean#L113"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-13T12:13:41+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "eabdc63896de67360cdf7f3a057626d9010aaee25fae8a6ec5f58d3f9a9bdb25"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/GroupScheme/Diagonalizable.lean",
        "start_line": 39,
        "start_column": 77,
        "end_line": 39,
        "end_column": 82
      },
      "debug_info": {
        "goal": "K : Type u_1\ninst\u271d\u00b9 : Field K\nG : Over (Spec (CommRingCat.of K))\ninst\u271d : Grp_Class G\n\u22a2 @AlgebraicGeometry.Scheme.IsDiagonalisable (CommRingCat.of K) G inst\u271d \u2194\n    IsAffine G.left \u2227 Submodule.span K {a | IsGroupLikeElem K a} = \u22a4",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/GroupScheme/Diagonalizable.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-15T21:00:56+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "9d14b9ba2cb4adde302699694fabbdfbded56326b667575c3147f88af5ed53b7"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/Hopf/CoalgToAlg.lean",
        "start_line": 149,
        "start_column": 28,
        "end_line": 149,
        "end_column": 33
      },
      "debug_info": {
        "goal": "R A C : Type u\ninst\u271d\u2075 : CommRing R\ninst\u271d\u2074 : CommRing A\ninst\u271d\u00b3 : AddCommGroup C\ninst\u271d\u00b2 : Algebra R A\ninst\u271d\u00b9 : Module R C\ninst\u271d : Coalgebra R C\nf g : C \u2192\u2097[R] A\n\u22a2 mul' R A \u2218\u2097 TensorProduct.map f g \u2218\u2097 comul = mul' R A \u2218\u2097 TensorProduct.map g f \u2218\u2097 comul",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/Hopf/CoalgToAlg.lean#L149"
      },
      "metadata": {
        "blame_email_hash": "4362719e8620",
        "blame_date": "2025-04-12T17:46:36+02:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "0c7360f5b010a728f1ce9e34447093f78036754bfce4a513f12bcb8bc3fca6da"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/Hopf/CoalgToAlg.lean",
        "start_line": 324,
        "start_column": 67,
        "end_line": 324,
        "end_column": 72
      },
      "debug_info": {
        "goal": "R A C : Type u\ninst\u271d\u2074 : CommRing R\ninst\u271d\u00b3 : CommRing A\ninst\u271d\u00b2 : CommRing C\ninst\u271d\u00b9 : HopfAlgebra R A\ninst\u271d : HopfAlgebra R C\nf : C \u2192\u2090c[R] A\n\u22a2 f\u207b\u00b9 * f = 1",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/Hopf/CoalgToAlg.lean#L324"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-04-07T08:37:08+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "dd6d9bf7afe53596efb00f13dfdcac916c57203657e044443df23df6a43d8742"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/Hopf/GroupLike.lean",
        "start_line": 113,
        "start_column": 67,
        "end_line": 113,
        "end_column": 72
      },
      "debug_info": {
        "goal": "K : Type u_2\nA : Type u_3\ninst\u271d\u00b3 : Field K\ninst\u271d\u00b2 : Ring A\ninst\u271d\u00b9 : Bialgebra K A\ninst\u271d : Nontrivial A\na : A\nha : @Bialgebra.IsGroupLikeElem K A Semifield.toCommSemiring Ring.toSemiring inst\u271d\u00b9 a\ns : Set A\nhsspan :\n  span K s = span K ({b | @Bialgebra.IsGroupLikeElem K A Semifield.toCommSemiring Ring.toSemiring inst\u271d\u00b9 b} \\ {a})\nhsindep : LinearIndependent K Subtype.val\nhs : \u2200 x \u2208 s, @Bialgebra.IsGroupLikeElem K A Semifield.toCommSemiring Ring.toSemiring inst\u271d\u00b9 x \u2227 \u00acx = a\nn : \u2115\nc : Fin n \u2192 K\ne : Fin n \u2192 \u2191s\nhcea : \u2211 i, c i \u2022 \u2191(e i) = a\n\u22a2 Injective e",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/Hopf/GroupLike.lean#L113"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-09T02:11:46+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "ea0eda9fb2a5b17034ee5558c205578a7df0123fb0310d088ff5913b62ee877e"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/Hopf/Cocomm.lean",
        "start_line": 89,
        "start_column": 17,
        "end_line": 89,
        "end_column": 22
      },
      "debug_info": {
        "goal": "R C : Type u\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : Semiring C\ninst\u271d\u00b9 : HopfAlgebra R C\ninst\u271d : @Coalgebra.IsCocomm R C inst\u271d\u00b3 NonUnitalNonAssocSemiring.toAddCommMonoid Algebra.toModule Bialgebra.toCoalgebra\n\u22a2 counit \u2218\u2097 antipode = counit",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/Hopf/Cocomm.lean#L89"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-04-09T15:09:11+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "cef7166c74d410db31d6926fc47d65bc57f9a2149276c6a965a74679488dc37c"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/Hopf/Cocomm.lean",
        "start_line": 90,
        "start_column": 20,
        "end_line": 90,
        "end_column": 25
      },
      "debug_info": {
        "goal": "R C : Type u\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : Semiring C\ninst\u271d\u00b9 : HopfAlgebra R C\ninst\u271d : @Coalgebra.IsCocomm R C inst\u271d\u00b3 NonUnitalNonAssocSemiring.toAddCommMonoid Algebra.toModule Bialgebra.toCoalgebra\n\u22a2 map antipode antipode \u2218\u2097 comul = comul \u2218\u2097 antipode",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/Hopf/Cocomm.lean#L90"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-04-09T15:09:11+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "3d98babe068c17789d934702ad3e784057cb2441ea62aacd53ed5cb093092255"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/Mathlib/CategoryTheory/Monoidal/Grp_.lean",
        "start_line": 324,
        "start_column": 10,
        "end_line": 324,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case refine_1\nC : Type u\u2081\ninst\u271d\u2076 : Category.{v\u2081, u\u2081} C\ninst\u271d\u2075 : ChosenFiniteProducts C\nD : Type u\u2082\ninst\u271d\u2074 : Category.{v\u2082, u\u2082} D\ninst\u271d\u00b3 : ChosenFiniteProducts D\nF : Functor C D\ninst\u271d\u00b2 : F.Monoidal\ninst\u271d\u00b9 : F.Full\ninst\u271d : F.Faithful\nG : Grp_ D\nhG : F.essImage G.X\nF' : C \u224c F.EssImageSubcategory := F.toEssImage.asEquivalence\nthis : F'.inverse.Monoidal\n\u22a2 CategoryStruct.comp\n      (CategoryStruct.comp\n        (\u03bc F (F'.inverse.obj { obj := G.X, property := hG }) (F'.inverse.obj { obj := G.X, property := hG }))\n        (CategoryStruct.comp (F.map (\u03bc F'.inverse { obj := G.X, property := hG } { obj := G.X, property := hG }))\n          (F'.counitIso.hom.app (tensorObj { obj := G.X, property := hG } { obj := G.X, property := hG }))))\n      (fst { obj := G.X, property := hG }.obj { obj := G.X, property := hG }.obj) =\n    CategoryStruct.comp\n      (fst ((F'.inverse.comp F'.functor).obj { obj := G.X, property := hG })\n        ((F'.inverse.comp F'.functor).obj { obj := G.X, property := hG }))\n      (F'.counitIso.hom.app { obj := G.X, property := hG })",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/Mathlib/CategoryTheory/Monoidal/Grp_.lean#L324"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-31T10:54:10+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "92123487def7277959e6d0f7dd67a053e98f0ff1567afc6172beba1eb86abb96"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/Mathlib/CategoryTheory/Monoidal/Grp_.lean",
        "start_line": 325,
        "start_column": 10,
        "end_line": 325,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case refine_2\nC : Type u\u2081\ninst\u271d\u2076 : Category.{v\u2081, u\u2081} C\ninst\u271d\u2075 : ChosenFiniteProducts C\nD : Type u\u2082\ninst\u271d\u2074 : Category.{v\u2082, u\u2082} D\ninst\u271d\u00b3 : ChosenFiniteProducts D\nF : Functor C D\ninst\u271d\u00b2 : F.Monoidal\ninst\u271d\u00b9 : F.Full\ninst\u271d : F.Faithful\nG : Grp_ D\nhG : F.essImage G.X\nF' : C \u224c F.EssImageSubcategory := F.toEssImage.asEquivalence\nthis : F'.inverse.Monoidal\n\u22a2 CategoryStruct.comp\n      (CategoryStruct.comp\n        (\u03bc F (F'.inverse.obj { obj := G.X, property := hG }) (F'.inverse.obj { obj := G.X, property := hG }))\n        (CategoryStruct.comp (F.map (\u03bc F'.inverse { obj := G.X, property := hG } { obj := G.X, property := hG }))\n          (F'.counitIso.hom.app (tensorObj { obj := G.X, property := hG } { obj := G.X, property := hG }))))\n      (snd { obj := G.X, property := hG }.obj { obj := G.X, property := hG }.obj) =\n    CategoryStruct.comp\n      (tensorHom (F'.counitIso.hom.app { obj := G.X, property := hG })\n        (F'.counitIso.hom.app { obj := G.X, property := hG }))\n      (snd { obj := G.X, property := hG }.obj { obj := G.X, property := hG }.obj)",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/Mathlib/CategoryTheory/Monoidal/Grp_.lean#L325"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-31T10:54:10+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "87a5636f43b0e1ee5af2157eae16623773ae1aa37dd4ff8d27b147b60cbe9448"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/Mathlib/CategoryTheory/Monoidal/Grp_.lean",
        "start_line": 327,
        "start_column": 6,
        "end_line": 327,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case refine_2\nC : Type u\u2081\ninst\u271d\u2076 : Category.{v\u2081, u\u2081} C\ninst\u271d\u2075 : ChosenFiniteProducts C\nD : Type u\u2082\ninst\u271d\u2074 : Category.{v\u2082, u\u2082} D\ninst\u271d\u00b3 : ChosenFiniteProducts D\nF : Functor C D\ninst\u271d\u00b2 : F.Monoidal\ninst\u271d\u00b9 : F.Full\ninst\u271d : F.Faithful\nG : Grp_ D\nhG : F.essImage G.X\nF' : C \u224c F.EssImageSubcategory := F.toEssImage.asEquivalence\nthis\u271d : F'.inverse.Monoidal\nthis :\n  CategoryStruct.comp\n      (CategoryStruct.comp\n        (\u03bc F (F'.inverse.obj { obj := G.X, property := hG }) (F'.inverse.obj { obj := G.X, property := hG }))\n        (CategoryStruct.comp (F.map (\u03bc F'.inverse { obj := G.X, property := hG } { obj := G.X, property := hG }))\n          (F'.counitIso.hom.app (tensorObj { obj := G.X, property := hG } { obj := G.X, property := hG }))))\n      G.mul =\n    CategoryStruct.comp\n      (tensorHom (F'.counitIso.hom.app { obj := G.X, property := hG })\n        (F'.counitIso.hom.app { obj := G.X, property := hG }))\n      G.mul\n\u22a2 CategoryStruct.comp\n      (\u03bc F (F'.inverse.obj { obj := G.X, property := hG }) (F'.inverse.obj { obj := G.X, property := hG }))\n      (CategoryStruct.comp (F.map (\u03bc F'.inverse { obj := G.X, property := hG } { obj := G.X, property := hG }))\n        (CategoryStruct.comp\n          (F'.counitIso.hom.app (tensorObj { obj := G.X, property := hG } { obj := G.X, property := hG }))\n          ((Functor.id F.EssImageSubcategory).map G.mul))) =\n    CategoryStruct.comp\n      (tensorHom (F'.counitIso.hom.app { obj := G.X, property := hG })\n        (F'.counitIso.hom.app { obj := G.X, property := hG }))\n      G.mul",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/Mathlib/CategoryTheory/Monoidal/Grp_.lean#L327"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-31T10:54:10+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "a0f97ccc0c42468080b73eea160ab2c97cdccf0f6fb065f0b97489c4c39c09c5"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/Mathlib/RingTheory/HopfAlgebra/Basic.lean",
        "start_line": 11,
        "start_column": 2,
        "end_line": 11,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\nA : Type u_2\ninst\u271d\u00b2 : CommSemiring R\ninst\u271d\u00b9 : Semiring A\ninst\u271d : HopfAlgebra R A\na b : A\n\u22a2 antipode (a * b) = antipode b * antipode a",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/Mathlib/RingTheory/HopfAlgebra/Basic.lean#L11"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-25T16:11:16+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "1f8549a09e79320d39ce9ff6b5924f30199a353565f30208f133588d2318f0b9"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/Mathlib/RingTheory/Bialgebra/Hom.lean",
        "start_line": 46,
        "start_column": 82,
        "end_line": 46,
        "end_column": 87
      },
      "debug_info": {
        "goal": "case add.add\nR : Type u_1\nA : Type u_2\ninst\u271d\u00b2 : CommSemiring R\ninst\u271d\u00b9 : CommSemiring A\ninst\u271d : Algebra R A\nx\u271d\u00b9 y\u271d\u00b9 x\u271d y\u271d : TensorProduct R A A\na\u271d\u00b3 :\n  (LinearMap.mul' R A) (x\u271d\u00b9 * x\u271d) = (LinearMap.mul' R A) x\u271d\u00b9 * (LinearMap.mul' R A) x\u271d \u2192\n    (LinearMap.mul' R A) (y\u271d\u00b9 * x\u271d) = (LinearMap.mul' R A) y\u271d\u00b9 * (LinearMap.mul' R A) x\u271d \u2192\n      (LinearMap.mul' R A) ((x\u271d\u00b9 + y\u271d\u00b9) * x\u271d) = (LinearMap.mul' R A) (x\u271d\u00b9 + y\u271d\u00b9) * (LinearMap.mul' R A) x\u271d\na\u271d\u00b2 :\n  (LinearMap.mul' R A) (x\u271d\u00b9 * y\u271d) = (LinearMap.mul' R A) x\u271d\u00b9 * (LinearMap.mul' R A) y\u271d \u2192\n    (LinearMap.mul' R A) (y\u271d\u00b9 * y\u271d) = (LinearMap.mul' R A) y\u271d\u00b9 * (LinearMap.mul' R A) y\u271d \u2192\n      (LinearMap.mul' R A) ((x\u271d\u00b9 + y\u271d\u00b9) * y\u271d) = (LinearMap.mul' R A) (x\u271d\u00b9 + y\u271d\u00b9) * (LinearMap.mul' R A) y\u271d\na\u271d\u00b9 : (LinearMap.mul' R A) (x\u271d\u00b9 * (x\u271d + y\u271d)) = (LinearMap.mul' R A) x\u271d\u00b9 * (LinearMap.mul' R A) (x\u271d + y\u271d)\na\u271d : (LinearMap.mul' R A) (y\u271d\u00b9 * (x\u271d + y\u271d)) = (LinearMap.mul' R A) y\u271d\u00b9 * (LinearMap.mul' R A) (x\u271d + y\u271d)\n\u22a2 (LinearMap.mul' R A) (x\u271d\u00b9 * x\u271d) + (LinearMap.mul' R A) (y\u271d\u00b9 * x\u271d) +\n      ((LinearMap.mul' R A) (x\u271d\u00b9 * y\u271d) + (LinearMap.mul' R A) (y\u271d\u00b9 * y\u271d)) =\n    (LinearMap.mul' R A) x\u271d\u00b9 * (LinearMap.mul' R A) x\u271d + (LinearMap.mul' R A) y\u271d\u00b9 * (LinearMap.mul' R A) x\u271d +\n      ((LinearMap.mul' R A) x\u271d\u00b9 * (LinearMap.mul' R A) y\u271d + (LinearMap.mul' R A) y\u271d\u00b9 * (LinearMap.mul' R A) y\u271d)",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/Mathlib/RingTheory/Bialgebra/Hom.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-04-06T08:41:35+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "0022394b1a37fa9e574c68393e1737a895b095ee085b7488bc3f8c2fcbf6b644"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/Mathlib/RingTheory/Bialgebra/Hom.lean",
        "start_line": 62,
        "start_column": 4,
        "end_line": 62,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case a.h.h\nR : Type u_1\nA : Type u_2\ninst\u271d\u00b2 : CommSemiring R\ninst\u271d\u00b9 : CommSemiring A\ninst\u271d : Bialgebra R A\na b : A\n\u22a2 (map { toAddHom := (LinearMap.mul' R A).toAddHom, map_smul' := \u22ef }\n        { toAddHom := (LinearMap.mul' R A).toAddHom, map_smul' := \u22ef })\n      ((tensorTensorTensorComm R A A A A) (comul a \u2297\u209c[R] comul b)) =\n    comul a * comul b",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/Mathlib/RingTheory/Bialgebra/Hom.lean#L62"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-04-06T08:41:35+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "6797e9e4201ab91c92ffbbf5e615ab9695496875df6e3a583c0b02c30a342b1b"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/Mathlib/RingTheory/Bialgebra/Hom.lean",
        "start_line": 74,
        "start_column": 31,
        "end_line": 74,
        "end_column": 36
      },
      "debug_info": {
        "goal": "case h\nR : Type u_1\nA : Type u_2\ninst\u271d\u00b2 : CommSemiring R\ninst\u271d\u00b9 : CommSemiring A\ninst\u271d : Bialgebra R A\nx\u271d : A\n\u22a2 (LinearMap.mul' R R) ((map counit counit) (comul x\u271d)) = counit x\u271d",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/Mathlib/RingTheory/Bialgebra/Hom.lean#L74"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-04-06T08:41:35+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "d59a238fb0a8adf9d85704e9bb79900913e4c49b3e08797a4417447b966e1ae8"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/Toric",
        "branch": "faces",
        "commit": "658380a50c5b69bb6089ee04c5d29b99f4eb2b85",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Toric/Mathlib/RingTheory/Bialgebra/Hom.lean",
        "start_line": 78,
        "start_column": 4,
        "end_line": 78,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h\nR : Type u_1\nA : Type u_2\ninst\u271d\u00b2 : CommSemiring R\ninst\u271d\u00b9 : CommSemiring A\ninst\u271d : Bialgebra R A\na : A\n\u22a2 (map { toFun := \u21d1(comulAlgHom R A), map_add' := \u22ef, map_smul' := \u22ef }\n        { toFun := \u21d1(comulAlgHom R A), map_add' := \u22ef, map_smul' := \u22ef })\n      (comul a) =\n    (tensorTensorTensorComm R A A A A) ((map comul comul) (comul a))",
        "url": "https://github.com/YaelDillies/Toric/blob/658380a50c5b69bb6089ee04c5d29b99f4eb2b85/Toric/Mathlib/RingTheory/Bialgebra/Hom.lean#L78"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-04-06T08:41:35+00:00",
        "inclusion_date": "2025-05-28T07:02:50.107069+00:00"
      },
      "id": "0a0dc2e4123d86c9592068c3ec3e8919278f0830df34d650a73dca5437c17a1c"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "generalize-eval-dist",
        "commit": "2c9311bf6331b5a4017d193b21ed77cd0b183d23",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "VCVio/EvalDist/Basic.lean",
        "start_line": 50,
        "start_column": 12,
        "end_line": 50,
        "end_column": 17
      },
      "debug_info": {
        "goal": "\u03b1 : Type u\np q : @SPMF \u03b1\nh : \u2200 (x : \u03b1), (@SPMF.run \u03b1 p) (some x) = (@SPMF.run \u03b1 q) (some x)\nx : Option \u03b1\n\u22a2 p none = q none",
        "url": "https://github.com/dtumad/VCV-io/blob/2c9311bf6331b5a4017d193b21ed77cd0b183d23/VCVio/EvalDist/Basic.lean#L50"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-05-28T15:29:58-07:00",
        "inclusion_date": "2025-05-29T05:00:31.920000+00:00"
      },
      "id": "df2164c5d0fec2d420d332515c73024a95def8390d449a7f9800897c5388355e"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "generalize-eval-dist",
        "commit": "2c9311bf6331b5a4017d193b21ed77cd0b183d23",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "VCVio/EvalDist/Basic.lean",
        "start_line": 213,
        "start_column": 23,
        "end_line": 213,
        "end_column": 28
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 \u03b3 : Type u\nm : Type u \u2192 Type v\ninst\u271d\u00b9 : Monad m\ninst\u271d : @HasEvalDist m inst\u271d\u00b9\n\u03b1\u271d \u03b2\u271d : Type u_1\nx : PMF \u03b1\u271d\ny : \u03b1\u271d \u2192 PMF \u03b2\u271d\n\u22a2 (OptionT.mk do\n      let a \u2190 x >>= y\n      Pure.pure (some a)) =\n    @Bind.bind SPMF Monad.toBind \u03b1\u271d \u03b2\u271d\n      (OptionT.mk do\n        let a \u2190 x\n        Pure.pure (some a))\n      (@Function.comp \u03b1\u271d (PMF \u03b2\u271d) (@SPMF \u03b2\u271d)\n        (fun p =>\n          OptionT.mk do\n            let a \u2190 p\n            Pure.pure (some a))\n        y)",
        "url": "https://github.com/dtumad/VCV-io/blob/2c9311bf6331b5a4017d193b21ed77cd0b183d23/VCVio/EvalDist/Basic.lean#L213"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-05-28T11:20:27-05:00",
        "inclusion_date": "2025-05-29T05:00:31.920000+00:00"
      },
      "id": "cee50d62e584aec5209964a0f1511cd8c5f2d10e8a0c683a947dd6746c059168"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "fad2ce6c05324695dee73fe71228e64f6c1bd1f8",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 444,
        "start_column": 4,
        "end_line": 444,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case inr.inl\n\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097 : \u2200 (i : \u2191X\u2097) (j : \u2191Y\u2097), B\u2097 i j \u2208 SignType.cast.range\nhB\u1d63 : \u2200 (i : \u2191X\u1d63) (j : \u2191Y\u1d63), B\u1d63 i j \u2208 SignType.cast.range\nx\u2080\u2097 : \u2191X\u2097 := \u27e8x\u2080, \u22ef\u27e9\nx\u2080\u1d63 : \u2191X\u1d63 := \u27e8x\u2080, \u22ef\u27e9\nx\u2081\u2097 : \u2191X\u2097 := \u27e8x\u2081, \u22ef\u27e9\nx\u2081\u1d63 : \u2191X\u1d63 := \u27e8x\u2081, \u22ef\u27e9\nx\u2082\u2097 : \u2191X\u2097 := \u27e8x\u2082, \u22ef\u27e9\nx\u2082\u1d63 : \u2191X\u1d63 := \u27e8x\u2082, \u22ef\u27e9\ny\u2080\u2097 : \u2191Y\u2097 := \u27e8y\u2080, \u22ef\u27e9\ny\u2080\u1d63 : \u2191Y\u1d63 := \u27e8y\u2080, \u22ef\u27e9\ny\u2081\u2097 : \u2191Y\u2097 := \u27e8y\u2081, \u22ef\u27e9\ny\u2081\u1d63 : \u2191Y\u1d63 := \u27e8y\u2081, \u22ef\u27e9\ny\u2082\u2097 : \u2191Y\u2097 := \u27e8y\u2082, \u22ef\u27e9\ny\u2082\u1d63 : \u2191Y\u1d63 := \u27e8y\u2082, \u22ef\u27e9\nA\u2097 : Matrix (\u2191(X\u2097.drop2 x\u2080\u2097 x\u2081\u2097)) (\u2191(Y\u2097.drop1 y\u2082\u2097)) Z2 := B\u2097.support.A\u2097 x\u2080\u2097 x\u2081\u2097 y\u2082\u2097\nD\u2097 : Matrix (Fin 2) (\u2191(Y\u2097.drop3 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097)) Z2 := B\u2097.support.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097\nD\u2080 : Matrix (Fin 2) (Fin 2) Z2 := B\u2097.support.D\u2080 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097\nD\u1d63 : Matrix (\u2191(X\u1d63.drop3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63)) (Fin 2) Z2 := B\u1d63.support.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nA\u1d63 : Matrix (\u2191(X\u1d63.drop1 x\u2082\u1d63)) (\u2191(Y\u1d63.drop2 y\u2080\u1d63 y\u2081\u1d63)) Z2 := B\u1d63.support.A\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nhB\u2097\u2080\u2080 : |B\u2097 x\u2080\u2097 y\u2080\u2097| = 1\nhB\u2097\u2080\u2082 : |B\u2097 x\u2080\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2080 : |B\u2097 x\u2082\u2097 y\u2080\u2097| = 1\nhB\u2097\u2081\u2082 : |B\u2097 x\u2081\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2081 : |B\u2097 x\u2082\u2097 y\u2081\u2097| = 1\nhB\u1d63\u2080\u2080 : |B\u1d63 x\u2080\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2080\u2082 : |B\u1d63 x\u2080\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2080 : |B\u1d63 x\u2082\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2081\u2082 : |B\u1d63 x\u2081\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2081 : |B\u1d63 x\u2082\u1d63 y\u2081\u1d63| = 1\ni\u1d63 : \u2191(X\u1d63.drop1 \u27e8x\u2082, \u22ef\u27e9)\nj\u2097 : \u2191(Y\u2097.drop1 \u27e8y\u2082, \u22ef\u27e9)\n\u22a2 |matrix3sumCanonicalSigning B\u2097 B\u1d63 hXX hYY \u25eai\u1d63 \u25e9j\u2097| =\n    \u2191(matrix3sumComposition x\u2080\u2097 x\u2081\u2097 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097 y\u2080\u1d63 y\u2081\u1d63 A\u2097 D\u2097 D\u2080 D\u1d63 A\u1d63 \u25eai\u1d63 \u25e9j\u2097).val",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/fad2ce6c05324695dee73fe71228e64f6c1bd1f8/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L444"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-28T19:46:21+02:00",
        "inclusion_date": "2025-05-29T05:11:43.563465+00:00"
      },
      "id": "269b6d02fdabc5ac689cb2b1d83765e27d4da2bc38f2da7cf13524c8b09f47df"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 539,
        "start_column": 2,
        "end_line": 539,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097' : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63' : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhB\u2097' : B\u2097'.IsTotallyUnimodular\nhB\u1d63' : B\u1d63'.IsTotallyUnimodular\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\n\u22a2 let x\u2080\u2097 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2080\u1d63 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2081\u2097 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2081\u1d63 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2082\u2097 := \u27e8x\u2082, \u22ef\u27e9;\n  let x\u2082\u1d63 := \u27e8x\u2082, \u22ef\u27e9;\n  let y\u2080\u2097 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2080\u1d63 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2081\u2097 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2081\u1d63 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2082\u2097 := \u27e8y\u2082, \u22ef\u27e9;\n  let y\u2082\u1d63 := \u27e8y\u2082, \u22ef\u27e9;\n  let B\u2097 := B\u2097'.toCanonicalSigning x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n  let B\u1d63 := B\u1d63'.toCanonicalSigning x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63;\n  let D\u2080 := B\u2097.D\u2080 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097;\n  let D\u2097 := B\u2097.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n  let D\u1d63 := B\u1d63.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63;\n  let c\u2080 := B\u1d63._col y\u2080\u1d63;\n  let c\u2081 := B\u1d63._col y\u2081\u1d63;\n  \u2200\n    (hB\u2097' :\n      (B\u2097'.submatrix3x3 x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097).abs = matrix3x3unsigned\u2080 \u2228\n        (B\u2097'.submatrix3x3 x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097).abs = matrix3x3unsigned\u2081),\n    (B\u1d63'.submatrix3x3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63).abs = matrix3x3unsigned\u2080 \u2228\n        (B\u1d63'.submatrix3x3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63).abs = matrix3x3unsigned\u2081 \u2192\n      match B\u2097'._rrr x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097 hB\u2097' with\n      | (r\u2080, r\u2081, snd) =>\n        matrix3sumBottomLeft x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097 D\u2097 D\u2080 D\u1d63 =\n          (fun {X Y \u03b1} [Mul \u03b1] c r => Matrix.of fun i j => c i * r j) c\u2080 r\u2080 +\n            (fun {X Y \u03b1} [Mul \u03b1] c r => Matrix.of fun i j => c i * r j) c\u2081 r\u2081",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L539"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-26T16:45:43+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "73673b2971aa46849bdda7d3c21f35bd96ec0642a397555ae2f74065d89de93f"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 577,
        "start_column": 2,
        "end_line": 577,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097' : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63' : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhB\u2097' : B\u2097'.IsTotallyUnimodular\nhB\u1d63' : B\u1d63'.IsTotallyUnimodular\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\n\u22a2 let x\u2080\u2097 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2080\u1d63 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2081\u2097 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2081\u1d63 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2082\u2097 := \u27e8x\u2082, \u22ef\u27e9;\n  let x\u2082\u1d63 := \u27e8x\u2082, \u22ef\u27e9;\n  let y\u2080\u2097 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2080\u1d63 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2081\u2097 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2081\u1d63 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2082\u2097 := \u27e8y\u2082, \u22ef\u27e9;\n  let y\u2082\u1d63 := \u27e8y\u2082, \u22ef\u27e9;\n  let B\u2097 := B\u2097'.toCanonicalSigning x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n  let B\u1d63 := B\u1d63'.toCanonicalSigning x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63;\n  let D\u2080 := B\u2097.D\u2080 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097;\n  let D\u2097 := B\u2097.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n  let D\u1d63 := B\u1d63.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63;\n  let D := matrix3sumBottomLeft x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097 D\u2097 D\u2080 D\u1d63;\n  \u2200\n    (hB\u2097' :\n      (B\u2097'.submatrix3x3 x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097).abs = matrix3x3unsigned\u2080 \u2228\n        (B\u2097'.submatrix3x3 x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097).abs = matrix3x3unsigned\u2081),\n    (B\u1d63'.submatrix3x3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63).abs = matrix3x3unsigned\u2080 \u2228\n        (B\u1d63'.submatrix3x3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63).abs = matrix3x3unsigned\u2081 \u2192\n      match B\u2097'._rrr x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097 hB\u2097' with\n      | (r\u2080, r\u2081, r\u2082) =>\n        \u2200 (i : \u2191(X\u1d63.drop1 x\u2082\u1d63)), D i = r\u2080 \u2228 D i = -r\u2080 \u2228 D i = r\u2081 \u2228 D i = -r\u2081 \u2228 D i = r\u2082 \u2228 D i = -r\u2082 \u2228 D i = 0",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L577"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-26T16:45:43+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "fdfef395588efbfdecb9ac32f25b6b09317f09b84e423d6ac20aae16c5dd8f3c"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "ff8e6d547d809fbea2dca606651661dd95593882",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 624,
        "start_column": 2,
        "end_line": 624,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097' : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63' : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhB\u2097' : B\u2097'.IsTotallyUnimodular\nhB\u1d63' : B\u1d63'.IsTotallyUnimodular\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\n\u22a2 let x\u2080\u2097 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2080\u1d63 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2081\u2097 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2081\u1d63 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2082\u2097 := \u27e8x\u2082, \u22ef\u27e9;\n  let x\u2082\u1d63 := \u27e8x\u2082, \u22ef\u27e9;\n  let y\u2080\u2097 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2080\u1d63 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2081\u2097 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2081\u1d63 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2082\u2097 := \u27e8y\u2082, \u22ef\u27e9;\n  let y\u2082\u1d63 := \u27e8y\u2082, \u22ef\u27e9;\n  let B\u2097 := B\u2097'.toCanonicalSigning x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n  let B\u1d63 := B\u1d63'.toCanonicalSigning x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63;\n  let D\u2080 := B\u2097.D\u2080 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097;\n  let D\u2097 := B\u2097.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n  let D\u1d63 := B\u1d63.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63;\n  let D := matrix3sumBottomLeft x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097 D\u2097 D\u2080 D\u1d63;\n  let c\u2080 := B\u1d63._col y\u2080\u1d63;\n  let c\u2081 := B\u1d63._col y\u2081\u1d63;\n  (B\u2097'.submatrix3x3 x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097).abs = matrix3x3unsigned\u2080 \u2228\n      (B\u2097'.submatrix3x3 x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097).abs = matrix3x3unsigned\u2081 \u2192\n    (B\u1d63'.submatrix3x3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63).abs = matrix3x3unsigned\u2080 \u2228\n        (B\u1d63'.submatrix3x3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63).abs = matrix3x3unsigned\u2081 \u2192\n      \u2200 (j : \u2191(Y\u2097.drop1 y\u2082\u2097)),\n        (fun x => D x j) = c\u2080 \u2228\n          (fun x => D x j) = -c\u2080 \u2228\n            (fun x => D x j) = c\u2081 \u2228\n              (fun x => D x j) = -c\u2081 \u2228 (fun x => D x j) = c\u2080 - c\u2081 \u2228 (fun x => D x j) = c\u2081 - c\u2080 \u2228 (fun x => D x j) = 0",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/ff8e6d547d809fbea2dca606651661dd95593882/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L624"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-26T16:45:43+02:00",
        "inclusion_date": "2025-05-30T05:00:54.600883+00:00"
      },
      "id": "e136a0a0d4c38f7f04e8d7688c5b8e7d2786f5df1897cd21d20e7a3698b52544"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 642,
        "start_column": 2,
        "end_line": 642,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097' : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63' : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhB\u2097' : B\u2097'.IsTotallyUnimodular\nhB\u1d63' : B\u1d63'.IsTotallyUnimodular\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\n\u22a2 match hXX.inter3all with\n  | ((x\u2080\u2097, x\u2081\u2097, x\u2082\u2097), x\u2080\u1d63, x\u2081\u1d63, x\u2082\u1d63) =>\n    match hYY.inter3all with\n    | ((y\u2080\u2097, y\u2081\u2097, y\u2082\u2097), y\u2080\u1d63, y\u2081\u1d63, y\u2082\u1d63) =>\n      let B\u2097 := B\u2097'.toCanonicalSigning x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n      let B\u1d63 := B\u1d63'.toCanonicalSigning x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63;\n      let D\u2080 := B\u1d63.D\u2080 x\u2080\u1d63 x\u2081\u1d63 y\u2080\u1d63 y\u2081\u1d63;\n      let D\u2097 := B\u2097.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n      let D\u1d63 := B\u1d63.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63;\n      (B\u2097'.submatrix3x3 x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097).abs = matrix3x3unsigned\u2080 \u2228\n          (B\u2097'.submatrix3x3 x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097).abs = matrix3x3unsigned\u2081 \u2192\n        (B\u1d63'.submatrix3x3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63).abs = matrix3x3unsigned\u2080 \u2228\n            (B\u1d63'.submatrix3x3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63).abs = matrix3x3unsigned\u2081 \u2192\n          (B\u1d63.A\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 \u25eb matrix3sumBottomLeft x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097 D\u2097 D\u2080 D\u1d63).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L642"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-26T16:45:43+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "6ffbbff0d36005182a745347a5b3a7057dede76c098b3e78f94fafa34db687ea"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 665,
        "start_column": 2,
        "end_line": 665,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097' : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63' : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhB\u2097' : B\u2097'.IsTotallyUnimodular\nhB\u1d63' : B\u1d63'.IsTotallyUnimodular\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\n\u22a2 match hXX.inter3all with\n  | ((x\u2080\u2097, x\u2081\u2097, x\u2082\u2097), x\u2080\u1d63, x\u2081\u1d63, x\u2082\u1d63) =>\n    match hYY.inter3all with\n    | ((y\u2080\u2097, y\u2081\u2097, y\u2082\u2097), y\u2080\u1d63, y\u2081\u1d63, y\u2082\u1d63) =>\n      let B\u2097 := B\u2097'.toCanonicalSigning x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n      let B\u1d63 := B\u1d63'.toCanonicalSigning x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63;\n      let D\u2080 := B\u2097.D\u2080 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097;\n      let D\u2097 := B\u2097.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n      let D\u1d63 := B\u1d63.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63;\n      (B\u2097'.submatrix3x3 x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097).abs = matrix3x3unsigned\u2080 \u2228\n          (B\u2097'.submatrix3x3 x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097).abs = matrix3x3unsigned\u2081 \u2192\n        (B\u1d63'.submatrix3x3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63).abs = matrix3x3unsigned\u2080 \u2228\n            (B\u1d63'.submatrix3x3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63).abs = matrix3x3unsigned\u2081 \u2192\n          (B\u2097.A\u2097 x\u2080\u2097 x\u2081\u2097 y\u2082\u2097 \u229f matrix3sumBottomLeft x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097 D\u2097 D\u2080 D\u1d63).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L665"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-26T16:45:43+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "b6cf98bd4fe6b2152326457288d9750c27ce97d26bcd2e325172981b9e24e1ba"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/MatrixFamily.lean",
        "start_line": 62,
        "start_column": 2,
        "end_line": 62,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097 : B\u2097.IsTotallyUnimodular\nhB\u1d63 : B\u1d63.IsTotallyUnimodular\n\u22a2 Matrix.IsTotallyUnimodular (matrix3sumCanonicalSigning B\u2097 B\u1d63 hXX hYY)",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/MatrixFamily.lean#L62"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-28T15:17:14+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "ac00caf5d39c9dafd23d665054598c7182d23362a7e7a6d2f69065e1d8525033"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "a9175fe24622b2ff7155ad85c1307639e69feda3",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/SmartOr.lean",
        "start_line": 213,
        "start_column": 2,
        "end_line": 213,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u00b9 : Ord \u03b1\ninst\u271d : DecidableEq \u03b1\nx1 x2 y1 y2 : Regex \u03b1\nhx : @OrIsSmart \u03b1 instLTRegexOfOrd (x1.or x2)\nhy : @OrIsSmart \u03b1 instLTRegexOfOrd (y1.or y2)\n\u22a2 mergeOr (x1.or x2) (y1.or y2) \u2260 Regex.emptyset",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/a9175fe24622b2ff7155ad85c1307639e69feda3/Katydid/Regex/Smart/SmartOr.lean#L213"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-28T09:03:16+01:00",
        "inclusion_date": "2025-05-29T05:25:51.849295+00:00"
      },
      "id": "6eb988e4ecb7da997856ad2f62fc028e96145ff57b2f46629f772fa6ff938990"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "a9175fe24622b2ff7155ad85c1307639e69feda3",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/SmartOr.lean",
        "start_line": 221,
        "start_column": 2,
        "end_line": 221,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u00b9 : Ord \u03b1\ninst\u271d : DecidableEq \u03b1\nx1 x2 y : Regex \u03b1\nhx : @OrIsSmart \u03b1 instLTRegexOfOrd (x1.or x2)\nhy : Regex.SmartOrElem y\n\u22a2 mergeOr (x1.or x2) y \u2260 Regex.emptyset",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/a9175fe24622b2ff7155ad85c1307639e69feda3/Katydid/Regex/Smart/SmartOr.lean#L221"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-27T17:19:07+01:00",
        "inclusion_date": "2025-05-29T05:25:51.849295+00:00"
      },
      "id": "b5854202c0d713954bd501457928a2a11ec5cbb7a4d577da218051d941da58ef"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "a9175fe24622b2ff7155ad85c1307639e69feda3",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/SmartOr.lean",
        "start_line": 229,
        "start_column": 2,
        "end_line": 229,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u00b9 : Ord \u03b1\ninst\u271d : DecidableEq \u03b1\nx1 x2 y : Regex \u03b1\nhx : @OrIsSmart \u03b1 instLTRegexOfOrd (x1.or x2)\nhy : @OrIsSmart \u03b1 instLTRegexOfOrd y\n\u22a2 mergeOr (x1.or x2) y \u2260 Regex.any.star",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/a9175fe24622b2ff7155ad85c1307639e69feda3/Katydid/Regex/Smart/SmartOr.lean#L229"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-28T09:03:16+01:00",
        "inclusion_date": "2025-05-29T05:25:51.849295+00:00"
      },
      "id": "6637b941918bd36c394af4b2c3ed2feec787a7e2812f718e0a00fd11882ea40d"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "a9175fe24622b2ff7155ad85c1307639e69feda3",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/SmartOr.lean",
        "start_line": 237,
        "start_column": 2,
        "end_line": 237,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u00b9 : Ord \u03b1\ninst\u271d : DecidableEq \u03b1\nx1 x2 y : Regex \u03b1\nhx : @OrIsSmart \u03b1 instLTRegexOfOrd (x1.or x2)\nhy : Regex.SmartOrElem y\n\u22a2 mergeOr (x1.or x2) y \u2260 Regex.any.star",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/a9175fe24622b2ff7155ad85c1307639e69feda3/Katydid/Regex/Smart/SmartOr.lean#L237"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-27T17:19:07+01:00",
        "inclusion_date": "2025-05-29T05:25:51.849295+00:00"
      },
      "id": "03f12bb806f94b6b048b35664302568e1416cc24f789bd2dd085bd12b62c3ecc"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "a9175fe24622b2ff7155ad85c1307639e69feda3",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/LawfulEqOrd.lean",
        "start_line": 13,
        "start_column": 2,
        "end_line": 13,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\no : Ord \u03b1\nd : DecidableEq \u03b1\nx y : \u03b1\nhlt : x < y\nhgt : x > y\n\u22a2 False",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/a9175fe24622b2ff7155ad85c1307639e69feda3/Katydid/Regex/Smart/LawfulEqOrd.lean#L13"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-24T12:13:44+01:00",
        "inclusion_date": "2025-05-29T05:25:51.849295+00:00"
      },
      "id": "2ddd8c74cdecd9270c1cc5b1c690119a2c1b8a7ac46433e3e6b1f9a8f6b0d1f0"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "a9175fe24622b2ff7155ad85c1307639e69feda3",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/LawfulEqOrd.lean",
        "start_line": 17,
        "start_column": 2,
        "end_line": 17,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\no : Ord \u03b1\nd : DecidableEq \u03b1\nx y : \u03b1\nhlt : \u00acx < y\nhneq : x \u2260 y\n\u22a2 x > y",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/a9175fe24622b2ff7155ad85c1307639e69feda3/Katydid/Regex/Smart/LawfulEqOrd.lean#L17"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-24T12:13:44+01:00",
        "inclusion_date": "2025-05-29T05:25:51.849295+00:00"
      },
      "id": "9e907f77e6881e5b152b7da04fd775015061c36541c85e59db100be8987cadf8"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "a9175fe24622b2ff7155ad85c1307639e69feda3",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/LawfulEqOrd.lean",
        "start_line": 21,
        "start_column": 2,
        "end_line": 21,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\no : Ord \u03b1\nd : DecidableEq \u03b1\nx y : \u03b1\nhlt : \u00acx > y\nhneq : x \u2260 y\n\u22a2 x < y",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/a9175fe24622b2ff7155ad85c1307639e69feda3/Katydid/Regex/Smart/LawfulEqOrd.lean#L21"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-24T12:13:44+01:00",
        "inclusion_date": "2025-05-29T05:25:51.849295+00:00"
      },
      "id": "6dfb19ac34dfddd82a4fcbe36d2afb6e740c24619ebf113bd8532186e691cd36"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "a9175fe24622b2ff7155ad85c1307639e69feda3",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/LawfulEqOrd.lean",
        "start_line": 25,
        "start_column": 2,
        "end_line": 25,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\no : Ord \u03b1\nd : DecidableEq \u03b1\nx y : \u03b1\nh : compare x y = lt\n\u22a2 x < y",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/a9175fe24622b2ff7155ad85c1307639e69feda3/Katydid/Regex/Smart/LawfulEqOrd.lean#L25"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-27T17:19:07+01:00",
        "inclusion_date": "2025-05-29T05:25:51.849295+00:00"
      },
      "id": "ac6220aa42a5dfd0fd0c443c0f6610924bd5e8500143b24ad54967892e99d4dc"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "a9175fe24622b2ff7155ad85c1307639e69feda3",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/LawfulEqOrd.lean",
        "start_line": 29,
        "start_column": 2,
        "end_line": 29,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\no : Ord \u03b1\nd : DecidableEq \u03b1\nx y : \u03b1\nh : compare x y = gt\n\u22a2 x > y",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/a9175fe24622b2ff7155ad85c1307639e69feda3/Katydid/Regex/Smart/LawfulEqOrd.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-27T17:19:07+01:00",
        "inclusion_date": "2025-05-29T05:25:51.849295+00:00"
      },
      "id": "b86b226e49b158524b47b130e77e60ffd25c846c0071547b1c6a4cea5bcae4e6"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "a9175fe24622b2ff7155ad85c1307639e69feda3",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/LawfulEqOrd.lean",
        "start_line": 33,
        "start_column": 2,
        "end_line": 33,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\no : Ord \u03b1\nd : DecidableEq \u03b1\nx y : \u03b1\nh : compare x y = eq\n\u22a2 x = y",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/a9175fe24622b2ff7155ad85c1307639e69feda3/Katydid/Regex/Smart/LawfulEqOrd.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-27T17:19:07+01:00",
        "inclusion_date": "2025-05-29T05:25:51.849295+00:00"
      },
      "id": "9230840499660a775328af72dcc3866020504a2d6ef5ef7eb45cef9dff89f7b2"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "a9175fe24622b2ff7155ad85c1307639e69feda3",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/LawfulEqOrd.lean",
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\no : Ord \u03b1\nd : DecidableEq \u03b1\nx y : \u03b1\nh : x < y\n\u22a2 x \u2260 y",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/a9175fe24622b2ff7155ad85c1307639e69feda3/Katydid/Regex/Smart/LawfulEqOrd.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-27T17:19:07+01:00",
        "inclusion_date": "2025-05-29T05:25:51.849295+00:00"
      },
      "id": "2503a36370cb97e019aaba5c9738bbf0b7c6d78097d8c02d8438197b98254b96"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "a9175fe24622b2ff7155ad85c1307639e69feda3",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/LawfulEqOrd.lean",
        "start_line": 41,
        "start_column": 2,
        "end_line": 41,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\no : Ord \u03b1\nd : DecidableEq \u03b1\nx y : \u03b1\nh : x > y\n\u22a2 x \u2260 y",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/a9175fe24622b2ff7155ad85c1307639e69feda3/Katydid/Regex/Smart/LawfulEqOrd.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-27T17:19:07+01:00",
        "inclusion_date": "2025-05-29T05:25:51.849295+00:00"
      },
      "id": "44eddca0ba8c69b3af781ab0b44150b5bfa20c7c25c09d002630416433adf2d6"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "a9175fe24622b2ff7155ad85c1307639e69feda3",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/LawfulEqOrd.lean",
        "start_line": 54,
        "start_column": 2,
        "end_line": 54,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\no : Ord \u03b1\ninst\u271d : DecidableEq \u03b1\nx y : \u03b1\n\u22a2 (x == y) = false \u2192 x \u2260 y",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/a9175fe24622b2ff7155ad85c1307639e69feda3/Katydid/Regex/Smart/LawfulEqOrd.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-24T14:29:51+01:00",
        "inclusion_date": "2025-05-29T05:25:51.849295+00:00"
      },
      "id": "857f8c30e8ae5fb1b6629cab8108e70ee199ea05dcbd81bd7dbe0cfa9f79ac8d"
    },
    {
      "repo": {
        "remote": "https://github.com/katydid/regex-deriv-lean",
        "branch": "main",
        "commit": "a9175fe24622b2ff7155ad85c1307639e69feda3",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Katydid/Regex/Smart/LawfulEqOrd.lean",
        "start_line": 58,
        "start_column": 2,
        "end_line": 58,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\no : Ord \u03b1\ninst\u271d : DecidableEq \u03b1\nx y : \u03b1\n\u22a2 \u00acx = y \u2194 x \u2260 y",
        "url": "https://github.com/katydid/regex-deriv-lean/blob/a9175fe24622b2ff7155ad85c1307639e69feda3/Katydid/Regex/Smart/LawfulEqOrd.lean#L58"
      },
      "metadata": {
        "blame_email_hash": "e3e649d9026a",
        "blame_date": "2025-05-28T09:03:16+01:00",
        "inclusion_date": "2025-05-29T05:25:51.849295+00:00"
      },
      "id": "7803778c823b0495d5271eaaf7c848a702243923cab4b8455e7dc51e7f37f801"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Test/realToFloat.lean",
        "start_line": 23,
        "start_column": 2,
        "end_line": 23,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 (fun x => x.1.exp + isomorph `RealToFloat (fun x => x.2 0) x) = fun p => p.1.exp + p.2 0",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/Test/realToFloat.lean#L23"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2024-11-19T16:57:30-05:00",
        "inclusion_date": "2025-05-29T05:45:13.961831+00:00"
      },
      "id": "c0d54bfa60547c746dc115d30556d3fd78b550ff3be63d063386c3bbc6a7e3a3"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Test/realToFloat.lean",
        "start_line": 34,
        "start_column": 2,
        "end_line": 34,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 (fun x =>\n      x.1.exp + isomorph `RealToFloat (fun x => x.2 0) x \u2264 0 \u2227 x.1.exp + isomorph `RealToFloat (fun x => x.2 1) x \u2264 0) =\n    fun p => p.1.exp + p.2 0 \u2264 0 \u2227 p.1.exp + p.2 1 \u2264 0",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/Test/realToFloat.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2024-11-19T16:57:30-05:00",
        "inclusion_date": "2025-05-29T05:45:13.961831+00:00"
      },
      "id": "7b123661af1232e4b825d524f4b14b91d10feeed79958b038212934ea4eff3f4"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "examples/FloatTest.lean",
        "start_line": 13,
        "start_column": 82,
        "end_line": 13,
        "end_column": 87
      },
      "debug_info": {
        "goal": "x\u271d\u00b3 x\u271d\u00b2 x\u271d\u00b9 x\u271d : PUnit.{1}\n\u22a2 { data := #[1.0, 2.0, 3.0, 4.0, 3.0] }.toByteArray.size % 8 = 0",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/examples/FloatTest.lean#L13"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2025-01-07T15:43:19-05:00",
        "inclusion_date": "2025-05-29T05:45:13.961831+00:00"
      },
      "id": "e93dd22e7de6d89815d8ae7f4892b134cc27172d51d5b4fb7baa4430a35c18f3"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "SciLean/Util/Alternatives.lean",
        "start_line": 95,
        "start_column": 7,
        "end_line": 95,
        "end_column": 12
      },
      "debug_info": {
        "goal": "a b : Nat\nh : a = b\n\u22a2 (fun x =>\n      let y := x + x + x + x;\n      y + y) =\n    fun x =>\n    let y := x + x + x + x;\n    let y := x + x + x + x;\n    x + x + x + x",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/SciLean/Util/Alternatives.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2023-04-26T17:56:32-04:00",
        "inclusion_date": "2025-05-29T05:45:13.961831+00:00"
      },
      "id": "e3f23306dea9b48d572c6813e4bfa042f392a9c8a9c508c705e40a9a6faed581"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "SciLean/Modules/Prob/Erased.lean",
        "start_line": 18,
        "start_column": 63,
        "end_line": 18,
        "end_column": 68
      },
      "debug_info": {
        "goal": "\u03b1 : Type\nx y : Erased \u03b1\n\u22a2 \u2191x = \u2191y \u2192 x = y",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/SciLean/Modules/Prob/Erased.lean#L18"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2024-02-08T10:58:37-05:00",
        "inclusion_date": "2025-05-29T05:45:13.961831+00:00"
      },
      "id": "d95d2b28923d5acab74c10e0cd02c67d503d88c285e1d739c64a6d33a604fe2a"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "SciLean/Modules/Prob/Erased.lean",
        "start_line": 25,
        "start_column": 56,
        "end_line": 25,
        "end_column": 61
      },
      "debug_info": {
        "goal": "\u03b1 : Type\nx : \u03b1\n\u22a2 \u2191(erase x) = x",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/SciLean/Modules/Prob/Erased.lean#L25"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2024-02-08T10:58:37-05:00",
        "inclusion_date": "2025-05-29T05:45:13.961831+00:00"
      },
      "id": "d0806764df9631774d819e99b02e32abcceb28e50f1c5195ed7c7ed9ceb9ae42"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "SciLean/Modules/Prob/TestFunctionExtension.lean",
        "start_line": 23,
        "start_column": 15,
        "end_line": 23,
        "end_column": 20
      },
      "debug_info": {
        "goal": "X : Sort u_1\nY : Type u_2\ninst\u271d\u00b9 : NormedAddCommGroup Y\ninst\u271d : NormedSpace \u211d Y\nF : (X \u2192 \u211d) \u2192 \u211d\n\u03c6 : X \u2192 \u211d\ny : Y\n\u22a2 (testFunctionExtension F fun x => \u03c6 x \u2022 y) = F \u03c6 \u2022 y",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/SciLean/Modules/Prob/TestFunctionExtension.lean#L23"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2024-02-08T10:58:37-05:00",
        "inclusion_date": "2025-05-29T05:45:13.961831+00:00"
      },
      "id": "9976edfd75788d3dc0c71c4c4a46b38ea4a270f563b97cb44d917f295408e866"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "SciLean/Modules/Prob/TestFunctionExtension.lean",
        "start_line": 36,
        "start_column": 11,
        "end_line": 36,
        "end_column": 16
      },
      "debug_info": {
        "goal": "X : Sort u_1\nY : Type u_2\ninst\u271d\u00b9 : NormedAddCommGroup Y\ninst\u271d : NormedSpace \u211d Y\nF : (X \u2192 \u211d) \u2192 \u211d\nG : (X \u2192 Y) \u2192 Y\nf : X \u2192 Y\nh : \u2200 (\u03c6 : X \u2192 \u211d) (y : Y), F \u03c6 \u2022 y = G fun x => \u03c6 x \u2022 y\n\u22a2 testFunctionExtension F f = G f",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/SciLean/Modules/Prob/TestFunctionExtension.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2024-02-08T10:58:37-05:00",
        "inclusion_date": "2025-05-29T05:45:13.961831+00:00"
      },
      "id": "29518c5d6253911c7eb3fa92f134ea72db67c78dfd03bdcb61589c8a8ed8868f"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "SciLean/Modules/Prob/DerivUnderIntegralSign.lean",
        "start_line": 32,
        "start_column": 41,
        "end_line": 32,
        "end_column": 46
      },
      "debug_info": {
        "goal": "X : Type u_2\ninst\u271d\u00b3 : NormedAddCommGroup X\ninst\u271d\u00b2 : NormedSpace \u211d X\nY : Type u_1\nx\u271d : MeasurableSpace Y\nZ : Type u_3\ninst\u271d\u00b9 : NormedAddCommGroup Z\ninst\u271d : NormedSpace \u211d Z\n\u03bc : X \u2192 Measure Y\nf : X \u2192 Y \u2192 Z\nx dx : X\nh : DifferentiableUnderIntegralAt f \u03bc x\n\u22a2 (fderiv \u211d (fun x => \u222b (y : Y), f x y \u2202\u03bc x) x) dx =\n    (fderiv \u211d (fun x' => \u222b (y : Y), f x y \u2202\u03bc x') x) dx + \u222b (y : Y), (fderiv \u211d (fun x => f x y) x) dx \u2202\u03bc x",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/SciLean/Modules/Prob/DerivUnderIntegralSign.lean#L32"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2024-02-12T01:13:42+01:00",
        "inclusion_date": "2025-05-29T05:45:13.961831+00:00"
      },
      "id": "e66469233f8695318fb5a7795a86667299fdda620175d88571bb47deba716703"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 499,
        "start_column": 8,
        "end_line": 499,
        "end_column": 13
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097 : \u2200 (i : \u2191X\u2097) (j : \u2191Y\u2097), B\u2097 i j \u2208 SignType.cast.range\nhB\u1d63 : \u2200 (i : \u2191X\u1d63) (j : \u2191Y\u1d63), B\u1d63 i j \u2208 SignType.cast.range\nx\u2080\u2097 : \u2191X\u2097 := \u27e8x\u2080, \u22ef\u27e9\nx\u2080\u1d63 : \u2191X\u1d63 := \u27e8x\u2080, \u22ef\u27e9\nx\u2081\u2097 : \u2191X\u2097 := \u27e8x\u2081, \u22ef\u27e9\nx\u2081\u1d63 : \u2191X\u1d63 := \u27e8x\u2081, \u22ef\u27e9\nx\u2082\u2097 : \u2191X\u2097 := \u27e8x\u2082, \u22ef\u27e9\nx\u2082\u1d63 : \u2191X\u1d63 := \u27e8x\u2082, \u22ef\u27e9\ny\u2080\u2097 : \u2191Y\u2097 := \u27e8y\u2080, \u22ef\u27e9\ny\u2080\u1d63 : \u2191Y\u1d63 := \u27e8y\u2080, \u22ef\u27e9\ny\u2081\u2097 : \u2191Y\u2097 := \u27e8y\u2081, \u22ef\u27e9\ny\u2081\u1d63 : \u2191Y\u1d63 := \u27e8y\u2081, \u22ef\u27e9\ny\u2082\u2097 : \u2191Y\u2097 := \u27e8y\u2082, \u22ef\u27e9\ny\u2082\u1d63 : \u2191Y\u1d63 := \u27e8y\u2082, \u22ef\u27e9\nA\u2097 : Matrix (\u2191(X\u2097.drop2 x\u2080\u2097 x\u2081\u2097)) (\u2191(Y\u2097.drop1 y\u2082\u2097)) Z2 := B\u2097.support.A\u2097 x\u2080\u2097 x\u2081\u2097 y\u2082\u2097\nD\u2097 : Matrix (Fin 2) (\u2191(Y\u2097.drop3 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097)) Z2 := B\u2097.support.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097\nD\u2080 : Matrix (Fin 2) (Fin 2) Z2 := B\u2097.support.D\u2080 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097\nD\u1d63 : Matrix (\u2191(X\u1d63.drop3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63)) (Fin 2) Z2 := B\u1d63.support.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nA\u1d63 : Matrix (\u2191(X\u1d63.drop1 x\u2082\u1d63)) (\u2191(Y\u1d63.drop2 y\u2080\u1d63 y\u2081\u1d63)) Z2 := B\u1d63.support.A\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nhB\u2097\u2080\u2080 : |B\u2097 x\u2080\u2097 y\u2080\u2097| = 1\nhB\u2097\u2080\u2082 : |B\u2097 x\u2080\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2080 : |B\u2097 x\u2082\u2097 y\u2080\u2097| = 1\nhB\u2097\u2081\u2082 : |B\u2097 x\u2081\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2081 : |B\u2097 x\u2082\u2097 y\u2081\u2097| = 1\nhB\u1d63\u2080\u2080 : |B\u1d63 x\u2080\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2080\u2082 : |B\u1d63 x\u2080\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2080 : |B\u1d63 x\u2082\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2081\u2082 : |B\u1d63 x\u2081\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2081 : |B\u1d63 x\u2082\u1d63 y\u2081\u1d63| = 1\ni\u1d63 : \u2191(X\u1d63.drop1 \u27e8x\u2082, \u22ef\u27e9)\nj\u2097 : \u2191(Y\u2097.drop1 \u27e8y\u2082, \u22ef\u27e9)\nhx\u2080 : \u00ac\u2191i\u1d63 = x\u2080\nhx\u2081 : \u00ac\u2191i\u1d63 = x\u2081\nhx\u2082 : \u2191i\u1d63 \u2260 x\u2082\nhX\u1d63 : \u2191i\u1d63 \u2208 X\u1d63\nhy\u2080 : \u00ac\u2191j\u2097 = y\u2080\nhy\u2081 : \u00ac\u2191j\u2097 = y\u2081\nhy\u2082 : \u2191j\u2097 \u2260 y\u2082\nhY\u2097 : \u2191j\u2097 \u2208 Y\u2097\n\u22a2 |((Matrix.of fun i =>\n              ![B\u1d63.toCanonicalSigning \u27e8x\u2080, \u22ef\u27e9 \u27e8x\u2081, \u22ef\u27e9 \u27e8x\u2082, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9 \u27e8y\u2082, \u22ef\u27e9 \u27e8\u2191i, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9,\n                B\u1d63.toCanonicalSigning \u27e8x\u2080, \u22ef\u27e9 \u27e8x\u2081, \u22ef\u27e9 \u27e8x\u2082, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9 \u27e8y\u2082, \u22ef\u27e9 \u27e8\u2191i, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9]) *\n            !![B\u2097.toCanonicalSigning \u27e8x\u2080, \u22ef\u27e9 \u27e8x\u2081, \u22ef\u27e9 \u27e8x\u2082, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9 \u27e8y\u2082, \u22ef\u27e9 \u27e8x\u2080, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9,\n                  B\u2097.toCanonicalSigning \u27e8x\u2080, \u22ef\u27e9 \u27e8x\u2081, \u22ef\u27e9 \u27e8x\u2082, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9 \u27e8y\u2082, \u22ef\u27e9 \u27e8x\u2080, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9;\n                B\u2097.toCanonicalSigning \u27e8x\u2080, \u22ef\u27e9 \u27e8x\u2081, \u22ef\u27e9 \u27e8x\u2082, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9 \u27e8y\u2082, \u22ef\u27e9 \u27e8x\u2081, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9,\n                  B\u2097.toCanonicalSigning \u27e8x\u2080, \u22ef\u27e9 \u27e8x\u2081, \u22ef\u27e9 \u27e8x\u2082, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9 \u27e8y\u2082, \u22ef\u27e9 \u27e8x\u2081, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9]\u207b\u00b9 *\n          ![B\u2097.toCanonicalSigning \u27e8x\u2080, \u22ef\u27e9 \u27e8x\u2081, \u22ef\u27e9 \u27e8x\u2082, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9 \u27e8y\u2082, \u22ef\u27e9 \u27e8x\u2080, \u22ef\u27e9 \u2218 \u22ef.elem,\n            B\u2097.toCanonicalSigning \u27e8x\u2080, \u22ef\u27e9 \u27e8x\u2081, \u22ef\u27e9 \u27e8x\u2082, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9 \u27e8y\u2082, \u22ef\u27e9 \u27e8x\u2081, \u22ef\u27e9 \u2218 \u22ef.elem])\n        \u27e8\u2191i\u1d63, \u22ef\u27e9 \u27e8\u2191j\u2097, \u22ef\u27e9| =\n    (((Matrix.of fun i => ![if B\u1d63 \u27e8\u2191i, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9 = 0 then 0 else 1, if B\u1d63 \u27e8\u2191i, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9 = 0 then 0 else 1]) *\n            !![if B\u2097 \u27e8x\u2080, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9 = 0 then 0 else 1, if B\u2097 \u27e8x\u2080, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9 = 0 then 0 else 1;\n                if B\u2097 \u27e8x\u2081, \u22ef\u27e9 \u27e8y\u2080, \u22ef\u27e9 = 0 then 0 else 1, if B\u2097 \u27e8x\u2081, \u22ef\u27e9 \u27e8y\u2081, \u22ef\u27e9 = 0 then 0 else 1]\u207b\u00b9 *\n          ![Matrix.of (fun x1 x2 => if B\u2097 x1 x2 = 0 then 0 else 1) \u27e8x\u2080, \u22ef\u27e9 \u2218 \u22ef.elem,\n            Matrix.of (fun x1 x2 => if B\u2097 x1 x2 = 0 then 0 else 1) \u27e8x\u2081, \u22ef\u27e9 \u2218 \u22ef.elem])\n        \u27e8\u2191i\u1d63, \u22ef\u27e9 \u27e8\u2191j\u2097, \u22ef\u27e9).cast",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L499"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-29T11:00:39+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "11e1ec8d2e4b4886409fb76b3af5f2dc146fd7aaa35fcc69a49c7e1c3d6dd965"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 446,
        "start_column": 30,
        "end_line": 446,
        "end_column": 35
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097 : \u2200 (i : \u2191X\u2097) (j : \u2191Y\u2097), B\u2097 i j \u2208 SignType.cast.range\nhB\u1d63 : \u2200 (i : \u2191X\u1d63) (j : \u2191Y\u1d63), B\u1d63 i j \u2208 SignType.cast.range\nx\u2080\u2097 : \u2191X\u2097 := \u27e8x\u2080, \u22ef\u27e9\nx\u2080\u1d63 : \u2191X\u1d63 := \u27e8x\u2080, \u22ef\u27e9\nx\u2081\u2097 : \u2191X\u2097 := \u27e8x\u2081, \u22ef\u27e9\nx\u2081\u1d63 : \u2191X\u1d63 := \u27e8x\u2081, \u22ef\u27e9\nx\u2082\u2097 : \u2191X\u2097 := \u27e8x\u2082, \u22ef\u27e9\nx\u2082\u1d63 : \u2191X\u1d63 := \u27e8x\u2082, \u22ef\u27e9\ny\u2080\u2097 : \u2191Y\u2097 := \u27e8y\u2080, \u22ef\u27e9\ny\u2080\u1d63 : \u2191Y\u1d63 := \u27e8y\u2080, \u22ef\u27e9\ny\u2081\u2097 : \u2191Y\u2097 := \u27e8y\u2081, \u22ef\u27e9\ny\u2081\u1d63 : \u2191Y\u1d63 := \u27e8y\u2081, \u22ef\u27e9\ny\u2082\u2097 : \u2191Y\u2097 := \u27e8y\u2082, \u22ef\u27e9\ny\u2082\u1d63 : \u2191Y\u1d63 := \u27e8y\u2082, \u22ef\u27e9\nA\u2097 : Matrix (\u2191(X\u2097.drop2 x\u2080\u2097 x\u2081\u2097)) (\u2191(Y\u2097.drop1 y\u2082\u2097)) Z2 := B\u2097.support.A\u2097 x\u2080\u2097 x\u2081\u2097 y\u2082\u2097\nD\u2097 : Matrix (Fin 2) (\u2191(Y\u2097.drop3 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097)) Z2 := B\u2097.support.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097\nD\u2080 : Matrix (Fin 2) (Fin 2) Z2 := B\u2097.support.D\u2080 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097\nD\u1d63 : Matrix (\u2191(X\u1d63.drop3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63)) (Fin 2) Z2 := B\u1d63.support.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nA\u1d63 : Matrix (\u2191(X\u1d63.drop1 x\u2082\u1d63)) (\u2191(Y\u1d63.drop2 y\u2080\u1d63 y\u2081\u1d63)) Z2 := B\u1d63.support.A\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nhB\u2097\u2080\u2080 : |B\u2097 x\u2080\u2097 y\u2080\u2097| = 1\nhB\u2097\u2080\u2082 : |B\u2097 x\u2080\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2080 : |B\u2097 x\u2082\u2097 y\u2080\u2097| = 1\nhB\u2097\u2081\u2082 : |B\u2097 x\u2081\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2081 : |B\u2097 x\u2082\u2097 y\u2081\u2097| = 1\nhB\u1d63\u2080\u2080 : |B\u1d63 x\u2080\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2080\u2082 : |B\u1d63 x\u2080\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2080 : |B\u1d63 x\u2082\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2081\u2082 : |B\u1d63 x\u2081\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2081 : |B\u1d63 x\u2082\u1d63 y\u2081\u1d63| = 1\ni\u1d63 : \u2191(X\u1d63.drop1 \u27e8x\u2082, \u22ef\u27e9)\nj\u2097 : \u2191(Y\u2097.drop1 \u27e8y\u2082, \u22ef\u27e9)\nhx\u2080 : \u2191i\u1d63 = x\u2080\nhy\u2080 : \u00ac\u2191j\u2097 = y\u2080\nhy\u2081 : \u2191j\u2097 = y\u2081\n\u22a2 y\u2081 \u2260 y\u2080",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L446"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-29T11:00:39+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "18f7fbff9ec4009531a4a4551a66a51cd3971e5c0774a46d869bf0f2db863f16"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 452,
        "start_column": 34,
        "end_line": 452,
        "end_column": 39
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097 : \u2200 (i : \u2191X\u2097) (j : \u2191Y\u2097), B\u2097 i j \u2208 SignType.cast.range\nhB\u1d63 : \u2200 (i : \u2191X\u1d63) (j : \u2191Y\u1d63), B\u1d63 i j \u2208 SignType.cast.range\nx\u2080\u2097 : \u2191X\u2097 := \u27e8x\u2080, \u22ef\u27e9\nx\u2080\u1d63 : \u2191X\u1d63 := \u27e8x\u2080, \u22ef\u27e9\nx\u2081\u2097 : \u2191X\u2097 := \u27e8x\u2081, \u22ef\u27e9\nx\u2081\u1d63 : \u2191X\u1d63 := \u27e8x\u2081, \u22ef\u27e9\nx\u2082\u2097 : \u2191X\u2097 := \u27e8x\u2082, \u22ef\u27e9\nx\u2082\u1d63 : \u2191X\u1d63 := \u27e8x\u2082, \u22ef\u27e9\ny\u2080\u2097 : \u2191Y\u2097 := \u27e8y\u2080, \u22ef\u27e9\ny\u2080\u1d63 : \u2191Y\u1d63 := \u27e8y\u2080, \u22ef\u27e9\ny\u2081\u2097 : \u2191Y\u2097 := \u27e8y\u2081, \u22ef\u27e9\ny\u2081\u1d63 : \u2191Y\u1d63 := \u27e8y\u2081, \u22ef\u27e9\ny\u2082\u2097 : \u2191Y\u2097 := \u27e8y\u2082, \u22ef\u27e9\ny\u2082\u1d63 : \u2191Y\u1d63 := \u27e8y\u2082, \u22ef\u27e9\nA\u2097 : Matrix (\u2191(X\u2097.drop2 x\u2080\u2097 x\u2081\u2097)) (\u2191(Y\u2097.drop1 y\u2082\u2097)) Z2 := B\u2097.support.A\u2097 x\u2080\u2097 x\u2081\u2097 y\u2082\u2097\nD\u2097 : Matrix (Fin 2) (\u2191(Y\u2097.drop3 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097)) Z2 := B\u2097.support.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097\nD\u2080 : Matrix (Fin 2) (Fin 2) Z2 := B\u2097.support.D\u2080 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097\nD\u1d63 : Matrix (\u2191(X\u1d63.drop3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63)) (Fin 2) Z2 := B\u1d63.support.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nA\u1d63 : Matrix (\u2191(X\u1d63.drop1 x\u2082\u1d63)) (\u2191(Y\u1d63.drop2 y\u2080\u1d63 y\u2081\u1d63)) Z2 := B\u1d63.support.A\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nhB\u2097\u2080\u2080 : |B\u2097 x\u2080\u2097 y\u2080\u2097| = 1\nhB\u2097\u2080\u2082 : |B\u2097 x\u2080\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2080 : |B\u2097 x\u2082\u2097 y\u2080\u2097| = 1\nhB\u2097\u2081\u2082 : |B\u2097 x\u2081\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2081 : |B\u2097 x\u2082\u2097 y\u2081\u2097| = 1\nhB\u1d63\u2080\u2080 : |B\u1d63 x\u2080\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2080\u2082 : |B\u1d63 x\u2080\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2080 : |B\u1d63 x\u2082\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2081\u2082 : |B\u1d63 x\u2081\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2081 : |B\u1d63 x\u2082\u1d63 y\u2081\u1d63| = 1\ni\u1d63 : \u2191(X\u1d63.drop1 \u27e8x\u2082, \u22ef\u27e9)\nj\u2097 : \u2191(Y\u2097.drop1 \u27e8y\u2082, \u22ef\u27e9)\nhx\u2080 : \u2191i\u1d63 = x\u2080\nhy\u2080 : \u00ac\u2191j\u2097 = y\u2080\nhy\u2081 : \u00ac\u2191j\u2097 = y\u2081\n\u22a2 \u2191j\u2097 \u2260 y\u2082",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L452"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-29T11:00:39+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "0aa85f3797b74bccfb28b61c4ce8718a2cc981388a2d03fe37723c99990ed68d"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 453,
        "start_column": 34,
        "end_line": 453,
        "end_column": 39
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097 : \u2200 (i : \u2191X\u2097) (j : \u2191Y\u2097), B\u2097 i j \u2208 SignType.cast.range\nhB\u1d63 : \u2200 (i : \u2191X\u1d63) (j : \u2191Y\u1d63), B\u1d63 i j \u2208 SignType.cast.range\nx\u2080\u2097 : \u2191X\u2097 := \u27e8x\u2080, \u22ef\u27e9\nx\u2080\u1d63 : \u2191X\u1d63 := \u27e8x\u2080, \u22ef\u27e9\nx\u2081\u2097 : \u2191X\u2097 := \u27e8x\u2081, \u22ef\u27e9\nx\u2081\u1d63 : \u2191X\u1d63 := \u27e8x\u2081, \u22ef\u27e9\nx\u2082\u2097 : \u2191X\u2097 := \u27e8x\u2082, \u22ef\u27e9\nx\u2082\u1d63 : \u2191X\u1d63 := \u27e8x\u2082, \u22ef\u27e9\ny\u2080\u2097 : \u2191Y\u2097 := \u27e8y\u2080, \u22ef\u27e9\ny\u2080\u1d63 : \u2191Y\u1d63 := \u27e8y\u2080, \u22ef\u27e9\ny\u2081\u2097 : \u2191Y\u2097 := \u27e8y\u2081, \u22ef\u27e9\ny\u2081\u1d63 : \u2191Y\u1d63 := \u27e8y\u2081, \u22ef\u27e9\ny\u2082\u2097 : \u2191Y\u2097 := \u27e8y\u2082, \u22ef\u27e9\ny\u2082\u1d63 : \u2191Y\u1d63 := \u27e8y\u2082, \u22ef\u27e9\nA\u2097 : Matrix (\u2191(X\u2097.drop2 x\u2080\u2097 x\u2081\u2097)) (\u2191(Y\u2097.drop1 y\u2082\u2097)) Z2 := B\u2097.support.A\u2097 x\u2080\u2097 x\u2081\u2097 y\u2082\u2097\nD\u2097 : Matrix (Fin 2) (\u2191(Y\u2097.drop3 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097)) Z2 := B\u2097.support.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097\nD\u2080 : Matrix (Fin 2) (Fin 2) Z2 := B\u2097.support.D\u2080 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097\nD\u1d63 : Matrix (\u2191(X\u1d63.drop3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63)) (Fin 2) Z2 := B\u1d63.support.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nA\u1d63 : Matrix (\u2191(X\u1d63.drop1 x\u2082\u1d63)) (\u2191(Y\u1d63.drop2 y\u2080\u1d63 y\u2081\u1d63)) Z2 := B\u1d63.support.A\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nhB\u2097\u2080\u2080 : |B\u2097 x\u2080\u2097 y\u2080\u2097| = 1\nhB\u2097\u2080\u2082 : |B\u2097 x\u2080\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2080 : |B\u2097 x\u2082\u2097 y\u2080\u2097| = 1\nhB\u2097\u2081\u2082 : |B\u2097 x\u2081\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2081 : |B\u2097 x\u2082\u2097 y\u2081\u2097| = 1\nhB\u1d63\u2080\u2080 : |B\u1d63 x\u2080\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2080\u2082 : |B\u1d63 x\u2080\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2080 : |B\u1d63 x\u2082\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2081\u2082 : |B\u1d63 x\u2081\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2081 : |B\u1d63 x\u2082\u1d63 y\u2081\u1d63| = 1\ni\u1d63 : \u2191(X\u1d63.drop1 \u27e8x\u2082, \u22ef\u27e9)\nj\u2097 : \u2191(Y\u2097.drop1 \u27e8y\u2082, \u22ef\u27e9)\nhx\u2080 : \u2191i\u1d63 = x\u2080\nhy\u2080 : \u00ac\u2191j\u2097 = y\u2080\nhy\u2081 : \u00ac\u2191j\u2097 = y\u2081\nhy\u2082 : \u2191j\u2097 \u2260 y\u2082\n\u22a2 \u2191j\u2097 \u2208 Y\u2097",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L453"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-29T11:00:39+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "940ecd6083f5cbbce6c3eadbf4c722187257049170f3cd7227daf6d23f546440"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 459,
        "start_column": 28,
        "end_line": 459,
        "end_column": 33
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097 : \u2200 (i : \u2191X\u2097) (j : \u2191Y\u2097), B\u2097 i j \u2208 SignType.cast.range\nhB\u1d63 : \u2200 (i : \u2191X\u1d63) (j : \u2191Y\u1d63), B\u1d63 i j \u2208 SignType.cast.range\nx\u2080\u2097 : \u2191X\u2097 := \u27e8x\u2080, \u22ef\u27e9\nx\u2080\u1d63 : \u2191X\u1d63 := \u27e8x\u2080, \u22ef\u27e9\nx\u2081\u2097 : \u2191X\u2097 := \u27e8x\u2081, \u22ef\u27e9\nx\u2081\u1d63 : \u2191X\u1d63 := \u27e8x\u2081, \u22ef\u27e9\nx\u2082\u2097 : \u2191X\u2097 := \u27e8x\u2082, \u22ef\u27e9\nx\u2082\u1d63 : \u2191X\u1d63 := \u27e8x\u2082, \u22ef\u27e9\ny\u2080\u2097 : \u2191Y\u2097 := \u27e8y\u2080, \u22ef\u27e9\ny\u2080\u1d63 : \u2191Y\u1d63 := \u27e8y\u2080, \u22ef\u27e9\ny\u2081\u2097 : \u2191Y\u2097 := \u27e8y\u2081, \u22ef\u27e9\ny\u2081\u1d63 : \u2191Y\u1d63 := \u27e8y\u2081, \u22ef\u27e9\ny\u2082\u2097 : \u2191Y\u2097 := \u27e8y\u2082, \u22ef\u27e9\ny\u2082\u1d63 : \u2191Y\u1d63 := \u27e8y\u2082, \u22ef\u27e9\nA\u2097 : Matrix (\u2191(X\u2097.drop2 x\u2080\u2097 x\u2081\u2097)) (\u2191(Y\u2097.drop1 y\u2082\u2097)) Z2 := B\u2097.support.A\u2097 x\u2080\u2097 x\u2081\u2097 y\u2082\u2097\nD\u2097 : Matrix (Fin 2) (\u2191(Y\u2097.drop3 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097)) Z2 := B\u2097.support.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097\nD\u2080 : Matrix (Fin 2) (Fin 2) Z2 := B\u2097.support.D\u2080 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097\nD\u1d63 : Matrix (\u2191(X\u1d63.drop3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63)) (Fin 2) Z2 := B\u1d63.support.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nA\u1d63 : Matrix (\u2191(X\u1d63.drop1 x\u2082\u1d63)) (\u2191(Y\u1d63.drop2 y\u2080\u1d63 y\u2081\u1d63)) Z2 := B\u1d63.support.A\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nhB\u2097\u2080\u2080 : |B\u2097 x\u2080\u2097 y\u2080\u2097| = 1\nhB\u2097\u2080\u2082 : |B\u2097 x\u2080\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2080 : |B\u2097 x\u2082\u2097 y\u2080\u2097| = 1\nhB\u2097\u2081\u2082 : |B\u2097 x\u2081\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2081 : |B\u2097 x\u2082\u2097 y\u2081\u2097| = 1\nhB\u1d63\u2080\u2080 : |B\u1d63 x\u2080\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2080\u2082 : |B\u1d63 x\u2080\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2080 : |B\u1d63 x\u2082\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2081\u2082 : |B\u1d63 x\u2081\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2081 : |B\u1d63 x\u2082\u1d63 y\u2081\u1d63| = 1\ni\u1d63 : \u2191(X\u1d63.drop1 \u27e8x\u2082, \u22ef\u27e9)\nj\u2097 : \u2191(Y\u2097.drop1 \u27e8y\u2082, \u22ef\u27e9)\nhx\u2080 : \u00ac\u2191i\u1d63 = x\u2080\nhx\u2081 : \u2191i\u1d63 = x\u2081\n\u22a2 x\u2081 \u2260 x\u2080",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L459"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-29T11:00:39+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "b65b5328f2ad70e7cd1fc36a6aafa74ebc7b70332264d6d3e6a4492fd5e4e758"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 466,
        "start_column": 30,
        "end_line": 466,
        "end_column": 35
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097 : \u2200 (i : \u2191X\u2097) (j : \u2191Y\u2097), B\u2097 i j \u2208 SignType.cast.range\nhB\u1d63 : \u2200 (i : \u2191X\u1d63) (j : \u2191Y\u1d63), B\u1d63 i j \u2208 SignType.cast.range\nx\u2080\u2097 : \u2191X\u2097 := \u27e8x\u2080, \u22ef\u27e9\nx\u2080\u1d63 : \u2191X\u1d63 := \u27e8x\u2080, \u22ef\u27e9\nx\u2081\u2097 : \u2191X\u2097 := \u27e8x\u2081, \u22ef\u27e9\nx\u2081\u1d63 : \u2191X\u1d63 := \u27e8x\u2081, \u22ef\u27e9\nx\u2082\u2097 : \u2191X\u2097 := \u27e8x\u2082, \u22ef\u27e9\nx\u2082\u1d63 : \u2191X\u1d63 := \u27e8x\u2082, \u22ef\u27e9\ny\u2080\u2097 : \u2191Y\u2097 := \u27e8y\u2080, \u22ef\u27e9\ny\u2080\u1d63 : \u2191Y\u1d63 := \u27e8y\u2080, \u22ef\u27e9\ny\u2081\u2097 : \u2191Y\u2097 := \u27e8y\u2081, \u22ef\u27e9\ny\u2081\u1d63 : \u2191Y\u1d63 := \u27e8y\u2081, \u22ef\u27e9\ny\u2082\u2097 : \u2191Y\u2097 := \u27e8y\u2082, \u22ef\u27e9\ny\u2082\u1d63 : \u2191Y\u1d63 := \u27e8y\u2082, \u22ef\u27e9\nA\u2097 : Matrix (\u2191(X\u2097.drop2 x\u2080\u2097 x\u2081\u2097)) (\u2191(Y\u2097.drop1 y\u2082\u2097)) Z2 := B\u2097.support.A\u2097 x\u2080\u2097 x\u2081\u2097 y\u2082\u2097\nD\u2097 : Matrix (Fin 2) (\u2191(Y\u2097.drop3 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097)) Z2 := B\u2097.support.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097\nD\u2080 : Matrix (Fin 2) (Fin 2) Z2 := B\u2097.support.D\u2080 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097\nD\u1d63 : Matrix (\u2191(X\u1d63.drop3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63)) (Fin 2) Z2 := B\u1d63.support.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nA\u1d63 : Matrix (\u2191(X\u1d63.drop1 x\u2082\u1d63)) (\u2191(Y\u1d63.drop2 y\u2080\u1d63 y\u2081\u1d63)) Z2 := B\u1d63.support.A\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nhB\u2097\u2080\u2080 : |B\u2097 x\u2080\u2097 y\u2080\u2097| = 1\nhB\u2097\u2080\u2082 : |B\u2097 x\u2080\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2080 : |B\u2097 x\u2082\u2097 y\u2080\u2097| = 1\nhB\u2097\u2081\u2082 : |B\u2097 x\u2081\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2081 : |B\u2097 x\u2082\u2097 y\u2081\u2097| = 1\nhB\u1d63\u2080\u2080 : |B\u1d63 x\u2080\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2080\u2082 : |B\u1d63 x\u2080\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2080 : |B\u1d63 x\u2082\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2081\u2082 : |B\u1d63 x\u2081\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2081 : |B\u1d63 x\u2082\u1d63 y\u2081\u1d63| = 1\ni\u1d63 : \u2191(X\u1d63.drop1 \u27e8x\u2082, \u22ef\u27e9)\nj\u2097 : \u2191(Y\u2097.drop1 \u27e8y\u2082, \u22ef\u27e9)\nhx\u2080 : \u00ac\u2191i\u1d63 = x\u2080\nhx\u2081 : \u2191i\u1d63 = x\u2081\nhxx : x\u2081 \u2260 x\u2080\nhy\u2080 : \u00ac\u2191j\u2097 = y\u2080\nhy\u2081 : \u2191j\u2097 = y\u2081\n\u22a2 y\u2081 \u2260 y\u2080",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L466"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-29T11:00:39+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "9782c680e030da2e9cfd1c68a6dfcf00e1f9d9a30f336cc28fa5cb33d4936169"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 472,
        "start_column": 34,
        "end_line": 472,
        "end_column": 39
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097 : \u2200 (i : \u2191X\u2097) (j : \u2191Y\u2097), B\u2097 i j \u2208 SignType.cast.range\nhB\u1d63 : \u2200 (i : \u2191X\u1d63) (j : \u2191Y\u1d63), B\u1d63 i j \u2208 SignType.cast.range\nx\u2080\u2097 : \u2191X\u2097 := \u27e8x\u2080, \u22ef\u27e9\nx\u2080\u1d63 : \u2191X\u1d63 := \u27e8x\u2080, \u22ef\u27e9\nx\u2081\u2097 : \u2191X\u2097 := \u27e8x\u2081, \u22ef\u27e9\nx\u2081\u1d63 : \u2191X\u1d63 := \u27e8x\u2081, \u22ef\u27e9\nx\u2082\u2097 : \u2191X\u2097 := \u27e8x\u2082, \u22ef\u27e9\nx\u2082\u1d63 : \u2191X\u1d63 := \u27e8x\u2082, \u22ef\u27e9\ny\u2080\u2097 : \u2191Y\u2097 := \u27e8y\u2080, \u22ef\u27e9\ny\u2080\u1d63 : \u2191Y\u1d63 := \u27e8y\u2080, \u22ef\u27e9\ny\u2081\u2097 : \u2191Y\u2097 := \u27e8y\u2081, \u22ef\u27e9\ny\u2081\u1d63 : \u2191Y\u1d63 := \u27e8y\u2081, \u22ef\u27e9\ny\u2082\u2097 : \u2191Y\u2097 := \u27e8y\u2082, \u22ef\u27e9\ny\u2082\u1d63 : \u2191Y\u1d63 := \u27e8y\u2082, \u22ef\u27e9\nA\u2097 : Matrix (\u2191(X\u2097.drop2 x\u2080\u2097 x\u2081\u2097)) (\u2191(Y\u2097.drop1 y\u2082\u2097)) Z2 := B\u2097.support.A\u2097 x\u2080\u2097 x\u2081\u2097 y\u2082\u2097\nD\u2097 : Matrix (Fin 2) (\u2191(Y\u2097.drop3 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097)) Z2 := B\u2097.support.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097\nD\u2080 : Matrix (Fin 2) (Fin 2) Z2 := B\u2097.support.D\u2080 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097\nD\u1d63 : Matrix (\u2191(X\u1d63.drop3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63)) (Fin 2) Z2 := B\u1d63.support.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nA\u1d63 : Matrix (\u2191(X\u1d63.drop1 x\u2082\u1d63)) (\u2191(Y\u1d63.drop2 y\u2080\u1d63 y\u2081\u1d63)) Z2 := B\u1d63.support.A\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nhB\u2097\u2080\u2080 : |B\u2097 x\u2080\u2097 y\u2080\u2097| = 1\nhB\u2097\u2080\u2082 : |B\u2097 x\u2080\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2080 : |B\u2097 x\u2082\u2097 y\u2080\u2097| = 1\nhB\u2097\u2081\u2082 : |B\u2097 x\u2081\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2081 : |B\u2097 x\u2082\u2097 y\u2081\u2097| = 1\nhB\u1d63\u2080\u2080 : |B\u1d63 x\u2080\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2080\u2082 : |B\u1d63 x\u2080\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2080 : |B\u1d63 x\u2082\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2081\u2082 : |B\u1d63 x\u2081\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2081 : |B\u1d63 x\u2082\u1d63 y\u2081\u1d63| = 1\ni\u1d63 : \u2191(X\u1d63.drop1 \u27e8x\u2082, \u22ef\u27e9)\nj\u2097 : \u2191(Y\u2097.drop1 \u27e8y\u2082, \u22ef\u27e9)\nhx\u2080 : \u00ac\u2191i\u1d63 = x\u2080\nhx\u2081 : \u2191i\u1d63 = x\u2081\nhxx : x\u2081 \u2260 x\u2080\nhy\u2080 : \u00ac\u2191j\u2097 = y\u2080\nhy\u2081 : \u00ac\u2191j\u2097 = y\u2081\n\u22a2 \u2191j\u2097 \u2260 y\u2082",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L472"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-29T11:00:39+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "223653f988023d4bddc7de54bd029f125aeed55b7ee8da73a16060cf51e8ee5c"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 473,
        "start_column": 34,
        "end_line": 473,
        "end_column": 39
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097 : \u2200 (i : \u2191X\u2097) (j : \u2191Y\u2097), B\u2097 i j \u2208 SignType.cast.range\nhB\u1d63 : \u2200 (i : \u2191X\u1d63) (j : \u2191Y\u1d63), B\u1d63 i j \u2208 SignType.cast.range\nx\u2080\u2097 : \u2191X\u2097 := \u27e8x\u2080, \u22ef\u27e9\nx\u2080\u1d63 : \u2191X\u1d63 := \u27e8x\u2080, \u22ef\u27e9\nx\u2081\u2097 : \u2191X\u2097 := \u27e8x\u2081, \u22ef\u27e9\nx\u2081\u1d63 : \u2191X\u1d63 := \u27e8x\u2081, \u22ef\u27e9\nx\u2082\u2097 : \u2191X\u2097 := \u27e8x\u2082, \u22ef\u27e9\nx\u2082\u1d63 : \u2191X\u1d63 := \u27e8x\u2082, \u22ef\u27e9\ny\u2080\u2097 : \u2191Y\u2097 := \u27e8y\u2080, \u22ef\u27e9\ny\u2080\u1d63 : \u2191Y\u1d63 := \u27e8y\u2080, \u22ef\u27e9\ny\u2081\u2097 : \u2191Y\u2097 := \u27e8y\u2081, \u22ef\u27e9\ny\u2081\u1d63 : \u2191Y\u1d63 := \u27e8y\u2081, \u22ef\u27e9\ny\u2082\u2097 : \u2191Y\u2097 := \u27e8y\u2082, \u22ef\u27e9\ny\u2082\u1d63 : \u2191Y\u1d63 := \u27e8y\u2082, \u22ef\u27e9\nA\u2097 : Matrix (\u2191(X\u2097.drop2 x\u2080\u2097 x\u2081\u2097)) (\u2191(Y\u2097.drop1 y\u2082\u2097)) Z2 := B\u2097.support.A\u2097 x\u2080\u2097 x\u2081\u2097 y\u2082\u2097\nD\u2097 : Matrix (Fin 2) (\u2191(Y\u2097.drop3 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097)) Z2 := B\u2097.support.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097\nD\u2080 : Matrix (Fin 2) (Fin 2) Z2 := B\u2097.support.D\u2080 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097\nD\u1d63 : Matrix (\u2191(X\u1d63.drop3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63)) (Fin 2) Z2 := B\u1d63.support.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nA\u1d63 : Matrix (\u2191(X\u1d63.drop1 x\u2082\u1d63)) (\u2191(Y\u1d63.drop2 y\u2080\u1d63 y\u2081\u1d63)) Z2 := B\u1d63.support.A\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nhB\u2097\u2080\u2080 : |B\u2097 x\u2080\u2097 y\u2080\u2097| = 1\nhB\u2097\u2080\u2082 : |B\u2097 x\u2080\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2080 : |B\u2097 x\u2082\u2097 y\u2080\u2097| = 1\nhB\u2097\u2081\u2082 : |B\u2097 x\u2081\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2081 : |B\u2097 x\u2082\u2097 y\u2081\u2097| = 1\nhB\u1d63\u2080\u2080 : |B\u1d63 x\u2080\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2080\u2082 : |B\u1d63 x\u2080\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2080 : |B\u1d63 x\u2082\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2081\u2082 : |B\u1d63 x\u2081\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2081 : |B\u1d63 x\u2082\u1d63 y\u2081\u1d63| = 1\ni\u1d63 : \u2191(X\u1d63.drop1 \u27e8x\u2082, \u22ef\u27e9)\nj\u2097 : \u2191(Y\u2097.drop1 \u27e8y\u2082, \u22ef\u27e9)\nhx\u2080 : \u00ac\u2191i\u1d63 = x\u2080\nhx\u2081 : \u2191i\u1d63 = x\u2081\nhxx : x\u2081 \u2260 x\u2080\nhy\u2080 : \u00ac\u2191j\u2097 = y\u2080\nhy\u2081 : \u00ac\u2191j\u2097 = y\u2081\nhy\u2082 : \u2191j\u2097 \u2260 y\u2082\n\u22a2 \u2191j\u2097 \u2208 Y\u2097",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L473"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-29T11:00:39+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "43c61a2cabf8137a7272a6cdad3e06391aa8c52038102362c675b239d3fffe68"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 479,
        "start_column": 32,
        "end_line": 479,
        "end_column": 37
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097 : \u2200 (i : \u2191X\u2097) (j : \u2191Y\u2097), B\u2097 i j \u2208 SignType.cast.range\nhB\u1d63 : \u2200 (i : \u2191X\u1d63) (j : \u2191Y\u1d63), B\u1d63 i j \u2208 SignType.cast.range\nx\u2080\u2097 : \u2191X\u2097 := \u27e8x\u2080, \u22ef\u27e9\nx\u2080\u1d63 : \u2191X\u1d63 := \u27e8x\u2080, \u22ef\u27e9\nx\u2081\u2097 : \u2191X\u2097 := \u27e8x\u2081, \u22ef\u27e9\nx\u2081\u1d63 : \u2191X\u1d63 := \u27e8x\u2081, \u22ef\u27e9\nx\u2082\u2097 : \u2191X\u2097 := \u27e8x\u2082, \u22ef\u27e9\nx\u2082\u1d63 : \u2191X\u1d63 := \u27e8x\u2082, \u22ef\u27e9\ny\u2080\u2097 : \u2191Y\u2097 := \u27e8y\u2080, \u22ef\u27e9\ny\u2080\u1d63 : \u2191Y\u1d63 := \u27e8y\u2080, \u22ef\u27e9\ny\u2081\u2097 : \u2191Y\u2097 := \u27e8y\u2081, \u22ef\u27e9\ny\u2081\u1d63 : \u2191Y\u1d63 := \u27e8y\u2081, \u22ef\u27e9\ny\u2082\u2097 : \u2191Y\u2097 := \u27e8y\u2082, \u22ef\u27e9\ny\u2082\u1d63 : \u2191Y\u1d63 := \u27e8y\u2082, \u22ef\u27e9\nA\u2097 : Matrix (\u2191(X\u2097.drop2 x\u2080\u2097 x\u2081\u2097)) (\u2191(Y\u2097.drop1 y\u2082\u2097)) Z2 := B\u2097.support.A\u2097 x\u2080\u2097 x\u2081\u2097 y\u2082\u2097\nD\u2097 : Matrix (Fin 2) (\u2191(Y\u2097.drop3 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097)) Z2 := B\u2097.support.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097\nD\u2080 : Matrix (Fin 2) (Fin 2) Z2 := B\u2097.support.D\u2080 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097\nD\u1d63 : Matrix (\u2191(X\u1d63.drop3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63)) (Fin 2) Z2 := B\u1d63.support.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nA\u1d63 : Matrix (\u2191(X\u1d63.drop1 x\u2082\u1d63)) (\u2191(Y\u1d63.drop2 y\u2080\u1d63 y\u2081\u1d63)) Z2 := B\u1d63.support.A\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nhB\u2097\u2080\u2080 : |B\u2097 x\u2080\u2097 y\u2080\u2097| = 1\nhB\u2097\u2080\u2082 : |B\u2097 x\u2080\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2080 : |B\u2097 x\u2082\u2097 y\u2080\u2097| = 1\nhB\u2097\u2081\u2082 : |B\u2097 x\u2081\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2081 : |B\u2097 x\u2082\u2097 y\u2081\u2097| = 1\nhB\u1d63\u2080\u2080 : |B\u1d63 x\u2080\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2080\u2082 : |B\u1d63 x\u2080\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2080 : |B\u1d63 x\u2082\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2081\u2082 : |B\u1d63 x\u2081\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2081 : |B\u1d63 x\u2082\u1d63 y\u2081\u1d63| = 1\ni\u1d63 : \u2191(X\u1d63.drop1 \u27e8x\u2082, \u22ef\u27e9)\nj\u2097 : \u2191(Y\u2097.drop1 \u27e8y\u2082, \u22ef\u27e9)\nhx\u2080 : \u00ac\u2191i\u1d63 = x\u2080\nhx\u2081 : \u00ac\u2191i\u1d63 = x\u2081\n\u22a2 \u2191i\u1d63 \u2260 x\u2082",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L479"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-29T11:00:39+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "440a6d34a49a1b0041ec2011e4bc34ad1955934d80e444f933e140745764345f"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 480,
        "start_column": 32,
        "end_line": 480,
        "end_column": 37
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097 : \u2200 (i : \u2191X\u2097) (j : \u2191Y\u2097), B\u2097 i j \u2208 SignType.cast.range\nhB\u1d63 : \u2200 (i : \u2191X\u1d63) (j : \u2191Y\u1d63), B\u1d63 i j \u2208 SignType.cast.range\nx\u2080\u2097 : \u2191X\u2097 := \u27e8x\u2080, \u22ef\u27e9\nx\u2080\u1d63 : \u2191X\u1d63 := \u27e8x\u2080, \u22ef\u27e9\nx\u2081\u2097 : \u2191X\u2097 := \u27e8x\u2081, \u22ef\u27e9\nx\u2081\u1d63 : \u2191X\u1d63 := \u27e8x\u2081, \u22ef\u27e9\nx\u2082\u2097 : \u2191X\u2097 := \u27e8x\u2082, \u22ef\u27e9\nx\u2082\u1d63 : \u2191X\u1d63 := \u27e8x\u2082, \u22ef\u27e9\ny\u2080\u2097 : \u2191Y\u2097 := \u27e8y\u2080, \u22ef\u27e9\ny\u2080\u1d63 : \u2191Y\u1d63 := \u27e8y\u2080, \u22ef\u27e9\ny\u2081\u2097 : \u2191Y\u2097 := \u27e8y\u2081, \u22ef\u27e9\ny\u2081\u1d63 : \u2191Y\u1d63 := \u27e8y\u2081, \u22ef\u27e9\ny\u2082\u2097 : \u2191Y\u2097 := \u27e8y\u2082, \u22ef\u27e9\ny\u2082\u1d63 : \u2191Y\u1d63 := \u27e8y\u2082, \u22ef\u27e9\nA\u2097 : Matrix (\u2191(X\u2097.drop2 x\u2080\u2097 x\u2081\u2097)) (\u2191(Y\u2097.drop1 y\u2082\u2097)) Z2 := B\u2097.support.A\u2097 x\u2080\u2097 x\u2081\u2097 y\u2082\u2097\nD\u2097 : Matrix (Fin 2) (\u2191(Y\u2097.drop3 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097)) Z2 := B\u2097.support.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097\nD\u2080 : Matrix (Fin 2) (Fin 2) Z2 := B\u2097.support.D\u2080 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097\nD\u1d63 : Matrix (\u2191(X\u1d63.drop3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63)) (Fin 2) Z2 := B\u1d63.support.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nA\u1d63 : Matrix (\u2191(X\u1d63.drop1 x\u2082\u1d63)) (\u2191(Y\u1d63.drop2 y\u2080\u1d63 y\u2081\u1d63)) Z2 := B\u1d63.support.A\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nhB\u2097\u2080\u2080 : |B\u2097 x\u2080\u2097 y\u2080\u2097| = 1\nhB\u2097\u2080\u2082 : |B\u2097 x\u2080\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2080 : |B\u2097 x\u2082\u2097 y\u2080\u2097| = 1\nhB\u2097\u2081\u2082 : |B\u2097 x\u2081\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2081 : |B\u2097 x\u2082\u2097 y\u2081\u2097| = 1\nhB\u1d63\u2080\u2080 : |B\u1d63 x\u2080\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2080\u2082 : |B\u1d63 x\u2080\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2080 : |B\u1d63 x\u2082\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2081\u2082 : |B\u1d63 x\u2081\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2081 : |B\u1d63 x\u2082\u1d63 y\u2081\u1d63| = 1\ni\u1d63 : \u2191(X\u1d63.drop1 \u27e8x\u2082, \u22ef\u27e9)\nj\u2097 : \u2191(Y\u2097.drop1 \u27e8y\u2082, \u22ef\u27e9)\nhx\u2080 : \u00ac\u2191i\u1d63 = x\u2080\nhx\u2081 : \u00ac\u2191i\u1d63 = x\u2081\nhx\u2082 : \u2191i\u1d63 \u2260 x\u2082\n\u22a2 \u2191i\u1d63 \u2208 X\u1d63",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L480"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-29T11:00:39+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "0c52e12c450a234722dcc8727df0d2e6fb36e67be9e914fc979bcf7a40d5c85d"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 487,
        "start_column": 30,
        "end_line": 487,
        "end_column": 35
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097 : \u2200 (i : \u2191X\u2097) (j : \u2191Y\u2097), B\u2097 i j \u2208 SignType.cast.range\nhB\u1d63 : \u2200 (i : \u2191X\u1d63) (j : \u2191Y\u1d63), B\u1d63 i j \u2208 SignType.cast.range\nx\u2080\u2097 : \u2191X\u2097 := \u27e8x\u2080, \u22ef\u27e9\nx\u2080\u1d63 : \u2191X\u1d63 := \u27e8x\u2080, \u22ef\u27e9\nx\u2081\u2097 : \u2191X\u2097 := \u27e8x\u2081, \u22ef\u27e9\nx\u2081\u1d63 : \u2191X\u1d63 := \u27e8x\u2081, \u22ef\u27e9\nx\u2082\u2097 : \u2191X\u2097 := \u27e8x\u2082, \u22ef\u27e9\nx\u2082\u1d63 : \u2191X\u1d63 := \u27e8x\u2082, \u22ef\u27e9\ny\u2080\u2097 : \u2191Y\u2097 := \u27e8y\u2080, \u22ef\u27e9\ny\u2080\u1d63 : \u2191Y\u1d63 := \u27e8y\u2080, \u22ef\u27e9\ny\u2081\u2097 : \u2191Y\u2097 := \u27e8y\u2081, \u22ef\u27e9\ny\u2081\u1d63 : \u2191Y\u1d63 := \u27e8y\u2081, \u22ef\u27e9\ny\u2082\u2097 : \u2191Y\u2097 := \u27e8y\u2082, \u22ef\u27e9\ny\u2082\u1d63 : \u2191Y\u1d63 := \u27e8y\u2082, \u22ef\u27e9\nA\u2097 : Matrix (\u2191(X\u2097.drop2 x\u2080\u2097 x\u2081\u2097)) (\u2191(Y\u2097.drop1 y\u2082\u2097)) Z2 := B\u2097.support.A\u2097 x\u2080\u2097 x\u2081\u2097 y\u2082\u2097\nD\u2097 : Matrix (Fin 2) (\u2191(Y\u2097.drop3 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097)) Z2 := B\u2097.support.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097\nD\u2080 : Matrix (Fin 2) (Fin 2) Z2 := B\u2097.support.D\u2080 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097\nD\u1d63 : Matrix (\u2191(X\u1d63.drop3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63)) (Fin 2) Z2 := B\u1d63.support.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nA\u1d63 : Matrix (\u2191(X\u1d63.drop1 x\u2082\u1d63)) (\u2191(Y\u1d63.drop2 y\u2080\u1d63 y\u2081\u1d63)) Z2 := B\u1d63.support.A\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nhB\u2097\u2080\u2080 : |B\u2097 x\u2080\u2097 y\u2080\u2097| = 1\nhB\u2097\u2080\u2082 : |B\u2097 x\u2080\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2080 : |B\u2097 x\u2082\u2097 y\u2080\u2097| = 1\nhB\u2097\u2081\u2082 : |B\u2097 x\u2081\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2081 : |B\u2097 x\u2082\u2097 y\u2081\u2097| = 1\nhB\u1d63\u2080\u2080 : |B\u1d63 x\u2080\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2080\u2082 : |B\u1d63 x\u2080\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2080 : |B\u1d63 x\u2082\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2081\u2082 : |B\u1d63 x\u2081\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2081 : |B\u1d63 x\u2082\u1d63 y\u2081\u1d63| = 1\ni\u1d63 : \u2191(X\u1d63.drop1 \u27e8x\u2082, \u22ef\u27e9)\nj\u2097 : \u2191(Y\u2097.drop1 \u27e8y\u2082, \u22ef\u27e9)\nhx\u2080 : \u00ac\u2191i\u1d63 = x\u2080\nhx\u2081 : \u00ac\u2191i\u1d63 = x\u2081\nhx\u2082 : \u2191i\u1d63 \u2260 x\u2082\nhX\u1d63 : \u2191i\u1d63 \u2208 X\u1d63\nhy\u2080 : \u00ac\u2191j\u2097 = y\u2080\nhy\u2081 : \u2191j\u2097 = y\u2081\n\u22a2 y\u2081 \u2260 y\u2080",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L487"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-29T11:00:39+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "75f96f780a6cb393ca96286d71fe2446df03ddba32b1176ce4b3e76de1657fe9"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 493,
        "start_column": 34,
        "end_line": 493,
        "end_column": 39
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097 : \u2200 (i : \u2191X\u2097) (j : \u2191Y\u2097), B\u2097 i j \u2208 SignType.cast.range\nhB\u1d63 : \u2200 (i : \u2191X\u1d63) (j : \u2191Y\u1d63), B\u1d63 i j \u2208 SignType.cast.range\nx\u2080\u2097 : \u2191X\u2097 := \u27e8x\u2080, \u22ef\u27e9\nx\u2080\u1d63 : \u2191X\u1d63 := \u27e8x\u2080, \u22ef\u27e9\nx\u2081\u2097 : \u2191X\u2097 := \u27e8x\u2081, \u22ef\u27e9\nx\u2081\u1d63 : \u2191X\u1d63 := \u27e8x\u2081, \u22ef\u27e9\nx\u2082\u2097 : \u2191X\u2097 := \u27e8x\u2082, \u22ef\u27e9\nx\u2082\u1d63 : \u2191X\u1d63 := \u27e8x\u2082, \u22ef\u27e9\ny\u2080\u2097 : \u2191Y\u2097 := \u27e8y\u2080, \u22ef\u27e9\ny\u2080\u1d63 : \u2191Y\u1d63 := \u27e8y\u2080, \u22ef\u27e9\ny\u2081\u2097 : \u2191Y\u2097 := \u27e8y\u2081, \u22ef\u27e9\ny\u2081\u1d63 : \u2191Y\u1d63 := \u27e8y\u2081, \u22ef\u27e9\ny\u2082\u2097 : \u2191Y\u2097 := \u27e8y\u2082, \u22ef\u27e9\ny\u2082\u1d63 : \u2191Y\u1d63 := \u27e8y\u2082, \u22ef\u27e9\nA\u2097 : Matrix (\u2191(X\u2097.drop2 x\u2080\u2097 x\u2081\u2097)) (\u2191(Y\u2097.drop1 y\u2082\u2097)) Z2 := B\u2097.support.A\u2097 x\u2080\u2097 x\u2081\u2097 y\u2082\u2097\nD\u2097 : Matrix (Fin 2) (\u2191(Y\u2097.drop3 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097)) Z2 := B\u2097.support.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097\nD\u2080 : Matrix (Fin 2) (Fin 2) Z2 := B\u2097.support.D\u2080 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097\nD\u1d63 : Matrix (\u2191(X\u1d63.drop3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63)) (Fin 2) Z2 := B\u1d63.support.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nA\u1d63 : Matrix (\u2191(X\u1d63.drop1 x\u2082\u1d63)) (\u2191(Y\u1d63.drop2 y\u2080\u1d63 y\u2081\u1d63)) Z2 := B\u1d63.support.A\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nhB\u2097\u2080\u2080 : |B\u2097 x\u2080\u2097 y\u2080\u2097| = 1\nhB\u2097\u2080\u2082 : |B\u2097 x\u2080\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2080 : |B\u2097 x\u2082\u2097 y\u2080\u2097| = 1\nhB\u2097\u2081\u2082 : |B\u2097 x\u2081\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2081 : |B\u2097 x\u2082\u2097 y\u2081\u2097| = 1\nhB\u1d63\u2080\u2080 : |B\u1d63 x\u2080\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2080\u2082 : |B\u1d63 x\u2080\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2080 : |B\u1d63 x\u2082\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2081\u2082 : |B\u1d63 x\u2081\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2081 : |B\u1d63 x\u2082\u1d63 y\u2081\u1d63| = 1\ni\u1d63 : \u2191(X\u1d63.drop1 \u27e8x\u2082, \u22ef\u27e9)\nj\u2097 : \u2191(Y\u2097.drop1 \u27e8y\u2082, \u22ef\u27e9)\nhx\u2080 : \u00ac\u2191i\u1d63 = x\u2080\nhx\u2081 : \u00ac\u2191i\u1d63 = x\u2081\nhx\u2082 : \u2191i\u1d63 \u2260 x\u2082\nhX\u1d63 : \u2191i\u1d63 \u2208 X\u1d63\nhy\u2080 : \u00ac\u2191j\u2097 = y\u2080\nhy\u2081 : \u00ac\u2191j\u2097 = y\u2081\n\u22a2 \u2191j\u2097 \u2260 y\u2082",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L493"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-29T11:00:39+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "d60d3ca808d5e1b0665253075f8d8c79bdd695fe234dad5feb4769b0097c32f9"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 494,
        "start_column": 34,
        "end_line": 494,
        "end_column": 39
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097 : \u2200 (i : \u2191X\u2097) (j : \u2191Y\u2097), B\u2097 i j \u2208 SignType.cast.range\nhB\u1d63 : \u2200 (i : \u2191X\u1d63) (j : \u2191Y\u1d63), B\u1d63 i j \u2208 SignType.cast.range\nx\u2080\u2097 : \u2191X\u2097 := \u27e8x\u2080, \u22ef\u27e9\nx\u2080\u1d63 : \u2191X\u1d63 := \u27e8x\u2080, \u22ef\u27e9\nx\u2081\u2097 : \u2191X\u2097 := \u27e8x\u2081, \u22ef\u27e9\nx\u2081\u1d63 : \u2191X\u1d63 := \u27e8x\u2081, \u22ef\u27e9\nx\u2082\u2097 : \u2191X\u2097 := \u27e8x\u2082, \u22ef\u27e9\nx\u2082\u1d63 : \u2191X\u1d63 := \u27e8x\u2082, \u22ef\u27e9\ny\u2080\u2097 : \u2191Y\u2097 := \u27e8y\u2080, \u22ef\u27e9\ny\u2080\u1d63 : \u2191Y\u1d63 := \u27e8y\u2080, \u22ef\u27e9\ny\u2081\u2097 : \u2191Y\u2097 := \u27e8y\u2081, \u22ef\u27e9\ny\u2081\u1d63 : \u2191Y\u1d63 := \u27e8y\u2081, \u22ef\u27e9\ny\u2082\u2097 : \u2191Y\u2097 := \u27e8y\u2082, \u22ef\u27e9\ny\u2082\u1d63 : \u2191Y\u1d63 := \u27e8y\u2082, \u22ef\u27e9\nA\u2097 : Matrix (\u2191(X\u2097.drop2 x\u2080\u2097 x\u2081\u2097)) (\u2191(Y\u2097.drop1 y\u2082\u2097)) Z2 := B\u2097.support.A\u2097 x\u2080\u2097 x\u2081\u2097 y\u2082\u2097\nD\u2097 : Matrix (Fin 2) (\u2191(Y\u2097.drop3 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097)) Z2 := B\u2097.support.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097\nD\u2080 : Matrix (Fin 2) (Fin 2) Z2 := B\u2097.support.D\u2080 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097\nD\u1d63 : Matrix (\u2191(X\u1d63.drop3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63)) (Fin 2) Z2 := B\u1d63.support.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nA\u1d63 : Matrix (\u2191(X\u1d63.drop1 x\u2082\u1d63)) (\u2191(Y\u1d63.drop2 y\u2080\u1d63 y\u2081\u1d63)) Z2 := B\u1d63.support.A\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63\nhB\u2097\u2080\u2080 : |B\u2097 x\u2080\u2097 y\u2080\u2097| = 1\nhB\u2097\u2080\u2082 : |B\u2097 x\u2080\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2080 : |B\u2097 x\u2082\u2097 y\u2080\u2097| = 1\nhB\u2097\u2081\u2082 : |B\u2097 x\u2081\u2097 y\u2082\u2097| = 1\nhB\u2097\u2082\u2081 : |B\u2097 x\u2082\u2097 y\u2081\u2097| = 1\nhB\u1d63\u2080\u2080 : |B\u1d63 x\u2080\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2080\u2082 : |B\u1d63 x\u2080\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2080 : |B\u1d63 x\u2082\u1d63 y\u2080\u1d63| = 1\nhB\u1d63\u2081\u2082 : |B\u1d63 x\u2081\u1d63 y\u2082\u1d63| = 1\nhB\u1d63\u2082\u2081 : |B\u1d63 x\u2082\u1d63 y\u2081\u1d63| = 1\ni\u1d63 : \u2191(X\u1d63.drop1 \u27e8x\u2082, \u22ef\u27e9)\nj\u2097 : \u2191(Y\u2097.drop1 \u27e8y\u2082, \u22ef\u27e9)\nhx\u2080 : \u00ac\u2191i\u1d63 = x\u2080\nhx\u2081 : \u00ac\u2191i\u1d63 = x\u2081\nhx\u2082 : \u2191i\u1d63 \u2260 x\u2082\nhX\u1d63 : \u2191i\u1d63 \u2208 X\u1d63\nhy\u2080 : \u00ac\u2191j\u2097 = y\u2080\nhy\u2081 : \u00ac\u2191j\u2097 = y\u2081\nhy\u2082 : \u2191j\u2097 \u2260 y\u2082\n\u22a2 \u2191j\u2097 \u2208 Y\u2097",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L494"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-29T11:00:39+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "81dc22829c80bf197ecc5771c91e22d496c6b0de578959644e70d39a9a6b1c25"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6c073596b5cf868b75933fb0c60ca164e14e51fd",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 1006,
        "start_column": 14,
        "end_line": 1006,
        "end_column": 19
      },
      "debug_info": {
        "goal": "case specialize_4\nX : Sequent\nW : Type\nM : KripkeModel W\n\u03c6 : Formula\nside : Side\nB : List Sequent\nnext : (Y : Sequent) \u2192 Y \u2208 B \u2192 LocalTableau Y\nIH :\n  \u2200 (Y : Sequent) (a : Y \u2208 B) {v w : W},\n    (M, v)\u22a8Y \u2192\n      (M, w)\u22a8~''(AnyFormula.normal \u03c6) \u2192\n        \u2200 (\u03b1 : Program) (\u03b1s : List Program),\n          relateSeq M (\u03b1 :: \u03b1s) v w \u2192\n            (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6))).in_side side Y \u2192\n              (Y.without (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6)))).isFree = true \u2192\n                \u2203 Y_1 \u2208 endNodesOf (next Y a),\n                  (M, v)\u22a8Y_1 \u2227\n                    (Y_1.isFree = true \u2228\n                      \u2203 F \u03b3,\n                        (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6))).in_side side Y_1 \u2227\n                          relateSeq M \u03b3 v w \u2227\n                            (M, v)\u22a8F \u2227\n                              (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227\n                                (Y_1.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6)))).isFree = true)\nv w : W\nw_n\u03be : (M, w)\u22a8~''(AnyFormula.normal \u03c6)\n\u03b1 : Program\n\u03b1s : List Program\nL R : List Formula\nO : Olf\nv_t : (M, v)\u22a8(L, R, O)\nnegLoad_in : (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6))).in_side side (L, R, O)\nno_other_loading : (Sequent.without (L, R, O) (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6)))).isFree = true\nu : W\nv_\u03b1_u : relate M \u03b1 v u\nu_\u03b1s_w : relateSeq M \u03b1s u w\nF : List Formula\n\u03c7' : LoadFormula\n\u03c7_def : AnyFormula.loaded \u03c7' = AnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)\n\u03b1'_not_atomic : \u00ac\u03b1.isAtomic\nprecons : \u2205.Subperm L \u2227 \u2205.Subperm R \u2227 some (Sum.inl (~'\u230a\u03b1\u230bAnyFormula.loaded \u03c7')) \u2286 O\nB_def_apply_r_LRO :\n  B = applyLocalRule (LocalRule.loadedL (\u230a\u03b1\u230bAnyFormula.loaded \u03c7') (LoadRule.dia \u03b1'_not_atomic)) (L, R, O)\n\u03b1s_nonEmpty : \u03b1s \u2260 []\nd : Program\n\u03b4s : List Program\n_in_H : (F, d :: \u03b4s) \u2208 H \u03b1\nv_F : (M, v)\u22a8(F, d :: \u03b4s).1\nv_\u03b4_u : relateSeq M (d :: \u03b4s) v u\nin_B : (L ++ F, R, some (Sum.inl (~'\u230a\u230ad :: \u03b4s\u230b\u230b\u03c7'))) \u2208 B\n\u22a2 (Sequent.without (L ++ F, R, some (Sum.inl (~'\u230a\u230ad :: \u03b4s\u230b\u230b\u03c7')))\n        (~''(AnyFormula.loadBoxes (d :: (\u03b4s ++ \u03b1s)) (AnyFormula.normal \u03c6)))).isFree =\n    true",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6c073596b5cf868b75933fb0c60ca164e14e51fd/Pdl/Soundness.lean#L1006"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-05-29T18:50:08+02:00",
        "inclusion_date": "2025-05-31T05:36:13.607817+00:00"
      },
      "id": "54ef5c605c07166f09cca75a27e5e191c28523ae80cad7ce0025c0a11067827d"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "0f4564c02d499ce4dfd3c42a1818cf0c492ac43c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 1021,
        "start_column": 14,
        "end_line": 1021,
        "end_column": 19
      },
      "debug_info": {
        "goal": "case intro.intro.intro.inr.intro.intro.intro.intro.intro.intro\nX : Sequent\nW : Type\nM : KripkeModel W\n\u03c6 : Formula\nside : Side\nB : List Sequent\nnext : (Y : Sequent) \u2192 Y \u2208 B \u2192 LocalTableau Y\nv w : W\nw_n\u03be : (M, w)\u22a8~''(AnyFormula.normal \u03c6)\n\u03b1 : Program\n\u03b1s : List Program\nL R : List Formula\nO : Olf\nv_t : (M, v)\u22a8(L, R, O)\nnegLoad_in : (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6))).in_side side (L, R, O)\nno_other_loading : (Sequent.without (L, R, O) (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6)))).isFree = true\nu : W\nv_\u03b1_u : relate M \u03b1 v u\nu_\u03b1s_w : relateSeq M \u03b1s u w\nF : List Formula\n\u03c7' : LoadFormula\n\u03c7_def : AnyFormula.loaded \u03c7' = AnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)\n\u03b1'_not_atomic : \u00ac\u03b1.isAtomic\nprecons : \u2205.Subperm L \u2227 \u2205.Subperm R \u2227 some (Sum.inl (~'\u230a\u03b1\u230bAnyFormula.loaded \u03c7')) \u2286 O\nB_def_apply_r_LRO :\n  B = applyLocalRule (LocalRule.loadedL (\u230a\u03b1\u230bAnyFormula.loaded \u03c7') (LoadRule.dia \u03b1'_not_atomic)) (L, R, O)\n\u03b1s_nonEmpty : \u03b1s \u2260 []\nd : Program\n\u03b4s : List Program\n_in_H : (F, d :: \u03b4s) \u2208 H \u03b1\nv_F : (M, v)\u22a8(F, d :: \u03b4s).1\nv_\u03b4_u : relateSeq M (d :: \u03b4s) v u\nin_B : (L ++ F, R, some (Sum.inl (~'\u230a\u230ad :: \u03b4s\u230b\u230b\u03c7'))) \u2208 B\nY : Sequent\nY_in : Y \u2208 endNodesOf (next (L ++ F, R, some (Sum.inl (~'\u230a\u230ad :: \u03b4s\u230b\u230b\u03c7'))) in_B)\nv_Y : (M, v)\u22a8Y\nG : List Formula\n\u03b3s : List Program\nin_Y : (~''(AnyFormula.loadBoxes \u03b3s (AnyFormula.normal \u03c6))).in_side side Y\nv_\u03b3s_w : relateSeq M \u03b3s v w\nv_G : (M, v)\u22a8G\nin_Hl : (G, \u03b3s) \u2208 Hl (d :: (\u03b4s ++ \u03b1s))\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b3s (AnyFormula.normal \u03c6)))).isFree = true\n\u22a2 \u03b3s = d :: (\u03b4s ++ \u03b1s)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/0f4564c02d499ce4dfd3c42a1818cf0c492ac43c/Pdl/Soundness.lean#L1021"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-05-29T18:50:08+02:00",
        "inclusion_date": "2025-05-30T05:28:05.075477+00:00"
      },
      "id": "42d58e7742eaf35c9d1c66c1e4636e3135c83310a35d7b8e4a6b15aced6e3590"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6c073596b5cf868b75933fb0c60ca164e14e51fd",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 1032,
        "start_column": 10,
        "end_line": 1032,
        "end_column": 15
      },
      "debug_info": {
        "goal": "X : Sequent\nW : Type\nM : KripkeModel W\n\u03c6\u271d : Formula\nside : Side\nB : List Sequent\nnext : (Y : Sequent) \u2192 Y \u2208 B \u2192 LocalTableau Y\nIH :\n  \u2200 (Y : Sequent) (a : Y \u2208 B) {v w : W},\n    (M, v)\u22a8Y \u2192\n      (M, w)\u22a8~''(AnyFormula.normal \u03c6\u271d) \u2192\n        \u2200 (\u03b1 : Program) (\u03b1s : List Program),\n          relateSeq M (\u03b1 :: \u03b1s) v w \u2192\n            (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6\u271d))).in_side side Y \u2192\n              (Y.without (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6\u271d)))).isFree = true \u2192\n                \u2203 Y_1 \u2208 endNodesOf (next Y a),\n                  (M, v)\u22a8Y_1 \u2227\n                    (Y_1.isFree = true \u2228\n                      \u2203 F \u03b3,\n                        (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6\u271d))).in_side side Y_1 \u2227\n                          relateSeq M \u03b3 v w \u2227\n                            (M, v)\u22a8F \u2227\n                              (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227\n                                (Y_1.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6\u271d)))).isFree = true)\nv w : W\nw_n\u03be : (M, w)\u22a8~''(AnyFormula.normal \u03c6\u271d)\n\u03b1 : Program\n\u03b1s : List Program\nL R : List Formula\nO : Olf\nv_t : (M, v)\u22a8(L, R, O)\nnegLoad_in : (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6\u271d))).in_side side (L, R, O)\nno_other_loading :\n  (Sequent.without (L, R, O) (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6\u271d)))).isFree = true\nu : W\nv_\u03b1_u : relate M \u03b1 v u\nu_\u03b1s_w : relateSeq M \u03b1s u w\nF : List Formula\n\u03b4 : List Program\n_in_H : (F, \u03b4) \u2208 H \u03b1\nv_F : (M, v)\u22a8(F, \u03b4).1\nv_\u03b4_u : relateSeq M \u03b4 v u\n\u03b1' : Program\n\u03c6 : Formula\n\u03b1'_not_atomic : \u00ac\u03b1'.isAtomic\nprecons : \u2205.Subperm L \u2227 \u2205.Subperm R \u2227 some (Sum.inl (~'\u230a\u03b1'\u230bAnyFormula.normal \u03c6)) \u2286 O\nB_def_apply_r_LRO :\n  B = applyLocalRule (LocalRule.loadedL (\u230a\u03b1'\u230bAnyFormula.normal \u03c6) (LoadRule.dia' \u03b1'_not_atomic)) (L, R, O)\n\u22a2 \u2203\n    Y \u2208\n      endNodesOf\n        (LocalTableau.byLocalRule\n          (LocalRuleApp.mk \u2205 \u2205 (some (Sum.inl (~'\u230a\u03b1'\u230bAnyFormula.normal \u03c6)))\n            (LocalRule.loadedL (\u230a\u03b1'\u230bAnyFormula.normal \u03c6) (LoadRule.dia' \u03b1'_not_atomic)) precons)\n          next),\n    (M, v)\u22a8Y \u2227\n      (Y.isFree = true \u2228\n        \u2203 F \u03b3,\n          (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6\u271d))).in_side side Y \u2227\n            relateSeq M \u03b3 v w \u2227\n              (M, v)\u22a8F \u2227\n                (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6\u271d)))).isFree = true)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6c073596b5cf868b75933fb0c60ca164e14e51fd/Pdl/Soundness.lean#L1032"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-05-26T23:22:48+02:00",
        "inclusion_date": "2025-05-31T05:36:13.607817+00:00"
      },
      "id": "ecdd1e93948d1c0759a89959a057ea6b0fbc7c9074f57704270186b17dd493b3"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6c073596b5cf868b75933fb0c60ca164e14e51fd",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 1036,
        "start_column": 8,
        "end_line": 1036,
        "end_column": 13
      },
      "debug_info": {
        "goal": "X : Sequent\nW : Type\nM : KripkeModel W\n\u03c6 : Formula\nside : Side\nB : List Sequent\nnext : (Y : Sequent) \u2192 Y \u2208 B \u2192 LocalTableau Y\nIH :\n  \u2200 (Y : Sequent) (a : Y \u2208 B) {v w : W},\n    (M, v)\u22a8Y \u2192\n      (M, w)\u22a8~''(AnyFormula.normal \u03c6) \u2192\n        \u2200 (\u03b1 : Program) (\u03b1s : List Program),\n          relateSeq M (\u03b1 :: \u03b1s) v w \u2192\n            (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6))).in_side side Y \u2192\n              (Y.without (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6)))).isFree = true \u2192\n                \u2203 Y_1 \u2208 endNodesOf (next Y a),\n                  (M, v)\u22a8Y_1 \u2227\n                    (Y_1.isFree = true \u2228\n                      \u2203 F \u03b3,\n                        (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6))).in_side side Y_1 \u2227\n                          relateSeq M \u03b3 v w \u2227\n                            (M, v)\u22a8F \u2227\n                              (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227\n                                (Y_1.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6)))).isFree = true)\nv w : W\nw_n\u03be : (M, w)\u22a8~''(AnyFormula.normal \u03c6)\n\u03b1 : Program\n\u03b1s : List Program\nv_\u03b1s_w : relateSeq M (\u03b1 :: \u03b1s) v w\nL R : List Formula\nO : Olf\nv_t : (M, v)\u22a8(L, R, O)\nnegLoad_in : (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6))).in_side side (L, R, O)\nno_other_loading : (Sequent.without (L, R, O) (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6)))).isFree = true\nlocRulTru : \u2200 (w : W), (M, w)\u22a8(L, R, O) \u2194 \u2203 Ci \u2208 B, (M, w)\u22a8Ci\nress\u271d : List (List Formula \u00d7 Option NegLoadFormula)\n\u03c7\u271d : LoadFormula\nlrule\u271d : LoadRule (~'\u03c7\u271d) ress\u271d\nprecons : \u2205.Subperm L \u2227 \u2205.Subperm R \u2227 some (Sum.inr (~'\u03c7\u271d)) \u2286 O\nB_def_apply_r_LRO : B = applyLocalRule (LocalRule.loadedR \u03c7\u271d lrule\u271d) (L, R, O)\n\u22a2 \u2203\n    Y \u2208\n      endNodesOf\n        (LocalTableau.byLocalRule (LocalRuleApp.mk \u2205 \u2205 (some (Sum.inr (~'\u03c7\u271d))) (LocalRule.loadedR \u03c7\u271d lrule\u271d) precons)\n          next),\n    (M, v)\u22a8Y \u2227\n      (Y.isFree = true \u2228\n        \u2203 F \u03b3,\n          (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6))).in_side side Y \u2227\n            relateSeq M \u03b3 v w \u2227\n              (M, v)\u22a8F \u2227\n                (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6)))).isFree = true)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6c073596b5cf868b75933fb0c60ca164e14e51fd/Pdl/Soundness.lean#L1036"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-05-26T23:22:48+02:00",
        "inclusion_date": "2025-05-31T05:36:13.607817+00:00"
      },
      "id": "b641ccfb43961371af80a9cb261e14c8fada122e282fd5eb819b3f56a3f49bc7"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "4ae88c595711f5a77a374986a5aa2e035178d9c6",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2730,
        "start_column": 23,
        "end_line": 2730,
        "end_column": 28
      },
      "debug_info": {
        "goal": "\u03b1 : Program\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03be : AnyFormula\nside : Side\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230b\u03be))).in_side side (nodeAt t)\nv_\u03b1_w : relate M \u03b1 v w\nw_n\u03be : (M, w)\u22a8~''\u03be\nt0 : PathIn tab\nIH :\n  t = t0 \u2192\n    \u2203 s,\n      Relation.TransGen (cEdge X tab) t s \u2227\n        (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n          (~''\u03be).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 ((nodeAt s).without (~''\u03be)).isFree = true)\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\na\u271d\u00b9 a\u271d : Program\n\u03b1_def : \u03b1 = (a\u271d\u00b9;'a\u271d)\nthis : nodeAt t = Z\n\u03c7 : LoadFormula\n\u03be_def : \u03be = AnyFormula.loaded \u03c7\n\u22a2 \u2203 s,\n    Relation.TransGen (cEdge X tab) t s \u2227\n      (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n        (~''(AnyFormula.loaded \u03c7)).in_side side (nodeAt s) \u2227\n          (M, w)\u22a8nodeAt s \u2227 ((nodeAt s).without (~''(AnyFormula.loaded \u03c7))).isFree = true)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/4ae88c595711f5a77a374986a5aa2e035178d9c6/Pdl/Soundness.lean#L2730"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-06-02T16:11:35+02:00",
        "inclusion_date": "2025-06-03T05:30:39.403777+00:00"
      },
      "id": "25ce4b5162cc24ababbfeb103883bfb15f1b5b3356dfde61a03af5daad4f3f45"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "4ae88c595711f5a77a374986a5aa2e035178d9c6",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2730,
        "start_column": 23,
        "end_line": 2730,
        "end_column": 28
      },
      "debug_info": {
        "goal": "\u03b1 : Program\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03be : AnyFormula\nside : Side\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230b\u03be))).in_side side (nodeAt t)\nv_\u03b1_w : relate M \u03b1 v w\nw_n\u03be : (M, w)\u22a8~''\u03be\nt0 : PathIn tab\nIH :\n  t = t0 \u2192\n    \u2203 s,\n      Relation.TransGen (cEdge X tab) t s \u2227\n        (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n          (~''\u03be).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 ((nodeAt s).without (~''\u03be)).isFree = true)\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\na\u271d\u00b9 a\u271d : Program\n\u03b1_def : \u03b1 = (a\u271d\u00b9\u22d3a\u271d)\nthis : nodeAt t = Z\n\u03c7 : LoadFormula\n\u03be_def : \u03be = AnyFormula.loaded \u03c7\n\u22a2 \u2203 s,\n    Relation.TransGen (cEdge X tab) t s \u2227\n      (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n        (~''(AnyFormula.loaded \u03c7)).in_side side (nodeAt s) \u2227\n          (M, w)\u22a8nodeAt s \u2227 ((nodeAt s).without (~''(AnyFormula.loaded \u03c7))).isFree = true)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/4ae88c595711f5a77a374986a5aa2e035178d9c6/Pdl/Soundness.lean#L2730"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-06-02T16:11:35+02:00",
        "inclusion_date": "2025-06-03T05:30:39.403777+00:00"
      },
      "id": "4ba48e6bbdc9cf5e5753484eee12ca061e957829e6a63fee955b98c3fb07ab70"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "4ae88c595711f5a77a374986a5aa2e035178d9c6",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2730,
        "start_column": 23,
        "end_line": 2730,
        "end_column": 28
      },
      "debug_info": {
        "goal": "\u03b1 : Program\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03be : AnyFormula\nside : Side\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230b\u03be))).in_side side (nodeAt t)\nv_\u03b1_w : relate M \u03b1 v w\nw_n\u03be : (M, w)\u22a8~''\u03be\nt0 : PathIn tab\nIH :\n  t = t0 \u2192\n    \u2203 s,\n      Relation.TransGen (cEdge X tab) t s \u2227\n        (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n          (~''\u03be).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 ((nodeAt s).without (~''\u03be)).isFree = true)\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\na\u271d : Formula\n\u03b1_def : \u03b1 = (?'a\u271d)\nthis : nodeAt t = Z\n\u03c7 : LoadFormula\n\u03be_def : \u03be = AnyFormula.loaded \u03c7\n\u22a2 \u2203 s,\n    Relation.TransGen (cEdge X tab) t s \u2227\n      (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n        (~''(AnyFormula.loaded \u03c7)).in_side side (nodeAt s) \u2227\n          (M, w)\u22a8nodeAt s \u2227 ((nodeAt s).without (~''(AnyFormula.loaded \u03c7))).isFree = true)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/4ae88c595711f5a77a374986a5aa2e035178d9c6/Pdl/Soundness.lean#L2730"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-06-02T16:11:35+02:00",
        "inclusion_date": "2025-06-03T05:30:39.403777+00:00"
      },
      "id": "bb379be1841ab122365509d794cc79cc6889314bdcb072d33df49a9af35e9e5b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/Basic.lean",
        "start_line": 870,
        "start_column": 67,
        "end_line": 870,
        "end_column": 72
      },
      "debug_info": {
        "goal": "F : \u2115 \u2192 Type u_1\ninst : @BinaryTower.BinaryTowerField F\n\u03ba \u03c4 : \u2115\nh : Fact (\u03ba < \u03c4)\ninstleft : Algebra (F \u03ba) (F (\u03ba + 1)) := sorry\ninstright : Algebra (F (\u03ba + 1)) (F \u03c4) := sorry\ninstSMul : SMul (F \u03ba) (F \u03c4) := sorry\n\u22a2 IsScalarTower (F \u03ba) (F (\u03ba + 1)) (F \u03c4)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/Basic.lean#L870"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-05-30T05:28:52+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "1a5e48c895c6bb8816e0f1d25f26ca7e81cc41bfed863694321aba7a2e4c0784"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/Basic.lean",
        "start_line": 903,
        "start_column": 56,
        "end_line": 903,
        "end_column": 61
      },
      "debug_info": {
        "goal": "F : \u2115 \u2192 Type u_1\ninst : @BinaryTower.BinaryTowerField F\n\u03ba \u03c4 : \u2115\nh : Fact (\u03ba < \u03c4)\nbasis_vectors : Finset (Fin (\u03c4 - \u03ba)) \u2192 F \u03c4 :=\n  fun s => \u220f i \u2208 s, @BinaryTower.BinaryTowerField.special_elements_of_range F inst (\u03ba + 1) \u03c4 \u22ef \u2191\u2191i\ninstModule : Module (F \u03ba) (F \u03c4) := @BinaryTower.BinaryTowerField.module_cross_tower F inst \u03ba \u03c4 h\n\u22a2 LinearIndependent (F \u03ba) basis_vectors",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/Basic.lean#L903"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-05-30T05:28:52+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "604c3fcbec042423edddb73cf93d93906111902f3eee5d8c4763b136a9524f5b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/Basic.lean",
        "start_line": 904,
        "start_column": 69,
        "end_line": 904,
        "end_column": 74
      },
      "debug_info": {
        "goal": "F : \u2115 \u2192 Type u_1\ninst : @BinaryTower.BinaryTowerField F\n\u03ba \u03c4 : \u2115\nh : Fact (\u03ba < \u03c4)\nbasis_vectors : Finset (Fin (\u03c4 - \u03ba)) \u2192 F \u03c4 :=\n  fun s => \u220f i \u2208 s, @BinaryTower.BinaryTowerField.special_elements_of_range F inst (\u03ba + 1) \u03c4 \u22ef \u2191\u2191i\ninstModule : Module (F \u03ba) (F \u03c4) := @BinaryTower.BinaryTowerField.module_cross_tower F inst \u03ba \u03c4 h\nhli : LinearIndependent (F \u03ba) basis_vectors\n\u22a2 \u22a4 \u2264 Submodule.span (F \u03ba) (Set.range basis_vectors)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/Basic.lean#L904"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-05-30T05:28:52+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "f5b67255505eb4ca319320038232a0f4f51570fe02635f83accffef322639c78"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/TensorAlgebra.lean",
        "start_line": 267,
        "start_column": 52,
        "end_line": 267,
        "end_column": 57
      },
      "debug_info": {
        "goal": "K\u271d : Type u_1\nL\u271d : Type u_2\nR\u271d : Type u_3\nl\u03ba r\u03ba : \u2115\ninst\u271d\u00b2\u2070 : Field K\u271d\ninst\u271d\u00b9\u2079 : Field L\u271d\ninst\u271d\u00b9\u2078 : Field R\u271d\ninst\u271d\u00b9\u2077 : Algebra K\u271d L\u271d\ninst\u271d\u00b9\u2076 : Algebra K\u271d R\u271d\ninst\u271d\u00b9\u2075 : Fact (finrank K\u271d L\u271d = l\u03ba)\ninst\u271d\u00b9\u2074 : Fact (finrank K\u271d R\u271d = r\u03ba)\ninst\u271d\u00b9\u00b3 : SMulCommClass K\u271d L\u271d L\u271d\ninst\u271d\u00b9\u00b2 : SMulCommClass K\u271d R\u271d R\u271d\nK : Type u\nL : Type v\nR : Type w\ninst\u271d\u00b9\u00b9 : Field K\ninst\u271d\u00b9\u2070 : Field L\ninst\u271d\u2079 : Field R\ninst\u271d\u2078 : Module K L\ninst\u271d\u2077 : Module K R\ninst\u271d\u2076 : Semiring (TensorProduct K L R)\ninst\u271d\u2075 : Module L (TensorProduct K L R)\ninst\u271d\u2074 : Algebra K R\ninst\u271d\u00b3 : Algebra K L\ninst\u271d\u00b2 : Algebra R (TensorProduct K L R)\ninst\u271d\u00b9 : IsScalarTower K R (TensorProduct K L R)\n\u03b9R : Type u_4\ninst\u271d : _root_.Fintype \u03b9R\nbR : Basis \u03b9R K R\nthis : Module L (TensorProduct K L R) := inferInstance\nbasis_vectors : \u03b9R \u2192 TensorProduct K L R := fun i => 1 \u2297\u209c[K] bR i\n\u22a2 LinearIndependent L basis_vectors",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5/ArkLib/Data/FieldTheory/BinaryTowerField/TensorAlgebra.lean#L267"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-05-30T05:28:52+07:00",
        "inclusion_date": "2025-05-30T06:35:34.554180+00:00"
      },
      "id": "5d26ebb820aef0a09cab7b31dae4dcc8743cf14176a08c44df960c47b5171bc4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/TensorAlgebra.lean",
        "start_line": 268,
        "start_column": 65,
        "end_line": 268,
        "end_column": 70
      },
      "debug_info": {
        "goal": "K\u271d : Type u_1\nL\u271d : Type u_2\nR\u271d : Type u_3\nl\u03ba r\u03ba : \u2115\ninst\u271d\u00b2\u2070 : Field K\u271d\ninst\u271d\u00b9\u2079 : Field L\u271d\ninst\u271d\u00b9\u2078 : Field R\u271d\ninst\u271d\u00b9\u2077 : Algebra K\u271d L\u271d\ninst\u271d\u00b9\u2076 : Algebra K\u271d R\u271d\ninst\u271d\u00b9\u2075 : Fact (finrank K\u271d L\u271d = l\u03ba)\ninst\u271d\u00b9\u2074 : Fact (finrank K\u271d R\u271d = r\u03ba)\ninst\u271d\u00b9\u00b3 : SMulCommClass K\u271d L\u271d L\u271d\ninst\u271d\u00b9\u00b2 : SMulCommClass K\u271d R\u271d R\u271d\nK : Type u\nL : Type v\nR : Type w\ninst\u271d\u00b9\u00b9 : Field K\ninst\u271d\u00b9\u2070 : Field L\ninst\u271d\u2079 : Field R\ninst\u271d\u2078 : Module K L\ninst\u271d\u2077 : Module K R\ninst\u271d\u2076 : Semiring (TensorProduct K L R)\ninst\u271d\u2075 : Module L (TensorProduct K L R)\ninst\u271d\u2074 : Algebra K R\ninst\u271d\u00b3 : Algebra K L\ninst\u271d\u00b2 : Algebra R (TensorProduct K L R)\ninst\u271d\u00b9 : IsScalarTower K R (TensorProduct K L R)\n\u03b9R : Type u_4\ninst\u271d : _root_.Fintype \u03b9R\nbR : Basis \u03b9R K R\nthis : Module L (TensorProduct K L R) := inferInstance\nbasis_vectors : \u03b9R \u2192 TensorProduct K L R := fun i => 1 \u2297\u209c[K] bR i\nhli : LinearIndependent L basis_vectors\n\u22a2 \u22a4 \u2264 Submodule.span L (Set.range basis_vectors)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5/ArkLib/Data/FieldTheory/BinaryTowerField/TensorAlgebra.lean#L268"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-05-30T05:28:52+07:00",
        "inclusion_date": "2025-05-30T06:35:34.554180+00:00"
      },
      "id": "a6a95594a3bda6f9ceab6c85dbf407738cc3f677bb209d6371287af90931e2dd"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/TensorAlgebra.lean",
        "start_line": 280,
        "start_column": 52,
        "end_line": 280,
        "end_column": 57
      },
      "debug_info": {
        "goal": "K\u271d : Type u_1\nL\u271d : Type u_2\nR\u271d : Type u_3\nl\u03ba r\u03ba : \u2115\ninst\u271d\u00b9\u2079 : Field K\u271d\ninst\u271d\u00b9\u2078 : Field L\u271d\ninst\u271d\u00b9\u2077 : Field R\u271d\ninst\u271d\u00b9\u2076 : Algebra K\u271d L\u271d\ninst\u271d\u00b9\u2075 : Algebra K\u271d R\u271d\ninst\u271d\u00b9\u2074 : Fact (finrank K\u271d L\u271d = l\u03ba)\ninst\u271d\u00b9\u00b3 : Fact (finrank K\u271d R\u271d = r\u03ba)\ninst\u271d\u00b9\u00b2 : SMulCommClass K\u271d L\u271d L\u271d\ninst\u271d\u00b9\u00b9 : SMulCommClass K\u271d R\u271d R\u271d\nK : Type u\nL : Type v\nR : Type w\ninst\u271d\u00b9\u2070 : Field K\ninst\u271d\u2079 : Field R\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Module K L\ninst\u271d\u2076 : Module K R\ninst\u271d\u2075 : Semiring (TensorProduct K L R)\ninst\u271d\u2074 : Module R (TensorProduct K L R)\ninst\u271d\u00b3 : Algebra K R\ninst\u271d\u00b2 : Algebra K L\ninst\u271d\u00b9 : Algebra R (TensorProduct K L R)\ninst\u271d : IsScalarTower K R (TensorProduct K L R)\n\u03b9L : Type u_4\nbL : Basis \u03b9L K L\nthis : Module R (TensorProduct K L R) := inferInstance\nbasis_vectors : \u03b9L \u2192 TensorProduct K L R := fun i => bL i \u2297\u209c[K] 1\n\u22a2 LinearIndependent R basis_vectors",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5/ArkLib/Data/FieldTheory/BinaryTowerField/TensorAlgebra.lean#L280"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-05-30T05:28:52+07:00",
        "inclusion_date": "2025-05-30T06:35:34.554180+00:00"
      },
      "id": "067a7d2197d0aa20af4acdf787c681744185155de1092818d276f96e4d7fb8de"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/TensorAlgebra.lean",
        "start_line": 281,
        "start_column": 65,
        "end_line": 281,
        "end_column": 70
      },
      "debug_info": {
        "goal": "K\u271d : Type u_1\nL\u271d : Type u_2\nR\u271d : Type u_3\nl\u03ba r\u03ba : \u2115\ninst\u271d\u00b9\u2079 : Field K\u271d\ninst\u271d\u00b9\u2078 : Field L\u271d\ninst\u271d\u00b9\u2077 : Field R\u271d\ninst\u271d\u00b9\u2076 : Algebra K\u271d L\u271d\ninst\u271d\u00b9\u2075 : Algebra K\u271d R\u271d\ninst\u271d\u00b9\u2074 : Fact (finrank K\u271d L\u271d = l\u03ba)\ninst\u271d\u00b9\u00b3 : Fact (finrank K\u271d R\u271d = r\u03ba)\ninst\u271d\u00b9\u00b2 : SMulCommClass K\u271d L\u271d L\u271d\ninst\u271d\u00b9\u00b9 : SMulCommClass K\u271d R\u271d R\u271d\nK : Type u\nL : Type v\nR : Type w\ninst\u271d\u00b9\u2070 : Field K\ninst\u271d\u2079 : Field R\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Module K L\ninst\u271d\u2076 : Module K R\ninst\u271d\u2075 : Semiring (TensorProduct K L R)\ninst\u271d\u2074 : Module R (TensorProduct K L R)\ninst\u271d\u00b3 : Algebra K R\ninst\u271d\u00b2 : Algebra K L\ninst\u271d\u00b9 : Algebra R (TensorProduct K L R)\ninst\u271d : IsScalarTower K R (TensorProduct K L R)\n\u03b9L : Type u_4\nbL : Basis \u03b9L K L\nthis : Module R (TensorProduct K L R) := inferInstance\nbasis_vectors : \u03b9L \u2192 TensorProduct K L R := fun i => bL i \u2297\u209c[K] 1\nhli : LinearIndependent R basis_vectors\n\u22a2 \u22a4 \u2264 Submodule.span R (Set.range basis_vectors)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5/ArkLib/Data/FieldTheory/BinaryTowerField/TensorAlgebra.lean#L281"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-05-30T05:28:52+07:00",
        "inclusion_date": "2025-05-30T06:35:34.554180+00:00"
      },
      "id": "2b586d651ca91f23e994151fb0f496806f86f7188e1c9339fba173de3e3e5149"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/TensorAlgebra.lean",
        "start_line": 334,
        "start_column": 25,
        "end_line": 334,
        "end_column": 30
      },
      "debug_info": {
        "goal": "K\u271d : Type u_1\nL\u271d : Type u_2\nR\u271d : Type u_3\nl\u03ba r\u03ba : \u2115\ninst\u271d\u00b2\u00b3 : Field K\u271d\ninst\u271d\u00b2\u00b2 : Field L\u271d\ninst\u271d\u00b2\u00b9 : Field R\u271d\ninst\u271d\u00b2\u2070 : Algebra K\u271d L\u271d\ninst\u271d\u00b9\u2079 : Algebra K\u271d R\u271d\ninst\u271d\u00b9\u2078 : Fact (finrank K\u271d L\u271d = l\u03ba)\ninst\u271d\u00b9\u2077 : Fact (finrank K\u271d R\u271d = r\u03ba)\ninst\u271d\u00b9\u2076 : SMulCommClass K\u271d L\u271d L\u271d\ninst\u271d\u00b9\u2075 : SMulCommClass K\u271d R\u271d R\u271d\nK : Type u_4\nL : Type u_5\nR : Type u_6\ninst\u271d\u00b9\u2074 : Field K\ninst\u271d\u00b9\u00b3 : Field L\ninst\u271d\u00b9\u00b2 : Field R\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra K R\ninst\u271d\u2079 : IsScalarTower K L (TensorProduct K L R)\ninst\u271d\u2078 : IsScalarTower K R (TensorProduct K L R)\n\u03b9L : Type u_7\n\u03b9R : Type u_8\ninst\u271d\u2077 : _root_.Fintype \u03b9L\ninst\u271d\u2076 : _root_.Fintype \u03b9R\n\u03ba \u03c4 \u03b9 : \u2115\ninst\u271d\u2075 : Fact (\u03ba < \u03c4)\ninst\u271d\u2074 : Fact (\u03b9 < \u03c4)\ninst\u271d\u00b3 : Module (BTField \u03ba) (BTField \u03c4)\ninst\u271d\u00b2 : Module (BTField \u03ba) (BTField \u03b9)\ninst\u271d\u00b9 : Algebra (BTField \u03ba) (BTField \u03c4)\ninst\u271d : Algebra (BTField \u03ba) (BTField \u03b9)\n\u22a2 Nonempty\n    (TensorProduct (BTField \u03ba) (BTField \u03c4) (BTField \u03b9) \u2243\u2090[BTField \u03ba] TensorProduct (BTField \u03ba) (BTField \u03c4) (BTField \u03b9))",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5/ArkLib/Data/FieldTheory/BinaryTowerField/TensorAlgebra.lean#L334"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-05-30T05:28:52+07:00",
        "inclusion_date": "2025-05-30T06:35:34.554180+00:00"
      },
      "id": "91cd0bfc6a5396a5935f93e308f43a01e230725ac968820a66debe2af2d80a49"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/TensorAlgebra.lean",
        "start_line": 347,
        "start_column": 25,
        "end_line": 347,
        "end_column": 30
      },
      "debug_info": {
        "goal": "K\u271d : Type u_1\nL\u271d : Type u_2\nR\u271d : Type u_3\nl\u03ba r\u03ba : \u2115\ninst\u271d\u00b2\u2070 : Field K\u271d\ninst\u271d\u00b9\u2079 : Field L\u271d\ninst\u271d\u00b9\u2078 : Field R\u271d\ninst\u271d\u00b9\u2077 : Algebra K\u271d L\u271d\ninst\u271d\u00b9\u2076 : Algebra K\u271d R\u271d\ninst\u271d\u00b9\u2075 : Fact (finrank K\u271d L\u271d = l\u03ba)\ninst\u271d\u00b9\u2074 : Fact (finrank K\u271d R\u271d = r\u03ba)\ninst\u271d\u00b9\u00b3 : SMulCommClass K\u271d L\u271d L\u271d\ninst\u271d\u00b9\u00b2 : SMulCommClass K\u271d R\u271d R\u271d\nK : Type u_4\nL : Type u_5\nR : Type u_6\ninst\u271d\u00b9\u00b9 : Field K\ninst\u271d\u00b9\u2070 : Field L\ninst\u271d\u2079 : Field R\ninst\u271d\u2078 : Algebra K L\ninst\u271d\u2077 : Algebra K R\ninst\u271d\u2076 : IsScalarTower K L (TensorProduct K L R)\ninst\u271d\u2075 : IsScalarTower K R (TensorProduct K L R)\n\u03b9L : Type u_7\n\u03b9R : Type u_8\ninst\u271d\u2074 : _root_.Fintype \u03b9L\ninst\u271d\u00b3 : _root_.Fintype \u03b9R\n\u03ba \u03c4 : \u2115\ninst\u271d\u00b2 : Fact (\u03ba < \u03c4)\ninst\u271d\u00b9 : Module (BTField \u03ba) (BTField \u03c4)\ninst\u271d : Algebra (BTField \u03ba) (BTField \u03c4)\n\u22a2 Nonempty\n    (TensorProduct (BTField \u03ba) (BTField \u03c4) (BTField \u03c4) \u2243\u2090[BTField \u03ba] TensorProduct (BTField \u03ba) (BTField \u03c4) (BTField \u03c4))",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5/ArkLib/Data/FieldTheory/BinaryTowerField/TensorAlgebra.lean#L347"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-05-30T05:28:52+07:00",
        "inclusion_date": "2025-05-30T06:35:34.554180+00:00"
      },
      "id": "f2539cbd5d2f19fcab033448f4cfec69f67329dff8bd40d0980212e639af8383"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 7,
        "start_column": 54,
        "end_line": 7,
        "end_column": 59
      },
      "debug_info": {
        "goal": "A B : Type\nF : Set (A \u00d7 B)\n\u22a2 (\u2203 f, graph f = F) \u2192 is_func_graph F",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L7"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "d306a2896591ca62c4c52bc4d014cbaef283fee98205e4ce72c8134d9f9a163d"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 13,
        "start_column": 23,
        "end_line": 13,
        "end_column": 28
      },
      "debug_info": {
        "goal": "A B C : Type\nR : Set (A \u00d7 B)\nS : Set (B \u00d7 C)\nf : A \u2192 C\nh1 : \u2200 (b : B), b \u2208 Ran R \u2227 b \u2208 Dom S\nh2 : graph f = comp S R\n\u22a2 is_func_graph S",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L13"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "fe605d5551132486e5e6e1d66335ab88600edbebca3a810885a60144db05df26"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 19,
        "start_column": 33,
        "end_line": 19,
        "end_column": 38
      },
      "debug_info": {
        "goal": "A B : Type\nf : A \u2192 B\nR : BinRel A\nS : BinRel B\nh : \u2200 (x y : A), R x y \u2194 S (f x) (f y)\n\u22a2 reflexive S \u2192 reflexive R",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L19"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "506a178ed2eff45db839b3044c6cce43fcd5403a125517885cdc7d4f31c6f332"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 26,
        "start_column": 33,
        "end_line": 26,
        "end_column": 38
      },
      "debug_info": {
        "goal": "A B : Type\nf : A \u2192 B\nR : BinRel A\nS : BinRel B\nh : \u2200 (x y : B), S x y \u2194 \u2203 u v, f u = x \u2227 f v = y \u2227 R u v\n\u22a2 reflexive R \u2192 reflexive S",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L26"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "3f7800684e023588f419ab6590414770c07bd14a46006c66b20a5d5dffc97eda"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 33,
        "start_column": 35,
        "end_line": 33,
        "end_column": 40
      },
      "debug_info": {
        "goal": "A B : Type\nf : A \u2192 B\nR : BinRel A\nS : BinRel B\nh : \u2200 (x y : B), S x y \u2194 \u2203 u v, f u = x \u2227 f v = y \u2227 R u v\n\u22a2 transitive R \u2192 transitive S",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "1c91ac987bbcd3a57469e93870b7aac1e6be06cdbd37d0fbb582fe8977b4a4a9"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 39,
        "start_column": 33,
        "end_line": 39,
        "end_column": 38
      },
      "debug_info": {
        "goal": "A B : Type\nR : BinRel B\nS : BinRel (A \u2192 B)\nh : \u2200 (f g : A \u2192 B), S f g \u2194 \u2200 (x : A), R (f x) (g x)\n\u22a2 symmetric R \u2192 symmetric S",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "8f70e71ac8e2d69f4574aec9e6dcf34da5f9c88fcac74afd7988cd8794bad7db"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 43,
        "start_column": 59,
        "end_line": 43,
        "end_column": 64
      },
      "debug_info": {
        "goal": "A : Type\nf : A \u2192 A\na : A\nh : \u2200 (x : A), f x = a\n\u22a2 \u2200 (g : A \u2192 A), f \u2218 g = f",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L43"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "b84cc79d4d165fc8acc0c14ac60055a27e0691e40f650d5fdf61b210b5b36f95"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 48,
        "start_column": 37,
        "end_line": 48,
        "end_column": 42
      },
      "debug_info": {
        "goal": "A : Type\nf : A \u2192 A\na : A\nh : \u2200 (g : A \u2192 A), f \u2218 g = f\n\u22a2 \u2203 y, \u2200 (x : A), f x = y",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "38f5be1eff08a355ba8035c65e7f685d5421d6d736c589f6849dc4c8f6d81261"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 53,
        "start_column": 29,
        "end_line": 53,
        "end_column": 34
      },
      "debug_info": {
        "goal": "A B C : Type\nf : A \u2192 B\ng : B \u2192 C\n\u22a2 onto (g \u2218 f) \u2192 onto g",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L53"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "7690097126871100288605fefc558d5abfbf89bdae55f70d22ec5fae769b6581"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 57,
        "start_column": 41,
        "end_line": 57,
        "end_column": 46
      },
      "debug_info": {
        "goal": "A B C : Type\nf : A \u2192 B\ng : B \u2192 C\n\u22a2 one_to_one (g \u2218 f) \u2192 one_to_one f",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L57"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "2453be705fc71bdc678100497bceab381fe7fce27e6b96ed5353f66fa1034712"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 61,
        "start_column": 56,
        "end_line": 61,
        "end_column": 61
      },
      "debug_info": {
        "goal": "A B C : Type\nf : A \u2192 B\ng : B \u2192 C\n\u22a2 onto f \u2192 \u00acone_to_one g \u2192 \u00acone_to_one (g \u2218 f)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "49cd738d4e30631c0852829e67f700a1e4aa6e50c601fc901edc02c2207742a8"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 65,
        "start_column": 50,
        "end_line": 65,
        "end_column": 55
      },
      "debug_info": {
        "goal": "A B C : Type\nf : A \u2192 B\ng : B \u2192 C\n\u22a2 \u00aconto f \u2192 one_to_one g \u2192 \u00aconto (g \u2218 f)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L65"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "20d06e394fff1d56ee4c210ec9b6509147f141838e0dd6719461f4e2cafa83b4"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 70,
        "start_column": 29,
        "end_line": 70,
        "end_column": 34
      },
      "debug_info": {
        "goal": "A B : Type\nf : A \u2192 B\ng : B \u2192 Set A\nh : \u2200 (b : B), g b = {a | f a = b}\n\u22a2 onto f \u2192 one_to_one g",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L70"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "69e1fb34b00c7de7e4d5a6928d7b606b421f683fa4a131621f0367a1e5aae085"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 76,
        "start_column": 23,
        "end_line": 76,
        "end_column": 28
      },
      "debug_info": {
        "goal": "A B C : Type\nR : Set (A \u00d7 B)\nS : Set (B \u00d7 C)\nf : A \u2192 C\ng : B \u2192 C\nh1 : graph f = comp S R\nh2 : graph g = S\nh3 : one_to_one g\n\u22a2 is_func_graph R",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "0a0f20fb062b08031dd1b8875382a276f9e64f3f3e850e2b0fb749e84215bce0"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 82,
        "start_column": 49,
        "end_line": 82,
        "end_column": 54
      },
      "debug_info": {
        "goal": "A B : Type\nf : A \u2192 B\nR : BinRel A\nS : BinRel B\nh1 : \u2200 (x y : B), S x y \u2194 \u2203 u v, f u = x \u2227 f v = y \u2227 R u v\nh2 : onto f\n\u22a2 reflexive R \u2192 reflexive S",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "917ee94953c6eb4f1ca2f49d67e36dacc1b0e963ee3fb24332c8fe2b7504cf4e"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 88,
        "start_column": 57,
        "end_line": 88,
        "end_column": 62
      },
      "debug_info": {
        "goal": "A B : Type\nf : A \u2192 B\nR : BinRel A\nS : BinRel B\nh1 : \u2200 (x y : B), S x y \u2194 \u2203 u v, f u = x \u2227 f v = y \u2227 R u v\nh2 : one_to_one f\n\u22a2 transitive R \u2192 transitive S",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L88"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "0642ba4fc276eec3ef7b0bc64b5879d2fd0905fd26d0d847869143db388398b2"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 92,
        "start_column": 56,
        "end_line": 92,
        "end_column": 61
      },
      "debug_info": {
        "goal": "A B C : Type\nf : B \u2192 C\ng h : A \u2192 B\nh1 : one_to_one f\nh2 : f \u2218 g = f \u2218 h\n\u22a2 g = h",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L92"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "82218994b703664aea204202bb92f83912b762186bc0766beb3efd46a94aadd2"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 97,
        "start_column": 20,
        "end_line": 97,
        "end_column": 25
      },
      "debug_info": {
        "goal": "A B C : Type\nf : B \u2192 C\na : A\nh1 : \u2200 (g h : A \u2192 B), f \u2218 g = f \u2218 h \u2192 g = h\n\u22a2 one_to_one f",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "f33209e332d03decd546e6dea6ca3f17912f9883c2ce2df9ee869e10edc3db43"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 102,
        "start_column": 51,
        "end_line": 102,
        "end_column": 56
      },
      "debug_info": {
        "goal": "A B : Type\nf : A \u2192 B\ng : B \u2192 A\nh1 : graph g = inv (graph f)\n\u22a2 f \u2218 g = id",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L102"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "eb14ae9dcabb92d68116a74b3954b429b7d67b4fa5c140e0d3b1297804d85ea2"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 106,
        "start_column": 34,
        "end_line": 106,
        "end_column": 39
      },
      "debug_info": {
        "goal": "A B : Type\nf : A \u2192 B\ng : B \u2192 A\nh1 : f \u2218 g = id\n\u22a2 onto f",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L106"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-06-29T20:58:46-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "573e5f9f2ee665ec4ca26c802f208161f8d810d8ba27646015302a0b795747c6"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 110,
        "start_column": 59,
        "end_line": 110,
        "end_column": 64
      },
      "debug_info": {
        "goal": "A B : Type\nf : A \u2192 B\ng : B \u2192 A\n\u22a2 one_to_one f \u2192 f \u2218 g = id \u2192 graph g = inv (graph f)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L110"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "e22d2e3c4867ea77e8f0dd4be61729a2bd002ed57d7676699822708c7085c7ab"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 114,
        "start_column": 53,
        "end_line": 114,
        "end_column": 58
      },
      "debug_info": {
        "goal": "A B : Type\nf : A \u2192 B\ng : B \u2192 A\n\u22a2 onto f \u2192 g \u2218 f = id \u2192 graph g = inv (graph f)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L114"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "864580e2ffb69e073caac2f62ee65dcc7278010624100c8e50b0eb77693cb301"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 118,
        "start_column": 59,
        "end_line": 118,
        "end_column": 64
      },
      "debug_info": {
        "goal": "A B : Type\nf : A \u2192 B\ng : B \u2192 A\nh : f \u2218 g = id\n\u22a2 \u2200 x \u2208 Ran (graph g), g (f x) = x",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L118"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "9eccab34a6c1e824223a058e6380831fd7f4eb969455335fbf5637e6dc9ca7c2"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 123,
        "start_column": 32,
        "end_line": 123,
        "end_column": 37
      },
      "debug_info": {
        "goal": "A B C : Type\nf : A \u2192 C\ng : B \u2192 C\nh1 : one_to_one g\nh2 : onto g\n\u22a2 \u2203 h, g \u2218 h = f",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L123"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "a52a7e197181271a992f9ebee65e9fb08d995eb9a812e81d695d7073f137c72e"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 130,
        "start_column": 65,
        "end_line": 130,
        "end_column": 70
      },
      "debug_info": {
        "goal": "A : Type\n\u22a2 symmetric (HTPI.Exercises.conjugate A)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L130"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-06-15T16:17:51-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "9c41fb870e4e1066fed3b911bec0f05124f48e270de3ecbe7a892c6e47ce029b"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 135,
        "start_column": 27,
        "end_line": 135,
        "end_column": 32
      },
      "debug_info": {
        "goal": "A : Type\nf1 f2 : A \u2192 A\nh1 : HTPI.Exercises.conjugate A f1 f2\nh2 : \u2203 a, f1 a = a\n\u22a2 \u2203 a, f2 a = a",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L135"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "fd3ed71e03c4d28bfe510ac05631e25f102f69552384c31167d9fbc8990284c1"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 140,
        "start_column": 42,
        "end_line": 140,
        "end_column": 47
      },
      "debug_info": {
        "goal": "A : Type\nF : Set (Set A)\nB : Set A\n\u22a2 smallestElt (sub A) B F \u2192 B = \u22c2\u2080 F",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L140"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "cb3e536667ccf4041078f8df88e6aafed325ffc8eb535ef2c0b721768a939a0b"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 146,
        "start_column": 69,
        "end_line": 146,
        "end_column": 74
      },
      "debug_info": {
        "goal": "A : Type\nf g : A \u2192 A\nC : Set A\nh1 : f \u2218 g = id\nh2 : closed f C\n\u22a2 closed g (HTPI.Exercises.complement A C)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L146"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "0d5c963a0340cd786aef1d804ffab5f42514ed9d19f19517ef49bf6c548e6cd7"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 150,
        "start_column": 66,
        "end_line": 150,
        "end_column": 71
      },
      "debug_info": {
        "goal": "A : Type\nf : A \u2192 A\nC1 C2 : Set A\nh1 : closed f C1\nh2 : closed f C2\n\u22a2 closed f (C1 \u222a C2)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L150"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "757cab835af7812472d5bca594616713fa064374a4972fbd1fc433911d92595f"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 155,
        "start_column": 25,
        "end_line": 155,
        "end_column": 30
      },
      "debug_info": {
        "goal": "A : Type\nf : A \u2192 A\nB1 B2 C1 C2 : Set A\nh1 : closure f B1 C1\nh2 : closure f B2 C2\n\u22a2 B1 \u2286 B2 \u2192 C1 \u2286 C2",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L155"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "1c477d1e4ab22a03fe25f68535a3fa4648bfebe7a33773907686a6265b517d1e"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 160,
        "start_column": 37,
        "end_line": 160,
        "end_column": 42
      },
      "debug_info": {
        "goal": "A : Type\nf : A \u2192 A\nB1 B2 C1 C2 : Set A\nh1 : closure f B1 C1\nh2 : closure f B2 C2\n\u22a2 closure f (B1 \u222a B2) (C1 \u222a C2)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L160"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "1e2045e459e570ac5263dae6cb1edc0c7ca1f556339731bf46b15b030d955b13"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 164,
        "start_column": 37,
        "end_line": 164,
        "end_column": 42
      },
      "debug_info": {
        "goal": "A : Type\nf : A \u2192 A \u2192 A\nB : Set A\n\u22a2 \u2203 C, closure2 f B C",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "511dc29984c226a4235d7283aa98e5e1d00f95b128d437259da945c361d130b0"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 168,
        "start_column": 43,
        "end_line": 168,
        "end_column": 48
      },
      "debug_info": {
        "goal": "A : Type\nF : Set (A \u2192 A)\nB : Set A\n\u22a2 \u2203 C, closure_family F B C",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L168"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "e75f1e13170fbce1cff055b6137f4071252cad9329eec14d58acde1b4038af96"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 174,
        "start_column": 47,
        "end_line": 174,
        "end_column": 52
      },
      "debug_info": {
        "goal": "A B : Type\nf : A \u2192 B\nW X : Set A\n\u22a2 image f (W \u222a X) = image f W \u222a image f X",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L174"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "6f2dcc7949fe923838e267cfad85365dc1b6a5416e639b018d76ab71b996703b"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 177,
        "start_column": 47,
        "end_line": 177,
        "end_column": 52
      },
      "debug_info": {
        "goal": "A B : Type\nf : A \u2192 B\nW X : Set A\n\u22a2 image f (W \\ X) = image f W \\ image f X",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L177"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "f39b722c736d6b48f34bdbaae6005747b2117ef134773e6f9e9a76ce8b0ef841"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 180,
        "start_column": 37,
        "end_line": 180,
        "end_column": 42
      },
      "debug_info": {
        "goal": "A B : Type\nf : A \u2192 B\nW X : Set A\n\u22a2 W \u2286 X \u2194 image f W \u2286 image f X",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L180"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "15d915563d515b3f258762084360a4e72e1567874130b951cc87afa97003249e"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 184,
        "start_column": 49,
        "end_line": 184,
        "end_column": 54
      },
      "debug_info": {
        "goal": "A B : Type\nf : A \u2192 B\nY Z : Set B\n\u22a2 inverse_image f (Y \u2229 Z) = inverse_image f Y \u2229 inverse_image f Z",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L184"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "414b9581016d3a0c043ab4154fdffb629384ebf30080b11c1e60e0b2b89ef43a"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 188,
        "start_column": 49,
        "end_line": 188,
        "end_column": 54
      },
      "debug_info": {
        "goal": "A B : Type\nf : A \u2192 B\nY Z : Set B\n\u22a2 inverse_image f (Y \u222a Z) = inverse_image f Y \u222a inverse_image f Z",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L188"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "5f776fdd503ab45a8f0adcc913a84db0646fe1d3fbb19abf5e3793eb7f049c14"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 192,
        "start_column": 49,
        "end_line": 192,
        "end_column": 54
      },
      "debug_info": {
        "goal": "A B : Type\nf : A \u2192 B\nY Z : Set B\n\u22a2 inverse_image f (Y \\ Z) = inverse_image f Y \\ inverse_image f Z",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L192"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "c6cafc30720889a7c0f5310e7711d7bbbeece63c29dc56639657ccb4a6c482c9"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 195,
        "start_column": 53,
        "end_line": 195,
        "end_column": 58
      },
      "debug_info": {
        "goal": "A B : Type\nf : A \u2192 B\nY Z : Set B\n\u22a2 Y \u2286 Z \u2194 inverse_image f Y \u2286 inverse_image f Z",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L195"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "320bde519fc304f31fc1cbd917a8d66873c0e9d01e5dc5ca68c1a8bf474b7fe0"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 198,
        "start_column": 39,
        "end_line": 198,
        "end_column": 44
      },
      "debug_info": {
        "goal": "A B : Type\nf : A \u2192 B\nX : Set A\n\u22a2 inverse_image f (image f X) = X",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L198"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "8f6e9e42571c3f153c34547079a1c8f0bbfae1d5cfe3bb939cd31f7e432cf3da"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 201,
        "start_column": 39,
        "end_line": 201,
        "end_column": 44
      },
      "debug_info": {
        "goal": "A B : Type\nf : A \u2192 B\nY : Set B\n\u22a2 image f (inverse_image f Y) = Y",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L201"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "760dbd2c249d0ee043f7fcae351a6b7ee06f60d2f775b1264a72871fbd0dca00"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 204,
        "start_column": 34,
        "end_line": 204,
        "end_column": 39
      },
      "debug_info": {
        "goal": "A : Type\nf : A \u2192 A\nC : Set A\n\u22a2 closed f C \u2192 image f C \u2286 C",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L204"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "a42300b723f148629f9a581b7ccbc58278949d9e00a7be288c6e2cd94e4e7f34"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 207,
        "start_column": 45,
        "end_line": 207,
        "end_column": 50
      },
      "debug_info": {
        "goal": "A : Type\nf : A \u2192 A\nC : Set A\n\u22a2 image f C \u2286 C \u2192 C \u2286 inverse_image f C",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L207"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "e6105b52f7c09525aa0e064a5521c310826cf5b2e10c35aad68dd2afcbd02a49"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 210,
        "start_column": 42,
        "end_line": 210,
        "end_column": 47
      },
      "debug_info": {
        "goal": "A : Type\nf : A \u2192 A\nC : Set A\n\u22a2 C \u2286 inverse_image f C \u2192 closed f C",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L210"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "77dc06db1505ed5c0cad3f27f8f4cc0230a224c90ef05190a46a4d770bd88a96"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap5Ex.lean",
        "start_line": 214,
        "start_column": 37,
        "end_line": 214,
        "end_column": 42
      },
      "debug_info": {
        "goal": "A B : Type\nf : A \u2192 B\ng : B \u2192 A\nY : Set B\nh1 : f \u2218 g = id\nh2 : g \u2218 f = id\n\u22a2 inverse_image f Y = image g Y",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap5Ex.lean#L214"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-12-07T13:35:34-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "7875439f556e801763f7fcab956359c12366290dc902337289fc434b2a1510e2"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 9,
        "start_column": 57,
        "end_line": 9,
        "end_column": 62
      },
      "debug_info": {
        "goal": "k : \u2115\n\u22a2 fnz (2 * k + 1) = -\u2191(k + 1)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L9"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-07-05T10:06:58-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "2ae446ec05f7650d1e07a48c8cc9ecb1b3efae99ee5f6ea155f3fc3bd6087ade"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 12,
        "start_column": 35,
        "end_line": 12,
        "end_column": 40
      },
      "debug_info": {
        "goal": "\u22a2 fnz \u2218 fzn = id",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L12"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-07-05T10:06:58-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "f4eba1086985f441e61948c998f5696350c7c21777fae1c8b4b493b9794f61e5"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 15,
        "start_column": 58,
        "end_line": 15,
        "end_column": 63
      },
      "debug_info": {
        "goal": "k : \u2115\n\u22a2 tri (k + 1) = tri k + k + 1",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L15"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-07-05T10:06:58-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "cdb9bc0fe846ee25e52cc526bfced1fc24c8b1abb2c9785df10016fe9efd5427"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 18,
        "start_column": 59,
        "end_line": 18,
        "end_column": 64
      },
      "debug_info": {
        "goal": "j k : \u2115\nh1 : j \u2264 k\n\u22a2 tri j \u2264 tri k",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L18"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-07-05T10:06:58-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "c2710fe83f37cf6cec0c9dc98a86ad4e9e337bd26dfd64182eba60189e87990f"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 21,
        "start_column": 62,
        "end_line": 21,
        "end_column": 67
      },
      "debug_info": {
        "goal": "U V : Type\nf : U \u2192 V\n\u22a2 range f = Ran (graph f)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L21"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "4fc08b386b87de3a969ce63089df9f4e22da84dc411caead72a41b4efe7a06d2"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 25,
        "start_column": 33,
        "end_line": 25,
        "end_column": 38
      },
      "debug_info": {
        "goal": "U V : Type\nf : U \u2192 V\n\u22a2 onto f \u2194 range f = Univ V",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L25"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "11181ca00d3b62010dabb21c0748dfd95b7d74f3f8c061a3b0d5fca61ce6444a"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 30,
        "start_column": 45,
        "end_line": 30,
        "end_column": 50
      },
      "debug_info": {
        "goal": "U V : Type\nh1 : U \u223c V\nh2 : ctble U\n\u22a2 ctble V",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "9a8587bb9f7aba582e0592ce662da4a41f3bbe0579c71a585880b457c7694d11"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 33,
        "start_column": 55,
        "end_line": 33,
        "end_column": 60
      },
      "debug_info": {
        "goal": "\u22a2 denum \u2191{n | even n}",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "a5a372ef4d9b20adf267d1691057b2e9a73aa3a059ae6478d8f9cd338d062275"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 37,
        "start_column": 66,
        "end_line": 37,
        "end_column": 71
      },
      "debug_info": {
        "goal": "U V : Type\n\u22a2 U \u223c V \u2194 \u2203 f g, f \u2218 g = id \u2227 g \u2218 f = id",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "033f5d98c5d10f9fbf133bb129ddb962df513156112fb968e6942880eb390c96"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 41,
        "start_column": 53,
        "end_line": 41,
        "end_column": 58
      },
      "debug_info": {
        "goal": "U V : Type\nf : U \u2192 V\ng : V \u2192 U\nh : g \u2218 f = id\n\u22a2 image g \u2218 image f = id",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "8a41b018e3d71687651481d5de324f17e4fbacd9bb07b68aad8a418df9fc0729"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 45,
        "start_column": 35,
        "end_line": 45,
        "end_column": 40
      },
      "debug_info": {
        "goal": "U V : Type\nh : U \u223c V\n\u22a2 Set U \u223c Set V",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L45"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "949b1751af147c8bd57163576cf40a2b75ba2d3efde6e0caafa149bf5683358c"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 53,
        "start_column": 55,
        "end_line": 53,
        "end_column": 60
      },
      "debug_info": {
        "goal": "U : Type\nA : Set U\nX1 X2 : Set \u2191A\nh : HTPI.Exercises.val_image U A X1 = HTPI.Exercises.val_image U A X2\n\u22a2 X1 \u2286 X2",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L53"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "f6bbd116db036aa5e16a38205a2c0632f1f6c28d771201fdd69e855d30f264bf"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 57,
        "start_column": 32,
        "end_line": 57,
        "end_column": 37
      },
      "debug_info": {
        "goal": "U : Type\nA : Set U\n\u22a2 one_to_one (HTPI.Exercises.val_image U A)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L57"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "2b3004208d5db45bbd21567a72d2c0471efde8955a253ce78772f623b802311b"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 61,
        "start_column": 33,
        "end_line": 61,
        "end_column": 38
      },
      "debug_info": {
        "goal": "U : Type\nA : Set U\n\u22a2 range (HTPI.Exercises.val_image U A) = \ud835\udcab A",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "e2226382bb15401e583eb3c78d5b7f40068a5d60ef5a7161cbd3bafbe07aff6c"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 65,
        "start_column": 19,
        "end_line": 65,
        "end_column": 24
      },
      "debug_info": {
        "goal": "U : Type\nA : Set U\n\u22a2 Set \u2191A \u223c \u2191(\ud835\udcab A)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L65"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "de35b8110e0665ce27b0fc3609662d8af5b1fbda43271a5ce679a69ec5ce6096"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 70,
        "start_column": 31,
        "end_line": 70,
        "end_column": 36
      },
      "debug_info": {
        "goal": "U V : Type\nA : Set U\nB : Set V\nh : \u2191A \u223c \u2191B\n\u22a2 \u2191(\ud835\udcab A) \u223c \u2191(\ud835\udcab B)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L70"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "b0f7f001d206778779951af643b6b0e6d6a8e5fa7f480567b8ce1477d412b838"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 74,
        "start_column": 45,
        "end_line": 74,
        "end_column": 50
      },
      "debug_info": {
        "goal": "U V : Type\nA : Set U\nf : \u2191A \u2192 V\nv : V\n\u22a2 func_restrict (func_extend f v) A = f",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L74"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "e818c34b38119520359ceebd1b8a1e27812533702991c44f9b3e277ca9fe60a8"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 78,
        "start_column": 47,
        "end_line": 78,
        "end_column": 52
      },
      "debug_info": {
        "goal": "U : Type\n\u22a2 ctble U \u2194 \u2203 f, one_to_one f",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L78"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "d7d968ec102edfaafbefe640d80877d4b734a7eb4af08eda9ee2a2911cb5c9f1"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 82,
        "start_column": 43,
        "end_line": 82,
        "end_column": 48
      },
      "debug_info": {
        "goal": "U : Type\nh : ctble U\nA : Set U\n\u22a2 ctble \u2191A",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "329615b5bb4b1f31f28b908f29578888c10fb64451e3996b83357a2cb87d8460"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 86,
        "start_column": 45,
        "end_line": 86,
        "end_column": 50
      },
      "debug_info": {
        "goal": "U : Type\nA B : Set U\nh1 : B \u2286 A\nh2 : ctble \u2191A\n\u22a2 ctble \u2191B",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L86"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "b72797232c8fe014a9391924901425c1b2ff0c0fbdf711dac1fd8b1038483807"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 91,
        "start_column": 53,
        "end_line": 91,
        "end_column": 58
      },
      "debug_info": {
        "goal": "U : Type\nA : Set U\nf : U \u2192 \u2115\nh : empty A\n\u22a2 image f A = I 0",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L91"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "13c1f51ed143da6f4767bcc13e9057e83491bc36f338c2f8a40a6b5e972eebf6"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 97,
        "start_column": 61,
        "end_line": 97,
        "end_column": 66
      },
      "debug_info": {
        "goal": "U V : Type\nA : Set U\nB : Set V\na : U\nb : V\nf : U \u2192 V\nh1 : one_one_on f A\nh2 : image f A = B\nh3 : a \u2208 A\nh4 : f a = b\n\u22a2 \u2191(A \\ {a}) \u223c \u2191(B \\ {b})",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "5c57ac855fdb2ef273b0c4ad9a25560bad0ca0afed966de2062798863e60808a"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 101,
        "start_column": 53,
        "end_line": 101,
        "end_column": 58
      },
      "debug_info": {
        "goal": "U : Type\nA : Set U\na : U\nh1 : a \u2208 A\nh2 : empty (A \\ {a})\n\u22a2 A = {a}",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L101"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "4231aa48413f6c9da256acd084780623ae46ff7e505a64f4d6a4f3d565a38171"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 104,
        "start_column": 69,
        "end_line": 104,
        "end_column": 74
      },
      "debug_info": {
        "goal": "n : \u2115\nh : \u2191(I 0) \u223c \u2191(I n)\n\u22a2 n = 0",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L104"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "662c011f53e9653e7c2aee57218e3bc84672209a313ebf3b2d0af557d8401bed"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 108,
        "start_column": 64,
        "end_line": 108,
        "end_column": 69
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 \u2983m n : \u2115\u2984, \u2191(I m) \u223c \u2191(I n) \u2192 m = n",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L108"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "588bf0ff7ccd24700012dff931c31d6843db6ecef4e4a58e708039a60dbd9644"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 112,
        "start_column": 53,
        "end_line": 112,
        "end_column": 58
      },
      "debug_info": {
        "goal": "U : Type\nA : Set U\nm n : \u2115\nh1 : numElts A m\nh2 : numElts A n\n\u22a2 m = n",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "24f996e04e5f80086290fa0442664ddb49adef58b2873817c3bfe6e2a5e0eca7"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 116,
        "start_column": 60,
        "end_line": 116,
        "end_column": 65
      },
      "debug_info": {
        "goal": "m : \u2115\n\u22a2 \u2200 \u2983k : \u2115\u2984, k \u2264 m \u2192 num_elts_below (set_rp_below m) k = num_rp_below m k",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L116"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "1dd5ffdf488142dcbd6a12e55d3850fcbfd7b5b473f2f02d0f85f3bb807ab486"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 122,
        "start_column": 45,
        "end_line": 122,
        "end_column": 50
      },
      "debug_info": {
        "goal": "m n : \u2115\n\u22a2 image (qr n) (I (m * n)) = I m \u00d7\u209b I n",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L122"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-07-03T16:43:00-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "bbe87891bb133625fa7cbd7d3a65a52de626ea84c46c3a9ee019657c4c3b516d"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 144,
        "start_column": 35,
        "end_line": 144,
        "end_column": 40
      },
      "debug_info": {
        "goal": "U V : Type\nA C : Set U\nf : \u2191A \u2192 V\ng : \u2191C \u2192 V\nh1 : empty (range f \u2229 range g)\nh2 : one_to_one f\nh3 : one_to_one g\n\u22a2 one_to_one (HTPI.Exercises.func_union U V A C f g)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L144"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "18760f583ccfdbe477aac0ff63b6c8b258d2a908c6b2da4567a55696d27569ed"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 149,
        "start_column": 50,
        "end_line": 149,
        "end_column": 55
      },
      "debug_info": {
        "goal": "U V : Type\nA C : Set U\nf : \u2191A \u2192 V\ng : \u2191C \u2192 V\nh : empty (A \u2229 C)\n\u22a2 range (HTPI.Exercises.func_union U V A C f g) = range f \u222a range g",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L149"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "47b6381185d362a5ae4721c4fd5a992c632917acb4ac037d682dd5eb398d585d"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 156,
        "start_column": 55,
        "end_line": 156,
        "end_column": 60
      },
      "debug_info": {
        "goal": "U V : Type\nA C : Set U\nB D : Set V\nh1 : empty (A \u2229 C)\nh2 : empty (B \u2229 D)\nh3 : \u2191A \u223c \u2191B\nh4 : \u2191C \u223c \u2191D\n\u22a2 \u2191(A \u222a C) \u223c \u2191(B \u222a D)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L156"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "efa0984b0c941705c058d53ff39ab442735315adb4bf4c29d8eb8f8d14eabc59"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 159,
        "start_column": 64,
        "end_line": 159,
        "end_column": 69
      },
      "debug_info": {
        "goal": "n m : \u2115\n\u22a2 \u2191(I m) \u223c \u2191(I (n + m) \\ I n)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L159"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "2cbea053e5ed1339339b7e3549478b5f4417b12385bf7fc4fc3075b47057cf39"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 164,
        "start_column": 31,
        "end_line": 164,
        "end_column": 36
      },
      "debug_info": {
        "goal": "U : Type\nA B : Set U\nn m : \u2115\nh1 : empty (A \u2229 B)\nh2 : numElts A n\nh3 : numElts B m\n\u22a2 numElts (A \u222a B) (n + m)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-07-10T16:20:53-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "471f475ca5c6306e62acf21c86b7ea31a9574b49a06f0dec8093ab10f61a9333"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 168,
        "start_column": 64,
        "end_line": 168,
        "end_column": 69
      },
      "debug_info": {
        "goal": "U V : Type\nA C : Set U\nB : Set V\nh1 : \u2191A \u223c \u2191B\nh2 : C \u2286 A\n\u22a2 \u2203 D \u2286 B, \u2191C \u223c \u2191D",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L168"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-07-10T16:20:53-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "278c67d0558deacc7bddd5ab47705e0891cdad13913cc94a9a7b2ec7567cbcf2"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 172,
        "start_column": 47,
        "end_line": 172,
        "end_column": 52
      },
      "debug_info": {
        "goal": "U : Type\nA B : Set U\nh1 : finite \u2191A\nh2 : B \u2286 A\n\u22a2 finite \u2191B",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L172"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-07-10T16:20:53-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "02135f943e6b94dceb237e0e447fdf626f4a9378199f2867e8744d748aa68e1a"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 176,
        "start_column": 35,
        "end_line": 176,
        "end_column": 40
      },
      "debug_info": {
        "goal": "A : Set \u2115\nh : finite \u2191A\n\u22a2 \u2203 m, \u2200 n \u2208 A, n < m",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L176"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "72e44976f7921203c7f9ff0e923488f42890fec0b4b152166c8264f7c2ad4c69"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 179,
        "start_column": 36,
        "end_line": 179,
        "end_column": 41
      },
      "debug_info": {
        "goal": "\u22a2 \u00acfinite \u2115",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L179"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "b5ddff0bee00c25ecbf26594ad519efc6f96a03729bca3b5f35402338e55f12b"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 183,
        "start_column": 33,
        "end_line": 183,
        "end_column": 38
      },
      "debug_info": {
        "goal": "U : Type\nh : denum U\n\u22a2 \u00acfinite U",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L183"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "90deea9a67d707c5749df306ac5521396a5754294071923a8feac4eb0a362be6"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 188,
        "start_column": 52,
        "end_line": 188,
        "end_column": 57
      },
      "debug_info": {
        "goal": "U : Type\nf : U \u2192 U\nh1 : one_to_one f\nh2 : finite U\n\u22a2 onto f",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L188"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "77c034b6736a15d7481b5d5e115f85c650ba88a377995082bc0355e1f35f80fe"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 193,
        "start_column": 43,
        "end_line": 193,
        "end_column": 48
      },
      "debug_info": {
        "goal": "U : Type\na b : U\n\u22a2 ctble \u2191{a, b}",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L193"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "37b1b4d381f4e205235be2f717cb25d5afb4f3c9e8faf0f3487c7baf8be15ca4"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 198,
        "start_column": 54,
        "end_line": 198,
        "end_column": 59
      },
      "debug_info": {
        "goal": "U : Type\nA B : Set U\nh1 : ctble \u2191A\nh2 : ctble \u2191B\n\u22a2 ctble \u2191(A \u222a B)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L198"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "e4711b97f42e04ff48370dc4cacae3f9d2f18b89ed538a1eef9962f4995aef67"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 202,
        "start_column": 48,
        "end_line": 202,
        "end_column": 53
      },
      "debug_info": {
        "goal": "U : Type\nF : Set (Set U)\n\u22a2 \u22c3\u2080 {A | A \u2208 F \u2227 \u00acempty A} = \u22c3\u2080 F",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L202"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "42a51f48f39e92f60077e54faa7a7b0040e20911a63361962e2acfb5d7d94bf2"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 207,
        "start_column": 33,
        "end_line": 207,
        "end_column": 38
      },
      "debug_info": {
        "goal": "U : Type\nA : Set U\nn : \u2115\n\u22a2 image (seq_cons U) (A \u00d7\u209b seq_by_length A n) = seq_by_length A (n + 1)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L207"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-07-10T16:20:53-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "1c55f2ebd95648578cccfedccec7d153443a3aae9ef9d7c0110b8e76e120d784"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 212,
        "start_column": 38,
        "end_line": 212,
        "end_column": 43
      },
      "debug_info": {
        "goal": "U : Type\nh : ctble U\n\u22a2 ctble (List U)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L212"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "027eb23edf4584a184ee61671a2c3a55aa177a4e5d08bcafebf25bc313d56654"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 222,
        "start_column": 43,
        "end_line": 222,
        "end_column": 48
      },
      "debug_info": {
        "goal": "U : Type\nA : Set U\nh : finite \u2191A\n\u22a2 \u2203 l, HTPI.Exercises.list_to_set U l = A",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L222"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "9be2cd8b8774a9daa9f76caad3015e37c0c7b8b9f2ed45c9466af8e429701a8d"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 227,
        "start_column": 36,
        "end_line": 227,
        "end_column": 41
      },
      "debug_info": {
        "goal": "U : Type\nh : ctble U\n\u22a2 ctble \u2191{X | finite \u2191X}",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L227"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "93fb0c49a86414f8e000ef73bf1e6bec4a1365e82fc92937bd582e11c205c6ce"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 231,
        "start_column": 36,
        "end_line": 231,
        "end_column": 41
      },
      "debug_info": {
        "goal": "U V W : Type\n\u22a2 (U \u00d7 V \u2192 W) \u223c (U \u2192 V \u2192 W)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L231"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "073c10c84e4add92ae0018e09321a2d41e09d8785810c8b7928cb6da66f52cf0"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 235,
        "start_column": 48,
        "end_line": 235,
        "end_column": 53
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 P, partition P \u2227 denum \u2191P \u2227 \u2200 X \u2208 P, denum \u2191X",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L235"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-12-27T10:42:05-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "90c9dfbc37bd4c7a192876efeef89fb6706fba86f979938b2a4bb727cd0b8a5e"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 239,
        "start_column": 40,
        "end_line": 239,
        "end_column": 45
      },
      "debug_info": {
        "goal": "\u22a2 \u00acctble \u2191{X | \u00acfinite \u2191X}",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L239"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-12-07T13:35:34-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "791702da1af95dfdc5c4433275ca398fa45db347a8948216a2045fa10a1ca10b"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 243,
        "start_column": 52,
        "end_line": 243,
        "end_column": 57
      },
      "debug_info": {
        "goal": "U : Type\nA B : Set U\nh : empty (A \u2229 B)\n\u22a2 \u2191(\ud835\udcab(A \u222a B)) \u223c \u2191(\ud835\udcab A \u00d7\u209b \ud835\udcab B)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L243"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-07-10T16:20:53-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "5894b9fe88877adde0bf6fbcf9cb75681209b34bcd2e076fa5aa4135fc5b71e5"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 249,
        "start_column": 47,
        "end_line": 249,
        "end_column": 52
      },
      "debug_info": {
        "goal": "U V : Type\nX : Set U\nx : U\nf : U \u2192 V\ng : V \u2192 U\nh : x \u2209 X\ny : V\n\u22a2 (x, y) \u2208 csb_func_graph f g X \u2194 g y = x",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L249"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "05adc02a65c4791f0750b55ee7ccbe707ee2a9f0ad5ea36d4684bd0c59e535c6"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 253,
        "start_column": 63,
        "end_line": 253,
        "end_column": 68
      },
      "debug_info": {
        "goal": "\u22a2 \u2191{x | 0 < x \u2227 x < 1} \u223c \u2191{x | 0 < x \u2227 x \u2264 1}",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L253"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-12-07T13:35:34-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "202837347e4915cd3100530f785e68099b300780e54431bf820116bdd2817cb1"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 259,
        "start_column": 54,
        "end_line": 259,
        "end_column": 59
      },
      "debug_info": {
        "goal": "U V : Type\nR S : Rel U V\nh : \u2200 (u : U) (v : V), R u v \u2194 S u v\n\u22a2 R = S",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L259"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "2a1cb0380dea4068230230cc20209edbd101494b2a115b3b89d70179efae1b30"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 281,
        "start_column": 60,
        "end_line": 281,
        "end_column": 65
      },
      "debug_info": {
        "goal": "U : Type\n\u22a2 \u2191(HTPI.Exercises.EqRel U) \u223c \u2191(HTPI.Exercises.Part U)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L281"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "e41a8530e1fe4e0784efd4b009c086c6b4f794b362c46d4badaba68032a4662e"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 285,
        "start_column": 28,
        "end_line": 285,
        "end_column": 33
      },
      "debug_info": {
        "goal": "U : Type\n\u22a2 \u2191(HTPI.Exercises.EqRel U) \u223c \u2191(HTPI.Exercises.EqRelExt U)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L285"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "d11f44c21ec40a90180c6875463f86cf66d678da1a9070ff787d968236607228"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 289,
        "start_column": 49,
        "end_line": 289,
        "end_column": 54
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 f, one_to_one f",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L289"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "141ba8d755a8f4776b385a814f7120da1a871d93dc675ddc150354aab21af250"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 292,
        "start_column": 63,
        "end_line": 292,
        "end_column": 68
      },
      "debug_info": {
        "goal": "X : Set \u2115\n\u22a2 HTPI.Exercises.saz_pair X \u2208 HTPI.Exercises.Part \u2115",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L292"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "bc779320464d7ca7a79eabc41ac9f39af5961dd4eb9257b9c9dc4aef6688c288"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap8Ex.lean",
        "start_line": 299,
        "start_column": 59,
        "end_line": 299,
        "end_column": 64
      },
      "debug_info": {
        "goal": "\u22a2 \u2191(HTPI.Exercises.EqRel \u2115) \u223c Set \u2115",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap8Ex.lean#L299"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "28686619f33b37185be35270d269441d26487d2e1d154d506ab656e3c17447a3"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 7,
        "start_column": 50,
        "end_line": 7,
        "end_column": 55
      },
      "debug_info": {
        "goal": "A B C : Type\nR : Set (A \u00d7 B)\nS : Set (B \u00d7 C)\n\u22a2 Dom (comp S R) \u2286 Dom R",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L7"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "ee7d7093d1364045e4e7b221e673497ad164058e134f783103239dde220f436f"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 11,
        "start_column": 66,
        "end_line": 11,
        "end_column": 71
      },
      "debug_info": {
        "goal": "A B C : Type\nR : Set (A \u00d7 B)\nS : Set (B \u00d7 C)\n\u22a2 Ran R \u2286 Dom S \u2192 Dom (comp S R) = Dom R",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L11"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "339b27b41af175d088bfc1906007612c871548843eee146ce7bb824558fd7fd4"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 16,
        "start_column": 56,
        "end_line": 16,
        "end_column": 61
      },
      "debug_info": {
        "goal": "___ : Sort u_1\nA B C : Type\nR : Set (A \u00d7 B)\nS : Set (B \u00d7 C)\n\u22a2 ___ \u2192 Ran (comp S R) = Ran S",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L16"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "33ccf6dde6a06b387eac9115d2d1eb735148dbebcad154ae2bf906e1d9575517"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 21,
        "start_column": 48,
        "end_line": 21,
        "end_column": 53
      },
      "debug_info": {
        "goal": "A B C : Type\nR : Set (A \u00d7 B)\nS T : Set (B \u00d7 C)\n\u22a2 comp S R \\ comp T R \u2286 comp (S \\ T) R",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L21"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "3c9fbd05701f5bae15b9d5d2173961b92afaa4320f83654dd75e53430c7a98a1"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 27,
        "start_column": 48,
        "end_line": 27,
        "end_column": 53
      },
      "debug_info": {
        "goal": "A B C : Type\nR : Set (A \u00d7 B)\nS T : Set (B \u00d7 C)\n\u22a2 comp (S \\ T) R \u2286 comp S R \\ comp T R",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L27"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "dadcbc8eb7d13e8c747f3cb4c90de3d994d8cb003c6495b1422632dc055d16f8"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 33,
        "start_column": 48,
        "end_line": 33,
        "end_column": 53
      },
      "debug_info": {
        "goal": "A B C : Type\nR : Set (A \u00d7 B)\nS T : Set (B \u00d7 C)\n\u22a2 comp (S \u2229 T) R = comp S R \u2229 comp T R",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "fe908945ac0f2409546cf658da4d315690e1b62fe678c3059f9c23814480b886"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 39,
        "start_column": 48,
        "end_line": 39,
        "end_column": 53
      },
      "debug_info": {
        "goal": "A B C : Type\nR : Set (A \u00d7 B)\nS T : Set (B \u00d7 C)\n\u22a2 comp (S \u222a T) R = comp S R \u222a comp T R",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "f6818e8b672f063a9c531a2e252b995fc35174af0623617ec921192f9f696855"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 44,
        "start_column": 60,
        "end_line": 44,
        "end_column": 65
      },
      "debug_info": {
        "goal": "\u22a2 elementhood \u2124 6 {n | \u2203 k, n = 2 * k}",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L44"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-12-07T13:35:34-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "5ddc19e6b72a1e38536d456376bf247cd5ef6660eb1cb0d25287c5ab708d5282"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 48,
        "start_column": 60,
        "end_line": 48,
        "end_column": 65
      },
      "debug_info": {
        "goal": "A : Type\nR : BinRel A\n\u22a2 reflexive R \u2194 {x | @HTPI.Exercises.Theorem_4_3_4_1.match_1 A (fun x => Prop) x fun x y => x = y} \u2286 extension R",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-12-07T13:35:34-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "5046c8008ea7f5f07699bef907578037d49803fdcb7d886514f3f405b774cb58"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 53,
        "start_column": 56,
        "end_line": 53,
        "end_column": 61
      },
      "debug_info": {
        "goal": "A : Type\nR : BinRel A\n\u22a2 transitive R \u2194 comp (extension R) (extension R) \u2286 extension R",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L53"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "1351ca9dcce2f7f5854a6540c6d7ec547d04502f46ee34ef28daf668e05b8bb0"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 57,
        "start_column": 50,
        "end_line": 57,
        "end_column": 55
      },
      "debug_info": {
        "goal": "A : Type\nR : BinRel A\nh1 : reflexive R\n\u22a2 reflexive (RelFromExt (inv (extension R)))",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L57"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-23T10:36:50-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "95d28b3ee49f29a69b547bae2e86470e15e2f246292e661702566d2371b5fd32"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 61,
        "start_column": 51,
        "end_line": 61,
        "end_column": 56
      },
      "debug_info": {
        "goal": "A : Type\nR : BinRel A\nh1 : transitive R\n\u22a2 transitive (RelFromExt (inv (extension R)))",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-23T10:36:50-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "54117a85008427ea168ba8648b8acd33999f87371b3bde6cbdac0fd2d95d104b"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 68,
        "start_column": 66,
        "end_line": 68,
        "end_column": 71
      },
      "debug_info": {
        "goal": "A : Type\nR S : BinRel A\nh1 : transitive R\nh2 : transitive S\nh3 : comp (extension S) (extension R) \u2286 comp (extension R) (extension S)\n\u22a2 transitive (RelFromExt (comp (extension R) (extension S)))",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L68"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-23T10:36:50-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "89e8b531bb9a6c859f89030cfb72f731743fc666f42fd019a9ec08e5a2fb9d46"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 74,
        "start_column": 35,
        "end_line": 74,
        "end_column": 40
      },
      "debug_info": {
        "goal": "A : Type\nR : BinRel A\nS : BinRel (Set A)\nh : \u2200 (X Y : Set A), S X Y \u2194 X \u2260 \u2205 \u2227 Y \u2260 \u2205 \u2227 \u2200 (x y : A), x \u2208 X \u2192 y \u2208 Y \u2192 R x y\n\u22a2 transitive R \u2192 transitive S",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L74"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-04-28T17:55:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "dfa9636576bec902d0c3b43674c033577e3c1547115e241b6832189333da433d"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 80,
        "start_column": 64,
        "end_line": 80,
        "end_column": 69
      },
      "debug_info": {
        "goal": "A : Type\nR1 R2 : BinRel A\nh1 : symmetric R1\nh2 : symmetric R2\n\u22a2 symmetric (RelFromExt (extension R1 \u222a extension R2))",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-23T10:36:50-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "a74b14e3c1a81e4b9c65923898ff220e9d14df88c7f04cd9a47e071a286d9d56"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 86,
        "start_column": 65,
        "end_line": 86,
        "end_column": 70
      },
      "debug_info": {
        "goal": "A : Type\nR1 R2 : BinRel A\nh1 : transitive R1\nh2 : transitive R2\n\u22a2 transitive (RelFromExt (extension R1 \u222a extension R2))",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L86"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-23T10:36:50-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "1403369f2a74daada43f357fed6508fd049b4da4538e9c895b5ca467700d2a92"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 92,
        "start_column": 35,
        "end_line": 92,
        "end_column": 40
      },
      "debug_info": {
        "goal": "A : Type\nR : BinRel A\nS : BinRel (Set A)\nh : \u2200 (X Y : Set A), S X Y \u2194 \u2203 x y, x \u2208 X \u2227 y \u2208 Y \u2227 R x y\n\u22a2 transitive R \u2192 transitive S",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L92"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-04-28T17:55:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "d1dc4e12b6f3667ce2b27a3469459b60fafc107b3745ae469533c6e876de4f2d"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 96,
        "start_column": 62,
        "end_line": 96,
        "end_column": 67
      },
      "debug_info": {
        "goal": "A : Type\n\u22a2 partial_order (sub A)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L96"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "8b42c67d1adb9b29d0e400fa60cb2ebbed735b5df1e9abc37d517b89e206075d"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 101,
        "start_column": 44,
        "end_line": 101,
        "end_column": 49
      },
      "debug_info": {
        "goal": "A : Type\nR : BinRel A\nB : Set A\nb : A\nh1 : partial_order R\nh2 : smallestElt R b B\n\u22a2 \u2200 (c : A), smallestElt R c B \u2192 b = c",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L101"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "2459c227aa8339124f786112de4a0a5cda0c5fbd5662743c048d1e81997fc0d8"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 106,
        "start_column": 28,
        "end_line": 106,
        "end_column": 33
      },
      "debug_info": {
        "goal": "A : Type\nF : Set (Set A)\n\u22a2 lub (sub A) (\u22c3\u2080 F) F",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L106"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "73f9542ec911af3d3db75745127e51e44f295e823c5da8c1dd6beee655ad296a"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 113,
        "start_column": 23,
        "end_line": 113,
        "end_column": 28
      },
      "debug_info": {
        "goal": "A B : Type\nR : BinRel A\nS : BinRel B\nT : BinRel (A \u00d7 B)\nh1 : partial_order R\nh2 : partial_order S\nh3 : \u2200 (a a' : A) (b b' : B), T (a, b) (a', b') \u2194 R a a' \u2227 S b b'\n\u22a2 partial_order T",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L113"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "57dd7de3bc59781ccf5077ea5ad17aeeccdd3ca6c387d09067a94f1c1fd53fc8"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 121,
        "start_column": 47,
        "end_line": 121,
        "end_column": 52
      },
      "debug_info": {
        "goal": "A B : Type\nR : BinRel A\nS : BinRel B\nL : BinRel (A \u00d7 B)\nh1 : total_order R\nh2 : total_order S\nh3 : \u2200 (a a' : A) (b b' : B), L (a, b) (a', b') \u2194 R a a' \u2227 (a = a' \u2192 S b b')\n\u22a2 \u2200 (a a' : A) (b b' : B), L (a, b) (a', b') \u2228 L (a', b') (a, b)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L121"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "5f58bc8cd2502697997a25e6afa2421201ec48f652cd09e68d5261863d792f46"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 128,
        "start_column": 47,
        "end_line": 128,
        "end_column": 52
      },
      "debug_info": {
        "goal": "A : Type\nR1 R2 : BinRel A\nB : Set A\nb : A\nh1 : partial_order R1\nh2 : partial_order R2\nh3 : extension R1 \u2286 extension R2\n\u22a2 smallestElt R1 b B \u2192 smallestElt R2 b B",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L128"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "527dc59fdf93b560818f3e10839d7b795e504804338d8f01f91cc680a8172b0b"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 135,
        "start_column": 45,
        "end_line": 135,
        "end_column": 50
      },
      "debug_info": {
        "goal": "A : Type\nR1 R2 : BinRel A\nB : Set A\nb : A\nh1 : partial_order R1\nh2 : partial_order R2\nh3 : extension R1 \u2286 extension R2\n\u22a2 minimalElt R2 b B \u2192 minimalElt R1 b B",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L135"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "ca28ddae0414391f8f8edd13662e892290a55313cc44800393dd9d7ab8898950"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 141,
        "start_column": 50,
        "end_line": 141,
        "end_column": 55
      },
      "debug_info": {
        "goal": "A : Type\nR : BinRel A\nB1 B2 : Set A\nh1 : partial_order R\nh2 : \u2200 x \u2208 B1, \u2203 y \u2208 B2, R x y\nh3 : \u2200 x \u2208 B2, \u2203 y \u2208 B1, R x y\n\u22a2 \u2200 (x : A), upperBd R x B1 \u2194 upperBd R x B2",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L141"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "d3898e52805e167f5425928f210ff672dd5f7662751a53a2bd318c27d86616c0"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 147,
        "start_column": 25,
        "end_line": 147,
        "end_column": 30
      },
      "debug_info": {
        "goal": "A : Type\nR : BinRel A\nB1 B2 : Set A\nx1 x2 : A\nh1 : partial_order R\nh2 : lub R x1 B1\nh3 : lub R x2 B2\n\u22a2 B1 \u2286 B2 \u2192 R x1 x2",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L147"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "05ebe9be9f6cdfefe7f5d7bce97155b79fa2754772a00de41b321584a39ddc5b"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 152,
        "start_column": 60,
        "end_line": 152,
        "end_column": 65
      },
      "debug_info": {
        "goal": "A : Type\nR : Set (A \u00d7 A)\n\u22a2 smallestElt (sub (A \u00d7 A)) (R \u222a inv R) {T | R \u2286 T \u2227 symmetric (RelFromExt T)}",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L152"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-12-07T13:35:34-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "70afe9b4e700377efa5cea3b95fa9074bfe72f673ea11d636ce2ab9fac6b91dd"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 158,
        "start_column": 58,
        "end_line": 158,
        "end_column": 63
      },
      "debug_info": {
        "goal": "A : Type\nF : Set (Set A)\nh : partition F\n\u22a2 \u2200 X \u2208 F, \u2200 Y \u2208 F, \u2200 x \u2208 X, x \u2208 Y \u2192 X = Y",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L158"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "fdbda07c184630d6a57ed7af0f05eea2276929a7abb9e0eedc3380d1365794b8"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 162,
        "start_column": 35,
        "end_line": 162,
        "end_column": 40
      },
      "debug_info": {
        "goal": "A : Type\nF : Set (Set A)\nh : partition F\n\u22a2 reflexive (EqRelFromPart F)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L162"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "a3d78fb62d0e76a97b037f29d54662dd4ab5379e7324414a62f6dd15b5a16e16"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 166,
        "start_column": 35,
        "end_line": 166,
        "end_column": 40
      },
      "debug_info": {
        "goal": "A : Type\nF : Set (Set A)\nh : partition F\n\u22a2 symmetric (EqRelFromPart F)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L166"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "a1b331716c539aa43ad687b8986fc6dcbaf01c031a80532e5801b1d1e1f64970"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 170,
        "start_column": 36,
        "end_line": 170,
        "end_column": 41
      },
      "debug_info": {
        "goal": "A : Type\nF : Set (Set A)\nh : partition F\n\u22a2 transitive (EqRelFromPart F)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L170"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "8b7fce6b60c1c429684c90855c0591a114d1676682083fcfe00474f516bcbef6"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 174,
        "start_column": 60,
        "end_line": 174,
        "end_column": 65
      },
      "debug_info": {
        "goal": "A : Type\nF : Set (Set A)\nh : partition F\n\u22a2 \u2200 X \u2208 F, \u2200 x \u2208 X, equivClass (EqRelFromPart F) x = X",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L174"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "9e3b2774afca49f43b77e8edc8b88e5d3d05bf2c8c43f389cc085cb9d19349c3"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 179,
        "start_column": 50,
        "end_line": 179,
        "end_column": 55
      },
      "debug_info": {
        "goal": "A : Type\nR : BinRel A\nh : equiv_rel R\n\u22a2 \u2200 X \u2208 mod A R, \u2200 x \u2208 X, equivClass R x = X",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L179"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "33a8c3bc9f4e220b1681f1da55dea5e836fcea935359e26db7336633825625da"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 191,
        "start_column": 28,
        "end_line": 191,
        "end_column": 33
      },
      "debug_info": {
        "goal": "A : Type\nR S : BinRel A\nh1 : equiv_rel R\nh2 : equiv_rel S\n\u22a2 equiv_rel (HTPI.Exercises.conj A R S)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L191"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "1bc8f303b7a600f9c59b283687241ad4112d2b0246735e31f4789afda445f051"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 197,
        "start_column": 41,
        "end_line": 197,
        "end_column": 46
      },
      "debug_info": {
        "goal": "A : Type\nR S : BinRel A\nh1 : equiv_rel R\nh2 : equiv_rel S\n\u22a2 \u2200 (x : A), equivClass (HTPI.Exercises.conj A R S) x = equivClass R x \u2229 equivClass S x",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "d9851bbf235280592c42d7ac5ead51e4341545b99447adcfd19dd2d6ff3226e3"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 202,
        "start_column": 50,
        "end_line": 202,
        "end_column": 55
      },
      "debug_info": {
        "goal": "A : Type\nR S : BinRel A\nh1 : equiv_rel R\nh2 : equiv_rel S\n\u22a2 mod A (HTPI.Exercises.conj A R S) = HTPI.Exercises.dot A (mod A R) (mod A S)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L202"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "d87e35458e872b74630d3e04f2db0fba65c1f43288b428c13d4c9c6ffe493364"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap4Ex.lean",
        "start_line": 207,
        "start_column": 65,
        "end_line": 207,
        "end_column": 70
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 (m : \u2124), equiv_rel (HTPI.Exercises.equiv_mod m)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap4Ex.lean#L207"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "f0fb9944ad4f1d501c6e6493025817af101857a25a95d69833f8f0cfee90d808"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 7,
        "start_column": 47,
        "end_line": 7,
        "end_column": 52
      },
      "debug_info": {
        "goal": "a b d : \u2115\nh1 : d \u2223 b\nh2 : d \u2223 a % b\n\u22a2 d \u2223 a",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L7"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-04-08T15:48:59-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "eb4a54754bf101bfaadbe8e056395db87a39e596f0895f27c9b197c0ed144b3d"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 10,
        "start_column": 65,
        "end_line": 10,
        "end_column": 70
      },
      "debug_info": {
        "goal": "a b : \u2115\nh : a < b\n\u22a2 gcd a b = gcd b a",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L10"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-07-05T10:06:58-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "d0afa45cdeded544904ef1fb41b9d74c4e735b2bbcb416e2b3e65bfb5659e58b"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 12,
        "start_column": 52,
        "end_line": 12,
        "end_column": 57
      },
      "debug_info": {
        "goal": "a b : \u2115\n\u22a2 gcd a b = gcd b a",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L12"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-07-05T10:06:58-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "3014f0e8990715e94b8d3183568ea6ee28e012a38f269535dc9e0fd2d1abebae"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 16,
        "start_column": 67,
        "end_line": 16,
        "end_column": 72
      },
      "debug_info": {
        "goal": "a b : \u2115\nn : \u2124\n\u22a2 (\u2203 s t, s * \u2191a + t * \u2191b = n) \u2194 \u2191(gcd a b) \u2223 n",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L16"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-09-13T20:28:50-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "fcc0de8893b8a6dce6b3ec9ced5acba2264cb2933e3c099cc7129e3e5457a2a7"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 20,
        "start_column": 35,
        "end_line": 20,
        "end_column": 40
      },
      "debug_info": {
        "goal": "a b c : \u2115\n\u22a2 gcd a b = gcd (a + b * c) b",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L20"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-04-08T15:48:59-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "12212a4c91ee66bb619e8f110a2b4ef69d251f6613714e575d7d035387808b4e"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 24,
        "start_column": 19,
        "end_line": 24,
        "end_column": 24
      },
      "debug_info": {
        "goal": "a b : \u2115\nh : a \u2260 0 \u2228 b \u2260 0\n\u22a2 gcd a b \u2260 0",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L24"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-04-08T15:48:59-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "2554d5ce2386093e3b4475a1557cdd97c2e6e038a640f01c81c17b2cc7c395e1"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 28,
        "start_column": 47,
        "end_line": 28,
        "end_column": 52
      },
      "debug_info": {
        "goal": "a b d : \u2115\nh1 : gcd a b \u2260 0\nh2 : d \u2223 a\nh3 : d \u2223 b\n\u22a2 d \u2264 gcd a b",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L28"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-04-08T15:48:59-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "09500b9b8a61d1e15662d217373aff22ff0b13b928e44e808336665238e37bfe"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 32,
        "start_column": 49,
        "end_line": 32,
        "end_column": 54
      },
      "debug_info": {
        "goal": "a b n : \u2115\nh : a \u2223 b\n\u22a2 n * a \u2223 n * b",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L32"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-09-12T10:05:44-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "34d627d44259c2060491c3e9adb9655e5b2553c962dddb598ca1fd53a4a3905f"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 35,
        "start_column": 53,
        "end_line": 35,
        "end_column": 58
      },
      "debug_info": {
        "goal": "a b n : \u2115\nh1 : n \u2260 0\nh2 : n * a \u2223 n * b\n\u22a2 a \u2223 b",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-09-12T10:05:44-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "496bc6e4d93f936bcd097a19a6b349fc05f5977f9d8e1987df46c6f5b2c7abac"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 38,
        "start_column": 41,
        "end_line": 38,
        "end_column": 46
      },
      "debug_info": {
        "goal": "a b : \u2115\nh1 : a \u2223 b\nh2 : b \u2223 a\n\u22a2 a = b",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-09-12T10:05:44-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "7d36e6241b532809a35223c77df74a4fc22ad209364be07f220fc3846b1ba302"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 41,
        "start_column": 41,
        "end_line": 41,
        "end_column": 46
      },
      "debug_info": {
        "goal": "a b n : \u2115\n\u22a2 gcd (n * a) (n * b) = n * gcd a b",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-04-08T15:48:59-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "4943afcd28647cb16c690d50c81461cda56729cf70337ac1759f155fc4abce17"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 46,
        "start_column": 51,
        "end_line": 46,
        "end_column": 56
      },
      "debug_info": {
        "goal": "a p : \u2115\nh1 : prime p\nh2 : a \u2223 p\n\u22a2 a = 1 \u2228 a = p",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-04-08T15:48:59-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "0ed859fb10b44971aa84146311d6be44fe1eea285915f85dda0882a1f91d88f2"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 51,
        "start_column": 37,
        "end_line": 51,
        "end_column": 42
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 (l : List \u2115), (\u2200 a \u2208 l, a \u2260 0) \u2192 prod l \u2260 0",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L51"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-11-10T14:58:19-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "f2d8b63eedfe2f3f189b185a03023ded0fc2a1c12aceb176020d023638c382ab"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 55,
        "start_column": 61,
        "end_line": 55,
        "end_column": 66
      },
      "debug_info": {
        "goal": "a b : \u2115\n\u22a2 rel_prime a b \u2194 \u00ac\u2203 p, prime p \u2227 p \u2223 a \u2227 p \u2223 b",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L55"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-04-28T17:55:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "62acc5efe6150aa4321f78c2f5f04e5ca4d1084d10262c62e9a1546d3c352f02"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 59,
        "start_column": 21,
        "end_line": 59,
        "end_column": 26
      },
      "debug_info": {
        "goal": "a b : \u2115\nh : rel_prime a b\n\u22a2 rel_prime b a",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L59"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-05-10T20:59:07-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "c047734d6d6c26c0cadcf1f05bac1d5f83d246a49c27e6083b1fa251dabca56c"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 64,
        "start_column": 32,
        "end_line": 64,
        "end_column": 37
      },
      "debug_info": {
        "goal": "a : \u2115\nl : List \u2115\nh1 : prime_factorization a l\np : \u2115\n\u22a2 p \u2208 l \u2194 prime_factor p a",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L64"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-09-14T11:03:42-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "a96f82868ec6af7ccaf9126588369e59d0151c96c4ef20acf882c294b2f6979e"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 69,
        "start_column": 53,
        "end_line": 69,
        "end_column": 58
      },
      "debug_info": {
        "goal": "a b : \u2115\nl m : List \u2115\nh1 : prime_factorization a l\nh2 : prime_factorization b m\n\u22a2 rel_prime a b \u2194 \u00ac\u2203 p \u2208 l, p \u2208 m",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-04-28T17:55:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "2def431079bc7e3f241d4c1ea98a2a0ee9e8134a00f559e8671ba9801838ed77"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 73,
        "start_column": 56,
        "end_line": 73,
        "end_column": 61
      },
      "debug_info": {
        "goal": "a b : \u2115\n\u22a2 rel_prime a b \u2194 \u2203 s t, s * \u2191a + t * \u2191b = 1",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L73"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-04-08T15:48:59-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "ab8b2e88f48d2351fee382dc06e1024e7db0fe03017290ed440adaf40149f741"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 78,
        "start_column": 23,
        "end_line": 78,
        "end_column": 28
      },
      "debug_info": {
        "goal": "a b a' b' : \u2115\nh1 : rel_prime a b\nh2 : a' \u2223 a\nh3 : b' \u2223 b\n\u22a2 rel_prime a' b'",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L78"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-04-08T15:48:59-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "621100a0f85ce4291e7fe0a0227b5b1b6c26b62bf2e2ee0d661d268992d1d146"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 83,
        "start_column": 21,
        "end_line": 83,
        "end_column": 26
      },
      "debug_info": {
        "goal": "a b j k : \u2115\nh1 : gcd a b \u2260 0\nh2 : a = j * gcd a b\nh3 : b = k * gcd a b\n\u22a2 rel_prime j k",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L83"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-09-15T14:18:40-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "2e41e423020e7b0fbb64a783ad6eae39c4ffd6846a272ff33f8feeed2c0bae8f"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 87,
        "start_column": 41,
        "end_line": 87,
        "end_column": 46
      },
      "debug_info": {
        "goal": "a b c : \u2115\n\u22a2 gcd a (b * c) \u2223 gcd a b * gcd a c",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L87"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-04-13T14:20:00-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "960adf1ff0c23f9a3c70d8f7835481ae2d27c92235df40f3c395a32e10a6eb6f"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 92,
        "start_column": 53,
        "end_line": 92,
        "end_column": 58
      },
      "debug_info": {
        "goal": "m : \u2115\na\u271d b\u271d c\u271d : \u2124\n\u22a2 a\u271d \u2261 b\u271d (MOD m) \u2192 b\u271d \u2261 c\u271d (MOD m) \u2192 a\u271d \u2261 c\u271d (MOD m)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L92"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-05-17T12:43:06-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "d562863d71c04d04400dfb9e9b871cfa051fc7368390404c41c5fd4613faa6cf"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 95,
        "start_column": 66,
        "end_line": 95,
        "end_column": 71
      },
      "debug_info": {
        "goal": "m : \u2115\nX : ZMod m\n\u22a2 X + [0]_m = X",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-05-17T12:43:06-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "f853d5c8797a7ce96ff5568897e1d105afcc6a7519f9c8b6e9bd6cf453edc608"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 99,
        "start_column": 37,
        "end_line": 99,
        "end_column": 42
      },
      "debug_info": {
        "goal": "m : \u2115\nX : ZMod m\n\u22a2 \u2203 Y, X + Y = [0]_m",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L99"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-05-17T12:43:06-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "fc57671847cf6b5e9ba19c7126bebd93a86f193151d39a4473ef9022d95a1fe6"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 104,
        "start_column": 51,
        "end_line": 104,
        "end_column": 56
      },
      "debug_info": {
        "goal": "m : \u2115\nZ1 Z2 : ZMod m\nh1 : \u2200 (X : ZMod m), X + Z1 = X\nh2 : \u2200 (X : ZMod m), X + Z2 = X\n\u22a2 Z1 = Z2",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L104"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-04-13T14:20:00-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "1a7f0e413ea1a424ff2d91710eda1c1cff50db9242b2a0910b576fd2efec844a"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 108,
        "start_column": 61,
        "end_line": 108,
        "end_column": 66
      },
      "debug_info": {
        "goal": "m : \u2115\nX Y1 Y2 : ZMod m\nh1 : X + Y1 = [0]_m\nh2 : X + Y2 = [0]_m\n\u22a2 Y1 = Y2",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L108"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-05-17T12:43:06-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "7093aa2e3fa72b2d8dfe558b92ef9777a78d82e6086c527fd54840eab33f047e"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 112,
        "start_column": 65,
        "end_line": 112,
        "end_column": 70
      },
      "debug_info": {
        "goal": "m a : \u2115\nb : \u2124\n\u22a2 \u00ac\u2191(gcd m a) \u2223 b \u2192 \u00ac\u2203 x, \u2191a * x \u2261 b (MOD m)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-09-25T21:59:07-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "f54458a24badc9853376a92ee170cb11cee0c26e2ee6710958ac0e722e8ba392"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 116,
        "start_column": 49,
        "end_line": 116,
        "end_column": 54
      },
      "debug_info": {
        "goal": "m n : \u2115\na b : \u2124\nh1 : n \u2260 0\n\u22a2 \u2191n * a \u2261 \u2191n * b (MOD n * m) \u2194 a \u2261 b (MOD m)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L116"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-05-17T12:43:06-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "704e2d6134ad483ffd1cd3b20876c5c691a52c7bdf701eadc1136033d67d32db"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 120,
        "start_column": 42,
        "end_line": 120,
        "end_column": 47
      },
      "debug_info": {
        "goal": "m : \u2115\na b : \u2124\nh : a \u2261 b (MOD m)\n\u22a2 \u2200 (n : \u2115), a ^ n \u2261 b ^ n (MOD m)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L120"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-05-17T12:43:06-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "1865ee087f8454f0e524511280c799dc7084f0193373f11e149276a9147c124d"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 124,
        "start_column": 47,
        "end_line": 124,
        "end_column": 52
      },
      "debug_info": {
        "goal": "m : \u2115\ninst\u271d : NeZero m\nX : ZMod m\n\u22a2 \u2203! a, 0 \u2264 a \u2227 a < \u2191m \u2227 X = [a]_m",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L124"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-05-17T12:43:06-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "bf90ebec91f9ad61ffae8c8d3162d5972bce17a9a23a0c698cc3e48a2990359d"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 128,
        "start_column": 37,
        "end_line": 128,
        "end_column": 42
      },
      "debug_info": {
        "goal": "m a b : \u2115\nh1 : \u2191a \u2261 \u2191b (MOD m)\n\u22a2 rel_prime m a \u2194 rel_prime m b",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L128"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-06-29T20:58:46-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "09d4aa6ec3f5366878de6fa687b9ad55de2207684225c2f2dfdfdf860d24a2e7"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 133,
        "start_column": 43,
        "end_line": 133,
        "end_column": 48
      },
      "debug_info": {
        "goal": "m a : \u2115\n\u22a2 rel_prime m (a % m) \u2194 rel_prime m a",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L133"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-06-29T20:58:46-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "ef0a591301484805b6119bf70eff961ef3e713c66e9cf92ec78d27bdf4d98f87"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 137,
        "start_column": 39,
        "end_line": 137,
        "end_column": 44
      },
      "debug_info": {
        "goal": "m : \u2115\na b : \u2124\ninst\u271d : NeZero m\n\u22a2 a \u2261 b (MOD m) \u2194 a % \u2191m = b % \u2191m",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L137"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-08-06T15:17:58-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "965aec3a823b28874214d123948269b7e5af95f03b7ea377e5fa04344b4290c8"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 142,
        "start_column": 39,
        "end_line": 142,
        "end_column": 44
      },
      "debug_info": {
        "goal": "m a b : \u2115\ninst\u271d : NeZero m\n\u22a2 \u2191a \u2261 \u2191b (MOD m) \u2194 a % m = b % m",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L142"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-08-06T15:17:58-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "a54523059fdeea34f3ea877d9142b9b7e00d63c7347175be380b9dc37df80a4e"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 151,
        "start_column": 42,
        "end_line": 151,
        "end_column": 47
      },
      "debug_info": {
        "goal": "m : \u2115\na : \u2124\n\u22a2 \u2200 (n : \u2115), [a]_m ^ n = [a ^ n]_m",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L151"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-05-17T12:43:06-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "7a2d83986918882342d88dc5a392b681ad36ec371d2737c3d7d9990a94d0a41c"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 155,
        "start_column": 56,
        "end_line": 155,
        "end_column": 61
      },
      "debug_info": {
        "goal": "n : \u2115\ng g' : \u2115 \u2192 \u2115\nh1 : \u2200 i < n, g' (g i) = i\n\u22a2 one_one_below n g",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L155"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-04-28T17:55:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "0e48fe30d18bad687c2fd916da7ed8b345815a6c12e14b990c2718d58b360505"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 160,
        "start_column": 28,
        "end_line": 160,
        "end_column": 33
      },
      "debug_info": {
        "goal": "n : \u2115\nf g : \u2115 \u2192 \u2115\nh1 : perm_below n f\nh2 : perm_below n g\n\u22a2 perm_below n (f \u2218 g)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L160"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-04-28T17:55:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "8010a8deef9adde3410d790ea4f683fdcec0b967605a32944f9df472e05b4c9f"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 164,
        "start_column": 67,
        "end_line": 164,
        "end_column": 72
      },
      "debug_info": {
        "goal": "n : \u2115\ng : \u2115 \u2192 \u2115\nh1 : perm_below (n + 1) g\nh2 : g n = n\n\u22a2 perm_below n g",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-04-28T17:55:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "3b9861747906ec931b804ec00a402c2fddb5940267e9c272d732880ddfb9f49c"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 168,
        "start_column": 59,
        "end_line": 168,
        "end_column": 64
      },
      "debug_info": {
        "goal": "a b c : \u2115\n\u22a2 rel_prime (a * b) c \u2194 rel_prime a c \u2227 rel_prime b c",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L168"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-04-28T17:55:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "b1aee068173164b13fffa0d60263763121254f51a7de82bf2af2c2391e6675e9"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 172,
        "start_column": 35,
        "end_line": 172,
        "end_column": 40
      },
      "debug_info": {
        "goal": "m a : \u2115\ninst\u271d : NeZero m\nh1 : rel_prime m a\n\u22a2 \u2191a ^ (phi m + 1) \u2261 \u2191a (MOD m)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L172"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-05-17T12:43:06-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "de650e5c10ba76aa14cac7e54a7c2feaa4ce05b4b33ce7fd31e2ac0e731837d3"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 177,
        "start_column": 33,
        "end_line": 177,
        "end_column": 38
      },
      "debug_info": {
        "goal": "m a p : \u2115\ninst\u271d : NeZero m\nh1 : rel_prime m a\nh2 : p + 1 = phi m\n\u22a2 [\u2191a]_m * [\u2191a ^ p]_m = [1]_m",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L177"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-05-17T12:43:06-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "473abb2fbd13099a621f49d0736f5d2dea9be7df9e26b5c66a60053f2ccbdce8"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 182,
        "start_column": 29,
        "end_line": 182,
        "end_column": 34
      },
      "debug_info": {
        "goal": "m a p q k : \u2115\ninst\u271d : NeZero m\nh1 : rel_prime m a\nh2 : p = q + phi m * k\n\u22a2 \u2191a ^ p \u2261 \u2191a ^ q (MOD m)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L182"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-05-17T12:43:06-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "c15c1cf75122894c15693e09a899520c72e2d54fa05627c6be6384ce66a82738"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 188,
        "start_column": 43,
        "end_line": 188,
        "end_column": 48
      },
      "debug_info": {
        "goal": "p : \u2115\nh1 : prime p\n\u22a2 \u2200 k < p, num_rp_below p (k + 1) = k",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L188"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-11-10T14:58:19-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "f53d0e98f16edb886fb0f971c0f94f1732248c9762261f912fe3dd174ccff482"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 191,
        "start_column": 31,
        "end_line": 191,
        "end_column": 36
      },
      "debug_info": {
        "goal": "\u22a2 prime 3",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L191"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-05-10T20:59:07-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "b09246604e64f413d7a9cdc24fc933beed5ed4739b91573ad8b489a29b9b2f73"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 196,
        "start_column": 27,
        "end_line": 196,
        "end_column": 32
      },
      "debug_info": {
        "goal": "a : \u2115\nh1 : rel_prime 561 a\n\u22a2 \u2191a ^ 560 \u2261 1 (MOD 3)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L196"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-12-02T16:18:40-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "3f6a132ba1270c61c944efcf50194985e39765f175f5a8ea26c71372321c71ac"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 201,
        "start_column": 58,
        "end_line": 201,
        "end_column": 63
      },
      "debug_info": {
        "goal": "p : \u2115\na b : \u2124\nh1 : prime p\nh2 : \u2191p \u2223 a * b\n\u22a2 \u2191p \u2223 a \u2228 \u2191p \u2223 b",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L201"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-05-10T20:59:07-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "d3d637724516a21812d4c0350ed0a91c64579e9ee22e6e8b476e46ae072508c2"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap7Ex.lean",
        "start_line": 207,
        "start_column": 38,
        "end_line": 207,
        "end_column": 43
      },
      "debug_info": {
        "goal": "n : \u2115\nb : \u2124\nh1 : prime n\nh2 : b ^ 2 \u2261 1 (MOD n)\n\u22a2 b \u2261 1 (MOD n) \u2228 b \u2261 -1 (MOD n)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap7Ex.lean#L207"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-11-10T14:58:19-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "80f607f61a3f492c17a2293ed7c138ff81cc5d80b1143123d5221c3f6d10c79b"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 7,
        "start_column": 59,
        "end_line": 7,
        "end_column": 64
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 (n : \u2115), 2 * Sum i from 0 to n, i = n * (n + 1)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L7"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "149ba7ba6e7f994d3d2c9e83c041b437c8dc88e6aa0892a38faa865987f53857"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 11,
        "start_column": 63,
        "end_line": 11,
        "end_column": 68
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 (n : \u2115), Sum i from 0 to n, 2 * i + 1 = (n + 1) ^ 2",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L11"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "e30aca0a191d3c095a3c46d131f59a649baa9344efcfa9416a4a14494e883b56"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 14,
        "start_column": 56,
        "end_line": 14,
        "end_column": 61
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 (n : \u2115), 2 \u2223 n ^ 2 + n",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L14"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "30c7fdb446436c791c64001b3986c9569bdb2d68ddb3094b2f2e6ed3b4ecd797"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 18,
        "start_column": 58,
        "end_line": 18,
        "end_column": 63
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 (a b : \u2124) (n : \u2115), a - b \u2223 a ^ n - b ^ n",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L18"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "2cedd6b24cd2530c7952d7130c795be3f036217d8d32b10d9a6556a166035244"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 21,
        "start_column": 53,
        "end_line": 21,
        "end_column": 58
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 n \u2265 10, 2 ^ n > n ^ 3",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L21"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "88e69bfd768e77a58bc7791651af234a08387ea5e8a85204f5aff18448ba3ab1"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 25,
        "start_column": 51,
        "end_line": 25,
        "end_column": 56
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 (n : \u2115), n \u2260 0 \u2192 \u2203 m, n = m + 1",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L25"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-06-29T20:58:46-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "b3f094d4ddf3f28a0ec9f58b5d4f044cf4c600fa27fca5a31f8c908bd73c04ca"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 29,
        "start_column": 43,
        "end_line": 29,
        "end_column": 48
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 (n : \u2115), nat_even n \u2228 nat_odd n",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "c84f4966990a5635c44f0d7d391494054893d0c79455c98464827c39289d8505"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 35,
        "start_column": 46,
        "end_line": 35,
        "end_column": 51
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 (n : \u2115), \u00ac(nat_even n \u2227 nat_odd n)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "6b3f13fdb77788f924f714f04e666c1d52936d3af9fce64e6236527acba8e488"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 41,
        "start_column": 40,
        "end_line": 41,
        "end_column": 45
      },
      "debug_info": {
        "goal": "A : Type\nR : BinRel A\nB : Set A\nb c : A\nh1 : partial_order R\nh2 : b \u2208 B\nh3 : minimalElt R c (B \\ {b})\nh4 : \u00acR b c\n\u22a2 minimalElt R c B",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "de4521da247f8a12f671e7cd2932065ec9c6ef2027301b19e8cb99470ca4031d"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 45,
        "start_column": 56,
        "end_line": 45,
        "end_column": 61
      },
      "debug_info": {
        "goal": "A : Type\nR : BinRel A\nb : A\nh : partial_order R\n\u22a2 reflexive (extendPO R b)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L45"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "c712a995f2ff1988f7acdd393ce6d012693bfce5908014b3e481ac895b627f4f"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 49,
        "start_column": 57,
        "end_line": 49,
        "end_column": 62
      },
      "debug_info": {
        "goal": "A : Type\nR : BinRel A\nb : A\nh : partial_order R\n\u22a2 transitive (extendPO R b)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "5ff5271557e8e700314afcfccbb4b633c1bdf90f9b4fb4a4260d7e479a88e855"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 53,
        "start_column": 60,
        "end_line": 53,
        "end_column": 65
      },
      "debug_info": {
        "goal": "A : Type\nR : BinRel A\nb : A\nh : partial_order R\n\u22a2 antisymmetric (extendPO R b)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L53"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "2bc3b95d3e4f08d28f9aa83791f44b570f4b6d41a6c6dc314d56e32ce56430a7"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 58,
        "start_column": 50,
        "end_line": 58,
        "end_column": 55
      },
      "debug_info": {
        "goal": "A : Type\nR : BinRel A\nh : total_order R\n\u22a2 \u2200 n \u2265 1, \u2200 (B : Set A), numElts B n \u2192 \u2203 b, smallestElt R b B",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L58"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "3663053569652cb1312131a4dd76b0ad3da4a1d1158375ae7a92f6c1f14b0eaf"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 64,
        "start_column": 64,
        "end_line": 64,
        "end_column": 69
      },
      "debug_info": {
        "goal": "A : Type\nR : BinRel A\nh : \u2200 (x y : A), R x y \u2228 R y x\n\u22a2 \u2200 n \u2265 1, \u2200 (B : Set A), numElts B n \u2192 \u2203 x \u2208 B, \u2200 y \u2208 B, \u2203 z, R x z \u2227 R z y",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L64"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "4017805bc4b5a8473fef4dca9fa9e97c3711ad708977fbb48ca363b72915209c"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 69,
        "start_column": 46,
        "end_line": 69,
        "end_column": 51
      },
      "debug_info": {
        "goal": "A : Type\nf : A \u2192 A\nh : one_to_one f\n\u22a2 \u2200 (n : \u2115) (B : Set A), numElts B n \u2192 closed f B \u2192 \u2200 y \u2208 B, \u2203 x \u2208 B, f x = y",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-07-03T16:43:00-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "b2b357f2725e67ae2cf4adb12a6fada795c2e2aea2480899b08218dc824631ae"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 76,
        "start_column": 52,
        "end_line": 76,
        "end_column": 57
      },
      "debug_info": {
        "goal": "A : Type\nR : BinRel A\nh1 : \u2203 n, numElts {x | x = x} n\nh2 : partial_order R\n\u22a2 \u2203 T, total_order T \u2227 \u2200 (x y : A), R x y \u2192 T x y",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "a029e5a9ea4cb2c5cfa83fc3de544400b8d1302eebf3430bf4b4f87963f0189f"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 82,
        "start_column": 43,
        "end_line": 82,
        "end_column": 48
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 (n : \u2115), 3 * Sum i from 0 to n, (2 * i + 1) ^ 2 = (n + 1) * (2 * n + 1) * (2 * n + 3)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "b622c5397579b69c55f5cbdd33179041594bd7dc0822e7340fac37441f3d5517"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 86,
        "start_column": 63,
        "end_line": 86,
        "end_column": 68
      },
      "debug_info": {
        "goal": "f : \u2115 \u2192 \u211d\nc : \u211d\n\u22a2 \u2200 (n : \u2115), Sum i from 0 to n, c * f i = c * Sum i from 0 to n, f i",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L86"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "f0299159b6910473506d0f2979ff25fdef9f081eb95617f4ea4d6e23cd1f84a5"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 89,
        "start_column": 46,
        "end_line": 89,
        "end_column": 51
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 (n : \u2115), fact n \u2265 1",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L89"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "1aa79d5adc2b5dd965cc0a022e1a0df3500ec0bd9e47eb4b0ae56f0541358b05"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 94,
        "start_column": 38,
        "end_line": 94,
        "end_column": 43
      },
      "debug_info": {
        "goal": "k : \u2115\n\u22a2 \u2200 (n : \u2115), fact (k ^ 2 + n) \u2265 k ^ (2 * n)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L94"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "f07d6b6892697ef70a270a52bcca0c6c0242d3ad07d93c3ab3770378bb9014dd"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 101,
        "start_column": 22,
        "end_line": 101,
        "end_column": 27
      },
      "debug_info": {
        "goal": "k : \u2115\n\u22a2 \u2200 n \u2265 2 * k ^ 2, fact n \u2265 k ^ n",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L101"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "d483d3a80a6c971868b778141132006fb61d1e24b3e87be17a39d399b398fbcf"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 110,
        "start_column": 36,
        "end_line": 110,
        "end_column": 41
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 (n : \u2115), HTPI.Exercises.seq_6_3_15 n = 2 ^ n - \u2191n - 1",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L110"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "1b1a8f511751d45a8ca63a51f4fb9b57149158129e75f0e359c76fabd885a823"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 119,
        "start_column": 26,
        "end_line": 119,
        "end_column": 31
      },
      "debug_info": {
        "goal": "___ : \u2115\n\u22a2 \u2200 (n : \u2115), HTPI.Exercises.seq_6_3_16 n = ___",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L119"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "4e4778c636eb65567530cb3c3a5778e8dffb29788098837cb9a00470d3fc0ea0"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 125,
        "start_column": 37,
        "end_line": 125,
        "end_column": 42
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 nat_even (n * n) \u2194 nat_even n",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L125"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "4cc0d3194287adf8fd8485921a9d9c0edc61c362f38cb1df2a4566b0cb87283a"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 130,
        "start_column": 51,
        "end_line": 130,
        "end_column": 56
      },
      "debug_info": {
        "goal": "\u22a2 \u00ac\u2203 q p, p * p = 6 * (q * q) \u2227 q \u2260 0",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L130"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "3c1b96cfa0195433044fb0aa7479e8089c0347058c4ceb634964869d2edb75a6"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 134,
        "start_column": 50,
        "end_line": 134,
        "end_column": 55
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 n \u2265 12, \u2203 a b, 3 * a + 7 * b = n",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L134"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "43d90f3e932e9fc773c49c377e7c27431f167575beb90deb191833882db45622"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 138,
        "start_column": 52,
        "end_line": 138,
        "end_column": 57
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 (n : \u2115), (Sum i from 0 to n, Fib i) + 1 = Fib (n + 2)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "d750a1cf131bed1578d5eb3bac8fb6bcece530eb5acb2ca8762b7a430598321c"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 142,
        "start_column": 60,
        "end_line": 142,
        "end_column": 65
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 (n : \u2115), Sum i from 0 to n, Fib (2 * i + 1) = Fib (2 * n + 2)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L142"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "8c47c1640555ea7cf4fe67bfae06012b30a5e053a47e20db10653941d413f6ce"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 146,
        "start_column": 67,
        "end_line": 146,
        "end_column": 72
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 (m n : \u2115), Fib (m + n + 1) = Fib m * Fib n + Fib (m + 1) * Fib (n + 1)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L146"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "06914e32ea4666c1846bc3bc0d5fb4612f0e8f5c2ec4d1dc7423cca94bd5cdcb"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 149,
        "start_column": 64,
        "end_line": 149,
        "end_column": 69
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 (m k : \u2115), Fib m \u2223 Fib (m * k)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L149"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "1cbdf1d7d856ff634a8eb8c0c832c7df3f5086cc9bded51981777e6c247de5ab"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 158,
        "start_column": 62,
        "end_line": 158,
        "end_column": 67
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 (n : \u2115), HTPI.Exercises.Fib_like n = 2 ^ n",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L158"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "93c8fcdeef0e1022a8191d1e0f167627307209bda2ddfbc65bc8478dd9ac2c70"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 170,
        "start_column": 49,
        "end_line": 170,
        "end_column": 54
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 (n : \u2115), HTPI.Exercises.triple_rec n = 2 ^ n * Fib n",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L170"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "7647f9fe94a5a84d18c37c2a18db924364cab0fbab86ddd2a658d6fb22f611f0"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 174,
        "start_column": 61,
        "end_line": 174,
        "end_column": 66
      },
      "debug_info": {
        "goal": "m q r q' r' : \u2115\nh1 : m * q + r = m * q' + r'\nh2 : r' < m\n\u22a2 q \u2264 q'",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L174"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-04-08T15:48:59-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "96134790874b414472934e406824632bf5ecd81a2c529d38af9002d45025264c"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 178,
        "start_column": 23,
        "end_line": 178,
        "end_column": 28
      },
      "debug_info": {
        "goal": "m q r q' r' : \u2115\nh1 : m * q + r = m * q' + r'\nh2 : r < m\nh3 : r' < m\n\u22a2 q = q' \u2227 r = r'",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L178"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "c62446f4ff38bf8bfa7c93992e4d228848fa3f2ed2dea45dd71d77f2f7be4e80"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 182,
        "start_column": 65,
        "end_line": 182,
        "end_column": 70
      },
      "debug_info": {
        "goal": "m n q r : \u2115\nh1 : n = m * q + r\nh2 : r < m\n\u22a2 q = n / m \u2227 r = n % m",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L182"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-04-08T15:48:59-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "e94acde85b161c92552c656fdb3980d3cc8441326daff4c0fe1372cc3a2568be"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 233,
        "start_column": 47,
        "end_line": 233,
        "end_column": 52
      },
      "debug_info": {
        "goal": "A : Type\nF : Set (A \u2192 A)\nB D : Set A\nh1 : B \u2286 D\nh2 : closed_family F D\n\u22a2 \u2200 (n : \u2115), HTPI.Exercises.rep_image_family A F n B \u2286 D",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L233"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "4e53c4dca1b5457b8de46d6913f9a020db4d254bf55d3028ff326537a98d648a"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 236,
        "start_column": 51,
        "end_line": 236,
        "end_column": 56
      },
      "debug_info": {
        "goal": "A : Type\nF : Set (A \u2192 A)\nB : Set A\n\u22a2 closure_family F B (HTPI.Exercises.cumul_image_family A F B)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L236"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "9c7d201d91b74f3dc0dc0472bfb179fbdff8d5fe7a531b6c2474e58adde679b6"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 248,
        "start_column": 36,
        "end_line": 248,
        "end_column": 41
      },
      "debug_info": {
        "goal": "A : Type\nf : A \u2192 A \u2192 A\nB : Set A\n\u22a2 closed2 f (HTPI.Exercises.cumul_image2 A f B)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L248"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "fad8bba11717530727779d3475bd822983d80f726f444cfe208086cb70119de6"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 261,
        "start_column": 49,
        "end_line": 261,
        "end_column": 54
      },
      "debug_info": {
        "goal": "A : Type\nf : A \u2192 A \u2192 A\nB : Set A\n\u22a2 \u2200 (m n : \u2115), m \u2264 n \u2192 HTPI.Exercises.rep_un_image2 A f m B \u2286 HTPI.Exercises.rep_un_image2 A f n B",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L261"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "eeaf4388da24df0d8a30ef14a6dc5ec5c4398ba3965db31069a77059bda17eb5"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 265,
        "start_column": 44,
        "end_line": 265,
        "end_column": 49
      },
      "debug_info": {
        "goal": "A : Type\nf : A \u2192 A \u2192 A\nB D : Set A\nh1 : B \u2286 D\nh2 : closed2 f D\n\u22a2 \u2200 (n : \u2115), HTPI.Exercises.rep_un_image2 A f n B \u2286 D",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L265"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "c935fa6cc6375316342686d335121955f2b2d2a2c9d8807e4a416a4cf592f6a6"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 271,
        "start_column": 35,
        "end_line": 271,
        "end_column": 40
      },
      "debug_info": {
        "goal": "A : Type\nf : A \u2192 A \u2192 A\nB : Set A\nx y : A\nnx ny n : \u2115\nh1 : x \u2208 HTPI.Exercises.rep_un_image2 A f nx B\nh2 : y \u2208 HTPI.Exercises.rep_un_image2 A f ny B\nh3 : nx \u2264 n\nh4 : ny \u2264 n\n\u22a2 f x y \u2208 HTPI.Exercises.cumul_un_image2 A f B",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L271"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "cd80f7ae5cdbaff29042ef9bdc7cc2a427e1ebeecc90665ec8ef9ffd914ea7d9"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 274,
        "start_column": 42,
        "end_line": 274,
        "end_column": 47
      },
      "debug_info": {
        "goal": "A : Type\nf : A \u2192 A \u2192 A\nB : Set A\n\u22a2 closure2 f B (HTPI.Exercises.cumul_un_image2 A f B)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L274"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "6c92724706d77c4b25809601d61dc06853e6e66167536f5f573b8f7d3ddad7b4"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 288,
        "start_column": 24,
        "end_line": 288,
        "end_column": 29
      },
      "debug_info": {
        "goal": "A : Type\nR : Set (A \u00d7 A)\n\u22a2 HTPI.Exercises.rep_comp A R 1 = R",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L288"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "9223fb77034cbf113ddb8d3a98b7c5e015b4334a340a5386a7f2b178ffb38ace"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 293,
        "start_column": 42,
        "end_line": 293,
        "end_column": 47
      },
      "debug_info": {
        "goal": "A : Type\nR : Set (A \u00d7 A)\n\u22a2 \u2200 (m n : \u2115),\n    HTPI.Exercises.rep_comp A R (m + n) = comp (HTPI.Exercises.rep_comp A R m) (HTPI.Exercises.rep_comp A R n)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L293"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-18T13:01:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "4d0e08c67d136c9f3e5163459cfa51b8e06faadc74dfb86d4529cef2d5209a0d"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 298,
        "start_column": 33,
        "end_line": 298,
        "end_column": 38
      },
      "debug_info": {
        "goal": "A : Type\nR S : Set (A \u00d7 A)\nh1 : R \u2286 S\nh2 : transitive (RelFromExt S)\n\u22a2 \u2200 n \u2265 1, HTPI.Exercises.rep_comp A R n \u2286 S",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L298"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-23T10:36:50-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "76a5bbe55151f7a34c4aecddd0ffca6352690dafe91d8b6222dc29a45c0c5b86"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Chap6Ex.lean",
        "start_line": 303,
        "start_column": 61,
        "end_line": 303,
        "end_column": 66
      },
      "debug_info": {
        "goal": "A : Type\nR : Set (A \u00d7 A)\n\u22a2 smallestElt (sub (A \u00d7 A)) (HTPI.Exercises.cumul_comp A R) {S | R \u2286 S \u2227 transitive (RelFromExt S)}",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/Chap6Ex.lean#L303"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-12-07T13:35:34-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "92a2701c0019625e1e85565b7261462cf462fd74e7d6dde293182697fbc46b34"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap4.lean",
        "start_line": 360,
        "start_column": 58,
        "end_line": 360,
        "end_column": 63
      },
      "debug_info": {
        "goal": "A : Type\nF : Set (Set A)\nh : HTPI.partition A F\n\u22a2 \u2200 X \u2208 F, \u2200 Y \u2208 F, \u2200 x \u2208 X, x \u2208 Y \u2192 X = Y",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap4.lean#L360"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-01-20T16:52:44-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "9bc91d8857e44f13ef23f3e404fae0ce957845069a818402ea2ed425f3bf9d46"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap4.lean",
        "start_line": 376,
        "start_column": 60,
        "end_line": 376,
        "end_column": 65
      },
      "debug_info": {
        "goal": "A : Type\nF : Set (Set A)\nh : HTPI.partition A F\n\u22a2 \u2200 X \u2208 F, \u2200 x \u2208 X, HTPI.equivClass A (HTPI.EqRelFromPart A F) x = X",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap4.lean#L376"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-01-20T16:52:44-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "b9fd5944a6f6ad184d833983bfbfde4b513e8e1998cbe4500950de0c6cabdece"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap8Part2.lean",
        "start_line": 89,
        "start_column": 57,
        "end_line": 89,
        "end_column": 62
      },
      "debug_info": {
        "goal": "k : \u2115\n\u22a2 HTPI.fnz (2 * k + 1) = -\u2191(k + 1)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap8Part2.lean#L89"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-07-03T16:43:00-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "cb42e61854416a2aa987601a1be8848836b2e1b000c9a1225795ecb76d872727"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap8Part2.lean",
        "start_line": 116,
        "start_column": 35,
        "end_line": 116,
        "end_column": 40
      },
      "debug_info": {
        "goal": "\u22a2 HTPI.fnz \u2218 HTPI.fzn = id",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap8Part2.lean#L116"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-07-03T16:43:00-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "26f38c4cf1c46adeb625b6dbf3fd7cd4d81de4ee399ac1dea38202cd8132d208"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap8Part2.lean",
        "start_line": 138,
        "start_column": 58,
        "end_line": 138,
        "end_column": 63
      },
      "debug_info": {
        "goal": "k : \u2115\n\u22a2 HTPI.tri (k + 1) = HTPI.tri k + k + 1",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap8Part2.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-07-03T16:43:00-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "542f7d3be6fc0f20c42721c2cf065d825a49a171e3c5a1b5c21c30cd42ad0cef"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap8Part2.lean",
        "start_line": 140,
        "start_column": 59,
        "end_line": 140,
        "end_column": 64
      },
      "debug_info": {
        "goal": "j k : \u2115\nh1 : j \u2264 k\n\u22a2 HTPI.tri j \u2264 HTPI.tri k",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap8Part2.lean#L140"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-07-03T16:43:00-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "d9a5431e5e75b7c1518cbb4e0aa5c17f251afffd994dedfbd23e5d3a91c24386"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap8Part2.lean",
        "start_line": 402,
        "start_column": 33,
        "end_line": 402,
        "end_column": 38
      },
      "debug_info": {
        "goal": "U V : Type\nf : U \u2192 V\n\u22a2 onto f \u2194 range f = HTPI.Univ V",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap8Part2.lean#L402"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "6f524e667501762b0936ed908b81ff15c21ba276cadf75bb820b62eb95820fb0"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap8Part2.lean",
        "start_line": 599,
        "start_column": 60,
        "end_line": 599,
        "end_column": 65
      },
      "debug_info": {
        "goal": "m : \u2115\n\u22a2 \u2200 \u2983k : \u2115\u2984, k \u2264 m \u2192 HTPI.num_elts_below (HTPI.set_rp_below m) k = num_rp_below m k",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap8Part2.lean#L599"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "097bf74b7c30430035b6bd5c7cb10402259c6278ee1a18db9e814ee5179c62e7"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap8Part2.lean",
        "start_line": 742,
        "start_column": 49,
        "end_line": 742,
        "end_column": 54
      },
      "debug_info": {
        "goal": "m n : \u2115\n\u22a2 image (HTPI.qr n) (I (m * n)) = HTPI.set_prod \u2115 \u2115 (I m) (I n)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap8Part2.lean#L742"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "0dd97b565dea36bd65f905bf3f5e9e8c4e485ff433ebfe6cdee20cd060f26159"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap8Part2.lean",
        "start_line": 923,
        "start_column": 49,
        "end_line": 923,
        "end_column": 54
      },
      "debug_info": {
        "goal": "U : Type\nF G : Set (Set U)\n\u22a2 F \u2286 G \u2192 \u22c3\u2080 F \u2286 \u22c3\u2080 G",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap8Part2.lean#L923"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "fa1dcf9884feb7a7da85041232c47778c21b30a4db0946b8ff4e11ecb01fde48"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap8Part2.lean",
        "start_line": 1084,
        "start_column": 33,
        "end_line": 1084,
        "end_column": 38
      },
      "debug_info": {
        "goal": "U : Type\nA : Set U\nn : \u2115\n\u22a2 image (HTPI.seq_cons U) (HTPI.set_prod U (List U) A (HTPI.seq_by_length U A n)) = HTPI.seq_by_length U A (n + 1)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap8Part2.lean#L1084"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-07-10T16:20:53-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "9dfaccdf4cbdfe6a3d314bbec1fcecd7f3cdc1ff62eb210a8e29881059d1d128"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap8Part2.lean",
        "start_line": 1224,
        "start_column": 47,
        "end_line": 1224,
        "end_column": 52
      },
      "debug_info": {
        "goal": "U V : Type\nX : Set U\nx : U\nf : U \u2192 V\ng : V \u2192 U\nh : x \u2209 X\ny : V\n\u22a2 (x, y) \u2208 HTPI.csb_func_graph U V f g X \u2194 g y = x",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap8Part2.lean#L1224"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "0ed3e54b0d7c39886b6f026f62a1e73919ad4736a0dfbf7adc7e94e99fe865c9"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap6.lean",
        "start_line": 232,
        "start_column": 56,
        "end_line": 232,
        "end_column": 61
      },
      "debug_info": {
        "goal": "A : Type\nR : BinRel A\nb : A\nh : partial_order R\n\u22a2 reflexive (HTPI.extendPO A R b)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap6.lean#L232"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-15T10:17:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "64759c19a3015ee576e9c8080bc04d3e5922640fa3f6b5dbb461b22a743e7547"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap6.lean",
        "start_line": 235,
        "start_column": 57,
        "end_line": 235,
        "end_column": 62
      },
      "debug_info": {
        "goal": "A : Type\nR : BinRel A\nb : A\nh : partial_order R\n\u22a2 transitive (HTPI.extendPO A R b)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap6.lean#L235"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-15T10:17:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "01b08088aafaeb9dbc10fa8e15e9b3bbb97ba247e3f2d4690cf3b55a31944099"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap6.lean",
        "start_line": 238,
        "start_column": 60,
        "end_line": 238,
        "end_column": 65
      },
      "debug_info": {
        "goal": "A : Type\nR : BinRel A\nb : A\nh : partial_order R\n\u22a2 antisymmetric (HTPI.extendPO A R b)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap6.lean#L238"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-15T10:17:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "bb41ca486bbcbb9ef2c1b59209a66be16cb1b2e28b5cb6f4fcfb839332e8475d"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap6.lean",
        "start_line": 530,
        "start_column": 68,
        "end_line": 530,
        "end_column": 73
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 HTPI.nat_even (n * n) \u2194 HTPI.nat_even n",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap6.lean#L530"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-02-15T10:17:52-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "ee3ad1ae7e34423b44c131bbe2c35daf58796cfc2fef4a636ac6a9ec57c540d5"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap5.lean",
        "start_line": 230,
        "start_column": 51,
        "end_line": 230,
        "end_column": 56
      },
      "debug_info": {
        "goal": "A B : Type\nf : A \u2192 B\ng : B \u2192 A\nh1 : HTPI.graph B A g = inv (HTPI.graph A B f)\n\u22a2 f \u2218 g = id",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap5.lean#L230"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-01-20T16:52:44-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "4c77c4a28755eba140da958406900dac559c2022b33cf8058aef011014957869"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap5.lean",
        "start_line": 328,
        "start_column": 37,
        "end_line": 328,
        "end_column": 42
      },
      "debug_info": {
        "goal": "A : Type\nf : A \u2192 A \u2192 A\nB : Set A\n\u22a2 \u2203 C, HTPI.closure2 A f B C",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap5.lean#L328"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-01-20T16:52:44-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "4aa240eafbd58688d7ac08f3da268f07611d0c64d928745fb6ac0e8fbf44a901"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap8Part1.lean",
        "start_line": 197,
        "start_column": 45,
        "end_line": 197,
        "end_column": 50
      },
      "debug_info": {
        "goal": "U V : Type\nA : Set U\nf : \u2191A \u2192 V\nv : V\n\u22a2 HTPI.func_restrict U V (HTPI.func_extend U V A f v) A = f",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap8Part1.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "73affcf504652976c7af1d6ae150a0dc334431ec7b98c91085c25d54e756071f"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap8Part1.lean",
        "start_line": 329,
        "start_column": 53,
        "end_line": 329,
        "end_column": 58
      },
      "debug_info": {
        "goal": "U : Type\nA : Set U\nf : U \u2192 \u2115\nh : empty A\n\u22a2 image f A = HTPI.I 0",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap8Part1.lean#L329"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2025-05-12T09:44:57-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "27d816671502889ec2e519ec5548a1f5f423c26e3203b2948135213ff834be09"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap7.lean",
        "start_line": 570,
        "start_column": 51,
        "end_line": 570,
        "end_column": 56
      },
      "debug_info": {
        "goal": "a p : \u2115\nh1 : HTPI.prime p\nh2 : a \u2223 p\n\u22a2 a = 1 \u2228 a = p",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap7.lean#L570"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-08-06T15:17:58-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "2886986ffa41349900bc07303f0549df19c76c97c3aa804ebf39c6eb0cfa719a"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap7.lean",
        "start_line": 1036,
        "start_column": 56,
        "end_line": 1036,
        "end_column": 61
      },
      "debug_info": {
        "goal": "a b : \u2115\n\u22a2 HTPI.rel_prime a b \u2194 \u2203 s t, s * \u2191a + t * \u2191b = 1",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap7.lean#L1036"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-08-06T15:17:58-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "d5e2e34eeacef042a7cb53c30d6cdaaa18ca256ef8e407e75ee818a20221e634"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap7.lean",
        "start_line": 1285,
        "start_column": 39,
        "end_line": 1285,
        "end_column": 44
      },
      "debug_info": {
        "goal": "m a b : \u2115\ninst\u271d : NeZero m\n\u22a2 HTPI.congr_mod m \u2191a \u2191b \u2194 a % m = b % m",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap7.lean#L1285"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-08-06T15:17:58-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "7c88d9fbe36a158c9e0d62c54a4dce48a6c3075452ccb6af77ee3a55cbe3f8fa"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap7.lean",
        "start_line": 1689,
        "start_column": 42,
        "end_line": 1689,
        "end_column": 47
      },
      "debug_info": {
        "goal": "m : \u2115\na : \u2124\n\u22a2 \u2200 (n : \u2115), HTPI.cc m a ^ n = HTPI.cc m (a ^ n)",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap7.lean#L1689"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-08-06T15:17:58-04:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "cfb58d14e2551890dce1790c3be67c7e0d53a8098f60625e5800c59be37fe080"
    },
    {
      "repo": {
        "remote": "https://github.com/djvelleman/HTPILeanPackage",
        "branch": "master",
        "commit": "12aa060f2cb7f7a6c94d7072a3df3acd32d07848",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "HTPILib/Chap7.lean",
        "start_line": 1713,
        "start_column": 43,
        "end_line": 1713,
        "end_column": 48
      },
      "debug_info": {
        "goal": "p : \u2115\nh1 : HTPI.prime p\n\u22a2 \u2200 k < p, HTPI.num_rp_below p (k + 1) = k",
        "url": "https://github.com/djvelleman/HTPILeanPackage/blob/12aa060f2cb7f7a6c94d7072a3df3acd32d07848/HTPILib/Chap7.lean#L1713"
      },
      "metadata": {
        "blame_email_hash": "915d100f01e6",
        "blame_date": "2023-11-10T14:58:19-05:00",
        "inclusion_date": "2025-05-31T05:00:24.676572+00:00"
      },
      "id": "67746b27d47d70da2b09610fddc82e26fe0db2a10404772b0f91cc59730964f3"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean",
        "start_line": 616,
        "start_column": 2,
        "end_line": 616,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097' : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63' : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhB\u2097' : B\u2097'.IsTotallyUnimodular\nhB\u1d63' : B\u1d63'.IsTotallyUnimodular\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\n\u22a2 let x\u2080\u2097 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2080\u1d63 := \u27e8x\u2080, \u22ef\u27e9;\n  let x\u2081\u2097 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2081\u1d63 := \u27e8x\u2081, \u22ef\u27e9;\n  let x\u2082\u2097 := \u27e8x\u2082, \u22ef\u27e9;\n  let x\u2082\u1d63 := \u27e8x\u2082, \u22ef\u27e9;\n  let y\u2080\u2097 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2080\u1d63 := \u27e8y\u2080, \u22ef\u27e9;\n  let y\u2081\u2097 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2081\u1d63 := \u27e8y\u2081, \u22ef\u27e9;\n  let y\u2082\u2097 := \u27e8y\u2082, \u22ef\u27e9;\n  let y\u2082\u1d63 := \u27e8y\u2082, \u22ef\u27e9;\n  let B\u2097 := B\u2097'.toCanonicalSigning x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n  let B\u1d63 := B\u1d63'.toCanonicalSigning x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63;\n  let D\u2080 := B\u2097.D\u2080 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097;\n  let D\u2097 := B\u2097.D\u2097 x\u2080\u2097 x\u2081\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097;\n  let D\u1d63 := B\u1d63.D\u1d63 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63;\n  let D := matrix3sumBottomLeft x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097 D\u2097 D\u2080 D\u1d63;\n  let c\u2080 := B\u1d63._col y\u2080\u1d63;\n  let c\u2081 := B\u1d63._col y\u2081\u1d63;\n  (B\u2097'.submatrix3x3 x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097).abs = matrix3x3unsigned\u2080 \u2228\n      (B\u2097'.submatrix3x3 x\u2080\u2097 x\u2081\u2097 x\u2082\u2097 y\u2080\u2097 y\u2081\u2097 y\u2082\u2097).abs = matrix3x3unsigned\u2081 \u2192\n    (B\u1d63'.submatrix3x3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63).abs = matrix3x3unsigned\u2080 \u2228\n        (B\u1d63'.submatrix3x3 x\u2080\u1d63 x\u2081\u1d63 x\u2082\u1d63 y\u2080\u1d63 y\u2081\u1d63 y\u2082\u1d63).abs = matrix3x3unsigned\u2081 \u2192\n      \u2200 (j : \u2191(Y\u2097.drop1 y\u2082\u2097)),\n        (fun x => D x j) = 0 \u2228\n          (fun x => D x j) = c\u2080 \u2228\n            (fun x => D x j) = -c\u2080 \u2228\n              (fun x => D x j) = c\u2081 \u2228 (fun x => D x j) = -c\u2081 \u2228 (fun x => D x j) = c\u2080 - c\u2081 \u2228 (fun x => D x j) = c\u2081 - c\u2080",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/CanonicalSigning.lean#L616"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-05-26T16:45:43+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "6044a1b2b5c2c7a667b6b95f26d7fb7f7be8d23d47d59309d89990d87e73e984"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/MatrixFamily.lean",
        "start_line": 27,
        "start_column": 2,
        "end_line": 27,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nc\u2080 c\u2081 : \u2191X\u1d63 \u2192 \u211a\nC : matrix3sumLike X\u2097 Y\u2097 X\u1d63 Y\u1d63 c\u2080 c\u2081\nx : \u2191X\u2097\ny : \u2191Y\u2097\nhxy : C.A\u2097 x y \u2260 0\n\u22a2 False",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/MatrixFamily.lean#L27"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-05-30T14:58:25+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "db26d79f08a80f9a4679f2358c57d321615a683e533715bd24e47632954c3989"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/MatrixFamily.lean",
        "start_line": 32,
        "start_column": 2,
        "end_line": 32,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nc\u2080 c\u2081 : \u2191X\u1d63 \u2192 \u211a\nC : matrix3sumLike X\u2097 Y\u2097 X\u1d63 Y\u1d63 c\u2080 c\u2081\n\u22a2 C.matrix.IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/MatrixFamily.lean#L32"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-05-30T14:58:25+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "567646312ae7b12890ef3a95b1738f2222ebec32d2c8543a82589014ab8a103c"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/MatrixFamily.lean",
        "start_line": 48,
        "start_column": 9,
        "end_line": 48,
        "end_column": 14
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097 : B\u2097.IsTotallyUnimodular\nhB\u1d63 : B\u1d63.IsTotallyUnimodular\n\u22a2 \u2200 (i : \u2191(X\u1d63 \\ {x\u2082})), B\u1d63._col \u27e8y\u2080, \u22ef\u27e9 i \u2208 Set.range SignType.cast",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/MatrixFamily.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-05-30T14:58:25+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "7fe8b4f7ecb04a5fb4b610bd102ae63391f6dce0c858092c58f28eaa6d4772a6"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/MatrixFamily.lean",
        "start_line": 49,
        "start_column": 9,
        "end_line": 49,
        "end_column": 14
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097 : B\u2097.IsTotallyUnimodular\nhB\u1d63 : B\u1d63.IsTotallyUnimodular\n\u22a2 \u2200 (i : \u2191(X\u1d63 \\ {x\u2082})), B\u1d63._col \u27e8y\u2081, \u22ef\u27e9 i \u2208 Set.range SignType.cast",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/MatrixFamily.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-05-30T14:58:25+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "cd9e984b4615522f5fb3a13ea798be6350a64e1e968b5ed4baa041f32137e62a"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/MatrixFamily.lean",
        "start_line": 50,
        "start_column": 10,
        "end_line": 50,
        "end_column": 15
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097 : B\u2097.IsTotallyUnimodular\nhB\u1d63 : B\u1d63.IsTotallyUnimodular\n\u22a2 \u2200 (i : \u2191(X\u1d63 \\ {x\u2082})), B\u1d63._col \u27e8y\u2080, \u22ef\u27e9 i - B\u1d63._col \u27e8y\u2081, \u22ef\u27e9 i \u2208 Set.range SignType.cast",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/MatrixFamily.lean#L50"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-05-30T14:58:25+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "340a089ed915791401cd48e4d6f585b9a348fb9fd341eee705dce409e83d0e46"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/MatrixFamily.lean",
        "start_line": 51,
        "start_column": 9,
        "end_line": 51,
        "end_column": 14
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097 : B\u2097.IsTotallyUnimodular\nhB\u1d63 : B\u1d63.IsTotallyUnimodular\n\u22a2 (sorry \u229f sorry).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/MatrixFamily.lean#L51"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-05-30T14:58:25+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "127a41a7e0f47704209118c6eca84de33d41c235873f6067dbc781f315fd81b2"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/MatrixFamily.lean",
        "start_line": 52,
        "start_column": 9,
        "end_line": 52,
        "end_column": 14
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097 : B\u2097.IsTotallyUnimodular\nhB\u1d63 : B\u1d63.IsTotallyUnimodular\n\u22a2 (\u25aeB\u1d63._col \u27e8y\u2080, \u22ef\u27e9 \u25eb \u25aeB\u1d63._col \u27e8y\u2081, \u22ef\u27e9 \u25eb \u25ae(B\u1d63._col \u27e8y\u2080, \u22ef\u27e9 - B\u1d63._col \u27e8y\u2081, \u22ef\u27e9) \u25eb sorry).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/MatrixFamily.lean#L52"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-05-30T14:58:25+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "1902aee17ec58bea7ff7d4ab29e0bac078d112449e133516d3094e9122a6d3ad"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "a55a02e8f03a69805ad811062a766aa723d447d3",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/MatrixFamily.lean",
        "start_line": 53,
        "start_column": 8,
        "end_line": 53,
        "end_column": 13
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d\u2074 : DecidableEq \u03b1\nX\u2097 Y\u2097 X\u1d63 Y\u1d63 : Set \u03b1\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\ninst\u271d\u00b3 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u2097)\ninst\u271d\u00b2 : (x : \u03b1) \u2192 Decidable (x \u2208 X\u1d63)\ninst\u271d\u00b9 : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u2097)\ninst\u271d : (y : \u03b1) \u2192 Decidable (y \u2208 Y\u1d63)\nB\u2097 : Matrix \u2191X\u2097 \u2191Y\u2097 \u211a\nB\u1d63 : Matrix \u2191X\u1d63 \u2191Y\u1d63 \u211a\nhXX : X\u2097 \u2229 X\u1d63 = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : Y\u2097 \u2229 Y\u1d63 = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhB\u2097 : B\u2097.IsTotallyUnimodular\nhB\u1d63 : B\u1d63.IsTotallyUnimodular\n\u22a2 \u2200 (j : \u2191(Y\u2097 \\ {y\u2082})),\n    (fun x => sorry x j) = 0 \u2228\n      (fun x => sorry x j) = B\u1d63._col \u27e8y\u2080, \u22ef\u27e9 \u2228\n        (fun x => sorry x j) = -B\u1d63._col \u27e8y\u2080, \u22ef\u27e9 \u2228\n          (fun x => sorry x j) = B\u1d63._col \u27e8y\u2081, \u22ef\u27e9 \u2228\n            (fun x => sorry x j) = -B\u1d63._col \u27e8y\u2081, \u22ef\u27e9 \u2228\n              (fun x => sorry x j) = B\u1d63._col \u27e8y\u2080, \u22ef\u27e9 - B\u1d63._col \u27e8y\u2081, \u22ef\u27e9 \u2228\n                (fun x => sorry x j) = B\u1d63._col \u27e8y\u2081, \u22ef\u27e9 - B\u1d63._col \u27e8y\u2080, \u22ef\u27e9",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/a55a02e8f03a69805ad811062a766aa723d447d3/Seymour/Matroid/Operations/Sum3/MatrixFamily.lean#L53"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-05-30T14:58:25+02:00",
        "inclusion_date": "2025-06-04T05:01:58.539867+00:00"
      },
      "id": "fafc715d420807a1b419afd28284f13e14042ce92fa1982ededce009c41fac47"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/Mathlib/Mathlib.lean",
        "start_line": 424,
        "start_column": 2,
        "end_line": 424,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case calc.step\nn : \u2115\nW : Matrix (Fin n) (Fin n) \u211d\nv w : Fin n \u2192 \u211d\nexpand_lhs : \u2211 i : Fin n, (\u2211 j : Fin n, W i j * v j) * w i = \u2211 i : Fin n, \u2211 j : Fin n, W i j * v j * w i\n\u22a2 \u2211 j : Fin n, \u2211 i : Fin n, W i j * w i * v j = (((toMatrix\u209b\u2097\u2082' \u211d).symm W) v) w",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/Mathlib/Mathlib.lean#L424"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-02T09:38:35+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "dad740e462b026d60e92c0acae2c21cda079ecf8c25b98258ba9a5be4b58c762"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/Hopfield/Asymmetric.lean",
        "start_line": 430,
        "start_column": 8,
        "end_line": 430,
        "end_column": 13
      },
      "debug_info": {
        "goal": "n : \u2115\nnet : AsymmetricHopfieldNetwork n\nx : HopfieldState n\nk : \u2115\nh_k_lt_n : k < n\nnextIndex : Fin n := \u27e8k % n, \u22ef\u27e9\nx' : HopfieldState n := updateStateAsym net.weights net.thresholds x nextIndex\ni' : Fin n := nextIndex\ni'' : Fin n := \u27e8(k + 1) % n, \u22ef\u27e9\nh_case1 :\n  \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x' i' > 0 then 1 else -1) * (x' j).toReal -\n      \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x i' > 0 then 1 else -1) * (x j).toReal =\n    (\u2211 j : Fin n,\n        (net.weights i' j * if localFieldAsym net x' i' > 0 then 1 else -1) *\n          if j = i' then updatedSpinValue net x i' else (x j).toReal) -\n      \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x i' > 0 then 1 else -1) * (x j).toReal\n\u0394\u2081 : \u211d\nh_\u0394\u2081 :\n  \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x' i' > 0 then 1 else -1) * (x' j).toReal -\n      \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x i' > 0 then 1 else -1) * (x j).toReal =\n    \u0394\u2081\n\u0394\u2082 : \u211d\nh_\u0394\u2082 :\n  \u2211 j : Fin n, (net.weights i'' j * if localFieldAsym net x' i'' > 0 then 1 else -1) * (x' j).toReal -\n      \u2211 j : Fin n, net.weights i'' j * (x i'').toReal * (x j).toReal =\n    \u0394\u2082\n\u0394\u2083 : \u211d\nh_\u0394\u2083 :\n  (\u2211 i : Fin n,\n      if i \u2260 i' \u2227 i \u2260 i'' then\n        \u2211 j : Fin n, net.weights i j * (x' i).toReal * (x' j).toReal -\n          \u2211 j : Fin n, net.weights i j * (x i).toReal * (x j).toReal\n      else 0) =\n    \u0394\u2083\n\u22a2 potentialFunction net x k =\n    \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x i' > 0 then 1 else -1) * (x j).toReal +\n        \u2211 j : Fin n, net.weights i'' j * (x i'').toReal * (x j).toReal +\n      \u2211 i : Fin n, if i \u2260 i' \u2227 i \u2260 i'' then \u2211 j : Fin n, net.weights i j * (x i).toReal * (x j).toReal else 0",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/Hopfield/Asymmetric.lean#L430"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-08T18:34:48+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "07a6eb4fe3279193ff104b88f3b7949ddfbd97cf1ae93b9488f7586938011490"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/Hopfield/Asymmetric.lean",
        "start_line": 438,
        "start_column": 8,
        "end_line": 438,
        "end_column": 13
      },
      "debug_info": {
        "goal": "n : \u2115\nnet : AsymmetricHopfieldNetwork n\nx : HopfieldState n\nk : \u2115\nh_k_lt_n : k < n\nnextIndex : Fin n := \u27e8k % n, \u22ef\u27e9\nx' : HopfieldState n := updateStateAsym net.weights net.thresholds x nextIndex\ni' : Fin n := nextIndex\ni'' : Fin n := \u27e8(k + 1) % n, \u22ef\u27e9\nh_case1 :\n  \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x' i' > 0 then 1 else -1) * (x' j).toReal -\n      \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x i' > 0 then 1 else -1) * (x j).toReal =\n    (\u2211 j : Fin n,\n        (net.weights i' j * if localFieldAsym net x' i' > 0 then 1 else -1) *\n          if j = i' then updatedSpinValue net x i' else (x j).toReal) -\n      \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x i' > 0 then 1 else -1) * (x j).toReal\n\u0394\u2081 : \u211d\nh_\u0394\u2081 :\n  \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x' i' > 0 then 1 else -1) * (x' j).toReal -\n      \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x i' > 0 then 1 else -1) * (x j).toReal =\n    \u0394\u2081\n\u0394\u2082 : \u211d\nh_\u0394\u2082 :\n  \u2211 j : Fin n, (net.weights i'' j * if localFieldAsym net x' i'' > 0 then 1 else -1) * (x' j).toReal -\n      \u2211 j : Fin n, net.weights i'' j * (x i'').toReal * (x j).toReal =\n    \u0394\u2082\n\u0394\u2083 : \u211d\nh_\u0394\u2083 :\n  (\u2211 i : Fin n,\n      if i \u2260 i' \u2227 i \u2260 i'' then\n        \u2211 j : Fin n, net.weights i j * (x' i).toReal * (x' j).toReal -\n          \u2211 j : Fin n, net.weights i j * (x i).toReal * (x j).toReal\n      else 0) =\n    \u0394\u2083\nh_pot_def1 :\n  potentialFunction net x k =\n    \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x i' > 0 then 1 else -1) * (x j).toReal +\n        \u2211 j : Fin n, net.weights i'' j * (x i'').toReal * (x j).toReal +\n      \u2211 i : Fin n, if i \u2260 i' \u2227 i \u2260 i'' then \u2211 j : Fin n, net.weights i j * (x i).toReal * (x j).toReal else 0\n\u22a2 potentialFunction net x' (k + 1) =\n    \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x' i' > 0 then 1 else -1) * (x' j).toReal +\n        \u2211 j : Fin n, (net.weights i'' j * if localFieldAsym net x' i'' > 0 then 1 else -1) * (x' j).toReal +\n      \u2211 i : Fin n, if i \u2260 i' \u2227 i \u2260 i'' then \u2211 j : Fin n, net.weights i j * (x' i).toReal * (x' j).toReal else 0",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/Hopfield/Asymmetric.lean#L438"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-08T18:34:48+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "4d7b48eec4d0980f11ad9f3d475d72acd7d2de3843787ebbe703a342ab7c9030"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/Hopfield/Asymmetric.lean",
        "start_line": 485,
        "start_column": 12,
        "end_line": 485,
        "end_column": 17
      },
      "debug_info": {
        "goal": "n : \u2115\nnet : AsymmetricHopfieldNetwork n\nx : HopfieldState n\nk : \u2115\nh_k_lt_n : k < n\nnextIndex : Fin n := \u27e8k % n, \u22ef\u27e9\nx' : HopfieldState n := updateStateAsym net.weights net.thresholds x nextIndex\ni' : Fin n := nextIndex\ni'' : Fin n := \u27e8(k + 1) % n, \u22ef\u27e9\nh_case1 :\n  \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x' i' > 0 then 1 else -1) * (x' j).toReal -\n      \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x i' > 0 then 1 else -1) * (x j).toReal =\n    (\u2211 j : Fin n,\n        (net.weights i' j * if localFieldAsym net x' i' > 0 then 1 else -1) *\n          if j = i' then updatedSpinValue net x i' else (x j).toReal) -\n      \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x i' > 0 then 1 else -1) * (x j).toReal\n\u0394\u2081 : \u211d\nh_\u0394\u2081 :\n  \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x' i' > 0 then 1 else -1) * (x' j).toReal -\n      \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x i' > 0 then 1 else -1) * (x j).toReal =\n    \u0394\u2081\n\u0394\u2082 : \u211d\nh_\u0394\u2082 :\n  \u2211 j : Fin n, (net.weights i'' j * if localFieldAsym net x' i'' > 0 then 1 else -1) * (x' j).toReal -\n      \u2211 j : Fin n, net.weights i'' j * (x i'').toReal * (x j).toReal =\n    \u0394\u2082\n\u0394\u2083 : \u211d\nh_\u0394\u2083 :\n  (\u2211 i : Fin n,\n      if i \u2260 i' \u2227 i \u2260 i'' then\n        \u2211 j : Fin n, net.weights i j * (x' i).toReal * (x' j).toReal -\n          \u2211 j : Fin n, net.weights i j * (x i).toReal * (x j).toReal\n      else 0) =\n    \u0394\u2083\nh_pot_def1 :\n  potentialFunction net x k =\n    \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x i' > 0 then 1 else -1) * (x j).toReal +\n        \u2211 j : Fin n, net.weights i'' j * (x i'').toReal * (x j).toReal +\n      \u2211 i : Fin n, if i \u2260 i' \u2227 i \u2260 i'' then \u2211 j : Fin n, net.weights i j * (x i).toReal * (x j).toReal else 0\nh_pot_def2 :\n  potentialFunction net x' (k + 1) =\n    \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x' i' > 0 then 1 else -1) * (x' j).toReal +\n        \u2211 j : Fin n, (net.weights i'' j * if localFieldAsym net x' i'' > 0 then 1 else -1) * (x' j).toReal +\n      \u2211 i : Fin n, if i \u2260 i' \u2227 i \u2260 i'' then \u2211 j : Fin n, net.weights i j * (x' i).toReal * (x' j).toReal else 0\nh1 :\n  \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x' i' > 0 then 1 else -1) * (x' j).toReal -\n      \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x i' > 0 then 1 else -1) * (x j).toReal =\n    \u0394\u2081\nh2 :\n  \u2211 j : Fin n, (net.weights i'' j * if localFieldAsym net x' i'' > 0 then 1 else -1) * (x' j).toReal -\n      \u2211 j : Fin n, net.weights i'' j * (x i'').toReal * (x j).toReal =\n    \u0394\u2082\nh3 :\n  (\u2211 i : Fin n,\n      if i \u2260 i' \u2227 i \u2260 i'' then\n        \u2211 j : Fin n, net.weights i j * (x' i).toReal * (x' j).toReal -\n          \u2211 j : Fin n, net.weights i j * (x i).toReal * (x j).toReal\n      else 0) =\n    \u0394\u2083\n\u22a2 ((\u2211 i : Fin n, if i \u2260 i' \u2227 i \u2260 i'' then \u2211 j : Fin n, net.weights i j * (x' i).toReal * (x' j).toReal else 0) -\n      \u2211 i : Fin n, if i \u2260 i' \u2227 i \u2260 i'' then \u2211 j : Fin n, net.weights i j * (x i).toReal * (x j).toReal else 0) =\n    \u2211 i : Fin n,\n      if i \u2260 i' \u2227 i \u2260 i'' then\n        \u2211 j : Fin n, net.weights i j * (x' i).toReal * (x' j).toReal -\n          \u2211 j : Fin n, net.weights i j * (x i).toReal * (x j).toReal\n      else 0",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/Hopfield/Asymmetric.lean#L485"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-08T18:34:48+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "853fb6d84eb0afca40cff274aeeda667622a33c7fe5a75f464930b18b442bc2e"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/Hopfield/Asymmetric.lean",
        "start_line": 501,
        "start_column": 12,
        "end_line": 501,
        "end_column": 17
      },
      "debug_info": {
        "goal": "n : \u2115\nnet : AsymmetricHopfieldNetwork n\nx : HopfieldState n\nk : \u2115\nh_k_lt_n : k < n\nnextIndex : Fin n := \u27e8k % n, \u22ef\u27e9\nx' : HopfieldState n := updateStateAsym net.weights net.thresholds x nextIndex\ni' : Fin n := nextIndex\ni'' : Fin n := \u27e8(k + 1) % n, \u22ef\u27e9\nh_case1 :\n  \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x' i' > 0 then 1 else -1) * (x' j).toReal -\n      \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x i' > 0 then 1 else -1) * (x j).toReal =\n    (\u2211 j : Fin n,\n        (net.weights i' j * if localFieldAsym net x' i' > 0 then 1 else -1) *\n          if j = i' then updatedSpinValue net x i' else (x j).toReal) -\n      \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x i' > 0 then 1 else -1) * (x j).toReal\n\u0394\u2081 : \u211d\nh_\u0394\u2081 :\n  \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x' i' > 0 then 1 else -1) * (x' j).toReal -\n      \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x i' > 0 then 1 else -1) * (x j).toReal =\n    \u0394\u2081\n\u0394\u2082 : \u211d\nh_\u0394\u2082 :\n  \u2211 j : Fin n, (net.weights i'' j * if localFieldAsym net x' i'' > 0 then 1 else -1) * (x' j).toReal -\n      \u2211 j : Fin n, net.weights i'' j * (x i'').toReal * (x j).toReal =\n    \u0394\u2082\n\u0394\u2083 : \u211d\nh_\u0394\u2083 :\n  (\u2211 i : Fin n,\n      if i \u2260 i' \u2227 i \u2260 i'' then\n        \u2211 j : Fin n, net.weights i j * (x' i).toReal * (x' j).toReal -\n          \u2211 j : Fin n, net.weights i j * (x i).toReal * (x j).toReal\n      else 0) =\n    \u0394\u2083\nh_pot_def1 :\n  potentialFunction net x k =\n    \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x i' > 0 then 1 else -1) * (x j).toReal +\n        \u2211 j : Fin n, net.weights i'' j * (x i'').toReal * (x j).toReal +\n      \u2211 i : Fin n, if i \u2260 i' \u2227 i \u2260 i'' then \u2211 j : Fin n, net.weights i j * (x i).toReal * (x j).toReal else 0\nh_pot_def2 :\n  potentialFunction net x' (k + 1) =\n    \u2211 j : Fin n, (net.weights i' j * if localFieldAsym net x' i' > 0 then 1 else -1) * (x' j).toReal +\n        \u2211 j : Fin n, (net.weights i'' j * if localFieldAsym net x' i'' > 0 then 1 else -1) * (x' j).toReal +\n      \u2211 i : Fin n, if i \u2260 i' \u2227 i \u2260 i'' then \u2211 j : Fin n, net.weights i j * (x' i).toReal * (x' j).toReal else 0\n\u22a2 \u0394\u2081 + \u0394\u2082 + \u0394\u2083 =\n    \u0394\u2081 + \u2211 j : Fin n, (net.weights i'' j * if localFieldAsym net x' i'' > 0 then 1 else -1) * (x' j).toReal -\n        \u2211 j : Fin n, net.weights i'' j * (x i'').toReal * (x j).toReal +\n      \u0394\u2083",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/Hopfield/Asymmetric.lean#L501"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-08T18:34:48+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "8fa030d21fd45d7c3f49f168a5ee6f5759164a8c03b2f10b898126adb3096145"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/Hopfield/Biased.lean",
        "start_line": 106,
        "start_column": 2,
        "end_line": 106,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nnet : BiasedHopfieldNetwork n\nx : HopfieldState n\ni : Fin n\n\u22a2 biasedEnergyDiff net x i = -((biasedUpdateState net x i i).toReal - (x i).toReal) * biasedLocalField net x i",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/Hopfield/Biased.lean#L106"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-03T12:34:17+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "fa91119766aba68549ad6406c344e2341dd94d230b55daf38a872663ae228a33"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/Hopfield/Biased.lean",
        "start_line": 109,
        "start_column": 2,
        "end_line": 109,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nnet : BiasedHopfieldNetwork n\nx : HopfieldState n\ni : Fin n\n\u22a2 biasedEnergyDiff net x i \u2264 0",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/Hopfield/Biased.lean#L109"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-03T12:34:17+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "9f44e77cc59c3a06d3a6d4aed3a2e327dd44e989032ab769bc3b37adc4260634"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/Hopfield/Biased.lean",
        "start_line": 113,
        "start_column": 2,
        "end_line": 113,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nnet : BiasedHopfieldNetwork n\nx : HopfieldState n\ni : Fin n\n\u22a2 biasedUpdateState net x i \u2260 x \u2192 biasedLocalField net x i \u2260 0 \u2192 biasedEnergyDiff net x i < 0",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/Hopfield/Biased.lean#L113"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-03T12:34:17+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "c45470a1c9d7d6c684e4a144554957f0ec4a3bf91795f6202b4147e8a4dab992"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/Hopfield/Biased.lean",
        "start_line": 117,
        "start_column": 2,
        "end_line": 117,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nnet : BiasedHopfieldNetwork n\nx : HopfieldState n\ni : Fin n\n\u22a2 biasedEnergyDiff net x i = 0 \u2194 biasedUpdateState net x i = x",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/Hopfield/Biased.lean#L117"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-03T12:34:17+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "99359c40c78a42d9c48ccbc53148e42b69080fa14319e065c06ce76cb4632ccd"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/Hopfield/Biased.lean",
        "start_line": 127,
        "start_column": 2,
        "end_line": 127,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nnet : BiasedHopfieldNetwork n\n\u22a2 \u2200 (x : HopfieldState n), \u2203 seq, biasedIsFixedPoint net seq.target",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/Hopfield/Biased.lean#L127"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-03T12:34:17+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "e616ebb61829c869677692977057f8f83e4b89d88f0dc4b966a86638f4b9ed8f"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/ForMathlib/MetropolisHastings.lean",
        "start_line": 185,
        "start_column": 2,
        "end_line": 185,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1\u271d : Type u_1\ninst\u271d\u2074 : MeasurableSpace \u03b1\u271d\ninst\u271d\u00b3 : LinearOrderedField \u03b1\u271d\ninst\u271d\u00b2 : Zero \u03b1\u271d\ninst\u271d\u00b9 : CastRealField \u03b1\u271d\n\u03b1 : Type u_2\ninst\u271d : MeasurableSpace \u03b1\n\u03bc \u03bd : Measure \u03b1\nh : \u03bc \u226a \u03bd\n\u22a2 \u03bc = \u03bd.withDensity (\u2202\u03bc/\u2202\u03bd)",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/ForMathlib/MetropolisHastings.lean#L185"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "23682c213640dac5d41b4486248451157dd926bae5bbe180178a5b59e285bab6"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/ForMathlib/MetropolisHastings.lean",
        "start_line": 254,
        "start_column": 18,
        "end_line": 254,
        "end_column": 23
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d\u00b9\u2070 : MeasurableSpace \u03b1\ninst\u271d\u2079 : LinearOrderedField \u03b1\ninst\u271d\u2078 : Zero \u03b1\ninst\u271d\u2077 : CastRealField \u03b1\na b : \u03b1\nvol : Measure \u03b1\nh : Fact (a < b)\ninst\u271d\u2076 : TopologicalSpace \u03b1\ninst\u271d\u2075 : OrderClosedTopology \u03b1\ninst\u271d\u2074 : OpensMeasurableSpace \u03b1\ninst\u271d\u00b3 : MeasureSpace \u03b1\ninst\u271d\u00b2 : BorelSpace \u03b1\ninst\u271d\u00b9 : IsFiniteMeasure vol\ninst\u271d : RestrictedScalable vol (Set.Icc a b)\nhm : Measurable (uniformContinuousPdf \u22ef)\ndelta : \u211d := CastRealField.cast b - CastRealField.cast a\nthis :\n  \u222b\u207b (x : \u03b1), ENNReal.ofReal delta\u207b\u00b9 \u2202vol =\n    \u222b\u207b (x : \u03b1) in Set.Icc a b, ENNReal.ofReal delta\u207b\u00b9 \u2202vol + \u222b\u207b (x : \u03b1) in (Set.Icc a b)\u1d9c, ENNReal.ofReal delta\u207b\u00b9 \u2202vol\n\u03bd\u271d : Measure \u03b1\nh\u03bd\u271d : \u2200 (t : Set \u03b1), MeasurableSet t \u2192 \u03bd\u271d (t \u2229 Set.Icc a b) = 1 \u2022 vol (t \u2229 Set.Icc a b)\nh_icc : \u03bd\u271d (Set.Icc a b) = ENNReal.ofReal 1 * vol (Set.Icc a b)\nh_pos : 0 < CastRealField.cast b - CastRealField.cast a\n\u03bd : Measure \u03b1\nh\u03bd : \u03bd (Set.Icc a b) = vol (Set.Icc a b)\nh_one_smul : 1 \u2022 vol (Set.Icc a b) = vol (Set.Icc a b)\nh_vol_eq : \u03bd (Set.Icc a b) = vol (Set.Icc a b)\nh_vol_pos : 0 < CastRealField.cast b - CastRealField.cast a\nh_ne_top : ENNReal.ofReal (CastRealField.cast b - CastRealField.cast a) \u2260 \u22a4\n\u03bd' : Measure \u03b1\nh\u03bd' : \u2200 (t : Set \u03b1), MeasurableSet t \u2192 \u03bd' (t \u2229 Set.Icc a b) = ENNReal.ofReal 1 \u2022 vol (t \u2229 Set.Icc a b)\nh_scale_set : \u03bd' (Set.Icc a b) = ENNReal.ofReal 1 \u2022 1 \u2022 vol (Set.Icc a b)\nh_one_smul_eq : 1 \u2022 vol (Set.Icc a b) = vol (Set.Icc a b)\n\u22a2 vol (Set.Icc a b) = ENNReal.ofReal (CastRealField.cast b - CastRealField.cast a)",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/ForMathlib/MetropolisHastings.lean#L254"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "55404566d45315e1db2219b8cdb64072cb1e0791ffab5e04663836ea7151c6f1"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/ForMathlib/MetropolisHastings.lean",
        "start_line": 300,
        "start_column": 8,
        "end_line": 300,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case pos\n\u03b1 : Type u_1\ninst\u271d\u00b9\u2070 : MeasurableSpace \u03b1\ninst\u271d\u2079 : LinearOrderedField \u03b1\ninst\u271d\u2078 : Zero \u03b1\ninst\u271d\u2077 : CastRealField \u03b1\na b : \u03b1\nvol : Measure \u03b1\nh : Fact (a < b)\ninst\u271d\u2076 : TopologicalSpace \u03b1\ninst\u271d\u2075 : OrderClosedTopology \u03b1\ninst\u271d\u2074 : OpensMeasurableSpace \u03b1\ninst\u271d\u00b3 : MeasureSpace \u03b1\ninst\u271d\u00b2 : BorelSpace \u03b1\ninst\u271d\u00b9 : IsFiniteMeasure vol\ninst\u271d : RestrictedScalable vol (Set.Icc a b)\nhm : Measurable (uniformContinuousPdf \u22ef)\ndelta : \u211d := CastRealField.cast b - CastRealField.cast a\nthis\u271d :\n  \u222b\u207b (x : \u03b1), ENNReal.ofReal delta\u207b\u00b9 \u2202vol =\n    \u222b\u207b (x : \u03b1) in Set.Icc a b, ENNReal.ofReal delta\u207b\u00b9 \u2202vol + \u222b\u207b (x : \u03b1) in (Set.Icc a b)\u1d9c, ENNReal.ofReal delta\u207b\u00b9 \u2202vol\nthis : ENNReal.ofReal (CastRealField.cast b - CastRealField.cast a)\u207b\u00b9 * vol (Set.Icc a b) = 1\nhIcc : \u222b\u207b (x : \u03b1) in Set.Icc a b, ENNReal.ofReal delta\u207b\u00b9 \u2202vol = 1\nh_meas_compl : MeasurableSet (Set.Icc a b)\u1d9c\nh_indicator : \u2200 x \u2208 (Set.Icc a b)\u1d9c, uniformContinuousPdf \u22ef x = 0\nx : \u03b1\nhx : x \u2208 Set.Icc a b\n\u22a2 (x \u2208 Set.Icc a b \u2192 ENNReal.ofReal (1 / (CastRealField.cast b - CastRealField.cast a)) = 0) \u2227 (x \u2209 Set.Icc a b \u2192 0 = 0)",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/ForMathlib/MetropolisHastings.lean#L300"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "eaf9e0e541f2910f70a104ae7b70b0f1a1841d784d06fa4959a5be72db5f98d3"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/ForMathlib/MetropolisHastings.lean",
        "start_line": 302,
        "start_column": 4,
        "end_line": 302,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d\u00b9\u2070 : MeasurableSpace \u03b1\ninst\u271d\u2079 : LinearOrderedField \u03b1\ninst\u271d\u2078 : Zero \u03b1\ninst\u271d\u2077 : CastRealField \u03b1\na b : \u03b1\nvol : Measure \u03b1\nh : Fact (a < b)\ninst\u271d\u2076 : TopologicalSpace \u03b1\ninst\u271d\u2075 : OrderClosedTopology \u03b1\ninst\u271d\u2074 : OpensMeasurableSpace \u03b1\ninst\u271d\u00b3 : MeasureSpace \u03b1\ninst\u271d\u00b2 : BorelSpace \u03b1\ninst\u271d\u00b9 : IsFiniteMeasure vol\ninst\u271d : RestrictedScalable vol (Set.Icc a b)\nhm : Measurable (uniformContinuousPdf \u22ef)\ndelta : \u211d := CastRealField.cast b - CastRealField.cast a\nthis\u271d :\n  \u222b\u207b (x : \u03b1), ENNReal.ofReal delta\u207b\u00b9 \u2202vol =\n    \u222b\u207b (x : \u03b1) in Set.Icc a b, ENNReal.ofReal delta\u207b\u00b9 \u2202vol + \u222b\u207b (x : \u03b1) in (Set.Icc a b)\u1d9c, ENNReal.ofReal delta\u207b\u00b9 \u2202vol\nthis : ENNReal.ofReal (CastRealField.cast b - CastRealField.cast a)\u207b\u00b9 * vol (Set.Icc a b) = 1\nhIcc : \u222b\u207b (x : \u03b1) in Set.Icc a b, ENNReal.ofReal delta\u207b\u00b9 \u2202vol = 1\nh_meas_compl : MeasurableSet (Set.Icc a b)\u1d9c\nh_indicator : \u2200 x \u2208 (Set.Icc a b)\u1d9c, uniformContinuousPdf \u22ef x = 0\nh_indic_ae : \u2200\u1d50 (x : \u03b1) \u2202vol.restrict (Set.Icc a b)\u1d9c, uniformContinuousPdf \u22ef x = 0\n\u22a2 \u222b\u207b (x : \u03b1) in (Set.Icc a b)\u1d9c, ENNReal.ofReal delta\u207b\u00b9 \u2202vol = 0",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/ForMathlib/MetropolisHastings.lean#L302"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "668e1a789b186cb25247ea7c3e85121f0ed8385b78ab8f0d7e7b1e37feca6184"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/ForMathlib/MetropolisHastings.lean",
        "start_line": 499,
        "start_column": 8,
        "end_line": 499,
        "end_column": 13
      },
      "debug_info": {
        "goal": "\u03bc \u03c3 : \u211d\ninst\u271d : Fact (0 < \u03c3)\nC : \u211d := (\u03c3 * \u221a(2 * \u03c0))\u207b\u00b9\nhC_pos : 0 < C\ni : \u222b\u207b (x : \u211d), normalPdf \u03bc \u03c3 x = \u222b\u207b (x : \u211d), ENNReal.ofReal (C * rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2)))\nh_meas\u271d : Measurable fun x => rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2))\nh_subst : \u2200 (x : \u211d), rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2)) = rexp (-((x - \u03bc) / (\u03c3 * \u221a2)) ^ 2)\nf : \u211d \u2192 \u211d := fun u => u * \u03c3 * \u221a2\nh_deriv : \u2200 (u : \u211d), HasDerivAt f (\u03c3 * \u221a2) u\nh_meas : Measurable f\n\u22a2 \u222b\u207b (x : \u211d), ENNReal.ofReal (rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2))) =\n    ENNReal.ofReal \u03c3 * \u222b\u207b (u : \u211d), ENNReal.ofReal (rexp (-u ^ 2))",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/ForMathlib/MetropolisHastings.lean#L499"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-15T09:05:20+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "30ceef3a36b4ec883df2192150ee374c9ea10de79b481c8988810d655b1d04c3"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/ForMathlib/MetropolisHastings.lean",
        "start_line": 504,
        "start_column": 6,
        "end_line": 504,
        "end_column": 11
      },
      "debug_info": {
        "goal": "\u03bc \u03c3 : \u211d\ninst\u271d : Fact (0 < \u03c3)\nC : \u211d := (\u03c3 * \u221a(2 * \u03c0))\u207b\u00b9\nhC_pos : 0 < C\ni : \u222b\u207b (x : \u211d), normalPdf \u03bc \u03c3 x = \u222b\u207b (x : \u211d), ENNReal.ofReal (C * rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2)))\nh_change_var :\n  \u222b\u207b (x : \u211d), ENNReal.ofReal (rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2))) =\n    ENNReal.ofReal \u03c3 * \u222b\u207b (u : \u211d), ENNReal.ofReal (rexp (-u ^ 2))\n\u22a2 \u222b\u207b (u : \u211d), ENNReal.ofReal (rexp (-u ^ 2)) = ENNReal.ofReal \u221a\u03c0",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/ForMathlib/MetropolisHastings.lean#L504"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "24dfba347dd3efccc5338a6a0e1dc909ec51b4c31cb27b2794df9e964986ff39"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/ForMathlib/MetropolisHastings.lean",
        "start_line": 509,
        "start_column": 6,
        "end_line": 509,
        "end_column": 11
      },
      "debug_info": {
        "goal": "\u03bc \u03c3 : \u211d\ninst\u271d : Fact (0 < \u03c3)\nC : \u211d := (\u03c3 * \u221a(2 * \u03c0))\u207b\u00b9\nhC_pos : 0 < C\ni : \u222b\u207b (x : \u211d), normalPdf \u03bc \u03c3 x = \u222b\u207b (x : \u211d), ENNReal.ofReal (C * rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2)))\nh_change_var :\n  \u222b\u207b (x : \u211d), ENNReal.ofReal (rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2))) =\n    ENNReal.ofReal \u03c3 * \u222b\u207b (u : \u211d), ENNReal.ofReal (rexp (-u ^ 2))\nh_gaussian_integral : \u222b\u207b (u : \u211d), ENNReal.ofReal (rexp (-u ^ 2)) = ENNReal.ofReal \u221a\u03c0\n\u22a2 ENNReal.ofReal (\u221a\u03c0 * \u03c3) = ENNReal.ofReal (\u221a2 * (\u221a\u03c0 * \u03c3))",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/ForMathlib/MetropolisHastings.lean#L509"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "7ba9c76d8d17ae8e0b252e0743b9072b9f1b30ddc2e3ef52ee13c55a17c4f71d"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/ForMathlib/MetropolisHastings.lean",
        "start_line": 510,
        "start_column": 6,
        "end_line": 510,
        "end_column": 11
      },
      "debug_info": {
        "goal": "\u03bc \u03c3 : \u211d\ninst\u271d : Fact (0 < \u03c3)\nC : \u211d := (\u03c3 * \u221a(2 * \u03c0))\u207b\u00b9\nhC_pos : 0 < C\ni : \u222b\u207b (x : \u211d), normalPdf \u03bc \u03c3 x = \u222b\u207b (x : \u211d), ENNReal.ofReal (C * rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2)))\nh_change_var :\n  \u222b\u207b (x : \u211d), ENNReal.ofReal (rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2))) =\n    ENNReal.ofReal \u03c3 * \u222b\u207b (u : \u211d), ENNReal.ofReal (rexp (-u ^ 2))\nh_gaussian_integral : \u222b\u207b (u : \u211d), ENNReal.ofReal (rexp (-u ^ 2)) = ENNReal.ofReal \u221a\u03c0\n\u22a2 0 \u2264 \u03c3",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/ForMathlib/MetropolisHastings.lean#L510"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "8d7945e7587c91da43198917d27e21d447a4873d70c6536c6bb1b85f17ca9d3c"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/ForMathlib/MetropolisHastings.lean",
        "start_line": 527,
        "start_column": 4,
        "end_line": 527,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\u03bc \u03c3 : \u211d\ninst\u271d : Fact (0 < \u03c3)\nC : \u211d := (\u03c3 * \u221a(2 * \u03c0))\u207b\u00b9\nhC_pos : 0 < C\ni : \u222b\u207b (x : \u211d), normalPdf \u03bc \u03c3 x = \u222b\u207b (x : \u211d), ENNReal.ofReal (C * rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2)))\nh_int : \u222b\u207b (x : \u211d), ENNReal.ofReal (rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2))) = ENNReal.ofReal (\u221a(2 * \u03c0) * \u03c3)\nh_nonneg : 0 \u2264 C\nh_exp_pos : \u2200 (x : \u211d), 0 \u2264 rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2))\n\u22a2 (fun x => ENNReal.ofReal (C * rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2)))) =\u1da0[ae \u2119] fun a =>\n    ENNReal.ofReal C * ENNReal.ofReal (rexp (-(a - \u03bc) ^ 2 / (2 * \u03c3 ^ 2)))",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/ForMathlib/MetropolisHastings.lean#L527"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "a02a821fa7dc6a542171286b6bf984bf2fb93a758dc9257e79b571a904714be3"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/ForMathlib/MetropolisHastings.lean",
        "start_line": 567,
        "start_column": 4,
        "end_line": 567,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\u03bc \u03c3 : \u211d\ninst\u271d : Fact (0 < \u03c3)\nC : \u211d := (\u03c3 * \u221a(2 * \u03c0))\u207b\u00b9\nhC_pos : 0 < C\ni : \u222b\u207b (x : \u211d), normalPdf \u03bc \u03c3 x = \u222b\u207b (x : \u211d), ENNReal.ofReal (C * rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2)))\nh_int : \u222b\u207b (x : \u211d), ENNReal.ofReal (rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2))) = ENNReal.ofReal (\u221a(2 * \u03c0) * \u03c3)\nh_eq :\n  \u222b\u207b (x : \u211d), ENNReal.ofReal (C * rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2))) =\n    ENNReal.ofReal C * \u222b\u207b (x : \u211d), ENNReal.ofReal (rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2)))\n\u22a2 \u222b\u207b (x : \u211d), ENNReal.ofReal (rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2))) = ENNReal.ofReal (\u221a(2 * \u03c0) * \u03c3)",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/ForMathlib/MetropolisHastings.lean#L567"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "e24ab1201d71763090ef00978657b45aca5bf83ad968ae9a68ed63814f18df0b"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/ForMathlib/MetropolisHastings.lean",
        "start_line": 583,
        "start_column": 4,
        "end_line": 583,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\u03bc \u03c3 : \u211d\ninst\u271d : Fact (0 < \u03c3)\nC : \u211d := (\u03c3 * \u221a(2 * \u03c0))\u207b\u00b9\nhC_pos : 0 < C\ni : \u222b\u207b (x : \u211d), normalPdf \u03bc \u03c3 x = \u222b\u207b (x : \u211d), ENNReal.ofReal (C * rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2)))\nh_int\u271d : \u222b\u207b (x : \u211d), ENNReal.ofReal (rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2))) = ENNReal.ofReal (\u221a(2 * \u03c0) * \u03c3)\nh_eq\u271d :\n  \u222b\u207b (x : \u211d), ENNReal.ofReal (C * rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2))) =\n    ENNReal.ofReal C * \u222b\u207b (x : \u211d), ENNReal.ofReal (rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2)))\nh_int : \u222b\u207b (x : \u211d), ENNReal.ofReal (rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2))) = ENNReal.ofReal (\u221a(2 * \u03c0) * \u03c3)\nh_eq :\n  \u222b\u207b (x : \u211d), ENNReal.ofReal (C * rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2))) =\n    ENNReal.ofReal C * \u222b\u207b (x : \u211d), ENNReal.ofReal (rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2)))\nh1 : 0 < \u03c3\nh2 : 0 < \u221a(2 * \u03c0)\nh3 : 0 < \u03c3 * \u221a(2 * \u03c0)\n\u22a2 \u221a2 * \u221a\u03c0 / \u03c3 * (\u03c3 / (\u221a2 * \u221a\u03c0)) = 1",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/ForMathlib/MetropolisHastings.lean#L583"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "d4ff982a832b5000683fcb7eeb2418a4407da902728779d395bcae98c0e75d10"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/ForMathlib/MetropolisHastings.lean",
        "start_line": 593,
        "start_column": 2,
        "end_line": 593,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case measure_univ\n\u03bc \u03c3 : \u211d\ninst\u271d : Fact (0 < \u03c3)\nC : \u211d := (\u03c3 * \u221a(2 * \u03c0))\u207b\u00b9\nhC_pos : 0 < C\ni : \u222b\u207b (x : \u211d), normalPdf \u03bc \u03c3 x = \u222b\u207b (x : \u211d), ENNReal.ofReal (C * rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2)))\nh_int\u271d : \u222b\u207b (x : \u211d), ENNReal.ofReal (rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2))) = ENNReal.ofReal (\u221a(2 * \u03c0) * \u03c3)\nh_eq\u271d :\n  \u222b\u207b (x : \u211d), ENNReal.ofReal (C * rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2))) =\n    ENNReal.ofReal C * \u222b\u207b (x : \u211d), ENNReal.ofReal (rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2)))\nh_int : \u222b\u207b (x : \u211d), ENNReal.ofReal (rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2))) = ENNReal.ofReal (\u221a(2 * \u03c0) * \u03c3)\nh_eq :\n  \u222b\u207b (x : \u211d), ENNReal.ofReal (C * rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2))) =\n    ENNReal.ofReal C * \u222b\u207b (x : \u211d), ENNReal.ofReal (rexp (-(x - \u03bc) ^ 2 / (2 * \u03c3 ^ 2)))\nthis\u271d : C * (\u221a(2 * \u03c0) * \u03c3) = 1\nthis : ENNReal.ofReal (\u221a(2 * \u03c0) * \u03c3) * ENNReal.ofReal C = 1\n\u22a2 (ofMeasurable (fun s x => \u222b\u207b (a : \u211d) in s, normalPdf \u03bc \u03c3 a) \u22ef \u22ef) Set.univ =\n    ENNReal.ofReal (\u221a2 * \u221a\u03c0 * \u03c3) * ENNReal.ofReal C",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/ForMathlib/MetropolisHastings.lean#L593"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "74a8c5ac601aa2bc637c60fda25c8607acf42b59455fb5919f06fec6cac01bbc"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/ForMathlib/MetropolisHastings.lean",
        "start_line": 607,
        "start_column": 70,
        "end_line": 607,
        "end_column": 75
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03a9 : Type u_3\ninst\u271d\u00b9 : TopologicalSpace \u03b1\ninst\u271d : MeasurableSpace \u03a9\nX : \u03a9 \u2192 \u211d\nP : Measure \u03a9\n\u03bc \u03c3 : \u211d\nhX : AEMeasurable X P\nh\u03c3 : Fact (0 < \u03c3)\nvolume : Measure \u211d := StieltjesFunction.id.measure\nhmeas : Measurable (normalPdf \u03bc \u03c3)\nh_pdf : pdf X P \u2119 =\u1da0[ae volume] normalPdf \u03bc \u03c3\nh_wd : volume.withDensity (pdf X P \u2119) = volume.withDensity (normalPdf \u03bc \u03c3)\n\u22a2 Measure.map X P = volume.withDensity (pdf X P \u2119)",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/ForMathlib/MetropolisHastings.lean#L607"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "e1fc8b7fac7ff1073ae43b6e37ce7ca1e2ed47d3318cdede16460f5ad45d40a4"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/ForMathlib/MetropolisHastings.lean",
        "start_line": 617,
        "start_column": 37,
        "end_line": 617,
        "end_column": 42
      },
      "debug_info": {
        "goal": "case right.right\n\u03b1 : Type u_1\n\u03a9 : Type u_3\ninst\u271d\u00b9 : TopologicalSpace \u03b1\ninst\u271d : MeasurableSpace \u03a9\nX : \u03a9 \u2192 \u211d\nP : Measure \u03a9\n\u03bc \u03c3 : \u211d\nhX : AEMeasurable X P\nh\u03c3 : Fact (0 < \u03c3)\nvolume : Measure \u211d := StieltjesFunction.id.measure\nhmeas : Measurable (normalPdf \u03bc \u03c3)\nh_pdf : pdf X P \u2119 =\u1da0[ae volume] normalPdf \u03bc \u03c3\nh_measure_eq : Measure.map X P = volume.withDensity (normalPdf \u03bc \u03c3)\n\u22a2 volume.withDensity (normalPdf \u03bc \u03c3) = \u2119.withDensity (normalPdf \u03bc \u03c3)",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/ForMathlib/MetropolisHastings.lean#L617"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "515b2a8b34a62aaf1fbdae1c3b96c8b96e1db8f13cbc50a5dbf36e394f2f2d13"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/ForMathlib/MetropolisHastings.lean",
        "start_line": 620,
        "start_column": 12,
        "end_line": 620,
        "end_column": 17
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03a9 : Type u_3\ninst\u271d\u00b9 : TopologicalSpace \u03b1\ninst\u271d : MeasurableSpace \u03a9\nX : \u03a9 \u2192 \u211d\nP : Measure \u03a9\n\u03bc \u03c3 : \u211d\nhX : AEMeasurable X P\nh\u03c3 : Fact (0 < \u03c3)\nvolume : Measure \u211d := StieltjesFunction.id.measure\nhmeas : Measurable (normalPdf \u03bc \u03c3)\nh_pdf : pdf X P \u2119 =\u1da0[ae volume] normalPdf \u03bc \u03c3\nh_measure_eq : Measure.map X P = volume.withDensity (normalPdf \u03bc \u03c3)\n\u22a2 volume.withDensity (normalPdf \u03bc \u03c3) \u226a \u2119",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/ForMathlib/MetropolisHastings.lean#L620"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "178bfaaa7a2a650fff041ba317623fe68eb68d25b96e69a5bcf0bd543c3dd624"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/ForMathlib/MetropolisHastings.lean",
        "start_line": 604,
        "start_column": 51,
        "end_line": 604,
        "end_column": 56
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03a9 : Type u_3\ninst\u271d\u00b9 : TopologicalSpace \u03b1\ninst\u271d : MeasurableSpace \u03a9\nX : \u03a9 \u2192 \u211d\nP : Measure \u03a9\n\u03bc \u03c3 : \u211d\nhX : AEMeasurable X P\nh\u03c3 : Fact (0 < \u03c3)\nvolume : Measure \u211d := StieltjesFunction.id.measure\nhmeas : Measurable (normalPdf \u03bc \u03c3)\n\u22a2 pdf X P \u2119 =\u1da0[ae volume] normalPdf \u03bc \u03c3",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/ForMathlib/MetropolisHastings.lean#L604"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "546ec1c91d01bc2910360d2e12cfbf29299d3cd01385ec0cbbaefc13ce2c9d1b"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/ForMathlib/MetropolisHastings.lean",
        "start_line": 649,
        "start_column": 4,
        "end_line": 649,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d\u2074 : MeasurableSpace \u03b1\ninst\u271d\u00b3 : MeasureSpace \u03b1\n\u03b3 : Type u_3\ninst\u271d\u00b2 : MeasurableSpace \u03b3\n\u03ba : Kernel \u03b1 \u03b1\n\u03b7 : Kernel (\u03b1 \u00d7 \u03b1) \u03b3\ninst\u271d\u00b9 : IsSFiniteKernel \u03ba\ninst\u271d : IsSFiniteKernel \u03b7\n\u03bc : Measure \u03b1\nh : \u21d1(\u03ba \u2297\u2096 \u03b7) \u2218\u2098 \u03bc = \u21d1(Kernel.id \u2297\u2096 \u03b7) \u2218\u2098 \u03bc\ns : Set \u03b1\nhs : MeasurableSet s\n\u22a2 \u222b\u207b (a : \u03b1), (\u03ba a) s \u2202\u03bc = \u03bc s",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/ForMathlib/MetropolisHastings.lean#L649"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "6081e8af6ff7f1eedecb428d1bb66b71b1c83ab54dc0288ecd79886e6c33e187"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/ForMathlib/MetropolisHastings.lean",
        "start_line": 686,
        "start_column": 17,
        "end_line": 686,
        "end_column": 22
      },
      "debug_info": {
        "goal": "\u03b1\u271d : Type u_1\ninst\u271d\u2074 : MeasurableSpace \u03b1\u271d\n\u03b1 : Type u_2\n\u03b2 : Type u_3\ninst\u271d\u00b3 : MeasurableSpace \u03b1\ninst\u271d\u00b2 : MeasurableSpace \u03b2\ninst\u271d\u00b9 : MeasureSpace \u03b1\ninst\u271d : MeasureSpace \u03b2\n\u03bd : Measure \u03b2\n\u22a2 Measurable fun a => (dirac a).prod \u03bd",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/ForMathlib/MetropolisHastings.lean#L686"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "15bd45e590f5aa64474578276cdbad2306c686b0a67f0101e7ae0ad5c5ecd5e2"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/ForMathlib/MetropolisHastings.lean",
        "start_line": 711,
        "start_column": 6,
        "end_line": 711,
        "end_column": 11
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d\u00b9 : MeasurableSpace \u03b1\npdf : \u03b1 \u2192 \u211d\u22650\u221e\ninst\u271d : MeasurableSingletonClass \u03b1\nq : Kernel \u03b1 \u03b1\nx : \u03b1\nhpdf : Measurable pdf\nhq : Measurable \u21d1q\nh_denom : Measurable fun x_1 => pdf x * (q x) (Set.singleton x)\nh_pdf_y : Measurable fun y => pdf y\n\u22a2 Measurable fun y => (q y) (Set.singleton y)",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/ForMathlib/MetropolisHastings.lean#L711"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "91a02e7165fbecf4d3d172c40ad9f1581f6143b8d5407f34ac89a200d5a1b71e"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/ForMathlib/MetropolisHastings.lean",
        "start_line": 755,
        "start_column": 8,
        "end_line": 755,
        "end_column": 13
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d\u2074 : MeasurableSpace \u03b1\npi : Measure \u03b1\nh\u03c0 : HasPDF id pi pi\ninst\u271d\u00b3 : StandardBorelSpace \u03b1\ninst\u271d\u00b2 : Nonempty \u03b1\ninst\u271d\u00b9 : MeasurableSingletonClass \u03b1\nq : Kernel \u03b1 \u03b1\ninst\u271d : IsSFiniteKernel q\ns : Set \u03b1\nhs : MeasurableSet s\nh_pdf_meas : Measurable (pdf id pi pi)\nh_q_meas : Measurable fun x => (q x) s\n\u22a2 Measurable fun x y => 1 \u2293 metropolisHastingsAcceptance (pdf id pi pi) q x y",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/ForMathlib/MetropolisHastings.lean#L755"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "5f75983f997565e5c49e513ba378bc43e51e03d1b4cf3763e5e1699069615ed1"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/ForMathlib/MetropolisHastings.lean",
        "start_line": 758,
        "start_column": 6,
        "end_line": 758,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h\n\u03b1 : Type u_1\ninst\u271d\u2074 : MeasurableSpace \u03b1\npi : Measure \u03b1\nh\u03c0 : HasPDF id pi pi\ninst\u271d\u00b3 : StandardBorelSpace \u03b1\ninst\u271d\u00b2 : Nonempty \u03b1\ninst\u271d\u00b9 : MeasurableSingletonClass \u03b1\nq : Kernel \u03b1 \u03b1\ninst\u271d : IsSFiniteKernel q\ns : Set \u03b1\nhs : MeasurableSet s\nh_pdf_meas : Measurable (pdf id pi pi)\nh_q_meas : Measurable fun x => (q x) s\nh_accept_meas : Measurable fun x y => 1 \u2293 metropolisHastingsAcceptance (pdf id pi pi) q x y\n\u22a2 Measurable fun b =>\n    (let pdf := pdf id pi pi;\n      let acceptRate := fun y => 1 \u2293 metropolisHastingsAcceptance pdf q b y;\n      (q b).withDensity acceptRate)\n      s",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/ForMathlib/MetropolisHastings.lean#L758"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "fcb27e3307b107405fa479600ffb1ae78c8757404fd7c0a05d83062b3697d138"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/ForMathlib/MetropolisHastings.lean",
        "start_line": 807,
        "start_column": 4,
        "end_line": 807,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\u03b1\u271d : Type u_1\ninst\u271d\u2074 : MeasurableSpace \u03b1\u271d\n\u03b1 : Type u_2\ninst\u271d\u00b3 : MeasurableSpace \u03b1\ninst\u271d\u00b2 : Nonempty \u03b1\ninst\u271d\u00b9 : MeasurableSingletonClass \u03b1\npi : Measure \u03b1\ninst\u271d : HasPDF id pi pi\nq : Kernel \u03b1 \u03b1\n\u22a2 Measurable fun x =>\n    let f := fun y => metropolisHastingsAcceptance (pdf id pi pi) q x y;\n    (q x).withDensity f",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/ForMathlib/MetropolisHastings.lean#L807"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-15T09:05:20+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "3f22a1f4e02961ef540cedf1bec5103d3b3b7c63dd3c39f6afd38fedde593b9b"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/ForMathlib/MetropolisHastings.lean",
        "start_line": 818,
        "start_column": 4,
        "end_line": 818,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u2078 : MeasurableSpace \u03b1\ninst\u271d\u2077 : Nonempty \u03b1\ninst\u271d\u2076 : MeasurableSingletonClass \u03b1\ninst\u271d\u2075 : StandardBorelSpace \u03b1\ninst\u271d\u2074 : MeasurableSingletonClass \u03b1\ninst\u271d\u00b3 : Nonempty \u03b1\npi : Measure \u03b1\ninst\u271d\u00b2 : HasPDF id pi pi\nq : Kernel \u03b1 \u03b1\ninst\u271d\u00b9 : IsSFiniteKernel q\nx : \u03b1\ns : Set \u03b1\ninst\u271d : DecidablePred fun x => x \u2208 s\nhs : MeasurableSet s\n\u22a2 ((metropolisHastingsKernel pi q) x) s = \u222b\u207b (y : \u03b1) in s, metropolisHastingsAcceptance (pdf id pi pi) q x y \u2202q x",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/ForMathlib/MetropolisHastings.lean#L818"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "559ea7e0eaf646d8bfa9f76a141019a116467b1e2363e0043a7816d0b0e3eaad"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/Hopfield/Hebbian/Lemmas.lean",
        "start_line": 259,
        "start_column": 68,
        "end_line": 259,
        "end_column": 73
      },
      "debug_info": {
        "goal": "n : \u2115\np : HopfieldState n\ni : Fin n\nh_square_one : \u2200 (j : Fin n), (p j).toReal * (p j).toReal = 1\nh1 : (List.filter (fun b => decide (i = b)) (List.finRange n)).toFinset = {i}\nh2 : \u2211 x \u2208 (List.filter (fun b => decide (i = b)) (List.finRange n)).toFinset, 0 = 0\nh_len\u271d : (List.finRange n).length = n\ni_nat : \u2115 := \u2191i\nh_i_bound : i_nat < n\nh_elem : \u2200 j \u2208 List.filter (fun b => decide (i = b)) (List.finRange n), j = i\nh_pos_length : 0 < (List.filter (fun b => decide (i = b)) (List.finRange n)).length\nh_i_in\u271d : i \u2208 List.filter (fun b => decide (i = b)) (List.finRange n)\nh_i_in_range : i \u2208 List.finRange n\nh_filter_i : i \u2208 List.filter (fun b => decide (i = b)) (List.finRange n)\nj : \u2115\na\u271d : Fin n\nh\u2081\u271d : 0 < [i].length\nh\u2081 : 0 < 1\nh\u2082 : 0 < (List.filter (fun b => decide (i = b)) (List.finRange n)).length\nh_get_sing : [i].get \u27e80, h\u2081\u271d\u27e9 = i\nh_get : [i][j]? = some a\u271d\nh_i_in : i \u2208 List.filter (fun b => decide (i = b)) (List.finRange n)\nh_nonempty : (List.filter (fun b => decide (i = b)) (List.finRange n)).length > 0\nh_mem : i \u2208 List.filter (fun b => decide (i = b)) (List.finRange n)\nh_pos : 0 < (List.filter (fun b => decide (i = b)) (List.finRange n)).length\nh_len_one\u271d this h_len_one h_len : [i].length = 1\n\u22a2 j < 1",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/Hopfield/Hebbian/Lemmas.lean#L259"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "c8e4126596d77566742b972f4705b629fc7e8df007f479467cb45625de94b6ca"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/Hopfield/Hebbian/Lemmas.lean",
        "start_line": 281,
        "start_column": 70,
        "end_line": 281,
        "end_column": 75
      },
      "debug_info": {
        "goal": "n : \u2115\np : HopfieldState n\ni : Fin n\nh_square_one : \u2200 (j : Fin n), (p j).toReal * (p j).toReal = 1\nh1 : (List.filter (fun b => decide (i = b)) (List.finRange n)).toFinset = {i}\nh2 : \u2211 x \u2208 (List.filter (fun b => decide (i = b)) (List.finRange n)).toFinset, 0 = 0\nh_len\u271d : (List.finRange n).length = n\ni_nat : \u2115 := \u2191i\nh_i_bound : i_nat < n\nh_elem : \u2200 j \u2208 List.filter (fun b => decide (i = b)) (List.finRange n), j = i\nh_pos_length : 0 < (List.filter (fun b => decide (i = b)) (List.finRange n)).length\nh_i_in\u271d : i \u2208 List.filter (fun b => decide (i = b)) (List.finRange n)\nh_i_in_range : i \u2208 List.finRange n\nh_filter_i : i \u2208 List.filter (fun b => decide (i = b)) (List.finRange n)\nj : \u2115\na\u271d : Fin n\nh\u2081 : 0 < [i].length\nh\u2082 : 0 < (List.filter (fun b => decide (i = b)) (List.finRange n)).length\nh_get_sing : [i].get \u27e80, h\u2081\u27e9 = i\nh_get : [i][j]? = some a\u271d\nh_i_in : i \u2208 List.filter (fun b => decide (i = b)) (List.finRange n)\nh_nonempty : (List.filter (fun b => decide (i = b)) (List.finRange n)).length > 0\nh_mem\u271d : i \u2208 List.filter (fun b => decide (i = b)) (List.finRange n)\nh_pos : 0 < (List.filter (fun b => decide (i = b)) (List.finRange n)).length\nh_len_one\u271d this h_len_one : [i].length = 1\nh_mem : [i][j]?.isSome = true\nh_len : [i].length = 1\n\u22a2 j = 0",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/Hopfield/Hebbian/Lemmas.lean#L281"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "7d2c61011c4d135d4cc3f94af18a274a570b4740ad4c7811aeb4d8da8e4aec3e"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/Hopfield/Hebbian/Lemmas.lean",
        "start_line": 493,
        "start_column": 52,
        "end_line": 493,
        "end_column": 57
      },
      "debug_info": {
        "goal": "case h\nn : \u2115\np : HopfieldState n\ni : Fin n\nh_square_one : \u2200 (j : Fin n), (p j).toReal * (p j).toReal = 1\nh1 : (List.filter (fun b => decide (i = b)) (List.finRange n)).toFinset = {i}\nh2 : \u2211 x \u2208 (List.filter (fun b => decide (i = b)) (List.finRange n)).toFinset, 0 = 0\nh_len : (List.finRange n).length = n\ni_nat : \u2115 := \u2191i\nh_i_bound : i_nat < n\nh_elem : \u2200 j \u2208 List.filter (fun b => decide (i = b)) (List.finRange n), j = i\nh_pos_length : 0 < (List.filter (fun b => decide (i = b)) (List.finRange n)).length\nh_i_in\u271d : i \u2208 List.filter (fun b => decide (i = b)) (List.finRange n)\nh_i_in_range : i \u2208 List.finRange n\nh_filter_i : i \u2208 List.filter (fun b => decide (i = b)) (List.finRange n)\nj\u271d : \u2115\na\u271d : Fin n\nh\u2081\u271d : 0 < [i].length\nh\u2082\u271d : 0 < (List.filter (fun b => decide (i = b)) (List.finRange n)).length\nh_get_sing : [i].get \u27e80, h\u2081\u271d\u27e9 = i\nh_get : [i][j\u271d]? = some a\u271d\nh_i_in : i \u2208 List.filter (fun b => decide (i = b)) (List.finRange n)\nh_head : (List.filter (fun b => decide (i = b)) (List.finRange n)).head? = some i\nh_sum_zero : \u2211 x \u2208 (List.filter (fun b => decide (i = b)) (List.finRange n)).toFinset, 0 = 0\nh_all_eq\u271d h_all_eq : \u2200 j \u2208 List.filter (fun b => decide (i = b)) (List.finRange n), j = i\nj : \u2115\nh\u2081 : j < (List.filter (fun b => decide (i = b)) (List.finRange n)).length\nh\u2082 : j < [i].length\nh_mem : [i][j] = i\n\u22a2 List.filter (fun b => decide (i = b)) (List.finRange n) = [i]",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/Hopfield/Hebbian/Lemmas.lean#L493"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "d92926cc8186358d7be82a3ae3097a4afc3ecd67bd9ee095a251b75cf39f945d"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/Hopfield/Hebbian/Lemmas.lean",
        "start_line": 653,
        "start_column": 34,
        "end_line": 653,
        "end_column": 39
      },
      "debug_info": {
        "goal": "n : \u2115\np : HopfieldState n\ni : Fin n\nh_square_one : \u2200 (j : Fin n), (p j).toReal * (p j).toReal = 1\nh1 : (List.filter (fun b => decide (i = b)) (List.finRange n)).toFinset = {i}\nh2 : \u2211 x \u2208 (List.filter (fun b => decide (i = b)) (List.finRange n)).toFinset, 0 = 0\nh_len : (List.finRange n).length = n\ni_nat : \u2115 := \u2191i\nh_i_bound : i_nat < n\nh_elem : \u2200 j \u2208 List.filter (fun b => decide (i = b)) (List.finRange n), j = i\nh_pos_length : 0 < (List.filter (fun b => decide (i = b)) (List.finRange n)).length\nh_i_in : i \u2208 List.filter (fun b => decide (i = b)) (List.finRange n)\nh_i_in_range : i \u2208 List.finRange n\nh_filter_i : i \u2208 List.filter (fun b => decide (i = b)) (List.finRange n)\nj : \u2115\na\u271d : Fin n\nh\u2081 : 0 < [i].length\nh\u2082 : 0 < (List.filter (fun b => decide (i = b)) (List.finRange n)).length\nh_get_sing : [i].get \u27e80, h\u2081\u27e9 = i\nh_get : [i][j]? = some a\u271d\nh_filter_get : (List.filter (fun b => decide (i = b)) (List.finRange n))[0]? = some i\nh_some : [i][j]?.isSome = true\n\u22a2 j < 1",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/Hopfield/Hebbian/Lemmas.lean#L653"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "cf1c230322f4097a224dae3334c1946ee10e6641fc4a017fd66c1a552705d132"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/Hopfield/Hebbian/Lemmas.lean",
        "start_line": 681,
        "start_column": 38,
        "end_line": 681,
        "end_column": 43
      },
      "debug_info": {
        "goal": "n : \u2115\np : HopfieldState n\ni : Fin n\nh_square_one : \u2200 (j : Fin n), (p j).toReal * (p j).toReal = 1\nh1 : (List.filter (fun b => decide (i = b)) (List.finRange n)).toFinset = {i}\nh2 : \u2211 x \u2208 (List.filter (fun b => decide (i = b)) (List.finRange n)).toFinset, 0 = 0\nh_len : (List.finRange n).length = n\ni_nat : \u2115 := \u2191i\nh_i_bound : i_nat < n\nh_elem : \u2200 j \u2208 List.filter (fun b => decide (i = b)) (List.finRange n), j = i\nh_pos_length : 0 < (List.filter (fun b => decide (i = b)) (List.finRange n)).length\nh_i_in : i \u2208 List.filter (fun b => decide (i = b)) (List.finRange n)\nh_i_in_range : i \u2208 List.finRange n\nh_filter_i : i \u2208 List.filter (fun b => decide (i = b)) (List.finRange n)\nj : \u2115\na\u271d : Fin n\nh\u2081 : 0 < [i].length\nh\u2082 : 0 < (List.filter (fun b => decide (i = b)) (List.finRange n)).length\nh_get_sing : [i].get \u27e80, h\u2081\u27e9 = i\nh_get : [i][j]? = some a\u271d\nh_filter_get : (List.filter (fun b => decide (i = b)) (List.finRange n))[0]? = some i\nh_j_lt_n : j < n\nj_fin : Fin n := \u27e8j, h_j_lt_n\u27e9\nthis : [i].length = 1\n\u22a2 j < [i].length",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/Hopfield/Hebbian/Lemmas.lean#L681"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "d22a8aa99b8e8abc4135afdd38dd573010c983f357680411012371dd9c1f1b46"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/Hopfield/Hebbian/Lemmas.lean",
        "start_line": 722,
        "start_column": 44,
        "end_line": 722,
        "end_column": 49
      },
      "debug_info": {
        "goal": "n : \u2115\np : HopfieldState n\ni : Fin n\nh_square_one : \u2200 (j : Fin n), (p j).toReal * (p j).toReal = 1\nh1 : (List.filter (fun b => decide (i = b)) (List.finRange n)).toFinset = {i}\nh2 : \u2211 x \u2208 (List.filter (fun b => decide (i = b)) (List.finRange n)).toFinset, 0 = 0\nh_len : (List.finRange n).length = n\ni_nat : \u2115 := \u2191i\nh_i_bound : i_nat < n\nh_elem : \u2200 j \u2208 List.filter (fun b => decide (i = b)) (List.finRange n), j = i\nh_pos_length : 0 < (List.filter (fun b => decide (i = b)) (List.finRange n)).length\nh_i_in : i \u2208 List.filter (fun b => decide (i = b)) (List.finRange n)\nh_i_in_range : i \u2208 List.finRange n\nh_filter_i : i \u2208 List.filter (fun b => decide (i = b)) (List.finRange n)\na\u271d : Fin n\nh\u2081 : 0 < [i].length\nh\u2082 : 0 < (List.filter (fun b => decide (i = b)) (List.finRange n)).length\nh_get_sing : [i].get \u27e80, h\u2081\u27e9 = i\nh_filter_get : (List.filter (fun b => decide (i = b)) (List.finRange n))[0]? = some i\nh_get : [i][0]? = some a\u271d\nh_j_lt_n : 0 < n\nj_fin : Fin n := \u27e80, h_j_lt_n\u27e9\nh_j_fin_val : \u2191j_fin = 0\nh_val_eq_i : [i][0]? = some i\nthis : [i][0] = i\nh_sing_val : \u2191([i].get \u27e80, h\u2081\u27e9) = \u2191i\nh : [i].get \u27e80, h\u2081\u27e9 = i\n\u22a2 \u2191i = 0",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/Hopfield/Hebbian/Lemmas.lean#L722"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "b0ed51337b60bd471731f09a540ef0d432bc9a3aba61a09b1e25e469743dae7d"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/Hopfield/Hebbian/Lemmas.lean",
        "start_line": 798,
        "start_column": 28,
        "end_line": 798,
        "end_column": 33
      },
      "debug_info": {
        "goal": "n : \u2115\np : HopfieldState n\ni : Fin n\nh_square_one : \u2200 (j : Fin n), (p j).toReal * (p j).toReal = 1\nh1 : (List.filter (fun b => decide (i = b)) (List.finRange n)).toFinset = {i}\nh2 : \u2211 x \u2208 (List.filter (fun b => decide (i = b)) (List.finRange n)).toFinset, 0 = 0\nh_len : (List.finRange n).length = n\ni_nat : \u2115 := \u2191i\nh_i_bound : i_nat < n\nn_1 : \u2115\nh\u2081 : n_1 < [i].length\nh\u2082 : n_1 < (List.filter (fun b => decide (i = b)) (List.finRange n)).length\nh_zero : n_1 = 0\nh_get_sing : [i].get \u27e8n_1, h\u2081\u27e9 = i\nh_elem : \u2200 j \u2208 List.filter (fun b => decide (i = b)) (List.finRange n), j = i\nh_pos_length : 0 < (List.filter (fun b => decide (i = b)) (List.finRange n)).length\nh_i_in : i \u2208 List.filter (fun b => decide (i = b)) (List.finRange n)\nh_i_in_range : i \u2208 List.finRange n\nh_filter_i : i \u2208 List.filter (fun b => decide (i = b)) (List.finRange n)\nj : \u2115\na\u271d : Fin n\nh_filter_get : (List.filter (fun b => decide (i = b)) (List.finRange n))[j]? = some a\u271d\nh_isSome : (List.filter (fun b => decide (i = b)) (List.finRange n))[j]?.isSome = true\n\u22a2 j < (List.filter (fun b => decide ([i].get \u27e8n_1, h\u2081\u27e9 = b)) (List.finRange n)).length",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/Hopfield/Hebbian/Lemmas.lean#L798"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "c2a82ec891b06c2532959a6682ad05480c4e5e73161f8e5bb9583d0b3d8115e8"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/Hopfield/Hebbian/Lemmas.lean",
        "start_line": 819,
        "start_column": 28,
        "end_line": 819,
        "end_column": 33
      },
      "debug_info": {
        "goal": "n : \u2115\np : HopfieldState n\nh_square_one : \u2200 (j : Fin n), (p j).toReal * (p j).toReal = 1\nj : \u2115\na\u271d : Fin n\ni_nat : \u2115 := \u2191a\u271d\nh_j_lt : j < (List.filter (fun b => decide (a\u271d = b)) (List.finRange n)).length\nh1 : Finset.filter (fun x => a\u271d = x) Finset.univ = {a\u271d}\n\u22a2 j = 0",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/Hopfield/Hebbian/Lemmas.lean#L819"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "c86b15b8eba22e3e7f42fbe24f4592100b28493ecae0172dc47eee7a7c3388c8"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/Hopfield/Hebbian/Lemmas.lean",
        "start_line": 846,
        "start_column": 16,
        "end_line": 846,
        "end_column": 21
      },
      "debug_info": {
        "goal": "case h\u2082\nn : \u2115\np : HopfieldState n\ni : Fin n\nh_square_one : \u2200 (j : Fin n), (p j).toReal * (p j).toReal = 1\ni_nat : \u2115 := \u2191i\nh_pos_length : 0 < (List.filter (fun b => decide (i = b)) (List.finRange n)).length\nh1 : Finset.filter (fun x => i = x) Finset.univ = {i}\nh_get : (List.filter (fun b => decide (i = b)) (List.finRange n))[0] = i\n\u22a2 i = (List.find? (fun b => decide (i = b)) (List.finRange n)).get \u22ef",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/Hopfield/Hebbian/Lemmas.lean#L846"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "390145255bffbd9615fffd54796f0a759cfe4b23cfe48d4700913a6211440048"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/Hopfield/Hebbian/Lemmas.lean",
        "start_line": 872,
        "start_column": 16,
        "end_line": 872,
        "end_column": 21
      },
      "debug_info": {
        "goal": "n : \u2115\np : HopfieldState n\ni : Fin n\nh_square_one : \u2200 (j : Fin n), (p j).toReal * (p j).toReal = 1\nh1 : (List.filter (fun b => decide (i = b)) (List.finRange n)).toFinset = {i}\nh2 : \u2211 x \u2208 (List.filter (fun b => decide (i = b)) (List.finRange n)).toFinset, 0 = 0\nh_len : (List.finRange n).length = n\ni_nat : \u2115 := \u2191i\nh_i_bound : i_nat < n\nn_1 : \u2115\nh\u2081 : n_1 < [i].length\nh\u2082 : n_1 < (List.filter (fun b => decide (i = b)) (List.finRange n)).length\nh_zero : n_1 = 0\nh_get_sing : [i].get \u27e8n_1, h\u2081\u27e9 = i\nh_elem : \u2200 j \u2208 List.filter (fun b => decide (i = b)) (List.finRange n), j = i\nh_pos_length : 0 < (List.filter (fun b => decide (i = b)) (List.finRange n)).length\nh_pos_zero :\n  (List.filter (fun b => decide (i = b)) (List.finRange n)).get \u27e8n_1, h\u2082\u27e9 =\n    (List.filter (fun b => decide (i = b)) (List.finRange n)).get \u27e80, h_pos_length\u27e9\nh_i_in : i \u2208 List.filter (fun b => decide (i = b)) (List.finRange n)\nh_get_eq_i : i = i\n\u22a2 (List.filter (fun b => decide (i = b)) (List.finRange n))[0] = i",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/Hopfield/Hebbian/Lemmas.lean#L872"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "30e994757851652bf139c1bb498cfec97cbee07401df195a68a2b06b973b1818"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/Hopfield/Hebbian/Lemmas.lean",
        "start_line": 903,
        "start_column": 8,
        "end_line": 903,
        "end_column": 13
      },
      "debug_info": {
        "goal": "n : \u2115\np\u271d : HopfieldState n\ni : Fin n\nh_square_one : \u2200 (j : Fin n), (p\u271d j).toReal * (p\u271d j).toReal = 1\n\u03b1 : Type\nl : List \u03b1\np : \u03b1 \u2192 Bool\nh1 : Finset.filter (fun x => i = x) Finset.univ = {i}\nh_count : (List.filter (fun a => decide (i = a)) (List.finRange n)).length = 1\nh_count_one : List.countP (fun a => decide (i = a)) (List.finRange n) = 1\n\u22a2 (List.filter (fun a => !p a) l, List.filter p l) \u2208 l.sublists'.revzip",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/Hopfield/Hebbian/Lemmas.lean#L903"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "b2f4a47580f4fa90b57cc38c2a74a11bf36d1fb48f598c1bb4b59c8d5ea5af09"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/Hopfield/Hebbian/Lemmas.lean",
        "start_line": 935,
        "start_column": 4,
        "end_line": 935,
        "end_column": 9
      },
      "debug_info": {
        "goal": "n : \u2115\np : HopfieldState n\ni : Fin n\nh_square_one : \u2200 (j : Fin n), (p j).toReal * (p j).toReal = 1\nh1 : (List.filter (fun b => decide (i = b)) (List.finRange n)).toFinset = {i}\nh2 : \u2211 x \u2208 (List.filter (fun b => decide (i = b)) (List.finRange n)).toFinset, 0 = 0\nh3 : (List.filter (fun a => decide \u00aci = a) (List.finRange n)).length = n - 1\n\u22a2 (List.map (fun j => (p i).toReal * (p j).toReal ^ 2) (List.filter (fun a => decide \u00aci = a) (List.finRange n))).sum =\n    (p i).toReal * (\u2191n - 1)",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/Hopfield/Hebbian/Lemmas.lean#L935"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "0b5f6e3f8ec5509bff1d3e6aa240ed67fdf80a51378e537f6dbd252a69faf70d"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "NeuralNetworks/Hopfield/Hebbian/Lemmas.lean",
        "start_line": 946,
        "start_column": 6,
        "end_line": 946,
        "end_column": 11
      },
      "debug_info": {
        "goal": "n : \u2115\np : HopfieldState n\ni : Fin n\nh_square_one : \u2200 (j : Fin n), (p j).toReal * (p j).toReal = 1\nh1 : (List.filter (fun b => decide (i = b)) (List.finRange n)).toFinset = {i}\nh2 : \u2211 x \u2208 (List.filter (fun b => decide (i = b)) (List.finRange n)).toFinset, 0 = 0\nh3 : (List.filter (fun a => decide \u00aci = a) (List.finRange n)).length = n - 1\nh4 :\n  (List.map (fun j => (p i).toReal * (p j).toReal ^ 2) (List.filter (fun a => decide \u00aci = a) (List.finRange n))).sum =\n    (p i).toReal * (\u2191n - 1)\nsum1 : \u2211 x \u2208 (List.filter (fun b => decide (i = b)) (List.finRange n)).toFinset, 0 = 0\nsum2 :\n  (List.map (fun j => (p i).toReal * (p j).toReal ^ 2) (List.filter (fun a => decide \u00aci = a) (List.finRange n))).sum =\n    (p i).toReal * (\u2191n - 1)\n\u22a2 \u2211 x \u2208 (List.filter (fun b => decide (i = b)) (List.finRange n)).toFinset, 0 +\n      (List.map (fun j => (p i).toReal * (p j).toReal ^ 2)\n          (List.filter (fun a => decide \u00aci = a) (List.finRange n))).sum =\n    (p i).toReal * \u2191n - (p i).toReal ^ 3",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/NeuralNetworks/Hopfield/Hebbian/Lemmas.lean#L946"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T19:35:04+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "cfe0a70482c6c213a9dc173b90757f4ccab85fcff650a9ddb3dea973e7ec363f"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "archive/deprecated/Basic.lean",
        "start_line": 185,
        "start_column": 6,
        "end_line": 185,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case mp.right.h\nn : \u2115\nM : Matrix (Fin n) (Fin n) \u211d\nh : IsZeroDiagonalSymmetric M\ni : Fin n\nthis : M.diag i = M i i\n\u22a2 Matrix.diagonal M i = 0 i",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/archive/deprecated/Basic.lean#L185"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T21:32:09+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "7f67f92288d7e8b0e28bbc0ad2ada6d67bbf7ff1704117fcc7ae3bce9784554d"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "archive/deprecated/Basic.lean",
        "start_line": 190,
        "start_column": 6,
        "end_line": 190,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case mpr.right\nn : \u2115\nM : Matrix (Fin n) (Fin n) \u211d\nh : M.IsSymm \u2227 Matrix.diagonal M = 0\ni : Fin n\n\u22a2 M i i = 0",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/archive/deprecated/Basic.lean#L190"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T21:32:09+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "0053e1554ebb7b15c137c01d76bd759b1da0c81adb52be6a9c18a167326e7bca"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "archive/deprecated/Basic.lean",
        "start_line": 197,
        "start_column": 2,
        "end_line": 197,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nM : Matrix (Fin n) (Fin n) \u211d\n\u22a2 IsZeroDiagonalHermitian M \u2194 M.IsHermitian \u2227 Matrix.diagonal M = 0",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/archive/deprecated/Basic.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T21:32:09+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "3529057eb87919dc68307fe42714464669150df3631566e4134eb542406e7892"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "archive/deprecated/Basic'.lean",
        "start_line": 299,
        "start_column": 2,
        "end_line": 299,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nnet : HopfieldNetwork n\nx : HopfieldState n\n\u22a2 isFixedPoint net x \u2194\n    \u2200 (i : Fin n),\n      (0 < localField net x i \u2194 x i = SpinState.up) \u2227\n        (localField net x i < 0 \u2194 x i = SpinState.down) \u2227 (localField net x i = 0 \u2194 x i = x i)",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/archive/deprecated/Basic'.lean#L299"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T21:32:09+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "c03ed6f85e2664e17ac0b2b7276f42f92a5364674073caa8aaef2a3c88cde258"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "archive/deprecated/Basic'.lean",
        "start_line": 359,
        "start_column": 2,
        "end_line": 359,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nnet : HopfieldNetwork n\nx : HopfieldState n\ni : Fin n\nh_neg : localField net x i * (x i).toReal < 0\n\u22a2 energy net (updateState net x i) < energy net x",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/archive/deprecated/Basic'.lean#L359"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T21:32:09+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "968a20741cf3d3cdac5a1c8d5ae25b20a3abc8b93c30a61d5598c89f1dde89b5"
    },
    {
      "repo": {
        "remote": "https://github.com/or4nge19/NeuralNetworks",
        "branch": "main",
        "commit": "2e8058e93a811e9aff605a0c660b53b45531ddd5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "archive/deprecated/Basic2.lean",
        "start_line": 436,
        "start_column": 6,
        "end_line": 436,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h\nn\u271d\u00b9 n\u271d : \u2115\nW\u271d : Matrix (Fin n\u271d) (Fin n\u271d) \u211d\nx\u271d y\u271d : Fin n\u271d \u2192 \u211d\nn : \u2115\nW : Matrix (Fin n) (Fin n) \u211d\nh_symm : W.IsHermitian\nh_diag : W.diag = 0\nx y : Fin n \u2192 \u211d\nbilin_def : ((toBilin' W) x) y = x \u2b1d\u1d65 W *\u1d65 y\nsymm_dot : y \u2b1d\u1d65 W *\u1d65 x = x \u2b1d\u1d65 W *\u1d65 y\nh1 : (x + y) \u2b1d\u1d65 W *\u1d65 (x + y) = (x + y) \u2b1d\u1d65 (W *\u1d65 x + W *\u1d65 y)\nh2 : (x + y) \u2b1d\u1d65 (W *\u1d65 x + W *\u1d65 y) = x \u2b1d\u1d65 W *\u1d65 x + y \u2b1d\u1d65 W *\u1d65 x + x \u2b1d\u1d65 W *\u1d65 y + y \u2b1d\u1d65 W *\u1d65 y\nh3 : y \u2b1d\u1d65 W *\u1d65 x = x \u2b1d\u1d65 W *\u1d65 y\nh_add : (x + y) \u2b1d\u1d65 W *\u1d65 (x + y) = x \u2b1d\u1d65 W *\u1d65 (x + y) + y \u2b1d\u1d65 W *\u1d65 (x + y)\nh_x_distrib : x \u2b1d\u1d65 W *\u1d65 (x + y) = x \u2b1d\u1d65 W *\u1d65 x + x \u2b1d\u1d65 W *\u1d65 y\nh_y_distrib : y \u2b1d\u1d65 W *\u1d65 (x + y) = y \u2b1d\u1d65 W *\u1d65 x + y \u2b1d\u1d65 W *\u1d65 y\nh4 : x \u2b1d\u1d65 W *\u1d65 y + x \u2b1d\u1d65 W *\u1d65 y = 2 * x \u2b1d\u1d65 W *\u1d65 y\n\u22a2 x \u1d65* W \u2b1d\u1d65 y = x \u1d65* W \u2b1d\u1d65 y * 2\u207b\u00b9",
        "url": "https://github.com/or4nge19/NeuralNetworks/blob/2e8058e93a811e9aff605a0c660b53b45531ddd5/archive/deprecated/Basic2.lean#L436"
      },
      "metadata": {
        "blame_email_hash": "5979b6178f61",
        "blame_date": "2025-03-14T21:32:09+01:00",
        "inclusion_date": "2025-06-01T05:04:32.987496+00:00"
      },
      "id": "37145c0f1d5042c5e3ea8ea48e4d1c8b7c08e74a7756c732f3cf8a68ec5e81ff"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 30,
        "start_column": 4,
        "end_line": 30,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommRing R\nn : \u2115\np : MlPoly R n\n\u22a2 (\u2211 i, C p[i] * \u220f j, if { toFin := i }.getLsb' j = true then X j else C 1 - X j) \u2208 restrictDegree (Fin n) R 1",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/Data/MlPoly/Equiv.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "67c1388527ec8afb6a4f8bfb844e7d9bb97aea27e2fe982c1e92c7151cb43f61"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 39,
        "start_column": 14,
        "end_line": 39,
        "end_column": 19
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommRing R\nn : \u2115\n\u22a2 Function.LeftInverse (@MlPoly.ofSpec R inst\u271d n) (@MlPoly.toSpec R inst\u271d n)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/Data/MlPoly/Equiv.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "96204443ecaa361e508ad4658aaa7538a5cdc7922a0e0ddfc34d1de7ef1433ab"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 40,
        "start_column": 15,
        "end_line": 40,
        "end_column": 20
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommRing R\nn : \u2115\n\u22a2 Function.RightInverse (@MlPoly.ofSpec R inst\u271d n) (@MlPoly.toSpec R inst\u271d n)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/Data/MlPoly/Equiv.lean#L40"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "33649e404a6384ac9d19436a10d2fb39c4f935cf61dd719cf2edf84f6dc216c5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 48,
        "start_column": 2,
        "end_line": 48,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommRing R\nn : \u2115\np q : MlPoly R n\n\u22a2 @MlPoly.toSpec R inst\u271d n (p + q) = @MlPoly.toSpec R inst\u271d n p + @MlPoly.toSpec R inst\u271d n q",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/Data/MlPoly/Equiv.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "36aca3e354e9b7957f032a9c4e4373c6f2ac9ee000a579a16fb60473522eb0d6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 52,
        "start_column": 2,
        "end_line": 52,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : CommRing R\nn : \u2115\nS : Type u_2\ninst\u271d : CommRing S\nf : R \u2192+* S\np : MlPoly R n\nx : Vector S n\n\u22a2 p.eval\u2082 f x = MvPolynomial.eval\u2082 f x.get \u2191(@MlPoly.toSpec R inst\u271d\u00b9 n p)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/Data/MlPoly/Equiv.lean#L52"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "b38ecc8167106f496178156012cc4186edc2d6ffc26ba09f4f21b0461ec1e9c0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 237,
        "start_column": 2,
        "end_line": 237,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : CommRing R\nw : Vector R n\ni : Fin (2 ^ n)\n\u22a2 (@MlPoly.lagrangeBasis R n inst\u271d w)[i] = \u220f j, if { toFin := i }.getLsb' j = true then w[j] else 1 - w[j]",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/Data/MlPoly/Basic.lean#L237"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "7d85be9fea4b716db396b67d713857004ee044a6ea50123ed816760e7fbee5c4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 322,
        "start_column": 14,
        "end_line": 322,
        "end_column": 19
      },
      "debug_info": {
        "goal": "R\u271d : Type u_1\nn : \u2115\nR : Type u_2\ninst\u271d\u00b9 : Add R\ninst\u271d : Sub R\n\u22a2 Function.LeftInverse (@MlPoly.evalToCoeff R inst\u271d n) (@MlPoly.coeffToEval R inst\u271d\u00b9 n)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/Data/MlPoly/Basic.lean#L322"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "8e4dcf7d678c2bb8272870d14371b0fbfc21cacf87b968a0200fbe9629691a5c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 323,
        "start_column": 15,
        "end_line": 323,
        "end_column": 20
      },
      "debug_info": {
        "goal": "R\u271d : Type u_1\nn : \u2115\nR : Type u_2\ninst\u271d\u00b9 : Add R\ninst\u271d : Sub R\n\u22a2 Function.RightInverse (@MlPoly.evalToCoeff R inst\u271d n) (@MlPoly.coeffToEval R inst\u271d\u00b9 n)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/Data/MlPoly/Basic.lean#L323"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "b08e6c782236cf440b05ecc7b50f7b740aca734f66e05185fbda792d1bdbdf12"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "main",
        "commit": "5ee74d2da8b81f7eac230ecc682fcb033b0487f7",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Transport.lean",
        "start_line": 288,
        "start_column": 14,
        "end_line": 288,
        "end_column": 19
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlens : ContextLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn InnerWitOut\ninnerLangIn : Set InnerStmtIn\ninnerLangOut : Set InnerStmtOut\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nS : StateFunction pSpec oSpec innerLangIn innerLangOut V\n\u22a2 \u2200\n    stmt \u2209\n      StatementLens.projectStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n          (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n            InnerWitIn InnerWitOut lens) \u207b\u00b9'\n        innerLangIn,\n    sorry 0 stmt default = False",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/5ee74d2da8b81f7eac230ecc682fcb033b0487f7/ArkLib/OracleReduction/Composition/Transport.lean#L288"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-02T06:04:25.770188+00:00"
      },
      "id": "aa64c7c519ea67acc74cec4c07fe1f3626dd0dc2c2c597c7489e2e3595379f73"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "main",
        "commit": "5ee74d2da8b81f7eac230ecc682fcb033b0487f7",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Transport.lean",
        "start_line": 289,
        "start_column": 13,
        "end_line": 289,
        "end_column": 18
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlens : ContextLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn InnerWitOut\ninnerLangIn : Set InnerStmtIn\ninnerLangOut : Set InnerStmtOut\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nS : StateFunction pSpec oSpec innerLangIn innerLangOut V\n\u22a2 \u2200 (m : Fin n),\n    pSpec.getDir m = Direction.P_to_V \u2192\n      \u2200 (stmt : OuterStmtIn) (tr : Transcript m.castSucc pSpec),\n        sorry m.castSucc stmt tr = False \u2192 \u2200 (msg : pSpec.getType m), sorry m.succ stmt (Transcript.snoc msg tr) = False",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/5ee74d2da8b81f7eac230ecc682fcb033b0487f7/ArkLib/OracleReduction/Composition/Transport.lean#L289"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-02T06:04:25.770188+00:00"
      },
      "id": "fec0c6fda2fb0819334c99bf27971f114dfdcea881707ecac063124443afd28b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "main",
        "commit": "5ee74d2da8b81f7eac230ecc682fcb033b0487f7",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Transport.lean",
        "start_line": 290,
        "start_column": 13,
        "end_line": 290,
        "end_column": 18
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlens : ContextLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn InnerWitOut\ninnerLangIn : Set InnerStmtIn\ninnerLangOut : Set InnerStmtOut\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nS : StateFunction pSpec oSpec innerLangIn innerLangOut V\n\u22a2 \u2200 (stmt : OuterStmtIn) (tr : Transcript (Fin.last n) pSpec),\n    sorry (Fin.last n) stmt tr = False \u2192\n      [fun x =>\n          x \u2208 fun x =>\n            True|run stmt tr\n            (Verifier.transport n pSpec \u03b9 oSpec OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n              (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              V)] =\n        0",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/5ee74d2da8b81f7eac230ecc682fcb033b0487f7/ArkLib/OracleReduction/Composition/Transport.lean#L290"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-02T06:04:25.770188+00:00"
      },
      "id": "3119e653582ec6625bad7daf3fe20bd8ae744aa3875b545902592bee135c9e06"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "main",
        "commit": "5ee74d2da8b81f7eac230ecc682fcb033b0487f7",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Transport.lean",
        "start_line": 389,
        "start_column": 4,
        "end_line": 389,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case succ\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nlens : ContextLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nouterStmtIn : OuterStmtIn\nouterWitIn : OuterWitIn\nP : Prover pSpec oSpec InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut\ni : Fin n\nih :\n  (fun a => (a.1.1, a.1.2, a.2)) <$>\n      (simulateQ loggingOracle\n          (runToRound i.castSucc outerStmtIn outerWitIn\n            (Prover.transport n pSpec \u03b9 oSpec OuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn\n              InnerStmtOut InnerWitOut lens P))).run =\n    (fun a => (a.1.1, (a.1.2, outerStmtIn, outerWitIn), a.2)) <$>\n      (simulateQ loggingOracle\n          (runToRound i.castSucc\n            (StatementLens.projectStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n              (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerStmtIn)\n            (WitnessLens.projectWit OuterWitIn OuterWitOut InnerWitIn InnerWitOut\n              (ContextLens.toWitnessLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerWitIn)\n            P)).run\n\u22a2 (fun a => (a.1.1, a.1.2, a.2)) <$>\n      (simulateQ loggingOracle\n          (runToRound i.succ outerStmtIn outerWitIn\n            (Prover.transport n pSpec \u03b9 oSpec OuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn\n              InnerStmtOut InnerWitOut lens P))).run =\n    (fun a => (a.1.1, (a.1.2, outerStmtIn, outerWitIn), a.2)) <$>\n      (simulateQ loggingOracle\n          (runToRound i.succ\n            (StatementLens.projectStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n              (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerStmtIn)\n            (WitnessLens.projectWit OuterWitIn OuterWitOut InnerWitIn InnerWitOut\n              (ContextLens.toWitnessLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerWitIn)\n            P)).run",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/5ee74d2da8b81f7eac230ecc682fcb033b0487f7/ArkLib/OracleReduction/Composition/Transport.lean#L389"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-02T06:04:25.770188+00:00"
      },
      "id": "c4ccef2ab2d805f26614b57454519c77ffcd3f814a393519d2b5e208d60480d3"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "main",
        "commit": "5ee74d2da8b81f7eac230ecc682fcb033b0487f7",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Transport.lean",
        "start_line": 506,
        "start_column": 2,
        "end_line": 506,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nouterLangIn : Set OuterStmtIn\nouterLangOut : Set OuterStmtOut\ninnerLangIn : Set InnerStmtIn\ninnerLangOut : Set InnerStmtOut\nsoundnessError : NNReal\nlens : StatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nlensSound :\n  StatementLens.IsSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut outerLangIn outerLangOut innerLangIn\n    innerLangOut (fun x x => True) lens\nh :\n  \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec InnerStmtIn WitIn InnerStmtOut WitOut),\n    \u2200 stmtIn \u2209 innerLangIn,\n      [fun x => x.2.1 \u2209 innerLangOut|Reduction.run stmtIn witIn { prover := prover, verifier := V }] \u2264 \u2191soundnessError\nOuterWitIn OuterWitOut : Type\nouterWitIn : OuterWitIn\nprover : Prover pSpec oSpec OuterStmtIn OuterWitIn OuterStmtOut OuterWitOut\nouterStmtIn : OuterStmtIn\nhOuterStmtIn : outerStmtIn \u2209 outerLangIn\nh' :\n  \u2200 (prover : Prover pSpec oSpec InnerStmtIn OuterWitIn InnerStmtOut OuterWitOut),\n    \u2200 stmtIn \u2209 innerLangIn,\n      [fun x => x.2.1 \u2209 innerLangOut|Reduction.run stmtIn outerWitIn { prover := prover, verifier := V }] \u2264\n        \u2191soundnessError\n\u22a2 [fun x =>\n      x.2.1 \u2209\n        outerLangOut|Reduction.run outerStmtIn outerWitIn\n        { prover := prover,\n          verifier := Verifier.transport n pSpec \u03b9 oSpec OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens V }] \u2264\n    \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/5ee74d2da8b81f7eac230ecc682fcb033b0487f7/ArkLib/OracleReduction/Composition/Transport.lean#L506"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-02T06:04:25.770188+00:00"
      },
      "id": "f5707b09e39030fcfd33abe730f31f0a8505e6e3513359f000d497527cde3f55"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "main",
        "commit": "5ee74d2da8b81f7eac230ecc682fcb033b0487f7",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Transport.lean",
        "start_line": 526,
        "start_column": 2,
        "end_line": 532,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nouterRelIn : OuterStmtIn \u2192 OuterWitIn \u2192 Prop\nouterRelOut : OuterStmtOut \u2192 OuterWitOut \u2192 Prop\ninnerRelIn : InnerStmtIn \u2192 InnerWitIn \u2192 Prop\ninnerRelOut : InnerStmtOut \u2192 InnerWitOut \u2192 Prop\nsoundnessError : NNReal\nlens : ContextLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensKnowledgeSound :\n  ContextLens.IsKnowledgeSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn\n    InnerWitOut outerRelIn innerRelIn outerRelOut innerRelOut (fun x x => True) lens\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nE : StraightlineExtractor pSpec oSpec InnerStmtIn InnerWitIn InnerWitOut\nh' :\n  \u2200 (stmtIn : InnerStmtIn) (witIn : InnerWitIn)\n    (prover : Prover pSpec oSpec InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut),\n    [fun x =>\n        match x with\n        | ((fst, witOut), stmtOut, transcript, proveQueryLog, verifyQueryLog) =>\n          \u00acinnerRelIn stmtIn (E witOut stmtIn transcript proveQueryLog.fst verifyQueryLog) \u2227\n            innerRelOut stmtOut witOut|Reduction.runWithLog stmtIn witIn { prover := prover, verifier := V }] \u2264\n      \u2191soundnessError\n\u22a2 \u2203 extractor,\n    \u2200 (stmtIn : OuterStmtIn) (witIn : OuterWitIn)\n      (prover : Prover pSpec oSpec OuterStmtIn OuterWitIn OuterStmtOut OuterWitOut),\n      [fun x =>\n          match x with\n          | ((fst, witOut), stmtOut, transcript, proveQueryLog, verifyQueryLog) =>\n            \u00acouterRelIn stmtIn (extractor witOut stmtIn transcript proveQueryLog.fst verifyQueryLog) \u2227\n              outerRelOut stmtOut\n                witOut|Reduction.runWithLog stmtIn witIn\n            { prover := prover,\n              verifier :=\n                Verifier.transport n pSpec \u03b9 oSpec OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                  (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                    InnerWitIn InnerWitOut lens)\n                  V }] \u2264\n        \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/5ee74d2da8b81f7eac230ecc682fcb033b0487f7/ArkLib/OracleReduction/Composition/Transport.lean#L526"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-02T06:04:25.770188+00:00"
      },
      "id": "395512f960a473d90da5d1e1a0a44047073243e3aed2281478b11844d71b4061"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "main",
        "commit": "5ee74d2da8b81f7eac230ecc682fcb033b0487f7",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Transport.lean",
        "start_line": 549,
        "start_column": 2,
        "end_line": 549,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nouterLangIn : Set OuterStmtIn\nouterLangOut : Set OuterStmtOut\ninnerLangIn : Set InnerStmtIn\ninnerLangOut : Set InnerStmtOut\nrbrSoundnessError : pSpec.ChallengeIdx \u2192 NNReal\nlens : StatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nlensSound :\n  StatementLens.IsSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut outerLangIn outerLangOut innerLangIn\n    innerLangOut (fun x x => True) lens\nh :\n  \u2203 stateFunction,\n    \u2200 stmtIn \u2209 innerLangIn,\n      \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec InnerStmtIn WitIn InnerStmtOut WitOut)\n        (i : pSpec.ChallengeIdx),\n        let ex := do\n          let __do_lift \u2190 Prover.runWithLogToRound (\u2191i).castSucc stmtIn witIn prover\n          let __do_lift_1 \u2190 liftM (pSpec.getChallenge i)\n          pure (__do_lift, __do_lift_1);\n        [fun x =>\n            match x with\n            | ((transcript, snd), challenge) =>\n              \u00acstateFunction.fn (\u2191i).castSucc stmtIn transcript \u2227\n                stateFunction.fn (\u2191i).succ stmtIn (Transcript.snoc challenge transcript)|ex] \u2264\n          \u2191(rbrSoundnessError i)\n\u22a2 \u2203 stateFunction,\n    \u2200 stmtIn \u2209 outerLangIn,\n      \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec OuterStmtIn WitIn OuterStmtOut WitOut)\n        (i : pSpec.ChallengeIdx),\n        let ex := do\n          let __do_lift \u2190 Prover.runWithLogToRound (\u2191i).castSucc stmtIn witIn prover\n          let __do_lift_1 \u2190 liftM (pSpec.getChallenge i)\n          pure (__do_lift, __do_lift_1);\n        [fun x =>\n            match x with\n            | ((transcript, snd), challenge) =>\n              \u00acstateFunction.fn (\u2191i).castSucc stmtIn transcript \u2227\n                stateFunction.fn (\u2191i).succ stmtIn (Transcript.snoc challenge transcript)|ex] \u2264\n          \u2191(rbrSoundnessError i)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/5ee74d2da8b81f7eac230ecc682fcb033b0487f7/ArkLib/OracleReduction/Composition/Transport.lean#L549"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-02T06:04:25.770188+00:00"
      },
      "id": "9c2b058ae98dee9ab7a2d452f92e9afbd2c907cd8cba58d1df975a8f510ae6f2"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "main",
        "commit": "5ee74d2da8b81f7eac230ecc682fcb033b0487f7",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Transport.lean",
        "start_line": 567,
        "start_column": 2,
        "end_line": 567,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nouterRelIn : OuterStmtIn \u2192 OuterWitIn \u2192 Prop\nouterRelOut : OuterStmtOut \u2192 OuterWitOut \u2192 Prop\ninnerRelIn : InnerStmtIn \u2192 InnerWitIn \u2192 Prop\ninnerRelOut : InnerStmtOut \u2192 InnerWitOut \u2192 Prop\nrbrKnowledgeError : pSpec.ChallengeIdx \u2192 NNReal\nlens : ContextLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensKnowledgeSound :\n  ContextLens.IsKnowledgeSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn\n    InnerWitOut outerRelIn innerRelIn outerRelOut innerRelOut (fun x x => True) lens\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nh : rbrKnowledgeSoundness innerRelIn innerRelOut V rbrKnowledgeError\n\u22a2 rbrKnowledgeSoundness outerRelIn outerRelOut\n    (Verifier.transport n pSpec \u03b9 oSpec OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n      (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn\n        InnerWitOut lens)\n      V)\n    rbrKnowledgeError",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/5ee74d2da8b81f7eac230ecc682fcb033b0487f7/ArkLib/OracleReduction/Composition/Transport.lean#L567"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-02T06:04:25.770188+00:00"
      },
      "id": "65cd2d5b498389ece50c26d65e7d7805f5174c98acbdd167a50386dd0ccda8ad"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "main",
        "commit": "5ee74d2da8b81f7eac230ecc682fcb033b0487f7",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Security/Basic.lean",
        "start_line": 393,
        "start_column": 2,
        "end_line": 393,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nStmtIn WitIn StmtOut WitOut : Type\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nknowledgeError : NNReal\nhLt : knowledgeError < 1\nextractor : @StraightlineExtractor n pSpec \u03b9 oSpec StmtIn WitIn WitOut\nhKS :\n  \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n    [fun x =>\n        \u00acrelIn stmtIn (@extractor x.1.2 stmtIn x.2.2.1 x.2.2.2.1.fst x.2.2.2.2) \u2227\n          relOut x.2.1 x.1.2|Reduction.runWithLog stmtIn witIn { prover := prover, verifier := verifier }] \u2264\n      \u2191knowledgeError\nWitIn' WitOut' : Type\nwitIn' : WitIn'\nprover : Prover pSpec oSpec StmtIn WitIn' StmtOut WitOut'\nstmtIn : StmtIn\nhStmtIn : \u2200 (x : WitIn), \u00acrelIn stmtIn x\n\u22a2 [fun x =>\n      \u2200 (x_1 : WitOut), \u00acrelOut x.2.1 x_1|Reduction.run stmtIn witIn' { prover := prover, verifier := verifier }] \u2264\n    \u2191knowledgeError",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/5ee74d2da8b81f7eac230ecc682fcb033b0487f7/ArkLib/OracleReduction/Security/Basic.lean#L393"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-06-02T06:04:25.770188+00:00"
      },
      "id": "f0389f382197a2f393c45bef218e18ab5d0a0aa522602d8dc132a1accdfe6bf3"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Sumcheck/SingleRound.lean",
        "start_line": 479,
        "start_column": 2,
        "end_line": 479,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\ninst\u271d : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\nstmt : Sumcheck.Spec.Statement R n i.castSucc \u00d7 ((i : Unit) \u2192 Sumcheck.Spec.OracleStatement R inst\u271d\u00b9 n deg i)\ntranscript : FullTranscript ![(Direction.P_to_V, \u21a5(degreeLE R \u2191deg)), (Direction.V_to_P, R)]\nx : getType (Sumcheck.Spec.SingleRound.pSpec R inst\u271d\u00b9 deg) 0\nhp_i : \u2191(transcript 0) \u2208 degreeLE R \u2191deg\nhEq : transcript 0 = \u27e8\u2191(transcript 0), hp_i\u27e9\n\u22a2 (do\n      let a \u2190\n        ((OptionT.run (List.mapM (fun i => liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (D i))) (List.finRange m))).bind\n                fun __do_lift =>\n                __do_lift.elim (FreeMonad.pure none)\n                  (OptionT.run \u2218 fun evals => do\n                    if evals.sum = Sumcheck.Spec.Statement.target R n i.castSucc stmt.1 then pure () else failure\n                    (fun a =>\n                          Sumcheck.Spec.Statement.mk R n i.succ a\n                            (Fin.snoc (Sumcheck.Spec.Statement.challenges R n i.castSucc stmt.1) (transcript 1))) <$>\n                        liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (transcript 1)))).mapM\n            fun {\u03b1} => (OracleInterface.simOracle2 oSpec stmt.2 transcript.messages).impl\n      (fun a =>\n            (a, fun i_1 =>\n              @Prod.snd (Sumcheck.Spec.Statement R n i.castSucc)\n                ((i : Unit) \u2192 Sumcheck.Spec.OracleStatement R inst\u271d\u00b9 n deg i) stmt i_1)) <$>\n          a.getM) =\n    (fun a =>\n        (Sumcheck.Spec.Statement.mk R n i.succ (Polynomial.eval (transcript 1) \u2191(transcript 0))\n            (Fin.snoc (Sumcheck.Spec.Statement.challenges R n i.castSucc stmt.1) (transcript 1)),\n          stmt.2)) <$>\n      if \u2211 x, Polynomial.eval (D x) \u2191(transcript 0) = Sumcheck.Spec.Statement.target R n i.castSucc stmt.1 then pure ()\n      else failure",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/ProofSystem/Sumcheck/SingleRound.lean#L479"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "72baaea2e1ee8bd2214cb4a5bedbb0137cbbbbcbd60007f7beec8bb7b150e960"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Sumcheck/SingleRound.lean",
        "start_line": 497,
        "start_column": 57,
        "end_line": 497,
        "end_column": 62
      },
      "debug_info": {
        "goal": "case left\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Unit) \u2192 Sumcheck.Spec.OracleStatement R inst\u271d\u00b3 n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast (Sumcheck.Spec.relation._proof_11 n i.castSucc)))\n        \u2191(@oStmt ()) =\n    target\n\u22a2 (Prover.processRound 1\n        { prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n              verifier :=\n                Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2 i }.toReduction.prover\n        (Prover.processRound 0\n          { prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                verifier :=\n                  Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2 i }.toReduction.prover\n          (pure\n            (@default (Transcript 0 (Sumcheck.Spec.SingleRound.pSpec R inst\u271d\u00b3 deg)) Unique.instInhabited,\n              { prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                          verifier :=\n                            Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                              i }.toReduction.prover.toProverIn.input\n                (Sumcheck.Spec.Statement R n i.castSucc \u00d7 ((i : Unit) \u2192 Sumcheck.Spec.OracleStatement R inst\u271d\u00b3 n deg i))\n                Unit\n                ({ prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                          verifier :=\n                            Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                              i }.toReduction.prover.PrvState\n                  0)\n                (Sumcheck.Spec.Statement.mk R n i.castSucc target challenge, oStmt) witIn\u271d)))).neverFails \u2227\n    \u2200 (a : Transcript 2 (Sumcheck.Spec.SingleRound.pSpec R inst\u271d\u00b3 deg))\n      (b :\n        { prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                  verifier :=\n                    Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                      i }.toReduction.prover.PrvState\n          2),\n      (a, b) \u2208\n          (Prover.processRound 1\n              { prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                    verifier :=\n                      Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2 i }.toReduction.prover\n              (Prover.processRound 0\n                { prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                      verifier :=\n                        Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                          i }.toReduction.prover\n                (pure\n                  (@default (Transcript 0 (Sumcheck.Spec.SingleRound.pSpec R inst\u271d\u00b3 deg)) Unique.instInhabited,\n                    { prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                                verifier :=\n                                  Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                                    i }.toReduction.prover.toProverIn.input\n                      (Sumcheck.Spec.Statement R n i.castSucc \u00d7\n                        ((i : Unit) \u2192 Sumcheck.Spec.OracleStatement R inst\u271d\u00b3 n deg i))\n                      Unit\n                      ({ prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                                verifier :=\n                                  Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                                    i }.toReduction.prover.PrvState\n                        0)\n                      (Sumcheck.Spec.Statement.mk R n i.castSucc target challenge, oStmt) witIn\u271d)))).support \u2192\n        (Verifier.run (Sumcheck.Spec.Statement.mk R n i.castSucc target challenge, oStmt) a\n            { prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                  verifier :=\n                    Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                      i }.toReduction.verifier).neverFails",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/ProofSystem/Sumcheck/SingleRound.lean#L497"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-03T06:32:48.384768+00:00"
      },
      "id": "af6a2e099082ce9ad6fce4346e5112306a382e915d3bcc8934f9a417c5d22713"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "df155621bd7f37f347b8e9ba71f7ccc6408eed0e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/MatrixLikeSum3.lean",
        "start_line": 33,
        "start_column": 2,
        "end_line": 33,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X\u2097 Y\u2097 X\u1d63 Y\u1d63 : Type\nM : MatrixLikeSum3 X\u2097 Y\u2097 X\u1d63 Y\u1d63\n\u22a2 M.A\u2097.IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/df155621bd7f37f347b8e9ba71f7ccc6408eed0e/Seymour/Matroid/Operations/Sum3/MatrixLikeSum3.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-06T05:15:18.267794+00:00"
      },
      "id": "9182be7a48d93f82511957156a9a55b5e6a3202995f5214dcb0b140440adb956"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "df155621bd7f37f347b8e9ba71f7ccc6408eed0e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/MatrixLikeSum3.lean",
        "start_line": 48,
        "start_column": 2,
        "end_line": 48,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X\u2097 Y\u2097 X\u1d63 Y\u1d63 : Type\nM : MatrixLikeSum3 X\u2097 Y\u2097 X\u1d63 Y\u1d63\n\u22a2 M.matrix.IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/df155621bd7f37f347b8e9ba71f7ccc6408eed0e/Seymour/Matroid/Operations/Sum3/MatrixLikeSum3.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-06T05:15:18.267794+00:00"
      },
      "id": "0da0912a903141cb07db5e56481bf73b2a4aa963b6c4cfd587fe9ae98c754091"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "df155621bd7f37f347b8e9ba71f7ccc6408eed0e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/MatrixLikeSum3.lean",
        "start_line": 80,
        "start_column": 2,
        "end_line": 80,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X\u2097 Y\u2097 X\u1d63 Y\u1d63 : Type\nS : MatrixSum3 X\u2097 Y\u2097 X\u1d63 Y\u1d63 Z2\nhS : S.HasTuSigningB\u2097\u1d63\n\u22a2 S.matrix.HasTuSigning",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/df155621bd7f37f347b8e9ba71f7ccc6408eed0e/Seymour/Matroid/Operations/Sum3/MatrixLikeSum3.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-06T05:15:18.267794+00:00"
      },
      "id": "e4af7499d3576fae67cee8393923acfe815c04e89c3bcc5e8da014bd1d8dd422"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "1c14b42a81480d31e75a833e6bbe48b6a346a20d",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/MatroidSum3.lean",
        "start_line": 323,
        "start_column": 2,
        "end_line": 323,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d : DecidableEq \u03b1\nS\u2097 S\u1d63 : StandardRepr \u03b1 Z2\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\nhXX : S\u2097.X \u2229 S\u1d63.X = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : S\u2097.Y \u2229 S\u1d63.Y = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhXY : S\u2097.X \u2ad7 S\u1d63.Y\nhYX : S\u2097.Y \u2ad7 S\u1d63.X\nhS\u2097 : S\u2097.B.HasTuSigning\nhS\u1d63 : S\u1d63.B.HasTuSigning\nhSS : (standardRepr3sumComposition hXX hYY hXY hYX).2\n\u22a2 (standardRepr3sumComposition hXX hYY hXY hYX).1.B.HasTuSigning",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/1c14b42a81480d31e75a833e6bbe48b6a346a20d/Seymour/Matroid/Operations/Sum3/MatroidSum3.lean#L323"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-05T05:18:00.928874+00:00"
      },
      "id": "00efb8d47541b250c075c8a19c55a38c6c24fb811a17dfcaaae4ff401dab7d64"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "1c14b42a81480d31e75a833e6bbe48b6a346a20d",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean",
        "start_line": 45,
        "start_column": 2,
        "end_line": 45,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X\u2097 Y\u2097 X\u1d63 Y\u1d63 : Type\nS : MatrixSum3 X\u2097 Y\u2097 X\u1d63 Y\u1d63 \u211a\nhS : S.HasTuB\u1d63\n\u22a2 \u2200 (i : Fin2X \u2295 X\u1d63), ![S.c\u2080 i, S.c\u2081 i] \u2260 ![1, -1] \u2227 ![S.c\u2080 i, S.c\u2081 i] \u2260 ![-1, 1]",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/1c14b42a81480d31e75a833e6bbe48b6a346a20d/Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean#L45"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-05T05:18:00.928874+00:00"
      },
      "id": "0c0b4431db7574bf7c9c8dcb208fa6c88c791073691b290914dc5af41c91fa57"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "1c14b42a81480d31e75a833e6bbe48b6a346a20d",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean",
        "start_line": 65,
        "start_column": 2,
        "end_line": 65,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X\u2097 Y\u2097 X\u1d63 Y\u1d63 : Type\nS : MatrixSum3 X\u2097 Y\u2097 X\u1d63 Y\u1d63 \u211a\nhS : S.HasTuB\u1d63\n\u22a2 (\u25aeS.c\u2080 \u25eb \u25aeS.c\u2082 \u25eb S.A\u1d63).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/1c14b42a81480d31e75a833e6bbe48b6a346a20d/Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean#L65"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-05T05:18:00.928874+00:00"
      },
      "id": "c462e4bfc0c1bae9a36c0be2cd97ae7c790583731e31cc57ac02492c86c602a2"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "1c14b42a81480d31e75a833e6bbe48b6a346a20d",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean",
        "start_line": 113,
        "start_column": 2,
        "end_line": 113,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X\u2097 Y\u2097 X\u1d63 Y\u1d63 : Type\nS : MatrixSum3 X\u2097 Y\u2097 X\u1d63 Y\u1d63 \u211a\nhS : S.HasTuB\u1d63\n\u22a2 (\u25aeS.c\u2081 \u25eb \u25aeS.c\u2082 \u25eb S.A\u1d63).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/1c14b42a81480d31e75a833e6bbe48b6a346a20d/Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean#L113"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-05T05:18:00.928874+00:00"
      },
      "id": "6904daeb4e51ab2282adc2a212867209ff394f6691166f559c7888d9a3bad62d"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "1c14b42a81480d31e75a833e6bbe48b6a346a20d",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean",
        "start_line": 161,
        "start_column": 2,
        "end_line": 161,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X\u2097 Y\u2097 X\u1d63 Y\u1d63 : Type\nS : MatrixSum3 X\u2097 Y\u2097 X\u1d63 Y\u1d63 \u211a\nhS : S.HasTuB\u1d63\n\u22a2 (\u25aeS.c\u2080 \u25eb \u25aeS.c\u2081 \u25eb \u25aeS.c\u2082 \u25eb S.A\u1d63).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/1c14b42a81480d31e75a833e6bbe48b6a346a20d/Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean#L161"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-05T05:18:00.928874+00:00"
      },
      "id": "db0cc3dfd161d64749cddbe74576e74cfbc7f517f040b614d6022d51f208130b"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "1c14b42a81480d31e75a833e6bbe48b6a346a20d",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean",
        "start_line": 175,
        "start_column": 2,
        "end_line": 175,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X\u2097 Y\u2097 X\u1d63 Y\u1d63 : Type\nS : MatrixSum3 X\u2097 Y\u2097 X\u1d63 Y\u1d63 \u211a\nhS : S.HasTuB\u1d63\n\u22a2 (\u25aeS.c\u2080 \u25eb \u25aeS.c\u2080 \u25eb \u25aeS.c\u2081 \u25eb \u25aeS.c\u2081 \u25eb \u25aeS.c\u2082 \u25eb \u25aeS.c\u2082 \u25eb S.A\u1d63).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/1c14b42a81480d31e75a833e6bbe48b6a346a20d/Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean#L175"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-05T05:18:00.928874+00:00"
      },
      "id": "e40cf58701c919aae313d2490f64668dc8a29850958b2dcef22cd2ce02997554"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "1c14b42a81480d31e75a833e6bbe48b6a346a20d",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean",
        "start_line": 193,
        "start_column": 2,
        "end_line": 193,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X\u2097 Y\u2097 X\u1d63 Y\u1d63 : Type\nS : MatrixSum3 X\u2097 Y\u2097 X\u1d63 Y\u1d63 \u211a\nhS : S.HasTuB\u1d63\n\u22a2 (S.A\u1d63 \u25eb \u25aeS.c\u2080 \u25eb \u25ae(-S.c\u2080) \u25eb \u25aeS.c\u2081 \u25eb \u25ae(-S.c\u2081) \u25eb \u25aeS.c\u2082 \u25eb \u25ae(-S.c\u2082)).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/1c14b42a81480d31e75a833e6bbe48b6a346a20d/Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean#L193"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-05T05:18:00.928874+00:00"
      },
      "id": "19769e079e807e4928e591cedbfcc4795ea946d85b4f6063c7d272a163d2a907"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "df155621bd7f37f347b8e9ba71f7ccc6408eed0e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean",
        "start_line": 161,
        "start_column": 2,
        "end_line": 161,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X\u2097 Y\u2097 X\u1d63 Y\u1d63 : Type\nS : MatrixSum3 X\u2097 Y\u2097 X\u1d63 Y\u1d63 Z2\nhS : S.HasCanonicalSigning\n\u22a2 S.toCanonicalSigning.IsCanonicalSigning",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/df155621bd7f37f347b8e9ba71f7ccc6408eed0e/Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean#L161"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-06T05:15:18.267794+00:00"
      },
      "id": "d7de9d2558017099b413515aecd9886b1da5ee5c2e5fbe5eaf5fe2d37035d5c4"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "df155621bd7f37f347b8e9ba71f7ccc6408eed0e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean",
        "start_line": 167,
        "start_column": 2,
        "end_line": 167,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X\u2097 Y\u2097 X\u1d63 Y\u1d63 : Type\nS : MatrixSum3 X\u2097 Y\u2097 X\u1d63 Y\u1d63 Z2\nhS : S.HasCanonicalSigning\n\u22a2 S.toCanonicalSigning.matrix.IsSigningOf S.matrix",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/df155621bd7f37f347b8e9ba71f7ccc6408eed0e/Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean#L167"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-06T05:15:18.267794+00:00"
      },
      "id": "d67a51534158e09eab17f8af0842cdd24d36986f26e70c7f016814a6ed91bd88"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "df155621bd7f37f347b8e9ba71f7ccc6408eed0e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean",
        "start_line": 176,
        "start_column": 2,
        "end_line": 176,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X\u2097 Y\u2097 X\u1d63 Y\u1d63 : Type\nS : MatrixSum3 X\u2097 Y\u2097 X\u1d63 Y\u1d63 \u211a\nhS : S.IsCanonicalSigning\nhS\u2080 : S.S\u2097 = matrix3x3signed\u2080\n\u22a2 S.D =\n    (fun {X Y \u03b1} [Mul \u03b1] c r => Matrix.of fun i j => c i * r j) S.c\u2080 S.d\u2080 -\n      (fun {X Y \u03b1} [Mul \u03b1] c r => Matrix.of fun i j => c i * r j) S.c\u2081 S.d\u2081",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/df155621bd7f37f347b8e9ba71f7ccc6408eed0e/Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean#L176"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-06T05:15:18.267794+00:00"
      },
      "id": "f69451ba81209d6bee2726d910162153814c8cc4b591ec50b0ece9dcc69687fb"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "df155621bd7f37f347b8e9ba71f7ccc6408eed0e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean",
        "start_line": 182,
        "start_column": 2,
        "end_line": 182,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X\u2097 Y\u2097 X\u1d63 Y\u1d63 : Type\nS : MatrixSum3 X\u2097 Y\u2097 X\u1d63 Y\u1d63 \u211a\nhS : S.IsCanonicalSigning\nhS\u2081 : S.S\u2097 = matrix3x3signed\u2081\n\u22a2 S.D =\n    (fun {X Y \u03b1} [Mul \u03b1] c r => Matrix.of fun i j => c i * r j) S.c\u2080 S.d\u2080 -\n        (fun {X Y \u03b1} [Mul \u03b1] c r => Matrix.of fun i j => c i * r j) S.c\u2080 S.d\u2081 +\n      (fun {X Y \u03b1} [Mul \u03b1] c r => Matrix.of fun i j => c i * r j) S.c\u2081 S.d\u2081",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/df155621bd7f37f347b8e9ba71f7ccc6408eed0e/Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean#L182"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-06T05:15:18.267794+00:00"
      },
      "id": "f952341da23c2ddcee666c9a58037cbbbeadcb484d7310fd10aa7ff1493b71e5"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "1c14b42a81480d31e75a833e6bbe48b6a346a20d",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean",
        "start_line": 277,
        "start_column": 2,
        "end_line": 277,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X\u2097 Y\u2097 X\u1d63 Y\u1d63 : Type\nS : MatrixSum3 X\u2097 Y\u2097 X\u1d63 Y\u1d63 \u211a\nhS : S.IsCanonicalSigning\n\u22a2 \u2200 (j : Y\u2097 \u2295 Fin2Y),\n    (fun x => S.D x j) = 0 \u2228\n      (fun x => S.D x j) = S.c\u2080 \u2228\n        (fun x => S.D x j) = -S.c\u2080 \u2228\n          (fun x => S.D x j) = S.c\u2081 \u2228\n            (fun x => S.D x j) = -S.c\u2081 \u2228 (fun x => S.D x j) = S.c\u2080 - S.c\u2081 \u2228 (fun x => S.D x j) = S.c\u2081 - S.c\u2080",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/1c14b42a81480d31e75a833e6bbe48b6a346a20d/Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean#L277"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-05T05:18:00.928874+00:00"
      },
      "id": "cb9dfdfed4824fdef8d308e1baec71af7c5d5cb63b16487b37a290394e8197eb"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "1c14b42a81480d31e75a833e6bbe48b6a346a20d",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean",
        "start_line": 283,
        "start_column": 2,
        "end_line": 283,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X\u2097 Y\u2097 X\u1d63 Y\u1d63 : Type\nS : MatrixSum3 X\u2097 Y\u2097 X\u1d63 Y\u1d63 \u211a\nhS : S.IsCanonicalSigning\n\u22a2 \u2200 (i : Fin2X \u2295 X\u1d63),\n    S.D i = 0 \u2228 S.D i = S.d\u2080 \u2228 S.D i = -S.d\u2080 \u2228 S.D i = S.d\u2081 \u2228 S.D i = -S.d\u2081 \u2228 S.D i = S.d\u2082 \u2228 S.D i = -S.d\u2082",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/1c14b42a81480d31e75a833e6bbe48b6a346a20d/Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean#L283"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-05T05:18:00.928874+00:00"
      },
      "id": "d33511e3dfc421e029596a25d9a5d473ddb98026a996a1718744a97bb53f954d"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "df155621bd7f37f347b8e9ba71f7ccc6408eed0e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean",
        "start_line": 201,
        "start_column": 2,
        "end_line": 201,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X\u2097 Y\u2097 X\u1d63 Y\u1d63 : Type\nS : MatrixSum3 X\u2097 Y\u2097 X\u1d63 Y\u1d63 \u211a\nhS : S.IsCanonicalSigning\n\u22a2 (S.A\u2097 \u229f S.D).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/df155621bd7f37f347b8e9ba71f7ccc6408eed0e/Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean#L201"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-06T05:15:18.267794+00:00"
      },
      "id": "56280ee7294b5aa375b9dba8427ff524e7254fb62f3f11757f1125b4822a36a2"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "1c14b42a81480d31e75a833e6bbe48b6a346a20d",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean",
        "start_line": 296,
        "start_column": 2,
        "end_line": 296,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X\u2097 Y\u2097 X\u1d63 Y\u1d63 : Type\nS : MatrixSum3 X\u2097 Y\u2097 X\u1d63 Y\u1d63 \u211a\nhS : S.IsCanonicalSigning\n\u22a2 (\u25aeS.c\u2080 \u25eb \u25aeS.c\u2081 \u25eb \u25aeS.c\u2082 \u25eb S.A\u1d63).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/1c14b42a81480d31e75a833e6bbe48b6a346a20d/Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean#L296"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-05T05:18:00.928874+00:00"
      },
      "id": "925fcdce8ee252306ee4714a5a186c3fa3b427a0394f5881f88c2495d994d09b"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "4ae88c595711f5a77a374986a5aa2e035178d9c6",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 1571,
        "start_column": 40,
        "end_line": 1571,
        "end_column": 45
      },
      "debug_info": {
        "goal": "X : Sequent\nW : Type\nM : KripkeModel W\n\u03c6 : LoadFormula\nside : Side\nB : List Sequent\nnext : (Y : Sequent) \u2192 Y \u2208 B \u2192 LocalTableau Y\nIH :\n  \u2200 (Y : Sequent) (a : Y \u2208 B) {v w : W},\n    (M, v)\u22a8Y \u2192\n      (M, w)\u22a8~''(AnyFormula.loaded \u03c6) \u2192\n        \u2200 (\u03b1 : Program) (\u03b1s : List Program),\n          \u03b1 :: \u03b1s \u2260 [] \u2192\n            relateSeq M (\u03b1 :: \u03b1s) v w \u2192\n              (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.loaded \u03c6))).in_side side Y \u2192\n                (Y.without (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.loaded \u03c6)))).isFree = true \u2192\n                  \u2203 Y_1 \u2208 endNodesOf (next Y a),\n                    (M, v)\u22a8Y_1 \u2227\n                      (Y_1.isFree = true \u2228\n                        \u2203 F \u03b3,\n                          (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.loaded \u03c6))).in_side side Y_1 \u2227\n                            relateSeq M \u03b3 v w \u2227\n                              (M, v)\u22a8F \u2227\n                                (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227\n                                  (Y_1.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.loaded \u03c6)))).isFree = true)\nv w : W\nw_n\u03be : (M, w)\u22a8~''(AnyFormula.loaded \u03c6)\n\u03b1 : Program\n\u03b1s : List Program\n\u03b1s_nonem : \u03b1 :: \u03b1s \u2260 []\nL R : List Formula\nO : Olf\nv_t : (M, v)\u22a8(L, R, O)\nnegLoad_in : (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.loaded \u03c6))).in_side side (L, R, O)\nno_other_loading : (Sequent.without (L, R, O) (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.loaded \u03c6)))).isFree = true\nu : W\nv_\u03b1_u : relate M \u03b1 v u\nu_\u03b1s_w : relateSeq M \u03b1s u w\nF : List Formula\n\u03b4 : List Program\n_in_H : (F, \u03b4) \u2208 H \u03b1\nv_F : (M, v)\u22a8(F, \u03b4).1\nv_\u03b4_u : relateSeq M \u03b4 v u\n\u03b1' : Program\n\u03c7' : LoadFormula\n\u03b1'_not_atomic : \u00ac\u03b1'.isAtomic\nprecons : \u2205.Subperm L \u2227 \u2205.Subperm R \u2227 some (Sum.inl (~'\u230a\u03b1'\u230bAnyFormula.loaded \u03c7')) \u2286 O\nB_def_apply_r_LRO :\n  B = applyLocalRule (LocalRule.loadedL (\u230a\u03b1'\u230bAnyFormula.loaded \u03c7') (LoadRule.dia \u03b1'_not_atomic)) (L, R, O)\n\u22a2 \u2203\n    Y \u2208\n      endNodesOf\n        (LocalTableau.byLocalRule\n          (LocalRuleApp.mk \u2205 \u2205 (some (Sum.inl (~'\u230a\u03b1'\u230bAnyFormula.loaded \u03c7')))\n            (LocalRule.loadedL (\u230a\u03b1'\u230bAnyFormula.loaded \u03c7') (LoadRule.dia \u03b1'_not_atomic)) precons)\n          next),\n    (M, v)\u22a8Y \u2227\n      (Y.isFree = true \u2228\n        \u2203 F \u03b3,\n          (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.loaded \u03c6))).in_side side Y \u2227\n            relateSeq M \u03b3 v w \u2227\n              (M, v)\u22a8F \u2227\n                (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.loaded \u03c6)))).isFree = true)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/4ae88c595711f5a77a374986a5aa2e035178d9c6/Pdl/Soundness.lean#L1571"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-06-02T16:11:35+02:00",
        "inclusion_date": "2025-06-03T05:30:39.403777+00:00"
      },
      "id": "649f69b65674b0d6807fb9e07b432c8dfcb2acafedc6a734553ef6902bf36b00"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "4ae88c595711f5a77a374986a5aa2e035178d9c6",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 1600,
        "start_column": 40,
        "end_line": 1600,
        "end_column": 45
      },
      "debug_info": {
        "goal": "X : Sequent\nW : Type\nM : KripkeModel W\n\u03c6 : LoadFormula\nside : Side\nB : List Sequent\nnext : (Y : Sequent) \u2192 Y \u2208 B \u2192 LocalTableau Y\nIH :\n  \u2200 (Y : Sequent) (a : Y \u2208 B) {v w : W},\n    (M, v)\u22a8Y \u2192\n      (M, w)\u22a8~''(AnyFormula.loaded \u03c6) \u2192\n        \u2200 (\u03b1 : Program) (\u03b1s : List Program),\n          \u03b1 :: \u03b1s \u2260 [] \u2192\n            relateSeq M (\u03b1 :: \u03b1s) v w \u2192\n              (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.loaded \u03c6))).in_side side Y \u2192\n                (Y.without (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.loaded \u03c6)))).isFree = true \u2192\n                  \u2203 Y_1 \u2208 endNodesOf (next Y a),\n                    (M, v)\u22a8Y_1 \u2227\n                      (Y_1.isFree = true \u2228\n                        \u2203 F \u03b3,\n                          (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.loaded \u03c6))).in_side side Y_1 \u2227\n                            relateSeq M \u03b3 v w \u2227\n                              (M, v)\u22a8F \u2227\n                                (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227\n                                  (Y_1.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.loaded \u03c6)))).isFree = true)\nv w : W\nw_n\u03be : (M, w)\u22a8~''(AnyFormula.loaded \u03c6)\n\u03b1 : Program\n\u03b1s : List Program\n\u03b1s_nonem : \u03b1 :: \u03b1s \u2260 []\nL R : List Formula\nO : Olf\nv_t : (M, v)\u22a8(L, R, O)\nnegLoad_in : (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.loaded \u03c6))).in_side side (L, R, O)\nno_other_loading : (Sequent.without (L, R, O) (~''(AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.loaded \u03c6)))).isFree = true\nu : W\nv_\u03b1_u : relate M \u03b1 v u\nu_\u03b1s_w : relateSeq M \u03b1s u w\nF : List Formula\n\u03b4 : List Program\n_in_H : (F, \u03b4) \u2208 H \u03b1\nv_F : (M, v)\u22a8(F, \u03b4).1\nv_\u03b4_u : relateSeq M \u03b4 v u\n\u03b1' : Program\n\u03c7' : LoadFormula\n\u03b1'_not_atomic : \u00ac\u03b1'.isAtomic\nprecons : \u2205.Subperm L \u2227 \u2205.Subperm R \u2227 some (Sum.inr (~'\u230a\u03b1'\u230bAnyFormula.loaded \u03c7')) \u2286 O\nB_def_apply_r_LRO :\n  B = applyLocalRule (LocalRule.loadedR (\u230a\u03b1'\u230bAnyFormula.loaded \u03c7') (LoadRule.dia \u03b1'_not_atomic)) (L, R, O)\n\u22a2 \u2203\n    Y \u2208\n      endNodesOf\n        (LocalTableau.byLocalRule\n          (LocalRuleApp.mk \u2205 \u2205 (some (Sum.inr (~'\u230a\u03b1'\u230bAnyFormula.loaded \u03c7')))\n            (LocalRule.loadedR (\u230a\u03b1'\u230bAnyFormula.loaded \u03c7') (LoadRule.dia \u03b1'_not_atomic)) precons)\n          next),\n    (M, v)\u22a8Y \u2227\n      (Y.isFree = true \u2228\n        \u2203 F \u03b3,\n          (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.loaded \u03c6))).in_side side Y \u2227\n            relateSeq M \u03b3 v w \u2227\n              (M, v)\u22a8F \u2227\n                (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.loaded \u03c6)))).isFree = true)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/4ae88c595711f5a77a374986a5aa2e035178d9c6/Pdl/Soundness.lean#L1600"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-06-02T16:11:35+02:00",
        "inclusion_date": "2025-06-03T05:30:39.403777+00:00"
      },
      "id": "4374036bb3fa9f277b84d2eb161faf970f0df0790b27bd06945091c03b09ad46"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "4ae88c595711f5a77a374986a5aa2e035178d9c6",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 1635,
        "start_column": 12,
        "end_line": 1635,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case mk.mk.some.inl.LL.sequence\nX : Sequent\nW : Type\nM : KripkeModel W\n\u03c6 : LoadFormula\nv w : W\nw_n\u03be : (M, w)\u22a8~''(AnyFormula.loaded \u03c6)\n\u03b1s : List Program\nL R : List Formula\na\u271d\u00b9 a\u271d : Program\nv_\u03b1s_w : relateSeq M ((a\u271d\u00b9;'a\u271d) :: \u03b1s) v w\nX_isBasic : Sequent.basic (L, R, some (Sum.inl (~'\u230aa\u271d\u00b9;'a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.loaded \u03c6))))\nv_t : (M, v)\u22a8(L, R, some (Sum.inl (~'\u230aa\u271d\u00b9;'a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.loaded \u03c6))))\nthis :\n  (match ~(\u230aa\u271d\u00b9;'a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.loaded \u03c6)).unload with\n    | Formula.bottom => false\n    | ~Formula.bottom => true\n    | \u00b7a => true\n    | ~\u00b7a => true\n    | \u2308\u00b7a\u2309a_1 => true\n    | ~\u2308\u00b7a\u2309a_1 => true\n    | x => false) =\n    true\n\u22a2 False",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/4ae88c595711f5a77a374986a5aa2e035178d9c6/Pdl/Soundness.lean#L1635"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-06-02T16:11:35+02:00",
        "inclusion_date": "2025-06-03T05:30:39.403777+00:00"
      },
      "id": "c774eacd3ef896483d1c7948d1a39c0697e7d710391a9712ecc63e7096f7200f"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "4ae88c595711f5a77a374986a5aa2e035178d9c6",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 1635,
        "start_column": 12,
        "end_line": 1635,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case mk.mk.some.inl.LL.union\nX : Sequent\nW : Type\nM : KripkeModel W\n\u03c6 : LoadFormula\nv w : W\nw_n\u03be : (M, w)\u22a8~''(AnyFormula.loaded \u03c6)\n\u03b1s : List Program\nL R : List Formula\na\u271d\u00b9 a\u271d : Program\nv_\u03b1s_w : relateSeq M ((a\u271d\u00b9\u22d3a\u271d) :: \u03b1s) v w\nX_isBasic : Sequent.basic (L, R, some (Sum.inl (~'\u230aa\u271d\u00b9\u22d3a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.loaded \u03c6))))\nv_t : (M, v)\u22a8(L, R, some (Sum.inl (~'\u230aa\u271d\u00b9\u22d3a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.loaded \u03c6))))\nthis :\n  (match ~(\u230aa\u271d\u00b9\u22d3a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.loaded \u03c6)).unload with\n    | Formula.bottom => false\n    | ~Formula.bottom => true\n    | \u00b7a => true\n    | ~\u00b7a => true\n    | \u2308\u00b7a\u2309a_1 => true\n    | ~\u2308\u00b7a\u2309a_1 => true\n    | x => false) =\n    true\n\u22a2 False",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/4ae88c595711f5a77a374986a5aa2e035178d9c6/Pdl/Soundness.lean#L1635"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-06-02T16:11:35+02:00",
        "inclusion_date": "2025-06-03T05:30:39.403777+00:00"
      },
      "id": "a4a00d6ddf24c48ce1ee3e5043f1c5c5cace6574ccd62cd780278e628151c98e"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "4ae88c595711f5a77a374986a5aa2e035178d9c6",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 1635,
        "start_column": 12,
        "end_line": 1635,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case mk.mk.some.inl.LL.star\nX : Sequent\nW : Type\nM : KripkeModel W\n\u03c6 : LoadFormula\nv w : W\nw_n\u03be : (M, w)\u22a8~''(AnyFormula.loaded \u03c6)\n\u03b1s : List Program\nL R : List Formula\na\u271d : Program\nv_\u03b1s_w : relateSeq M ((\u2217a\u271d) :: \u03b1s) v w\nX_isBasic : Sequent.basic (L, R, some (Sum.inl (~'\u230a\u2217a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.loaded \u03c6))))\nv_t : (M, v)\u22a8(L, R, some (Sum.inl (~'\u230a\u2217a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.loaded \u03c6))))\nthis :\n  (match ~(\u230a\u2217a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.loaded \u03c6)).unload with\n    | Formula.bottom => false\n    | ~Formula.bottom => true\n    | \u00b7a => true\n    | ~\u00b7a => true\n    | \u2308\u00b7a\u2309a_1 => true\n    | ~\u2308\u00b7a\u2309a_1 => true\n    | x => false) =\n    true\n\u22a2 False",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/4ae88c595711f5a77a374986a5aa2e035178d9c6/Pdl/Soundness.lean#L1635"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-06-02T16:11:35+02:00",
        "inclusion_date": "2025-06-03T05:30:39.403777+00:00"
      },
      "id": "1bce0d86974a4818c8a532f489a4bb8b858d76ec655104a3b44c1e4ebd328eb1"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "4ae88c595711f5a77a374986a5aa2e035178d9c6",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 1635,
        "start_column": 12,
        "end_line": 1635,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case mk.mk.some.inl.LL.test\nX : Sequent\nW : Type\nM : KripkeModel W\n\u03c6 : LoadFormula\nv w : W\nw_n\u03be : (M, w)\u22a8~''(AnyFormula.loaded \u03c6)\n\u03b1s : List Program\nL R : List Formula\na\u271d : Formula\nv_\u03b1s_w : relateSeq M ((?'a\u271d) :: \u03b1s) v w\nX_isBasic : Sequent.basic (L, R, some (Sum.inl (~'\u230a?'a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.loaded \u03c6))))\nv_t : (M, v)\u22a8(L, R, some (Sum.inl (~'\u230a?'a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.loaded \u03c6))))\nthis :\n  (match ~(\u230a?'a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.loaded \u03c6)).unload with\n    | Formula.bottom => false\n    | ~Formula.bottom => true\n    | \u00b7a => true\n    | ~\u00b7a => true\n    | \u2308\u00b7a\u2309a_1 => true\n    | ~\u2308\u00b7a\u2309a_1 => true\n    | x => false) =\n    true\n\u22a2 False",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/4ae88c595711f5a77a374986a5aa2e035178d9c6/Pdl/Soundness.lean#L1635"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-06-02T16:11:35+02:00",
        "inclusion_date": "2025-06-03T05:30:39.403777+00:00"
      },
      "id": "3e49adf6ed0fac694460ddee7a164a2a7c27d839de74055900a2eeb182d12f7e"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "4ae88c595711f5a77a374986a5aa2e035178d9c6",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 1635,
        "start_column": 12,
        "end_line": 1635,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case mk.mk.some.inr.RR.sequence\nX : Sequent\nW : Type\nM : KripkeModel W\n\u03c6 : LoadFormula\nv w : W\nw_n\u03be : (M, w)\u22a8~''(AnyFormula.loaded \u03c6)\n\u03b1s : List Program\nL R : List Formula\na\u271d\u00b9 a\u271d : Program\nv_\u03b1s_w : relateSeq M ((a\u271d\u00b9;'a\u271d) :: \u03b1s) v w\nX_isBasic : Sequent.basic (L, R, some (Sum.inr (~'\u230aa\u271d\u00b9;'a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.loaded \u03c6))))\nv_t : (M, v)\u22a8(L, R, some (Sum.inr (~'\u230aa\u271d\u00b9;'a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.loaded \u03c6))))\nthis :\n  (match ~(\u230aa\u271d\u00b9;'a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.loaded \u03c6)).unload with\n    | Formula.bottom => false\n    | ~Formula.bottom => true\n    | \u00b7a => true\n    | ~\u00b7a => true\n    | \u2308\u00b7a\u2309a_1 => true\n    | ~\u2308\u00b7a\u2309a_1 => true\n    | x => false) =\n    true\n\u22a2 False",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/4ae88c595711f5a77a374986a5aa2e035178d9c6/Pdl/Soundness.lean#L1635"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-06-02T16:11:35+02:00",
        "inclusion_date": "2025-06-03T05:30:39.403777+00:00"
      },
      "id": "d207d3dbb597217355031d1c190c9090e73e992d4da5b35e204450b92d4afcc3"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "4ae88c595711f5a77a374986a5aa2e035178d9c6",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 1635,
        "start_column": 12,
        "end_line": 1635,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case mk.mk.some.inr.RR.union\nX : Sequent\nW : Type\nM : KripkeModel W\n\u03c6 : LoadFormula\nv w : W\nw_n\u03be : (M, w)\u22a8~''(AnyFormula.loaded \u03c6)\n\u03b1s : List Program\nL R : List Formula\na\u271d\u00b9 a\u271d : Program\nv_\u03b1s_w : relateSeq M ((a\u271d\u00b9\u22d3a\u271d) :: \u03b1s) v w\nX_isBasic : Sequent.basic (L, R, some (Sum.inr (~'\u230aa\u271d\u00b9\u22d3a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.loaded \u03c6))))\nv_t : (M, v)\u22a8(L, R, some (Sum.inr (~'\u230aa\u271d\u00b9\u22d3a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.loaded \u03c6))))\nthis :\n  (match ~(\u230aa\u271d\u00b9\u22d3a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.loaded \u03c6)).unload with\n    | Formula.bottom => false\n    | ~Formula.bottom => true\n    | \u00b7a => true\n    | ~\u00b7a => true\n    | \u2308\u00b7a\u2309a_1 => true\n    | ~\u2308\u00b7a\u2309a_1 => true\n    | x => false) =\n    true\n\u22a2 False",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/4ae88c595711f5a77a374986a5aa2e035178d9c6/Pdl/Soundness.lean#L1635"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-06-02T16:11:35+02:00",
        "inclusion_date": "2025-06-03T05:30:39.403777+00:00"
      },
      "id": "49f3915b7b9a1faa9224aefaf4918118d84abd822f1d5cad5fe3c9e080d415c7"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "4ae88c595711f5a77a374986a5aa2e035178d9c6",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 1635,
        "start_column": 12,
        "end_line": 1635,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case mk.mk.some.inr.RR.star\nX : Sequent\nW : Type\nM : KripkeModel W\n\u03c6 : LoadFormula\nv w : W\nw_n\u03be : (M, w)\u22a8~''(AnyFormula.loaded \u03c6)\n\u03b1s : List Program\nL R : List Formula\na\u271d : Program\nv_\u03b1s_w : relateSeq M ((\u2217a\u271d) :: \u03b1s) v w\nX_isBasic : Sequent.basic (L, R, some (Sum.inr (~'\u230a\u2217a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.loaded \u03c6))))\nv_t : (M, v)\u22a8(L, R, some (Sum.inr (~'\u230a\u2217a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.loaded \u03c6))))\nthis :\n  (match ~(\u230a\u2217a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.loaded \u03c6)).unload with\n    | Formula.bottom => false\n    | ~Formula.bottom => true\n    | \u00b7a => true\n    | ~\u00b7a => true\n    | \u2308\u00b7a\u2309a_1 => true\n    | ~\u2308\u00b7a\u2309a_1 => true\n    | x => false) =\n    true\n\u22a2 False",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/4ae88c595711f5a77a374986a5aa2e035178d9c6/Pdl/Soundness.lean#L1635"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-06-02T16:11:35+02:00",
        "inclusion_date": "2025-06-03T05:30:39.403777+00:00"
      },
      "id": "61dafb32bd236aded968ca9602aff2e80d394b7dd38b1dd9cb30baab0d884875"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "4ae88c595711f5a77a374986a5aa2e035178d9c6",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 1635,
        "start_column": 12,
        "end_line": 1635,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case mk.mk.some.inr.RR.test\nX : Sequent\nW : Type\nM : KripkeModel W\n\u03c6 : LoadFormula\nv w : W\nw_n\u03be : (M, w)\u22a8~''(AnyFormula.loaded \u03c6)\n\u03b1s : List Program\nL R : List Formula\na\u271d : Formula\nv_\u03b1s_w : relateSeq M ((?'a\u271d) :: \u03b1s) v w\nX_isBasic : Sequent.basic (L, R, some (Sum.inr (~'\u230a?'a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.loaded \u03c6))))\nv_t : (M, v)\u22a8(L, R, some (Sum.inr (~'\u230a?'a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.loaded \u03c6))))\nthis :\n  (match ~(\u230a?'a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.loaded \u03c6)).unload with\n    | Formula.bottom => false\n    | ~Formula.bottom => true\n    | \u00b7a => true\n    | ~\u00b7a => true\n    | \u2308\u00b7a\u2309a_1 => true\n    | ~\u2308\u00b7a\u2309a_1 => true\n    | x => false) =\n    true\n\u22a2 False",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/4ae88c595711f5a77a374986a5aa2e035178d9c6/Pdl/Soundness.lean#L1635"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-06-02T16:11:35+02:00",
        "inclusion_date": "2025-06-03T05:30:39.403777+00:00"
      },
      "id": "49d641f13833b50a759b0449d215f156f5e5180ff11b75dda9283362617d704d"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "4ae88c595711f5a77a374986a5aa2e035178d9c6",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2488,
        "start_column": 91,
        "end_line": 2488,
        "end_column": 96
      },
      "debug_info": {
        "goal": "X : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03be : AnyFormula\nside : Side\nw_n\u03be : (M, w)\u22a8~''\u03be\nt0 : PathIn tab\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\n\u03b2 : Program\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u2217\u03b2\u230b\u03be))).in_side side (nodeAt t)\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nw_Y : (M, v)\u22a8Y\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nF : List Formula\n\u03b4 : List Program\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 \u03be)).in_side side Y\nv_F : (M, v)\u22a8F\nF\u03b4_in_H : (F, \u03b4) \u2208 H (\u2217\u03b2)\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 \u03be))).isFree = true\n\u03b4_ne : \u00ac\u03b4 = []\nv_\u03b1_w : Relation.ReflTransGen (relate M \u03b2) v w\nn : \u2115\nws : List.Vector W n.succ\nv_head : v = ws.head\nw_tail : w = ws.last\nrel : \u2200 (i : Fin n), relate M \u03b2 (ws.get i.castSucc) (ws.get i.succ)\n\u03b2star_last : \u03b4.getLast \u03b4_ne = (\u2217\u03b2)\n\u03b3 : List Program := List.take (\u03b4.length - 1) \u03b4\nv_seq_w : relateSeq M (\u03b3 ++ [\u2217\u03b2]) v w\n\u03b4_def : \u03b4 = \u03b3 ++ [\u2217\u03b2]\nhelp : AnyFormula.loaded (\u230a\u230a\u03b3\u230b\u230b\u230a\u2217\u03b2\u230b\u03be) = AnyFormula.loadBoxes \u03b4 \u03be\nu : W\nM_v_\u03b3_u : relateSeq M \u03b3 v u\nM_u_\u03b2_v : relateSeq M [\u2217\u03b2] u w\nws' : List.Vector W \u03b3.length.succ\nv_def : v = ws'.head\nu_def : u = ws'.last\nws'_rel : \u2200 (i : Fin \u03b3.length), relate M (\u03b3.get i) (ws'.get \u2191\u2191i) (ws'.get i.succ)\nk : Fin \u03b3.length\nsk : PathIn tab\nt_sk : Relation.TransGen (cEdge X tab) t sk\n_in_node_sk : (~''(AnyFormula.loaded (\u230a\u230aList.drop (\u2191k.castSucc) \u03b3\u230b\u230b\u230a\u2217\u03b2\u230b\u03be))).in_side side (nodeAt sk)\nwsk'_sk : (M, ws'[k.castSucc])\u22a8nodeAt sk\nanf_in_sk : ((nodeAt sk).without (~''(AnyFormula.loaded (\u230a\u230aList.drop (\u2191k.castSucc) \u03b3\u230b\u230b\u230a\u2217\u03b2\u230b\u03be)))).isFree = true\n\u22a2 lengthOfProgram \u03b3[k] < lengthOfProgram (\u2217\u03b2)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/4ae88c595711f5a77a374986a5aa2e035178d9c6/Pdl/Soundness.lean#L2488"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-06-02T17:34:15+02:00",
        "inclusion_date": "2025-06-03T05:30:39.403777+00:00"
      },
      "id": "09a0bb399001e005943b2aecf0e1075535955ebba989fe26202389f6c91eda5d"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "4ae88c595711f5a77a374986a5aa2e035178d9c6",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2504,
        "start_column": 75,
        "end_line": 2504,
        "end_column": 80
      },
      "debug_info": {
        "goal": "X : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03be : AnyFormula\nside : Side\nw_n\u03be : (M, w)\u22a8~''\u03be\nt0 : PathIn tab\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\n\u03b2 : Program\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u2217\u03b2\u230b\u03be))).in_side side (nodeAt t)\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nw_Y : (M, v)\u22a8Y\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nF : List Formula\n\u03b4 : List Program\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 \u03be)).in_side side Y\nv_F : (M, v)\u22a8F\nF\u03b4_in_H : (F, \u03b4) \u2208 H (\u2217\u03b2)\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 \u03be))).isFree = true\n\u03b4_ne : \u00ac\u03b4 = []\nv_\u03b1_w : Relation.ReflTransGen (relate M \u03b2) v w\nn : \u2115\nws : List.Vector W n.succ\nv_head : v = ws.head\nw_tail : w = ws.last\nrel : \u2200 (i : Fin n), relate M \u03b2 (ws.get i.castSucc) (ws.get i.succ)\n\u03b2star_last : \u03b4.getLast \u03b4_ne = (\u2217\u03b2)\n\u03b3 : List Program := List.take (\u03b4.length - 1) \u03b4\nv_seq_w : relateSeq M (\u03b3 ++ [\u2217\u03b2]) v w\n\u03b4_def : \u03b4 = \u03b3 ++ [\u2217\u03b2]\nhelp : AnyFormula.loaded (\u230a\u230a\u03b3\u230b\u230b\u230a\u2217\u03b2\u230b\u03be) = AnyFormula.loadBoxes \u03b4 \u03be\nu : W\nM_v_\u03b3_u : relateSeq M \u03b3 v u\nM_u_\u03b2_v : relateSeq M [\u2217\u03b2] u w\nws' : List.Vector W \u03b3.length.succ\nv_def : v = ws'.head\nu_def : u = ws'.last\nws'_rel : \u2200 (i : Fin \u03b3.length), relate M (\u03b3.get i) (ws'.get \u2191\u2191i) (ws'.get i.succ)\nk : Fin \u03b3.length\nsk : PathIn tab\nt_sk : Relation.TransGen (cEdge X tab) t sk\n_in_node_sk : (~''(AnyFormula.loaded (\u230a\u230aList.drop (\u2191k.castSucc) \u03b3\u230b\u230b\u230a\u2217\u03b2\u230b\u03be))).in_side side (nodeAt sk)\nwsk'_sk : (M, ws'[k.castSucc])\u22a8nodeAt sk\nanf_in_sk : ((nodeAt sk).without (~''(AnyFormula.loaded (\u230a\u230aList.drop (\u2191k.castSucc) \u03b3\u230b\u230b\u230a\u2217\u03b2\u230b\u03be)))).isFree = true\n_forTermination : lengthOfProgram \u03b3[k] < lengthOfProgram (\u2217\u03b2)\n\u03b3_ne : \u03b3 \u2260 []\n\u22a2 (M, u)\u22a8~''(AnyFormula.loaded (\u230a\u2217\u03b2\u230b\u03be))",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/4ae88c595711f5a77a374986a5aa2e035178d9c6/Pdl/Soundness.lean#L2504"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-06-03T01:05:02+02:00",
        "inclusion_date": "2025-06-03T05:30:39.403777+00:00"
      },
      "id": "242848f14fa2147164c631a1d6c8d11f5787cd637ffc4a585d357e1f4b9f7209"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "4ae88c595711f5a77a374986a5aa2e035178d9c6",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2543,
        "start_column": 16,
        "end_line": 2543,
        "end_column": 21
      },
      "debug_info": {
        "goal": "case intro.intro.intro.inr.intro.intro.refine_1\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03be : AnyFormula\nside : Side\nw_n\u03be : (M, w)\u22a8~''\u03be\nt0 : PathIn tab\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\n\u03b2 : Program\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u2217\u03b2\u230b\u03be))).in_side side (nodeAt t)\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nw_Y : (M, v)\u22a8Y\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nF : List Formula\n\u03b4 : List Program\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 \u03be)).in_side side Y\nv_F : (M, v)\u22a8F\nF\u03b4_in_H : (F, \u03b4) \u2208 H (\u2217\u03b2)\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 \u03be))).isFree = true\n\u03b4_ne : \u00ac\u03b4 = []\nv_\u03b1_w : Relation.ReflTransGen (relate M \u03b2) v w\nn : \u2115\nws : List.Vector W n.succ\nv_head : v = ws.head\nw_tail : w = ws.last\nrel : \u2200 (i : Fin n), relate M \u03b2 (ws.get i.castSucc) (ws.get i.succ)\n\u03b2star_last : \u03b4.getLast \u03b4_ne = (\u2217\u03b2)\n\u03b3 : List Program := List.take (\u03b4.length - 1) \u03b4\nv_seq_w : relateSeq M (\u03b3 ++ [\u2217\u03b2]) v w\n\u03b4_def : \u03b4 = \u03b3 ++ [\u2217\u03b2]\nhelp : AnyFormula.loaded (\u230a\u230a\u03b3\u230b\u230b\u230a\u2217\u03b2\u230b\u03be) = AnyFormula.loadBoxes \u03b4 \u03be\nu : W\nM_v_\u03b3_u : relateSeq M \u03b3 v u\nM_u_\u03b2_v : relateSeq M [\u2217\u03b2] u w\nws' : List.Vector W \u03b3.length.succ\nv_def : v = ws'.head\nu_def : u = ws'.last\nws'_rel : \u2200 (i : Fin \u03b3.length), relate M (\u03b3.get i) (ws'.get \u2191\u2191i) (ws'.get i.succ)\nclaim :\n  \u2200 (k : Fin \u03b3.length.succ),\n    \u2203 sk,\n      Relation.TransGen (cEdge X tab) t sk \u2227\n        (satisfiable (nodeAt sk) \u2227 \u00accEquiv X tab sk t \u2228\n          (~''(AnyFormula.loaded (\u230a\u230aList.drop (\u2191k) \u03b3\u230b\u230b\u230a\u2217\u03b2\u230b\u03be))).in_side side (nodeAt sk) \u2227\n            (M, ws'[k])\u22a8nodeAt sk \u2227\n              ((nodeAt sk).without (~''(AnyFormula.loaded (\u230a\u230aList.drop (\u2191k) \u03b3\u230b\u230b\u230a\u2217\u03b2\u230b\u03be)))).isFree = true)\nh : u = u\nsn : PathIn tab\nt_sn : Relation.TransGen (cEdge X tab) t sn\nloaded_con : (~''(AnyFormula.loaded (\u230a\u2217\u03b2\u230b\u03be))).in_side side (nodeAt sn)\nw_sn : (M, u)\u22a8nodeAt sn\nwithout_con : ((nodeAt sn).without (~''(AnyFormula.loaded (\u230a\u2217\u03b2\u230b\u03be)))).isFree = true\n\u22a2 (M, ws[0])\u22a8nodeAt sn",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/4ae88c595711f5a77a374986a5aa2e035178d9c6/Pdl/Soundness.lean#L2543"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-06-03T01:05:02+02:00",
        "inclusion_date": "2025-06-03T05:30:39.403777+00:00"
      },
      "id": "df67e6e7e7abafe7eed88afdd4cb36a4aef79af167e92a1c91d841e5884380f5"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "4ae88c595711f5a77a374986a5aa2e035178d9c6",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2564,
        "start_column": 16,
        "end_line": 2564,
        "end_column": 21
      },
      "debug_info": {
        "goal": "case inr.intro.intro.intro.intro\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03be : AnyFormula\nside : Side\nw_n\u03be : (M, w)\u22a8~''\u03be\nt0 : PathIn tab\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\n\u03b2 : Program\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u2217\u03b2\u230b\u03be))).in_side side (nodeAt t)\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nw_Y : (M, v)\u22a8Y\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nF\u271d : List Formula\n\u03b4\u271d : List Program\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4\u271d \u03be)).in_side side Y\nv_seq_w : relateSeq M \u03b4\u271d v w\nv_F : (M, v)\u22a8F\u271d\nF\u03b4_in_H : (F\u271d, \u03b4\u271d) \u2208 H (\u2217\u03b2)\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4\u271d \u03be))).isFree = true\n\u03b4_ne\u271d : \u00ac\u03b4\u271d = []\nv_\u03b1_w : Relation.ReflTransGen (relate M \u03b2) v w\nn : \u2115\nws : List.Vector W n.succ\nv_head : v = ws.head\nw_tail : w = ws.last\nrel : \u2200 (i : Fin n), relate M \u03b2 (ws.get i.castSucc) (ws.get i.succ)\nk : Fin n\nih :\n  \u2203 sk,\n    Relation.TransGen (cEdge X tab) t sk \u2227\n      (satisfiable (nodeAt sk) \u2227 \u00accEquiv X tab sk t \u2228\n        (~''(AnyFormula.loaded (\u230a\u2217\u03b2\u230b\u03be))).in_side side (nodeAt sk) \u2227\n          (M, ws[k.castSucc])\u22a8nodeAt sk \u2227 ((nodeAt sk).without (~''(AnyFormula.loaded (\u230a\u2217\u03b2\u230b\u03be)))).isFree = true \u2227 True)\nne : \u00acws[k.castSucc] = ws[k.succ]\nsk : PathIn tab\nt_sk : Relation.TransGen (cEdge X tab) t sk\n\u03b3 : (~''(AnyFormula.loaded (\u230a\u2217\u03b2\u230b\u03be))).in_side side (nodeAt sk)\ninside_con : (M, ws[k.castSucc])\u22a8nodeAt sk\nwk_sk : ((nodeAt sk).without (~''(AnyFormula.loaded (\u230a\u2217\u03b2\u230b\u03be)))).isFree = true\nF : List Formula\n\u03b4 : List Program\nF\u03b4_in : (F, \u03b4) \u2208 H \u03b2\nwk_F : (M, ws[k.castSucc])\u22a8(F, \u03b4).1\nwk_\u03b4_wk1 : relateSeq M (F, \u03b4).2 ws[k.castSucc] ws[k.succ]\n\u03b4_ne : \u03b4 \u2260 []\nH\u03b2star_prop : (F, \u03b4 ++ [\u2217\u03b2]) \u2208 H (\u2217\u03b2)\n\u22a2 \u2203 sk,\n    Relation.TransGen (cEdge X tab) t sk \u2227\n      (satisfiable (nodeAt sk) \u2227 \u00accEquiv X tab sk t \u2228\n        (~''(AnyFormula.loaded (\u230a\u2217\u03b2\u230b\u03be))).in_side side (nodeAt sk) \u2227\n          (M, ws[k.succ])\u22a8nodeAt sk \u2227 ((nodeAt sk).without (~''(AnyFormula.loaded (\u230a\u2217\u03b2\u230b\u03be)))).isFree = true \u2227 True)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/4ae88c595711f5a77a374986a5aa2e035178d9c6/Pdl/Soundness.lean#L2564"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-05-24T17:50:42+02:00",
        "inclusion_date": "2025-06-03T05:30:39.403777+00:00"
      },
      "id": "f72f53a013a0debbdf7bc8811f98f8c182bdfa330b365c8f2c4cca3469cf00b1"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "4ae88c595711f5a77a374986a5aa2e035178d9c6",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2574,
        "start_column": 10,
        "end_line": 2574,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case inr.intro.intro\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03be : AnyFormula\nside : Side\nw_n\u03be : (M, w)\u22a8~''\u03be\nt0 : PathIn tab\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\n\u03b2 : Program\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u2217\u03b2\u230b\u03be))).in_side side (nodeAt t)\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nw_Y : (M, v)\u22a8Y\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nF : List Formula\n\u03b4 : List Program\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 \u03be)).in_side side Y\nv_seq_w : relateSeq M \u03b4 v w\nv_F : (M, v)\u22a8F\nF\u03b4_in_H : (F, \u03b4) \u2208 H (\u2217\u03b2)\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 \u03be))).isFree = true\n\u03b4_ne : \u00ac\u03b4 = []\nv_\u03b1_w : Relation.ReflTransGen (relate M \u03b2) v w\nn : \u2115\nws : List.Vector W n.succ\nv_head : v = ws.head\nw_tail : w = ws.last\nrel : \u2200 (i : Fin n), relate M \u03b2 (ws.get i.castSucc) (ws.get i.succ)\nclaim :\n  \u2200 (k : Fin n.succ),\n    \u2203 sk,\n      Relation.TransGen (cEdge X tab) t sk \u2227\n        (satisfiable (nodeAt sk) \u2227 \u00accEquiv X tab sk t \u2228\n          (~''(AnyFormula.loaded (\u230a\u2217\u03b2\u230b\u03be))).in_side side (nodeAt sk) \u2227\n            (M, ws[k])\u22a8nodeAt sk \u2227 ((nodeAt sk).without (~''(AnyFormula.loaded (\u230a\u2217\u03b2\u230b\u03be)))).isFree = true \u2227 True)\nh : w = w\nsn : PathIn tab\nt_sn : Relation.TransGen (cEdge X tab) t sn\nloaded_con : (~''(AnyFormula.loaded (\u230a\u2217\u03b2\u230b\u03be))).in_side side (nodeAt sn)\nw_sn : (M, w)\u22a8nodeAt sn\nwithout_con : ((nodeAt sn).without (~''(AnyFormula.loaded (\u230a\u2217\u03b2\u230b\u03be)))).isFree = true \u2227 True\n\u03b1_natom : \u00ac(\u2217\u03b2).isAtomic\n\u22a2 \u2203 s,\n    Relation.TransGen (cEdge X tab) t s \u2227\n      (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n        (~''\u03be).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 ((nodeAt s).without (~''\u03be)).isFree = true)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/4ae88c595711f5a77a374986a5aa2e035178d9c6/Pdl/Soundness.lean#L2574"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-05-24T17:50:42+02:00",
        "inclusion_date": "2025-06-03T05:30:39.403777+00:00"
      },
      "id": "a0c1443c21185504279605b74f3a12435191fd2dc7f1d606331c2b9884bc9e67"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "Ferinko/4.21.0-rc3",
        "commit": "2256d242b01c970877f0cab34ff6e9a2421bb0c8",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/LiftContext.lean",
        "start_line": 346,
        "start_column": 6,
        "end_line": 346,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case a\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlens : StatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\nouterLangIn : Set OuterStmtIn\nouterLangOut : Set OuterStmtOut\ninnerLangIn : Set InnerStmtIn\ninnerLangOut : Set InnerStmtOut\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nlensSound :\n  StatementLens.IsSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut outerLangIn outerLangOut innerLangIn\n    innerLangOut (Verifier.compatStatement n pSpec \u03b9 oSpec OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens V)\n    lens\nstF : StateFunction pSpec oSpec innerLangIn innerLangOut V\nouterStmtIn : OuterStmtIn\ntranscript : Transcript (Fin.last n) pSpec\nhStmt :\n  stF.toFun (Fin.last n) (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens outerStmtIn)\n      transcript =\n    False\nh :\n  \u2200\n    x \u2208\n      (V.verify (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens outerStmtIn)\n          transcript).support,\n    x \u2209 innerLangOut\ninnerStmtOut : InnerStmtOut\nhSupport :\n  innerStmtOut \u2208\n    (V.verify (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens outerStmtIn)\n        transcript).support\n\u22a2 outerStmtIn \u2209 outerLangIn",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/2256d242b01c970877f0cab34ff6e9a2421bb0c8/ArkLib/OracleReduction/Composition/LiftContext.lean#L346"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-02T21:57:20+07:00",
        "inclusion_date": "2025-06-06T07:12:18.489282+00:00"
      },
      "id": "f5e0a0ec76aba43e2e70cabd3a4ed05b1b6f7ec0aa9814aa33afff70534762c5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/LiftContext/Basic.lean",
        "start_line": 666,
        "start_column": 2,
        "end_line": 666,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut : Type\ninst\u271d\u00b2 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : Inhabited InnerStmtOut\nouterLangIn : Set OuterStmtIn\nouterLangOut : Set OuterStmtOut\ninnerLangIn : Set InnerStmtIn\ninnerLangOut : Set InnerStmtOut\nsoundnessError : NNReal\nlens : StatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nlensSound :\n  StatementLens.IsSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut outerLangIn outerLangOut innerLangIn\n    innerLangOut (Verifier.compatStatement n pSpec \u03b9 oSpec OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens V)\n    lens\nWitIn WitOut : Type\nouterWitIn : WitIn\nouterP : Prover pSpec oSpec OuterStmtIn WitIn OuterStmtOut WitOut\nouterStmtIn : OuterStmtIn\nhOuterStmtIn : outerStmtIn \u2209 outerLangIn\nh :\n  \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec InnerStmtIn WitIn InnerStmtOut WitOut),\n    \u2200 stmtIn \u2209 innerLangIn,\n      [fun x => x.2.1 \u2208 innerLangOut|do\n          let __discr \u2190 Prover.run stmtIn witIn prover\n          (fun a => ((__discr.1, __discr.2.1), a, __discr.2.2)) <$>\n              (run stmtIn __discr.2.2 V).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)] \u2264\n        \u2191soundnessError\ninnerP : Prover pSpec oSpec InnerStmtIn WitIn InnerStmtOut WitOut\nthis : StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens outerStmtIn \u2209 innerLangIn\nhSound :\n  [fun x => x.2.1 \u2208 innerLangOut|do\n      let __discr \u2190\n        Prover.run (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens outerStmtIn)\n            outerWitIn innerP\n      (fun a => ((__discr.1, __discr.2.1), a, __discr.2.2)) <$>\n          (run (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens outerStmtIn) __discr.2.2\n                V).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)] \u2264\n    \u2191soundnessError\n\u22a2 [fun x => x.2.1 \u2208 outerLangOut|do\n      let __discr \u2190 Prover.run outerStmtIn outerWitIn outerP\n      (fun a =>\n            ((__discr.1, __discr.2.1),\n              StatementLens.liftStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens (outerStmtIn, a),\n              __discr.2.2)) <$>\n          (V.verify (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens outerStmtIn)\n                __discr.2.2).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)] \u2264\n    [fun x => x.2.1 \u2208 innerLangOut|do\n      let __discr \u2190\n        Prover.run (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens outerStmtIn)\n            outerWitIn innerP\n      (fun a => ((__discr.1, __discr.2.1), a, __discr.2.2)) <$>\n          (V.verify (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens outerStmtIn)\n                __discr.2.2).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)]",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/OracleReduction/LiftContext/Basic.lean#L666"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "f71c3f4cadc7c2e2ca9b839d42899ef9cacf1dcffa5880940fd39b7d0f628a69"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/LiftContext.lean",
        "start_line": 594,
        "start_column": 4,
        "end_line": 594,
        "end_column": 9
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d\u00b2 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : Inhabited InnerStmtOut\nouterRelIn : OuterStmtIn \u2192 OuterWitIn \u2192 Prop\nouterRelOut : OuterStmtOut \u2192 OuterWitOut \u2192 Prop\ninnerRelIn : InnerStmtIn \u2192 InnerWitIn \u2192 Prop\ninnerRelOut : InnerStmtOut \u2192 InnerWitOut \u2192 Prop\nknowledgeError : NNReal\nlens : ContextLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensInv : WitnessLensInv OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensKnowledgeSound :\n  ContextLens.IsKnowledgeSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn\n    InnerWitOut outerRelIn innerRelIn outerRelOut innerRelOut (fun x x => True) lensInv lens\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nE : StraightlineExtractor pSpec oSpec InnerStmtIn InnerWitIn InnerWitOut\nh' :\n  \u2200 (stmtIn : InnerStmtIn) (witIn : InnerWitIn)\n    (prover : Prover pSpec oSpec InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut),\n    [fun x =>\n        match x with\n        | ((fst, witOut), stmtOut, transcript, proveQueryLog, verifyQueryLog) =>\n          \u00acinnerRelIn stmtIn (E witOut stmtIn transcript proveQueryLog.fst verifyQueryLog) \u2227\n            innerRelOut stmtOut witOut|Reduction.runWithLog stmtIn witIn { prover := prover, verifier := V }] \u2264\n      \u2191knowledgeError\nouterStmtIn : OuterStmtIn\nouterWitIn : OuterWitIn\nouterP : Prover pSpec oSpec OuterStmtIn OuterWitIn OuterStmtOut OuterWitOut\ninnerP : Prover pSpec oSpec InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut :=\n  { toProverState := outerP.toProverState, input := fun x x => outerP.input outerStmtIn outerWitIn,\n    sendMessage := outerP.sendMessage, receiveChallenge := outerP.receiveChallenge,\n    output := fun state =>\n      @Prover.liftContext.match_4 OuterStmtOut OuterWitOut (fun x => InnerStmtOut \u00d7 InnerWitOut) (outerP.output state)\n        fun outerStmtOut outerWitOut =>\n        (default, WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv outerWitOut) }\nh_innerP_input :\n  \u2200 {innerStmtIn : InnerStmtIn} {innerWitIn : InnerWitIn},\n    innerP.input innerStmtIn innerWitIn = outerP.input outerStmtIn outerWitIn\nhR :\n  [fun x =>\n      \u00acinnerRelIn\n            (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n              (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerStmtIn)\n            (E x.1.2\n              (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                  InnerWitIn InnerWitOut lens)\n                outerStmtIn)\n              x.2.2.1 x.2.2.2.1.fst x.2.2.2.2) \u2227\n        innerRelOut x.2.1 x.1.2|do\n      let __discr \u2190\n        Prover.runWithLog\n            (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n              (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerStmtIn)\n            (WitnessLens.projWit OuterWitIn OuterWitOut InnerWitIn InnerWitOut\n              (ContextLens.toWitnessLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerWitIn)\n            innerP\n      (fun a => ((__discr.1, __discr.2.1), a.1, __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (V.verify\n                    (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                      (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn\n                        OuterWitOut InnerWitIn InnerWitOut lens)\n                      outerStmtIn)\n                    __discr.2.2.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)] \u2264\n    \u2191knowledgeError\ninnerStmtIn : InnerStmtIn\ninnerWitIn : InnerWitIn\n\u22a2 Prover.runWithLog innerStmtIn innerWitIn innerP = do\n    let __discr \u2190 Prover.runWithLog outerStmtIn outerWitIn outerP\n    @Verifier.liftContext_knowledgeSoundness.match_1 n pSpec \u03b9 oSpec OuterStmtOut OuterWitOut\n        (fun __discr =>\n          OracleComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n            (InnerStmtOut \u00d7 InnerWitOut \u00d7 pSpec.FullTranscript \u00d7 (oSpec ++\u2092 [pSpec.Challenge]\u2092).QueryLog))\n        __discr fun fst outerWitOut rest =>\n        pure (default, WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv outerWitOut, rest)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/OracleReduction/Composition/LiftContext.lean#L594"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-02T21:57:20+07:00",
        "inclusion_date": "2025-06-03T06:32:48.384768+00:00"
      },
      "id": "91943912b1d3fca5ab6c04707d1681a6ee0983e5ef69f9d95a1020490e8ce4aa"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/LiftContext.lean",
        "start_line": 599,
        "start_column": 2,
        "end_line": 599,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d\u00b2 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : Inhabited InnerStmtOut\nouterRelIn : OuterStmtIn \u2192 OuterWitIn \u2192 Prop\nouterRelOut : OuterStmtOut \u2192 OuterWitOut \u2192 Prop\ninnerRelIn : InnerStmtIn \u2192 InnerWitIn \u2192 Prop\ninnerRelOut : InnerStmtOut \u2192 InnerWitOut \u2192 Prop\nknowledgeError : NNReal\nlens : ContextLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensInv : WitnessLensInv OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensKnowledgeSound :\n  ContextLens.IsKnowledgeSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn\n    InnerWitOut outerRelIn innerRelIn outerRelOut innerRelOut (fun x x => True) lensInv lens\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nE : StraightlineExtractor pSpec oSpec InnerStmtIn InnerWitIn InnerWitOut\nh' :\n  \u2200 (stmtIn : InnerStmtIn) (witIn : InnerWitIn)\n    (prover : Prover pSpec oSpec InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut),\n    [fun x =>\n        match x with\n        | ((fst, witOut), stmtOut, transcript, proveQueryLog, verifyQueryLog) =>\n          \u00acinnerRelIn stmtIn (E witOut stmtIn transcript proveQueryLog.fst verifyQueryLog) \u2227\n            innerRelOut stmtOut witOut|Reduction.runWithLog stmtIn witIn { prover := prover, verifier := V }] \u2264\n      \u2191knowledgeError\nouterStmtIn : OuterStmtIn\nouterWitIn : OuterWitIn\nouterP : Prover pSpec oSpec OuterStmtIn OuterWitIn OuterStmtOut OuterWitOut\ninnerP : Prover pSpec oSpec InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut :=\n  { toProverState := outerP.toProverState, input := fun x x => outerP.input outerStmtIn outerWitIn,\n    sendMessage := outerP.sendMessage, receiveChallenge := outerP.receiveChallenge,\n    output := fun state =>\n      @Prover.liftContext.match_4 OuterStmtOut OuterWitOut (fun x => InnerStmtOut \u00d7 InnerWitOut) (outerP.output state)\n        fun outerStmtOut outerWitOut =>\n        (default, WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv outerWitOut) }\nh_innerP_input :\n  \u2200 {innerStmtIn : InnerStmtIn} {innerWitIn : InnerWitIn},\n    innerP.input innerStmtIn innerWitIn = outerP.input outerStmtIn outerWitIn\nhR :\n  [fun x =>\n      \u00acinnerRelIn\n            (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n              (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerStmtIn)\n            (E x.1.2\n              (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                  InnerWitIn InnerWitOut lens)\n                outerStmtIn)\n              x.2.2.1 x.2.2.2.1.fst x.2.2.2.2) \u2227\n        innerRelOut x.2.1 x.1.2|do\n      let __discr \u2190\n        Prover.runWithLog\n            (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n              (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerStmtIn)\n            (WitnessLens.projWit OuterWitIn OuterWitOut InnerWitIn InnerWitOut\n              (ContextLens.toWitnessLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerWitIn)\n            innerP\n      (fun a => ((__discr.1, __discr.2.1), a.1, __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (V.verify\n                    (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                      (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn\n                        OuterWitOut InnerWitIn InnerWitOut lens)\n                      outerStmtIn)\n                    __discr.2.2.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)] \u2264\n    \u2191knowledgeError\nh_innerP_runWithLog :\n  \u2200 {innerStmtIn : InnerStmtIn} {innerWitIn : InnerWitIn},\n    Prover.runWithLog innerStmtIn innerWitIn innerP = do\n      let __discr \u2190 Prover.runWithLog outerStmtIn outerWitIn outerP\n      @Verifier.liftContext_knowledgeSoundness.match_1 n pSpec \u03b9 oSpec OuterStmtOut OuterWitOut\n          (fun __discr =>\n            OracleComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n              (InnerStmtOut \u00d7 InnerWitOut \u00d7 pSpec.FullTranscript \u00d7 (oSpec ++\u2092 [pSpec.Challenge]\u2092).QueryLog))\n          __discr fun fst outerWitOut rest =>\n          pure (default, WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv outerWitOut, rest)\n\u22a2 [fun x =>\n      \u00acouterRelIn outerStmtIn\n            (WitnessLens.liftWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv\n              (x.1.2,\n                E (WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv x.1.2)\n                  (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                    (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn\n                      OuterWitOut InnerWitIn InnerWitOut lens)\n                    outerStmtIn)\n                  x.2.2.1 x.2.2.2.1.fst x.2.2.2.2)) \u2227\n        outerRelOut x.2.1 x.1.2|do\n      let __discr \u2190 Prover.runWithLog outerStmtIn outerWitIn outerP\n      (fun a =>\n            ((__discr.1, __discr.2.1),\n              StatementLens.liftStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                  InnerWitIn InnerWitOut lens)\n                (outerStmtIn, a.1),\n              __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (V.verify\n                    (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                      (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn\n                        OuterWitOut InnerWitIn InnerWitOut lens)\n                      outerStmtIn)\n                    __discr.2.2.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)] \u2264\n    [fun x =>\n      \u00acinnerRelIn\n            (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n              (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerStmtIn)\n            (E x.1.2\n              (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                  InnerWitIn InnerWitOut lens)\n                outerStmtIn)\n              x.2.2.1 x.2.2.2.1.fst x.2.2.2.2) \u2227\n        innerRelOut x.2.1 x.1.2|do\n      let a \u2190 Prover.runWithLog outerStmtIn outerWitIn outerP\n      (fun a_1 =>\n            ((default, WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv a.2.1), a_1.1, a.2.2.1,\n              a.2.2.2, a_1.2)) <$>\n          (simulateQ loggingOracle\n                  (V.verify\n                    (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                      (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn\n                        OuterWitOut InnerWitIn InnerWitOut lens)\n                      outerStmtIn)\n                    a.2.2.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)]",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/OracleReduction/Composition/LiftContext.lean#L599"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-03T06:32:48.384768+00:00"
      },
      "id": "bd55f61a65f232d855ab57ae78562de56c33e283ed05ab0ab6eb8c7b775677cc"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "Ferinko/4.21.0-rc3",
        "commit": "2256d242b01c970877f0cab34ff6e9a2421bb0c8",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/LiftContext.lean",
        "start_line": 618,
        "start_column": 2,
        "end_line": 618,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nouterLangIn : Set OuterStmtIn\nouterLangOut : Set OuterStmtOut\ninnerLangIn : Set InnerStmtIn\ninnerLangOut : Set InnerStmtOut\nrbrSoundnessError : pSpec.ChallengeIdx \u2192 NNReal\nlens : StatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nlensSound :\n  StatementLens.IsSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut outerLangIn outerLangOut innerLangIn\n    innerLangOut (Verifier.compatStatement n pSpec \u03b9 oSpec OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens V)\n    lens\nstF : StateFunction pSpec oSpec innerLangIn innerLangOut V\nh :\n  \u2200 stmtIn \u2209 innerLangIn,\n    \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec InnerStmtIn WitIn InnerStmtOut WitOut)\n      (i : pSpec.ChallengeIdx),\n      let ex := do\n        let __do_lift \u2190 Prover.runWithLogToRound (\u2191i).castSucc stmtIn witIn prover\n        let __do_lift_1 \u2190 liftM (pSpec.getChallenge i)\n        pure (__do_lift, __do_lift_1);\n      [fun x =>\n          match x with\n          | ((transcript, snd), challenge) =>\n            \u00acstF.toFun (\u2191i).castSucc stmtIn transcript \u2227\n              stF.toFun (\u2191i).succ stmtIn (Transcript.snoc challenge transcript)|ex] \u2264\n        \u2191(rbrSoundnessError i)\n\u22a2 \u2203 stateFunction,\n    \u2200 stmtIn \u2209 outerLangIn,\n      \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec OuterStmtIn WitIn OuterStmtOut WitOut)\n        (i : pSpec.ChallengeIdx),\n        let ex := do\n          let __do_lift \u2190 Prover.runWithLogToRound (\u2191i).castSucc stmtIn witIn prover\n          let __do_lift_1 \u2190 liftM (pSpec.getChallenge i)\n          pure (__do_lift, __do_lift_1);\n        [fun x =>\n            match x with\n            | ((transcript, snd), challenge) =>\n              \u00acstateFunction.toFun (\u2191i).castSucc stmtIn transcript \u2227\n                stateFunction.toFun (\u2191i).succ stmtIn (Transcript.snoc challenge transcript)|ex] \u2264\n          \u2191(rbrSoundnessError i)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/2256d242b01c970877f0cab34ff6e9a2421bb0c8/ArkLib/OracleReduction/Composition/LiftContext.lean#L618"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-06T07:12:18.489282+00:00"
      },
      "id": "9c6e37c3077b1c605721678b53a3a67f6f17f1c7c0e1ee67f1b2bd960b163e61"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "Ferinko/4.21.0-rc3",
        "commit": "2256d242b01c970877f0cab34ff6e9a2421bb0c8",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/LiftContext.lean",
        "start_line": 637,
        "start_column": 2,
        "end_line": 637,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nouterRelIn : OuterStmtIn \u2192 OuterWitIn \u2192 Prop\nouterRelOut : OuterStmtOut \u2192 OuterWitOut \u2192 Prop\ninnerRelIn : InnerStmtIn \u2192 InnerWitIn \u2192 Prop\ninnerRelOut : InnerStmtOut \u2192 InnerWitOut \u2192 Prop\nrbrKnowledgeError : pSpec.ChallengeIdx \u2192 NNReal\nlens : ContextLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensInv : WitnessLensInv OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensKnowledgeSound :\n  ContextLens.IsKnowledgeSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn\n    InnerWitOut outerRelIn innerRelIn outerRelOut innerRelOut (fun x x => True) lensInv lens\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nh : rbrKnowledgeSoundness innerRelIn innerRelOut V rbrKnowledgeError\n\u22a2 rbrKnowledgeSoundness outerRelIn outerRelOut\n    (Verifier.liftContext n pSpec \u03b9 oSpec OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n      (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn\n        InnerWitOut lens)\n      V)\n    rbrKnowledgeError",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/2256d242b01c970877f0cab34ff6e9a2421bb0c8/ArkLib/OracleReduction/Composition/LiftContext.lean#L637"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-06T07:12:18.489282+00:00"
      },
      "id": "0406d6bc25432f6da6774af5f7faa5e2ab75c63d6a48bec3abe4f40080725ff4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "Ferinko/4.21.0-rc3",
        "commit": "2256d242b01c970877f0cab34ff6e9a2421bb0c8",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Security/Basic.lean",
        "start_line": 426,
        "start_column": 2,
        "end_line": 426,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nStmtIn WitIn StmtOut WitOut : Type\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nknowledgeError : NNReal\nhLt : knowledgeError < 1\nextractor : @StraightlineExtractor n pSpec \u03b9 oSpec StmtIn WitIn WitOut\nhKS :\n  \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n    [fun x =>\n        \u00acrelIn stmtIn (@extractor x.1.2 stmtIn x.2.2.1 x.2.2.2.1.fst x.2.2.2.2) \u2227\n          relOut x.2.1 x.1.2|Reduction.runWithLog stmtIn witIn { prover := prover, verifier := verifier }] \u2264\n      \u2191knowledgeError\nWitIn' WitOut' : Type\nwitIn' : WitIn'\nprover : Prover pSpec oSpec StmtIn WitIn' StmtOut WitOut'\nstmtIn : StmtIn\nhStmtIn : \u2200 (x : WitIn), \u00acrelIn stmtIn x\n\u22a2 [fun x => \u2203 wit, relOut x.2.1 wit|Reduction.run stmtIn witIn' { prover := prover, verifier := verifier }] \u2264\n    \u2191knowledgeError",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/2256d242b01c970877f0cab34ff6e9a2421bb0c8/ArkLib/OracleReduction/Security/Basic.lean#L426"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-06-06T07:12:18.489282+00:00"
      },
      "id": "c3b985d7683f46ad6202f88106c9eabe9ae263129c3e41a89990d26b0473e2e6"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 18,
        "start_column": 15,
        "end_line": 18,
        "end_column": 20
      },
      "debug_info": {
        "goal": "b h v : \u211d\nh\u2080 : 0 < b \u2227 0 < h \u2227 0 < v\nh\u2081 : v = 1 / 3 * (b * h)\nh\u2082 : b = 30\nh\u2083 : h = 13 / 2\n\u22a2 v = 65",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L18"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "fb0bf1aa5b8a5e4f2775c1d087531113c0d86b819cf984e87360d2b40b6843e2"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 22,
        "start_column": 33,
        "end_line": 22,
        "end_column": 38
      },
      "debug_info": {
        "goal": "x y : \u2124\n\u22a2 4 * x ^ 3 - 7 * y ^ 3 \u2260 2003",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L22"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "ade1c4c370bbc92b6e6035f1a0dabe2b897fb574931b5d9cd46f59f130baec6b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 26,
        "start_column": 87,
        "end_line": 26,
        "end_column": 92
      },
      "debug_info": {
        "goal": "x y z w : \u2115\nht : 1 < x \u2227 1 < y \u2227 1 < z\nhw : 0 \u2264 w\nh0 : Real.log \u2191w / Real.log \u2191x = 24\nh1 : Real.log \u2191w / Real.log \u2191y = 40\nh2 : Real.log \u2191w / Real.log (\u2191x * \u2191y * \u2191z) = 12\n\u22a2 Real.log \u2191w / Real.log \u2191z = 60",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L26"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "78a3d7acec6032a97d05780cd22175db83ccf40a7e25fe5d191a5708d038e647"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 29,
        "start_column": 122,
        "end_line": 29,
        "end_column": 127
      },
      "debug_info": {
        "goal": "\u22a2 {x \u2208 Finset.range 10000 | \u00acEven x}.prod id = factorial 10000 / (2 ^ 5000 * factorial 5000)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "a5c139823785ccb777d16c0228fa736939fa388e423631d67d7f75a6a91dfac7"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 36,
        "start_column": 5,
        "end_line": 36,
        "end_column": 10
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2081 : a * b = 180\nh\u2082 : 2 * (a + b) = 54\n\u22a2 a ^ 2 + b ^ 2 = 369",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "58990eecf4c3d70b33cf83855b6a3b8a4fc2d645518d0c4fe40e1544dabed487"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 39,
        "start_column": 54,
        "end_line": 39,
        "end_column": 59
      },
      "debug_info": {
        "goal": "\u22a2 (\u2211 x \u2208 Finset.range 10, (x + 1) ^ 2) % 10 = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "c18292d1e3f75deed2d1e04825b3da9cd3e0f3b0ccb1ff2cbc0df89714cbc387"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 50,
        "start_column": 31,
        "end_line": 50,
        "end_column": 36
      },
      "debug_info": {
        "goal": "m n : \u211d\nk : \u2115\na : \u2115 \u2192 \u211d\ny : \u211d \u2192 \u211d\nh\u2080 : 0 < k\nh\u2081 : \u2200 (x : \u211d), y x = \u2211 i \u2208 Finset.range k, cos (a i + x) / 2 ^ i\nh\u2082 : y m = 0\nh\u2083 : y n = 0\n\u22a2 \u2203 t, m - n = \u2191t * Real.pi",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L50"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "d3b3d0b5cfac48a1ba5e5ce6faab24ae00fe2937a30dc26ddb06991f5eb57a33"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 56,
        "start_column": 22,
        "end_line": 56,
        "end_column": 27
      },
      "debug_info": {
        "goal": "s t : \u211d\nh\u2080 : s = 9 - 2 * t\nh\u2081 : t = 3 * s + 1\n\u22a2 s = 1 \u2227 t = 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L56"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "5640c5f67dff1a833d89d84a7897d4b077d9400e11721cb51c4cf248f92761c4"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 63,
        "start_column": 25,
        "end_line": 63,
        "end_column": 30
      },
      "debug_info": {
        "goal": "\u03c3 : \u211d \u2243 \u211d\nh\u2080 : \u03c3.invFun 2 = 10\nh\u2081 : \u03c3.invFun 10 = 1\nh\u2082 : \u03c3.invFun 1 = 2\n\u22a2 \u03c3.toFun (\u03c3.toFun 10) = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L63"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "0de182ad7a3c193a6318209fe7e005a983d1782f011a1fc6a5e9b16893f3b0c4"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 69,
        "start_column": 14,
        "end_line": 69,
        "end_column": 19
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : n \u2264 9\nh\u2081 : 18 \u2223 374 * 10 + n\n\u22a2 n = 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "bcf3d03f1c21145420fe75258e4d899fa08bbef160e491a5297425af652ad3c2"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 77,
        "start_column": 70,
        "end_line": 77,
        "end_column": 75
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : c < a + b\nh\u2082 : b < a + c\nh\u2083 : a < b + c\n\u22a2 0 \u2264 a ^ 2 * b * (a - b) + b ^ 2 * c * (b - c) + c ^ 2 * a * (c - a)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "8bbff37944b1618b20b166a61cce10fb8242f68ffc7c3cef6a6fbb810f2ee0c5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 80,
        "start_column": 46,
        "end_line": 80,
        "end_column": 51
      },
      "debug_info": {
        "goal": "\u22a2 (\u2211 k \u2208 Finset.range 101, k) % 6 = 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "46afdc8ee03e27f6c00ccc786108b56d610fedea77aca9d270e959f3315e15b0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 87,
        "start_column": 23,
        "end_line": 87,
        "end_column": 28
      },
      "debug_info": {
        "goal": "x y z : \u211d\nh\u2080 : x \u2260 0\nh\u2081 : 2 * x = 5 * y\nh\u2082 : 7 * y = 10 * z\n\u22a2 z / x = 7 / 25",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L87"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "df43e6e41675e2f50cbad3f0947f6013666b75d28702fdf7dba593724b905e85"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 92,
        "start_column": 18,
        "end_line": 92,
        "end_column": 23
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : 2 + 1 / (1 + 1 / (2 + 2 / (3 + x))) = 144 / 53\n\u22a2 x = 3 / 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L92"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "b443962c602775c18aae0b8df7c03fb3e674a0a7403cdf01e3b26d37bcf059dd"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 95,
        "start_column": 47,
        "end_line": 95,
        "end_column": 52
      },
      "debug_info": {
        "goal": "\u22a2 1 * 3 * 5 * 7 * 9 * 11 * 13 % 10 = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "39fe1c439a071a445bbbcc020c0a0a151fa8e37545de78df78632ba290f1123c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 98,
        "start_column": 106,
        "end_line": 98,
        "end_column": 111
      },
      "debug_info": {
        "goal": "\u22a2 (100 ^ 2 - 7 ^ 2) / (70 ^ 2 - 11 ^ 2) * ((70 - 11) * (70 + 11) / ((100 - 7) * (100 + 7))) = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L98"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "e23ad03e39573a4a66d4303625b7d3c3eb4b240eb2e98a9e57535aeb5a005b5e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 103,
        "start_column": 28,
        "end_line": 103,
        "end_column": 33
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : a ^ 2 + b ^ 2 = 1\n\u22a2 a * b + |a - b| \u2264 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L103"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "07931fc6219cc3059f2a48f3e1c6c07252685d66c76bd28e82056a999434e40d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 109,
        "start_column": 29,
        "end_line": 109,
        "end_column": 34
      },
      "debug_info": {
        "goal": "f : \u2115 \u2192 \u2115\nh\u2080 : \u2200 (n : \u2115), 0 < f n\nh\u2081 : \u2200 (n : \u2115), 0 < n \u2192 f (f n) < f (n + 1)\n\u22a2 \u2200 (n : \u2115), 0 < n \u2192 f n = n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L109"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "838def125df860a51b59fa19e3f981e6b547a60e9eacee6206bd283356dd0d83"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 115,
        "start_column": 37,
        "end_line": 115,
        "end_column": 42
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : a = -1\nh\u2081 : b = 5\n\u22a2 -a - b ^ 2 + 3 * (a * b) = -39",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L115"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "c153a8fcc9fc2949940e24f7dec34b460e4cc2f0d5fdfa79acf4ca960b388ec3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 121,
        "start_column": 35,
        "end_line": 121,
        "end_column": 40
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\nh\u2081 : logb 2 (logb 16 \u2191n) = logb 4 (logb 4 \u2191n)\n\u22a2 (digits 10 n).sum = 13",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L121"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "2bead04834252bc46c91da69a9fe0b02a7a36a464dde641a34f53243b5b1f885"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 129,
        "start_column": 34,
        "end_line": 129,
        "end_column": 39
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : 0 \u2264 1 + 2 * x\nh\u2081 : (1 - \u221a(1 + 2 * x)) ^ 2 \u2260 0\nh\u2082 : 4 * x ^ 2 / (1 - \u221a(1 + 2 * x)) ^ 2 < 2 * x + 9\nh\u2083 : x \u2260 0\n\u22a2 -(1 / 2) \u2264 x \u2227 x < 45 / 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L129"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "5147de68938cb8516328df00b920f53ef85ccaf1c5911eeeb8b66402181bc2c0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 134,
        "start_column": 74,
        "end_line": 134,
        "end_column": 79
      },
      "debug_info": {
        "goal": "a : \u2115\nh\u2080 : a = \u2211 k \u2208 divisors 500, k\n\u22a2 \u2211 k \u2208 {x \u2208 a.divisors | Nat.Prime x}, k = 25",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L134"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "c64e8ae41ee8d7d3c9ff86869731d6020e224b1273035eeb4f30300da75e69f1"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 138,
        "start_column": 22,
        "end_line": 138,
        "end_column": 27
      },
      "debug_info": {
        "goal": "x y : \u2124\n\u22a2 x ^ 5 \u2260 y ^ 2 + 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "46097fe76cda9ec5080091fecf0b1baa6480c3d62efdad91fa64d606347d9d2b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 145,
        "start_column": 24,
        "end_line": 145,
        "end_column": 29
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : 9 * b = 20 * c\nh\u2082 : 7 * a = 4 * b\n\u22a2 63 * a = 80 * c",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L145"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "58f01739e340f8343e13fe228ddb1b7ec5caef23ecea01d619960f4cc1b6a852"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 148,
        "start_column": 79,
        "end_line": 148,
        "end_column": 84
      },
      "debug_info": {
        "goal": "\u22a2 cos (Real.pi / 7) - cos (2 * Real.pi / 7) + cos (3 * Real.pi / 7) = 1 / 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L148"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "61f1b4a1cfdcd8ca34215b23fe0b183d83026131bfa8f9ef51d7eaaecb37042b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 161,
        "start_column": 22,
        "end_line": 161,
        "end_column": 27
      },
      "debug_info": {
        "goal": "a b c : \u2115\nh\u2080 : 1 \u2264 a \u2227 a \u2264 9\nh\u2081 : 1 \u2264 b \u2227 b \u2264 9\nh\u2082 : 1 \u2264 c \u2227 c \u2264 9\nh\u2083 : a \u2260 b\nh\u2084 : a \u2260 c\nh\u2085 : b \u2260 c\nh\u2086 : a + b = c\nh\u2087 : 10 * a + a - b = 2 * c\nh\u2088 : c * b = 10 * a + a + a\n\u22a2 a + b + c = 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L161"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "5db88b1d68c88650e39082b6b6c32aeeb44052d396f70f8a1a799a40c8e04620"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 169,
        "start_column": 28,
        "end_line": 169,
        "end_column": 33
      },
      "debug_info": {
        "goal": "a b c d : \u211a\nh\u2080 : 3 * a = b + c + d\nh\u2081 : 4 * b = a + c + d\nh\u2082 : 2 * c = a + b + d\nh\u2083 : 8 * a + 10 * b + 6 * c = 24\n\u22a2 \u2191d.den + d.num = 28",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L169"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "b4966fbe3d8f86c48af13a8f11893512aded6998ca076171ebedb5fcc0d2a0d3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 173,
        "start_column": 26,
        "end_line": 173,
        "end_column": 31
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 12 \u2223 4 ^ (n + 1) + 20",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L173"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "3e84496ed407fc92ba26a853500eacb9ec348f67dce9d1f8c9ff2731a7174e58"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 182,
        "start_column": 23,
        "end_line": 182,
        "end_column": 28
      },
      "debug_info": {
        "goal": "x : \u211d\na b c : \u2115\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 \u2264 x\nh\u2081 : 2 * x ^ 2 = 4 * x + 9\nh\u2082 : x = (\u2191a + \u221a\u2191b) / \u2191c\nh\u2083 : c = 2\n\u22a2 a + b + c = 26",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L182"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "b074ac4fb6a6d39e3f777da3d5be0b4bb630e5cf55f600d43dc77f0848da18fe"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 187,
        "start_column": 16,
        "end_line": 187,
        "end_column": 21
      },
      "debug_info": {
        "goal": "x : \u2115\nh\u2080 : \u2191x + 4 / 100 * \u2191x = 598\n\u22a2 x = 575",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L187"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "d527220de93cdee1643c9e21999d95b2f73e4d9fa546c35abd726fee8cdd4487"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 193,
        "start_column": 62,
        "end_line": 193,
        "end_column": 67
      },
      "debug_info": {
        "goal": "x y : \u2115\nh\u2080 : 0 < x \u2227 0 < y\nh\u2081 : x ^ y ^ 2 = y ^ x\n\u22a2 (x, y) = (1, 1) \u2228 (x, y) = (16, 2) \u2228 (x, y) = (27, 3)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L193"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "20c5a60d9121db05c2d4c1462c8d126d98385015fdfcb770bb66ce6f9dc42037"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 199,
        "start_column": 19,
        "end_line": 199,
        "end_column": 24
      },
      "debug_info": {
        "goal": "m n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\n\u22a2 60 \u2264 m + n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L199"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "fdc32b3c50cbbd1f6a7efc3d76bab4441884ea37a40ab391e882628743f71b88"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 206,
        "start_column": 15,
        "end_line": 206,
        "end_column": 20
      },
      "debug_info": {
        "goal": "x y : \u2115\nh\u2080 : x % 3 = 2\nh\u2081 : y % 5 = 4\nh\u2082 : x % 10 = y % 10\n\u22a2 14 \u2264 x",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L206"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "93bfa513bfc68afd0b16586290c333fb6e70b742d4d7edfb8f159c38d45bc1c2"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 212,
        "start_column": 24,
        "end_line": 212,
        "end_column": 29
      },
      "debug_info": {
        "goal": "n x : \u211d\nh\u2080 : n + x = 97\nh\u2081 : n + 5 * x = 265\n\u22a2 n + 2 * x = 139",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L212"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "e7e357a9f1f5226b7ff04817ab41538cfa8f30b62eddbcbb0f5c86997d3c1ce0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 217,
        "start_column": 17,
        "end_line": 217,
        "end_column": 22
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : x / 50 = 40\n\u22a2 x = 2000",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L217"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "b726be80e73b9c48803d3874af70cd5f4fab3c18ac000df06163f1004d28ed91"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 221,
        "start_column": 42,
        "end_line": 221,
        "end_column": 47
      },
      "debug_info": {
        "goal": "x : \u211d\n\u22a2 (x + 1) ^ 2 * x = x ^ 3 + 2 * x ^ 2 + x",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L221"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "005c19691cc9348b576ccb0fd4aab32c88e5da8ae89d757e3cd1236e96ece8d0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 226,
        "start_column": 25,
        "end_line": 226,
        "end_column": 30
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 3 \u2264 n\n\u22a2 n.factorial < n ^ (n - 1)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L226"
      },
      "metadata": {
        "blame_email_hash": "4962457dacbf",
        "blame_date": "2025-02-20T22:39:08-06:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "a0fb1a88d45ccfe990892f8526a737f245cfeb2b9aefc64c165a09e680ca9788"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 229,
        "start_column": 48,
        "end_line": 229,
        "end_column": 53
      },
      "debug_info": {
        "goal": "\u22a2 \u221a1000000 - 1000000 ^ (1 / 3) = 900",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L229"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "dd10c8560f9224e2166774cec79459d8ddaa49e0fb390bf0f1456938a5e43349"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 234,
        "start_column": 21,
        "end_line": 234,
        "end_column": 26
      },
      "debug_info": {
        "goal": "s : \u2115\nh\u2080 : s = \u2211 k \u2208 Finset.Icc 2010 4018, k\n\u22a2 s % 2009 = 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L234"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "f63ec7f70fa03d9bdce79b6fb4f87a80c79985d7939b689bd36acf6ffb157e3b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 237,
        "start_column": 73,
        "end_line": 237,
        "end_column": 78
      },
      "debug_info": {
        "goal": "\u22a2 \u00ac\u2200 (a b : \u2124), (\u2203 i j, a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, a ^ 2 + b ^ 2 = 8 * k",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L237"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "c17bdbfe808a9c5f9ebffcb7cd3ef39d4fa39a10312d81edfb689923ae5a463d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 247,
        "start_column": 22,
        "end_line": 247,
        "end_column": 27
      },
      "debug_info": {
        "goal": "x y : \u211d\nf g : \u211d \u2192 \u211d\nh\u2080 : \u2200 (t : \u211d), f t = t ^ 4\nh\u2081 : \u2200 (t : \u211d), g t = 5 * t ^ 2 - 6\nh\u2082 : f x = g x\nh\u2083 : f y = g y\nh\u2084 : x ^ 2 < y ^ 2\n\u22a2 y ^ 2 - x ^ 2 = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L247"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "eebd7802061caaa2093fcfe97e2e4668eef1f446436c582e30562d102a4ddca5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 250,
        "start_column": 73,
        "end_line": 250,
        "end_column": 78
      },
      "debug_info": {
        "goal": "\u22a2 {x \u2208 Finset.Icc 15 85 | 20 \u2223 x}.card = 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L250"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "176f3131f1e28090cd0070b7b3a594693db6d7d2b0292fd372cc1d5c75f8e5e4"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 253,
        "start_column": 65,
        "end_line": 253,
        "end_column": 70
      },
      "debug_info": {
        "goal": "\u22a2 (2000 + 2001 + 2002 + 2003 + 2004 + 2005 + 2006) % 7 = 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L253"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "acc2bb4db9e233e3038dee5c5362a5bee00ee7cb77bf788687462d153d847698"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 256,
        "start_column": 74,
        "end_line": 256,
        "end_column": 79
      },
      "debug_info": {
        "goal": "\u22a2 \u2211 k \u2208 {x \u2208 Finset.Icc 1 49 | 3 \u2223 x}, k % 10 = 78",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L256"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "0b83e3fe15179a474fb45a6816521f806b1595a4fdd869d8a63fb7a7133a6ad0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 259,
        "start_column": 27,
        "end_line": 259,
        "end_column": 32
      },
      "debug_info": {
        "goal": "\u22a2 5 ^ 999999 % 7 = 6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L259"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "3b0f40ddffbe73123cbec0572c05b6b75f9ab56e29fa11f575607154c057de73"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 264,
        "start_column": 26,
        "end_line": 264,
        "end_column": 31
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (n : \u2115), n \u2208 S \u2194 2010 \u2264 n \u2227 n \u2264 2019 \u2227 \u2203 m, m.divisors.card = 4 \u2227 \u2211 p \u2208 m.divisors, p = n\n\u22a2 \u2211 k \u2208 S, k = 2016",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L264"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "66f34d1607437d008df9de80ac2460d3ef65e065658117cd9990eb988eb14b9b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 272,
        "start_column": 35,
        "end_line": 272,
        "end_column": 40
      },
      "debug_info": {
        "goal": "a : \u211d\nh\u2080 : 0 < a\nh\u2081 : 1 / a - \u2191\u230a1 / a\u230b = a ^ 2 - \u2191\u230aa ^ 2\u230b\nh\u2082 : 2 < a ^ 2\nh\u2083 : a ^ 2 < 3\n\u22a2 a ^ 12 - 144 * (1 / a) = 233",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L272"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "8e6301905d9fcc8cb816b476f674e1e2503f79d7cea0e8cdf371049197fd700d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 276,
        "start_column": 24,
        "end_line": 276,
        "end_column": 29
      },
      "debug_info": {
        "goal": "a : \u211d\n\u22a2 a * (2 - a) \u2264 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L276"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "c9bf001cf96b87a8d371e17844b39e9b12ff93d5edd2df4f0276699aca91c14a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 285,
        "start_column": 30,
        "end_line": 285,
        "end_column": 35
      },
      "debug_info": {
        "goal": "a b c : \u211a\nm n : \u211d\nh\u2080 : 0 < m \u2227 0 < n\nh\u2081 : m ^ 3 = 2\nh\u2082 : n ^ 3 = 4\nh\u2083 : \u2191a + \u2191b * m + \u2191c * n = 0\n\u22a2 a = 0 \u2227 b = 0 \u2227 c = 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L285"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "14a1d23a56bf279d11a53ea62cf082e2c0f24beba67ab34ca47fb5b256dce651"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 290,
        "start_column": 16,
        "end_line": 290,
        "end_column": 21
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = 5 * x + 4\n\u22a2 f 1 = 9",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L290"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "3ec6d98cccfcfbb197e1c942ee41540c748c3e3e08c75aa0183957559680f92d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 295,
        "start_column": 14,
        "end_line": 295,
        "end_column": 19
      },
      "debug_info": {
        "goal": "x y n : \u2115+\nh\u2080 : \u2191\u2191x / 4 + \u2191\u2191y / 6 = (\u2191\u2191x + \u2191\u2191y) / \u2191\u2191n\n\u22a2 n = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L295"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "535d764e06647db1335ba5a647baec33ca52e96ccb06cb0f9d576f8b4a9267ed"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 300,
        "start_column": 24,
        "end_line": 300,
        "end_column": 29
      },
      "debug_info": {
        "goal": "\u03c3 : \u211d \u2243 \u211d\nh : \u03c3.toFun 2 = \u03c3.invFun 2\n\u22a2 \u03c3.toFun (\u03c3.toFun 2) = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L300"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "384e09a95258211919e447bf7ba8b74a2f8a4bc1a3e0089b59fda6217c666b77"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 306,
        "start_column": 17,
        "end_line": 306,
        "end_column": 22
      },
      "debug_info": {
        "goal": "x : \u2124\nh\u2080 : x < 0\nh\u2081 : 24 * x % 1199 = 15\n\u22a2 x \u2264 -449",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L306"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "72d7bfa4b192ebf112981bf02c7e1fe9649e5efca776060ebddaba0e71ac5725"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 311,
        "start_column": 42,
        "end_line": 311,
        "end_column": 47
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\n\u22a2 (21 * n + 4).gcd (14 * n + 3) = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L311"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "b8915e724ce31daac96abd67d3c559de2cef9851fd3ef91ffd992478c6dc917f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 314,
        "start_column": 26,
        "end_line": 314,
        "end_column": 31
      },
      "debug_info": {
        "goal": "\u22a2 2 ^ 2010 % 10 = 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L314"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "5a71827fddb0cfb07175b10ef648d26e8860fcfe13312e64c5c04dddb4e10980"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 322,
        "start_column": 24,
        "end_line": 322,
        "end_column": 29
      },
      "debug_info": {
        "goal": "m n : \u2115\nf : \u2115 \u2192 \u2115\nh\u2080 : \u2200 (x : \u2115), f x = 4 ^ x + 6 ^ x + 9 ^ x\nh\u2081 : 0 < m \u2227 0 < n\nh\u2082 : m \u2264 n\n\u22a2 f (2 ^ m) \u2223 f (2 ^ n)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L322"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "7a93f72f23691be843b57143a22fa089c8d55bd441311c39242e0c1ec43b0260"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 328,
        "start_column": 55,
        "end_line": 328,
        "end_column": 60
      },
      "debug_info": {
        "goal": "p q r : \u2124\nh\u2080 : 1 < p \u2227 p < q \u2227 q < r\nh\u2081 : (p - 1) * (q - 1) * (r - 1) \u2223 p * q * r - 1\n\u22a2 (p, q, r) = (2, 4, 8) \u2228 (p, q, r) = (3, 5, 15)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L328"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "7afc86f96f92afc9387c082cd249739c1be7acf4e6e5509aaf73eaa5c0696f3c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 336,
        "start_column": 21,
        "end_line": 336,
        "end_column": 26
      },
      "debug_info": {
        "goal": "f : \u2115 \u2192 \u2115\nh\u2080 : \u2200 (m n : \u2115), 0 < m \u2227 0 < n \u2192 f (m + n) - f m - f n = 0 \u2228 f (m + n) - f m - f n = 1\nh\u2081 : f 2 = 0\nh\u2082 : 0 < f 3\nh\u2083 : f 9999 = 3333\n\u22a2 f 1982 = 660",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L336"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "0d1a2837d323e7bc4ebd956cd0e25c3a1c379a4ce6e0e17a535cef87e7572576"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 341,
        "start_column": 30,
        "end_line": 341,
        "end_column": 35
      },
      "debug_info": {
        "goal": "x y : \u2124\nh\u2080 : y ^ 2 + 3 * (x ^ 2 * y ^ 2) = 30 * x ^ 2 + 517\n\u22a2 3 * (x ^ 2 * y ^ 2) = 588",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L341"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "7c42f9c176ffd68e9485c399513c870921647ae933c4348b8a91164f857904ac"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 347,
        "start_column": 24,
        "end_line": 347,
        "end_column": 29
      },
      "debug_info": {
        "goal": "f g : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = 2 * x - 3\nh\u2081 : \u2200 (x : \u211d), g x = x + 1\n\u22a2 g (f 5 - 1) = 7",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L347"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "cf263fa767010e1520eb8a638b1f1a6e77416776519764b0b47d8fcfc0abccb0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 356,
        "start_column": 56,
        "end_line": 356,
        "end_column": 61
      },
      "debug_info": {
        "goal": "a b c d : \u211d\nh\u2080 : b = a ^ 2\nh\u2081 : a + b = 1\nh\u2082 : d = c ^ 2\nh\u2083 : c + d = 1\nh\u2084 : a \u2260 c\n\u22a2 \u221a((a - c) ^ 2 + (b - d) ^ 2) = \u221a10",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L356"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "e4428bf97f036ff4504d63795532c6defd8a584fab58a13191755dd9becdabf3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 359,
        "start_column": 31,
        "end_line": 359,
        "end_column": 36
      },
      "debug_info": {
        "goal": "\u22a2 (29 ^ 13 - 5 ^ 13) % 7 = 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L359"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "f69a2f851c350d73096d21a5546c760d4115d3100ed4f10c3905c2dea735a3e0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 366,
        "start_column": 30,
        "end_line": 366,
        "end_column": 35
      },
      "debug_info": {
        "goal": "a b : NNReal\nh\u2080 : 0 < a \u2227 0 < b\nh\u2081 : a ^ 2 = 6 * b\nh\u2082 : a ^ 2 = 54 / b\n\u22a2 a = 3 * NNReal.sqrt 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L366"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "b16e17ca3b13f117f2678ef96bb65f68a2e70981dbe23ec78969833114cb9646"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 374,
        "start_column": 45,
        "end_line": 374,
        "end_column": 50
      },
      "debug_info": {
        "goal": "f g h : \u2115+ \u2192 \u2115\nh\u2080 : \u2200 (x : \u2115+), f x = 12 * \u2191x + 7\nh\u2081 : \u2200 (x : \u2115+), g x = 5 * \u2191x + 2\nh\u2082 : \u2200 (x : \u2115+), h x = (f x).gcd (g x)\nh\u2083 : Fintype \u2191(Set.range h)\n\u22a2 \u2211 k \u2208 (Set.range h).toFinset, k = 12",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L374"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "d3090bce611b58ec47e5a7ab223efdbe5b91511409b60a3af19d1df3c8e2f326"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 377,
        "start_column": 127,
        "end_line": 377,
        "end_column": 132
      },
      "debug_info": {
        "goal": "\u22a2 Real.log 80 / Real.log 2 / (Real.log 2 / Real.log 40) - Real.log 160 / Real.log 2 / (Real.log 2 / Real.log 20) = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L377"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "86f6240d18caa684b0c0cab56f91a3d49adbd519c639316181c0aff41f7e027c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 383,
        "start_column": 28,
        "end_line": 383,
        "end_column": 33
      },
      "debug_info": {
        "goal": "x : \u2124\nf : \u2124 \u2192 \u2124\nh0 : f x + f (x - 1) = x ^ 2\nh1 : f 19 = 94\n\u22a2 f 94 % 1000 = 561",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L383"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "ecb57edb9f293cc79aea4995c82b79e5204a069af5d1cfd66e8b04916477ee80"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 388,
        "start_column": 24,
        "end_line": 388,
        "end_column": 29
      },
      "debug_info": {
        "goal": "S : Finset \u211d\nh\u2080 : \u2200 (x : \u211d), x \u2208 S \u2194 (x + 3) ^ 2 = 121\n\u22a2 \u2211 k \u2208 S, k = -6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L388"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "1a12f7276cae09a5fb7619993bf9fc19791ba3dc1023460604a63ab8c1afa7c5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 394,
        "start_column": 14,
        "end_line": 394,
        "end_column": 19
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : n \u2264 9\nh\u2081 : 11 \u2223 20 * 100 + 10 * n + 7\n\u22a2 n = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L394"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "1918926a6e81b4ba51957a0a07bed3c9d117014cc7442a797e557d405e467449"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 397,
        "start_column": 34,
        "end_line": 397,
        "end_column": 39
      },
      "debug_info": {
        "goal": "\u22a2 (129 ^ 34 + 96 ^ 38) % 11 = 9",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L397"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "d8cb36be2f1b47ee65cc1c653fe86c3c0e5fe4856ea7f035926ad02745e8faab"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 404,
        "start_column": 22,
        "end_line": 404,
        "end_column": 27
      },
      "debug_info": {
        "goal": "a : \u2115 \u2192 \u211d\nh\u2080 : \u2200 (n : \u2115), a (n + 2) - a (n + 1) = a (n + 1) - a n\nh\u2081 : a 1 = 2 / 3\nh\u2082 : a 9 = 4 / 5\n\u22a2 a 5 = 11 / 15",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L404"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "697d422c2f11b140366305023e7dad9380ce4b04f2a98f7f25ae85fc40ae0e21"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 411,
        "start_column": 15,
        "end_line": 411,
        "end_column": 20
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 10 \u2264 n\nh\u2081 : \u2203 x, x ^ 2 = n\nh\u2082 : \u2203 t, t ^ 3 = n\n\u22a2 64 \u2264 n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L411"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "289fec0002eb4172566fb8f20ef809f552d59a32de94f0f7ce63071a8859be38"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 414,
        "start_column": 34,
        "end_line": 414,
        "end_column": 39
      },
      "debug_info": {
        "goal": "\u22a2 8 * 9 ^ 2 + 5 * 9 + 2 = 695",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L414"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "c825ed3ecf6384ae535bd472cd268c5a2e9e46cec7d4138cca27f03693958a83"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 417,
        "start_column": 19,
        "end_line": 417,
        "end_column": 24
      },
      "debug_info": {
        "goal": "\u22a2 54 % 6 = 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L417"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "ab2213e64dcde6a6795101943539789795410e117a470100c4307c360e6d7e1f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 424,
        "start_column": 24,
        "end_line": 424,
        "end_column": 29
      },
      "debug_info": {
        "goal": "a : \u2115 \u2192 \u2115\nh\u2080 : a 1 = 1\nh\u2081 : a 2 = 1\nh\u2082 : \u2200 (n : \u2115), a (n + 2) = a (n + 1) + a n\n\u22a2 a 100 % 4 = 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L424"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "563141d9daa81fc492e70b5f806f5ea4969d6382a3f4aafbcfe6354dc34f6cec"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 429,
        "start_column": 19,
        "end_line": 429,
        "end_column": 24
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (n : \u2115), n \u2208 S \u2194 0 < n \u2227 (\u2191n + 1000) / 70 = \u2191\u230a\u221a\u2191n\u230b\n\u22a2 S.card = 6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L429"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "b95511cf030764aba5fec71f46a835f99c8b192ef00a667165ba6e3e795bc353"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 435,
        "start_column": 23,
        "end_line": 435,
        "end_column": 28
      },
      "debug_info": {
        "goal": "A M C : \u2115\nh\u2080 : A \u2264 9 \u2227 M \u2264 9 \u2227 C \u2264 9\nh\u2081 : ofDigits 10 [0, 1, C, M, A] + ofDigits 10 [2, 1, C, M, A] = 123422\n\u22a2 A + M + C = 14",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L435"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "dc1835abdf7b3e3aed9f9ba5ba3c4ef2ab14648ab8fbb49c349f8172d7aaf8ab"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 443,
        "start_column": 26,
        "end_line": 443,
        "end_column": 31
      },
      "debug_info": {
        "goal": "a b : \u2115\nh\u2080 : 0 < a \u2227 0 < b\nh\u2081 : a % 10 = 2\nh\u2082 : b % 10 = 4\nh\u2083 : a.gcd b = 6\n\u22a2 108 \u2264 a.lcm b",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L443"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "9febdf9e0dd97016778c25192bd24ea8ac08d4b9d6f82efffdcf2e49f30bd9be"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 446,
        "start_column": 60,
        "end_line": 446,
        "end_column": 65
      },
      "debug_info": {
        "goal": "\u22a2 |(3491 - 60) * (3491 + 60) - 3491 ^ 2| = 3600",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L446"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "387fa5f25e78a75420e8b033c3ae3cf84dcb292f342b5855b6b2a4ae921dea55"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 452,
        "start_column": 96,
        "end_line": 452,
        "end_column": 101
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : 3 \u2264 a * b + b * c + c * a\n\u22a2 3 / \u221a2 \u2264 a / \u221a(a + b) + b / \u221a(b + c) + c / \u221a(c + a)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L452"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "b4d0cc65abce5cbc00ad9dae10fed9c35d806f936deb40fcf73930c198cc69ae"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 458,
        "start_column": 24,
        "end_line": 458,
        "end_column": 29
      },
      "debug_info": {
        "goal": "f z : \u2102\nh\u2080 : f + 3 * z = 11\nh\u2081 : 3 * (f - 1) - 5 * z = -68\n\u22a2 f = -10 \u2227 z = 7",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L458"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "cd379917b4f3b7f5000936183d1bb4e9de0f164f392a9896fdfcf781857f660f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 463,
        "start_column": 19,
        "end_line": 463,
        "end_column": 24
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 3 * n % 11 = 2\n\u22a2 n % 11 = 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L463"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "92bce140de523501af4a07f4fc9b856a1510c68e1254b4e4d2bbeadb66f8a390"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 468,
        "start_column": 56,
        "end_line": 468,
        "end_column": 61
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\n\u22a2 \u220f k \u2208 Finset.Icc 1 n, (1 + 1 / 2 ^ k) < 5 / 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L468"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "5b1b95ebf9f03cb5052cbac34dea28961ca390b514e834a9aeca39f999fa1749"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 473,
        "start_column": 34,
        "end_line": 473,
        "end_column": 39
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : x ^ 2 + 8 * x + y ^ 2 - 6 * y = 0\n\u22a2 (x + 4) ^ 2 + (y - 3) ^ 2 = 5 ^ 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L473"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "c1c3a067a4e1aacfc5a23ddfa9fb370f0d2d0586540cad3092d8667e972ef4f5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 479,
        "start_column": 20,
        "end_line": 479,
        "end_column": 25
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\nh\u2081 : Nat.Prime (2 ^ n - 1)\n\u22a2 Nat.Prime n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L479"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "d98cdcc0edbac1d237d3ad903eb5dc6973557a7c16b20d387cbdf64491acf212"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 485,
        "start_column": 15,
        "end_line": 485,
        "end_column": 20
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : x + y = 25\nh\u2081 : x - y = 11\n\u22a2 x = 18",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L485"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "0f0fd8f6a5e08e845567c60ae8bcd154f3c315e365232642a716fc8bf0b3ad17"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 488,
        "start_column": 58,
        "end_line": 488,
        "end_column": 63
      },
      "debug_info": {
        "goal": "\u22a2 (2 ^ 2014 + 2 ^ 2012) / (2 ^ 2014 - 2 ^ 2012) = 5 / 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L488"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "30ade280e1b2d78f3bb9b0e6a9a1acd0679f437f2a8c57d473112c91c2e98bf2"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 494,
        "start_column": 44,
        "end_line": 494,
        "end_column": 49
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : Even n\nh\u2081 : (\u2191n - 2) ^ 2 + \u2191n ^ 2 + (\u2191n + 2) ^ 2 = 12296\n\u22a2 (n - 2) * n * (n + 2) / 8 = 32736",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L494"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "e0d7f6dac61bc03ac512d8212877e7f89ddfff0ff8032de1ad92ec4c34fedbaf"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 502,
        "start_column": 17,
        "end_line": 502,
        "end_column": 22
      },
      "debug_info": {
        "goal": "r n : \u2115\nh\u2080 : r = 1342 % 13\nh\u2081 : 0 < n\nh\u2082 : 1342 \u2223 n\nh\u2083 : n % 13 < r\n\u22a2 6710 \u2264 n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L502"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "e45d26378bbe8121ab93ef403ca5a3d960c20ab14ca8e6e27ca1d650386d98d0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 507,
        "start_column": 65,
        "end_line": 507,
        "end_column": 70
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\n\u22a2 \u220f k \u2208 Finset.Icc 1 n, (1 + 1 / \u2191k ^ 3) \u2264 3 - 1 / \u2191n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L507"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "a5326c4aae0389c06fb5d8c68010239a3d5270935dbc3818f484c03ffa53693d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 510,
        "start_column": 53,
        "end_line": 510,
        "end_column": 58
      },
      "debug_info": {
        "goal": "\u22a2 (\u220f k \u2208 Finset.range 6, (2 * k + 1)) % 10 = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L510"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "2fce8bc8bfd70f2e7da17c7634ba98488c8024cce9437844e55356d82a943fb0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 516,
        "start_column": 18,
        "end_line": 516,
        "end_column": 23
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : 2 ^ a = 32\nh\u2081 : a ^ b = 125\n\u22a2 b ^ a = 243",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L516"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "90c0acb570ebc009174e37ff998c3300fe861c291681cb3f16436e018ce62a67"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 524,
        "start_column": 31,
        "end_line": 524,
        "end_column": 36
      },
      "debug_info": {
        "goal": "a b c : \u2115\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : b = a + 1\nh\u2082 : c = b + 1\nh\u2083 : a * b * c = 8 * (a + b + c)\n\u22a2 a ^ 2 + (b ^ 2 + c ^ 2) = 77",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L524"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "5cabbf2a24c555aa11106bf3519ad71f9f35055b8b9ab34d49f0878a583a3c6c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 530,
        "start_column": 16,
        "end_line": 530,
        "end_column": 21
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : x \u2260 -1\nh\u2081 : (x - 9) / (x + 1) = 2\n\u22a2 x = -11",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L530"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "1f6fcec04265b5a4ad6cdfa34a8564fe742b79194f22cb39cc4386d1424fe571"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 536,
        "start_column": 15,
        "end_line": 536,
        "end_column": 20
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\nh\u2081 : 80325 \u2223 n.factorial\n\u22a2 17 \u2264 n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L536"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "7be23de0b0f0bc759be208322f37c97461092061c72ee9adfe92ea6cfef4f98c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 541,
        "start_column": 38,
        "end_line": 541,
        "end_column": 43
      },
      "debug_info": {
        "goal": "a m c : \u2115\nh\u2080 : a + m + c = 12\n\u22a2 a * m * c + a * m + m * c + a * c \u2264 112",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L541"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "e4f1b064b1b7b6918004f0ac16d908adff175d70fdf492ff9e272dbe73902a91"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 552,
        "start_column": 35,
        "end_line": 552,
        "end_column": 40
      },
      "debug_info": {
        "goal": "n A B C : \u2115\nh\u2080 : n = 3 ^ 17 + 3 ^ 10\nh\u2081 : 11 \u2223 n + 1\nh\u2082 : List.Pairwise (fun x1 x2 => x1 \u2260 x2) [A, B, C]\nh\u2083 : {A, B, C} \u2282 Finset.Icc 0 9\nh\u2084 : Odd A \u2227 Odd C\nh\u2085 : \u00ac3 \u2223 B\nh\u2086 : digits 10 n = [B, A, B, C, C, A, C, B, A]\n\u22a2 100 * A + 10 * B + C = 129",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L552"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "470fad5648e64c460753b054ed36022d005c89551e017f869178e8fbb228ea63"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 558,
        "start_column": 48,
        "end_line": 558,
        "end_column": 53
      },
      "debug_info": {
        "goal": "x : \u211d\nh : (11 ^ (1 / 4)) ^ (3 * x - 3) = 1 / 5\n\u22a2 (11 ^ (1 / 4)) ^ (6 * x + 2) = 121 / 25",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L558"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "16ccbf272765ed403464287f5b7b924676333c121ed2c6cb8b291c808383f8bb"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 564,
        "start_column": 15,
        "end_line": 564,
        "end_column": 20
      },
      "debug_info": {
        "goal": "x y z : \u211d\nh\u2080 : 3 * x + 4 * y - 12 * z = 10\nh\u2081 : -2 * x - 3 * y + 9 * z = -4\n\u22a2 x = 14",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L564"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "523732925c12f4285c37372edd19ff01ddeee99586efeccc27bd799327805278"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 575,
        "start_column": 89,
        "end_line": 575,
        "end_column": 94
      },
      "debug_info": {
        "goal": "a : \u2115 \u2192 \u2115\nh\u2080 : a 0 ^ 3 = 1\nh\u2081 : a 1 ^ 3 = 8\nh\u2082 : a 2 ^ 3 = 27\nh\u2083 : a 3 ^ 3 = 64\nh\u2084 : a 4 ^ 3 = 125\nh\u2085 : a 5 ^ 3 = 216\nh\u2086 : a 6 ^ 3 = 343\n\u22a2 \u2211 k \u2208 Finset.range 7, 6 * a k ^ 2 - 2 * \u2211 k \u2208 Finset.range 6, a k ^ 2 = 658",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L575"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "12eb4a199eaafaef0e5e77f8b263b976915d3fb923e587569bab938093215a7b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 579,
        "start_column": 64,
        "end_line": 579,
        "end_column": 69
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 \u2211 k \u2208 Finset.range n, k ^ 3 = (\u2211 k \u2208 Finset.range n, k) ^ 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L579"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "016b40209d50853d10e7a4c76cf5deca2def13e870ca405f7cf630b103c34e9e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 590,
        "start_column": 0,
        "end_line": 590,
        "end_column": 5
      },
      "debug_info": {
        "goal": "f : \u2115 \u2192 \u2115 \u2192 \u2115\ng : \u2115 \u2192 \u2115\nh\u2080 : \u2200 (y : \u2115), f 0 y = y + 1\nh\u2081 : \u2200 (x : \u2115), f (x + 1) 0 = f x 1\nh\u2082 : \u2200 (x y : \u2115), f (x + 1) (y + 1) = f x (f (x + 1) y)\nh\u2083 : g 0 = 2\nh\u2084 : \u2200 (n : \u2115), g (n + 1) = 2 ^ g n\n\u22a2 f 4 1981 = g 1983 - 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L590"
      },
      "metadata": {
        "blame_email_hash": "e7ac978c7a81",
        "blame_date": "2025-04-24T19:32:39+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "268f414da0b744ca1ebc257b947828a548eb646295ed9d41d111c6434871fc4b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 597,
        "start_column": 15,
        "end_line": 597,
        "end_column": 20
      },
      "debug_info": {
        "goal": "y : \u211d\nh\u2080 : 0 \u2264 19 + 3 * y\nh\u2081 : \u221a(19 + 3 * y) = 7\n\u22a2 y = 10",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L597"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "9b3cf164ddc00c206a24ab350dea0370d5ef18fffc6834b1c1f607f6ad88b580"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 603,
        "start_column": 15,
        "end_line": 603,
        "end_column": 20
      },
      "debug_info": {
        "goal": "x : \u2115\nh\u2080 : x < 100\nh\u2081 : x * 9 % 100 = 1\n\u22a2 x = 89",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L603"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "a501529ba7f2fb8e848043c1a63e3548efeab25f0173a241c1cfca3d1cc02ad2"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 609,
        "start_column": 76,
        "end_line": 609,
        "end_column": 81
      },
      "debug_info": {
        "goal": "p : \u2115\nh\u2080 : Nat.Prime p\nh\u2081 : 7 \u2264 p\n\u22a2 \u2211 k \u2208 Finset.Icc 1 (p - 2), (\u2191k)\u207b\u00b9 * (\u2191k + 1)\u207b\u00b9 = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L609"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "bc5b1b77029a8af046c5cd506db9eb8612d7631b1e1b0ad959dd9f5469e04850"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 615,
        "start_column": 49,
        "end_line": 615,
        "end_column": 54
      },
      "debug_info": {
        "goal": "m a : \u2115\nh\u2080 : 0 < m \u2227 0 < a\nh\u2081 : \u2191m / \u2191a = 3 / 4\n\u22a2 (84 * \u2191m + 70 * \u2191a) / (\u2191m + \u2191a) = 76",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L615"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "d61f675f6630d1c16251cdc73649a4554791d3221aad3eff2288be2b9f5a2b77"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 622,
        "start_column": 42,
        "end_line": 622,
        "end_column": 47
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : 0 \u2264 3 - x\nh\u2081 : 0 \u2264 x + 1\nh\u2082 : 1 / 2 < \u221a(3 - x) - \u221a(x + 1)\n\u22a2 -1 \u2264 x \u2227 x < 1 - \u221a31 / 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L622"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "9f742b493910c4d1f5f812cb9e0ed09df15fdb15ec55ed58df6ccc9eaf7593d7"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 627,
        "start_column": 20,
        "end_line": 627,
        "end_column": 25
      },
      "debug_info": {
        "goal": "S : Finset \u2124\nh\u2080 : \u2200 (n : \u2124), n \u2208 S \u2194 |n - 2| \u2264 5 + 6 / 10\n\u22a2 S.card = 11",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L627"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "2c5b9d0c84f4d9134f2f7ab3a7057ce57ce152d50994e1546a862aa64cbb4c5b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 631,
        "start_column": 45,
        "end_line": 631,
        "end_column": 50
      },
      "debug_info": {
        "goal": "x : \u211d\n\u22a2 (x + 3) * (2 * x - 6) = 2 * x ^ 2 - 18",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L631"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "f17f7bab9d49eca138fa15379bd1a0f2ef2481f2aae13e331ab3003286688de8"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 640,
        "start_column": 30,
        "end_line": 640,
        "end_column": 35
      },
      "debug_info": {
        "goal": "a b c d : \u211d\nh\u2081 : 4 ^ a = 5\nh\u2082 : 5 ^ b = 6\nh\u2083 : 6 ^ c = 7\nh\u2084 : 7 ^ d = 8\n\u22a2 a * b * c * d = 3 / 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L640"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "f58e7a8dd1280f88ac3c512ff305cc3d3e76e7d6e53fd5ff18dde386013b5d83"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 646,
        "start_column": 62,
        "end_line": 646,
        "end_column": 67
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : 0 < a \u2227 0 < b\nh\u2081 : b \u2264 a\n\u22a2 (a + b) / 2 - \u221a(a * b) \u2264 (a - b) ^ 2 / (8 * b)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L646"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "bd32d6ff608094184fe75043f7d3e974474c0d5940a772f13a30fbc051ab2c13"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 651,
        "start_column": 23,
        "end_line": 651,
        "end_column": 28
      },
      "debug_info": {
        "goal": "a b : \u2124\nh\u2080 : \u2200 (x : \u211d), 10 * x ^ 2 - x - 24 = (\u2191a * x - 8) * (\u2191b * x + 3)\n\u22a2 a * b + b = 12",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L651"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "6f55e9f695e1f37cb953b119d00a83474963b670936d3560c38615b6e5edf05a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 655,
        "start_column": 126,
        "end_line": 655,
        "end_column": 131
      },
      "debug_info": {
        "goal": "\u22a2 (\u2211 k \u2208 Finset.Icc 1 20, logb (5 ^ k) (3 ^ k ^ 2)) * \u2211 k \u2208 Finset.Icc 1 100, logb (9 ^ k) (25 ^ k) = 21000",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L655"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "c065fb5b6bf23de8abbf09edf2fa32123f3b01b0dc38bddae0b7be0ad4550082"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 658,
        "start_column": 66,
        "end_line": 658,
        "end_column": 71
      },
      "debug_info": {
        "goal": "\u22a2 \u2211 k \u2208 Finset.Icc 2 10000, 1 / \u221a\u2191k < 198",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L658"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "f14167826fe92d8c23f3c09ad17cbbdd24aebc509d6df148693c9efbac7de588"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 665,
        "start_column": 15,
        "end_line": 665,
        "end_column": 20
      },
      "debug_info": {
        "goal": "n : \u2115\np : \u2115 \u2192 \u2115\nh\u2080 : \u2200 (x : \u2115), p x = x ^ 2 - x + 41\nh\u2081 : 1 < (p n).gcd (p (n + 1))\n\u22a2 41 \u2264 n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L665"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "957b44618aef18146b02daadee69209869dec3d9d878dfabe7971a1acba11445"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 670,
        "start_column": 21,
        "end_line": 670,
        "end_column": 26
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (n : \u2115), n \u2208 S \u2194 1000 \u2264 n \u2227 n \u2264 9999 \u2227 (\u2200 d \u2208 digits 10 n, Even d) \u2227 5 \u2223 n\n\u22a2 S.card = 100",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L670"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "55b1a607c8ecb99f98d8d0cdff03b259dd6f72c5e6f07f3194adb0ce83ab82db"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 675,
        "start_column": 85,
        "end_line": 675,
        "end_column": 90
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 9 \u2264 n\n\u22a2 \u2203 x, \u2191x ^ 2 = (\u2191(n + 2).factorial - \u2191(n + 1).factorial) / \u2191n.factorial",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L675"
      },
      "metadata": {
        "blame_email_hash": "f7c4d17dfbfb",
        "blame_date": "2024-10-28T15:45:30+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "727e39c28f8c817a8108eb731b2c4158245a5c535484d89a0641b9f3085ede17"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 683,
        "start_column": 14,
        "end_line": 683,
        "end_column": 19
      },
      "debug_info": {
        "goal": "k : \u2115\nh\u2080 : 0 < k\nh\u2081 : \u2200 (n : \u2115), (6 * n + k).gcd (6 * n + 3) = 1\nh\u2082 : \u2200 (n : \u2115), (6 * n + k).gcd (6 * n + 2) = 1\nh\u2083 : \u2200 (n : \u2115), (6 * n + k).gcd (6 * n + 1) = 1\n\u22a2 5 \u2264 k",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L683"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "09c8811cd1bb0279214a48f885fe2dec1f1301623e0f988eec190b3d2fd0ff49"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 687,
        "start_column": 64,
        "end_line": 687,
        "end_column": 69
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 a b, Irrational a \u2227 Irrational b \u2227 \u00acIrrational (a ^ b)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L687"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "8ada1e6b8af9d1450311dddcf2a608ddcd3042e3c910d358a3c21f913bd3fdd3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 694,
        "start_column": 23,
        "end_line": 694,
        "end_column": 28
      },
      "debug_info": {
        "goal": "x y z : \u211d\nh\u2080 : 3 * x + y = 17\nh\u2081 : 5 * y + z = 14\nh\u2082 : 3 * x + 5 * z = 41\n\u22a2 x + y + z = 12",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L694"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "100aa45a8c5f082aab14fedfaceb8ea9e87fe8e433e8f48c2fcea642e20dcdb7"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 700,
        "start_column": 17,
        "end_line": 700,
        "end_column": 22
      },
      "debug_info": {
        "goal": "f : \u2124 \u2192 \u2124\nh\u2080 : \u2200 (n : \u2124), Odd n \u2192 f n = n ^ 2\nh\u2081 : \u2200 (n : \u2124), Even n \u2192 f n = n ^ 2 - 4 * n - 1\n\u22a2 f 4 = -1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L700"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "ed53710485b39299e711c616238e13d8832d0b9ed369963aa07b072049fa5621"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 705,
        "start_column": 20,
        "end_line": 705,
        "end_column": 25
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 2 * n % 47 = 15\n\u22a2 n % 47 = 31",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L705"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "92adc3c708fdd8da15e23088944063a123a7d1110894bdd4344e3079e272d9ba"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 710,
        "start_column": 66,
        "end_line": 710,
        "end_column": 71
      },
      "debug_info": {
        "goal": "x y z : \u211d\nh\u2080 : 0 < x \u2227 0 < y \u2227 0 < z\n\u22a2 9 / (x + y + z) \u2264 2 / (x + y) + 2 / (y + z) + 2 / (z + x)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L710"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "9b749f83766ac483f6af625b285f95ef64ecd3221bddcb21b4615b2c5594c8a6"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 715,
        "start_column": 16,
        "end_line": 715,
        "end_column": 21
      },
      "debug_info": {
        "goal": "b : ZMod (11 ^ 2)\nh\u2080 : b = 24\u207b\u00b9\n\u22a2 b = 116",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L715"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "dd0a88e0c5842d51752668f19fd10398908db644b07bf3d325c3432644c9f674"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 719,
        "start_column": 84,
        "end_line": 719,
        "end_column": 89
      },
      "debug_info": {
        "goal": "a b : \u211d\n\u22a2 |a + b| / (1 + |a + b|) \u2264 |a| / (1 + |a|) + |b| / (1 + |b|)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L719"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "7785a9d595743b9ddaee194edd2b1e52900c944498c87f7d993d349e129bc303"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 729,
        "start_column": 14,
        "end_line": 729,
        "end_column": 19
      },
      "debug_info": {
        "goal": "a b c d k m : \u2115\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d\nh\u2081 : Odd a \u2227 Odd b \u2227 Odd c \u2227 Odd d\nh\u2082 : a < b \u2227 b < c \u2227 c < d\nh\u2083 : a * d = b * c\nh\u2084 : a + d = 2 ^ k\nh\u2085 : b + c = 2 ^ m\n\u22a2 a = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L729"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "c02c265fd650f0a692b0ba2de3f2dda09cd589f8d6fc4863151f6fe4932462c1"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 738,
        "start_column": 36,
        "end_line": 738,
        "end_column": 41
      },
      "debug_info": {
        "goal": "a b c d : \u2115\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d\nh\u2081 : d < c\nh\u2082 : c < b\nh\u2083 : b < a\nh\u2084 : a * c + b * d = (b + d + a - c) * (b + d + c - a)\n\u22a2 \u00acNat.Prime (a * b + c * d)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L738"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "0d8ff2ce3858e69cb0d771fb4aeaea0eab9dfa8be7400c2822e48a6036122c5f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 743,
        "start_column": 17,
        "end_line": 743,
        "end_column": 22
      },
      "debug_info": {
        "goal": "n : ZMod 1399\nh\u2081 : n = 160\u207b\u00b9\n\u22a2 n = 1058",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L743"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "e49e3096e262f8f0803c01d2fdd679fa005712b5c5d6ad4345c1546cad120c0d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 748,
        "start_column": 14,
        "end_line": 748,
        "end_column": 19
      },
      "debug_info": {
        "goal": "a : \u211d\nh\u2080 : \u221a(4 + \u221a(16 + 16 * a)) + \u221a(1 + \u221a(1 + a)) = 6\n\u22a2 a = 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L748"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "ee97681575f01e87c1792824cc6e2e72aa3577df9d74d82b24a88fc3ecc4df62"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 753,
        "start_column": 103,
        "end_line": 753,
        "end_column": 108
      },
      "debug_info": {
        "goal": "n : \u211d\nh\u2080 : n = 1 / 3\n\u22a2 \u230a10 * n\u230b + \u230a100 * n\u230b + \u230a1000 * n\u230b + \u230a10000 * n\u230b = 3702",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L753"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "fc394b1a4f8f84e160506bc276e2a9af92f7df8e9f252a0edc859e1339d37190"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 758,
        "start_column": 28,
        "end_line": 758,
        "end_column": 33
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : a ^ 2 + b ^ 2 = 1\n\u22a2 a * b + (a - b) \u2264 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L758"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "20b85d062ee369dd415a0a19f337fdd40c251d0d4c566ca1fb7b7d6127b8c36c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 764,
        "start_column": 24,
        "end_line": 764,
        "end_column": 29
      },
      "debug_info": {
        "goal": "f : \u211a \u2192 \u211d\nh\u2080 : \u2200 x > 0, \u2200 y > 0, f (x * y) = f x + f y\nh\u2081 : \u2200 (p : \u2115), Nat.Prime p \u2192 f \u2191p = \u2191p\n\u22a2 f (25 / 11) < 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L764"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "e2943fe70faca537f8177d09caa1e0aa0112a177eb9cde407f7648c158a90eda"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 770,
        "start_column": 18,
        "end_line": 770,
        "end_column": 23
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : 3 * y = x\nh\u2081 : 2 * x + 5 * y = 11\n\u22a2 x + y = 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L770"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "84ef0c90f248273e64cf17dc79ce85e47726dccda44bfc5905e103cb64681fc8"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 776,
        "start_column": 22,
        "end_line": 776,
        "end_column": 27
      },
      "debug_info": {
        "goal": "p a : \u2115\nh\u2080 : 0 < a\nh\u2081 : Nat.Prime p\n\u22a2 p \u2223 a ^ p - a",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L776"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "3007630363a98736495dff9e47e66cf108e100c86527e9441001bc588818bf36"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 779,
        "start_column": 66,
        "end_line": 779,
        "end_column": 71
      },
      "debug_info": {
        "goal": "\u22a2 \u220f k \u2208 Finset.range 7, (2 ^ 2 ^ k + 3 ^ 2 ^ k) = 3 ^ 128 - 2 ^ 128",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L779"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "499f4c2ddb4bf4be01b92919a6318239e6c45a9cdd70127561fcb67cc59a3dc4"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 785,
        "start_column": 51,
        "end_line": 785,
        "end_column": 56
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211a\nh\u2080 : \u2200 (n : \u2115), u (n + 1) = u n + 1\nh\u2081 : \u2211 k \u2208 Finset.range 98, u k.succ = 137\n\u22a2 \u2211 k \u2208 Finset.range 49, u (2 * k.succ) = 93",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L785"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "a0cb0794923325c766b952e0cd19827f3d00c1d4002cf35df3782c66e49e99ba"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 792,
        "start_column": 27,
        "end_line": 792,
        "end_column": 32
      },
      "debug_info": {
        "goal": "a b c : \u211d\nf : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = x ^ 3 + a * x ^ 2 + b * x + c\nh\u2081 : f \u207b\u00b9' {0} = {cos (2 * Real.pi / 7), cos (4 * Real.pi / 7), cos (6 * Real.pi / 7)}\n\u22a2 a * b * c = 1 / 32",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L792"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "a898ed256191b1995f898f61ce2ae1cc3572e60ee47180f6ac9cc1c80b53295b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 795,
        "start_column": 23,
        "end_line": 795,
        "end_column": 28
      },
      "debug_info": {
        "goal": "\u22a2 5 ^ 30 % 7 = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L795"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "f3bac8f8734e1c900c686a7d628360c5b599a3e73e2fb62f0b2532e71cd459d2"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 802,
        "start_column": 15,
        "end_line": 802,
        "end_column": 20
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\nh\u2081 : n.gcd 40 = 10\nh\u2082 : n.lcm 40 = 280\n\u22a2 n = 70",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L802"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "01362d759d1d332f8cc7db080644fd1d70ed1e621d2f7bc110d1613f9fceaca3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 809,
        "start_column": 34,
        "end_line": 809,
        "end_column": 39
      },
      "debug_info": {
        "goal": "v i z : \u2102\nh\u2080 : v = i * z\nh\u2081 : v = 1 + Complex.I\nh\u2082 : z = 2 - Complex.I\n\u22a2 i = 1 / 5 + 3 / 5 * Complex.I",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L809"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "a91bad479764d727aaaf392aa393af2a6b6e374e3eddfc5342b17c724403596d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 815,
        "start_column": 15,
        "end_line": 815,
        "end_column": 20
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\nh\u2081 : (1 / 2 + 1 / 3 + 1 / 7 + 1 / \u2191n).den = 1\n\u22a2 n = 42",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L815"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "0c09c40f5a522150eaa600a20c43e6af2d680a0a562d4bb8d2922a7d832269b1"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 820,
        "start_column": 42,
        "end_line": 820,
        "end_column": 47
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\n\u22a2 \u2203 m > n, \u2203 p, m * p \u2264 m + p",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L820"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "f619711ee469f874554dcd0beb6b77bc21a42cd39ec7c6f5d055dfc5e0394715"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 825,
        "start_column": 21,
        "end_line": 825,
        "end_column": 26
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (k : \u2115), k \u2208 S \u2194 0 < k \u2227 k * k \u2223 \u220f i \u2208 Finset.Icc 1 9, i.factorial\n\u22a2 S.card = 672",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L825"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "783c2393d93b44b60ff991feba687da3432749fbc9a084d6e5e18203223153be"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 831,
        "start_column": 15,
        "end_line": 831,
        "end_column": 20
      },
      "debug_info": {
        "goal": "a : \u211d\nh\u2080 : a \u2260 0\nh\u2081 : 8\u207b\u00b9 / 4\u207b\u00b9 - a\u207b\u00b9 = 1\n\u22a2 a = -2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L831"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "ef838ac7a9bc2b0ac609e4c8cf284fa104d0373cc14ae41b2baa6ada4c4f1bfd"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 836,
        "start_column": 23,
        "end_line": 836,
        "end_column": 28
      },
      "debug_info": {
        "goal": "z : \u2102\nh\u2080 : 12 * Complex.normSq z = 2 * Complex.normSq (z + 2) + Complex.normSq (z ^ 2 + 1) + 31\n\u22a2 z + 6 / z = -2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L836"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "207aacedf2996800c7dd15c84fb47045acaa1bd037db863fe3417d21668789b5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 839,
        "start_column": 37,
        "end_line": 839,
        "end_column": 42
      },
      "debug_info": {
        "goal": "\u22a2 Real.log 27 / Real.log 3 = 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L839"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "46c4b62da872e04d48669374c931873e5ede4ba37c055a90af2d39761bbc1498"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 842,
        "start_column": 21,
        "end_line": 842,
        "end_column": 26
      },
      "debug_info": {
        "goal": "\u22a2 1529 % 6 = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L842"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "0befb06b23e5c558516f221c6a8f01cba7aa42f7dcce97e168d7fac5dda953ab"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 845,
        "start_column": 20,
        "end_line": 845,
        "end_column": 25
      },
      "debug_info": {
        "goal": "\u22a2 91 ^ 2 = 8281",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L845"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "7f37d60a0107ff27cc8579408962d79d946db90c65fa0a289f550ec3268707e7"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 853,
        "start_column": 53,
        "end_line": 853,
        "end_column": 58
      },
      "debug_info": {
        "goal": "d : \u2115 \u2192 \u2115\nh\u2080 : d 0 = 0\nh\u2081 : d 1 = 0\nh\u2082 : d 2 = 1\nh\u2083 : \u2200 n \u2265 3, d n = d (n - 1) + d (n - 3)\n\u22a2 Even (d 2021) \u2227 Odd (d 2022) \u2227 Even (d 2023)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L853"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "fc20636edc3994f35c7b13dc7529f121e8c9a1b421ea14318083e80f6163b476"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 857,
        "start_column": 42,
        "end_line": 857,
        "end_column": 47
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 \u2191n ^ (1 / \u2191n) < 2 - 1 / \u2191n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L857"
      },
      "metadata": {
        "blame_email_hash": "dd1b74f40c05",
        "blame_date": "2024-07-14T11:12:57-04:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "9b124d1837b0f83ac5dfa854c9489fcb748294a66877a1bd35d070baf557aad0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 865,
        "start_column": 24,
        "end_line": 865,
        "end_column": 29
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : a * (b + c) = 152\nh\u2082 : b * (c + a) = 162\nh\u2083 : c * (a + b) = 170\n\u22a2 a * b * c = 720",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L865"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "5230e325cbde2e6824bc29923134b0deada74635fb807b27eae4b75b93c2b157"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 871,
        "start_column": 23,
        "end_line": 871,
        "end_column": 28
      },
      "debug_info": {
        "goal": "a b c : \u2115\nh\u2080 : a \u2264 9 \u2227 b \u2264 9 \u2227 c \u2264 9\nh\u2081 : digits 10 (5 ^ 100 % 1000) = [c, b, a]\n\u22a2 a + b + c = 13",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L871"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "99d4629e9a5140429925c4c94422de9bfdd301960d104cb28fff6efb3578dc80"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 878,
        "start_column": 19,
        "end_line": 878,
        "end_column": 24
      },
      "debug_info": {
        "goal": "m n : \u2115\nh\u2080 : 0 < m \u2227 0 < n\nh\u2081 : m.gcd n = 8\nh\u2082 : m.lcm n = 112\n\u22a2 72 \u2264 m + n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L878"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "a03755d2ee4a6ca98100ac30f0c04079874826fde940ee8a2940c0f048f8551c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 882,
        "start_column": 45,
        "end_line": 882,
        "end_column": 50
      },
      "debug_info": {
        "goal": "t : \u211d\n\u22a2 (2 ^ t - 3 * t) * t / 4 ^ t \u2264 1 / 12",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L882"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "aeb6bba2478a3326693ab081c95c4a344bcf672e9b249a1912f13defe52fb73f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 886,
        "start_column": 44,
        "end_line": 886,
        "end_column": 49
      },
      "debug_info": {
        "goal": "x : \u211d\n\u22a2 x ^ 2 - 14 * x + 3 \u2265 7 ^ 2 - 14 * 7 + 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L886"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "a76994847932eb618cbbc4b599799cca8d8172ddda10371198514dab3edeff6c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 891,
        "start_column": 19,
        "end_line": 891,
        "end_column": 24
      },
      "debug_info": {
        "goal": "S : Finset \u211d\nh\u2080 : \u2200 (x : \u211d), x \u2208 S \u2194 0 \u2264 x \u2227 x \u2264 2 * Real.pi \u2227 tan (2 * x) = cos (x / 2)\n\u22a2 S.card = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L891"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "0fd09f6ced733067545ed4e7b3830f6775d349fd4e4d4ed3c3e0a2f15e5a6fe4"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 897,
        "start_column": 20,
        "end_line": 897,
        "end_column": 25
      },
      "debug_info": {
        "goal": "i m o : \u2115\nh\u2080 : i \u2260 m \u2227 m \u2260 o \u2227 o \u2260 i\nh\u2081 : i * m * o = 2001\n\u22a2 i + m + o \u2264 671",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L897"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "0b007a0853bc2cd464dc6e727e71637c78b25dfd4590d6b197f03990b44e9289"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 902,
        "start_column": 19,
        "end_line": 902,
        "end_column": 24
      },
      "debug_info": {
        "goal": "S : Finset \u211d\nh\u2080 : \u2200 (x : \u211d), x \u2208 S \u2194 0 \u2264 x \u2227 x \u2264 Real.pi \u2227 sin (Real.pi / 2 * cos x) = cos (Real.pi / 2 * sin x)\n\u22a2 S.card = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L902"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "0cbefee0afdb4344f4a645623a369ce5f776b0170e9906df952bd3e3be7cefaf"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 907,
        "start_column": 62,
        "end_line": 907,
        "end_column": 67
      },
      "debug_info": {
        "goal": "a b c d : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d\n\u22a2 a ^ 2 / b + b ^ 2 / c + c ^ 2 / d + d ^ 2 / a \u2265 a + b + c + d",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L907"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "e20f87c77595acd9020f86bb6853cedb75545aecb50a5992005521787c6fe619"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 910,
        "start_column": 41,
        "end_line": 910,
        "end_column": 46
      },
      "debug_info": {
        "goal": "\u22a2 16 ^ 17 * 17 ^ 18 * 18 ^ 19 % 10 = 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L910"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "fd73454465e50ca101f420c22fa3cffcf4b15763b7b9de9a5c57a8bd7108aa2b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 916,
        "start_column": 15,
        "end_line": 916,
        "end_column": 20
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : n < 101\nh\u2081 : 101 \u2223 123456 - n\n\u22a2 n = 34",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L916"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "2f159409209e63902f9dc389c260915d7b8624d41a0b0c9510053bccb1fb95dc"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 923,
        "start_column": 14,
        "end_line": 923,
        "end_column": 19
      },
      "debug_info": {
        "goal": "x y : \u2115\nh\u2080 : 0 < x \u2227 0 < y\nh\u2081 : 5 * x = y\nh\u2082 : \u2191x - 3 + (\u2191y - 3) = 30\n\u22a2 x = 6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L923"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "a21fe03ac122148b675b9cae38a436d4d9adcd5c75ad18f431751169b40b73fc"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 930,
        "start_column": 35,
        "end_line": 930,
        "end_column": 40
      },
      "debug_info": {
        "goal": "x : \u211d\nn : \u2115\nh\u2080 : -1 < x\nh\u2081 : 0 < n\n\u22a2 1 + \u2191n * x \u2264 (1 + x) ^ n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L930"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "d60baf09cab36ee84d2fdb14112413924872fb736e085de34ca854cd40655694"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 937,
        "start_column": 14,
        "end_line": 937,
        "end_column": 19
      },
      "debug_info": {
        "goal": "c : \u211d\nf : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = c * x ^ 3 - 9 * x + 3\nh\u2081 : f 2 = 9\n\u22a2 c = 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L937"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "9c0e54892be5b8efd9f3758b7ce749a019ecc587af4d5eef102378ca09477c48"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 941,
        "start_column": 51,
        "end_line": 941,
        "end_column": 56
      },
      "debug_info": {
        "goal": "x y : \u2115\nh\u2080 : x \u2260 1 \u2227 y \u2260 1\nh\u2081 : Real.log \u2191x / Real.log 2 = Real.log 16 / Real.log \u2191y\nh\u2082 : x * y = 64\n\u22a2 (Real.log (\u2191x / \u2191y) / Real.log 2) ^ 2 = 20",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L941"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "0f43bf7ad9be37cbed2d3eb698a8d7d14adae82dc9741695ed3a3635116c1799"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 945,
        "start_column": 33,
        "end_line": 945,
        "end_column": 38
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 11 \u2223 10 ^ n - (-1) ^ n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L945"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "4427bc6c49f462e821d22e04217077efdaea8cf84c248150c7b09464c3e711c3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 951,
        "start_column": 38,
        "end_line": 951,
        "end_column": 43
      },
      "debug_info": {
        "goal": "a : \u2115 \u2192 NNReal\nn : \u2115\nh\u2080 : \u2211 x \u2208 Finset.range n, a x = \u2191n\n\u22a2 \u220f x \u2208 Finset.range n, a x \u2264 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L951"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "3d834d46203590b83b408356976f2e079a89f257905f479c1b4381e19c0eec56"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 957,
        "start_column": 77,
        "end_line": 957,
        "end_column": 82
      },
      "debug_info": {
        "goal": "f : \u2115 \u2192 NNReal \u2192 \u211d\nh\u2080 : \u2200 (x : NNReal), f 1 x = \u2191x\nh\u2081 : \u2200 (x : NNReal) (n : \u2115), f (n + 1) x = f n x * (f n x + 1 / \u2191n)\n\u22a2 \u2203! a, \u2200 (n : \u2115), 0 < n \u2192 0 < f n a \u2227 f n a < f (n + 1) a \u2227 f (n + 1) a < 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L957"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "5bbe96f9d58b019de0745f4a64e5856ac3991aaccb077b244e18f32c26db748a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 963,
        "start_column": 35,
        "end_line": 963,
        "end_column": 40
      },
      "debug_info": {
        "goal": "a b : \u2102\nh\u2080 : a ^ 3 - 8 = 0\nh\u2081 : b ^ 3 - 8 * b ^ 2 - 8 * b + 64 = 0\n\u22a2 \u2016a - b\u2016 \u2264 2 * \u221a21",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L963"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:45:32+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "7344b1926846556592b7a1a1027eee4a5b361f20ea20ca82694e4c34e223610c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 969,
        "start_column": 24,
        "end_line": 969,
        "end_column": 29
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : (x + y) / 2 = 7\nh\u2081 : \u221a(x * y) = \u221a19\n\u22a2 x ^ 2 + y ^ 2 = 158",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L969"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "1e93fc25f322aefce84442a708304767b873313a409b62c746d35e2a6b354984"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 974,
        "start_column": 29,
        "end_line": 974,
        "end_column": 34
      },
      "debug_info": {
        "goal": "r : \u211d\nh\u2080 : r ^ (1 / 3) + 1 / r ^ (1 / 3) = 3\n\u22a2 r ^ 3 + 1 / r ^ 3 = 5778",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L974"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "354fbfb5bbb17c02f4ebf116a6788f74135e7a5a609e128a19331f2641fad4f8"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 978,
        "start_column": 99,
        "end_line": 978,
        "end_column": 104
      },
      "debug_info": {
        "goal": "x : NNReal\n\u22a2 \u221a(60 * \u2191x) * \u221a(12 * \u2191x) * \u221a(63 * \u2191x) = 36 * \u2191x * \u221a(35 * \u2191x)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L978"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "cf354a608281e6763ab950ec4756d47724cf64ea9bb87d5b84c3192afd0b9a35"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 983,
        "start_column": 14,
        "end_line": 983,
        "end_column": 19
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : 3 / 2 / 3 = x / 10\n\u22a2 x = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L983"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "1a449ded8a682a5ebc72a694bba7626c5ac09ac62b2576f0fe4c4ac6f19dbafe"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 986,
        "start_column": 34,
        "end_line": 986,
        "end_column": 39
      },
      "debug_info": {
        "goal": "\u22a2 (239 + 174 + 83) % 10 = 6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L986"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "a6985f797a161186fb91c195184a40c025627e776208cdef6cf28c15f7fbee29"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 993,
        "start_column": 30,
        "end_line": 993,
        "end_column": 35
      },
      "debug_info": {
        "goal": "p q : \u2115\nh\u2080 : Nat.Prime p \u2227 Nat.Prime q\nh\u2081 : 4 \u2264 p \u2227 p \u2264 18\nh\u2082 : 4 \u2264 q \u2227 q \u2264 18\n\u22a2 p * q - (p + q) \u2260 194",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L993"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "84f818678d94c43bc769a2e49796f40442e36f3e4272808caac051ce5910414d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1000,
        "start_column": 22,
        "end_line": 1000,
        "end_column": 27
      },
      "debug_info": {
        "goal": "f : \u2115 \u2192 \u2115 \u2192 \u211d\nh\u2080 : \u2200 (x : \u2115), 0 < x \u2192 f x x = \u2191x\nh\u2081 : \u2200 (x y : \u2115), 0 < x \u2227 0 < y \u2192 f x y = f y x\nh\u2082 : \u2200 (x y : \u2115), 0 < x \u2227 0 < y \u2192 (\u2191x + \u2191y) * f x y = \u2191y * f x (x + y)\n\u22a2 f 14 52 = 364",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1000"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "e0fc5acbc70207b05c374a51679f12bf4a05700d448c952bb26c82557e1f441c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1005,
        "start_column": 53,
        "end_line": 1005,
        "end_column": 58
      },
      "debug_info": {
        "goal": "a : \u211d\nh\u2080 : a = 8\n\u22a2 (16 * (a ^ 2) ^ (1 / 3)) ^ (1 / 3) = 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1005"
      },
      "metadata": {
        "blame_email_hash": "dd1b74f40c05",
        "blame_date": "2024-07-14T11:12:57-04:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "7f7dc11dc0cc94a80e994658ee64d0604117ec8fa4d9d5fb68cd5d12b5de1826"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1009,
        "start_column": 103,
        "end_line": 1009,
        "end_column": 108
      },
      "debug_info": {
        "goal": "f : \u2124 \u2192 \u2124\n\u22a2 (\u2200 (a b : \u2124), f (2 * a) + 2 * f b = f (f (a + b))) \u2194 \u2200 (z : \u2124), f z = 0 \u2228 \u2203 c, \u2200 (z : \u2124), f z = 2 * z + c",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1009"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "960eabe26c9288795361124b870ace0bdbf1643242c5923876ae8e86255c42de"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1015,
        "start_column": 22,
        "end_line": 1015,
        "end_column": 27
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : 3 * a + 2 * b = 5\nh\u2081 : a + b = 2\n\u22a2 a = 1 \u2227 b = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1015"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "40cf05a7f17514afce720a1f29ba4ab081820fcbe06ee8695e6a0abcfd9b172f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1021,
        "start_column": 20,
        "end_line": 1021,
        "end_column": 25
      },
      "debug_info": {
        "goal": "f g : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = x + 1\nh\u2081 : \u2200 (x : \u211d), g x = x ^ 2 + 3\n\u22a2 f (g 2) = 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1021"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "03c4df13926cd841885263e79598fad5e8fef107372648f50f11607af35e1708"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1027,
        "start_column": 25,
        "end_line": 1027,
        "end_column": 30
      },
      "debug_info": {
        "goal": "a d : \u211d\nh\u2080 : a + 6 * d = 30\nh\u2081 : a + 10 * d = 60\n\u22a2 a + 20 * d = 135",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1027"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "2b947bfaa204a55f1125a7bc6d99ff67d847cbe7264314bdef5513d6b413ddf1"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1033,
        "start_column": 19,
        "end_line": 1033,
        "end_column": 24
      },
      "debug_info": {
        "goal": "f : \u2124 \u2192 \u2124\nh\u2080 : \u2200 (n : \u2124), 1000 \u2264 n \u2192 f n = n - 3\nh\u2081 : \u2200 n < 1000, f n = f (f (n + 5))\n\u22a2 f 84 = 997",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1033"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "894aa86d755c2a1232f3a205672ad00e6742f062a0cc6899809f14bc934e039e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1040,
        "start_column": 16,
        "end_line": 1040,
        "end_column": 21
      },
      "debug_info": {
        "goal": "a b : \u211d\nf : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = a * x ^ 4 - b * x ^ 2 + x + 5\nh\u2082 : f (-3) = 2\n\u22a2 f 3 = 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1040"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "d38a1c6affed0c15567b856f9c9bd6bae48f410bdd6ed6d84ecc0d652d78001c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1046,
        "start_column": 42,
        "end_line": 1046,
        "end_column": 47
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = x ^ 2 + (18 * x + 30) - 2 * \u221a(x ^ 2 + (18 * x + 45))\nh\u2081 : Fintype \u2191(f \u207b\u00b9' {0})\n\u22a2 \u220f x \u2208 (f \u207b\u00b9' {0}).toFinset, x = 20",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1046"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "eb6b71b015346a11ea0e74ff8e2e13bd0c964d652de9dd32dbccae8a67245e1f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1051,
        "start_column": 48,
        "end_line": 1051,
        "end_column": 53
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\n\u22a2 (3 ^ 2 ^ n - 1) % 2 ^ (n + 3) = 2 ^ (n + 2)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1051"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "00b74ba8a56fafd3f705c6a55a2c78bd7c2c31539574c897442105dbeb49ab27"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1054,
        "start_column": 41,
        "end_line": 1054,
        "end_column": 46
      },
      "debug_info": {
        "goal": "\u22a2 1 * 3 ^ 3 + 2 * 3 ^ 2 + 2 * 3 + 2 = 53",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1054"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "b1a909ed0a5706f8f2f642e561697af396e6ef52957533cccccd997d8059fad1"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1062,
        "start_column": 27,
        "end_line": 1062,
        "end_column": 32
      },
      "debug_info": {
        "goal": "a b c d : \u2115\nh\u2080 : a * b * c * d = factorial 8\nh\u2081 : a * b + a + b = 524\nh\u2082 : b * c + b + c = 146\nh\u2083 : c * d + c + d = 104\n\u22a2 \u2191a - \u2191d = 10",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1062"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "906e15b4694bd21e742ba50a460f6a3775370b2900fc7590186f092ec655aa52"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1065,
        "start_column": 43,
        "end_line": 1065,
        "end_column": 48
      },
      "debug_info": {
        "goal": "\u22a2 (\u2211 k \u2208 Finset.Icc 1 12, k) % 4 = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1065"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "139cccf810e63aac598c5494ecc7c1ee13c23f75d8ceb3ddd77c63c7e901fc55"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1070,
        "start_column": 67,
        "end_line": 1070,
        "end_column": 72
      },
      "debug_info": {
        "goal": "x : \u2124\nh\u2080 : x = 4\n\u22a2 (3 * x - 2) * (4 * x + 1) - (3 * x - 2) * (4 * x) + 1 = 11",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1070"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "e0ae2c71384936e123f8fce5fa69250c21c01df8a23357dbbd6a0ea42b431072"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1075,
        "start_column": 23,
        "end_line": 1075,
        "end_column": 28
      },
      "debug_info": {
        "goal": "S : Finset \u211d\nh\u2080 : \u2200 (x : \u211d), x \u2208 S \u2194 |2 - x| = 3\n\u22a2 \u2211 k \u2208 S, k = 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1075"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "488f7a167b9cbda311b6439ee7408c505281996f59b1ea4f99b8b7609f4621c7"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1081,
        "start_column": 17,
        "end_line": 1081,
        "end_column": 22
      },
      "debug_info": {
        "goal": "a d : \u211d\nh\u2080 : \u2211 k \u2208 Finset.range 5, (a + \u2191k * d) = 70\nh\u2081 : \u2211 k \u2208 Finset.range 10, (a + \u2191k * d) = 210\n\u22a2 a = 42 / 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1081"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "9f83053a5ac0d069b55b1ce6db6807073a97638c007f263ef9979ba4b6f33b2d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1084,
        "start_column": 34,
        "end_line": 1084,
        "end_column": 39
      },
      "debug_info": {
        "goal": "\u22a2 121 * 122 * 123 % 4 = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1084"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "f9c05725bc36cd67b0e878287446acad8551fa4b64c80b09b7c63fdd3e058174"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1095,
        "start_column": 16,
        "end_line": 1095,
        "end_column": 21
      },
      "debug_info": {
        "goal": "x : \u211d\nn : \u2115\na : \u2115 \u2192 \u211d\nh\u2081 : \u2200 (m : \u2115), a (m + 1) - a m = a (m + 2) - a (m + 1)\nh\u2082 : a 1 = 2 * x - 3\nh\u2083 : a 2 = 5 * x - 11\nh\u2084 : a 3 = 3 * x + 1\nh\u2085 : a n = 2009\n\u22a2 n = 502",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1095"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "4d672872e1db81afd18a8b777cb6369556a4ad6c07bee4e6e2ec353f4a22a399"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1100,
        "start_column": 22,
        "end_line": 1100,
        "end_column": 27
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), x \u2260 -2 \u2192 f x = 1 / (x + 2)\n\u22a2 f (f 1) = 3 / 7",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1100"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "6c7c5fe5694dfe72175731db5274a655626bb93ae2a0808076c0b3b952da5fe0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1107,
        "start_column": 16,
        "end_line": 1107,
        "end_column": 21
      },
      "debug_info": {
        "goal": "a b c d : \u211d\nf : \u2102 \u2192 \u2102\nh\u2080 : \u2200 (z : \u2102), f z = z ^ 6 - 10 * z ^ 5 + \u2191a * z ^ 4 + \u2191b * z ^ 3 + \u2191c * z ^ 2 + \u2191d * z + 16\nh\u2081 : \u2200 (z : \u2102), f z = 0 \u2192 z.im = 0 \u2227 0 < z.re \u2227 \u2191\u230az.re\u230b = z.re\n\u22a2 b = -88",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1107"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "2ecce4123a383062cdbea139835b24926e07601f98cb74c795e1815a464b4d28"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1113,
        "start_column": 22,
        "end_line": 1113,
        "end_column": 27
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : a ^ 2 * b ^ 3 = 32 / 27\nh\u2081 : a / b ^ 3 = 27 / 4\n\u22a2 a + b = 8 / 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1113"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "05a77669efe9f24b1b5447475b617dec79135f8b4c8576ad55003934881506cb"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1121,
        "start_column": 15,
        "end_line": 1121,
        "end_column": 20
      },
      "debug_info": {
        "goal": "m n : \u2115\nh\u2080 : Even m\nh\u2081 : Even n\nh\u2082 : m - n = 2\nh\u2083 : m * n = 288\n\u22a2 m = 18",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1121"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "47e6a361d6b83d01566fde177411cd203d39580cd180ccfa582b325ac730d682"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1129,
        "start_column": 28,
        "end_line": 1129,
        "end_column": 33
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : 0 < a \u2227 0 < b\nh\u2081 : a \u2260 b\nh\u2082 : |a - 1 / a| = 1\nh\u2083 : |b - 1 / b| = 1\n\u22a2 a + b = \u221a5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1129"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "09ed305a3f1f0b0f04e7f34dd69e4b37ff03da98774967f1abed57bce800bae3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1137,
        "start_column": 82,
        "end_line": 1137,
        "end_column": 87
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : c < a + b\nh\u2082 : b < a + c\nh\u2083 : a < b + c\n\u22a2 a ^ 2 * (b + c - a) + b ^ 2 * (c + a - b) + c ^ 2 * (a + b - c) \u2264 3 * a * b * c",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1137"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "b87b38abcc23f9e17198d5de141ecfe2855e1ca27dfd8c73cb99c8b0429f125e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1145,
        "start_column": 35,
        "end_line": 1145,
        "end_column": 40
      },
      "debug_info": {
        "goal": "k t m n : \u2115\nh\u2080 : Nat.Prime m \u2227 Nat.Prime n\nh\u2081 : t < k\nh\u2082 : k ^ 2 - m * k + n = 0\nh\u2083 : t ^ 2 - m * t + n = 0\n\u22a2 m ^ n + n ^ m + k ^ t + t ^ k = 20",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1145"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "286d32ff586055d0de520d6c6390465b745a97fcafd929ea5bbfc97017b44107"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1152,
        "start_column": 28,
        "end_line": 1152,
        "end_column": 33
      },
      "debug_info": {
        "goal": "x y : \u2115\nh\u2080 : x + y = 17402\nh\u2081 : 10 \u2223 x\nh\u2082 : x / 10 = y\n\u22a2 \u2191x - \u2191y = 14238",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1152"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "581a84e057d4277cb30f12b73b012cbbea6008e719bf78a325aa91ef550ad60c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1160,
        "start_column": 31,
        "end_line": 1160,
        "end_column": 36
      },
      "debug_info": {
        "goal": "a b : \u2115 \u2192 \u211d\nh\u2080 : \u2200 (n : \u2115), a (n + 1) = \u221a3 * a n - b n\nh\u2081 : \u2200 (n : \u2115), b (n + 1) = \u221a3 * b n + a n\nh\u2082 : a 100 = 2\nh\u2083 : b 100 = 4\n\u22a2 a 1 + b 1 = 1 / 2 ^ 98",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1160"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "1a7e1d17e000b79dfea8e92ac5f4be4d6c36f4db8874b639e9be78901b00815b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1167,
        "start_column": 66,
        "end_line": 1167,
        "end_column": 71
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh\u2080 : a \u2264 b \u2227 b \u2264 c\nh\u2081 : a + b + c = 2\nh\u2082 : a * b + b * c + c * a = 1\n\u22a2 0 \u2264 a \u2227 a \u2264 1 / 3 \u2227 1 / 3 \u2264 b \u2227 b \u2264 1 \u2227 1 \u2264 c \u2227 c \u2264 4 / 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1167"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "174cce4c9553b6f252a0a010a9f8816319debde613ece0214e91c55078c27ab7"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1170,
        "start_column": 21,
        "end_line": 1170,
        "end_column": 26
      },
      "debug_info": {
        "goal": "\u22a2 194 % 11 = 7",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1170"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "b51ff4931a850e75e940b0ea2c56b631f1e658d5ee23668017b703443d8ffbc6"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1175,
        "start_column": 20,
        "end_line": 1175,
        "end_column": 25
      },
      "debug_info": {
        "goal": "S : Finset \u2124\nh\u2080 : \u2200 (x : \u2124), x \u2208 S \u2194 \u2191|x| < 3 * Real.pi\n\u22a2 S.card = 19",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1175"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "d151da02c0c43a70bb8f74aea04eb9b207d620a8c7d4ade023ef0b3fee877173"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1182,
        "start_column": 42,
        "end_line": 1182,
        "end_column": 47
      },
      "debug_info": {
        "goal": "a b : \u211d\nn : \u2115\nh\u2080 : 0 < a \u2227 0 < b\nh\u2081 : 0 < n\n\u22a2 ((a + b) / 2) ^ n \u2264 (a ^ n + b ^ n) / 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1182"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "925b62d261f5bf17f1d356773ae793261a40941caf264d875a6d6e593e48b218"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1189,
        "start_column": 38,
        "end_line": 1189,
        "end_column": 43
      },
      "debug_info": {
        "goal": "a : \u211d\nf : \u211d \u2192 \u211d\nh\u2080 : 0 < a\nh\u2081 : \u2200 (x : \u211d), f (x + a) = 1 / 2 + \u221a(f x - f x ^ 2)\n\u22a2 \u2203 b > 0, \u2200 (x : \u211d), f (x + b) = f x",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1189"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "1dbdc3626e43cf87d46343e0647ff24f918169b0ba8c4813cf807cf0a5416130"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1197,
        "start_column": 31,
        "end_line": 1197,
        "end_column": 36
      },
      "debug_info": {
        "goal": "a b x y : \u211d\nh\u2080 : a * x + b * y = 3\nh\u2081 : a * x ^ 2 + b * y ^ 2 = 7\nh\u2082 : a * x ^ 3 + b * y ^ 3 = 16\nh\u2083 : a * x ^ 4 + b * y ^ 4 = 42\n\u22a2 a * x ^ 5 + b * y ^ 5 = 20",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1197"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "10f42924a7aef9dcd1a0fcb6d6cf6639d91c409fbb08c4f4c8ae43e020227191"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1200,
        "start_column": 37,
        "end_line": 1200,
        "end_column": 42
      },
      "debug_info": {
        "goal": "\u22a2 (29 * 79 + 31 * 81) % 10 = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1200"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "b4bc0c7c86179f5d90acfcb2024ef8e1df3f15c15e67d08aa699a421895f0672"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1203,
        "start_column": 146,
        "end_line": 1203,
        "end_column": 151
      },
      "debug_info": {
        "goal": "\u22a2 \u221a(Real.log 6 / Real.log 2 + Real.log 6 / Real.log 3) = \u221a(Real.log 3 / Real.log 2) + \u221a(Real.log 2 / Real.log 3)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1203"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "c6780417bd53458121c29cdeed9ef4a67d119df1f83222416567c3465ae0cd59"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1208,
        "start_column": 19,
        "end_line": 1208,
        "end_column": 24
      },
      "debug_info": {
        "goal": "S : Finset \u211d\nh\u2080 : \u2200 (x : \u211d), x \u2208 S \u2194 0 < x \u2227 x \u2264 2 * Real.pi \u2227 1 - 3 * sin x + 5 * cos (3 * x) = 0\n\u22a2 S.card = 6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1208"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "40efab68daa2117da2e392db1423e65a82e6a72bca63801dfb566ef580d6d399"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1214,
        "start_column": 19,
        "end_line": 1214,
        "end_column": 24
      },
      "debug_info": {
        "goal": "a b : \u2115\nh\u2080 : 1 \u2264 a \u2227 a \u2264 9 \u2227 b \u2264 9\nh\u2081 : (10 * a + b) ^ 3 = 912673\n\u22a2 a + b = 16",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1214"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "da0802f6de60e365d9b48f9bd90ea2b81230fd14355f4501579cae68025e5ed6"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1222,
        "start_column": 28,
        "end_line": 1222,
        "end_column": 33
      },
      "debug_info": {
        "goal": "a b : \u2124\nh\u2080 : Odd a\nh\u2081 : 4 \u2223 b\nh\u2082 : b \u2265 0\n\u22a2 (a ^ 2 + b ^ 2) % 8 = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1222"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "f59ca6385a3b5bcd3bc73cb31d776e784fa7c92239a1533dc9384791fba0ffd7"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1228,
        "start_column": 16,
        "end_line": 1228,
        "end_column": 21
      },
      "debug_info": {
        "goal": "b : \u2115\nh\u2080 : Nat.lcm 120 b = 3720\nh\u2081 : Nat.gcd 120 b = 8\n\u22a2 b = 248",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1228"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "edc89c6a692a70221e6e4c83a3fde990378d6a1ec88877333e156abda80929e1"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1235,
        "start_column": 29,
        "end_line": 1235,
        "end_column": 34
      },
      "debug_info": {
        "goal": "m : \u211a\nh\u2080 : 0 < m\nh\u2081 : \u2211 k \u2208 Finset.Icc 1 35, sin (5 * \u2191k * Real.pi / 180) = tan (\u2191m * Real.pi / 180)\nh\u2082 : \u2191m.num / \u2191m.den < 90\n\u22a2 \u2191m.den + m.num = 177",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1235"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "643d1d0a7301c825f7c75a35ee6b71bb40243642638a46be953486ffc6ab199f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1240,
        "start_column": 14,
        "end_line": 1240,
        "end_column": 19
      },
      "debug_info": {
        "goal": "y : \u211d\nh\u2080 : y + 6 + y = 2 * 12\n\u22a2 y = 9",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1240"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "3b8629b73faa7146e6d781faf44367f40756a2fbfc4f994dd8675a8ee8afec81"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1255,
        "start_column": 30,
        "end_line": 1255,
        "end_column": 35
      },
      "debug_info": {
        "goal": "x y z : \u211d\na : \u2115 \u2192 \u211d\nh\u2080 : 0 < a 0 \u2227 0 < a 4 \u2227 0 < a 8\nh\u2081 : a 1 < 0 \u2227 a 2 < 0\nh\u2082 : a 3 < 0 \u2227 a 5 < 0\nh\u2083 : a 6 < 0 \u2227 a 7 < 0\nh\u2084 : 0 < a 0 + a 1 + a 2\nh\u2085 : 0 < a 3 + a 4 + a 5\nh\u2086 : 0 < a 6 + a 7 + a 8\nh\u2087 : a 0 * x + a 1 * y + a 2 * z = 0\nh\u2088 : a 3 * x + a 4 * y + a 5 * z = 0\nh\u2089 : a 6 * x + a 7 * y + a 8 * z = 0\n\u22a2 x = 0 \u2227 y = 0 \u2227 z = 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1255"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "91cc143f46f9fb7b8418d03192773f891f568770480499d33add4d7a9d539187"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1264,
        "start_column": 15,
        "end_line": 1264,
        "end_column": 20
      },
      "debug_info": {
        "goal": "x y : \u211d\nn : NNReal\nh\u2080 : x < 0 \u2227 y < 0\nh\u2081 : |y| = 6\nh\u2082 : \u221a((x - 8) ^ 2 + (y - 3) ^ 2) = 15\nh\u2083 : \u221a(x ^ 2 + y ^ 2) = \u221a\u2191n\n\u22a2 n = 52",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1264"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "f7439575c9cb8240b52c4b814b0703920a412c9803143ceb6545e9129d4576e4"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1267,
        "start_column": 48,
        "end_line": 1267,
        "end_column": 53
      },
      "debug_info": {
        "goal": "\u22a2 (\u2211 k \u2208 Finset.range 101, 2 ^ k) % 7 = 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1267"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "9cdf9c34afa82982a188486192d33c95cdcc5b404a119954e8db3b7d0c103dad"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1271,
        "start_column": 91,
        "end_line": 1271,
        "end_column": 96
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 \u00ac5 \u2223 \u2211 k \u2208 Finset.range (n + 1), (2 * n + 1).choose (2 * k + 1) * 2 ^ (3 * k)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1271"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "e2ec84dd44f84cdcd3fb3ba360f23ae6274514de1114a8a52cd0b5df0a16f79d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1278,
        "start_column": 28,
        "end_line": 1278,
        "end_column": 33
      },
      "debug_info": {
        "goal": "x : \u211d\nm : \u211a\nh\u2080 : 1 / cos x + tan x = 22 / 7\nh\u2081 : 1 / sin x + 1 / tan x = \u2191m\n\u22a2 \u2191m.den + m.num = 44",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1278"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "96817752bd5b1493d0db1eafc57b90070f5d801f84743c0ceab8d5e97d89b31f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1284,
        "start_column": 39,
        "end_line": 1284,
        "end_column": 44
      },
      "debug_info": {
        "goal": "m n p q : \u211d\nh\u2080 : p = 2 ^ m\nh\u2081 : q = 3 ^ n\n\u22a2 p ^ (2 * n) * q ^ m = 12 ^ (m * n)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1284"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "f091db928ad6b2b222ac0e4154c7b6e88d1cfe8a25505ecf4fe7a7e11719e944"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1290,
        "start_column": 14,
        "end_line": 1290,
        "end_column": 19
      },
      "debug_info": {
        "goal": "a : \u2115\nh\u2080 : Even a\nh\u2081 : \u2191(\u2211 k \u2208 Finset.range 8, (2 * k + 1)) - \u2191(\u2211 k \u2208 Finset.range 5, (a + 2 * k)) = 4\n\u22a2 a = 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1290"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "c7ca3999e83694198d8b160766de78cf8d2d07ef0a64fad44055ee9403764906"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1295,
        "start_column": 22,
        "end_line": 1295,
        "end_column": 27
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\n\u22a2 0 \u2264 x \u2227 x \u2264 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1295"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "192715e69a332bd3847a9202514fa1ab626d86165ab7e4ff6364e9acaaf523c3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1304,
        "start_column": 15,
        "end_line": 1304,
        "end_column": 20
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : 0 < x\nh\u2081 : x ^ 2 - 10 * x - 29 \u2260 0\nh\u2082 : x ^ 2 - 10 * x - 45 \u2260 0\nh\u2083 : x ^ 2 - 10 * x - 69 \u2260 0\nh\u2084 : 1 / (x ^ 2 - 10 * x - 29) + 1 / (x ^ 2 - 10 * x - 45) - 2 / (x ^ 2 - 10 * x - 69) = 0\n\u22a2 x = 13",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1304"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "69a24401699d99381faf1ea6d6bdcbc8c5f30bc1257155d273ecaa6b5a489fe6"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1311,
        "start_column": 20,
        "end_line": 1311,
        "end_column": 25
      },
      "debug_info": {
        "goal": "m n : \u2115\nh\u2080 : 1 < m\nh\u2081 : 1 < n\nh\u2082 : m * n = 2005\n\u22a2 m + n = 406",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1311"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "4cfd26639706c8fb559ae149998e98ad1bea0f463ae06029421e0ae45a2dd4df"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1316,
        "start_column": 44,
        "end_line": 1316,
        "end_column": 49
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : n = 11\n\u22a2 (1 / 4) ^ (n + 1) * 2 ^ (2 * n) = 1 / 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1316"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "4346f6ea9ac12ff3ed74a89e1437daa12cc731003e0d684fdc866c46ba029cee"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1321,
        "start_column": 87,
        "end_line": 1321,
        "end_column": 92
      },
      "debug_info": {
        "goal": "a : \u2115 \u2192 NNReal\nh\u2080 : \u2211 x \u2208 Finset.range 100, a (x + 1) ^ 2 = 1\n\u22a2 \u2211 x \u2208 Finset.range 99, a (x + 1) ^ 2 * a (x + 2) + a 100 ^ 2 * a 1 < 12 / 25",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1321"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "ee0d609dea106830c3d9875bf059c0a656d7375e383f3cd338906554a8923f93"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1329,
        "start_column": 18,
        "end_line": 1329,
        "end_column": 23
      },
      "debug_info": {
        "goal": "x y z : \u211d\nh\u2080 : 0 < x \u2227 0 < y \u2227 0 < z\nh\u2081 : x + 1 / y = 4\nh\u2082 : y + 1 / z = 1\nh\u2083 : z + 1 / x = 7 / 3\n\u22a2 x * y * z = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1329"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "b43bb570f114370f5e8275bd066a583bb7385cbd4a94ff31836372f16b073706"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1332,
        "start_column": 37,
        "end_line": 1332,
        "end_column": 42
      },
      "debug_info": {
        "goal": "\u22a2 (Complex.I / 2) ^ 2 = -(1 / 4)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1332"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "1381f3d1fbd0f1dc7a513e513f445e7cde72b637c150f3683b3bc4fac4191999"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1340,
        "start_column": 17,
        "end_line": 1340,
        "end_column": 22
      },
      "debug_info": {
        "goal": "x p : \u211d\nf : \u211d \u2192 \u211d\nh\u2080 : 0 < p \u2227 p < 15\nh\u2081 : p \u2264 x \u2227 x \u2264 15\nh\u2082 : f x = |x - p| + |x - 15| + |x - p - 15|\n\u22a2 15 \u2264 f x",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1340"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "310e8d78a65ce167374f126657386932e8df697a4a9be78829e4de9a3160b8bb"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1345,
        "start_column": 22,
        "end_line": 1345,
        "end_column": 27
      },
      "debug_info": {
        "goal": "s : \u211d \u2192 \u211d \u2192 \u211d\nh\u2080 : \u2200 (x y : \u211d), x \u2260 0 \u2192 y \u2260 0 \u2192 s x y = (1 / y - 1 / x) / (x - y)\n\u22a2 s 3 11 = 1 / 33",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1345"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "0f6a69f03ffdc7dd99f49a5a339bc034ffc061c4471746593bfb9f67fd3be961"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1352,
        "start_column": 34,
        "end_line": 1352,
        "end_column": 39
      },
      "debug_info": {
        "goal": "N : \u2115\nf : \u2115 \u2192 \u211d\nh\u2080 : \u2200 (n : \u2115), 0 < n \u2192 f n = \u2191n.divisors.card / \u2191n ^ (1 / 3)\nh\u2081 : \u2200 (n : \u2115), n \u2260 N \u2192 0 < n \u2192 f n < f N\n\u22a2 (digits 10 N).sum = 9",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1352"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "0898dbe6c8f5e44c99c5b6b861a6c5183e8bc030e4132b02c15ded2c5ca35db2"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1359,
        "start_column": 29,
        "end_line": 1359,
        "end_column": 34
      },
      "debug_info": {
        "goal": "a : \u211a\nS : Finset \u211d\nh\u2080 : \u2200 (x : \u211d), x \u2208 S \u2194 \u2191\u230ax\u230b * (x - \u2191\u230ax\u230b) = \u2191a * x ^ 2\nh\u2081 : \u2211 k \u2208 S, k = 420\n\u22a2 \u2191a.den + a.num = 929",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1359"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "fbf74c758ee53ac7b5a9e15c791e91a0a35dc0d23858077184766ba86a216071"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1364,
        "start_column": 14,
        "end_line": 1364,
        "end_column": 19
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : \u00acNat.Prime (7 + 30 * n)\n\u22a2 6 \u2264 n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1364"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "196b9a8139149a3ccc7a6d8af9385d6d80a3db8d9889d52187bfeef27f8ae455"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1371,
        "start_column": 76,
        "end_line": 1371,
        "end_column": 81
      },
      "debug_info": {
        "goal": "a b c d e f g : \u211d\nh\u2080 : a + 4 * b + 9 * c + 16 * d + 25 * e + 36 * f + 49 * g = 1\nh\u2081 : 4 * a + 9 * b + 16 * c + 25 * d + 36 * e + 49 * f + 64 * g = 12\nh\u2082 : 9 * a + 16 * b + 25 * c + 36 * d + 49 * e + 64 * f + 81 * g = 123\n\u22a2 16 * a + 25 * b + 36 * c + 49 * d + 64 * e + 81 * f + 100 * g = 334",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1371"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "433c272ef1b3486f511e57ec392aebc451ef4df5569efea1a9647d31b89431e6"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1378,
        "start_column": 17,
        "end_line": 1378,
        "end_column": 22
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 2 \u2264 n\nh\u2081 : \u2203 x, x ^ 3 = n\nh\u2082 : \u2203 t, t ^ 4 = n\n\u22a2 4096 \u2264 n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1378"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "9f34166f22132272961d940c59930ffd0df059954de98b7c2577e5effc7c6f11"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1384,
        "start_column": 18,
        "end_line": 1384,
        "end_column": 23
      },
      "debug_info": {
        "goal": "m b : \u211d\nh\u2080 : m * 7 + b = -1\nh\u2081 : m * -1 + b = 7\n\u22a2 m + b = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1384"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "fae33dbaf3a646a94993fa8169073b8aa1b65247fe7cd19f2e5ffb6e6676d7fd"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1390,
        "start_column": 14,
        "end_line": 1390,
        "end_column": 19
      },
      "debug_info": {
        "goal": "a b : \u2115\nh\u2080 : 0 < a \u2227 0 < b\nh\u2081 : \u2203 k > 0, 2 ^ k = (a + b ^ 2) * (b + a ^ 2)\n\u22a2 a = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1390"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "cea6c2fd454b99dc318c83b72b3face9f70de9699428914800c84cdad2af5319"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1395,
        "start_column": 15,
        "end_line": 1395,
        "end_column": 20
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : 5 + 500 / 100 * 10 = 110 / 100 * x\n\u22a2 x = 50",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1395"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "d2c7e9e539be678e65f44b991834825b3bb4561312fa3614d0ddaaa02ad56347"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1404,
        "start_column": 23,
        "end_line": 1404,
        "end_column": 28
      },
      "debug_info": {
        "goal": "k m n : \u2115\nt : \u211d\nh\u2080 : 0 < k \u2227 0 < m \u2227 0 < n\nh\u2081 : m.gcd n = 1\nh\u2082 : (1 + sin t) * (1 + cos t) = 5 / 4\nh\u2083 : (1 - sin t) * (1 - cos t) = \u2191m / \u2191n - \u221a\u2191k\n\u22a2 k + m + n = 27",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1404"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "86d1380ccdea8581190fa6f6741ef912b7752c8aa9f4e3bc31bb8006abfaf951"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1409,
        "start_column": 24,
        "end_line": 1409,
        "end_column": 29
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : n % 5 = 3\n\u22a2 2 * n % 5 = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1409"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "3757c8dae4870cf2e7977cd1ad187e3a954e57888f5c2fc0c70833e503372e62"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1414,
        "start_column": 62,
        "end_line": 1414,
        "end_column": 67
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : x \u2260 0\n\u22a2 12 / (x * x) * (x ^ 4 / (14 * x)) * (35 / (3 * x)) = 10",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1414"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "fc47c56e3969d8ccbf6817824140b3f0d1e35596e518dd53c94795f3376e9509"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1420,
        "start_column": 46,
        "end_line": 1420,
        "end_column": 51
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\nh\u2081 : 3 \u2223 n\n\u22a2 (n + 4 + (n + 6) + (n + 8)) % 9 = 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1420"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "937ab33f78765d658b702727130d0e485689c7f3352631b5da677ff74b6f409f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1427,
        "start_column": 24,
        "end_line": 1427,
        "end_column": 29
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh\u2080 : 3 * a + b + c = -3\nh\u2081 : a + 3 * b + c = 9\nh\u2082 : a + b + 3 * c = 19\n\u22a2 a * b * c = -56",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Test.lean#L1427"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "631d3515a38188c3566d56fd36e9ff3da1bded8058e546523ca8981182ccfe5f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 15,
        "start_column": 2,
        "end_line": 15,
        "end_column": 7
      },
      "debug_info": {
        "goal": "z : \u2102\nh\u2080 : z = (1 + Complex.I) / \u2191\u221a2\n\u22a2 (\u2211 k \u2208 Finset.Icc 1 12, z ^ k ^ 2) * \u2211 k \u2208 Finset.Icc 1 12, 1 / z ^ k ^ 2 = 36",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L15"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-05T19:30:53-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "6d5fb017e3657bec15a76dc9eb1d726bdfecf8af530440dd78c9710cfd955677"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 18,
        "start_column": 2,
        "end_line": 18,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u2124\nh\u2080 : 0 < y\nh\u2081 : y < x\nh\u2082 : x + y + x * y = 80\n\u22a2 x = 26",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L18"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-14T07:42:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "c486df4e2809a18fd833d6f96ab671638495e45c9e2ca111eb97bb3f01c01906"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 22,
        "start_column": 2,
        "end_line": 22,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : 0 < x \u2227 0 < y\nh\u2081 : y ^ 3 = 1\nh\u2082 : 6 * x ^ 2 = 2 * (6 * y ^ 2)\n\u22a2 x ^ 3 = 2 * \u221a2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L22"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-14T07:42:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "fb57d404e97face09a7c9263e851eba6a0c39959522f5e97957b2b2afbfc320a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 29,
        "start_column": 2,
        "end_line": 29,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : logb 8 a + logb 4 (b ^ 2) = 5\nh\u2081 : logb 8 b + logb 4 (a ^ 2) = 7\n\u22a2 a * b = 512",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-14T07:42:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "1d935222f74f62239e4fdd8f493c58fc20485f89a88feee11fc1da95fe41fdd5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 33,
        "start_column": 2,
        "end_line": 33,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m x : \u2124\nh\u2080 : 0 \u2264 x\nh\u2081 : 10 \u2264 m \u2227 m \u2264 99\nh\u2082 : 6 * x % m = 1\nh\u2083 : (x - 6 ^ 2) % m = 0\n\u22a2 m = 43",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-14T07:42:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "cdb82a32d49bb36df899a00443e4d2e661f3a91f1b539240b274c2e207aa006c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 41,
        "start_column": 2,
        "end_line": 41,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k x : \u211d\nh\u2080 : x = (13 - \u221a131) / 4\nh\u2081 : 2 * ((13 - \u221a131) / 4) ^ 2 - 13 * ((13 - \u221a131) / 4) + k = 0\n\u22a2 13 * ((13 - \u221a131) / 4) - 2 * ((13 - \u221a131) / 4 * ((13 - \u221a131) / 4)) = 19 / 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "dd1b74f40c05",
        "blame_date": "2025-01-21T09:55:27-05:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "1b5360b8793f8b073e7a7186208fde6107ff8a28578136834c10370efbc9affe"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 46,
        "start_column": 2,
        "end_line": 46,
        "end_column": 7
      },
      "debug_info": {
        "goal": "u v : \u2115\nS : Set \u2115\nh\u2080 : \u2200 (n : \u2115), n \u2208 S \u2194 0 < n \u2227 14 * n % 100 = 46\nh\u2081 : IsLeast S u\nh\u2082 : IsLeast (S \\ {u}) v\n\u22a2 (\u2191u + \u2191v) / 2 = 64",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-14T07:42:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "0b3eb5483439ef02baef3967b39bf46bef2fd0e257786103f25f76f7c4f81d38"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 53,
        "start_column": 2,
        "end_line": 53,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c : \u211d\nf : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f (x + 3) = 3 * x ^ 2 + 7 * x + 4\nh\u2081 : \u2200 (x : \u211d), f x = a * x ^ 2 + b * x + c\n\u22a2 a + b + c = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L53"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-14T07:42:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "a21980b00aa15d887f95b6bded6dda2223499b2d1e258e08c98de3e9731149b0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 58,
        "start_column": 2,
        "end_line": 58,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a : \u2115 \u2192 \u211a\nh\u2080 : a 1 = 1\nh\u2081 : a 2 = 3 / 7\nh\u2082 : \u2200 (n : \u2115), a (n + 2) = a n * a (n + 1) / (2 * a n - a (n + 1))\n\u22a2 \u2191(a 2019).den + (a 2019).num = 8078",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L58"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-14T14:42:51-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "7640c4cd08c7d9dd997aa6b62b150d2dc567ac65e8240ab8eb558933ba74f0fc"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 63,
        "start_column": 2,
        "end_line": 63,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : \u2200 (x : \u211d), x - 3 \u2260 0 \u2227 x - 5 \u2260 0 \u2192 4 * x / (x ^ 2 - 8 * x + 15) = a / (x - 3) + b / (x - 5)\n\u22a2 a = -6 \u2227 b = 10",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L63"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-14T14:42:51-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "0fdebddfbdc1d14ef9018421cda9f3dc94c59a9aaca44b733c2d1d0c87d2771a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 67,
        "start_column": 2,
        "end_line": 67,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 \u2211 k \u2208 Finset.range n, (2 * k + 3) = (n + 1) ^ 2 - 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L67"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-10-24T17:46:46-07:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "ec85a9a25a21a4d6678a5fa072510528759f4d82e72812f339ea4fa36e6c28a1"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 71,
        "start_column": 2,
        "end_line": 71,
        "end_column": 7
      },
      "debug_info": {
        "goal": "r : \u211d\nh\u2080 : \u2211 k \u2208 Finset.Icc 19 91, \u230ar + \u2191k / 100\u230b = 546\n\u22a2 \u230a100 * r\u230b = 743",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L71"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-14T15:01:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "194c716015de2537a63bd3c86f45ee010607dec1638ac6a2d041c4d5e08d8bc0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 79,
        "start_column": 2,
        "end_line": 79,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u2124\nh\u2080 : 0 < a \u2227 0 < b\nh\u2081 : \u00ac7 \u2223 a\nh\u2082 : \u00ac7 \u2223 b\nh\u2083 : \u00ac7 \u2223 a + b\nh\u2084 : 7 ^ 7 \u2223 (a + b) ^ 7 - a ^ 7 - b ^ 7\n\u22a2 19 \u2264 a + b",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-14T15:01:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "53a8a760cd2284b7774f7893156870ea518d386dfb5b75b66508816399567662"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 82,
        "start_column": 2,
        "end_line": 82,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u220f k \u2208 Finset.Icc 1 501, (4 * \u2191k + 4) / (4 * \u2191k) = 502",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-14T15:01:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "3ee9bdc158174211b10056af5e537978c483a8d2f532a14224909bdcc2b72f80"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 87,
        "start_column": 2,
        "end_line": 87,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c : \u211d\n\u22a2 a * b * (a ^ 2 - b ^ 2) + b * c * (b ^ 2 - c ^ 2) + c * a * (c ^ 2 - a ^ 2) \u2264\n    9 * \u221a2 / 32 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L87"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-14T15:01:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "e692111ea926d1e0786ee81a60f4c0121072b3825efa856134e2c586ea3f8321"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 94,
        "start_column": 2,
        "end_line": 94,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 \u00ac7 \u2223 2 ^ n + 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L94"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "53e2ba09f6161e4f49767f5115afcca8b4cd609555c93fb2fc677b2b90d5669f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 98,
        "start_column": 4,
        "end_line": 98,
        "end_column": 9
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (x : \u2115), x \u2208 S \u2194 0 < x \u2227 x < 1000 \u2227 x.divisors.card = 3\n\u22a2 S.card = 11",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L98"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "c6fb1651f2efe394a3fa1cc6e1e09ed798403635a63a29a122c4219ca38a4bb8"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 101,
        "start_column": 2,
        "end_line": 101,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 IsLeast {x | 30 * x \u2261 42 [MOD 47]} 39",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L101"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "5824b19e5c2d54f6f8f2a6c805f1de7d373650a51c5079d59dc2fbc2dba76052"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 104,
        "start_column": 2,
        "end_line": 104,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u2115 \u2192 \u2115\n\u22a2 \u2203 n, f (f n) \u2260 n + 1987",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L104"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "e3b14cb78b94c14200b544212f91ff6f3b4ba132bc5d36792b7aa8afb61ab03d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 107,
        "start_column": 2,
        "end_line": 107,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : n < 398\nh\u2081 : n * 7 % 398 = 1\n\u22a2 n = 57",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L107"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "4bcef5f41f4d6d711c6b8dc3d0a73b9adab326cbdf7219ef0e05d03af4941d0e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 127,
        "start_column": 2,
        "end_line": 127,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : 0 \u2264 x\nh\u2081 : x \u2264 2 * Real.pi\nh\u2082 : 2 * cos x \u2264 |\u221a(1 + sin (2 * x)) - \u221a(1 - sin (2 * x))|\nh\u2083 : |\u221a(1 + sin (2 * x)) - \u221a(1 - sin (2 * x))| \u2264 \u221a2\n\u22a2 Real.pi / 4 \u2264 x \u2227 x \u2264 7 * Real.pi / 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L127"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "894f0676a76f3f559a84d75fb5b89b469aa6465cfce778837c149cefef2bcf0d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 136,
        "start_column": 2,
        "end_line": 136,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a : \u2124\n\u22a2 a ^ 2 % 4 = 0 \u2228 a ^ 2 % 4 = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L136"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "b676d2b06b617b7a92c8b7f5ee2586d7f290f7f5488487b46775c3d49b7fa4b4"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 149,
        "start_column": 2,
        "end_line": 149,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u2102 \u2192 \u2102\nh\u2080 : \u2200 (x : \u2102), f (x / 3) = x ^ 2 + x + 1\nh\u2081 : Fintype \u2191(f \u207b\u00b9' {7})\n\u22a2 \u2211 y \u2208 (f \u207b\u00b9' {7}).toFinset, y / 3 = -1 / 9",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L149"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "0fbf7e32cb744e023212c92c571ee9fe0a403eadb70334cfbe714b3aabc98cb8"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 155,
        "start_column": 2,
        "end_line": 155,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : x ^ 3 - (x + 1) * (x - 1) * x = 5\n\u22a2 x ^ 3 = 125",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L155"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "78dcf5db8e755344e6909a407d03208c6b05b774a24574f4e7bdcc9b16073a43"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 162,
        "start_column": 2,
        "end_line": 162,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (n : \u2115), n \u2208 S \u2194 \u221a\u2191n < 7 / 2 \u2227 2 < \u221a\u2191n\n\u22a2 S.card = 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L162"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "d3dad922a2cdcedf39b0be4241e847e09f58cdbea20bad79fdb86b178a8b4f15"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 165,
        "start_column": 2,
        "end_line": 165,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 3 \u2223 n ^ 3 + 2 * n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L165"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "da8d2e235c477ed2cfe031da0c585e9e0d9c410074913505e40d36a22a4e8265"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 169,
        "start_column": 2,
        "end_line": 169,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 \u2211 k \u2208 Finset.range n, 1 / ((\u2191k + 1) * (\u2191k + 2)) = \u2191n / (\u2191n + 1)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L169"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "0e814477604149dcd077f44139ab526f7c1e8b51b472a4e869f2f121c8867ebd"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 172,
        "start_column": 2,
        "end_line": 172,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (n : \u2115), n \u2208 S \u2194 n \u2223 36\n\u22a2 \u2211 k \u2208 S, k = 91",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L172"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "e78f7a816e1da27c5c2377887457a961b5c644c6e378a0771d97aa71cd83cf1b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 176,
        "start_column": 2,
        "end_line": 176,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\n\u03c3 : \u211d \u2243 \u211d\nh\u2080 : \u2200 (x : \u211d), \u03c3.toFun x = 5 * x - 12\nh\u2081 : \u03c3.toFun (x + 1) = \u03c3.invFun x\n\u22a2 x = 47 / 24",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L176"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "8dd089b5ce34222743a4951dc0df164e88b74cbf6d1530757317bec8d09d730d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 180,
        "start_column": 2,
        "end_line": 180,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u2115\nh\u2080 : Nat.Prime a\nh\u2081 : Nat.Prime b\nh\u2082 : Nat.Prime (a + b)\nh\u2083 : Nat.Prime (a - b)\n\u22a2 Nat.Prime (a + b + (a - b + (a + b)))",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L180"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "a5f717c801ca4406b945186166a3bb58095c904138fd76600f8525d820106ca9"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 184,
        "start_column": 2,
        "end_line": 184,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p q r x : \u2102\nh\u2080 : (x - p) * (x - q) = (r - p) * (r - q)\nh\u2081 : x \u2260 r\n\u22a2 x = p + q - r",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L184"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "f3ea65134c9a9b5d7ea0a458723abe0f380eb3cec13363598af5f15692b66b30"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 194,
        "start_column": 2,
        "end_line": 194,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y z : \u2124\nh\u2080 : (x - y) ^ 2 + (y - z) ^ 2 + (z - x) ^ 2 = x * y * z\n\u22a2 x + y + z + 6 \u2223 x ^ 3 + y ^ 3 + z ^ 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L194"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "c115d22728c52c27245ca23c187c810aca427c713be6a129da29cd038b469268"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 205,
        "start_column": 2,
        "end_line": 205,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : Set \u211d\nh\u2080 : S = {x | cos x ^ 2 + cos (2 * x) ^ 2 + cos (3 * x) ^ 2 = 1}\n\u22a2 S =\n    {x |\n      \u2203 m,\n        x = Real.pi / 2 + \u2191m * Real.pi \u2228\n          x = Real.pi / 4 + \u2191m * Real.pi / 2 \u2228\n            x = Real.pi / 6 + \u2191m * Real.pi / 6 \u2228 x = 5 * Real.pi / 6 + \u2191m * Real.pi / 6}",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L205"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "2bfd7ac940934ae430634e92cf0754574da9c3009b5c97fe6be5a01b46e2d8de"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 216,
        "start_column": 2,
        "end_line": 216,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a : \u2115 \u2192 NNReal\nn : \u2115\nh\u2080 : (Finset.range n).prod a = 1\n\u22a2 (Finset.range n).sum a \u2265 \u2191n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L216"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "d6e442c029d65da55bde5e4d5d689241db0ec5cf2493fbd5ef7bcbc4f66d765f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 226,
        "start_column": 2,
        "end_line": 226,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u2115\nh\u2080 : 1 \u2264 x \u2227 x \u2264 100\nh\u2081 : 77 \u2223 \u2211 k \u2208 Finset.range 101, k - x\n\u22a2 x = 45",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L226"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "c5e31f1bbb5e25a1c7681b72f0c75590b20f0a5877d2fcb4cc3aedf664bfa3c5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 236,
        "start_column": 2,
        "end_line": 236,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : x = 5\nh\u2081 : y = 2\n\u22a2 \u221a(x ^ 3 - 2 ^ y) = 11",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L236"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "be551f6a8f76ae6b92684e453d004a0d3e793d0c0375ea2db35d286cee220196"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 243,
        "start_column": 2,
        "end_line": 243,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : x + y = 13\nh\u2081 : x * y = 24\n\u22a2 \u221a(x ^ 2 + y ^ 2) = 11",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L243"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "ecb4b88779a7205580afc53521005dda84d395a844f52c154c008155d94b2e28"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 247,
        "start_column": 2,
        "end_line": 247,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : \u2200 (x : \u211d), 24 * x ^ 2 - 19 * x - 35 = (a * x - 5) * (2 * (b * x) + c)\n\u22a2 a * b - 3 * c = -9",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L247"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "93a0c42a846577ccaa3098f37e57a787b956b1634d37501690fc45ad0a129c41"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 258,
        "start_column": 2,
        "end_line": 258,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080\u271d : 0 < n\nh\u2080 : \u2211 k \u2208 Finset.Icc 1 n, \u230alogb 2 \u2191k\u230b = 1994\n\u22a2 n = 312",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L258"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "121a1b3e0dc4512915bdcf8b029115b52f2d41b80dfed39af146fa1f62b7dd1c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 265,
        "start_column": 2,
        "end_line": 265,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : x \u2260 0\n\u22a2 (4 / x)\u207b\u00b9 * (3 * x ^ 3 / x) ^ 2 * (1 / (2 * x))\u207b\u00b9 ^ 3 = 18 * x ^ 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L265"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "b07667e48d4e2ea36f569dfb72b6b55d0723f32be3af69196aa8637b0eb5f491"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 268,
        "start_column": 2,
        "end_line": 268,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : 0 < a \u2227 0 < b\n\u22a2 (a + b) ^ 4 \u2264 8 * (a ^ 4 + b ^ 4)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L268"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "f2abc9d83782192076e604d25e597c7e3bb75403b46c70000674be46a99a2e0c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 272,
        "start_column": 2,
        "end_line": 272,
        "end_column": 7
      },
      "debug_info": {
        "goal": "c : \u211d\nf : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = 2 * x ^ 2 + 5 * x + c\nh\u2081 : \u2203 x, f x \u2264 0\n\u22a2 c \u2264 25 / 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L272"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "fa0a79d20a6159265450f933533079fce4af7126082c7ecc9370e54f75817834"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 275,
        "start_column": 2,
        "end_line": 275,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2211 k \u2208 (30 ^ 4).divisors, 1 - 2 = 123",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L275"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "de3c95c3ae73b9fee9c63f119cf1bffe7c1f3246a7df5919c63c9d9dc367c569"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 279,
        "start_column": 2,
        "end_line": 279,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nh\u2080 : \u2200 x < 0, f x = -x ^ 2 - 1\nh\u2081 : \u2200 (x : \u211d), 0 \u2264 x \u2227 x < 4 \u2192 f x = 2\nh\u2082 : \u2200 x \u2265 4, f x = \u221ax\n\u22a2 f Real.pi = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L279"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "ee5cd9863fe1651205ea60bd55254688ed6c11d96a39d05be75093d0bcee279b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 283,
        "start_column": 2,
        "end_line": 283,
        "end_column": 7
      },
      "debug_info": {
        "goal": "rows seats : \u2115\nh\u2080 : rows * seats = 450\nh\u2081 : (rows + 5) * (seats - 3) = 450\n\u22a2 rows = 25",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L283"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "76d6ac2404f1edcfdd5fe02bacf4201155e82055e98c9e9715e7fe10668bf6e5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 286,
        "start_column": 2,
        "end_line": 286,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = 3 * \u221a(2 * x - 7) - 8\n\u22a2 f 8 = 19",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L286"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "b78674fb6c28112bcae91021a236f226f1d8bf2cfa55e3106ccb1e5592758cd4"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 297,
        "start_column": 2,
        "end_line": 297,
        "end_column": 7
      },
      "debug_info": {
        "goal": "t : \u2115 \u2192 \u211a\nh\u2080 : t 1 = 20\nh\u2081 : t 2 = 21\nh\u2082 : \u2200 n \u2265 3, t n = (5 * t (n - 1) + 1) / (25 * t (n - 2))\n\u22a2 \u2191(t 2020).den + (t 2020).num = 626",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L297"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "92e1ba98b0985e7e50da7cdf0673b4d974dfeba4288adfcb675e072ff450b071"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 311,
        "start_column": 2,
        "end_line": 311,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\nh : x > 0\n\u22a2 2 - \u221a2 \u2265 2 - x - 1 / (2 * x)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L311"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "055c3a504e3a46854e61efdb8c249dc0937ca59cbfc9b243577ad7fb0cfd43a0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 318,
        "start_column": 2,
        "end_line": 318,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (n : \u2115), n \u2208 S \u2194 n \u2223 Nat.sqrt 196\n\u22a2 \u2211 k \u2208 S, k = 24",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L318"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-18T16:45:18-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "38093b6a4de13b17ef6c38752d70fbf35dd94c08b09f6d93f10b6c34171a763b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 350,
        "start_column": 2,
        "end_line": 350,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y z w : \u211d\nh\u2080 : x ^ 2 / (2 ^ 2 - 1) + y ^ 2 / (2 ^ 2 - 3 ^ 2) + z ^ 2 / (2 ^ 2 - 5 ^ 2) + w ^ 2 / (2 ^ 2 - 7 ^ 2) = 1\nh\u2081 : x ^ 2 / (4 ^ 2 - 1) + y ^ 2 / (4 ^ 2 - 3 ^ 2) + z ^ 2 / (4 ^ 2 - 5 ^ 2) + w ^ 2 / (4 ^ 2 - 7 ^ 2) = 1\nh\u2082 : x ^ 2 / (6 ^ 2 - 1) + y ^ 2 / (6 ^ 2 - 3 ^ 2) + z ^ 2 / (6 ^ 2 - 5 ^ 2) + w ^ 2 / (6 ^ 2 - 7 ^ 2) = 1\nh\u2083 : x ^ 2 / (8 ^ 2 - 1) + y ^ 2 / (8 ^ 2 - 3 ^ 2) + z ^ 2 / (8 ^ 2 - 5 ^ 2) + w ^ 2 / (8 ^ 2 - 7 ^ 2) = 1\n\u22a2 x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2 = 36",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L350"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "6687f4d7c5a2782c9e0975f7b8bcc76672197696eaa5efa61a8a8b9ba93706d1"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 354,
        "start_column": 2,
        "end_line": 354,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : 0 < x \u2227 0 < y\nh\u2081 : y \u2264 x\nh\u2082 : \u221a(x * y) * (x - y) = x + y\n\u22a2 x + y \u2265 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L354"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "ea7ebd3fcefabb12385410a03eeeb8e7e65b6c26d8df42fbac74aba683f9790c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 358,
        "start_column": 62,
        "end_line": 358,
        "end_column": 67
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u2115\nh\u2080 : u 0 = 4\nh\u2081 : u 1 = 7\nh\u2082 : \u2200 n \u2265 2, u (n + 2) = (u n + u (n + 1)) % 10\n\u22a2 \u2200 (n : \u2115), \u2211 k \u2208 Finset.range n, u k > 10000 \u2192 1999 \u2264 n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L358"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "c58f627a76c409d1f4363e4dd04b5ed32181577217eacfbdc865b0c263fd6b3d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 362,
        "start_column": 2,
        "end_line": 362,
        "end_column": 7
      },
      "debug_info": {
        "goal": "q e d : \u2102\nh\u2080 : q = 11 - 5 * Complex.I\nh\u2081 : e = 11 + 5 * Complex.I\nh\u2082 : d = 2 * Complex.I\n\u22a2 q * e * d = 292 * Complex.I",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L362"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2024-03-19T21:28:14-05:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "bdaa7cdb3740ca36230c6e822b46a095dbdf997bedc0fd01c6d7c1d56c4038e9"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 366,
        "start_column": 2,
        "end_line": 366,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : a \u2260 0 \u2227 b \u2260 0\nh\u2081 : \u2200 (x : \u211d), x ^ 2 + a * x + b = (x - a) * (x - b)\n\u22a2 a = 1 \u2227 b = -2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L366"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "4bff8ec2d3da18148f41ea50b097a662ec357a39fbe56a1c442a8bbc187b8aed"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 372,
        "start_column": 2,
        "end_line": 372,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\n\u22a2 49 \u2264 \u2211 k \u2208 Finset.Icc 1 119, |\u2191k * x - 1|",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L372"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "a6da6d1d7ba88c639c588a636faee0a2105aed552372b523b543ed13ca9c5d64"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 383,
        "start_column": 2,
        "end_line": 383,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\na : \u2115 \u2192 \u2115\nh\u2080 : Function.Injective a\nh\u2081 : a 0 = 0\nh\u2082 : 0 < n\n\u22a2 \u2211 k \u2208 Finset.Icc 1 n, 1 / \u2191k \u2264 \u2211 k \u2208 Finset.Icc 1 n, \u2191(a k) / \u2191k ^ 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L383"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "c0ed3c81e03074e811210eab04696ba9f6055958d0b8469b5697295f1581cbbd"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 387,
        "start_column": 2,
        "end_line": 387,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u2115 \u2192 \u211d\nh\u2080 : f 1 = 2\nh\u2081 : \u2200 (n : \u2115), 1 < n \u2227 Even n \u2192 f n = f (n - 1) + 1\nh\u2082 : \u2200 (n : \u2115), 1 < n \u2227 Odd n \u2192 f n = f (n - 2) + 2\n\u22a2 f 2017 = 2018",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L387"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "5a78898e2084accac7f749cf01be30d16a3b98d8acbd6b8f0dc7900ad6a917c3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 391,
        "start_column": 2,
        "end_line": 391,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : Set \u2115\nu v : \u2115\nh\u2080 : \u2200 (a : \u2115), a \u2208 S \u2194 0 < a \u2227 27 * a % 40 = 17\nh\u2081 : IsLeast S u\nh\u2082 : IsLeast (S \\ {u}) v\n\u22a2 u + v = 62",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L391"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "ac194e25688ee9408fe281c1edcef2aee8fea38b6468aeb01edf8b0f260d3af5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 395,
        "start_column": 2,
        "end_line": 395,
        "end_column": 7
      },
      "debug_info": {
        "goal": "q e : \u2102\nh\u2080 : q = 2 - 2 * Complex.I\nh\u2081 : e = 5 + 5 * Complex.I\n\u22a2 q * e = 20",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L395"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2024-03-19T21:28:14-05:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "38984327c0f79dc7007ab6ae4b98ecedbc5adc0ffc2d8be21932d43864eac968"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 400,
        "start_column": 2,
        "end_line": 400,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : Finset \u211d\nh\u2080 : \u2200 (x : \u211d), x \u2208 S \u2194 0 < x \u2227 x ^ 2 ^ \u221a2 = \u221a2 ^ 2 ^ x\n\u22a2 2 \u2264 \u2211 k \u2208 S, k \u2227 \u2211 k \u2208 S, k < 6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L400"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "15dea9e9963e10be7cb6f50c0714d49054e55ac77ea8833c11830dba6e47e66b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 404,
        "start_column": 2,
        "end_line": 404,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (x : \u2115), x \u2208 S \u2194 0 < x \u2227 x ^ 2 + 4 * x + 4 < 20\n\u22a2 S.card = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L404"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "b073d34ef1bef3229a964c94dba0104b5d1f84df51828e38da47808c85635650"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 408,
        "start_column": 2,
        "end_line": 408,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\n\u22a2 \u2211 k \u2208 Finset.Icc 1 n, k * n.choose k = n * 2 ^ (n - 1)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L408"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "c1ef488e3dd5a522fbc7e1fb7a8761e22f5de42d0b15f06a2f26f218f2c27b10"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 417,
        "start_column": 2,
        "end_line": 417,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u2115\nh\u2080 : 2 ^ x * 3 ^ y = 1296\n\u22a2 x + y = 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L417"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "f57b88fbda474395b2f10f61f16218a6b0b91818e969b8db69e8673a4cd2bd70"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 421,
        "start_column": 2,
        "end_line": 421,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (n : \u2115), n \u2208 S \u2194 2 \u2264 n \u2227 171 \u2261 80 [MOD n] \u2227 468 \u2261 13 [MOD n]\n\u22a2 \u2211 k \u2208 S, k = 111",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L421"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "79fc166db4ec107bfa1303621649364071fd8d0f1225f50cb4854e90de66f692"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 424,
        "start_column": 2,
        "end_line": 424,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2308\u221a27\u2309 - \u230a\u221a26\u230b = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L424"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "2b66e3b045e7292111ddfb4c507f272b717be8993bf6f574e76a17d849d9a287"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 428,
        "start_column": 2,
        "end_line": 428,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : |x + y| + |x - y| = 2\n\u22a2 x ^ 2 - 6 * x + y ^ 2 \u2264 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L428"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "b8d922b04f7385820370875c938ffc76a6c254142ede79e0bb237133a932dd3f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 444,
        "start_column": 2,
        "end_line": 444,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a r : \u211d\nu : \u2115 \u2192 \u211d\nh\u2080 : \u2200 (k : \u2115), u k = a * r ^ k\nh\u2081 : u 1 = 2\nh\u2082 : u 3 = 6\n\u22a2 u 0 = 2 / \u221a3 \u2228 u 0 = -(2 / \u221a3)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L444"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "a73ee2ab4b4d925b175c6399053fb32ebd69b88c48c1c4cf440747c456c6882b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 452,
        "start_column": 2,
        "end_line": 452,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u2115\nh\u2080 : 0 < x \u2227 0 < y\nh\u2081 : x * y + (x + y) = 71\nh\u2082 : x ^ 2 * y + x * y ^ 2 = 880\n\u22a2 x ^ 2 + y ^ 2 = 146",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L452"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "fb225080d8e4713b4e68e3605fb63b2caa32c72dffff74b9cee2b0dd41c589b0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 461,
        "start_column": 2,
        "end_line": 461,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u2115\nh\u2080 : 0 < a \u2227 0 < b\nh\u2081 : a * b + 1 \u2223 a ^ 2 + b ^ 2\n\u22a2 \u2203 x, \u2191x ^ 2 = (\u2191a ^ 2 + \u2191b ^ 2) / (\u2191a * \u2191b + 1)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L461"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "73c08714fb9168af53507315d56dcb7b15b815f2b0daf0283c22a6c7285547f0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 467,
        "start_column": 2,
        "end_line": 467,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c r s t : \u211d\nf g : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = x ^ 3 + 3 * x ^ 2 + 4 * x - 11\nh\u2081 : \u2200 (x : \u211d), g x = x ^ 3 + r * x ^ 2 + s * x + t\nh\u2082 : f a = 0\nh\u2083 : f b = 0\nh\u2084 : f c = 0\nh\u2085 : g (a + b) = 0\nh\u2086 : g (b + c) = 0\nh\u2087 : g (c + a) = 0\nh\u2088 : List.Pairwise (fun x1 x2 => x1 \u2260 x2) [a, b, c]\n\u22a2 t = 23",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L467"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "930cad99f93d1cde39e33bb5e3fa1ac1a3272a53a74df47ea3f189499edfce32"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 476,
        "start_column": 2,
        "end_line": 476,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a c : \u211d\n\u22a2 2 * a * (2 + c) \u2264 a ^ 2 + c ^ 2 + 4 * (1 + c)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L476"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "819fa128a934146849fa1c6447c676dcbc26a8db64a03d4296876b867def65f4"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 479,
        "start_column": 2,
        "end_line": 479,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 IsGreatest {n | 15 ^ n \u2223 factorial 942} 233",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L479"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "97321cbab13ef7e14eaff00117b1dce697e8eb9392a0ea36e3d7443c41338ad3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 507,
        "start_column": 2,
        "end_line": 507,
        "end_column": 7
      },
      "debug_info": {
        "goal": "s : Finset \u2124\nf : \u2124 \u2192 \u2124\nh\u2080 : \u2200 (x : \u2124), f x = |x + 4|\nh\u2081 : \u2200 (x : \u2124), x \u2208 s \u2194 f x < 9\n\u22a2 s.card = 17",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L507"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "b01b09097001ab26c66ce55fbf150cb9be876127e63aa40abb06ff1a2d2b3257"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 510,
        "start_column": 2,
        "end_line": 510,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a : \u211d\n\u22a2 10 * a \u2264 28 * a ^ 2 + 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L510"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "78f26dc57b9cdda085c3ceb89309b4085c6ede5a8ceac6c00be6cabf5c3de905"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 514,
        "start_column": 2,
        "end_line": 514,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u2115\nh\u2080 : 1 \u2264 a \u2227 a \u2264 9 \u2227 b \u2264 9\nh\u2081 : 10 * a + b = 2 * (a + b)\n\u22a2 10 * a + b = 18",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L514"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "d66e415dbde6b5f19f6c78858378044950686e6cb018bbe4a52c7902b8826af5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 522,
        "start_column": 2,
        "end_line": 522,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\nh\u2081 : (2 * n).divisors.card = 28\nh\u2082 : (3 * n).divisors.card = 30\n\u22a2 (6 * n).divisors.card = 35",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L522"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "c2e30f9f6bb33edd35af68f610885615d625af5eb28570c8b56fedb962972f66"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 526,
        "start_column": 2,
        "end_line": 526,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : x \u2260 0\nh\u2081 : y \u2260 0\nh\u2082 : x \u2260 y\nh\u2083 : x + 2 / x = y + 2 / y\n\u22a2 x * y = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L526"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "3be27cd4f2bb51f516519c086a7b8c41a6aa1c9927ee5c46c7d133637125f64f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 535,
        "start_column": 2,
        "end_line": 535,
        "end_column": 7
      },
      "debug_info": {
        "goal": "b : \u211d\nh\u2080 : 4 ^ b + 2 ^ 3 = 12\n\u22a2 b = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L535"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "0a3b6769e17342917c0d6a7c3e2ef68a78a116b01051ca04aa85041f2f7ab6a9"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 538,
        "start_column": 2,
        "end_line": 538,
        "end_column": 7
      },
      "debug_info": {
        "goal": "d : \u211d\nh\u2080 : 27 / 125 * d = 9 / 25\n\u22a2 3 / 5 * d ^ 3 = 25 / 9",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L538"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "14f353ca76781adace5b04bbcb2645f4966576ffd419e98a4f5f798516a08765"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 544,
        "start_column": 2,
        "end_line": 544,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : \u2203 x, x ^ 4 + a * x ^ 3 + b * x ^ 2 + a * x + 1 = 0\n\u22a2 4 / 5 \u2264 a ^ 2 + b ^ 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L544"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "b3bef25150559bda75c8cc986188c1b0bab64252e79338d06165e5600ffedf32"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 548,
        "start_column": 2,
        "end_line": 548,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u2115\nh\u2080 : 5 / 8 * \u2191b = 2 / 3 * \u2191a + 7\nh\u2081 : \u2191b - 5 / 8 * \u2191b = \u2191a - 2 / 3 * \u2191a + 7\n\u22a2 a = 42",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L548"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "376fafa04ed0bd8326cf1608bdc5dc2cf306e598ee69dd3f44ba93aef96dc12d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 551,
        "start_column": 2,
        "end_line": 551,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a : \u2124\n\u22a2 a ^ 2 % 3 = 0 \u2228 a ^ 2 % 3 = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L551"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "282a37bfcbc10432820126b63f55d1653c6cd5182d429e97a284303b956471b7"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 555,
        "start_column": 2,
        "end_line": 555,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nf : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = 2 * x ^ 2 - 7 * x + 2\nh\u2081 : f a = 0\nh\u2082 : f b = 0\nh\u2083 : a \u2260 b\n\u22a2 1 / (a - 1) + 1 / (b - 1) = -1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L555"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "88fac29ebad4fe5fa41702380cba880a8ee6b6d03c2cdd643add1142acc44e78"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 559,
        "start_column": 2,
        "end_line": 559,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : 0 < x \u2227 0 < y\nh\u2081 : Real.log (x * y ^ 3) = 1\nh\u2082 : Real.log (x ^ 2 * y) = 1\n\u22a2 Real.log (x * y) = 3 / 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L559"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "0f4de7c6c3b9672251ee416c6a3c28865de998a3333160eb2f43fe444a000a55"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 562,
        "start_column": 2,
        "end_line": 562,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2191(factorial 3) * (2 ^ 3 + \u221a9) / 2 = 33",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L562"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "4636b4e42855bac76d1346c1ddf9c3917f77b2fea2ea437af2ef1fa0acbc5891"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 565,
        "start_column": 2,
        "end_line": 565,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 logb (5 ^ 2) (5 ^ 4) = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L565"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "8c757320ec90fcc5b17502288d0bd2bb8f5cf8d753867780c1e5cd339a1061d0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 568,
        "start_column": 2,
        "end_line": 568,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211a\nh\u2080 : (x ^ 2 + y ^ 2).den = 1\n\u22a2 x.den = y.den",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L568"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "709121de30286168dacf3bfd3636a62fad89e16b9ec714f04ff31f7cea5669c7"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 573,
        "start_column": 2,
        "end_line": 573,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u2115 \u2192 \u2124\nh\u2080 : x 1 = 211\nh\u2082 : x 2 = 375\nh\u2083 : x 3 = 420\nh\u2084 : x 4 = 523\nh\u2086 : \u2200 n \u2265 5, x n = x (n - 1) - x (n - 2) + x (n - 3) - x (n - 4)\n\u22a2 x 531 + x 753 + x 975 = 898",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L573"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "4254bfd19ccf2cff85842b619ac36c1f1bcce5272230e601badc6de85370e518"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 577,
        "start_column": 2,
        "end_line": 577,
        "end_column": 7
      },
      "debug_info": {
        "goal": "b : \u2115\nh\u2080 : b < 10\nh\u2081 : (10 * b + 6).sqrt * (10 * b + 6).sqrt = 10 * b + 6\n\u22a2 b = 3 \u2228 b = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L577"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "fc7dfb74d1480296b50e69217f36a13849af22bdee1ed06555016fba348fdb6b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 581,
        "start_column": 2,
        "end_line": 581,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 IsGreatest {n | 0 < n \u2227 \u2203! k, 8 / 15 < \u2191n / (\u2191n + \u2191k) \u2227 \u2191n / (\u2191n + \u2191k) < 7 / 13} 112",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L581"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "f0a969b3f64a1f4364b16131696781d7014606246f34c04aede3572d71f9b525"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 612,
        "start_column": 2,
        "end_line": 612,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nh\u2080 : \u2200 x < -5, f x = x ^ 2 + 5\nh\u2081 : \u2200 x \u2265 -5, f x = 3 * x - 8\nh\u2082 : Fintype \u2191(f \u207b\u00b9' {10})\n\u22a2 \u2211 k \u2208 (f \u207b\u00b9' {10}).toFinset, k = 6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L612"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "330c4b6a913a10a0f2332fa748894b7b172303033973ef8d3ea297d657c5e731"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 624,
        "start_column": 2,
        "end_line": 624,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : 0 < x \u2227 x < Real.pi\n\u22a2 12 \u2264 (9 * (x ^ 2 * sin x ^ 2) + 4) / (x * sin x)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L624"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "0abbeab4baff6e578eb639743aa69a6a99388aea40a72d0674503ec38399cb3d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 627,
        "start_column": 2,
        "end_line": 627,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : x + y = 7\nh\u2081 : 3 * x + y = 45\n\u22a2 x ^ 2 - y ^ 2 = 217",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L627"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "7ef0571c54c85958e2098675ad98f8acdb0a4d6e6b999b7cae04d38f61f10de8"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 630,
        "start_column": 2,
        "end_line": 630,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : n % 8 = 7\n\u22a2 n % 4 = 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L630"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-18T16:45:18-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "235644353d877fcde3a0c9c71b7c0a8f08b0a6ad2e05ed7936a69aad382331ae"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 633,
        "start_column": 2,
        "end_line": 633,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\nh\u2080 : k = 2008 ^ 2 + 2 ^ 2008\n\u22a2 (k ^ 2 + 2 ^ k) % 10 = 6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L633"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "fe239c9a3cb16ef6afdec127f9f520ede695a26810c9386a68fffcf11b81e9e8"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 644,
        "start_column": 2,
        "end_line": 644,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\nh\u2081 : \u2211 k \u2208 Finset.Icc 1 n, \u2191k * Complex.I ^ k = 48 + 49 * Complex.I\n\u22a2 n = 97",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L644"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "5864571be25e89b5818314bcf9c4620bdba66ec0dcbd602e6cea6d4c5290f587"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 647,
        "start_column": 2,
        "end_line": 647,
        "end_column": 7
      },
      "debug_info": {
        "goal": "z a : \u211d\n\u22a2 36 * (a * z) - 9 * a ^ 2 \u2264 36 * z ^ 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L647"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "e43d107517f40311c98a8b3c4ff468578a1afbcc32eb69ed4539c2139f37bd5e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 662,
        "start_column": 2,
        "end_line": 662,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (n : \u2115), n \u2208 S \u2194 5 \u2223 n \u2227 (factorial 5).lcm n = 5 * (factorial 10).gcd n\n\u22a2 S.card = 48",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L662"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "90ebe7c10145abcbc8f65693813fd6414f3bc4f552a4a9681b52562f0e4852b1"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 666,
        "start_column": 2,
        "end_line": 666,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = x ^ 2 - 4 * \u221ax + 1\n\u22a2 f (f 4) = 70",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L666"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "1bea6e32279ca671405efcec3419eb77f0123009cc03644020c5147ece623af2"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 670,
        "start_column": 2,
        "end_line": 670,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n k : \u2115\nh\u2080 : 0 < n \u2227 0 < k\nh\u2081 : k \u2264 n\n\u22a2 n.choose k = (n - 1).choose k + (n - 1).choose (k - 1)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L670"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "5699e047d81ade4eb40ec52e6b2875bfe4142deb0a852722363ed102e45c99ab"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 690,
        "start_column": 2,
        "end_line": 690,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 (52 + 6 * \u221a43) ^ (3 / 2) - (52 - 6 * \u221a43) ^ (3 / 2) = 828",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L690"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "320ead3fb034ddf0ac7e090abb9e1cb133700676f1a3d508ae579d5e61106862"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 696,
        "start_column": 2,
        "end_line": 696,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\n\u22a2 4 * b * (a + 1) \u2264 4 * b ^ 2 + (a + 1) ^ 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L696"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "326e9d2adecc12b7c8e4d24fea40eb1fda12239e7b90c6a116256e1122599933"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 699,
        "start_column": 2,
        "end_line": 699,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\n\u22a2 (n + 7).gcd (2 * n + 1) \u2264 13",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L699"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "1ea15904e069647a80a03d98517e66ae967df23360cdf770e7203c6ace9d0b45"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 724,
        "start_column": 2,
        "end_line": 724,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), \u00acIrrational x \u2192 f x = \u2191|\u230ax\u230b|\nh\u2081 : \u2200 (x : \u211d), Irrational x \u2192 f x = \u2191\u2308x\u2309 ^ 2\n\u22a2 f (8 ^ (1 / 3)) + f (-Real.pi) + f \u221a50 + f (9 / 2) = 79",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L724"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "678638a12e2d20e8083f383a30a515268977db90eb1d0e1ff6e65ea7ecdec450"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 727,
        "start_column": 2,
        "end_line": 727,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : y = x ^ 2 - 6 * x + 13\n\u22a2 4 \u2264 y",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L727"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "d550c99d7c41e5d88ef6b6fe78dbc91d68dafdeac7b476c32de88dafb31c8a31"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 732,
        "start_column": 2,
        "end_line": 732,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 (3\u207b\u00b9 + 5\u207b\u00b9)\u207b\u00b9 = 29",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L732"
      },
      "metadata": {
        "blame_email_hash": "dd1b74f40c05",
        "blame_date": "2024-07-12T13:01:27-04:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "60015451b27f21c9fae7e3fba9474a7dc4b6a3efa219994177c44cb853aaf7cc"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 736,
        "start_column": 2,
        "end_line": 736,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nf : \u211d \u2192 \u211d\nh\u2080 : a \u2260 0 \u2227 b \u2260 0\nh\u2081 : a \u2260 b\nh\u2082 : \u2200 (x : \u211d), f x = x ^ 2 + a * x + b\nh\u2083 : f a = 0\nh\u2084 : f b = 0\n\u22a2 a = 1 \u2227 b = -2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L736"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "5ef909016afd5bfc877ec893655e8d17a854a215c0b1a898ee7ff2b4e5408ea5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 743,
        "start_column": 2,
        "end_line": 743,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c d s : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d\nh\u2081 : s = a / (a + b + d) + b / (a + b + c) + c / (b + c + d) + d / (a + c + d)\n\u22a2 1 < s \u2227 s < 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L743"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "1560ab263a187f7e5b4d37a7b28701a9853faf6c27c635142fffb7fd8eb39d65"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 747,
        "start_column": 2,
        "end_line": 747,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : 0 < x\nh\u2081 : logb 2 (logb 8 x) = logb 8 (logb 2 x)\n\u22a2 logb 2 x ^ 2 = 27",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L747"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "ed65819ba1766523f39dbaf0e72f5c66508f576c21f37f0bcd3a717d4c9db839"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 751,
        "start_column": 2,
        "end_line": 751,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n k : \u2115\nh\u2080\u271d : 0 < n \u2227 0 < k\nh\u2080 : \u2191n / \u2191k < 6\nh\u2081 : 5 < \u2191n / \u2191k\n\u22a2 22 \u2264 n.lcm k / n.gcd k",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L751"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "88f761921fce34947450e5c8a4931b159eb6770792d24e9fc94311bba741f6dd"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 760,
        "start_column": 2,
        "end_line": 760,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k m n : \u2115\nc : \u2115 \u2192 \u2115\nh\u2080 : 0 < k \u2227 0 < m \u2227 0 < n\nh\u2081 : \u2200 (s : \u2115), c s = s * (s + 1)\nh\u2082 : Nat.Prime (k + m + 1)\nh\u2083 : n + 1 < k + m + 1\n\u22a2 \u220f i \u2208 Finset.Icc 1 n, c i \u2223 \u220f i \u2208 Finset.Icc 1 n, c (m + i) - c k",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L760"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "f06359018eca46d186eb37f8ee1db06bc8991d21144d52d76024548493cd4b34"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 764,
        "start_column": 2,
        "end_line": 764,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : a \u2260 b\nh\u2081 : a \u2260 2 * b\nh\u2082 : (4 * a + 3 * b) / (a - 2 * b) = 5\n\u22a2 (a + 11 * b) / (a - b) = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L764"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2024-03-19T21:28:14-05:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "33e47424ab9b044b952a0788e57bbaf6f90bcb209828094e43872503aa493f8b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 769,
        "start_column": 2,
        "end_line": 769,
        "end_column": 7
      },
      "debug_info": {
        "goal": "u v : \u2115 \u2192 \u2115\nh\u2080 : \u2200 (n : \u2115), u n = 2 * n + 2\nh\u2081 : \u2200 (n : \u2115), v n = 2 * n + 1\n\u22a2 \u2211 x \u2208 Finset.range 2003, (2 * x + 2) - \u2211 x \u2208 Finset.range 2003, (2 * x + 1) = 2003",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L769"
      },
      "metadata": {
        "blame_email_hash": "dd1b74f40c05",
        "blame_date": "2025-01-21T09:55:27-05:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "24cf6c747349b6cedb29a414391e7f8d939a3a84448c7a6ecf23306d6f71b43a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 774,
        "start_column": 2,
        "end_line": 774,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a : \u2115 \u2192 \u211d\nh\u2080 : a 0 = 1\nh\u2081 : \u2200 (n : \u2115), a (n + 1) = \u220f k \u2208 Finset.range (n + 1), a k + 4\n\u22a2 \u2200 n \u2265 1, a n - \u221a(a (n + 1)) = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L774"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "e35ef5acd2c65af440ca8c19e832f42ff7b9e0e8a2ab0023dc82078a00c5aaf9"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 781,
        "start_column": 2,
        "end_line": 781,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 \u2211 k \u2208 Finset.range n, (2 * k + 1) = n ^ 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L781"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "11710b0763b196eb008c0e199a45508cb3caa1fb3dda86cbc0e96382a581b4e5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 793,
        "start_column": 2,
        "end_line": 793,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 IsLeast {a | 0 < a \u2227 a \u2261 2 [MOD 3] \u2227 a \u2261 4 [MOD 5] \u2227 a \u2261 6 [MOD 7] \u2227 a \u2261 8 [MOD 9]} 314",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L793"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "396a4cdf5f0020030c2b61f0a57cd177eb0d3fcb22410de4a8a4e6ed94050e4d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 796,
        "start_column": 2,
        "end_line": 796,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : 10 ^ x * 100 ^ (2 * x) = 1000 ^ 5\n\u22a2 x = 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L796"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "05c022e87137e426a95ca998875733d79a61b2b6360f45170f3f7e684ab306ae"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 801,
        "start_column": 2,
        "end_line": 801,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c : \u2115\nt : \u2115 \u2192 \u2115\nh\u2080 : t 0 = 0\nh\u2081 : t 1 = 1\nh\u2082 : \u2200 n > 1, t n = t (n - 2) + t (n - 1)\nh\u2083 : a \u2261 5 [MOD 16]\nh\u2084 : b \u2261 10 [MOD 16]\nh\u2085 : c \u2261 15 [MOD 16]\n\u22a2 (t a + t b + t c) % 7 = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L801"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "cfb2397c26da2288cd9cf39ba51a2698b900abb447db76a1fa1b78c0e6fbd23f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 805,
        "start_column": 2,
        "end_line": 805,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u2115\nh\u2080 : 0 < a \u2227 0 < b \u2227 b \u2264 a\nh\u2081 : (a + b) % 10 = 2\nh\u2082 : (2 * a + b) % 10 = 1\n\u22a2 (a - b) % 10 = 6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L805"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "7aef2205c9da8005b35e59b3e100ab644ae2204296aa26aa5435bc29e288ccd9"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 810,
        "start_column": 2,
        "end_line": 810,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nf : \u211d \u2192 \u211d\nh\u2080 : 0 < b\nh\u2081 : \u2200 (x : \u211d), f x = \u221a(a * x ^ 2 + b * x)\nh\u2082 : {x | 0 \u2264 f x} = f '' {x | 0 \u2264 f x}\n\u22a2 a = 0 \u2228 a = -4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L810"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "5458554b8d359a84cdabf28ce128b2d9765747615e11e719a841ccda4195483f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 814,
        "start_column": 2,
        "end_line": 814,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p q : \u211d\na : \u2115 \u2192 \u211d\nh\u2080 : \u2200 (n : \u2115), a (n + 2) - a (n + 1) = a (n + 1) - a n\nh\u2081 : a 1 = p\nh\u2082 : a 2 = 9\nh\u2083 : a 3 = 3 * p - q\nh\u2084 : a 4 = 3 * p + q\n\u22a2 a 2010 = 8041",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L814"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "d8939803f37ad5668b578b313a3c4341e3bd5e49c0a15ac6ded0f4b83fb6cb08"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 818,
        "start_column": 2,
        "end_line": 818,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u221a((5 / \u221a80 + \u221a845 / 9 + \u221a45) / \u221a5) = 13 / 6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L818"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "60ebbfa8fe5cf01c13139bd238867b75d87f50f633a458cd9722772104f0d9c5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 831,
        "start_column": 2,
        "end_line": 831,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : x = (\u2211 n \u2208 Finset.Icc 1 44, cos (\u2191n * Real.pi / 180)) / \u2211 n \u2208 Finset.Icc 1 44, sin (\u2191n * Real.pi / 180)\n\u22a2 \u230a100 * x\u230b = 241",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L831"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "ab1c8c94b127080f014707aa60519775531a1e52731c46657b69b64a4e720ca6"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 836,
        "start_column": 2,
        "end_line": 836,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y z : \u211d\nm : \u211a\nh\u2080 : 0 < x \u2227 0 < y \u2227 0 < z\nh\u2081 : x * y * z = 1\nh\u2082 : x + 1 / z = 5\nh\u2083 : y + 1 / x = 29\nh\u2084 : z + 1 / y = \u2191m\nh\u2085 : 0 < m\n\u22a2 \u2191m.den + m.num = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L836"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "e098b69d1a76400e2c8cec009370e96b2a3ef222c863bed3a1b151184856fb5a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 840,
        "start_column": 2,
        "end_line": 840,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\na : \u2115 \u2192 \u211d\nh\u2080 : \u2200 (n : \u2115), |a n| < 1\nh\u2081 : \u2211 k \u2208 Finset.range n, |a k| = 19 + |\u2211 k \u2208 Finset.range n, a k|\n\u22a2 20 \u2264 n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L840"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "6e7eb97ecf7123c70b947e06f70b76b81cf91011be4306eeff6791ad1f2852ad"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 843,
        "start_column": 2,
        "end_line": 843,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\n\u22a2 9 \u2223 10 ^ n - 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L843"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "1dbae8d7aec856184c7a7ba9636d2916cc7f80d81a7c7512a206dde183610057"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 848,
        "start_column": 2,
        "end_line": 848,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x a : \u2115\nh\u2080 : 0 < x \u2227 0 < a\nh\u2081 : a.gcd 40 = x + 3\nh\u2082 : a.lcm 40 = x * (x + 3)\nh\u2083 : \u2200 (b : \u2115), 0 < b \u2192 b.gcd 40 = x + 3 \u2227 b.lcm 40 = x * (x + 3) \u2192 a \u2264 b\n\u22a2 a = 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L848"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "853ea1426c42a968f4d59cec2534e69f208ef6a251392bb13930d1021dadd619"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 851,
        "start_column": 2,
        "end_line": 851,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03c3 : \u211d \u2243 \u211d\nh : \u2200 (x : \u211d), \u03c3.toFun x = x ^ 3 - 8\n\u22a2 \u03c3.invFun (\u03c3.toFun (\u03c3.invFun 19)) = 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L851"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "c5ad05229b618cc1b7ad4fe7324d8767b77fe7db7f086b7d8c2f945761aa8138"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 856,
        "start_column": 2,
        "end_line": 856,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c d : \u211d\nh\u2080 : b = a ^ 2 + 4 * a + 6\nh\u2081 : b = 1 / 2 * a ^ 2 + a + 6\nh\u2082 : d = c ^ 2 + 4 * c + 6\nh\u2083 : d = 1 / 2 * c ^ 2 + c + 6\nh\u2084 : a < c\n\u22a2 c - a = 6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L856"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "e4025535921e9ba733574bc6bf1268c5d7e14d188b2ec8bbb9634cd902c12d50"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 861,
        "start_column": 2,
        "end_line": 861,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\nf : \u2115 \u2192 \u2115\nh\u2080\u271d : \u2200 (x : \u2115), f x = x ^ 2 + x + p\nh\u2080 : \u2200 k \u2264 \u230a\u221a(\u2191p / 3)\u230b\u208a, Nat.Prime (f k)\n\u22a2 \u2200 i \u2264 p - 2, Nat.Prime (f i)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L861"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "0cbdcaed4c7097e97627c0ac305a386434c9265b86bf98baf0d2faf3ab58b504"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 865,
        "start_column": 2,
        "end_line": 865,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a : \u2115 \u2192 \u211d\nh\u2080 : a 1 = 1\nh\u2081 : a 2 = 1 / \u221a3\nh\u2082 : \u2200 (n : \u2115), 1 \u2264 n \u2192 a (n + 2) = (a n + a (n + 1)) / (1 - a n * a (n + 1))\n\u22a2 |a 2009| = 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L865"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "bb4367102c1580af1dea468e4f22ff4713ed7f376588d0797339cee42587fa2c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 871,
        "start_column": 2,
        "end_line": 871,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y z a b : \u211d\nh\u2080 : 0 < x \u2227 0 < y \u2227 0 < z\nh\u2081 : x \u2260 y\nh\u2082 : y \u2260 z\nh\u2083 : z \u2260 x\nh\u2084 : x + y + z = a\nh\u2085 : x ^ 2 + y ^ 2 + z ^ 2 = b ^ 2\nh\u2086 : x * y = z ^ 2\n\u22a2 0 < a \u2227 b ^ 2 < a ^ 2 \u2227 a ^ 2 < 3 * b ^ 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L871"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "b6f12f1c3edff2db725b653a1d9d9c1f09a482551f2ec8df91d15ad4b50e26aa"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 875,
        "start_column": 2,
        "end_line": 875,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : NNReal\nu : \u2115 \u2192 NNReal\nh\u2080 : \u2200 (n : \u2115), u (n + 1) = NNReal.sqrt (x + u n)\nh\u2081 : Filter.Tendsto u Filter.atTop (nhds 9)\n\u22a2 9 = NNReal.sqrt (x + 9)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L875"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "109305c04d07339b06a438bc262ad5d7b7fa4fe78d0ca838938539342fd58c46"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 883,
        "start_column": 2,
        "end_line": 883,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : n % 7 = 3\n\u22a2 (2 * n + 1) % 7 = 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L883"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "2a011f960b69dadc101660faec5211404286340a8137da0cb76a53b8be26c8ed"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 887,
        "start_column": 2,
        "end_line": 887,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211d\nn : \u2124\nh\u2080 : x ^ 3 = -45\nh\u2081 : y ^ 3 = -101\nh\u2082 : x < \u2191n\nh\u2083 : \u2191n < y\n\u22a2 n = -4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L887"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "e0b576c2cdd9f420ec3fbec30ce01ba593cfbb23cc71fe901edfa9d576e947eb"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 899,
        "start_column": 2,
        "end_line": 899,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x a : \u2115 \u2192 \u211d\nh\u2080 : a 1 \u2260 a 2\nh\u2081 : a 1 \u2260 a 3\nh\u2082 : a 1 \u2260 a 4\nh\u2083 : a 2 \u2260 a 3\nh\u2084 : a 2 \u2260 a 4\nh\u2085 : a 3 \u2260 a 4\nh\u2086 : a 1 > a 2\nh\u2087 : a 2 > a 3\nh\u2088 : a 3 > a 4\nh\u2089 : |a 1 - a 2| * x 2 + |a 1 - a 3| * x 3 + |a 1 - a 4| * x 4 = 1\nh\u2081\u2080 : |a 2 - a 1| * x 1 + |a 2 - a 3| * x 3 + |a 2 - a 4| * x 4 = 1\nh\u2081\u2081 : |a 3 - a 1| * x 1 + |a 3 - a 2| * x 2 + |a 3 - a 4| * x 4 = 1\nh\u2081\u2082 : |a 4 - a 1| * x 1 + |a 4 - a 2| * x 2 + |a 4 - a 3| * x 3 = 1\n\u22a2 x 2 = 0 \u2227 x 3 = 0 \u2227 x 1 = 1 / |a 1 - a 4| \u2227 x 4 = 1 / |a 1 - a 4|",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L899"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "8e12706b402ae1b5879e80c75723a0299bafc451a4e38cbbdfe667dc6f3ad1bc"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 903,
        "start_column": 2,
        "end_line": 903,
        "end_column": 7
      },
      "debug_info": {
        "goal": "b : \u211d\nh\u2080 : b \u2260 0\n\u22a2 (7 * b ^ 3) ^ 2 * (4 * b ^ 2) ^ (-3) = 49 / 64",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L903"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "a1a032b097f1efcb44ef546b6a361fd773b888cdb6d3a7a1b1190e3f2be28f3f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 908,
        "start_column": 2,
        "end_line": 908,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nx : \u211d\nh\u2080 : \u2200 (k : \u2115), 0 < k \u2192 \u2200 (m : \u2124), x \u2260 \u2191m * Real.pi / 2 ^ k\nh\u2081 : 0 < n\n\u22a2 \u2211 k \u2208 Finset.Icc 1 n, 1 / sin (2 ^ k * x) = 1 / tan x - 1 / tan (2 ^ n * x)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L908"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "3eb82984d61f7ab09900db720ccf0cf3697f171ff4b4d7671d1df40bf5b1d9e1"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 916,
        "start_column": 2,
        "end_line": 916,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2124\nh\u2080 : (n - 1) * n * (n + 1) = 720\n\u22a2 n + 1 = 10",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L916"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "8ec44ab61f7659f351505609328bc64f82cf37e3b99341757f4e55cd36fce984"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 919,
        "start_column": 2,
        "end_line": 919,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 3 \u2223 2 ^ (2 * n + 1) + 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L919"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "9687f4a8084f97af86678e76c51bc714dda16ecc9aa9ec299b0676943f5aa38a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 923,
        "start_column": 2,
        "end_line": 923,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u2115\nh\u2080 : 0 < a \u2227 0 < b\nh\u2081 : a + b = 20\nh\u2082 : a = 3 * b\n\u22a2 a - b = 10",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L923"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "6e39f0f3d511561797fb1476bcc33051880c836f91afaf543a55bce9d32ffa07"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 927,
        "start_column": 2,
        "end_line": 927,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x e : \u2102\nh\u2080 : x + e = 7\nh\u2081 : 2 * x + e = 3\n\u22a2 e = 11 \u2227 x = -4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L927"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "6c6fe8b2820e8ae47f4d2bc3cf9587e71796b2b6ad7c3b1c965c46f03f53a5e9"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 930,
        "start_column": 2,
        "end_line": 930,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 f, f 1 = 2 \u2227 \u2200 (n : \u2115), f (f n) = f n + n \u2227 \u2200 (n : \u2115), f n < f (n + 1)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L930"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "e0bad8ba0ab216b04eb2383fe27201ba593daf31ae69fef15c85b5023193efdc"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 934,
        "start_column": 2,
        "end_line": 934,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2124\np : \u2115\nh\u2080 : Nat.Prime p\n\u22a2 \u2191p \u2223 n \u2194 n ^ 2 % \u2191p = 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L934"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "5621efe8728eec5b38228ceac1d4b511c58e591e05d64f31aa2a0148c1a93435"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 937,
        "start_column": 2,
        "end_line": 937,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 7 \u2223 2 ^ n - 1\n\u22a2 3 \u2223 n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L937"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "40e3ba9b92277db218d7ed28b408029ba68a87f535e8ffb1383f05049a0bf57b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 940,
        "start_column": 2,
        "end_line": 940,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 2 \u2264 n\nh\u2081 : n ^ 2 \u2223 2 ^ n + 1\n\u22a2 n = 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L940"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "6fafcdec04e754946004db4b92e908bf8b1a0e0cdee4791cd75bbb3bde942485"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 943,
        "start_column": 2,
        "end_line": 943,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 4 \u2264 n\n\u22a2 n ^ 2 \u2264 n.factorial",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L943"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "3a200c2edd34623c0eba7bd9b4e35f2005d852b40ab1d9acc60f390cae8e30bc"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 951,
        "start_column": 2,
        "end_line": 951,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : x \u2260 1\nh\u2081 : x \u2260 -2\nh\u2082 : (x + 1) / (x - 1) = (x - 2) / (x + 2)\n\u22a2 x = 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L951"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "16127633c0fdc8d5549e6cfc3e3cc7d33adc1e068bc8e7d3d6010f6260f9000a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 958,
        "start_column": 2,
        "end_line": 958,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nu : \u2115 \u2192 \u2115\nh\u2080 : u 0 = 0\nh\u2081 : \u2200 (n : \u2115), u (n + 1) = 2 * u n + (n + 1)\n\u22a2 u n = 2 ^ (n + 1) - (n + 2)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L958"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "447aa17a53a9029a1da2759d32c42fe141b18c969c129970dfcaa5628cdb59d0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 962,
        "start_column": 2,
        "end_line": 962,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nk : \u211d\na b : \u2115\nh\u2080 : \u2200 (x : \u211d), f x = x ^ 2 - 63 * x + k\nh\u2081 : f \u2191a = 0 \u2227 f \u2191b = 0\nh\u2082 : a \u2260 b\nh\u2083 : Nat.Prime a \u2227 Nat.Prime b\n\u22a2 k = 122",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L962"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "e4b295d69c8fb4e484f85ab25447cad07d136866c70541860706c7f7e19bf543"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 973,
        "start_column": 2,
        "end_line": 973,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c : \u2115\nn : NNReal\nh\u2080 : n \u2260 1\nh\u2081 : 1 < a \u2227 1 < b \u2227 1 < c\nh\u2082 : (n * (n * n ^ (1 / c)) ^ (1 / b)) ^ (1 / a) = (n ^ 25) ^ (1 / 36)\n\u22a2 b = 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L973"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "b01a86e16de51aa756ea3e044405b0fe618059b3454737a2bd81ddff9bed192b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 981,
        "start_column": 2,
        "end_line": 981,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b q r : \u2115\nh\u2080 : r < a + b\nh\u2081 : a ^ 2 + b ^ 2 = (a + b) * q + r\nh\u2082 : q ^ 2 + r = 1977\n\u22a2 |\u2191a - 22| = 15 \u2227 |\u2191b - 22| = 28 \u2228 |\u2191a - 22| = 28 \u2227 |\u2191b - 22| = 15",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L981"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "4fec1abbdef54f927fc56d2363a60f2c6f0f6ceec10cd45692d36b882a463d79"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 992,
        "start_column": 2,
        "end_line": 992,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x b : \u211d\nh\u2080 : 0 < b\nh\u2081 : 7 ^ (x + 7) = 8 ^ x\nh\u2082 : x = logb b (7 ^ 7)\n\u22a2 b = 8 / 7",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L992"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "f25a76c12710e11169253291bac947a1030506bbd825cff0078924b40700dfe8"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 997,
        "start_column": 2,
        "end_line": 997,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 IsGreatest {y | \u2203 a b, 1 < b \u2227 b \u2264 a \u2227 y = logb a (a / b) + logb b (b / a)} 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L997"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "b71398908075a201b5de20cd07a1dc3bc5ffa9c12e176b2b98c310513d1b90e1"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1001,
        "start_column": 2,
        "end_line": 1001,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u2102 \u2192 \u2102\nh\u2080 : \u2200 (x : \u2102), f x = (2 * x + 3) * (x - 4) + (2 * x + 3) * (x - 6)\nh\u2081 : Fintype \u2191(f \u207b\u00b9' {0})\n\u22a2 \u2211 y \u2208 (f \u207b\u00b9' {0}).toFinset, y = 7 / 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L1001"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "250281dcb05edf2b4e1db8d9b0a6d070e8de777ec0495600ec0fd15a7f73edc9"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1005,
        "start_column": 2,
        "end_line": 1005,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nf : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = x ^ 2 + a * x + b\nh\u2081 : 2 * a \u2260 b\nh\u2082 : f (2 * a) = 0\nh\u2083 : f b = 0\n\u22a2 a + b = -1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L1005"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "eae88df11222770401e1f3f77e557dced12e8dce9f3398270b1d320e324160ac"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1008,
        "start_column": 2,
        "end_line": 1008,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 5 * n % 17 = 8\n\u22a2 n % 17 = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L1008"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "a78748b76c3acd1e60c4ca41edd968765117437a586cddcde071ed96b051552a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1012,
        "start_column": 2,
        "end_line": 1012,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m n : \u2115\nk : \u211d\nf : \u211d \u2192 \u211d\nh\u2080 : Nat.Prime m\nh\u2081 : Nat.Prime n\nh\u2082 : \u2200 (x : \u211d), f x = x ^ 2 - 12 * x + k\nh\u2083 : f \u2191m = 0\nh\u2084 : f \u2191n = 0\nh\u2085 : m \u2260 n\n\u22a2 k = 35",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L1012"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "3958e338d91a3af429caabf2adca17e8ff3fa2a9fabf1dae666a73eb48b63590"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1018,
        "start_column": 2,
        "end_line": 1018,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (n : \u2115), n \u2208 S \u2194 0 < n \u2227 Nat.Prime (n ^ 2 + 2 - 3 * n)\n\u22a2 S.card = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L1018"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "aa226300260ac8ade66ab7218976c8939da88613033e7c2248336c7caeddc0ab"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1023,
        "start_column": 2,
        "end_line": 1023,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 (2 + 3)\u207b\u00b9 - (2\u207b\u00b9 + 3\u207b\u00b9) = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L1023"
      },
      "metadata": {
        "blame_email_hash": "dd1b74f40c05",
        "blame_date": "2024-07-12T13:01:27-04:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "ba92e6f60a123fdb052dea0af3b61cdbfe084245b6c568016e61066571cdd37c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1038,
        "start_column": 2,
        "end_line": 1038,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u2124\nh\u2080 : x % 19 = 4\nh\u2081 : y % 19 = 7\n\u22a2 (x + 1) ^ 2 * (y + 5) ^ 3 % 19 = 13",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L1038"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "013cb5d4b81a69ceed897fa6046e4f527d2868edb4f4984baca0521cf1ba209d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1049,
        "start_column": 2,
        "end_line": 1049,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d \u2192 \u211d\nh\u2080 : \u2200 (x y : \u211d), y \u2260 0 \u2192 f x y = x - y * \u2191\u230ax / y\u230b\n\u22a2 f (3 / 8) (-(2 / 5)) = -(1 / 40)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L1049"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "6467b4cb5d856d72f9e8ef4f0f12a60e086d75718f13b203a7156f1dd43ad061"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1054,
        "start_column": 2,
        "end_line": 1054,
        "end_column": 7
      },
      "debug_info": {
        "goal": "t s : \u211d\nn : \u2124\nh\u2080 : t = 2 * s - s ^ 2\nh\u2081 : s = \u2191n ^ 2 - 2 ^ n + 1\nx\u271d : n = 3\n\u22a2 t = 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L1054"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "f094eacc195ce7f53f2f423048b625c5197c5e8df2f92d731c8eb64416b2f281"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1057,
        "start_column": 2,
        "end_line": 1057,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : a ^ 2 + b ^ 2 = 2\n\u22a2 a * b \u2264 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L1057"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "5ee80b9b67c262d942427b6ddbecff19d50786a143ed7334a742fa2281a62bcd"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1060,
        "start_column": 5,
        "end_line": 1060,
        "end_column": 10
      },
      "debug_info": {
        "goal": "\u22a2 IsLeast {t | 0 < t \u2227 Nat.lcm 12 t ^ 3 = (12 * t) ^ 2} 18",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L1060"
      },
      "metadata": {
        "blame_email_hash": "24ddd6d59a58",
        "blame_date": "2023-10-18T22:01:06-05:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "a10231383e2b4c96a4e277d3cf63a340803d453d98c3210e16df4a8a3d2195c1"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1070,
        "start_column": 2,
        "end_line": 1070,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\n\u22a2 a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 \u2265 b / a + c / b + a / c",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L1070"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "f435230310192e4490cfe3f75cde2483186c0809bbbce38633dc421cff17e9a7"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "76ab47e70c68d3451e34efd635f61315c6c63b28",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1077,
        "start_column": 2,
        "end_line": 1077,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p q : \u2115\nh\u2080 : 0 < q\nh\u2081 : \u2211 k \u2208 Finset.Icc 1 1319, (-1) ^ (k + 1) * (1 / \u2191k) = \u2191p / \u2191q\n\u22a2 1979 \u2223 p",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/76ab47e70c68d3451e34efd635f61315c6c63b28/MiniF2F/Valid.lean#L1077"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-05T08:03:23.110262+00:00"
      },
      "id": "9a5794f6e5e6969fc92dc129c6dcb8ec14f5bc87ac2b20554ee28e4db50860c7"
    },
    {
      "repo": {
        "remote": "https://github.com/frenzymath/jixia",
        "branch": "main",
        "commit": "ba11ef4031d1091650160560522379d3e1652dd9",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Example.lean",
        "start_line": 82,
        "start_column": 55,
        "end_line": 82,
        "end_column": 60
      },
      "debug_info": {
        "goal": "\u03b1 : Type u\n\u22a2 \u00ac@Option.IsSome \u03b1 none",
        "url": "https://github.com/frenzymath/jixia/blob/ba11ef4031d1091650160560522379d3e1652dd9/Example.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "aa8cba96a488",
        "blame_date": "2024-06-20T19:17:07+08:00",
        "inclusion_date": "2025-06-04T05:00:45.710056+00:00"
      },
      "id": "7c2b787a4cd8b3a3d43d98f26cf6709572ef5c76d19dca0ebc544d4898121d2c"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "06a01993568205c6295731ec15e372a9715e0957",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2053,
        "start_column": 8,
        "end_line": 2053,
        "end_column": 13
      },
      "debug_info": {
        "goal": "\u03b1s : List Program\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03c6 : Formula\nside : Side\nw_n\u03be : (M, w)\u22a8(~\u03c6)\nt0 : PathIn tab\nIH :\n  t = t0 \u2192\n    \u2203 s,\n      Relation.TransGen (cEdge X tab) t s \u2227\n        (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n          (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\na : \u2115\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u00b7a\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nv_\u03b1_w : relateSeq M (\u00b7a :: \u03b1s) v w\n\u03b1_atom : (\u00b7a).isAtomic\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nw_Y : (M, v)\u22a8Y\nalocLD : (~''(AnyFormula.loaded (\u230a\u00b7a\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side Y\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nnegLoad_in_s : (~''(AnyFormula.loaded (\u230a\u00b7a\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt s1)\nY' : Sequent\nbas' : Y.basic\nr' : PdlRule Y Y'\nnrep' : \u00acrep (Z :: Hist) Y\nnext' : Tableau (Y :: Z :: Hist) Y'\nnext_def : next Y Y_in = Tableau.pdl nrep' bas' r' next'\n\u22a2 \u2203 s,\n    Relation.TransGen (cEdge X tab) t s \u2227\n      (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n        (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/06a01993568205c6295731ec15e372a9715e0957/Pdl/Soundness.lean#L2053"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-06-03T15:55:27+02:00",
        "inclusion_date": "2025-06-04T05:27:07.199863+00:00"
      },
      "id": "3c04c2cd1a28acc2d2e78bd726b52386149ba2ace2e76c6b901ca86c167daab6"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2417,
        "start_column": 6,
        "end_line": 2417,
        "end_column": 11
      },
      "debug_info": {
        "goal": "\u03b1s : List Program\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03c6 : Formula\nside : Side\nw_n\u03be : (M, w)\u22a8(~\u03c6)\nt0 : PathIn tab\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\n\u03b2 : Program\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u2217\u03b2\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nv_\u03b1_w : relateSeq M ((\u2217\u03b2) :: \u03b1s) v w\nthis : nodeAt t = Z\n\u22a2 \u2203 s,\n    Relation.TransGen (cEdge X tab) t s \u2227\n      (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n        (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/Soundness.lean#L2417"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-06-03T22:04:11+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "afb8b6237afc47467a736099e7aff4928300de27aa233db9cdaeebe4394fbafd"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2788,
        "start_column": 20,
        "end_line": 2788,
        "end_column": 25
      },
      "debug_info": {
        "goal": "case sequence\n\u03b1s : List Program\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03c6 : Formula\nside : Side\nw_n\u03be : (M, w)\u22a8(~\u03c6)\nt0 : PathIn tab\nIH :\n  t = t0 \u2192\n    \u2203 s,\n      Relation.TransGen (cEdge X tab) t s \u2227\n        (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n          (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\na\u271d\u00b3 a\u271d\u00b2 : Program\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nw_Y : (M, v)\u22a8Y\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nF : List Formula\n\u03b4 : List Program\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6))).in_side side Y\nv_seq_w : relateSeq M \u03b4 v w\nv_F : \u2200 f \u2208 F, evaluate M v f\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nh\u271d : \u00ac\u03b4 = []\nws : List.Vector W \u03b4.length.succ\nv_def : v = ws.head\nw_def : w = ws.last\n\u03be : AnyFormula := AnyFormula.normal \u03c6\nk : Fin \u03b4.length\nsk : PathIn tab\nt_sk : Relation.TransGen (cEdge X tab) t sk\n_in_node_sk : (~''(AnyFormula.loadBoxes (List.drop (\u2191k) \u03b4) \u03be)).in_side side (nodeAt sk)\nwsk_sk : (M, ws[\u2191k])\u22a8nodeAt sk\nanf_in_sk : ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191k) \u03b4) \u03be))).isFree = true\na\u271d\u00b9 a\u271d : Program\nnegLoad_in : (~''(AnyFormula.loaded (\u230aa\u271d\u00b9;'a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nv_\u03b1_w : relateSeq M ((a\u271d\u00b9;'a\u271d) :: \u03b1s) v w\nZ_free : (Z.without (~''(AnyFormula.loaded (\u230aa\u271d\u00b9;'a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))).isFree = true\nF\u03b4_in_H : (F, \u03b4) \u2208 Hl ((a\u271d\u00b9;'a\u271d) :: \u03b1s)\nws_rel : \u2200 (i : Fin \u03b4.length), relate M \u03b4[\u2191i] (ws.get i.castSucc) (ws.get i.succ)\n\u03b1_def : a\u271d\u00b9 = a\u271d\u00b3 \u2227 a\u271d = a\u271d\u00b2\n\u22a2 lengthOfProgram \u03b4[\u2191k] < 1 + lengthOfProgram a\u271d\u00b9 + lengthOfProgram a\u271d",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/Soundness.lean#L2788"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-06-03T22:04:11+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "2ee6824cbb6ddd517f34aa4e2a62e133cea8ef547be7fb43943a73b7313b5cac"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2795,
        "start_column": 22,
        "end_line": 2795,
        "end_column": 27
      },
      "debug_info": {
        "goal": "\u03b1 : Program\n\u03b1s : List Program\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03c6 : Formula\nside : Side\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nv_\u03b1_w : relateSeq M (\u03b1 :: \u03b1s) v w\nw_n\u03be : (M, w)\u22a8(~\u03c6)\nt0 : PathIn tab\nIH :\n  t = t0 \u2192\n    \u2203 s,\n      Relation.TransGen (cEdge X tab) t s \u2227\n        (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n          (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\na\u271d\u00b9 a\u271d : Program\n\u03b1_def : \u03b1 = (a\u271d\u00b9;'a\u271d)\nZ_free : (Z.without (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))).isFree = true\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nw_Y : (M, v)\u22a8Y\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nF : List Formula\n\u03b4 : List Program\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6))).in_side side Y\nv_seq_w : relateSeq M \u03b4 v w\nv_F : (M, v)\u22a8F\nF\u03b4_in_H : (F, \u03b4) \u2208 Hl (\u03b1 :: \u03b1s)\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nh\u271d : \u00ac\u03b4 = []\nws : List.Vector W \u03b4.length.succ\nv_def : v = ws.head\nw_def : w = ws.last\nws_rel : \u2200 (i : Fin \u03b4.length), relate M (\u03b4.get i) (ws.get \u2191\u2191i) (ws.get i.succ)\n\u03be : AnyFormula := AnyFormula.normal \u03c6\nk : Fin \u03b4.length\nsk : PathIn tab\nt_sk : Relation.TransGen (cEdge X tab) t sk\n_in_node_sk : (~''(AnyFormula.loadBoxes (List.drop (\u2191k.castSucc) \u03b4) \u03be)).in_side side (nodeAt sk)\nwsk_sk : (M, ws[k.castSucc])\u22a8nodeAt sk\nanf_in_sk : ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191k.castSucc) \u03b4) \u03be))).isFree = true\n_forTermination_all : lengthOfProgram \u03b4[k] < lengthOfProgram \u03b1\n\u22a2 relateSeq M (\u03b4.get k :: List.drop (\u2191k.succ) \u03b4) (ws.get k.castSucc) (ws.get k.succ)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/Soundness.lean#L2795"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-06-03T22:04:11+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "fcd57c8b0425ccd4b3a8cc61d5ff1cfc5bf9343b2b87a5f4a6653adfeb621700"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2796,
        "start_column": 22,
        "end_line": 2796,
        "end_column": 27
      },
      "debug_info": {
        "goal": "\u03b1 : Program\n\u03b1s : List Program\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03c6 : Formula\nside : Side\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nv_\u03b1_w : relateSeq M (\u03b1 :: \u03b1s) v w\nw_n\u03be : (M, w)\u22a8(~\u03c6)\nt0 : PathIn tab\nIH :\n  t = t0 \u2192\n    \u2203 s,\n      Relation.TransGen (cEdge X tab) t s \u2227\n        (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n          (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\na\u271d\u00b9 a\u271d : Program\n\u03b1_def : \u03b1 = (a\u271d\u00b9;'a\u271d)\nZ_free : (Z.without (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))).isFree = true\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nw_Y : (M, v)\u22a8Y\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nF : List Formula\n\u03b4 : List Program\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6))).in_side side Y\nv_seq_w : relateSeq M \u03b4 v w\nv_F : (M, v)\u22a8F\nF\u03b4_in_H : (F, \u03b4) \u2208 Hl (\u03b1 :: \u03b1s)\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nh\u271d : \u00ac\u03b4 = []\nws : List.Vector W \u03b4.length.succ\nv_def : v = ws.head\nw_def : w = ws.last\nws_rel : \u2200 (i : Fin \u03b4.length), relate M (\u03b4.get i) (ws.get \u2191\u2191i) (ws.get i.succ)\n\u03be : AnyFormula := AnyFormula.normal \u03c6\nk : Fin \u03b4.length\nsk : PathIn tab\nt_sk : Relation.TransGen (cEdge X tab) t sk\n_in_node_sk : (~''(AnyFormula.loadBoxes (List.drop (\u2191k.castSucc) \u03b4) \u03be)).in_side side (nodeAt sk)\nwsk_sk : (M, ws[k.castSucc])\u22a8nodeAt sk\nanf_in_sk : ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191k.castSucc) \u03b4) \u03be))).isFree = true\n_forTermination_all : lengthOfProgram \u03b4[k] < lengthOfProgram \u03b1\n\u22a2 (M, ws.get k.succ)\u22a8(~\u03c6)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/Soundness.lean#L2796"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-06-03T22:04:11+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "73c65739bb5ed9cecd786167e47cc771054e200ab33c80efe1aa9597b1d865bd"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2809,
        "start_column": 20,
        "end_line": 2809,
        "end_column": 25
      },
      "debug_info": {
        "goal": "case intro.intro.inr.intro.intro.intro.intro.inr.intro.intro.refine_2\n\u03b1 : Program\n\u03b1s : List Program\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03c6 : Formula\nside : Side\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nv_\u03b1_w : relateSeq M (\u03b1 :: \u03b1s) v w\nw_n\u03be : (M, w)\u22a8(~\u03c6)\nt0 : PathIn tab\nIH :\n  t = t0 \u2192\n    \u2203 s,\n      Relation.TransGen (cEdge X tab) t s \u2227\n        (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n          (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\na\u271d\u00b9 a\u271d : Program\n\u03b1_def : \u03b1 = (a\u271d\u00b9;'a\u271d)\nZ_free : (Z.without (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))).isFree = true\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nw_Y : (M, v)\u22a8Y\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nF : List Formula\n\u03b4 : List Program\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6))).in_side side Y\nv_seq_w : relateSeq M \u03b4 v w\nv_F : (M, v)\u22a8F\nF\u03b4_in_H : (F, \u03b4) \u2208 Hl (\u03b1 :: \u03b1s)\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nh\u271d : \u00ac\u03b4 = []\nws : List.Vector W \u03b4.length.succ\nv_def : v = ws.head\nw_def : w = ws.last\nws_rel : \u2200 (i : Fin \u03b4.length), relate M (\u03b4.get i) (ws.get \u2191\u2191i) (ws.get i.succ)\n\u03be : AnyFormula := AnyFormula.normal \u03c6\nk : Fin \u03b4.length\nsk : PathIn tab\nt_sk : Relation.TransGen (cEdge X tab) t sk\n_in_node_sk : (~''(AnyFormula.loadBoxes (List.drop (\u2191k.castSucc) \u03b4) \u03be)).in_side side (nodeAt sk)\nwsk_sk : (M, ws[k.castSucc])\u22a8nodeAt sk\nanf_in_sk : ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191k.castSucc) \u03b4) \u03be))).isFree = true\nsk2 : PathIn tab\nsk_c_sk2 : Relation.TransGen (cEdge X tab) sk sk2\nanf_in_sk2 : (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt sk2)\nu_sk2 : (M, ws.get k.succ)\u22a8nodeAt sk2\nsk2_almostFree : (nodeAt sk2).isFree = true\n\u22a2 (~''(AnyFormula.loadBoxes (List.drop (\u2191k.succ) \u03b4) \u03be)).in_side side (nodeAt sk2)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/Soundness.lean#L2809"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-06-03T22:04:11+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "a6aeb8a2f6fcad50d8d4834c1374a1590f0f2d9323be52e9cd87f0f83ce4f1db"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2821,
        "start_column": 10,
        "end_line": 2821,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case h.e'_2.h.e'_2.h.e'_2.a\n\u03b1 : Program\n\u03b1s : List Program\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\n\u03c6 : Formula\nside : Side\nt0 : PathIn tab\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\na\u271d\u00b9 a\u271d : Program\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nF : List Formula\n\u03b4 : List Program\nws : List.Vector W \u03b4.length.succ\n\u03be : AnyFormula := AnyFormula.normal \u03c6\nsk : PathIn tab\nv_t : (M, ws.head)\u22a8nodeAt t\nnegLoad_in : (~''(AnyFormula.loaded (\u230aa\u271d\u00b9;'a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nv_\u03b1_w : relateSeq M ((a\u271d\u00b9;'a\u271d) :: \u03b1s) ws.head ws.last\nw_n\u03be : (M, ws.last)\u22a8(~\u03c6)\nIH :\n  t = t0 \u2192\n    \u2203 s,\n      Relation.TransGen (cEdge X tab) t0 s \u2227\n        (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t0 \u2228\n          (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, ws.last)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\ns_t0 : t0 \u22d6_ t\n\u03b1_def : \u03b1 = (a\u271d\u00b9;'a\u271d)\nZ_free : (Z.without (~''(AnyFormula.loaded (\u230aa\u271d\u00b9;'a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))).isFree = true\nw_Y : (M, ws.head)\u22a8Y\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, ws.head)\u22a8nodeAt s1\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6))).in_side side Y\nv_seq_w : relateSeq M \u03b4 ws.head ws.last\nv_F : \u2200 f \u2208 F, evaluate M ws.head f\nF\u03b4_in_H : (F, \u03b4) \u2208 Hl ((a\u271d\u00b9;'a\u271d) :: \u03b1s)\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nh\u271d : \u00ac\u03b4 = []\nv_def : v = ws.head\nw_def : w = ws.last\nws_rel : \u2200 (i : Fin \u03b4.length), relate M \u03b4[\u2191i] (ws.get i.castSucc) (ws.get i.succ)\nt_sk : Relation.TransGen (cEdge X tab) t sk\nsk_prop :\n  satisfiable (nodeAt sk) \u2227 \u00accEquiv X tab sk t \u2228\n    (~''\u03be).in_side side (nodeAt sk) \u2227 (M, ws[\u03b4.length])\u22a8nodeAt sk \u2227 ((nodeAt sk).without (~''\u03be)).isFree = true\n\u22a2 (nodeAt sk).isFree = true \u2194 ((nodeAt sk).without (~''\u03be)).isFree = true",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/Soundness.lean#L2821"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-06-03T22:04:11+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "d40949c624ea3859579e8d0bc02bdfb078c39b38896296801eafa6eb3e238eed"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2788,
        "start_column": 20,
        "end_line": 2788,
        "end_column": 25
      },
      "debug_info": {
        "goal": "case union\n\u03b1s : List Program\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03c6 : Formula\nside : Side\nw_n\u03be : (M, w)\u22a8(~\u03c6)\nt0 : PathIn tab\nIH :\n  t = t0 \u2192\n    \u2203 s,\n      Relation.TransGen (cEdge X tab) t s \u2227\n        (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n          (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\na\u271d\u00b3 a\u271d\u00b2 : Program\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nw_Y : (M, v)\u22a8Y\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nF : List Formula\n\u03b4 : List Program\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6))).in_side side Y\nv_seq_w : relateSeq M \u03b4 v w\nv_F : \u2200 f \u2208 F, evaluate M v f\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nh\u271d : \u00ac\u03b4 = []\nws : List.Vector W \u03b4.length.succ\nv_def : v = ws.head\nw_def : w = ws.last\n\u03be : AnyFormula := AnyFormula.normal \u03c6\nk : Fin \u03b4.length\nsk : PathIn tab\nt_sk : Relation.TransGen (cEdge X tab) t sk\n_in_node_sk : (~''(AnyFormula.loadBoxes (List.drop (\u2191k) \u03b4) \u03be)).in_side side (nodeAt sk)\nwsk_sk : (M, ws[\u2191k])\u22a8nodeAt sk\nanf_in_sk : ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191k) \u03b4) \u03be))).isFree = true\na\u271d\u00b9 a\u271d : Program\nnegLoad_in : (~''(AnyFormula.loaded (\u230aa\u271d\u00b9\u22d3a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nv_\u03b1_w : relateSeq M ((a\u271d\u00b9\u22d3a\u271d) :: \u03b1s) v w\nZ_free : (Z.without (~''(AnyFormula.loaded (\u230aa\u271d\u00b9\u22d3a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))).isFree = true\nF\u03b4_in_H : (F, \u03b4) \u2208 Hl ((a\u271d\u00b9\u22d3a\u271d) :: \u03b1s)\nws_rel : \u2200 (i : Fin \u03b4.length), relate M \u03b4[\u2191i] (ws.get i.castSucc) (ws.get i.succ)\n\u03b1_def : a\u271d\u00b9 = a\u271d\u00b3 \u2227 a\u271d = a\u271d\u00b2\n\u22a2 lengthOfProgram \u03b4[\u2191k] < 1 + lengthOfProgram a\u271d\u00b9 + lengthOfProgram a\u271d",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/Soundness.lean#L2788"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-06-03T22:04:11+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "8f4390581c6979e4480e8eb65b09b53584dca6c982beceda5be21cb0f3938ee7"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2795,
        "start_column": 22,
        "end_line": 2795,
        "end_column": 27
      },
      "debug_info": {
        "goal": "\u03b1 : Program\n\u03b1s : List Program\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03c6 : Formula\nside : Side\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nv_\u03b1_w : relateSeq M (\u03b1 :: \u03b1s) v w\nw_n\u03be : (M, w)\u22a8(~\u03c6)\nt0 : PathIn tab\nIH :\n  t = t0 \u2192\n    \u2203 s,\n      Relation.TransGen (cEdge X tab) t s \u2227\n        (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n          (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\na\u271d\u00b9 a\u271d : Program\n\u03b1_def : \u03b1 = (a\u271d\u00b9\u22d3a\u271d)\nZ_free : (Z.without (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))).isFree = true\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nw_Y : (M, v)\u22a8Y\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nF : List Formula\n\u03b4 : List Program\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6))).in_side side Y\nv_seq_w : relateSeq M \u03b4 v w\nv_F : (M, v)\u22a8F\nF\u03b4_in_H : (F, \u03b4) \u2208 Hl (\u03b1 :: \u03b1s)\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nh\u271d : \u00ac\u03b4 = []\nws : List.Vector W \u03b4.length.succ\nv_def : v = ws.head\nw_def : w = ws.last\nws_rel : \u2200 (i : Fin \u03b4.length), relate M (\u03b4.get i) (ws.get \u2191\u2191i) (ws.get i.succ)\n\u03be : AnyFormula := AnyFormula.normal \u03c6\nk : Fin \u03b4.length\nsk : PathIn tab\nt_sk : Relation.TransGen (cEdge X tab) t sk\n_in_node_sk : (~''(AnyFormula.loadBoxes (List.drop (\u2191k.castSucc) \u03b4) \u03be)).in_side side (nodeAt sk)\nwsk_sk : (M, ws[k.castSucc])\u22a8nodeAt sk\nanf_in_sk : ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191k.castSucc) \u03b4) \u03be))).isFree = true\n_forTermination_all : lengthOfProgram \u03b4[k] < lengthOfProgram \u03b1\n\u22a2 relateSeq M (\u03b4.get k :: List.drop (\u2191k.succ) \u03b4) (ws.get k.castSucc) (ws.get k.succ)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/Soundness.lean#L2795"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-06-03T22:04:11+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "a1b9ae471f60d5c0675061ce6769bc373e3d9d2993152e7996af02f462bf6c3f"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2796,
        "start_column": 22,
        "end_line": 2796,
        "end_column": 27
      },
      "debug_info": {
        "goal": "\u03b1 : Program\n\u03b1s : List Program\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03c6 : Formula\nside : Side\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nv_\u03b1_w : relateSeq M (\u03b1 :: \u03b1s) v w\nw_n\u03be : (M, w)\u22a8(~\u03c6)\nt0 : PathIn tab\nIH :\n  t = t0 \u2192\n    \u2203 s,\n      Relation.TransGen (cEdge X tab) t s \u2227\n        (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n          (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\na\u271d\u00b9 a\u271d : Program\n\u03b1_def : \u03b1 = (a\u271d\u00b9\u22d3a\u271d)\nZ_free : (Z.without (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))).isFree = true\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nw_Y : (M, v)\u22a8Y\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nF : List Formula\n\u03b4 : List Program\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6))).in_side side Y\nv_seq_w : relateSeq M \u03b4 v w\nv_F : (M, v)\u22a8F\nF\u03b4_in_H : (F, \u03b4) \u2208 Hl (\u03b1 :: \u03b1s)\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nh\u271d : \u00ac\u03b4 = []\nws : List.Vector W \u03b4.length.succ\nv_def : v = ws.head\nw_def : w = ws.last\nws_rel : \u2200 (i : Fin \u03b4.length), relate M (\u03b4.get i) (ws.get \u2191\u2191i) (ws.get i.succ)\n\u03be : AnyFormula := AnyFormula.normal \u03c6\nk : Fin \u03b4.length\nsk : PathIn tab\nt_sk : Relation.TransGen (cEdge X tab) t sk\n_in_node_sk : (~''(AnyFormula.loadBoxes (List.drop (\u2191k.castSucc) \u03b4) \u03be)).in_side side (nodeAt sk)\nwsk_sk : (M, ws[k.castSucc])\u22a8nodeAt sk\nanf_in_sk : ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191k.castSucc) \u03b4) \u03be))).isFree = true\n_forTermination_all : lengthOfProgram \u03b4[k] < lengthOfProgram \u03b1\n\u22a2 (M, ws.get k.succ)\u22a8(~\u03c6)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/Soundness.lean#L2796"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-06-03T22:04:11+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "881920a9672a9b1e0674df9ba94c439283ebefc0818408c159322741bd4bcdec"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2809,
        "start_column": 20,
        "end_line": 2809,
        "end_column": 25
      },
      "debug_info": {
        "goal": "case intro.intro.inr.intro.intro.intro.intro.inr.intro.intro.refine_2\n\u03b1 : Program\n\u03b1s : List Program\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03c6 : Formula\nside : Side\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nv_\u03b1_w : relateSeq M (\u03b1 :: \u03b1s) v w\nw_n\u03be : (M, w)\u22a8(~\u03c6)\nt0 : PathIn tab\nIH :\n  t = t0 \u2192\n    \u2203 s,\n      Relation.TransGen (cEdge X tab) t s \u2227\n        (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n          (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\na\u271d\u00b9 a\u271d : Program\n\u03b1_def : \u03b1 = (a\u271d\u00b9\u22d3a\u271d)\nZ_free : (Z.without (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))).isFree = true\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nw_Y : (M, v)\u22a8Y\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nF : List Formula\n\u03b4 : List Program\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6))).in_side side Y\nv_seq_w : relateSeq M \u03b4 v w\nv_F : (M, v)\u22a8F\nF\u03b4_in_H : (F, \u03b4) \u2208 Hl (\u03b1 :: \u03b1s)\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nh\u271d : \u00ac\u03b4 = []\nws : List.Vector W \u03b4.length.succ\nv_def : v = ws.head\nw_def : w = ws.last\nws_rel : \u2200 (i : Fin \u03b4.length), relate M (\u03b4.get i) (ws.get \u2191\u2191i) (ws.get i.succ)\n\u03be : AnyFormula := AnyFormula.normal \u03c6\nk : Fin \u03b4.length\nsk : PathIn tab\nt_sk : Relation.TransGen (cEdge X tab) t sk\n_in_node_sk : (~''(AnyFormula.loadBoxes (List.drop (\u2191k.castSucc) \u03b4) \u03be)).in_side side (nodeAt sk)\nwsk_sk : (M, ws[k.castSucc])\u22a8nodeAt sk\nanf_in_sk : ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191k.castSucc) \u03b4) \u03be))).isFree = true\nsk2 : PathIn tab\nsk_c_sk2 : Relation.TransGen (cEdge X tab) sk sk2\nanf_in_sk2 : (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt sk2)\nu_sk2 : (M, ws.get k.succ)\u22a8nodeAt sk2\nsk2_almostFree : (nodeAt sk2).isFree = true\n\u22a2 (~''(AnyFormula.loadBoxes (List.drop (\u2191k.succ) \u03b4) \u03be)).in_side side (nodeAt sk2)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/Soundness.lean#L2809"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-06-03T22:04:11+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "80d398243d61f59fcfac0b6777534a707142a4f48a7b14b607fd0a9647a08c59"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2821,
        "start_column": 10,
        "end_line": 2821,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case h.e'_2.h.e'_2.h.e'_2.a\n\u03b1 : Program\n\u03b1s : List Program\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\n\u03c6 : Formula\nside : Side\nt0 : PathIn tab\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\na\u271d\u00b9 a\u271d : Program\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nF : List Formula\n\u03b4 : List Program\nws : List.Vector W \u03b4.length.succ\n\u03be : AnyFormula := AnyFormula.normal \u03c6\nsk : PathIn tab\nv_t : (M, ws.head)\u22a8nodeAt t\nnegLoad_in : (~''(AnyFormula.loaded (\u230aa\u271d\u00b9\u22d3a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nv_\u03b1_w : relateSeq M ((a\u271d\u00b9\u22d3a\u271d) :: \u03b1s) ws.head ws.last\nw_n\u03be : (M, ws.last)\u22a8(~\u03c6)\nIH :\n  t = t0 \u2192\n    \u2203 s,\n      Relation.TransGen (cEdge X tab) t0 s \u2227\n        (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t0 \u2228\n          (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, ws.last)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\ns_t0 : t0 \u22d6_ t\n\u03b1_def : \u03b1 = (a\u271d\u00b9\u22d3a\u271d)\nZ_free : (Z.without (~''(AnyFormula.loaded (\u230aa\u271d\u00b9\u22d3a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))).isFree = true\nw_Y : (M, ws.head)\u22a8Y\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, ws.head)\u22a8nodeAt s1\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6))).in_side side Y\nv_seq_w : relateSeq M \u03b4 ws.head ws.last\nv_F : \u2200 f \u2208 F, evaluate M ws.head f\nF\u03b4_in_H : (F, \u03b4) \u2208 Hl ((a\u271d\u00b9\u22d3a\u271d) :: \u03b1s)\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nh\u271d : \u00ac\u03b4 = []\nv_def : v = ws.head\nw_def : w = ws.last\nws_rel : \u2200 (i : Fin \u03b4.length), relate M \u03b4[\u2191i] (ws.get i.castSucc) (ws.get i.succ)\nt_sk : Relation.TransGen (cEdge X tab) t sk\nsk_prop :\n  satisfiable (nodeAt sk) \u2227 \u00accEquiv X tab sk t \u2228\n    (~''\u03be).in_side side (nodeAt sk) \u2227 (M, ws[\u03b4.length])\u22a8nodeAt sk \u2227 ((nodeAt sk).without (~''\u03be)).isFree = true\n\u22a2 (nodeAt sk).isFree = true \u2194 ((nodeAt sk).without (~''\u03be)).isFree = true",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/Soundness.lean#L2821"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-06-03T22:04:11+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "182c512b70e76f3afa6c1100d281908566d97905d971e2b123f769ec2844c2ed"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2788,
        "start_column": 20,
        "end_line": 2788,
        "end_column": 25
      },
      "debug_info": {
        "goal": "case test\n\u03b1s : List Program\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03c6 : Formula\nside : Side\nw_n\u03be : (M, w)\u22a8(~\u03c6)\nt0 : PathIn tab\nIH :\n  t = t0 \u2192\n    \u2203 s,\n      Relation.TransGen (cEdge X tab) t s \u2227\n        (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n          (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\na\u271d\u00b9 : Formula\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nw_Y : (M, v)\u22a8Y\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nF : List Formula\n\u03b4 : List Program\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6))).in_side side Y\nv_seq_w : relateSeq M \u03b4 v w\nv_F : \u2200 f \u2208 F, evaluate M v f\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nh\u271d : \u00ac\u03b4 = []\nws : List.Vector W \u03b4.length.succ\nv_def : v = ws.head\nw_def : w = ws.last\n\u03be : AnyFormula := AnyFormula.normal \u03c6\nk : Fin \u03b4.length\nsk : PathIn tab\nt_sk : Relation.TransGen (cEdge X tab) t sk\n_in_node_sk : (~''(AnyFormula.loadBoxes (List.drop (\u2191k) \u03b4) \u03be)).in_side side (nodeAt sk)\nwsk_sk : (M, ws[\u2191k])\u22a8nodeAt sk\nanf_in_sk : ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191k) \u03b4) \u03be))).isFree = true\na\u271d : Formula\nnegLoad_in : (~''(AnyFormula.loaded (\u230a?'a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nv_\u03b1_w : relateSeq M ((?'a\u271d) :: \u03b1s) v w\nZ_free : (Z.without (~''(AnyFormula.loaded (\u230a?'a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))).isFree = true\nF\u03b4_in_H : (F, \u03b4) \u2208 Hl ((?'a\u271d) :: \u03b1s)\nws_rel : \u2200 (i : Fin \u03b4.length), relate M \u03b4[\u2191i] (ws.get i.castSucc) (ws.get i.succ)\n\u03b1_def : a\u271d = a\u271d\u00b9\n\u22a2 lengthOfProgram \u03b4[\u2191k] < 2 + lengthOfFormula a\u271d",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/Soundness.lean#L2788"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-06-03T22:04:11+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "0a132c21d7ea011770abaea93151c9f6098ff838d89150c1bffea14ed997008e"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2795,
        "start_column": 22,
        "end_line": 2795,
        "end_column": 27
      },
      "debug_info": {
        "goal": "\u03b1 : Program\n\u03b1s : List Program\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03c6 : Formula\nside : Side\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nv_\u03b1_w : relateSeq M (\u03b1 :: \u03b1s) v w\nw_n\u03be : (M, w)\u22a8(~\u03c6)\nt0 : PathIn tab\nIH :\n  t = t0 \u2192\n    \u2203 s,\n      Relation.TransGen (cEdge X tab) t s \u2227\n        (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n          (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\na\u271d : Formula\n\u03b1_def : \u03b1 = (?'a\u271d)\nZ_free : (Z.without (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))).isFree = true\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nw_Y : (M, v)\u22a8Y\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nF : List Formula\n\u03b4 : List Program\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6))).in_side side Y\nv_seq_w : relateSeq M \u03b4 v w\nv_F : (M, v)\u22a8F\nF\u03b4_in_H : (F, \u03b4) \u2208 Hl (\u03b1 :: \u03b1s)\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nh\u271d : \u00ac\u03b4 = []\nws : List.Vector W \u03b4.length.succ\nv_def : v = ws.head\nw_def : w = ws.last\nws_rel : \u2200 (i : Fin \u03b4.length), relate M (\u03b4.get i) (ws.get \u2191\u2191i) (ws.get i.succ)\n\u03be : AnyFormula := AnyFormula.normal \u03c6\nk : Fin \u03b4.length\nsk : PathIn tab\nt_sk : Relation.TransGen (cEdge X tab) t sk\n_in_node_sk : (~''(AnyFormula.loadBoxes (List.drop (\u2191k.castSucc) \u03b4) \u03be)).in_side side (nodeAt sk)\nwsk_sk : (M, ws[k.castSucc])\u22a8nodeAt sk\nanf_in_sk : ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191k.castSucc) \u03b4) \u03be))).isFree = true\n_forTermination_all : lengthOfProgram \u03b4[k] < lengthOfProgram \u03b1\n\u22a2 relateSeq M (\u03b4.get k :: List.drop (\u2191k.succ) \u03b4) (ws.get k.castSucc) (ws.get k.succ)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/Soundness.lean#L2795"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-06-03T22:04:11+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "43c68ff94095b16a1f9e9bb88e16b202bb0b2324159794dd766f01c8e82886aa"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2796,
        "start_column": 22,
        "end_line": 2796,
        "end_column": 27
      },
      "debug_info": {
        "goal": "\u03b1 : Program\n\u03b1s : List Program\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03c6 : Formula\nside : Side\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nv_\u03b1_w : relateSeq M (\u03b1 :: \u03b1s) v w\nw_n\u03be : (M, w)\u22a8(~\u03c6)\nt0 : PathIn tab\nIH :\n  t = t0 \u2192\n    \u2203 s,\n      Relation.TransGen (cEdge X tab) t s \u2227\n        (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n          (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\na\u271d : Formula\n\u03b1_def : \u03b1 = (?'a\u271d)\nZ_free : (Z.without (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))).isFree = true\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nw_Y : (M, v)\u22a8Y\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nF : List Formula\n\u03b4 : List Program\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6))).in_side side Y\nv_seq_w : relateSeq M \u03b4 v w\nv_F : (M, v)\u22a8F\nF\u03b4_in_H : (F, \u03b4) \u2208 Hl (\u03b1 :: \u03b1s)\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nh\u271d : \u00ac\u03b4 = []\nws : List.Vector W \u03b4.length.succ\nv_def : v = ws.head\nw_def : w = ws.last\nws_rel : \u2200 (i : Fin \u03b4.length), relate M (\u03b4.get i) (ws.get \u2191\u2191i) (ws.get i.succ)\n\u03be : AnyFormula := AnyFormula.normal \u03c6\nk : Fin \u03b4.length\nsk : PathIn tab\nt_sk : Relation.TransGen (cEdge X tab) t sk\n_in_node_sk : (~''(AnyFormula.loadBoxes (List.drop (\u2191k.castSucc) \u03b4) \u03be)).in_side side (nodeAt sk)\nwsk_sk : (M, ws[k.castSucc])\u22a8nodeAt sk\nanf_in_sk : ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191k.castSucc) \u03b4) \u03be))).isFree = true\n_forTermination_all : lengthOfProgram \u03b4[k] < lengthOfProgram \u03b1\n\u22a2 (M, ws.get k.succ)\u22a8(~\u03c6)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/Soundness.lean#L2796"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-06-03T22:04:11+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "fa17ccb5bbf53b908f40d13cab8314636aa45a03436699f93892c50f5c613f40"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2809,
        "start_column": 20,
        "end_line": 2809,
        "end_column": 25
      },
      "debug_info": {
        "goal": "case intro.intro.inr.intro.intro.intro.intro.inr.intro.intro.refine_2\n\u03b1 : Program\n\u03b1s : List Program\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03c6 : Formula\nside : Side\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nv_\u03b1_w : relateSeq M (\u03b1 :: \u03b1s) v w\nw_n\u03be : (M, w)\u22a8(~\u03c6)\nt0 : PathIn tab\nIH :\n  t = t0 \u2192\n    \u2203 s,\n      Relation.TransGen (cEdge X tab) t s \u2227\n        (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n          (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\ns_t0 : t0 \u22d6_ t\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\na\u271d : Formula\n\u03b1_def : \u03b1 = (?'a\u271d)\nZ_free : (Z.without (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))).isFree = true\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nw_Y : (M, v)\u22a8Y\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nF : List Formula\n\u03b4 : List Program\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6))).in_side side Y\nv_seq_w : relateSeq M \u03b4 v w\nv_F : (M, v)\u22a8F\nF\u03b4_in_H : (F, \u03b4) \u2208 Hl (\u03b1 :: \u03b1s)\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nh\u271d : \u00ac\u03b4 = []\nws : List.Vector W \u03b4.length.succ\nv_def : v = ws.head\nw_def : w = ws.last\nws_rel : \u2200 (i : Fin \u03b4.length), relate M (\u03b4.get i) (ws.get \u2191\u2191i) (ws.get i.succ)\n\u03be : AnyFormula := AnyFormula.normal \u03c6\nk : Fin \u03b4.length\nsk : PathIn tab\nt_sk : Relation.TransGen (cEdge X tab) t sk\n_in_node_sk : (~''(AnyFormula.loadBoxes (List.drop (\u2191k.castSucc) \u03b4) \u03be)).in_side side (nodeAt sk)\nwsk_sk : (M, ws[k.castSucc])\u22a8nodeAt sk\nanf_in_sk : ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191k.castSucc) \u03b4) \u03be))).isFree = true\nsk2 : PathIn tab\nsk_c_sk2 : Relation.TransGen (cEdge X tab) sk sk2\nanf_in_sk2 : (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt sk2)\nu_sk2 : (M, ws.get k.succ)\u22a8nodeAt sk2\nsk2_almostFree : (nodeAt sk2).isFree = true\n\u22a2 (~''(AnyFormula.loadBoxes (List.drop (\u2191k.succ) \u03b4) \u03be)).in_side side (nodeAt sk2)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/Soundness.lean#L2809"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-06-03T22:04:11+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "343c81cc3338b420b888daac34d7ea1aca3e5e7379f38d9a5931c1f416fc8b76"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2821,
        "start_column": 10,
        "end_line": 2821,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case h.e'_2.h.e'_2.h.e'_2.a\n\u03b1 : Program\n\u03b1s : List Program\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\n\u03c6 : Formula\nside : Side\nt0 : PathIn tab\nHist : History\nZ : Sequent\nnbas : \u00acZ.basic\nltZ : LocalTableau Z\nnrep : \u00acrep Hist Z\nnext : (Y : Sequent) \u2192 Y \u2208 endNodesOf ltZ \u2192 Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep nbas ltZ next\u27e9\u27e9\na\u271d : Formula\nY : Sequent\nY_in : Y \u2208 endNodesOf ltZ\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nF : List Formula\n\u03b4 : List Program\nws : List.Vector W \u03b4.length.succ\n\u03be : AnyFormula := AnyFormula.normal \u03c6\nsk : PathIn tab\nv_t : (M, ws.head)\u22a8nodeAt t\nnegLoad_in : (~''(AnyFormula.loaded (\u230a?'a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nv_\u03b1_w : relateSeq M ((?'a\u271d) :: \u03b1s) ws.head ws.last\nw_n\u03be : (M, ws.last)\u22a8(~\u03c6)\nIH :\n  t = t0 \u2192\n    \u2203 s,\n      Relation.TransGen (cEdge X tab) t0 s \u2227\n        (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t0 \u2228\n          (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, ws.last)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\ns_t0 : t0 \u22d6_ t\n\u03b1_def : \u03b1 = (?'a\u271d)\nZ_free : (Z.without (~''(AnyFormula.loaded (\u230a?'a\u271d\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))).isFree = true\nw_Y : (M, ws.head)\u22a8Y\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next Y Y_in\u27e9\u27e9\nv_s1 : (M, ws.head)\u22a8nodeAt s1\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6))).in_side side Y\nv_seq_w : relateSeq M \u03b4 ws.head ws.last\nv_F : \u2200 f \u2208 F, evaluate M ws.head f\nF\u03b4_in_H : (F, \u03b4) \u2208 Hl ((?'a\u271d) :: \u03b1s)\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nh\u271d : \u00ac\u03b4 = []\nv_def : v = ws.head\nw_def : w = ws.last\nws_rel : \u2200 (i : Fin \u03b4.length), relate M \u03b4[\u2191i] (ws.get i.castSucc) (ws.get i.succ)\nt_sk : Relation.TransGen (cEdge X tab) t sk\nsk_prop :\n  satisfiable (nodeAt sk) \u2227 \u00accEquiv X tab sk t \u2228\n    (~''\u03be).in_side side (nodeAt sk) \u2227 (M, ws[\u03b4.length])\u22a8nodeAt sk \u2227 ((nodeAt sk).without (~''\u03be)).isFree = true\n\u22a2 (nodeAt sk).isFree = true \u2194 ((nodeAt sk).without (~''\u03be)).isFree = true",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/Soundness.lean#L2821"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-06-03T22:04:11+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "6b2561a0b033b7406f9d1abf2c6dba8a7838153e7d28824cbb87ea20ad58d1d9"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "06a01993568205c6295731ec15e372a9715e0957",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2531,
        "start_column": 4,
        "end_line": 2531,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\u03b1 : Program\n\u03b1s : List Program\nX : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03c6 : Formula\nside : Side\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nv_\u03b1_w : relateSeq M (\u03b1 :: \u03b1s) v w\nw_n\u03be : (M, w)\u22a8(~\u03c6)\nt0 : PathIn tab\nIH :\n  t = t0 \u2192\n    \u2203 s,\n      Relation.TransGen (cEdge X tab) t s \u2227\n        (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n          (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\ns_t0 : t0 \u22d6_ t\nHist : History\nZ Y : Sequent\nbas : Z.basic\nr : PdlRule Z Y\nnrep : \u00acrep Hist Z\nnext : Tableau (Z :: Hist) Y\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.pdl nrep bas r next\u27e9\u27e9\n\u22a2 \u2203 s,\n    Relation.TransGen (cEdge X tab) t s \u2227\n      (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n        (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/06a01993568205c6295731ec15e372a9715e0957/Pdl/Soundness.lean#L2531"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-06-03T15:55:27+02:00",
        "inclusion_date": "2025-06-04T05:27:07.199863+00:00"
      },
      "id": "0883dbc24137e23f59327a4f1a1ee56f9f8dd380c4447effd1f9e92d493eb2b3"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "b5b99961a6c0ede987c8db11ca6a583f38900878",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 3046,
        "start_column": 10,
        "end_line": 3046,
        "end_column": 15
      },
      "debug_info": {
        "goal": "Root : Sequent\ntab : Tableau [] Root\nRoot_isFree : Root.isFree = true\nt : PathIn tab\nIH : \u2200 (y : PathIn tab), before Root tab t y \u2192 \u00acsatisfiable (nodeAt y)\nlf : LoadFormula\nO_def : (tabAt t).snd.fst.2.2 = some (Sum.inl (~'lf))\n_theSide : Side := sideOf (Sum.inl (~'lf))\n\u03b1 : Program\n\u03c6 : Formula\n\u03b2 : Program\n\u03b4 : List Program\nlf_def : lf = loadMulti (\u03b2 :: \u03b4) \u03b1 \u03c6\nW : Type\nM : KripkeModel W\nv : W\nv_ : (M, v)\u22a8nodeAt t\nw : W\nv_\u03b2_w : relate M \u03b2 v w\nu : W\nw_\u03b4\u03b1_u : relateSeq M (\u03b4 ++ [\u03b1]) w u\nu_not_\u03c6 : \u00acevaluate M u \u03c6\n\u22a2 relateSeq M (\u03b2 :: (\u03b4 ++ [\u03b1])) v u",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/b5b99961a6c0ede987c8db11ca6a583f38900878/Pdl/Soundness.lean#L3046"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-06-03T15:55:27+02:00",
        "inclusion_date": "2025-06-05T06:34:20.734005+00:00"
      },
      "id": "787c4ba4a008f3b62f521645ddd83469b5e33d08658c963b7618be5fdfa72a8c"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "b5b99961a6c0ede987c8db11ca6a583f38900878",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 3051,
        "start_column": 10,
        "end_line": 3051,
        "end_column": 15
      },
      "debug_info": {
        "goal": "Root : Sequent\ntab : Tableau [] Root\nRoot_isFree : Root.isFree = true\nt : PathIn tab\n\u03b1 : Program\n\u03c6 : Formula\n\u03b2 : Program\n\u03b4 : List Program\nW : Type\nM : KripkeModel W\nv w u : W\nIH : \u2200 (y : PathIn tab), before Root tab t y \u2192 \u00acsatisfiable (tabAt y).snd.fst\nO_def : (tabAt t).snd.fst.2.2 = some (Sum.inl (~'\u230a\u03b2\u230bAnyFormula.loaded (loadMulti \u03b4 \u03b1 \u03c6)))\nv_ : (M, v)\u22a8(tabAt t).snd.fst\nv_\u03b2_w : relate M \u03b2 v w\nw_\u03b4\u03b1_u : relateSeq M (\u03b4 ++ [\u03b1]) w u\nu_not_\u03c6 : \u00acevaluate M u \u03c6\nv_\u03b2\u03b4\u03b1_u : relateSeq M (\u03b2 :: (\u03b4 ++ [\u03b1])) v u\n_theSide : Side := sideOf (Sum.inl (~'\u230a\u03b2\u230bAnyFormula.loaded (loadMulti \u03b4 \u03b1 \u03c6)))\n\u22a2 (~''(AnyFormula.loaded (\u230a\u03b2\u230bAnyFormula.loadBoxes (\u03b4 ++ [\u03b1]) (AnyFormula.normal \u03c6)))).in_side _theSide (tabAt t).snd.fst",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/b5b99961a6c0ede987c8db11ca6a583f38900878/Pdl/Soundness.lean#L3051"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-06-03T15:55:27+02:00",
        "inclusion_date": "2025-06-05T06:34:20.734005+00:00"
      },
      "id": "4c08c7d8d93b5578981c0d902101f5547eaba6a924b5e2ce80b462c2f20ade7b"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "b5b99961a6c0ede987c8db11ca6a583f38900878",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 3046,
        "start_column": 10,
        "end_line": 3046,
        "end_column": 15
      },
      "debug_info": {
        "goal": "Root : Sequent\ntab : Tableau [] Root\nRoot_isFree : Root.isFree = true\nt : PathIn tab\nIH : \u2200 (y : PathIn tab), before Root tab t y \u2192 \u00acsatisfiable (nodeAt y)\nlf : LoadFormula\nO_def : (tabAt t).snd.fst.2.2 = some (Sum.inr (~'lf))\n_theSide : Side := sideOf (Sum.inr (~'lf))\n\u03b1 : Program\n\u03c6 : Formula\n\u03b2 : Program\n\u03b4 : List Program\nlf_def : lf = loadMulti (\u03b2 :: \u03b4) \u03b1 \u03c6\nW : Type\nM : KripkeModel W\nv : W\nv_ : (M, v)\u22a8nodeAt t\nw : W\nv_\u03b2_w : relate M \u03b2 v w\nu : W\nw_\u03b4\u03b1_u : relateSeq M (\u03b4 ++ [\u03b1]) w u\nu_not_\u03c6 : \u00acevaluate M u \u03c6\n\u22a2 relateSeq M (\u03b2 :: (\u03b4 ++ [\u03b1])) v u",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/b5b99961a6c0ede987c8db11ca6a583f38900878/Pdl/Soundness.lean#L3046"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-06-03T15:55:27+02:00",
        "inclusion_date": "2025-06-05T06:34:20.734005+00:00"
      },
      "id": "8b8d98fd52362dbddf668f8d260847171d68884a6f7aefeb3d340e06d00cecd9"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "b5b99961a6c0ede987c8db11ca6a583f38900878",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 3051,
        "start_column": 10,
        "end_line": 3051,
        "end_column": 15
      },
      "debug_info": {
        "goal": "Root : Sequent\ntab : Tableau [] Root\nRoot_isFree : Root.isFree = true\nt : PathIn tab\n\u03b1 : Program\n\u03c6 : Formula\n\u03b2 : Program\n\u03b4 : List Program\nW : Type\nM : KripkeModel W\nv w u : W\nIH : \u2200 (y : PathIn tab), before Root tab t y \u2192 \u00acsatisfiable (tabAt y).snd.fst\nO_def : (tabAt t).snd.fst.2.2 = some (Sum.inr (~'\u230a\u03b2\u230bAnyFormula.loaded (loadMulti \u03b4 \u03b1 \u03c6)))\nv_ : (M, v)\u22a8(tabAt t).snd.fst\nv_\u03b2_w : relate M \u03b2 v w\nw_\u03b4\u03b1_u : relateSeq M (\u03b4 ++ [\u03b1]) w u\nu_not_\u03c6 : \u00acevaluate M u \u03c6\nv_\u03b2\u03b4\u03b1_u : relateSeq M (\u03b2 :: (\u03b4 ++ [\u03b1])) v u\n_theSide : Side := sideOf (Sum.inr (~'\u230a\u03b2\u230bAnyFormula.loaded (loadMulti \u03b4 \u03b1 \u03c6)))\n\u22a2 (~''(AnyFormula.loaded (\u230a\u03b2\u230bAnyFormula.loadBoxes (\u03b4 ++ [\u03b1]) (AnyFormula.normal \u03c6)))).in_side _theSide (tabAt t).snd.fst",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/b5b99961a6c0ede987c8db11ca6a583f38900878/Pdl/Soundness.lean#L3051"
      },
      "metadata": {
        "blame_email_hash": "f9cc4b9ec8ec",
        "blame_date": "2025-06-03T15:55:27+02:00",
        "inclusion_date": "2025-06-05T06:34:20.734005+00:00"
      },
      "id": "610d6add85c6c41433381405cf55e6439137919f29fb483282c18826d0b16cad"
    },
    {
      "repo": {
        "remote": "https://github.com/riccardobrasca/kaplanski4",
        "branch": "oka",
        "commit": "0e59d1d7ad1b483cee5e2faee433211c5f1400e9",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Kaplanski4/Oka.lean",
        "start_line": 60,
        "start_column": 2,
        "end_line": 60,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommRing R\n\u22a2 IsOka fun I => I.FG",
        "url": "https://github.com/riccardobrasca/kaplanski4/blob/0e59d1d7ad1b483cee5e2faee433211c5f1400e9/Kaplanski4/Oka.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "10d2a3a08f0e",
        "blame_date": "2025-06-03T10:25:40+02:00",
        "inclusion_date": "2025-06-06T06:14:50.092278+00:00"
      },
      "id": "9fb16a921b689c20fc48fa9e417a45dd8881018f175224f13a7621bea01b4c3e"
    },
    {
      "repo": {
        "remote": "https://github.com/riccardobrasca/kaplanski4",
        "branch": "oka",
        "commit": "0af8cb37c65e3375bd5274af7034ec72a825c8e2",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Kaplanski4/Oka.lean",
        "start_line": 63,
        "start_column": 2,
        "end_line": 63,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommRing R\n\u22a2 IsOka fun I => Submodule.IsPrincipal I",
        "url": "https://github.com/riccardobrasca/kaplanski4/blob/0af8cb37c65e3375bd5274af7034ec72a825c8e2/Kaplanski4/Oka.lean#L63"
      },
      "metadata": {
        "blame_email_hash": "10d2a3a08f0e",
        "blame_date": "2025-06-03T10:25:40+02:00",
        "inclusion_date": "2025-06-04T05:42:48.593752+00:00"
      },
      "id": "53fb1cee41658465b116ef7566e369dd12a585e12885dc9f265bfc8a92d67f9b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "p3-backend",
        "commit": "0c40acdacd8d1a7e2fac09b34bc6689c3e336ebf",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Clean/Gadgets/Bits.lean",
        "start_line": 92,
        "start_column": 4,
        "end_line": 92,
        "end_column": 9
      },
      "debug_info": {
        "goal": "p : \u2115\nprime : Fact (Nat.Prime p)\np_large_enough : Fact (p > 2)\nn : \u2115\nhn : 2 ^ n < p\n\u22a2 \u2200 (offset : \u2115) (env : Environment (F p)) (b_var : Var field (F p)),\n    env.uses_local_witnesses_completeness offset\n        ((do\n              let __discr \u2190 Gadgets.ToBits.main p prime n b_var\n              let x : Vector (Expression (F p)) n := __discr\n              pure PUnit.unit).operations\n          offset) \u2192\n      \u2200 (b : field (F p)),\n        eval env b_var = b \u2192\n          True \u2192\n            ZMod.val b < 2 ^ n \u2192\n              Circuit.constraints_hold.completeness env\n                ((do\n                      let __discr \u2190 Gadgets.ToBits.main p prime n b_var\n                      let x : Vector (Expression (F p)) n := __discr\n                      pure PUnit.unit).operations\n                  offset)",
        "url": "https://github.com/Verified-zkEVM/clean/blob/0c40acdacd8d1a7e2fac09b34bc6689c3e336ebf/Clean/Gadgets/Bits.lean#L92"
      },
      "metadata": {
        "blame_email_hash": "0130f16e5d6d",
        "blame_date": "2025-05-27T15:56:45+02:00",
        "inclusion_date": "2025-06-06T07:04:02.516037+00:00"
      },
      "id": "7c9ff774fa6b579beabd32e223ac75e30d8acc8591e30b4435b9f7ef0a79b0c8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "p3-backend",
        "commit": "0c40acdacd8d1a7e2fac09b34bc6689c3e336ebf",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Clean/Gadgets/ByteDecomposition/ByteDecomposition.lean",
        "start_line": 95,
        "start_column": 2,
        "end_line": 95,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 2 ^ 16 + 2 ^ 8)\noffset : Fin 8\ni0 : \u2115\nenv : Environment (F p)\nx_var : Var field (F p)\nx : F p\nh_eval : Expression.eval env x_var = x\nas : ZMod.val x < 256\nhenv :\n  env.get i0 =\n      FieldUtils.mod (Expression.eval env x_var)\n        \u27e82 ^ \u2191offset, Gadgets.ByteDecomposition.byte_decomposition._proof_4 offset\u27e9\n        (Gadgets.ByteDecomposition.byte_decomposition._proof_5 p p_large_enough offset) \u2227\n    env.get (i0 + 1) = FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191offset)\nh0 :\n  env.get i0 =\n    FieldUtils.mod (Expression.eval env x_var)\n      \u27e82 ^ \u2191offset, Gadgets.ByteDecomposition.byte_decomposition._proof_4 offset\u27e9\n      (Gadgets.ByteDecomposition.byte_decomposition._proof_5 p p_large_enough offset)\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191offset)\n\u22a2 ZMod.val\n        (FieldUtils.mod (Expression.eval env x_var)\n          \u27e82 ^ \u2191offset, Gadgets.ByteDecomposition.byte_decomposition._proof_4 offset\u27e9\n          (Gadgets.ByteDecomposition.byte_decomposition._proof_5 p p_large_enough offset)) <\n      2 ^ \u2191offset.castSucc \u2227\n    ZMod.val (FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191offset)) < 2 ^ \u2191(8 - offset.castSucc) \u2227\n      FieldUtils.mod (Expression.eval env x_var)\n              \u27e82 ^ \u2191offset, Gadgets.ByteDecomposition.byte_decomposition._proof_4 offset\u27e9\n              (Gadgets.ByteDecomposition.byte_decomposition._proof_5 p p_large_enough offset) +\n            FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191offset) * 2 ^ \u2191offset +\n          -x =\n        0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/0c40acdacd8d1a7e2fac09b34bc6689c3e336ebf/Clean/Gadgets/ByteDecomposition/ByteDecomposition.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-05-15T17:59:45+02:00",
        "inclusion_date": "2025-06-06T07:04:02.516037+00:00"
      },
      "id": "036b2ae259516dffcb3a77554a2704458a2be95e44aab0cb838c2609e4646bb4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "p3-backend",
        "commit": "0c40acdacd8d1a7e2fac09b34bc6689c3e336ebf",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Clean/Gadgets/ByteDecomposition/ByteDecomposition.lean",
        "start_line": 195,
        "start_column": 2,
        "end_line": 195,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case mk.mk\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 2 ^ 16 + 2 ^ 8)\noffset : Fin 8\ni0 : \u2115\nenv : Environment (F p)\nx0_var x1_var x2_var x3_var x4_var x5_var x6_var x7_var : Expression (F p)\nhenv :\n  env.uses_local_witnesses_completeness i0\n    ((ElaboratedCircuit.main\n          { x0 := x0_var, x1 := x1_var, x2 := x2_var, x3 := x3_var, x4 := x4_var, x5 := x5_var, x6 := x6_var,\n            x7 := x7_var }).operations\n      i0)\nx0 x1 x2 x3 x4 x5 x6 x7 : F p\nh_eval :\n  eval env\n      { x0 := x0_var, x1 := x1_var, x2 := x2_var, x3 := x3_var, x4 := x4_var, x5 := x5_var, x6 := x6_var,\n        x7 := x7_var } =\n    { x0 := x0, x1 := x1, x2 := x2, x3 := x3, x4 := x4, x5 := x5, x6 := x6, x7 := x7 }\nas : { x0 := x0, x1 := x1, x2 := x2, x3 := x3, x4 := x4, x5 := x5, x6 := x6, x7 := x7 }.is_normalized\n\u22a2 Circuit.constraints_hold.completeness env\n    ((ElaboratedCircuit.main\n          { x0 := x0_var, x1 := x1_var, x2 := x2_var, x3 := x3_var, x4 := x4_var, x5 := x5_var, x6 := x6_var,\n            x7 := x7_var }).operations\n      i0)",
        "url": "https://github.com/Verified-zkEVM/clean/blob/0c40acdacd8d1a7e2fac09b34bc6689c3e336ebf/Clean/Gadgets/ByteDecomposition/ByteDecomposition.lean#L195"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-24T23:40:51+02:00",
        "inclusion_date": "2025-06-06T07:04:02.516037+00:00"
      },
      "id": "c99c076da7a9159b1005ae4ccc2cd429df789e96c3d040fbe26598071edf67d9"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "p3-backend",
        "commit": "0c40acdacd8d1a7e2fac09b34bc6689c3e336ebf",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Clean/Gadgets/Keccak/ThetaD.lean",
        "start_line": 93,
        "start_column": 2,
        "end_line": 93,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 2 ^ 16 + 2 ^ 8)\ni0 : \u2115\nenv : Environment (F p)\nstate_var : Var KeccakRow (F p)\nh_env : env.uses_local_witnesses_completeness i0 ((ElaboratedCircuit.main state_var).operations i0)\nstate : KeccakRow (F p)\nh_assumptions : Gadgets.Keccak256.ThetaD.assumptions p state\nh_input : Vector.map (eval env) state_var = state\n\u22a2 Rotation64.assumptions (eval env state_var[1]) \u2227\n    ((eval env state_var[4]).is_normalized \u2227 (eval env (ElaboratedCircuit.output state_var[1] i0)).is_normalized) \u2227\n      Rotation64.assumptions (eval env state_var[2]) \u2227\n        ((eval env state_var[0]).is_normalized \u2227\n            (eval env\n                (ElaboratedCircuit.output state_var[2]\n                  (i0 + (ElaboratedCircuit.local_length U64 state_var[1] + 8)))).is_normalized) \u2227\n          Rotation64.assumptions (eval env state_var[3]) \u2227\n            ((eval env state_var[1]).is_normalized \u2227\n                (eval env\n                    (ElaboratedCircuit.output state_var[3]\n                      (i0 +\n                        (ElaboratedCircuit.local_length U64 state_var[1] +\n                          (8 + (ElaboratedCircuit.local_length U64 state_var[2] + 8)))))).is_normalized) \u2227\n              Rotation64.assumptions (eval env state_var[4]) \u2227\n                ((eval env state_var[2]).is_normalized \u2227\n                    (eval env\n                        (ElaboratedCircuit.output state_var[4]\n                          (i0 +\n                            (ElaboratedCircuit.local_length U64 state_var[1] +\n                              (8 +\n                                (ElaboratedCircuit.local_length U64 state_var[2] +\n                                  (8 + (ElaboratedCircuit.local_length U64 state_var[3] + 8)))))))).is_normalized) \u2227\n                  Rotation64.assumptions (eval env state_var[0]) \u2227\n                    (eval env state_var[3]).is_normalized \u2227\n                      (eval env\n                          (ElaboratedCircuit.output state_var[0]\n                            (i0 +\n                              (ElaboratedCircuit.local_length U64 state_var[1] +\n                                (8 +\n                                  (ElaboratedCircuit.local_length U64 state_var[2] +\n                                    (8 +\n                                      (ElaboratedCircuit.local_length U64 state_var[3] +\n                                        (8 +\n                                          (ElaboratedCircuit.local_length U64 state_var[4] + 8)))))))))).is_normalized",
        "url": "https://github.com/Verified-zkEVM/clean/blob/0c40acdacd8d1a7e2fac09b34bc6689c3e336ebf/Clean/Gadgets/Keccak/ThetaD.lean#L93"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-04-15T00:48:02+02:00",
        "inclusion_date": "2025-06-06T07:04:02.516037+00:00"
      },
      "id": "56af5784d0336882bc8988e0aeaf3aede176b74b92755b46fa21aaf08f679b4e"
    },
    {
      "repo": {
        "remote": "https://github.com/acmepjz/lean-iwasawa",
        "branch": "master",
        "commit": "2ba6b052fa482699110f2b7691780b69b3adacc2",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Iwasawalib/FieldTheory/ZpExtension/Basic.lean",
        "start_line": 364,
        "start_column": 2,
        "end_line": 364,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d\u2074 : Fact (Nat.Prime p)\nK : Type u\nKinf : Type v\ninst\u271d\u00b3 : Field K\ninst\u271d\u00b2 : Field Kinf\ninst\u271d\u00b9 : Algebra K Kinf\ninst\u271d : IsGalois K Kinf\nH : @IsZpExtension p inst\u271d\u2074 K Kinf inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d\nG : Subgroup (@IsMvZpExtension.\u0393 p inst\u271d\u2074 1 K Kinf inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d H)\nh : IsOpen \u2191G\n\u22a2 \u2203 n, G = \u2191(@IsMvZpExtension.\u0393pow p inst\u271d\u2074 1 K Kinf inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d H n)",
        "url": "https://github.com/acmepjz/lean-iwasawa/blob/2ba6b052fa482699110f2b7691780b69b3adacc2/Iwasawalib/FieldTheory/ZpExtension/Basic.lean#L364"
      },
      "metadata": {
        "blame_email_hash": "51a1929615ee",
        "blame_date": "2025-04-10T16:08:25+08:00",
        "inclusion_date": "2025-06-06T05:00:04.754905+00:00"
      },
      "id": "0f9a62ce191ad66a4f38110fd9e3cd547f1f6b6870db1d4227c4961751477cb9"
    },
    {
      "repo": {
        "remote": "https://github.com/acmepjz/lean-iwasawa",
        "branch": "master",
        "commit": "2ba6b052fa482699110f2b7691780b69b3adacc2",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Iwasawalib/FieldTheory/ZpExtension/Basic.lean",
        "start_line": 369,
        "start_column": 2,
        "end_line": 369,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d\u2074 : Fact (Nat.Prime p)\nK : Type u\nKinf : Type v\ninst\u271d\u00b3 : Field K\ninst\u271d\u00b2 : Field Kinf\ninst\u271d\u00b9 : Algebra K Kinf\ninst\u271d : IsGalois K Kinf\nH : @IsZpExtension p inst\u271d\u2074 K Kinf inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d\nG : Subgroup (@IsMvZpExtension.\u0393 p inst\u271d\u2074 1 K Kinf inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d H)\nh : IsClosed \u2191G\n\u22a2 G = \u22a5 \u2228 \u2203 n, G = \u2191(@IsMvZpExtension.\u0393pow p inst\u271d\u2074 1 K Kinf inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d H n)",
        "url": "https://github.com/acmepjz/lean-iwasawa/blob/2ba6b052fa482699110f2b7691780b69b3adacc2/Iwasawalib/FieldTheory/ZpExtension/Basic.lean#L369"
      },
      "metadata": {
        "blame_email_hash": "51a1929615ee",
        "blame_date": "2025-04-10T16:08:25+08:00",
        "inclusion_date": "2025-06-06T05:00:04.754905+00:00"
      },
      "id": "aeed9651ed8c0e0dfaad7f08019fa69bb4e7a0a73414a5091f7c0cdfc41b3958"
    },
    {
      "repo": {
        "remote": "https://github.com/acmepjz/lean-iwasawa",
        "branch": "master",
        "commit": "2ba6b052fa482699110f2b7691780b69b3adacc2",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Iwasawalib/Algebra/CompleteGroupAlgebra/Basic.lean",
        "start_line": 357,
        "start_column": 2,
        "end_line": 357,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u2076 : CommSemiring R\nG : Type u_2\ninst\u271d\u2075 : Group G\ninst\u271d\u2074 : TopologicalSpace G\ninst\u271d\u00b3 : IsTopologicalGroup G\ninst\u271d\u00b2 : CompactSpace G\ninst\u271d\u00b9 : TotallyDisconnectedSpace G\ninst\u271d : Nontrivial R\nx : G\nh :\n  @DFunLike.coe (G \u2192* @CompleteGroupAlgebra R inst\u271d\u2076 G inst\u271d\u2075 inst\u271d\u2074) G\n      (fun x => @CompleteGroupAlgebra R inst\u271d\u2076 G inst\u271d\u2075 inst\u271d\u2074) MonoidHom.instFunLike\n      (@CompleteGroupAlgebra.of R inst\u271d\u2076 G inst\u271d\u2075 inst\u271d\u2074) x =\n    1\nkey : \u2200 (N : OpenNormalSubgroup G), x \u2208 N\nthis : T2Space G\n\u22a2 x = 1",
        "url": "https://github.com/acmepjz/lean-iwasawa/blob/2ba6b052fa482699110f2b7691780b69b3adacc2/Iwasawalib/Algebra/CompleteGroupAlgebra/Basic.lean#L357"
      },
      "metadata": {
        "blame_email_hash": "51a1929615ee",
        "blame_date": "2025-06-04T16:29:12+08:00",
        "inclusion_date": "2025-06-06T05:00:04.754905+00:00"
      },
      "id": "07f6f1fc9883312b56fa6ffdf7199a71006e92427ceb360b2f8235c1e3cb8442"
    },
    {
      "repo": {
        "remote": "https://github.com/acmepjz/lean-iwasawa",
        "branch": "master",
        "commit": "2ba6b052fa482699110f2b7691780b69b3adacc2",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Iwasawalib/NumberTheory/ZpExtension/ClassGroup.lean",
        "start_line": 29,
        "start_column": 2,
        "end_line": 29,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d\u2075 : Fact (Nat.Prime p)\nK : Type u\nKinf : Type v\ninst\u271d\u2074 : Field K\ninst\u271d\u00b3 : NumberField K\ninst\u271d\u00b2 : Field Kinf\ninst\u271d\u00b9 : Algebra K Kinf\ninst\u271d : IsGalois K Kinf\nH : IsZpExtension p K Kinf\n\u22a2 \u2203 mu lambda nu N,\n    \u2200 n > N, multiplicity (NumberField.classNumber \u21a5(IsMvZpExtension.Kn H n)) p = mu * p ^ n + lambda * p + nu",
        "url": "https://github.com/acmepjz/lean-iwasawa/blob/2ba6b052fa482699110f2b7691780b69b3adacc2/Iwasawalib/NumberTheory/ZpExtension/ClassGroup.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "51a1929615ee",
        "blame_date": "2025-04-03T18:45:23+08:00",
        "inclusion_date": "2025-06-06T05:00:04.754905+00:00"
      },
      "id": "eafbe54c759a2310c8af66e562d1a48237a9db1e1c1480622679c581aa7be9f8"
    },
    {
      "repo": {
        "remote": "https://github.com/acmepjz/lean-iwasawa",
        "branch": "master",
        "commit": "2ba6b052fa482699110f2b7691780b69b3adacc2",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Iwasawalib/RingTheory/PseudoNull/StructureTheorem.lean",
        "start_line": 106,
        "start_column": 2,
        "end_line": 106,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A : Type u_1\ninst\u271d\u00b2 : CommRing A\ninst\u271d\u00b9 : IsDomain A\ninst\u271d : @IsKrullDomain A inst\u271d\u00b2 inst\u271d\u00b9\n\u22a2 IsIntegrallyClosed A",
        "url": "https://github.com/acmepjz/lean-iwasawa/blob/2ba6b052fa482699110f2b7691780b69b3adacc2/Iwasawalib/RingTheory/PseudoNull/StructureTheorem.lean#L106"
      },
      "metadata": {
        "blame_email_hash": "51a1929615ee",
        "blame_date": "2025-04-27T01:28:03+08:00",
        "inclusion_date": "2025-06-06T05:00:04.754905+00:00"
      },
      "id": "a08c11c39f0ca114da30372d5ccf9c96f803434c194540bb91333d3d412068ae"
    },
    {
      "repo": {
        "remote": "https://github.com/acmepjz/lean-iwasawa",
        "branch": "master",
        "commit": "2ba6b052fa482699110f2b7691780b69b3adacc2",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Iwasawalib/RingTheory/PseudoNull/StructureTheorem.lean",
        "start_line": 585,
        "start_column": 2,
        "end_line": 585,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A : Type u\ninst\u271d\u2075 : CommRing A\ninst\u271d\u2074 : IsNoetherianRing A\ninst\u271d\u00b3 : @HeightOneLocalizationIsPID A inst\u271d\u2075\nM : Type u_1\ninst\u271d\u00b2 : AddCommGroup M\ninst\u271d\u00b9 : Module A M\ninst\u271d : Module.Finite A M\nhMT : IsTorsion A M\n\u22a2 \u2203 \u03b9 x p,\n    \u2203 (_ : \u2200 (i : \u03b9), (p i).asIdeal.primeHeight = 1),\n      \u2203 e, \u2203 (_ : \u2200 (i : \u03b9), 0 < e i), M \u223c\u209a\u1d62\u209b[A] ((i : \u03b9) \u2192 A \u29f8 (p i).asIdeal ^ e i)",
        "url": "https://github.com/acmepjz/lean-iwasawa/blob/2ba6b052fa482699110f2b7691780b69b3adacc2/Iwasawalib/RingTheory/PseudoNull/StructureTheorem.lean#L585"
      },
      "metadata": {
        "blame_email_hash": "51a1929615ee",
        "blame_date": "2025-04-27T01:28:03+08:00",
        "inclusion_date": "2025-06-06T05:00:04.754905+00:00"
      },
      "id": "adcc217926b95d0aad43af026274e5a7e0419d4c1eb9dc4fff3b2ad64ac83c3f"
    },
    {
      "repo": {
        "remote": "https://github.com/acmepjz/lean-iwasawa",
        "branch": "master",
        "commit": "2ba6b052fa482699110f2b7691780b69b3adacc2",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Iwasawalib/RingTheory/PseudoNull/StructureTheorem.lean",
        "start_line": 597,
        "start_column": 2,
        "end_line": 597,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A : Type u_1\ninst\u271d\u2078 : CommRing A\ninst\u271d\u2077 : IsNoetherianRing A\ninst\u271d\u2076 : @HeightOneLocalizationIsPID A inst\u271d\u2078\nM : Type u_2\ninst\u271d\u2075 : AddCommGroup M\ninst\u271d\u2074 : Module A M\ninst\u271d\u00b3 : Module.Finite A M\nhMT : IsTorsion A M\nN : Type u_3\ninst\u271d\u00b2 : AddCommGroup N\ninst\u271d\u00b9 : Module A N\ninst\u271d : Module.Finite A N\nhNT : IsTorsion A N\n\u22a2 M \u223c\u209a\u1d62\u209b[A] N \u2194\n    \u2200 (p : PrimeSpectrum A),\n      p.asIdeal.primeHeight = 1 \u2192\n        Nonempty\n          (LocalizedModule p.asIdeal.primeCompl M \u2243\u2097[Localization p.asIdeal.primeCompl]\n            LocalizedModule p.asIdeal.primeCompl N)",
        "url": "https://github.com/acmepjz/lean-iwasawa/blob/2ba6b052fa482699110f2b7691780b69b3adacc2/Iwasawalib/RingTheory/PseudoNull/StructureTheorem.lean#L597"
      },
      "metadata": {
        "blame_email_hash": "51a1929615ee",
        "blame_date": "2025-04-27T01:28:03+08:00",
        "inclusion_date": "2025-06-06T05:00:04.754905+00:00"
      },
      "id": "fb93325a3ca64d292b3437c4d266a32c1fa13a603be58a99a250178cea1e3d83"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "fb56c7899dc9bb652c1adba23ee65b40d9aea241",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/MatroidSum3.lean",
        "start_line": 362,
        "start_column": 2,
        "end_line": 362,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d : DecidableEq \u03b1\nS\u2097 S\u1d63 : StandardRepr \u03b1 Z2\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\nhx\u2080 : x\u2080 \u2260 x\u2082\nhx\u2081 : x\u2081 \u2260 x\u2082\nhy\u2080 : y\u2080 \u2260 y\u2082\nhy\u2081 : y\u2081 \u2260 y\u2082\nhXX : S\u2097.X \u2229 S\u1d63.X = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : S\u2097.Y \u2229 S\u1d63.Y = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhXY : S\u2097.X \u2ad7 S\u1d63.Y\nhYX : S\u2097.Y \u2ad7 S\u1d63.X\nhS\u2097 : S\u2097.B.HasTuSigning\nhS\u1d63 : S\u1d63.B.HasTuSigning\nhSS : (standardRepr3sumComposition hx\u2080 hx\u2081 hy\u2080 hy\u2081 hXX hYY hXY hYX).2\n\u22a2 (standardRepr3sumComposition hx\u2080 hx\u2081 hy\u2080 hy\u2081 hXX hYY hXY hYX).1.B.HasTuSigning",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/fb56c7899dc9bb652c1adba23ee65b40d9aea241/Seymour/Matroid/Operations/Sum3/MatroidSum3.lean#L362"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-05T05:09:12.274547+00:00"
      },
      "id": "e17652d9e8be5fa9a7ae25fb747839725c6b9392a890c82b3bdb29d1c2f65b5f"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "1c14b42a81480d31e75a833e6bbe48b6a346a20d",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/MatroidSum3.lean",
        "start_line": 54,
        "start_column": 2,
        "end_line": 54,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\nX : Set \u03b1\nx\u2080 x\u2081 x\u2082 : \u2191X\n\u22a2 X.drop3 x\u2080 x\u2081 x\u2082 \u222a \u2191x\u2080 \u1543 {\u2191x\u2081} = X.drop1 x\u2082",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/1c14b42a81480d31e75a833e6bbe48b6a346a20d/Seymour/Matroid/Operations/Sum3/MatroidSum3.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-06-04T16:45:53+02:00",
        "inclusion_date": "2025-06-05T05:18:00.928874+00:00"
      },
      "id": "875b079185ac48999065822b605a17fbb43d381f11d63d0c6991d7005c8e63ff"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "1c14b42a81480d31e75a833e6bbe48b6a346a20d",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/MatroidSum3.lean",
        "start_line": 57,
        "start_column": 2,
        "end_line": 57,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\nX : Set \u03b1\nx\u2080 x\u2081 x\u2082 : \u2191X\n\u22a2 \u2191x\u2080 \u1543 {\u2191x\u2081} \u222a X.drop3 x\u2080 x\u2081 x\u2082 = X.drop1 x\u2082",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/1c14b42a81480d31e75a833e6bbe48b6a346a20d/Seymour/Matroid/Operations/Sum3/MatroidSum3.lean#L57"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-06-04T16:45:53+02:00",
        "inclusion_date": "2025-06-05T05:18:00.928874+00:00"
      },
      "id": "c6915fd3ad8bff9cef1a6a89447d555c8f5ef52016c55c86f5c1ff4069f7c2fb"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "1c14b42a81480d31e75a833e6bbe48b6a346a20d",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/MatroidSum3.lean",
        "start_line": 60,
        "start_column": 2,
        "end_line": 60,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\nX : Set \u03b1\nx\u2080 x\u2081 x\u2082 : \u2191X\n\u22a2 X.drop3 x\u2080 x\u2081 x\u2082 \u222a {\u2191x\u2082} = X.drop2 x\u2080 x\u2081",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/1c14b42a81480d31e75a833e6bbe48b6a346a20d/Seymour/Matroid/Operations/Sum3/MatroidSum3.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-06-04T16:45:53+02:00",
        "inclusion_date": "2025-06-05T05:18:00.928874+00:00"
      },
      "id": "297d5e0baa5ca4f93a1b83e4b227bab603fd14cf08b31622283c63a13fdd18d6"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "sum3-refactor",
        "commit": "1c14b42a81480d31e75a833e6bbe48b6a346a20d",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/MatroidSum3.lean",
        "start_line": 63,
        "start_column": 2,
        "end_line": 63,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\nX : Set \u03b1\nx\u2080 x\u2081 x\u2082 : \u2191X\n\u22a2 {\u2191x\u2082} \u222a X.drop3 x\u2080 x\u2081 x\u2082 = X.drop2 x\u2080 x\u2081",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/1c14b42a81480d31e75a833e6bbe48b6a346a20d/Seymour/Matroid/Operations/Sum3/MatroidSum3.lean#L63"
      },
      "metadata": {
        "blame_email_hash": "a853c166ca8e",
        "blame_date": "2025-06-04T16:45:53+02:00",
        "inclusion_date": "2025-06-05T05:18:00.928874+00:00"
      },
      "id": "0882f7b78b3718585c5bdc39ce201165f664f024814ae718e14b2fc3ca4c6cb5"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "e6739f65cfae4725971a4dfb3c71c4bd058ec4dc",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "LeanByExample/Attribute/Aesop.lean",
        "start_line": 107,
        "start_column": 2,
        "end_line": 107,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c d e : Nat\nh1 : a \u2264 b\nh2 : b \u2264 c\nh3 : c \u2264 d\nh4 : d \u2264 e\n\u22a2 a \u2264 e",
        "url": "https://github.com/lean-ja/lean-by-example/blob/e6739f65cfae4725971a4dfb3c71c4bd058ec4dc/LeanByExample/Attribute/Aesop.lean#L107"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-01-08T22:40:33+09:00",
        "inclusion_date": "2025-06-06T05:24:29.589628+00:00"
      },
      "id": "d71790c6eba8ab937c9b5df1db9a046cd336022bbf5b194c683953d3ac2b3fdc"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "e6739f65cfae4725971a4dfb3c71c4bd058ec4dc",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "LeanByExample/Declarative/ProofWanted.lean",
        "start_line": 16,
        "start_column": 41,
        "end_line": 16,
        "end_column": 46
      },
      "debug_info": {
        "goal": "n : Nat\n\u22a2 n + 0 = n",
        "url": "https://github.com/lean-ja/lean-by-example/blob/e6739f65cfae4725971a4dfb3c71c4bd058ec4dc/LeanByExample/Declarative/ProofWanted.lean#L16"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2024-06-19T23:24:32+09:00",
        "inclusion_date": "2025-06-06T05:24:29.589628+00:00"
      },
      "id": "d5bac0a7fc5fd15c6665e97dcaf6d328c11b0f7a392122da3bc0c405ac22b5fa"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "e6739f65cfae4725971a4dfb3c71c4bd058ec4dc",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "LeanByExample/Tactic/Ext.lean",
        "start_line": 47,
        "start_column": 2,
        "end_line": 47,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u\na b : @Set \u03b1\nh : \u2200 (x : \u03b1), x \u2208 a \u2194 x \u2208 b\n\u22a2 a = b",
        "url": "https://github.com/lean-ja/lean-by-example/blob/e6739f65cfae4725971a4dfb3c71c4bd058ec4dc/LeanByExample/Tactic/Ext.lean#L47"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-01-08T20:05:37+09:00",
        "inclusion_date": "2025-06-06T05:24:29.589628+00:00"
      },
      "id": "bd8048135f2f966c660c785549db9df651f047e344d8e8c9ca02de34251dfbcf"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "e6739f65cfae4725971a4dfb3c71c4bd058ec4dc",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "LeanByExample/Tactic/Ext.lean",
        "start_line": 95,
        "start_column": 2,
        "end_line": 95,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\np q : Foo\nhx : Foo.x p = Foo.x q\nhy : Foo.y p = Foo.y q\n\u22a2 p = q",
        "url": "https://github.com/lean-ja/lean-by-example/blob/e6739f65cfae4725971a4dfb3c71c4bd058ec4dc/LeanByExample/Tactic/Ext.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-01-08T20:05:37+09:00",
        "inclusion_date": "2025-06-06T05:24:29.589628+00:00"
      },
      "id": "5133b94d9ac350f67b0f0763593641930e4cfcd0a465650fc69c00ee075096b9"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "e6739f65cfae4725971a4dfb3c71c4bd058ec4dc",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "LeanByExample/Tactic/Ring.lean",
        "start_line": 115,
        "start_column": 2,
        "end_line": 115,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m n : MyNat\n\u22a2 n * (n + m) = n * n + n * m",
        "url": "https://github.com/lean-ja/lean-by-example/blob/e6739f65cfae4725971a4dfb3c71c4bd058ec4dc/LeanByExample/Tactic/Ring.lean#L115"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-02-17T22:51:43+09:00",
        "inclusion_date": "2025-06-06T05:24:29.589628+00:00"
      },
      "id": "d1b0652a154aa9e109de812e80dd0184de555dc19b448122fcbbb596cd206004"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "e6739f65cfae4725971a4dfb3c71c4bd058ec4dc",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "LeanByExample/Tactic/Induction.lean",
        "start_line": 73,
        "start_column": 4,
        "end_line": 73,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case succ\nn m : \u2115\nih : m + n = 0 \u2192 m = 0 \u2227 n = 0\nh : m + 1 + n = 0\n\u22a2 False",
        "url": "https://github.com/lean-ja/lean-by-example/blob/e6739f65cfae4725971a4dfb3c71c4bd058ec4dc/LeanByExample/Tactic/Induction.lean#L73"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2024-11-07T02:25:02+09:00",
        "inclusion_date": "2025-06-06T05:24:29.589628+00:00"
      },
      "id": "d9ca689f68b497b667bf479d77c8a795b960d4138e9d94c0ffd248030115503e"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "e6739f65cfae4725971a4dfb3c71c4bd058ec4dc",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "LeanByExample/Tactic/Induction.lean",
        "start_line": 130,
        "start_column": 6,
        "end_line": 130,
        "end_column": 11
      },
      "debug_info": {
        "goal": "n\u271d n : \u2115\n\u22a2 sum (n + 1) = \u2191(n + 1) * (\u2191(n + 1) + 1) / 2",
        "url": "https://github.com/lean-ja/lean-by-example/blob/e6739f65cfae4725971a4dfb3c71c4bd058ec4dc/LeanByExample/Tactic/Induction.lean#L130"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2024-04-25T03:36:30+09:00",
        "inclusion_date": "2025-06-06T05:24:29.589628+00:00"
      },
      "id": "703a873354f6bd98f1558c2e8632e0b72870ee89439343601ce3c2f853f57577"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/quote4",
        "branch": "master",
        "commit": "e1d2994e0acdee2f0c03c9d84d28a5df34aa0020",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "examples/introQ.lean",
        "start_line": 16,
        "start_column": 18,
        "end_line": 16,
        "end_column": 23
      },
      "debug_info": {
        "goal": "\u00ab$P\u00bb : \u2200 {n : Nat}, n = 1\n$fst\u271d : Nat\n\u00ab$m\u00bb : $fst\u271d = 1\n\u22a2 $fst\u271d = 1",
        "url": "https://github.com/leanprover-community/quote4/blob/e1d2994e0acdee2f0c03c9d84d28a5df34aa0020/examples/introQ.lean#L16"
      },
      "metadata": {
        "blame_email_hash": "1c4ac4603b04",
        "blame_date": "2023-07-14T18:25:43-07:00",
        "inclusion_date": "2025-06-05T05:28:31.781589+00:00"
      },
      "id": "5712df06e39bcfa2c362f010fa5a30d151af90f2b3d10f657836d4fb68d763bc"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "definition-of-Cohen-Macaulay",
        "commit": "5b85b8b0d477230cf505bfecb44d8bfa4e4545f8",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/RingTheory/Regular/Ischebeck.lean",
        "start_line": 97,
        "start_column": 95,
        "end_line": 97,
        "end_column": 100
      },
      "debug_info": {
        "goal": "R : Type u\ninst\u271d\u2074 : CommRing R\ninst\u271d\u00b3 : Small.{v, u} R\ninst\u271d\u00b2 : IsNoetherianRing R\nN M : ModuleCat R\ninst\u271d\u00b9 : Module.Finite R \u2191N\ninst\u271d : Module.Finite R \u2191M\ni : \u2115\n\u22a2 Module.Finite R (Ext N M i)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/5b85b8b0d477230cf505bfecb44d8bfa4e4545f8/Mathlib/RingTheory/Regular/Ischebeck.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "0aaeb3f219e2",
        "blame_date": "2025-05-23T12:46:36+08:00",
        "inclusion_date": "2025-06-06T05:35:01.919395+00:00"
      },
      "id": "ed416c73a7642b8d63d08df68dfa94bc5aae52f1bd051ff626387d9fdad71fb7"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "definition-of-Cohen-Macaulay",
        "commit": "5b85b8b0d477230cf505bfecb44d8bfa4e4545f8",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/RingTheory/Regular/Category.lean",
        "start_line": 78,
        "start_column": 15,
        "end_line": 78,
        "end_column": 20
      },
      "debug_info": {
        "goal": "R\u271d : Type u\ninst\u271d\u2075 : CommRing R\u271d\nM : ModuleCat R\u271d\nC : Type u\ninst\u271d\u2074 : Category.{v, u} C\ninst\u271d\u00b3 : Abelian C\ninst\u271d\u00b2 : HasExt C\nR : Type u_1\ninst\u271d\u00b9 : Ring R\ninst\u271d : Linear R C\nX Y : C\n\u22a2 \u2200 (m : R) (x : Ext X Y 0), addEquiv\u2080.toFun (m \u2022 x) = (RingHom.id R) m \u2022 addEquiv\u2080.toFun x",
        "url": "https://github.com/leanprover-community/mathlib4/blob/5b85b8b0d477230cf505bfecb44d8bfa4e4545f8/Mathlib/RingTheory/Regular/Category.lean#L78"
      },
      "metadata": {
        "blame_email_hash": "0aaeb3f219e2",
        "blame_date": "2025-04-11T11:20:08+08:00",
        "inclusion_date": "2025-06-06T05:35:01.919395+00:00"
      },
      "id": "401116e35ce17c6cd12f556b1820649c18a57c765e9343efdc050ea6d7ad8d4f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "definition-of-Cohen-Macaulay",
        "commit": "5b85b8b0d477230cf505bfecb44d8bfa4e4545f8",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/RingTheory/Regular/Category.lean",
        "start_line": 91,
        "start_column": 19,
        "end_line": 91,
        "end_column": 24
      },
      "debug_info": {
        "goal": "R\u271d : Type u\ninst\u271d\u2075 : CommRing R\u271d\nM : ModuleCat R\u271d\nC : Type u\ninst\u271d\u2074 : Category.{v, u} C\ninst\u271d\u00b3 : Abelian C\ninst\u271d\u00b2 : HasExt C\nR : Type u_1\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Linear R C\nX Y Z : C\na b c : \u2115\nh : a + b = c\n\u03b1 : Ext X Y a\n\u22a2 \u2200 (m : R) (x : Ext Y Z b), \u03b1.comp (m \u2022 x) h = (RingHom.id R) m \u2022 \u03b1.comp x h",
        "url": "https://github.com/leanprover-community/mathlib4/blob/5b85b8b0d477230cf505bfecb44d8bfa4e4545f8/Mathlib/RingTheory/Regular/Category.lean#L91"
      },
      "metadata": {
        "blame_email_hash": "0aaeb3f219e2",
        "blame_date": "2025-04-11T11:20:08+08:00",
        "inclusion_date": "2025-06-06T05:35:01.919395+00:00"
      },
      "id": "d21d1307146d46e78c9e0cb93f68a272711ba0cf7417fa2644110163534b5a1e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "definition-of-Cohen-Macaulay",
        "commit": "5b85b8b0d477230cf505bfecb44d8bfa4e4545f8",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/RingTheory/Regular/Category.lean",
        "start_line": 95,
        "start_column": 15,
        "end_line": 95,
        "end_column": 20
      },
      "debug_info": {
        "goal": "R\u271d : Type u\ninst\u271d\u2075 : CommRing R\u271d\nM : ModuleCat R\u271d\nC : Type u\ninst\u271d\u2074 : Category.{v, u} C\ninst\u271d\u00b3 : Abelian C\ninst\u271d\u00b2 : HasExt C\nR : Type u_1\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Linear R C\nX Y Z : C\na b c : \u2115\nh : a + b = c\n\u22a2 \u2200 (m : R) (x : Ext X Y a),\n    { toFun := fun \u03b2 => (m \u2022 x).comp \u03b2 h, map_add' := \u22ef, map_smul' := \u22ef } =\n      (RingHom.id R) m \u2022 { toFun := fun \u03b2 => x.comp \u03b2 h, map_add' := \u22ef, map_smul' := \u22ef }",
        "url": "https://github.com/leanprover-community/mathlib4/blob/5b85b8b0d477230cf505bfecb44d8bfa4e4545f8/Mathlib/RingTheory/Regular/Category.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "0aaeb3f219e2",
        "blame_date": "2025-04-11T11:20:08+08:00",
        "inclusion_date": "2025-06-06T05:35:01.919395+00:00"
      },
      "id": "a000628d2ffe340115f95d628efc31fa5390877ed1df9ca0c6b4c5d7f95b555f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "CM-local-ring-is-catenary",
        "commit": "29c6170edaa8aea6a9e4c631916edf7489faf5be",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/RingTheory/CohenMacaulay/Catenary.lean",
        "start_line": 161,
        "start_column": 2,
        "end_line": 161,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : IsNoetherianRing R\ninst\u271d : IsCohenMacaulayLocalRing R\nrs : List R\nmem : maximalIdeal R \u2208 (Ideal.ofList rs).minimalPrimes\n\u22a2 IsWeaklyRegular R rs",
        "url": "https://github.com/leanprover-community/mathlib4/blob/29c6170edaa8aea6a9e4c631916edf7489faf5be/Mathlib/RingTheory/CohenMacaulay/Catenary.lean#L161"
      },
      "metadata": {
        "blame_email_hash": "0aaeb3f219e2",
        "blame_date": "2025-06-02T13:06:50+08:00",
        "inclusion_date": "2025-06-05T05:31:02.899302+00:00"
      },
      "id": "97a5868085a53d007a081b6966c74b9a584f9b96b4a7269080c6ea1f3d29f5ce"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "jt496_blowups",
        "commit": "027c0cfa03753148e0b5d67ebe558b46b0fe635b",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Combinatorics/SimpleGraph/BlowupGraph.lean",
        "start_line": 80,
        "start_column": 6,
        "end_line": 80,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h.e'_1\n\u03b9 : Type u_1\nH : SimpleGraph \u03b9\nV : \u03b9 \u2192 Type u_2\nf : (i : \u03b9) \u2192 V i\ne : \u2191(H.blowupGraph V).edgeSet\n\u22a2 (Quot.out \u2191(cast \u22ef \u27e8s((Quot.out \u2191(cast \u22ef e)).1.fst, (Quot.out \u2191(cast \u22ef e)).2.fst), \u22ef\u27e9)).1 = (Quot.out \u2191e).1.fst",
        "url": "https://github.com/leanprover-community/mathlib4/blob/027c0cfa03753148e0b5d67ebe558b46b0fe635b/Mathlib/Combinatorics/SimpleGraph/BlowupGraph.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "8580f8c44a06",
        "blame_date": "2025-06-04T21:21:20+01:00",
        "inclusion_date": "2025-06-05T06:00:47.228160+00:00"
      },
      "id": "582445c341b48b1af003c25295e59c3a7c44343aac577daa6779c008e9ce0ffa"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "jt496_blowups",
        "commit": "027c0cfa03753148e0b5d67ebe558b46b0fe635b",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Combinatorics/SimpleGraph/BlowupGraph.lean",
        "start_line": 83,
        "start_column": 14,
        "end_line": 83,
        "end_column": 19
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nH : SimpleGraph \u03b9\nV : \u03b9 \u2192 Type u_2\nf : (i : \u03b9) \u2192 V i\n\u22a2 Function.LeftInverse sorry fun e =>\n    \u27e8\u22ef.mpr \u27e8s((Quot.out \u2191(\u22ef.mp e)).1.fst, (Quot.out \u2191(\u22ef.mp e)).2.fst), \u22ef\u27e9, (\u22ef.mpr (Quot.out \u2191e).1.snd, sorry)\u27e9",
        "url": "https://github.com/leanprover-community/mathlib4/blob/027c0cfa03753148e0b5d67ebe558b46b0fe635b/Mathlib/Combinatorics/SimpleGraph/BlowupGraph.lean#L83"
      },
      "metadata": {
        "blame_email_hash": "8580f8c44a06",
        "blame_date": "2025-06-04T21:21:20+01:00",
        "inclusion_date": "2025-06-05T06:00:47.228160+00:00"
      },
      "id": "54edd5a2d7e66839e1ceb939e3f45f758bcbd036f6a7e6af20d253d9a04172ef"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "jt496_blowups",
        "commit": "027c0cfa03753148e0b5d67ebe558b46b0fe635b",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Combinatorics/SimpleGraph/BlowupGraph.lean",
        "start_line": 84,
        "start_column": 15,
        "end_line": 84,
        "end_column": 20
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\nH : SimpleGraph \u03b9\nV : \u03b9 \u2192 Type u_2\nf : (i : \u03b9) \u2192 V i\n\u22a2 Function.RightInverse sorry fun e =>\n    \u27e8\u22ef.mpr \u27e8s((Quot.out \u2191(\u22ef.mp e)).1.fst, (Quot.out \u2191(\u22ef.mp e)).2.fst), \u22ef\u27e9, (\u22ef.mpr (Quot.out \u2191e).1.snd, sorry)\u27e9",
        "url": "https://github.com/leanprover-community/mathlib4/blob/027c0cfa03753148e0b5d67ebe558b46b0fe635b/Mathlib/Combinatorics/SimpleGraph/BlowupGraph.lean#L84"
      },
      "metadata": {
        "blame_email_hash": "8580f8c44a06",
        "blame_date": "2025-06-04T21:21:20+01:00",
        "inclusion_date": "2025-06-05T06:00:47.228160+00:00"
      },
      "id": "9277ac16def959d60bedd8765498214635ff90b5ae1fce3df643f950ecf8c87a"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "oliver-butterley/Variation",
        "commit": "aef30115b3dd3c5068dc46afef414d474ed42897",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/MeasureTheory/VectorMeasure/Variation.lean",
        "start_line": 432,
        "start_column": 2,
        "end_line": 432,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\ninst\u271d : MeasurableSpace X\n\u03bc : VectorMeasure X ENNReal\n\u22a2 @VectorMeasure.variation X inst\u271d ENNReal ENNReal.instTopologicalSpace instENormedAddCommMonoidENNReal instT2Space \u03bc =\n    \u03bc",
        "url": "https://github.com/leanprover-community/mathlib4/blob/aef30115b3dd3c5068dc46afef414d474ed42897/Mathlib/MeasureTheory/VectorMeasure/Variation.lean#L432"
      },
      "metadata": {
        "blame_email_hash": "b5f629390682",
        "blame_date": "2025-06-04T22:05:05+02:00",
        "inclusion_date": "2025-06-05T06:04:45.647212+00:00"
      },
      "id": "3797bec25ae795b7bd9208d2fc9926b7bf350b1a07d8d76a93853efa6d390a34"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "oliver-butterley/Variation",
        "commit": "7045c0b54997e8630e48a713bf4c282a78cd9758",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/MeasureTheory/VectorMeasure/Variation.lean",
        "start_line": 436,
        "start_column": 2,
        "end_line": 436,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\ninst\u271d : MeasurableSpace X\n\u03bc : SignedMeasure X\n\u22a2 \u03bc.totalVariation =\n    ennrealToMeasure\n      (@VectorMeasure.variation X inst\u271d \u211d PseudoMetricSpace.toUniformSpace.toTopologicalSpace\n        NormedAddCommGroup.toENormedAddCommMonoid \u22ef \u03bc)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/7045c0b54997e8630e48a713bf4c282a78cd9758/Mathlib/MeasureTheory/VectorMeasure/Variation.lean#L436"
      },
      "metadata": {
        "blame_email_hash": "b5f629390682",
        "blame_date": "2025-06-04T22:05:05+02:00",
        "inclusion_date": "2025-06-06T05:39:54.976434+00:00"
      },
      "id": "e52460c2a84347d0141dbd26656bc867306c159324bd6c8b2b41da977ac16fe0"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "suppress_sorry",
        "commit": "49cefc9b99e01f76e30fd93840728c4020e35c60",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "MathlibTest/suppressSorry.lean",
        "start_line": 72,
        "start_column": 63,
        "end_line": 72,
        "end_column": 68
      },
      "debug_info": {
        "goal": "x : sorry\n\u22a2 True",
        "url": "https://github.com/leanprover-community/mathlib4/blob/49cefc9b99e01f76e30fd93840728c4020e35c60/MathlibTest/suppressSorry.lean#L72"
      },
      "metadata": {
        "blame_email_hash": "8a7dcd08b95f",
        "blame_date": "2025-06-05T03:09:24+02:00",
        "inclusion_date": "2025-06-05T06:06:34.861698+00:00"
      },
      "id": "53b0a85634b8e8aa9ea27c39370d44a3cc41e46141db47293065e436f579fe1e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "terminalCat",
        "commit": "a2f04a3f90bf6a62c9b984897f5eb40a46b5f735",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/AlgebraicTopology/SimplicialSet/HoFunctorPreservesBinaryProducts.lean",
        "start_line": 109,
        "start_column": 2,
        "end_line": 109,
        "end_column": 7
      },
      "debug_info": {
        "goal": "C D : Type v\ninst\u271d\u00b9 : Category.{v, v} C\ninst\u271d : Category.{v, v} D\n\u22a2 IsIso (prodComparison (nerveFunctor.comp (hoFunctor.comp nerveFunctor)) (Cat.of C) (Cat.of D))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/a2f04a3f90bf6a62c9b984897f5eb40a46b5f735/Mathlib/AlgebraicTopology/SimplicialSet/HoFunctorPreservesBinaryProducts.lean#L109"
      },
      "metadata": {
        "blame_email_hash": "eaaeec08515d",
        "blame_date": "2025-05-18T23:14:02-04:00",
        "inclusion_date": "2025-06-05T06:07:02.057824+00:00"
      },
      "id": "966dbdce90b4e3a5c8e84d5c693f3fe6b1b93e01b5a67e1ea7b614166a41b2ae"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "terminalCat",
        "commit": "a2f04a3f90bf6a62c9b984897f5eb40a46b5f735",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/AlgebraicTopology/SimplicialSet/HoFunctorPreservesBinaryProducts.lean",
        "start_line": 139,
        "start_column": 2,
        "end_line": 139,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n m : \u2115\nthis\u271d\u00b3 : IsIso (prodComparison hoFunctor (nerve (Fin (n + 1))) (nerve (Fin (m + 1))))\nthis\u271d\u00b2 : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\nthis\u271d\u00b9 : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\nthis\u271d : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\nthis : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\n\u22a2 IsIso (prodComparison hoFunctor (stdSimplex.obj (SimplexCategory.mk n)) (stdSimplex.obj (SimplexCategory.mk m)))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/a2f04a3f90bf6a62c9b984897f5eb40a46b5f735/Mathlib/AlgebraicTopology/SimplicialSet/HoFunctorPreservesBinaryProducts.lean#L139"
      },
      "metadata": {
        "blame_email_hash": "eaaeec08515d",
        "blame_date": "2025-05-27T17:57:50-04:00",
        "inclusion_date": "2025-06-05T06:07:02.057824+00:00"
      },
      "id": "816e951d3fd135fc953cbc96274de77d955f98c1d053fa64009fa24aed6bc6fd"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "terminalCat",
        "commit": "a2f04a3f90bf6a62c9b984897f5eb40a46b5f735",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/AlgebraicTopology/SimplicialSet/HoFunctorPreservesBinaryProducts.lean",
        "start_line": 154,
        "start_column": 2,
        "end_line": 154,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : SSet\nm : \u2115\nXcolim : IsColimit (Presheaf.coconeOfRepresentable (ULiftHom.down.op.comp X))\n\u22a2 IsIso (prodComparison hoFunctor X (stdSimplex.obj (SimplexCategory.mk m)))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/a2f04a3f90bf6a62c9b984897f5eb40a46b5f735/Mathlib/AlgebraicTopology/SimplicialSet/HoFunctorPreservesBinaryProducts.lean#L154"
      },
      "metadata": {
        "blame_email_hash": "eaaeec08515d",
        "blame_date": "2025-05-18T19:42:04-04:00",
        "inclusion_date": "2025-06-05T06:07:02.057824+00:00"
      },
      "id": "4668a359f0a53c33f9a25fd4b8b87ab486f18296509b65aba0db40ab224db5f5"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "terminalCat",
        "commit": "a2f04a3f90bf6a62c9b984897f5eb40a46b5f735",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/AlgebraicTopology/SimplicialSet/HoFunctorPreservesBinaryProducts.lean",
        "start_line": 170,
        "start_column": 2,
        "end_line": 170,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X Y : Functor SimplexCategory\u1d52\u1d56 (Type u_1)\nYcolim : IsColimit (Presheaf.coconeOfRepresentable (ULiftHom.down.op.comp Y))\nthis : (prod.functor.obj X).comp hoFunctor \u27f6 hoFunctor.comp (prod.functor.obj (hoFunctor.obj X))\n\u22a2 IsIso (prodComparison hoFunctor X Y)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/a2f04a3f90bf6a62c9b984897f5eb40a46b5f735/Mathlib/AlgebraicTopology/SimplicialSet/HoFunctorPreservesBinaryProducts.lean#L170"
      },
      "metadata": {
        "blame_email_hash": "eaaeec08515d",
        "blame_date": "2025-05-18T19:42:04-04:00",
        "inclusion_date": "2025-06-05T06:07:02.057824+00:00"
      },
      "id": "653ae1d5b13461c4f0de3fb494f1bbbfe2a8583f2640536557d6b272dd51e38e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "terminalCat",
        "commit": "a2f04a3f90bf6a62c9b984897f5eb40a46b5f735",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/AlgebraicTopology/SimplicialSet/HoFunctorPreservesBinaryProducts.lean",
        "start_line": 200,
        "start_column": 60,
        "end_line": 200,
        "end_column": 65
      },
      "debug_info": {
        "goal": "\u22a2 HasBinaryProducts CategoryTheory.QCat",
        "url": "https://github.com/leanprover-community/mathlib4/blob/a2f04a3f90bf6a62c9b984897f5eb40a46b5f735/Mathlib/AlgebraicTopology/SimplicialSet/HoFunctorPreservesBinaryProducts.lean#L200"
      },
      "metadata": {
        "blame_email_hash": "eaaeec08515d",
        "blame_date": "2025-05-19T17:00:43-04:00",
        "inclusion_date": "2025-06-05T06:07:02.057824+00:00"
      },
      "id": "4be08c681c60f7aa4301b843f469992c204d51662626b20a832f19e527b3df9b"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "terminalCat",
        "commit": "a2f04a3f90bf6a62c9b984897f5eb40a46b5f735",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/AlgebraicTopology/SimplicialSet/HoFunctorPreservesBinaryProducts.lean",
        "start_line": 205,
        "start_column": 93,
        "end_line": 205,
        "end_column": 98
      },
      "debug_info": {
        "goal": "\u22a2 PreservesLimitsOfShape (Discrete WalkingPair) (ObjectProperty.\u03b9 Quasicategory)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/a2f04a3f90bf6a62c9b984897f5eb40a46b5f735/Mathlib/AlgebraicTopology/SimplicialSet/HoFunctorPreservesBinaryProducts.lean#L205"
      },
      "metadata": {
        "blame_email_hash": "eaaeec08515d",
        "blame_date": "2025-05-19T17:00:43-04:00",
        "inclusion_date": "2025-06-05T06:07:02.057824+00:00"
      },
      "id": "7ff546031cb8295badab3f23ff7872e7f9b3bab984f94c7e6ccae19b8d2ab7af"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "terminalCat",
        "commit": "a2f04a3f90bf6a62c9b984897f5eb40a46b5f735",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean",
        "start_line": 368,
        "start_column": 4,
        "end_line": 368,
        "end_column": 9
      },
      "debug_info": {
        "goal": "x :\n  (stdSimplex.obj (SimplexCategory.mk 0)).obj\n    (op ((inclusion 2).obj { obj := SimplexCategory.mk 0, property := SSet.OneTruncation\u2082._proof_1 }))\nf : SimplexCategory.mk 0 \u27f6 SimplexCategory.mk 0\neq : (stdSimplex.obj (SimplexCategory.mk 0)).obj (op (SimplexCategory.mk 0)) \u2243\n  (unop (op (SimplexCategory.mk 0)) \u27f6 SimplexCategory.mk 0) :=\n  stdSimplex.objEquiv\nthis : f = (SimplexCategory.mk 0).const (SimplexCategory.mk 0) 0\n\u22a2 x =\n    stdSimplex.const 0 0\n      (op ((inclusion 2).obj { obj := SimplexCategory.mk 0, property := SSet.OneTruncation\u2082._proof_1 }))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/a2f04a3f90bf6a62c9b984897f5eb40a46b5f735/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L368"
      },
      "metadata": {
        "blame_email_hash": "eaaeec08515d",
        "blame_date": "2025-06-04T17:28:16-04:00",
        "inclusion_date": "2025-06-05T06:07:02.057824+00:00"
      },
      "id": "3e4bc31726eec4f77b112c348d896294305790c77a66f94a87e7c6051592932f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "terminalCat",
        "commit": "a2f04a3f90bf6a62c9b984897f5eb40a46b5f735",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean",
        "start_line": 374,
        "start_column": 10,
        "end_line": 374,
        "end_column": 15
      },
      "debug_info": {
        "goal": "x y : @SSet.OneTruncation\u2082 ((truncation 2).obj (stdSimplex.obj (SimplexCategory.mk 0)))\n\u22a2 \u2200 (a : x \u27f6 y), a = sorry",
        "url": "https://github.com/leanprover-community/mathlib4/blob/a2f04a3f90bf6a62c9b984897f5eb40a46b5f735/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L374"
      },
      "metadata": {
        "blame_email_hash": "eaaeec08515d",
        "blame_date": "2025-06-04T17:28:16-04:00",
        "inclusion_date": "2025-06-05T06:07:02.057824+00:00"
      },
      "id": "301dc9b24d6c01ec00de3a5f89424e3123c2ee0b45cf34f7605bc16423499f31"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "terminalCat",
        "commit": "a2f04a3f90bf6a62c9b984897f5eb40a46b5f735",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean",
        "start_line": 378,
        "start_column": 66,
        "end_line": 378,
        "end_column": 71
      },
      "debug_info": {
        "goal": "this : Unique (@SSet.Truncated.HomotopyCategory ((truncation 2).obj (stdSimplex.obj (SimplexCategory.mk 0)))) := \u22ef\n\u22a2 IsDiscrete (@SSet.Truncated.HomotopyCategory ((truncation 2).obj (stdSimplex.obj (SimplexCategory.mk 0))))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/a2f04a3f90bf6a62c9b984897f5eb40a46b5f735/Mathlib/AlgebraicTopology/SimplicialSet/HomotopyCat.lean#L378"
      },
      "metadata": {
        "blame_email_hash": "eaaeec08515d",
        "blame_date": "2025-06-04T17:28:16-04:00",
        "inclusion_date": "2025-06-05T06:07:02.057824+00:00"
      },
      "id": "8f95885f9753d73139215f99deca7beca2d270e9dbcb1b121379af638a5f0a6b"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "docs",
        "commit": "1391c5a5032c974d841251e83905ac4893b8e928",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "BatteriesTest/lintsimp.lean",
        "start_line": 37,
        "start_column": 64,
        "end_line": 37,
        "end_column": 69
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d : Mul \u03b1\na x y : @MulOpposite \u03b1\n\u22a2 @SemiconjBy \u03b1 inst\u271d (@MulOpposite.unop \u03b1 a) (@MulOpposite.unop \u03b1 y) (@MulOpposite.unop \u03b1 x) \u2194\n    @SemiconjBy (@MulOpposite \u03b1) (@MulOpposite.instMul \u03b1 inst\u271d) a x y",
        "url": "https://github.com/leanprover-community/batteries/blob/1391c5a5032c974d841251e83905ac4893b8e928/BatteriesTest/lintsimp.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "8a7dcd08b95f",
        "blame_date": "2022-12-18T15:51:52-05:00",
        "inclusion_date": "2025-06-06T05:42:18.474613+00:00"
      },
      "id": "164fe4a5cc99119bc32d7da6f569bcceb77252143e3c9fb723fba470338331ce"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "docs",
        "commit": "1391c5a5032c974d841251e83905ac4893b8e928",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "BatteriesTest/lintunused.lean",
        "start_line": 7,
        "start_column": 2,
        "end_line": 7,
        "end_column": 7
      },
      "debug_info": {
        "goal": "h : 1 = 1\n\u22a2 True",
        "url": "https://github.com/leanprover-community/batteries/blob/1391c5a5032c974d841251e83905ac4893b8e928/BatteriesTest/lintunused.lean#L7"
      },
      "metadata": {
        "blame_email_hash": "45b5ed8e3c8e",
        "blame_date": "2023-08-08T02:17:31+02:00",
        "inclusion_date": "2025-06-06T05:42:18.474613+00:00"
      },
      "id": "928db811241a71815e43d06c5add7edf3aff4e18d8d868223f9ec2af04da34e2"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "docs",
        "commit": "1391c5a5032c974d841251e83905ac4893b8e928",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "BatteriesTest/lint_unreachableTactic.lean",
        "start_line": 23,
        "start_column": 2,
        "end_line": 24,
        "end_column": 5
      },
      "debug_info": {
        "goal": "\u22a2 1 = 1",
        "url": "https://github.com/leanprover-community/batteries/blob/1391c5a5032c974d841251e83905ac4893b8e928/BatteriesTest/lint_unreachableTactic.lean#L23"
      },
      "metadata": {
        "blame_email_hash": "45b5ed8e3c8e",
        "blame_date": "2023-08-26T11:27:15+01:00",
        "inclusion_date": "2025-06-06T05:42:18.474613+00:00"
      },
      "id": "7a092d55300e79648588b309ff5ea362ad37395574dfbaaedca36518ef87885f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "docs",
        "commit": "1391c5a5032c974d841251e83905ac4893b8e928",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "BatteriesTest/lint_unreachableTactic.lean",
        "start_line": 31,
        "start_column": 33,
        "end_line": 31,
        "end_column": 38
      },
      "debug_info": {
        "goal": "aa : Nat\n\u22a2 aa = 0 \u2192 t aa = 0",
        "url": "https://github.com/leanprover-community/batteries/blob/1391c5a5032c974d841251e83905ac4893b8e928/BatteriesTest/lint_unreachableTactic.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "45b5ed8e3c8e",
        "blame_date": "2023-08-26T11:27:15+01:00",
        "inclusion_date": "2025-06-06T05:42:18.474613+00:00"
      },
      "id": "0e8c52c723138b92b62acd2d32fbc3749ff42f9a8c0e2aa4dc059c2a8157da69"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "docs",
        "commit": "1391c5a5032c974d841251e83905ac4893b8e928",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "BatteriesTest/conv_equals.lean",
        "start_line": 22,
        "start_column": 2,
        "end_line": 22,
        "end_column": 7
      },
      "debug_info": {
        "goal": "P : (Nat \u2192 Nat) \u2192 Prop\n\u22a2 P fun n => 0",
        "url": "https://github.com/leanprover-community/batteries/blob/1391c5a5032c974d841251e83905ac4893b8e928/BatteriesTest/conv_equals.lean#L22"
      },
      "metadata": {
        "blame_email_hash": "1e9dd229978a",
        "blame_date": "2023-08-19T05:19:41+02:00",
        "inclusion_date": "2025-06-06T05:42:18.474613+00:00"
      },
      "id": "ca74aefd1ab74a34d4a940ba5cc6b1bc19845ec94f2820a0d933886e9f522288"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "c3a19fa17982c5c1413fea335f371869b8b12e1d",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 30,
        "start_column": 12,
        "end_line": 30,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case fst\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd \u03b1 \u03b2\n\u22a2 @MyProd.fst \u03b1 \u03b2 p = @MyProd.fst \u03b1 \u03b2 q",
        "url": "https://github.com/leanprover-community/aesop/blob/c3a19fa17982c5c1413fea335f371869b8b12e1d/AesopTest/ExtScript.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-06-05T06:13:57.283698+00:00"
      },
      "id": "ae43ba5377d9428c381ca984a4869cc69bbb8b5a93412c0bb9ec673df0a34c30"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "c3a19fa17982c5c1413fea335f371869b8b12e1d",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 30,
        "start_column": 12,
        "end_line": 30,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case snd\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd \u03b1 \u03b2\n\u22a2 @MyProd.snd \u03b1 \u03b2 p = @MyProd.snd \u03b1 \u03b2 q",
        "url": "https://github.com/leanprover-community/aesop/blob/c3a19fa17982c5c1413fea335f371869b8b12e1d/AesopTest/ExtScript.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-06-05T06:13:57.283698+00:00"
      },
      "id": "b8aeb1f9b9941e246a28bf8b4333a1976a16b674cfac79c1b8332e93a1af9c12"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "c3a19fa17982c5c1413fea335f371869b8b12e1d",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 46,
        "start_column": 12,
        "end_line": 46,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case fst\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd \u03b1 (@MyProd \u03b2 \u03b3)\n\u22a2 @MyProd.fst \u03b1 (@MyProd \u03b2 \u03b3) p = @MyProd.fst \u03b1 (@MyProd \u03b2 \u03b3) q",
        "url": "https://github.com/leanprover-community/aesop/blob/c3a19fa17982c5c1413fea335f371869b8b12e1d/AesopTest/ExtScript.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-06-05T06:13:57.283698+00:00"
      },
      "id": "03bc1b2fc338a35c05a8bf3c8cfc475c78cdf8218c4e31433b3ab352c262f59f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "c3a19fa17982c5c1413fea335f371869b8b12e1d",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 46,
        "start_column": 12,
        "end_line": 46,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case snd.fst\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd \u03b1 (@MyProd \u03b2 \u03b3)\n\u22a2 @MyProd.fst \u03b2 \u03b3 (@MyProd.snd \u03b1 (@MyProd \u03b2 \u03b3) p) = @MyProd.fst \u03b2 \u03b3 (@MyProd.snd \u03b1 (@MyProd \u03b2 \u03b3) q)",
        "url": "https://github.com/leanprover-community/aesop/blob/c3a19fa17982c5c1413fea335f371869b8b12e1d/AesopTest/ExtScript.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-06-05T06:13:57.283698+00:00"
      },
      "id": "be6a0f2a20c075213c55155819b12e5c60feab436b78c15fdf7429f3032d637e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "c3a19fa17982c5c1413fea335f371869b8b12e1d",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 46,
        "start_column": 12,
        "end_line": 46,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case snd.snd\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd \u03b1 (@MyProd \u03b2 \u03b3)\n\u22a2 @MyProd.snd \u03b2 \u03b3 (@MyProd.snd \u03b1 (@MyProd \u03b2 \u03b3) p) = @MyProd.snd \u03b2 \u03b3 (@MyProd.snd \u03b1 (@MyProd \u03b2 \u03b3) q)",
        "url": "https://github.com/leanprover-community/aesop/blob/c3a19fa17982c5c1413fea335f371869b8b12e1d/AesopTest/ExtScript.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-06-05T06:13:57.283698+00:00"
      },
      "id": "cee23d65f9b525714c183bc469ae09348976c46934af3f98543060e10763d004"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "c3a19fa17982c5c1413fea335f371869b8b12e1d",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 61,
        "start_column": 12,
        "end_line": 61,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case fst.h\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd (\u03b1 \u2192 \u03b2) \u03b3\nx : \u03b1\n\u22a2 @MyProd.fst (\u03b1 \u2192 \u03b2) \u03b3 p x = @MyProd.fst (\u03b1 \u2192 \u03b2) \u03b3 q x",
        "url": "https://github.com/leanprover-community/aesop/blob/c3a19fa17982c5c1413fea335f371869b8b12e1d/AesopTest/ExtScript.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-06-05T06:13:57.283698+00:00"
      },
      "id": "0e5db4d151dd967eda4e1ffa33dbf1099b6c07f4c42571dcb183b8d8ef13f9a0"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "c3a19fa17982c5c1413fea335f371869b8b12e1d",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 61,
        "start_column": 12,
        "end_line": 61,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case snd\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd (\u03b1 \u2192 \u03b2) \u03b3\n\u22a2 @MyProd.snd (\u03b1 \u2192 \u03b2) \u03b3 p = @MyProd.snd (\u03b1 \u2192 \u03b2) \u03b3 q",
        "url": "https://github.com/leanprover-community/aesop/blob/c3a19fa17982c5c1413fea335f371869b8b12e1d/AesopTest/ExtScript.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-06-05T06:13:57.283698+00:00"
      },
      "id": "67069e98ae684079be036774c48502750780dcbc9b4f39230b2aa1b2c0250d10"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "c3a19fa17982c5c1413fea335f371869b8b12e1d",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 78,
        "start_column": 12,
        "end_line": 78,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case fst.h\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : (\u03b1 \u2192 \u03b2) \u00d7 (\u03b3 \u2192 \u03b4 \u2192 \u03b9)\nx : \u03b1\n\u22a2 p.fst x = q.fst x",
        "url": "https://github.com/leanprover-community/aesop/blob/c3a19fa17982c5c1413fea335f371869b8b12e1d/AesopTest/ExtScript.lean#L78"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-06-05T06:13:57.283698+00:00"
      },
      "id": "150b8a58cc404222b30893531a30c4e161261e1c26be4486f8e84b539518f286"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "c3a19fa17982c5c1413fea335f371869b8b12e1d",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 78,
        "start_column": 12,
        "end_line": 78,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case snd.h.h\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : (\u03b1 \u2192 \u03b2) \u00d7 (\u03b3 \u2192 \u03b4 \u2192 \u03b9)\nx : \u03b3\nx_1 : \u03b4\n\u22a2 p.snd x x_1 = q.snd x x_1",
        "url": "https://github.com/leanprover-community/aesop/blob/c3a19fa17982c5c1413fea335f371869b8b12e1d/AesopTest/ExtScript.lean#L78"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-06-05T06:13:57.283698+00:00"
      },
      "id": "429a0885c5bee496cef97d6bfae5f6cce0b4a3f2e2ba0d52448fdf0f170b645b"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "c3a19fa17982c5c1413fea335f371869b8b12e1d",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 103,
        "start_column": 12,
        "end_line": 103,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case a\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\nx y : T\n\u22a2 u = v",
        "url": "https://github.com/leanprover-community/aesop/blob/c3a19fa17982c5c1413fea335f371869b8b12e1d/AesopTest/ExtScript.lean#L103"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-09-10T21:14:20+02:00",
        "inclusion_date": "2025-06-05T06:13:57.283698+00:00"
      },
      "id": "883ef8304b8e411964cfd9ee2a3f508e864baeb98014b093cc9102fa97b70f30"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "c3a19fa17982c5c1413fea335f371869b8b12e1d",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 103,
        "start_column": 12,
        "end_line": 103,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case a\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\nx y : T\nu v : U\n\u22a2 u = v",
        "url": "https://github.com/leanprover-community/aesop/blob/c3a19fa17982c5c1413fea335f371869b8b12e1d/AesopTest/ExtScript.lean#L103"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-09-10T21:14:20+02:00",
        "inclusion_date": "2025-06-05T06:13:57.283698+00:00"
      },
      "id": "738b907fae5768edb3479af7cb4dcb27991433658c409f65bc80d2218d5ce610"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "c3a19fa17982c5c1413fea335f371869b8b12e1d",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "AesopTest/205.lean",
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nx y a b : \u03b1\nh\u2082 : @R \u03b1 x a\nh\u2083 : @R \u03b1 y b\nfwd : @R \u03b1 b y\nfwd_1 : @R \u03b1 a x\nfwd_2 : @R \u03b1 b b\nfwd_3 : @R \u03b1 y y\nfwd_4 : @R \u03b1 a a\nfwd_5 : @R \u03b1 x x\n\u22a2 False",
        "url": "https://github.com/leanprover-community/aesop/blob/c3a19fa17982c5c1413fea335f371869b8b12e1d/AesopTest/205.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2025-04-29T23:07:06+02:00",
        "inclusion_date": "2025-06-05T06:13:57.283698+00:00"
      },
      "id": "33ff6aba76ff70e6710bb1a635c1d569db9b0c8b49463f6c1db114d765e1f707"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "c3a19fa17982c5c1413fea335f371869b8b12e1d",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "AesopTest/SplitScript.lean",
        "start_line": 26,
        "start_column": 12,
        "end_line": 26,
        "end_column": 17
      },
      "debug_info": {
        "goal": "P A B : Prop\nh : P\n\u22a2 A",
        "url": "https://github.com/leanprover-community/aesop/blob/c3a19fa17982c5c1413fea335f371869b8b12e1d/AesopTest/SplitScript.lean#L26"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-05-31T19:36:28+02:00",
        "inclusion_date": "2025-06-05T06:13:57.283698+00:00"
      },
      "id": "8299c3076323fc1c65e6c8792105d6feffbe6ac8b56e759351d377707ed3241f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "c3a19fa17982c5c1413fea335f371869b8b12e1d",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "AesopTest/SplitScript.lean",
        "start_line": 26,
        "start_column": 12,
        "end_line": 26,
        "end_column": 17
      },
      "debug_info": {
        "goal": "P A B : Prop\nh : \u00acP\n\u22a2 B",
        "url": "https://github.com/leanprover-community/aesop/blob/c3a19fa17982c5c1413fea335f371869b8b12e1d/AesopTest/SplitScript.lean#L26"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-05-31T19:36:28+02:00",
        "inclusion_date": "2025-06-05T06:13:57.283698+00:00"
      },
      "id": "66b751a08b2606f28968b516dc6835cd3acf9c9558a3e44d23b40f588b61539b"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2193,
        "start_column": 10,
        "end_line": 2193,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case inr.refl.refl\nX : Sequent\ntab : Tableau [] X\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03c6 : Formula\nside : Side\nw_n\u03be : (M, w)\u22a8(~\u03c6)\nHist : History\nL R : List Formula\na : \u2115\n\u03b1 : Program\n\u03b1s : List Program\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u00b7a\u230bAnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nv_\u03b1_w : \u2203 u, relate M (\u00b7a) v u \u2227 relateSeq M (\u03b1 :: \u03b1s) u w\nu : W\nv_a_u : relate M (\u00b7a) v u\nu_\u03b1_w : relateSeq M (\u03b1 :: \u03b1s) u w\nbas : Sequent.basic (L, R, some (Sum.inl (~'\u230a\u00b7a\u230bAnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6))))\nnrep : \u00acrep Hist (L, R, some (Sum.inl (~'\u230a\u00b7a\u230bAnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6))))\nnext :\n  Tableau ((L, R, some (Sum.inl (~'\u230a\u00b7a\u230bAnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6)))) :: Hist)\n    (match AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6) with\n    | AnyFormula.normal \u03c6 => ((~\u03c6) :: projection a L, projection a R, none)\n    | AnyFormula.loaded \u03c7 => (projection a L, projection a R, some (Sum.inl (~'\u03c7))))\ntabAt_t_def :\n  tabAt t =\n    \u27e8Hist,\n      \u27e8(L, R, some (Sum.inl (~'\u230a\u00b7a\u230bAnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6)))),\n        Tableau.pdl nrep bas (PdlRule.modL \u22ef) next\u27e9\u27e9\nt_to_s : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.nil.pdl\ns : PathIn tab := t.append t_to_s\nnodeAt_s_def :\n  nodeAt s = (projection a L, projection a R, some (Sum.inl (~'\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))\nt_s : t \u22d6_ s\no : W\nu_\u03b1_o : relate M \u03b1 u o\no_\u03b1s_w : relateSeq M \u03b1s o w\n\u22a2 \u00acevaluate M o (AnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)).unload",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/Soundness.lean#L2193"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-06-04T16:36:04+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "77ed6a8fc61a598c773ee7f6d0ff7a838a37b9455d8f780445810101c2ba0e47"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2205,
        "start_column": 8,
        "end_line": 2205,
        "end_column": 13
      },
      "debug_info": {
        "goal": "X : Sequent\ntab : Tableau [] X\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03c6 : Formula\nside : Side\nw_n\u03be : (M, w)\u22a8(~\u03c6)\nHist : History\nZ : Sequent\nbas : Z.basic\nnrep\u271d : \u00acrep Hist Z\nL R : List Formula\na : \u2115\n\u03b1 : Program\n\u03b1s : List Program\nZ_def : Z = (L, R, some (Sum.inl (~'\u230a\u00b7a\u230bAnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6))))\nnext\u271d :\n  Tableau (Z :: Hist)\n    (match AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6) with\n    | AnyFormula.normal \u03c6 => ((~\u03c6) :: projection a L, projection a R, none)\n    | AnyFormula.loaded \u03c7 => (projection a L, projection a R, some (Sum.inl (~'\u03c7))))\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.pdl nrep\u271d bas (PdlRule.modL Z_def) next\u271d\u27e9\u27e9\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u00b7a\u230bAnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nt_to_s : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.nil.pdl\ns : PathIn tab := t.append t_to_s\nnodeAt_s_def :\n  nodeAt s = (projection a L, projection a R, some (Sum.inl (~'\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))\nt_s : t \u22d6_ s\nv_\u03b1_w : \u2203 u, relate M (\u00b7a) v u \u2227 relateSeq M (\u03b1 :: \u03b1s) u w\nu : W\nv_a_u : relate M (\u00b7a) v u\nu_\u03b1_w : relateSeq M (\u03b1 :: \u03b1s) u w\nu_s : (M, u)\u22a8nodeAt s\nin_s : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt s)\nnbas :\n  \u00acSequent.basic (projection a L, projection a R, some (Sum.inl (~'\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))\nlt : LocalTableau (projection a L, projection a R, some (Sum.inl (~'\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))\nnrep :\n  \u00acrep (Z :: Hist) (projection a L, projection a R, some (Sum.inl (~'\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))\nnext :\n  (Y : Sequent) \u2192\n    Y \u2208 endNodesOf lt \u2192\n      Tableau\n        ((projection a L, projection a R, some (Sum.inl (~'\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))) ::\n          Z :: Hist)\n        Y\n\u22a2 \u2203 s,\n    Relation.TransGen (cEdge X tab) t s \u2227\n      (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n        (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/Soundness.lean#L2205"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-06-04T16:36:04+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "9248287de691dfe8c268dea4b720db855b712d8de62e6cf1a29f6beedad41abe"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2209,
        "start_column": 189,
        "end_line": 2209,
        "end_column": 194
      },
      "debug_info": {
        "goal": "X : Sequent\ntab : Tableau [] X\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03c6 : Formula\nside : Side\nw_n\u03be : (M, w)\u22a8(~\u03c6)\nHist : History\nZ : Sequent\nbas\u271d : Z.basic\nnrep\u271d : \u00acrep Hist Z\nL R : List Formula\na : \u2115\n\u03b1 : Program\n\u03b1s : List Program\nZ_def : Z = (L, R, some (Sum.inl (~'\u230a\u00b7a\u230bAnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6))))\nnext\u271d :\n  Tableau (Z :: Hist)\n    (match AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6) with\n    | AnyFormula.normal \u03c6 => ((~\u03c6) :: projection a L, projection a R, none)\n    | AnyFormula.loaded \u03c7 => (projection a L, projection a R, some (Sum.inl (~'\u03c7))))\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.pdl nrep\u271d bas\u271d (PdlRule.modL Z_def) next\u271d\u27e9\u27e9\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u00b7a\u230bAnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nt_to_s : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.nil.pdl\ns : PathIn tab := t.append t_to_s\nnodeAt_s_def :\n  nodeAt s = (projection a L, projection a R, some (Sum.inl (~'\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))\nt_s : t \u22d6_ s\nv_\u03b1_w : \u2203 u, relate M (\u00b7a) v u \u2227 relateSeq M (\u03b1 :: \u03b1s) u w\nu : W\nv_a_u : relate M (\u00b7a) v u\nu_\u03b1_w : relateSeq M (\u03b1 :: \u03b1s) u w\nu_s : (M, u)\u22a8nodeAt s\nin_s : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt s)\nY : Sequent\nbas :\n  Sequent.basic (projection a L, projection a R, some (Sum.inl (~'\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))\nr : PdlRule (projection a L, projection a R, some (Sum.inl (~'\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))) Y\nnrep :\n  \u00acrep (Z :: Hist) (projection a L, projection a R, some (Sum.inl (~'\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))\nnext :\n  Tableau\n    ((projection a L, projection a R, some (Sum.inl (~'\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))) :: Z :: Hist)\n    Y\n\u22a2 tabAt s =\n    \u27e8Z :: Hist,\n      \u27e8(projection a L, projection a R, some (Sum.inl (~'\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))),\n        Tableau.pdl nrep bas r next\u27e9\u27e9",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/Soundness.lean#L2209"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-06-04T16:36:04+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "ff82f65ff89b99f503c30aa632a3d9d30d41cee4d5853044c2e862ed755a4d11"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2218,
        "start_column": 19,
        "end_line": 2218,
        "end_column": 24
      },
      "debug_info": {
        "goal": "X : Sequent\ntab : Tableau [] X\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03c6 : Formula\nside : Side\nw_n\u03be : (M, w)\u22a8(~\u03c6)\nHist : History\nZ : Sequent\nbas : Z.basic\nnrep : \u00acrep Hist Z\nL R : List Formula\na : \u2115\n\u03b1 : Program\n\u03b1s : List Program\nZ_def : Z = (L, R, some (Sum.inl (~'\u230a\u00b7a\u230bAnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6))))\nnext :\n  Tableau (Z :: Hist)\n    (match AnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6) with\n    | AnyFormula.normal \u03c6 => ((~\u03c6) :: projection a L, projection a R, none)\n    | AnyFormula.loaded \u03c7 => (projection a L, projection a R, some (Sum.inl (~'\u03c7))))\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.pdl nrep bas (PdlRule.modL Z_def) next\u27e9\u27e9\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u00b7a\u230bAnyFormula.loadBoxes (\u03b1 :: \u03b1s) (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nt_to_s : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.nil.pdl\ns : PathIn tab := t.append t_to_s\nnodeAt_s_def :\n  nodeAt s = (projection a L, projection a R, some (Sum.inl (~'\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))\nt_s : t \u22d6_ s\nv_\u03b1_w : \u2203 u, relate M (\u00b7a) v u \u2227 relateSeq M (\u03b1 :: \u03b1s) u w\nu : W\nv_a_u : relate M (\u00b7a) v u\nu_\u03b1_w : relateSeq M (\u03b1 :: \u03b1s) u w\nu_s : (M, u)\u22a8nodeAt s\nin_s : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt s)\nlpr\u271d :\n  LoadedPathRepeat (Z :: Hist)\n    (projection a L, projection a R, some (Sum.inl (~'\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))\n\u22a2 \u2203 s,\n    Relation.TransGen (cEdge X tab) t s \u2227\n      (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n        (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/Soundness.lean#L2218"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-06-04T16:36:04+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "aa5e245c980c319594b649dd6e4d09a134d8140d4a325c41df27598074fc00d6"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2221,
        "start_column": 4,
        "end_line": 2221,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\u03b1 : Program\n\u03b1s : List Program\nX : Sequent\ntab : Tableau [] X\nt : PathIn tab\nW : Type\nM : KripkeModel W\nv w : W\nv_t : (M, v)\u22a8nodeAt t\n\u03c6 : Formula\nside : Side\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nv_\u03b1_w : relateSeq M (\u03b1 :: \u03b1s) v w\nw_n\u03be : (M, w)\u22a8(~\u03c6)\nHist : History\nZ : Sequent\nbas : Z.basic\nnrep : \u00acrep Hist Z\nL R : List Formula\na : \u2115\n\u03be' : AnyFormula\nZ_def : Z = (L, R, some (Sum.inr (~'\u230a\u00b7a\u230b\u03be')))\nnext :\n  Tableau (Z :: Hist)\n    (match \u03be' with\n    | AnyFormula.normal \u03c6 => (projection a L, (~\u03c6) :: projection a R, none)\n    | AnyFormula.loaded \u03c7 => (projection a L, projection a R, some (Sum.inr (~'\u03c7))))\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.pdl nrep bas (PdlRule.modR Z_def) next\u27e9\u27e9\n\u22a2 \u2203 s,\n    Relation.TransGen (cEdge X tab) t s \u2227\n      (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n        (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/Soundness.lean#L2221"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-06-04T16:36:04+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "6f8a59b801301728664b64437867293e756ea2a849652b69605caea4c5739eb1"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2893,
        "start_column": 8,
        "end_line": 2893,
        "end_column": 13
      },
      "debug_info": {
        "goal": "X : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nW : Type\nM : KripkeModel W\n\u03c6 : Formula\nside : Side\n_x :\n  (\u03b1 : Program) \u00d7'\n    (\u03b1s : List Program) \u00d7'\n      (t : PathIn tab) \u00d7'\n        (v : W) \u00d7'\n          (w : W) \u00d7'\n            (_ : (M, v)\u22a8nodeAt t) \u00d7'\n              (_ :\n                (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)) \u00d7'\n                (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)\na\u271d\u00b9\u00b2 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y _x \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\n\u03b1 : Program\n\u03b1s\u271d :\n  (\u03b1s : List Program) \u00d7'\n    (t : PathIn tab) \u00d7'\n      (v : W) \u00d7'\n        (w : W) \u00d7'\n          (_ : (M, v)\u22a8nodeAt t) \u00d7'\n            (_ : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)) \u00d7'\n              (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)\na\u271d\u00b9\u00b9 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y \u27e8\u03b1, \u03b1s\u271d\u27e9 \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\n\u03b1s : List Program\nt\u271d\u00b9 :\n  (t : PathIn tab) \u00d7'\n    (v : W) \u00d7'\n      (w : W) \u00d7'\n        (_ : (M, v)\u22a8nodeAt t) \u00d7'\n          (_ : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)) \u00d7'\n            (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)\na\u271d\u00b9\u2070 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y \u27e8\u03b1, \u27e8\u03b1s, t\u271d\u00b9\u27e9\u27e9 \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\nt : PathIn tab\nv\u271d :\n  (v : W) \u00d7'\n    (w : W) \u00d7'\n      (_ : (M, v)\u22a8nodeAt t) \u00d7'\n        (_ : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)) \u00d7'\n          (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)\na\u271d\u2079 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y \u27e8\u03b1, \u27e8\u03b1s, \u27e8t, v\u271d\u27e9\u27e9\u27e9 \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\nv : W\nw\u271d :\n  (w : W) \u00d7'\n    (_ : (M, v)\u22a8nodeAt t) \u00d7'\n      (_ : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)) \u00d7'\n        (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)\na\u271d\u2078 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y \u27e8\u03b1, \u27e8\u03b1s, \u27e8t, \u27e8v, w\u271d\u27e9\u27e9\u27e9\u27e9 \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\nw : W\nv_t\u271d :\n  (_ : (M, v)\u22a8nodeAt t) \u00d7'\n    (_ : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)) \u00d7'\n      (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)\na\u271d\u2077 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y \u27e8\u03b1, \u27e8\u03b1s, \u27e8t, \u27e8v, \u27e8w, v_t\u271d\u27e9\u27e9\u27e9\u27e9\u27e9 \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\nv_t : (M, v)\u22a8nodeAt t\nnegLoad_in\u271d :\n  (_ : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)) \u00d7'\n    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)\na\u271d\u2076 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y \u27e8\u03b1, \u27e8\u03b1s, \u27e8t, \u27e8v, \u27e8w, \u27e8v_t, negLoad_in\u271d\u27e9\u27e9\u27e9\u27e9\u27e9\u27e9 \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nv_\u03b1_w\u271d : (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)\na\u271d\u2075 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y \u27e8\u03b1, \u27e8\u03b1s, \u27e8t, \u27e8v, \u27e8w, \u27e8v_t, \u27e8negLoad_in, v_\u03b1_w\u271d\u27e9\u27e9\u27e9\u27e9\u27e9\u27e9\u27e9 \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\nv_\u03b1_w : relateSeq M (\u03b1 :: \u03b1s) v w\nw_n\u03be : (M, w)\u22a8(~\u03c6)\na\u271d\u2074 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y \u27e8\u03b1, \u27e8\u03b1s, \u27e8t, \u27e8v, \u27e8w, \u27e8v_t, \u27e8negLoad_in, \u27e8v_\u03b1_w, w_n\u03be\u27e9\u27e9\u27e9\u27e9\u27e9\u27e9\u27e9\u27e9 \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\nt\u271d : PathIn tab\na\u271d\u00b3 :\n  t = t\u271d \u2192\n    \u2203 s,\n      Relation.TransGen (cEdge X tab) t s \u2227\n        (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n          (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\ns\u271d : PathIn tab\nt_s\u271d\u00b9 : t\u271d \u22d6_ s\u271d\nh\u271d\u00b9\u00b2 : t = s\u271d\nt_s\u271d : t\u271d \u22d6_ t\nHist : History\nsnd\u271d : (X : Sequent) \u00d7 Tableau Hist X\ntabAt_t_def\u271d\u00b9 : tabAt t = \u27e8Hist, snd\u271d\u27e9\nZ : Sequent\ntZ : Tableau Hist Z\ntabAt_t_def\u271d : tabAt t = \u27e8Hist, \u27e8Z, tZ\u27e9\u27e9\nHist\u271d : History\nX\u271d : Sequent\nnrep\u271d\u00b2 : \u00acrep Hist\u271d X\u271d\nnbas\u271d\u00b9 : \u00acX\u271d.basic\nh\u271d\u00b9\u00b9 : Hist = Hist\u271d\nnrep\u271d\u00b9 : \u00acrep Hist X\u271d\nh\u271d\u00b9\u2070 : Z = X\u271d\nnbas\u271d : \u00acZ.basic\nlt\u271d : LocalTableau Z\nnrep\u271d : \u00acrep Hist Z\nnext\u271d : (Y : Sequent) \u2192 Y \u2208 endNodesOf lt\u271d \u2192 Tableau (Z :: Hist) Y\nh\u271d\u2079 : HEq tZ (Tableau.loc nrep\u271d nbas\u271d lt\u271d next\u271d)\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep\u271d nbas\u271d lt\u271d next\u271d\u27e9\u27e9\na\u271d\u00b2 a\u271d\u00b9 : Program\nh\u271d\u2078 \u03b1_def : \u03b1 = (a\u271d\u00b2;'a\u271d\u00b9)\nthis : nodeAt t = Z\nZ_free : (Z.without (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))).isFree = true\nlocLD :\n  \u2203 Y \u2208 endNodesOf lt\u271d,\n    (M, v)\u22a8Y \u2227\n      (Y.isFree = true \u2228\n        \u2203 F \u03b3,\n          (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6))).in_side side Y \u2227\n            relateSeq M \u03b3 v w \u2227\n              (M, v)\u22a8F \u2227\n                (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6)))).isFree = true)\nY : Sequent\nh\u271d\u2077 :\n  Y \u2208 endNodesOf lt\u271d \u2227\n    (M, v)\u22a8Y \u2227\n      (Y.isFree = true \u2228\n        \u2203 F \u03b3,\n          (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6))).in_side side Y \u2227\n            relateSeq M \u03b3 v w \u2227\n              (M, v)\u22a8F \u2227\n                (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6)))).isFree = true)\nY_in : Y \u2208 endNodesOf lt\u271d\nright\u271d\u2075 :\n  (M, v)\u22a8Y \u2227\n    (Y.isFree = true \u2228\n      \u2203 F \u03b3,\n        (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6))).in_side side Y \u2227\n          relateSeq M \u03b3 v w \u2227\n            (M, v)\u22a8F \u2227\n              (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6)))).isFree = true)\nw_Y : (M, v)\u22a8Y\nfree_or_newLoadform :\n  Y.isFree = true \u2228\n    \u2203 F \u03b3,\n      (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6))).in_side side Y \u2227\n        relateSeq M \u03b3 v w \u2227\n          (M, v)\u22a8F \u2227\n            (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6)))).isFree = true\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next\u271d Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nh\u271d\u2076 :\n  \u2203 F \u03b3,\n    (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6))).in_side side Y \u2227\n      relateSeq M \u03b3 v w \u2227\n        (M, v)\u22a8F \u2227 (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6)))).isFree = true\nF : List Formula\nh\u271d\u2075 :\n  \u2203 \u03b3,\n    (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6))).in_side side Y \u2227\n      relateSeq M \u03b3 v w \u2227\n        (M, v)\u22a8F \u2227 (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6)))).isFree = true\n\u03b4 : List Program\nh\u271d\u2074 :\n  (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6))).in_side side Y \u2227\n    relateSeq M \u03b4 v w \u2227\n      (M, v)\u22a8F \u2227 (F, \u03b4) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6))).in_side side Y\nright\u271d\u2074 :\n  relateSeq M \u03b4 v w \u2227\n    (M, v)\u22a8F \u2227 (F, \u03b4) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nv_seq_w : relateSeq M \u03b4 v w\nright\u271d\u00b3 :\n  (M, v)\u22a8F \u2227 (F, \u03b4) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nv_F : (M, v)\u22a8F\nright\u271d\u00b2 : (F, \u03b4) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nF\u03b4_in_H : (F, \u03b4) \u2208 Hl (\u03b1 :: \u03b1s)\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nh\u271d\u00b3 : \u00ac\u03b4 = []\nws : List.Vector W \u03b4.length.succ\nh\u271d\u00b2 : v = ws.head \u2227 w = ws.last \u2227 \u2200 (i : Fin \u03b4.length), relate M (\u03b4.get i) (ws.get \u2191\u2191i) (ws.get i.succ)\nv_def : v = ws.head\nright\u271d\u00b9 : w = ws.last \u2227 \u2200 (i : Fin \u03b4.length), relate M (\u03b4.get i) (ws.get \u2191\u2191i) (ws.get i.succ)\nw_def : w = ws.last\nws_rel : \u2200 (i : Fin \u03b4.length), relate M (\u03b4.get i) (ws.get \u2191\u2191i) (ws.get i.succ)\n\u03be : AnyFormula := AnyFormula.normal \u03c6\ni\u271d : Fin \u03b4.length\na\u271d :\n  \u2203 sk,\n    Relation.TransGen (cEdge X tab) t sk \u2227\n      (satisfiable (nodeAt sk) \u2227 \u00accEquiv X tab sk t \u2228\n        (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be)).in_side side (nodeAt sk) \u2227\n          (M, ws[i\u271d.castSucc])\u22a8nodeAt sk \u2227\n            ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be))).isFree = true)\nsk : PathIn tab\nh\u271d\u00b9 :\n  Relation.TransGen (cEdge X tab) t sk \u2227\n    (satisfiable (nodeAt sk) \u2227 \u00accEquiv X tab sk t \u2228\n      (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be)).in_side side (nodeAt sk) \u2227\n        (M, ws[i\u271d.castSucc])\u22a8nodeAt sk \u2227\n          ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be))).isFree = true)\nt_sk : Relation.TransGen (cEdge X tab) t sk\nIH_cases :\n  satisfiable (nodeAt sk) \u2227 \u00accEquiv X tab sk t \u2228\n    (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be)).in_side side (nodeAt sk) \u2227\n      (M, ws[i\u271d.castSucc])\u22a8nodeAt sk \u2227\n        ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be))).isFree = true\nh\u271d :\n  (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be)).in_side side (nodeAt sk) \u2227\n    (M, ws[i\u271d.castSucc])\u22a8nodeAt sk \u2227\n      ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be))).isFree = true\n_in_node_sk : (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be)).in_side side (nodeAt sk)\nright\u271d :\n  (M, ws[i\u271d.castSucc])\u22a8nodeAt sk \u2227\n    ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be))).isFree = true\nwsk_sk : (M, ws[i\u271d.castSucc])\u22a8nodeAt sk\nanf_in_sk : ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be))).isFree = true\n_forTermination_all : lengthOfProgram \u03b4[i\u271d] < lengthOfProgram \u03b1\n\u22a2 Prod.Lex (fun a\u2081 a\u2082 => a\u2081 < a\u2082) (fun x1 x2 => x1 < x2)\n    ((List.drop (\u2191i\u271d.succ) \u03b4).length, lengthOfProgram (\u03b4.get i\u271d), sk.length) (\u03b1s.length, lengthOfProgram \u03b1, t.length)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/Soundness.lean#L2893"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-06-04T19:24:24+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "d7e9e5a32340e3b90ae2d360dd74950533e3ee35f41f6e215a535570ead08049"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2894,
        "start_column": 8,
        "end_line": 2894,
        "end_column": 13
      },
      "debug_info": {
        "goal": "X : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nW : Type\nM : KripkeModel W\n\u03c6 : Formula\nside : Side\n_x :\n  (\u03b1 : Program) \u00d7'\n    (\u03b1s : List Program) \u00d7'\n      (t : PathIn tab) \u00d7'\n        (v : W) \u00d7'\n          (w : W) \u00d7'\n            (_ : (M, v)\u22a8nodeAt t) \u00d7'\n              (_ :\n                (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)) \u00d7'\n                (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)\na\u271d\u00b9\u00b2 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y _x \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\n\u03b1 : Program\n\u03b1s\u271d :\n  (\u03b1s : List Program) \u00d7'\n    (t : PathIn tab) \u00d7'\n      (v : W) \u00d7'\n        (w : W) \u00d7'\n          (_ : (M, v)\u22a8nodeAt t) \u00d7'\n            (_ : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)) \u00d7'\n              (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)\na\u271d\u00b9\u00b9 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y \u27e8\u03b1, \u03b1s\u271d\u27e9 \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\n\u03b1s : List Program\nt\u271d\u00b9 :\n  (t : PathIn tab) \u00d7'\n    (v : W) \u00d7'\n      (w : W) \u00d7'\n        (_ : (M, v)\u22a8nodeAt t) \u00d7'\n          (_ : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)) \u00d7'\n            (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)\na\u271d\u00b9\u2070 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y \u27e8\u03b1, \u27e8\u03b1s, t\u271d\u00b9\u27e9\u27e9 \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\nt : PathIn tab\nv\u271d :\n  (v : W) \u00d7'\n    (w : W) \u00d7'\n      (_ : (M, v)\u22a8nodeAt t) \u00d7'\n        (_ : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)) \u00d7'\n          (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)\na\u271d\u2079 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y \u27e8\u03b1, \u27e8\u03b1s, \u27e8t, v\u271d\u27e9\u27e9\u27e9 \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\nv : W\nw\u271d :\n  (w : W) \u00d7'\n    (_ : (M, v)\u22a8nodeAt t) \u00d7'\n      (_ : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)) \u00d7'\n        (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)\na\u271d\u2078 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y \u27e8\u03b1, \u27e8\u03b1s, \u27e8t, \u27e8v, w\u271d\u27e9\u27e9\u27e9\u27e9 \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\nw : W\nv_t\u271d :\n  (_ : (M, v)\u22a8nodeAt t) \u00d7'\n    (_ : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)) \u00d7'\n      (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)\na\u271d\u2077 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y \u27e8\u03b1, \u27e8\u03b1s, \u27e8t, \u27e8v, \u27e8w, v_t\u271d\u27e9\u27e9\u27e9\u27e9\u27e9 \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\nv_t : (M, v)\u22a8nodeAt t\nnegLoad_in\u271d :\n  (_ : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)) \u00d7'\n    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)\na\u271d\u2076 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y \u27e8\u03b1, \u27e8\u03b1s, \u27e8t, \u27e8v, \u27e8w, \u27e8v_t, negLoad_in\u271d\u27e9\u27e9\u27e9\u27e9\u27e9\u27e9 \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nv_\u03b1_w\u271d : (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)\na\u271d\u2075 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y \u27e8\u03b1, \u27e8\u03b1s, \u27e8t, \u27e8v, \u27e8w, \u27e8v_t, \u27e8negLoad_in, v_\u03b1_w\u271d\u27e9\u27e9\u27e9\u27e9\u27e9\u27e9\u27e9 \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\nv_\u03b1_w : relateSeq M (\u03b1 :: \u03b1s) v w\nw_n\u03be : (M, w)\u22a8(~\u03c6)\na\u271d\u2074 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y \u27e8\u03b1, \u27e8\u03b1s, \u27e8t, \u27e8v, \u27e8w, \u27e8v_t, \u27e8negLoad_in, \u27e8v_\u03b1_w, w_n\u03be\u27e9\u27e9\u27e9\u27e9\u27e9\u27e9\u27e9\u27e9 \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\nt\u271d : PathIn tab\na\u271d\u00b3 :\n  t = t\u271d \u2192\n    \u2203 s,\n      Relation.TransGen (cEdge X tab) t s \u2227\n        (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n          (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\ns\u271d : PathIn tab\nt_s\u271d\u00b9 : t\u271d \u22d6_ s\u271d\nh\u271d\u00b9\u00b2 : t = s\u271d\nt_s\u271d : t\u271d \u22d6_ t\nHist : History\nsnd\u271d : (X : Sequent) \u00d7 Tableau Hist X\ntabAt_t_def\u271d\u00b9 : tabAt t = \u27e8Hist, snd\u271d\u27e9\nZ : Sequent\ntZ : Tableau Hist Z\ntabAt_t_def\u271d : tabAt t = \u27e8Hist, \u27e8Z, tZ\u27e9\u27e9\nHist\u271d : History\nX\u271d : Sequent\nnrep\u271d\u00b2 : \u00acrep Hist\u271d X\u271d\nnbas\u271d\u00b9 : \u00acX\u271d.basic\nh\u271d\u00b9\u00b9 : Hist = Hist\u271d\nnrep\u271d\u00b9 : \u00acrep Hist X\u271d\nh\u271d\u00b9\u2070 : Z = X\u271d\nnbas\u271d : \u00acZ.basic\nlt\u271d : LocalTableau Z\nnrep\u271d : \u00acrep Hist Z\nnext\u271d : (Y : Sequent) \u2192 Y \u2208 endNodesOf lt\u271d \u2192 Tableau (Z :: Hist) Y\nh\u271d\u2079 : HEq tZ (Tableau.loc nrep\u271d nbas\u271d lt\u271d next\u271d)\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep\u271d nbas\u271d lt\u271d next\u271d\u27e9\u27e9\na\u271d\u00b2 a\u271d\u00b9 : Program\nh\u271d\u2078 \u03b1_def : \u03b1 = (a\u271d\u00b2\u22d3a\u271d\u00b9)\nthis : nodeAt t = Z\nZ_free : (Z.without (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))).isFree = true\nlocLD :\n  \u2203 Y \u2208 endNodesOf lt\u271d,\n    (M, v)\u22a8Y \u2227\n      (Y.isFree = true \u2228\n        \u2203 F \u03b3,\n          (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6))).in_side side Y \u2227\n            relateSeq M \u03b3 v w \u2227\n              (M, v)\u22a8F \u2227\n                (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6)))).isFree = true)\nY : Sequent\nh\u271d\u2077 :\n  Y \u2208 endNodesOf lt\u271d \u2227\n    (M, v)\u22a8Y \u2227\n      (Y.isFree = true \u2228\n        \u2203 F \u03b3,\n          (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6))).in_side side Y \u2227\n            relateSeq M \u03b3 v w \u2227\n              (M, v)\u22a8F \u2227\n                (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6)))).isFree = true)\nY_in : Y \u2208 endNodesOf lt\u271d\nright\u271d\u2075 :\n  (M, v)\u22a8Y \u2227\n    (Y.isFree = true \u2228\n      \u2203 F \u03b3,\n        (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6))).in_side side Y \u2227\n          relateSeq M \u03b3 v w \u2227\n            (M, v)\u22a8F \u2227\n              (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6)))).isFree = true)\nw_Y : (M, v)\u22a8Y\nfree_or_newLoadform :\n  Y.isFree = true \u2228\n    \u2203 F \u03b3,\n      (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6))).in_side side Y \u2227\n        relateSeq M \u03b3 v w \u2227\n          (M, v)\u22a8F \u2227\n            (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6)))).isFree = true\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next\u271d Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nh\u271d\u2076 :\n  \u2203 F \u03b3,\n    (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6))).in_side side Y \u2227\n      relateSeq M \u03b3 v w \u2227\n        (M, v)\u22a8F \u2227 (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6)))).isFree = true\nF : List Formula\nh\u271d\u2075 :\n  \u2203 \u03b3,\n    (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6))).in_side side Y \u2227\n      relateSeq M \u03b3 v w \u2227\n        (M, v)\u22a8F \u2227 (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6)))).isFree = true\n\u03b4 : List Program\nh\u271d\u2074 :\n  (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6))).in_side side Y \u2227\n    relateSeq M \u03b4 v w \u2227\n      (M, v)\u22a8F \u2227 (F, \u03b4) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6))).in_side side Y\nright\u271d\u2074 :\n  relateSeq M \u03b4 v w \u2227\n    (M, v)\u22a8F \u2227 (F, \u03b4) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nv_seq_w : relateSeq M \u03b4 v w\nright\u271d\u00b3 :\n  (M, v)\u22a8F \u2227 (F, \u03b4) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nv_F : (M, v)\u22a8F\nright\u271d\u00b2 : (F, \u03b4) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nF\u03b4_in_H : (F, \u03b4) \u2208 Hl (\u03b1 :: \u03b1s)\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nh\u271d\u00b3 : \u00ac\u03b4 = []\nws : List.Vector W \u03b4.length.succ\nh\u271d\u00b2 : v = ws.head \u2227 w = ws.last \u2227 \u2200 (i : Fin \u03b4.length), relate M (\u03b4.get i) (ws.get \u2191\u2191i) (ws.get i.succ)\nv_def : v = ws.head\nright\u271d\u00b9 : w = ws.last \u2227 \u2200 (i : Fin \u03b4.length), relate M (\u03b4.get i) (ws.get \u2191\u2191i) (ws.get i.succ)\nw_def : w = ws.last\nws_rel : \u2200 (i : Fin \u03b4.length), relate M (\u03b4.get i) (ws.get \u2191\u2191i) (ws.get i.succ)\n\u03be : AnyFormula := AnyFormula.normal \u03c6\ni\u271d : Fin \u03b4.length\na\u271d :\n  \u2203 sk,\n    Relation.TransGen (cEdge X tab) t sk \u2227\n      (satisfiable (nodeAt sk) \u2227 \u00accEquiv X tab sk t \u2228\n        (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be)).in_side side (nodeAt sk) \u2227\n          (M, ws[i\u271d.castSucc])\u22a8nodeAt sk \u2227\n            ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be))).isFree = true)\nsk : PathIn tab\nh\u271d\u00b9 :\n  Relation.TransGen (cEdge X tab) t sk \u2227\n    (satisfiable (nodeAt sk) \u2227 \u00accEquiv X tab sk t \u2228\n      (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be)).in_side side (nodeAt sk) \u2227\n        (M, ws[i\u271d.castSucc])\u22a8nodeAt sk \u2227\n          ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be))).isFree = true)\nt_sk : Relation.TransGen (cEdge X tab) t sk\nIH_cases :\n  satisfiable (nodeAt sk) \u2227 \u00accEquiv X tab sk t \u2228\n    (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be)).in_side side (nodeAt sk) \u2227\n      (M, ws[i\u271d.castSucc])\u22a8nodeAt sk \u2227\n        ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be))).isFree = true\nh\u271d :\n  (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be)).in_side side (nodeAt sk) \u2227\n    (M, ws[i\u271d.castSucc])\u22a8nodeAt sk \u2227\n      ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be))).isFree = true\n_in_node_sk : (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be)).in_side side (nodeAt sk)\nright\u271d :\n  (M, ws[i\u271d.castSucc])\u22a8nodeAt sk \u2227\n    ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be))).isFree = true\nwsk_sk : (M, ws[i\u271d.castSucc])\u22a8nodeAt sk\nanf_in_sk : ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be))).isFree = true\n_forTermination_all : lengthOfProgram \u03b4[i\u271d] < lengthOfProgram \u03b1\n\u22a2 Prod.Lex (fun a\u2081 a\u2082 => a\u2081 < a\u2082) (fun x1 x2 => x1 < x2)\n    ((List.drop (\u2191i\u271d.succ) \u03b4).length, lengthOfProgram (\u03b4.get i\u271d), sk.length) (\u03b1s.length, lengthOfProgram \u03b1, t.length)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/Soundness.lean#L2894"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-06-04T19:24:24+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "3cc17fa7955915dc7475fda50f4ea1c8d96893f265712d55d553daa646d5338d"
    },
    {
      "repo": {
        "remote": "https://github.com/m4lvin/lean4-pdl",
        "branch": "localLoadedDiamondList",
        "commit": "6cf1371383157d0bea6ae88d153a3897ea14338c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Pdl/Soundness.lean",
        "start_line": 2895,
        "start_column": 8,
        "end_line": 2895,
        "end_column": 13
      },
      "debug_info": {
        "goal": "X : Sequent\ntab : Tableau [] X\nroot_free : X.isFree = true\nW : Type\nM : KripkeModel W\n\u03c6 : Formula\nside : Side\n_x :\n  (\u03b1 : Program) \u00d7'\n    (\u03b1s : List Program) \u00d7'\n      (t : PathIn tab) \u00d7'\n        (v : W) \u00d7'\n          (w : W) \u00d7'\n            (_ : (M, v)\u22a8nodeAt t) \u00d7'\n              (_ :\n                (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)) \u00d7'\n                (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)\na\u271d\u00b9\u00b9 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y _x \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\n\u03b1 : Program\n\u03b1s\u271d :\n  (\u03b1s : List Program) \u00d7'\n    (t : PathIn tab) \u00d7'\n      (v : W) \u00d7'\n        (w : W) \u00d7'\n          (_ : (M, v)\u22a8nodeAt t) \u00d7'\n            (_ : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)) \u00d7'\n              (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)\na\u271d\u00b9\u2070 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y \u27e8\u03b1, \u03b1s\u271d\u27e9 \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\n\u03b1s : List Program\nt\u271d\u00b9 :\n  (t : PathIn tab) \u00d7'\n    (v : W) \u00d7'\n      (w : W) \u00d7'\n        (_ : (M, v)\u22a8nodeAt t) \u00d7'\n          (_ : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)) \u00d7'\n            (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)\na\u271d\u2079 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y \u27e8\u03b1, \u27e8\u03b1s, t\u271d\u00b9\u27e9\u27e9 \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\nt : PathIn tab\nv\u271d :\n  (v : W) \u00d7'\n    (w : W) \u00d7'\n      (_ : (M, v)\u22a8nodeAt t) \u00d7'\n        (_ : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)) \u00d7'\n          (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)\na\u271d\u2078 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y \u27e8\u03b1, \u27e8\u03b1s, \u27e8t, v\u271d\u27e9\u27e9\u27e9 \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\nv : W\nw\u271d :\n  (w : W) \u00d7'\n    (_ : (M, v)\u22a8nodeAt t) \u00d7'\n      (_ : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)) \u00d7'\n        (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)\na\u271d\u2077 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y \u27e8\u03b1, \u27e8\u03b1s, \u27e8t, \u27e8v, w\u271d\u27e9\u27e9\u27e9\u27e9 \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\nw : W\nv_t\u271d :\n  (_ : (M, v)\u22a8nodeAt t) \u00d7'\n    (_ : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)) \u00d7'\n      (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)\na\u271d\u2076 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y \u27e8\u03b1, \u27e8\u03b1s, \u27e8t, \u27e8v, \u27e8w, v_t\u271d\u27e9\u27e9\u27e9\u27e9\u27e9 \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\nv_t : (M, v)\u22a8nodeAt t\nnegLoad_in\u271d :\n  (_ : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)) \u00d7'\n    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)\na\u271d\u2075 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y \u27e8\u03b1, \u27e8\u03b1s, \u27e8t, \u27e8v, \u27e8w, \u27e8v_t, negLoad_in\u271d\u27e9\u27e9\u27e9\u27e9\u27e9\u27e9 \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\nnegLoad_in : (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side (nodeAt t)\nv_\u03b1_w\u271d : (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)\na\u271d\u2074 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y \u27e8\u03b1, \u27e8\u03b1s, \u27e8t, \u27e8v, \u27e8w, \u27e8v_t, \u27e8negLoad_in, v_\u03b1_w\u271d\u27e9\u27e9\u27e9\u27e9\u27e9\u27e9\u27e9 \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\nv_\u03b1_w : relateSeq M (\u03b1 :: \u03b1s) v w\nw_n\u03be : (M, w)\u22a8(~\u03c6)\na\u271d\u00b3 :\n  \u2200\n    (y :\n      (\u03b1 : Program) \u00d7'\n        (\u03b1s : List Program) \u00d7'\n          (t : PathIn tab) \u00d7'\n            (v : W) \u00d7'\n              (w : W) \u00d7'\n                (_ : (M, v)\u22a8nodeAt t) \u00d7'\n                  (_ :\n                    (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6)))).in_side side\n                      (nodeAt t)) \u00d7'\n                    (_ : relateSeq M (\u03b1 :: \u03b1s) v w) \u00d7' (M, w)\u22a8(~\u03c6)),\n    (invImage\n            (fun x =>\n              PSigma.casesOn x fun \u03b1 \u03b1s =>\n                PSigma.casesOn \u03b1s fun \u03b1s t =>\n                  PSigma.casesOn t fun t v =>\n                    PSigma.casesOn v fun v w =>\n                      PSigma.casesOn w fun w v_t =>\n                        PSigma.casesOn v_t fun v_t negLoad_in =>\n                          PSigma.casesOn negLoad_in fun negLoad_in v_\u03b1_w =>\n                            PSigma.casesOn v_\u03b1_w fun v_\u03b1_w w_n\u03be => (\u03b1s.length, lengthOfProgram \u03b1, t.length))\n            Prod.instWellFoundedRelation).1\n        y \u27e8\u03b1, \u27e8\u03b1s, \u27e8t, \u27e8v, \u27e8w, \u27e8v_t, \u27e8negLoad_in, \u27e8v_\u03b1_w, w_n\u03be\u27e9\u27e9\u27e9\u27e9\u27e9\u27e9\u27e9\u27e9 \u2192\n      \u2203 s,\n        Relation.TransGen (cEdge X tab) y.2.2.1 s \u2227\n          (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s y.2.2.1 \u2228\n            (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, y.2.2.2.2.1)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\nt\u271d : PathIn tab\na\u271d\u00b2 :\n  t = t\u271d \u2192\n    \u2203 s,\n      Relation.TransGen (cEdge X tab) t s \u2227\n        (satisfiable (nodeAt s) \u2227 \u00accEquiv X tab s t \u2228\n          (~''(AnyFormula.normal \u03c6)).in_side side (nodeAt s) \u2227 (M, w)\u22a8nodeAt s \u2227 (nodeAt s).isFree = true)\ns\u271d : PathIn tab\nt_s\u271d\u00b9 : t\u271d \u22d6_ s\u271d\nh\u271d\u00b9\u00b2 : t = s\u271d\nt_s\u271d : t\u271d \u22d6_ t\nHist : History\nsnd\u271d : (X : Sequent) \u00d7 Tableau Hist X\ntabAt_t_def\u271d\u00b9 : tabAt t = \u27e8Hist, snd\u271d\u27e9\nZ : Sequent\ntZ : Tableau Hist Z\ntabAt_t_def\u271d : tabAt t = \u27e8Hist, \u27e8Z, tZ\u27e9\u27e9\nHist\u271d : History\nX\u271d : Sequent\nnrep\u271d\u00b2 : \u00acrep Hist\u271d X\u271d\nnbas\u271d\u00b9 : \u00acX\u271d.basic\nh\u271d\u00b9\u00b9 : Hist = Hist\u271d\nnrep\u271d\u00b9 : \u00acrep Hist X\u271d\nh\u271d\u00b9\u2070 : Z = X\u271d\nnbas\u271d : \u00acZ.basic\nlt\u271d : LocalTableau Z\nnrep\u271d : \u00acrep Hist Z\nnext\u271d : (Y : Sequent) \u2192 Y \u2208 endNodesOf lt\u271d \u2192 Tableau (Z :: Hist) Y\nh\u271d\u2079 : HEq tZ (Tableau.loc nrep\u271d nbas\u271d lt\u271d next\u271d)\ntabAt_t_def : tabAt t = \u27e8Hist, \u27e8Z, Tableau.loc nrep\u271d nbas\u271d lt\u271d next\u271d\u27e9\u27e9\na\u271d\u00b9 : Formula\nh\u271d\u2078 \u03b1_def : \u03b1 = (?'a\u271d\u00b9)\nthis : nodeAt t = Z\nZ_free : (Z.without (~''(AnyFormula.loaded (\u230a\u03b1\u230bAnyFormula.loadBoxes \u03b1s (AnyFormula.normal \u03c6))))).isFree = true\nlocLD :\n  \u2203 Y \u2208 endNodesOf lt\u271d,\n    (M, v)\u22a8Y \u2227\n      (Y.isFree = true \u2228\n        \u2203 F \u03b3,\n          (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6))).in_side side Y \u2227\n            relateSeq M \u03b3 v w \u2227\n              (M, v)\u22a8F \u2227\n                (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6)))).isFree = true)\nY : Sequent\nh\u271d\u2077 :\n  Y \u2208 endNodesOf lt\u271d \u2227\n    (M, v)\u22a8Y \u2227\n      (Y.isFree = true \u2228\n        \u2203 F \u03b3,\n          (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6))).in_side side Y \u2227\n            relateSeq M \u03b3 v w \u2227\n              (M, v)\u22a8F \u2227\n                (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6)))).isFree = true)\nY_in : Y \u2208 endNodesOf lt\u271d\nright\u271d\u2075 :\n  (M, v)\u22a8Y \u2227\n    (Y.isFree = true \u2228\n      \u2203 F \u03b3,\n        (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6))).in_side side Y \u2227\n          relateSeq M \u03b3 v w \u2227\n            (M, v)\u22a8F \u2227\n              (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6)))).isFree = true)\nw_Y : (M, v)\u22a8Y\nfree_or_newLoadform :\n  Y.isFree = true \u2228\n    \u2203 F \u03b3,\n      (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6))).in_side side Y \u2227\n        relateSeq M \u03b3 v w \u2227\n          (M, v)\u22a8F \u2227\n            (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6)))).isFree = true\nt_to_s1 : PathIn (tabAt t).snd.snd := \u22ef \u25b8 PathIn.loc Y_in PathIn.nil\ns1 : PathIn tab := t.append t_to_s1\nt_s : t \u22d6_ s1\ntabAt_s_def : tabAt s1 = \u27e8Z :: Hist, \u27e8Y, next\u271d Y Y_in\u27e9\u27e9\nv_s1 : (M, v)\u22a8nodeAt s1\nh\u271d\u2076 :\n  \u2203 F \u03b3,\n    (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6))).in_side side Y \u2227\n      relateSeq M \u03b3 v w \u2227\n        (M, v)\u22a8F \u2227 (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6)))).isFree = true\nF : List Formula\nh\u271d\u2075 :\n  \u2203 \u03b3,\n    (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6))).in_side side Y \u2227\n      relateSeq M \u03b3 v w \u2227\n        (M, v)\u22a8F \u2227 (F, \u03b3) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b3 (AnyFormula.normal \u03c6)))).isFree = true\n\u03b4 : List Program\nh\u271d\u2074 :\n  (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6))).in_side side Y \u2227\n    relateSeq M \u03b4 v w \u2227\n      (M, v)\u22a8F \u2227 (F, \u03b4) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nanf_in_Y : (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6))).in_side side Y\nright\u271d\u2074 :\n  relateSeq M \u03b4 v w \u2227\n    (M, v)\u22a8F \u2227 (F, \u03b4) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nv_seq_w : relateSeq M \u03b4 v w\nright\u271d\u00b3 :\n  (M, v)\u22a8F \u2227 (F, \u03b4) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nv_F : (M, v)\u22a8F\nright\u271d\u00b2 : (F, \u03b4) \u2208 Hl (\u03b1 :: \u03b1s) \u2227 (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nF\u03b4_in_H : (F, \u03b4) \u2208 Hl (\u03b1 :: \u03b1s)\nY_almost_free : (Y.without (~''(AnyFormula.loadBoxes \u03b4 (AnyFormula.normal \u03c6)))).isFree = true\nh\u271d\u00b3 : \u00ac\u03b4 = []\nws : List.Vector W \u03b4.length.succ\nh\u271d\u00b2 : v = ws.head \u2227 w = ws.last \u2227 \u2200 (i : Fin \u03b4.length), relate M (\u03b4.get i) (ws.get \u2191\u2191i) (ws.get i.succ)\nv_def : v = ws.head\nright\u271d\u00b9 : w = ws.last \u2227 \u2200 (i : Fin \u03b4.length), relate M (\u03b4.get i) (ws.get \u2191\u2191i) (ws.get i.succ)\nw_def : w = ws.last\nws_rel : \u2200 (i : Fin \u03b4.length), relate M (\u03b4.get i) (ws.get \u2191\u2191i) (ws.get i.succ)\n\u03be : AnyFormula := AnyFormula.normal \u03c6\ni\u271d : Fin \u03b4.length\na\u271d :\n  \u2203 sk,\n    Relation.TransGen (cEdge X tab) t sk \u2227\n      (satisfiable (nodeAt sk) \u2227 \u00accEquiv X tab sk t \u2228\n        (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be)).in_side side (nodeAt sk) \u2227\n          (M, ws[i\u271d.castSucc])\u22a8nodeAt sk \u2227\n            ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be))).isFree = true)\nsk : PathIn tab\nh\u271d\u00b9 :\n  Relation.TransGen (cEdge X tab) t sk \u2227\n    (satisfiable (nodeAt sk) \u2227 \u00accEquiv X tab sk t \u2228\n      (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be)).in_side side (nodeAt sk) \u2227\n        (M, ws[i\u271d.castSucc])\u22a8nodeAt sk \u2227\n          ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be))).isFree = true)\nt_sk : Relation.TransGen (cEdge X tab) t sk\nIH_cases :\n  satisfiable (nodeAt sk) \u2227 \u00accEquiv X tab sk t \u2228\n    (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be)).in_side side (nodeAt sk) \u2227\n      (M, ws[i\u271d.castSucc])\u22a8nodeAt sk \u2227\n        ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be))).isFree = true\nh\u271d :\n  (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be)).in_side side (nodeAt sk) \u2227\n    (M, ws[i\u271d.castSucc])\u22a8nodeAt sk \u2227\n      ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be))).isFree = true\n_in_node_sk : (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be)).in_side side (nodeAt sk)\nright\u271d :\n  (M, ws[i\u271d.castSucc])\u22a8nodeAt sk \u2227\n    ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be))).isFree = true\nwsk_sk : (M, ws[i\u271d.castSucc])\u22a8nodeAt sk\nanf_in_sk : ((nodeAt sk).without (~''(AnyFormula.loadBoxes (List.drop (\u2191i\u271d.castSucc) \u03b4) \u03be))).isFree = true\n_forTermination_all : lengthOfProgram \u03b4[i\u271d] < lengthOfProgram \u03b1\n\u22a2 Prod.Lex (fun a\u2081 a\u2082 => a\u2081 < a\u2082) (fun x1 x2 => x1 < x2)\n    ((List.drop (\u2191i\u271d.succ) \u03b4).length, lengthOfProgram (\u03b4.get i\u271d), sk.length) (\u03b1s.length, lengthOfProgram \u03b1, t.length)",
        "url": "https://github.com/m4lvin/lean4-pdl/blob/6cf1371383157d0bea6ae88d153a3897ea14338c/Pdl/Soundness.lean#L2895"
      },
      "metadata": {
        "blame_email_hash": "cc8f18f5e466",
        "blame_date": "2025-06-04T19:24:24+02:00",
        "inclusion_date": "2025-06-06T05:59:27.131972+00:00"
      },
      "id": "2644d6fc884d6455267f3dbf7f2b146940f730d0f420ace550b3cebc24134204"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "rotation32",
        "commit": "ab8e6e6fa93c0fd4f936d96937778c4123f69a48",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Clean/Gadgets/ByteDecomposition/ByteDecomposition.lean",
        "start_line": 285,
        "start_column": 2,
        "end_line": 285,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case mk.mk\np : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 2 ^ 16 + 2 ^ 8)\noffset : Fin 8\ni0 : \u2115\nenv : Environment (F p)\nx0_var x1_var x2_var x3_var : Expression (F p)\nhenv :\n  env.uses_local_witnesses_completeness\n    ((ElaboratedCircuit.main { x0 := x0_var, x1 := x1_var, x2 := x2_var, x3 := x3_var }).operations i0)\nx0 x1 x2 x3 : F p\nh_eval :\n  eval env { x0 := x0_var, x1 := x1_var, x2 := x2_var, x3 := x3_var } = { x0 := x0, x1 := x1, x2 := x2, x3 := x3 }\nas : { x0 := x0, x1 := x1, x2 := x2, x3 := x3 }.is_normalized\n\u22a2 Circuit.constraints_hold.completeness env\n    ((ElaboratedCircuit.main { x0 := x0_var, x1 := x1_var, x2 := x2_var, x3 := x3_var }).operations i0)",
        "url": "https://github.com/Verified-zkEVM/clean/blob/ab8e6e6fa93c0fd4f936d96937778c4123f69a48/Clean/Gadgets/ByteDecomposition/ByteDecomposition.lean#L285"
      },
      "metadata": {
        "blame_email_hash": "3e868202539c",
        "blame_date": "2025-06-04T13:12:13+02:00",
        "inclusion_date": "2025-06-06T07:08:38.978762+00:00"
      },
      "id": "a0c50c4a1c07fc7d1af3fcfe4e138c1f41d0ea3612a3f5ae5294922e93acbb9d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "07239abf174e702ac76fc6b9602920ac832dcd36",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 128,
        "start_column": 19,
        "end_line": 128,
        "end_column": 24
      },
      "debug_info": {
        "goal": "k : \u2115\ninst\u271d\u00b9 : Semiring (ConcreteBinaryTower.ConcreteBinaryTower k)\ninst\u271d : Semiring (ConcreteBinaryTower.ConcreteBinaryTower (k + 1))\n\u22a2 ConcreteBinaryTower.algebraMap k 1 = 1",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/07239abf174e702ac76fc6b9602920ac832dcd36/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L128"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-05T07:49:33.636701+00:00"
      },
      "id": "33dd5d206bf740a2571336978c08021e8629b0f62055ccc4f472a6acbf092b41"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "07239abf174e702ac76fc6b9602920ac832dcd36",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 127,
        "start_column": 20,
        "end_line": 127,
        "end_column": 25
      },
      "debug_info": {
        "goal": "k : \u2115\ninst\u271d\u00b9 : Semiring (ConcreteBinaryTower.ConcreteBinaryTower k)\ninst\u271d : Semiring (ConcreteBinaryTower.ConcreteBinaryTower (k + 1))\n\u22a2 ConcreteBinaryTower.algebraMap k 0 = 0",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/07239abf174e702ac76fc6b9602920ac832dcd36/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L127"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-05T07:49:33.636701+00:00"
      },
      "id": "4b1c4d3f10813e30fcde305375b426abe85e54b8445a9c1689afdda9d1e398c7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "07239abf174e702ac76fc6b9602920ac832dcd36",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 133,
        "start_column": 2,
        "end_line": 133,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\ninst\u271d\u00b9 : Semiring (ConcreteBinaryTower.ConcreteBinaryTower k)\ninst\u271d : Semiring (ConcreteBinaryTower.ConcreteBinaryTower (k + 1))\n\u22a2 let f := { toFun := ConcreteBinaryTower.algebraMap k, map_one' := \u22ef, map_mul' := \u22ef, map_zero' := \u22ef, map_add' := \u22ef };\n  @eval\u2082 (ConcreteBinaryTower.ConcreteBinaryTower k) (ConcreteBinaryTower.ConcreteBinaryTower (k + 1)) inst\u271d\u00b9 inst\u271d f\n      (ConcreteBinaryTower.Z (k + 1)) (ConcreteBinaryTower.definingPoly k inst\u271d\u00b9) =\n    0",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/07239abf174e702ac76fc6b9602920ac832dcd36/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L133"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-05T07:49:33.636701+00:00"
      },
      "id": "3ecd175db635fc48573112a01fd2db2e94bbc951ee78e901d01266daf561244e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "07239abf174e702ac76fc6b9602920ac832dcd36",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 327,
        "start_column": 4,
        "end_line": 327,
        "end_column": 9
      },
      "debug_info": {
        "goal": "k : \u2115\nh_k_pos : k > 0\nx : ConcreteBinaryTower.ConcreteBinaryTower k\n\u22a2 (@fun p =>\n        let_fun h_eq := \u22ef;\n        @cast (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 + 1)) (ConcreteBinaryTower.ConcreteBinaryTower k) \u22ef\n          (ConcreteBinaryTower.join (k - 1) p.1 p.2))\n      (ConcreteBinaryTower.split k h_k_pos x) =\n    x",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/07239abf174e702ac76fc6b9602920ac832dcd36/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L327"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-05T07:49:33.636701+00:00"
      },
      "id": "7fb089dafa6b79fa8746401171004174871e2e814288cefb67e707b06e1c67a1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "07239abf174e702ac76fc6b9602920ac832dcd36",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 331,
        "start_column": 4,
        "end_line": 331,
        "end_column": 9
      },
      "debug_info": {
        "goal": "k : \u2115\nh_k_pos : k > 0\np : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) \u00d7 ConcreteBinaryTower.ConcreteBinaryTower (k - 1)\n\u22a2 ConcreteBinaryTower.split k h_k_pos\n      ((@fun p =>\n          let_fun h_eq := \u22ef;\n          @cast (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 + 1)) (ConcreteBinaryTower.ConcreteBinaryTower k) \u22ef\n            (ConcreteBinaryTower.join (k - 1) p.1 p.2))\n        p) =\n    p",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/07239abf174e702ac76fc6b9602920ac832dcd36/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L331"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-05T07:49:33.636701+00:00"
      },
      "id": "dd05206060b0f09655031b2eeece0fa6ddffc7a4b8baf31c48defbe0b2b6ca73"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "07239abf174e702ac76fc6b9602920ac832dcd36",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 523,
        "start_column": 2,
        "end_line": 523,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 Function.Bijective ConcreteBinaryTower.toConcreteBTF0 \u2227\n    (\u2200 (x y : GF(2)),\n        ConcreteBinaryTower.toConcreteBTF0 (x + y) =\n          @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower 0) (ConcreteBinaryTower.ConcreteBinaryTower 0)\n            (ConcreteBinaryTower.ConcreteBinaryTower 0) (ConcreteBinaryTower.instHAddConcreteBinaryTower 0)\n            (ConcreteBinaryTower.toConcreteBTF0 x) (ConcreteBinaryTower.toConcreteBTF0 y)) \u2227\n      \u2200 (x y : GF(2)),\n        ConcreteBinaryTower.toConcreteBTF0 (x * y) =\n          ConcreteBinaryTower.concrete_mul 0 (ConcreteBinaryTower.toConcreteBTF0 x)\n            (ConcreteBinaryTower.toConcreteBTF0 y)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/07239abf174e702ac76fc6b9602920ac832dcd36/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L523"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-05T07:49:33.636701+00:00"
      },
      "id": "13f99a41e91222a174927297b69842a194cd3385a853dd02cfd62ec086a98b83"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "07239abf174e702ac76fc6b9602920ac832dcd36",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 822,
        "start_column": 4,
        "end_line": 822,
        "end_column": 9
      },
      "debug_info": {
        "goal": "k : \u2115\nh_k : k > 0\ninstRingPrevConcreteBTF : Ring (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\ninstFieldPrevConcreteBTF : Field (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\na b : ConcreteBinaryTower.ConcreteBinaryTower k\na\u2081 a\u2080 b\u2081 b\u2080 : ConcreteBinaryTower.ConcreteBinaryTower (k - 1)\nh_a : (ConcreteBinaryTower.equivProd k h_k) a = (a\u2081, a\u2080)\nh_b : (ConcreteBinaryTower.equivProd k h_k) b = (b\u2081, b\u2080)\nsplit_a : ConcreteBinaryTower.split k h_k a = (a\u2081, a\u2080)\nsplit_b : ConcreteBinaryTower.split k h_k b = (b\u2081, b\u2080)\na_sum : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) :=\n  @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1)) a\u2081 a\u2080\nb_sum : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) :=\n  @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1)) b\u2081 b\u2080\nsum_mul : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) := ConcreteBinaryTower.concrete_mul (k - 1) a_sum b_sum\nprevX : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) := ConcreteBinaryTower.Z (k - 1)\nmult_hi : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) := ConcreteBinaryTower.concrete_mul (k - 1) a\u2081 b\u2081\nmult_lo : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) := ConcreteBinaryTower.concrete_mul (k - 1) a\u2080 b\u2080\nlo_res : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) :=\n  @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1)) mult_lo\n    mult_hi\nhi_res : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) :=\n  @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n    (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n      sum_mul lo_res)\n    (ConcreteBinaryTower.concrete_mul (k - 1) mult_hi prevX)\nh_eq : k - 1 + 1 = k\n\u22a2 @cast (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 + 1)) (ConcreteBinaryTower.ConcreteBinaryTower k) \u22ef\n      (ConcreteBinaryTower.join (k - 1) hi_res lo_res) =\n    @DFunLike.coe\n      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1) \u00d7 ConcreteBinaryTower.ConcreteBinaryTower (k - 1) \u2243\n        ConcreteBinaryTower.ConcreteBinaryTower k)\n      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1) \u00d7 ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n      (fun x => ConcreteBinaryTower.ConcreteBinaryTower k) Equiv.instFunLike\n      (Equiv.symm (ConcreteBinaryTower.equivProd k h_k)) (hi_res, lo_res)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/07239abf174e702ac76fc6b9602920ac832dcd36/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L822"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-05T07:49:33.636701+00:00"
      },
      "id": "a978889f55c74291d7cd722e73392bf8ee5f7cd99f1a5d016b0d0118ccf3112d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "07239abf174e702ac76fc6b9602920ac832dcd36",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 830,
        "start_column": 4,
        "end_line": 830,
        "end_column": 9
      },
      "debug_info": {
        "goal": "k : \u2115\nh_k : k > 0\ninstRingPrevConcreteBTF : Ring (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\ninstFieldPrevConcreteBTF : Field (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\na b : ConcreteBinaryTower.ConcreteBinaryTower k\na\u2081 a\u2080 b\u2081 b\u2080 : ConcreteBinaryTower.ConcreteBinaryTower (k - 1)\nh_a : (ConcreteBinaryTower.equivProd k h_k) a = (a\u2081, a\u2080)\nh_b : (ConcreteBinaryTower.equivProd k h_k) b = (b\u2081, b\u2080)\nsplit_a : ConcreteBinaryTower.split k h_k a = (a\u2081, a\u2080)\nsplit_b : ConcreteBinaryTower.split k h_k b = (b\u2081, b\u2080)\na_sum : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) :=\n  @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1)) a\u2081 a\u2080\nb_sum : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) :=\n  @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1)) b\u2081 b\u2080\nsum_mul : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) := ConcreteBinaryTower.concrete_mul (k - 1) a_sum b_sum\nprevX : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) := ConcreteBinaryTower.Z (k - 1)\nmult_hi : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) := ConcreteBinaryTower.concrete_mul (k - 1) a\u2081 b\u2081\nmult_lo : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) := ConcreteBinaryTower.concrete_mul (k - 1) a\u2080 b\u2080\nlo_res : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) :=\n  @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1)) mult_lo\n    mult_hi\nhi_res : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) :=\n  @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n    (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n      sum_mul lo_res)\n    (ConcreteBinaryTower.concrete_mul (k - 1) mult_hi prevX)\nh_eq : k - 1 + 1 = k\ncast_join_eq :\n  @cast (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 + 1)) (ConcreteBinaryTower.ConcreteBinaryTower k) \u22ef\n      (ConcreteBinaryTower.join (k - 1) hi_res lo_res) =\n    @DFunLike.coe\n      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1) \u00d7 ConcreteBinaryTower.ConcreteBinaryTower (k - 1) \u2243\n        ConcreteBinaryTower.ConcreteBinaryTower k)\n      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1) \u00d7 ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n      (fun x => ConcreteBinaryTower.ConcreteBinaryTower k) Equiv.instFunLike\n      (Equiv.symm (ConcreteBinaryTower.equivProd k h_k)) (hi_res, lo_res)\n\u22a2 @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n      (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n        (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n        (ConcreteBinaryTower.concrete_mul (k - 1) a_sum b_sum)\n        (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n          (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n          mult_lo mult_hi))\n      (ConcreteBinaryTower.concrete_mul (k - 1) mult_hi prevX) =\n    @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n      (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n        (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n        (@HMul.hMul (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n          (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHMulConcreteBinaryTower (k - 1)) a\u2080\n          b\u2081)\n        (@HMul.hMul (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n          (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHMulConcreteBinaryTower (k - 1)) b\u2080\n          a\u2081))\n      (@HMul.hMul (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n        (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHMulConcreteBinaryTower (k - 1))\n        (@HMul.hMul (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n          (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHMulConcreteBinaryTower (k - 1)) a\u2081\n          b\u2081)\n        (ConcreteBinaryTower.Z (k - 1)))",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/07239abf174e702ac76fc6b9602920ac832dcd36/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L830"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-05T07:49:33.636701+00:00"
      },
      "id": "5de5228895469ba5d5618f149b34a2491f724ad99ace996a3d15fab5f415e2f5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "07239abf174e702ac76fc6b9602920ac832dcd36",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 835,
        "start_column": 4,
        "end_line": 835,
        "end_column": 9
      },
      "debug_info": {
        "goal": "k : \u2115\nh_k : k > 0\ninstRingPrevConcreteBTF : Ring (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\ninstFieldPrevConcreteBTF : Field (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\na b : ConcreteBinaryTower.ConcreteBinaryTower k\na\u2081 a\u2080 b\u2081 b\u2080 : ConcreteBinaryTower.ConcreteBinaryTower (k - 1)\nh_a : (ConcreteBinaryTower.equivProd k h_k) a = (a\u2081, a\u2080)\nh_b : (ConcreteBinaryTower.equivProd k h_k) b = (b\u2081, b\u2080)\nsplit_a : ConcreteBinaryTower.split k h_k a = (a\u2081, a\u2080)\nsplit_b : ConcreteBinaryTower.split k h_k b = (b\u2081, b\u2080)\na_sum : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) :=\n  @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1)) a\u2081 a\u2080\nb_sum : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) :=\n  @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1)) b\u2081 b\u2080\nsum_mul : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) := ConcreteBinaryTower.concrete_mul (k - 1) a_sum b_sum\nprevX : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) := ConcreteBinaryTower.Z (k - 1)\nmult_hi : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) := ConcreteBinaryTower.concrete_mul (k - 1) a\u2081 b\u2081\nmult_lo : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) := ConcreteBinaryTower.concrete_mul (k - 1) a\u2080 b\u2080\nlo_res : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) :=\n  @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1)) mult_lo\n    mult_hi\nhi_res : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) :=\n  @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n    (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n      sum_mul lo_res)\n    (ConcreteBinaryTower.concrete_mul (k - 1) mult_hi prevX)\nh_eq : k - 1 + 1 = k\ncast_join_eq :\n  @cast (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 + 1)) (ConcreteBinaryTower.ConcreteBinaryTower k) \u22ef\n      (ConcreteBinaryTower.join (k - 1) hi_res lo_res) =\n    @DFunLike.coe\n      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1) \u00d7 ConcreteBinaryTower.ConcreteBinaryTower (k - 1) \u2243\n        ConcreteBinaryTower.ConcreteBinaryTower k)\n      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1) \u00d7 ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n      (fun x => ConcreteBinaryTower.ConcreteBinaryTower k) Equiv.instFunLike\n      (Equiv.symm (ConcreteBinaryTower.equivProd k h_k)) (hi_res, lo_res)\nhi_res_eq :\n  hi_res =\n    @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n      (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n        (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n        (@HMul.hMul (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n          (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHMulConcreteBinaryTower (k - 1)) a\u2080\n          b\u2081)\n        (@HMul.hMul (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n          (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHMulConcreteBinaryTower (k - 1)) b\u2080\n          a\u2081))\n      (@HMul.hMul (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n        (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHMulConcreteBinaryTower (k - 1))\n        (@HMul.hMul (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n          (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHMulConcreteBinaryTower (k - 1)) a\u2081\n          b\u2081)\n        (ConcreteBinaryTower.Z (k - 1)))\n\u22a2 @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n      mult_lo mult_hi =\n    @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n      (@HMul.hMul (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n        (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHMulConcreteBinaryTower (k - 1)) a\u2080\n        b\u2080)\n      (@HMul.hMul (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n        (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHMulConcreteBinaryTower (k - 1)) a\u2081\n        b\u2081)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/07239abf174e702ac76fc6b9602920ac832dcd36/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L835"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-05T07:49:33.636701+00:00"
      },
      "id": "dd785b86dee08371cfc05b1c0fc8917d4df9a57c2af39eea62e77c032b732b56"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "07239abf174e702ac76fc6b9602920ac832dcd36",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 839,
        "start_column": 2,
        "end_line": 839,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\nh_k : k > 0\ninstRingPrevConcreteBTF : Ring (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\ninstFieldPrevConcreteBTF : Field (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\na b : ConcreteBinaryTower.ConcreteBinaryTower k\na\u2081 a\u2080 b\u2081 b\u2080 : ConcreteBinaryTower.ConcreteBinaryTower (k - 1)\nh_a : (ConcreteBinaryTower.equivProd k h_k) a = (a\u2081, a\u2080)\nh_b : (ConcreteBinaryTower.equivProd k h_k) b = (b\u2081, b\u2080)\nsplit_a : ConcreteBinaryTower.split k h_k a = (a\u2081, a\u2080)\nsplit_b : ConcreteBinaryTower.split k h_k b = (b\u2081, b\u2080)\na_sum : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) :=\n  @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1)) a\u2081 a\u2080\nb_sum : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) :=\n  @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1)) b\u2081 b\u2080\nsum_mul : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) := ConcreteBinaryTower.concrete_mul (k - 1) a_sum b_sum\nprevX : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) := ConcreteBinaryTower.Z (k - 1)\nmult_hi : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) := ConcreteBinaryTower.concrete_mul (k - 1) a\u2081 b\u2081\nmult_lo : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) := ConcreteBinaryTower.concrete_mul (k - 1) a\u2080 b\u2080\nlo_res : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) :=\n  @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1)) mult_lo\n    mult_hi\nhi_res : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) :=\n  @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n    (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n      sum_mul lo_res)\n    (ConcreteBinaryTower.concrete_mul (k - 1) mult_hi prevX)\nh_eq : k - 1 + 1 = k\ncast_join_eq :\n  @cast (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 + 1)) (ConcreteBinaryTower.ConcreteBinaryTower k) \u22ef\n      (ConcreteBinaryTower.join (k - 1) hi_res lo_res) =\n    @DFunLike.coe\n      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1) \u00d7 ConcreteBinaryTower.ConcreteBinaryTower (k - 1) \u2243\n        ConcreteBinaryTower.ConcreteBinaryTower k)\n      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1) \u00d7 ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n      (fun x => ConcreteBinaryTower.ConcreteBinaryTower k) Equiv.instFunLike\n      (Equiv.symm (ConcreteBinaryTower.equivProd k h_k)) (hi_res, lo_res)\nhi_res_eq :\n  hi_res =\n    @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n      (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n        (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n        (@HMul.hMul (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n          (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHMulConcreteBinaryTower (k - 1)) a\u2080\n          b\u2081)\n        (@HMul.hMul (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n          (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHMulConcreteBinaryTower (k - 1)) b\u2080\n          a\u2081))\n      (@HMul.hMul (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n        (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHMulConcreteBinaryTower (k - 1))\n        (@HMul.hMul (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n          (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHMulConcreteBinaryTower (k - 1)) a\u2081\n          b\u2081)\n        (ConcreteBinaryTower.Z (k - 1)))\nlo_res_eq :\n  lo_res =\n    @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n      (@HMul.hMul (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n        (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHMulConcreteBinaryTower (k - 1)) a\u2080\n        b\u2080)\n      (@HMul.hMul (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n        (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHMulConcreteBinaryTower (k - 1)) a\u2081\n        b\u2081)\n\u22a2 (ConcreteBinaryTower.equivProd k h_k)\n      (@DFunLike.coe\n        (ConcreteBinaryTower.ConcreteBinaryTower (k - 1) \u00d7 ConcreteBinaryTower.ConcreteBinaryTower (k - 1) \u2243\n          ConcreteBinaryTower.ConcreteBinaryTower k)\n        (ConcreteBinaryTower.ConcreteBinaryTower (k - 1) \u00d7 ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n        (fun x => ConcreteBinaryTower.ConcreteBinaryTower k) Equiv.instFunLike\n        (Equiv.symm (ConcreteBinaryTower.equivProd k h_k))\n        (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n            (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n            (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n              (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n              (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n              (@HMul.hMul (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n                (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n                (ConcreteBinaryTower.instHMulConcreteBinaryTower (k - 1)) a\u2080 b\u2081)\n              (@HMul.hMul (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n                (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n                (ConcreteBinaryTower.instHMulConcreteBinaryTower (k - 1)) b\u2080 a\u2081))\n            (@HMul.hMul (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n              (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n              (ConcreteBinaryTower.instHMulConcreteBinaryTower (k - 1))\n              (@HMul.hMul (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n                (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n                (ConcreteBinaryTower.instHMulConcreteBinaryTower (k - 1)) a\u2081 b\u2081)\n              (ConcreteBinaryTower.Z (k - 1))),\n          @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n            (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n            (@HMul.hMul (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n              (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n              (ConcreteBinaryTower.instHMulConcreteBinaryTower (k - 1)) a\u2080 b\u2080)\n            (@HMul.hMul (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n              (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n              (ConcreteBinaryTower.instHMulConcreteBinaryTower (k - 1)) a\u2081 b\u2081))) =\n    (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n        (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n        (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n          (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n          (if h : k - 1 = 0 then\n            @ite (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (a\u2080 = ConcreteBinaryTower.zero (k - 1))\n              (ConcreteBinaryTower.instDecidableEqConcreteBinaryTower (k - 1) a\u2080 (ConcreteBinaryTower.zero (k - 1)))\n              (ConcreteBinaryTower.zero (k - 1))\n              (@ite (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (b\u2081 = ConcreteBinaryTower.zero (k - 1))\n                (ConcreteBinaryTower.instDecidableEqConcreteBinaryTower (k - 1) b\u2081 (ConcreteBinaryTower.zero (k - 1)))\n                (ConcreteBinaryTower.zero (k - 1))\n                (@ite (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (a\u2080 = ConcreteBinaryTower.one (k - 1))\n                  (ConcreteBinaryTower.instDecidableEqConcreteBinaryTower (k - 1) a\u2080 (ConcreteBinaryTower.one (k - 1)))\n                  b\u2081\n                  (@ite (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (b\u2081 = ConcreteBinaryTower.one (k - 1))\n                    (ConcreteBinaryTower.instDecidableEqConcreteBinaryTower (k - 1) b\u2081\n                      (ConcreteBinaryTower.one (k - 1)))\n                    a\u2080 (ConcreteBinaryTower.zero (k - 1)))))\n          else\n            @cast (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1 + 1))\n              (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n              (ConcreteBinaryTower.concrete_mul._proof_27 (k - 1)\n                (ConcreteBinaryTower.concrete_mul._proof_26 (k - 1)\n                  (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef)))\n              (ConcreteBinaryTower.join (k - 1 - 1)\n                (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                  (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                    (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                    (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                      (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                        (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                        (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                        (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                        (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2080).1\n                        (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2080).2)\n                      (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                        (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                        (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                        (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                        (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2081).1\n                        (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef)\n                            b\u2081).2))\n                    (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                        (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2080).2\n                        (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2081).2)\n                      (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                        (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2080).1\n                        (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef)\n                            b\u2081).1)))\n                  (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                    (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2080).1\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2081).1)\n                    (ConcreteBinaryTower.Z (k - 1 - 1))))\n                (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                    (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2080).2\n                    (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2081).2)\n                  (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                    (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2080).1\n                    (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2081).1))))\n          (if h : k - 1 = 0 then\n            @ite (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (b\u2080 = ConcreteBinaryTower.zero (k - 1))\n              (ConcreteBinaryTower.instDecidableEqConcreteBinaryTower (k - 1) b\u2080 (ConcreteBinaryTower.zero (k - 1)))\n              (ConcreteBinaryTower.zero (k - 1))\n              (@ite (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (a\u2081 = ConcreteBinaryTower.zero (k - 1))\n                (ConcreteBinaryTower.instDecidableEqConcreteBinaryTower (k - 1) a\u2081 (ConcreteBinaryTower.zero (k - 1)))\n                (ConcreteBinaryTower.zero (k - 1))\n                (@ite (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (b\u2080 = ConcreteBinaryTower.one (k - 1))\n                  (ConcreteBinaryTower.instDecidableEqConcreteBinaryTower (k - 1) b\u2080 (ConcreteBinaryTower.one (k - 1)))\n                  a\u2081\n                  (@ite (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (a\u2081 = ConcreteBinaryTower.one (k - 1))\n                    (ConcreteBinaryTower.instDecidableEqConcreteBinaryTower (k - 1) a\u2081\n                      (ConcreteBinaryTower.one (k - 1)))\n                    b\u2080 (ConcreteBinaryTower.zero (k - 1)))))\n          else\n            @cast (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1 + 1))\n              (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n              (ConcreteBinaryTower.concrete_mul._proof_27 (k - 1)\n                (ConcreteBinaryTower.concrete_mul._proof_26 (k - 1)\n                  (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef)))\n              (ConcreteBinaryTower.join (k - 1 - 1)\n                (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                  (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                    (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                    (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                      (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                        (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                        (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                        (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                        (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2080).1\n                        (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2080).2)\n                      (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                        (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                        (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                        (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                        (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2081).1\n                        (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef)\n                            a\u2081).2))\n                    (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                        (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2080).2\n                        (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2081).2)\n                      (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                        (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2080).1\n                        (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef)\n                            a\u2081).1)))\n                  (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                    (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2080).1\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2081).1)\n                    (ConcreteBinaryTower.Z (k - 1 - 1))))\n                (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                    (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2080).2\n                    (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2081).2)\n                  (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                    (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2080).1\n                    (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2081).1)))))\n        (if h : k - 1 = 0 then\n          @ite (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n            (ConcreteBinaryTower.concrete_mul (k - 1) a\u2081 b\u2081 = ConcreteBinaryTower.zero (k - 1))\n            (ConcreteBinaryTower.instDecidableEqConcreteBinaryTower (k - 1)\n              (ConcreteBinaryTower.concrete_mul (k - 1) a\u2081 b\u2081) (ConcreteBinaryTower.zero (k - 1)))\n            (ConcreteBinaryTower.zero (k - 1))\n            (@ite (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n              (ConcreteBinaryTower.Z (k - 1) = ConcreteBinaryTower.zero (k - 1))\n              (ConcreteBinaryTower.instDecidableEqConcreteBinaryTower (k - 1) (ConcreteBinaryTower.Z (k - 1))\n                (ConcreteBinaryTower.zero (k - 1)))\n              (ConcreteBinaryTower.zero (k - 1))\n              (@ite (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n                (ConcreteBinaryTower.concrete_mul (k - 1) a\u2081 b\u2081 = ConcreteBinaryTower.one (k - 1))\n                (ConcreteBinaryTower.instDecidableEqConcreteBinaryTower (k - 1)\n                  (ConcreteBinaryTower.concrete_mul (k - 1) a\u2081 b\u2081) (ConcreteBinaryTower.one (k - 1)))\n                (ConcreteBinaryTower.Z (k - 1))\n                (@ite (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n                  (ConcreteBinaryTower.Z (k - 1) = ConcreteBinaryTower.one (k - 1))\n                  (ConcreteBinaryTower.instDecidableEqConcreteBinaryTower (k - 1) (ConcreteBinaryTower.Z (k - 1))\n                    (ConcreteBinaryTower.one (k - 1)))\n                  (ConcreteBinaryTower.concrete_mul (k - 1) a\u2081 b\u2081) (ConcreteBinaryTower.zero (k - 1)))))\n        else\n          @cast (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1 + 1))\n            (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n            (ConcreteBinaryTower.concrete_mul._proof_27 (k - 1)\n              (ConcreteBinaryTower.concrete_mul._proof_26 (k - 1)\n                (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef)))\n            (ConcreteBinaryTower.join (k - 1 - 1)\n              (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                    (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef)\n                          (ConcreteBinaryTower.concrete_mul (k - 1) a\u2081 b\u2081)).1\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef)\n                          (ConcreteBinaryTower.concrete_mul (k - 1) a\u2081 b\u2081)).2)\n                    (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef)\n                          (ConcreteBinaryTower.Z (k - 1))).1\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef)\n                          (ConcreteBinaryTower.Z (k - 1))).2))\n                  (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                    (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                    (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef)\n                          (ConcreteBinaryTower.concrete_mul (k - 1) a\u2081 b\u2081)).2\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef)\n                          (ConcreteBinaryTower.Z (k - 1))).2)\n                    (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef)\n                          (ConcreteBinaryTower.concrete_mul (k - 1) a\u2081 b\u2081)).1\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef)\n                          (ConcreteBinaryTower.Z (k - 1))).1)))\n                (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                  (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                    (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef)\n                        (ConcreteBinaryTower.concrete_mul (k - 1) a\u2081 b\u2081)).1\n                    (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef)\n                        (ConcreteBinaryTower.Z (k - 1))).1)\n                  (ConcreteBinaryTower.Z (k - 1 - 1))))\n              (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                  (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef)\n                      (ConcreteBinaryTower.concrete_mul (k - 1) a\u2081 b\u2081)).2\n                  (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef)\n                      (ConcreteBinaryTower.Z (k - 1))).2)\n                (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                  (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef)\n                      (ConcreteBinaryTower.concrete_mul (k - 1) a\u2081 b\u2081)).1\n                  (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef)\n                      (ConcreteBinaryTower.Z (k - 1))).1)))),\n      @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n        (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1))\n        (if h : k - 1 = 0 then\n          @ite (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (a\u2080 = ConcreteBinaryTower.zero (k - 1))\n            (ConcreteBinaryTower.instDecidableEqConcreteBinaryTower (k - 1) a\u2080 (ConcreteBinaryTower.zero (k - 1)))\n            (ConcreteBinaryTower.zero (k - 1))\n            (@ite (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (b\u2080 = ConcreteBinaryTower.zero (k - 1))\n              (ConcreteBinaryTower.instDecidableEqConcreteBinaryTower (k - 1) b\u2080 (ConcreteBinaryTower.zero (k - 1)))\n              (ConcreteBinaryTower.zero (k - 1))\n              (@ite (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (a\u2080 = ConcreteBinaryTower.one (k - 1))\n                (ConcreteBinaryTower.instDecidableEqConcreteBinaryTower (k - 1) a\u2080 (ConcreteBinaryTower.one (k - 1))) b\u2080\n                (@ite (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (b\u2080 = ConcreteBinaryTower.one (k - 1))\n                  (ConcreteBinaryTower.instDecidableEqConcreteBinaryTower (k - 1) b\u2080 (ConcreteBinaryTower.one (k - 1)))\n                  a\u2080 (ConcreteBinaryTower.zero (k - 1)))))\n        else\n          @cast (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1 + 1))\n            (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n            (ConcreteBinaryTower.concrete_mul._proof_27 (k - 1)\n              (ConcreteBinaryTower.concrete_mul._proof_26 (k - 1)\n                (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef)))\n            (ConcreteBinaryTower.join (k - 1 - 1)\n              (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                    (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2080).1\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2080).2)\n                    (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2080).1\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2080).2))\n                  (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                    (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                    (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2080).2\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2080).2)\n                    (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2080).1\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2080).1)))\n                (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                  (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                    (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2080).1\n                    (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2080).1)\n                  (ConcreteBinaryTower.Z (k - 1 - 1))))\n              (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                  (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2080).2\n                  (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2080).2)\n                (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                  (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2080).1\n                  (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2080).1))))\n        (if h : k - 1 = 0 then\n          @ite (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (a\u2081 = ConcreteBinaryTower.zero (k - 1))\n            (ConcreteBinaryTower.instDecidableEqConcreteBinaryTower (k - 1) a\u2081 (ConcreteBinaryTower.zero (k - 1)))\n            (ConcreteBinaryTower.zero (k - 1))\n            (@ite (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (b\u2081 = ConcreteBinaryTower.zero (k - 1))\n              (ConcreteBinaryTower.instDecidableEqConcreteBinaryTower (k - 1) b\u2081 (ConcreteBinaryTower.zero (k - 1)))\n              (ConcreteBinaryTower.zero (k - 1))\n              (@ite (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (a\u2081 = ConcreteBinaryTower.one (k - 1))\n                (ConcreteBinaryTower.instDecidableEqConcreteBinaryTower (k - 1) a\u2081 (ConcreteBinaryTower.one (k - 1))) b\u2081\n                (@ite (ConcreteBinaryTower.ConcreteBinaryTower (k - 1)) (b\u2081 = ConcreteBinaryTower.one (k - 1))\n                  (ConcreteBinaryTower.instDecidableEqConcreteBinaryTower (k - 1) b\u2081 (ConcreteBinaryTower.one (k - 1)))\n                  a\u2081 (ConcreteBinaryTower.zero (k - 1)))))\n        else\n          @cast (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1 + 1))\n            (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n            (ConcreteBinaryTower.concrete_mul._proof_27 (k - 1)\n              (ConcreteBinaryTower.concrete_mul._proof_26 (k - 1)\n                (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef)))\n            (ConcreteBinaryTower.join (k - 1 - 1)\n              (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                  (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                    (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2081).1\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2081).2)\n                    (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2081).1\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2081).2))\n                  (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                    (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                    (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                    (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2081).2\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2081).2)\n                    (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2081).1\n                      (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2081).1)))\n                (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                  (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                    (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2081).1\n                    (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2081).1)\n                  (ConcreteBinaryTower.Z (k - 1 - 1))))\n              (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                (ConcreteBinaryTower.ConcreteBinaryTower (k - 1 - 1))\n                (ConcreteBinaryTower.instHAddConcreteBinaryTower (k - 1 - 1))\n                (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                  (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2081).2\n                  (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2081).2)\n                (ConcreteBinaryTower.concrete_mul (k - 1 - 1)\n                  (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) a\u2081).1\n                  (ConcreteBinaryTower.split (k - 1) (ConcreteBinaryTower.concrete_mul._proof_25 (k - 1) \u22ef) b\u2081).1)))))",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/07239abf174e702ac76fc6b9602920ac832dcd36/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L839"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-05T07:49:33.636701+00:00"
      },
      "id": "8a27fba73d0ebaf5bc3bb024d153290b638322f5faa8b9b5f7cac83abb428595"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "07239abf174e702ac76fc6b9602920ac832dcd36",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 843,
        "start_column": 2,
        "end_line": 843,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\ninstRingPrevConcreteBTF : Ring (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\ninstFieldPrevConcreteBTF : Field (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\nb : ConcreteBinaryTower.ConcreteBinaryTower k\n\u22a2 ConcreteBinaryTower.concrete_mul k (ConcreteBinaryTower.zero k) b = ConcreteBinaryTower.zero k",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/07239abf174e702ac76fc6b9602920ac832dcd36/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L843"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-05T07:49:33.636701+00:00"
      },
      "id": "3613592bfc3c708fbe4e1925380e165a21a210d0f7679230eb8197696f466f51"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "07239abf174e702ac76fc6b9602920ac832dcd36",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 847,
        "start_column": 2,
        "end_line": 847,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\ninstRingPrevConcreteBTF : Ring (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\ninstFieldPrevConcreteBTF : Field (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\na : ConcreteBinaryTower.ConcreteBinaryTower k\n\u22a2 ConcreteBinaryTower.concrete_mul k a (ConcreteBinaryTower.zero k) = ConcreteBinaryTower.zero k",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/07239abf174e702ac76fc6b9602920ac832dcd36/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L847"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-05T07:49:33.636701+00:00"
      },
      "id": "f589ad78eb02704e2a55735f1dfe5d37cae0c98fdf154d93918f86592510e2dd"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "07239abf174e702ac76fc6b9602920ac832dcd36",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 851,
        "start_column": 2,
        "end_line": 851,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\ninstRingPrevConcreteBTF : Ring (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\ninstFieldPrevConcreteBTF : Field (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\na : ConcreteBinaryTower.ConcreteBinaryTower k\n\u22a2 ConcreteBinaryTower.concrete_mul k (ConcreteBinaryTower.one k) a = a",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/07239abf174e702ac76fc6b9602920ac832dcd36/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L851"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-05T07:49:33.636701+00:00"
      },
      "id": "9590ed803ab132e0658273d4e4c19434443de7a8aa5f4282c29204e3fa541fb1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "07239abf174e702ac76fc6b9602920ac832dcd36",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 855,
        "start_column": 2,
        "end_line": 855,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\ninstRingPrevConcreteBTF : Ring (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\ninstFieldPrevConcreteBTF : Field (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\na : ConcreteBinaryTower.ConcreteBinaryTower k\n\u22a2 ConcreteBinaryTower.concrete_mul k a (ConcreteBinaryTower.one k) = a",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/07239abf174e702ac76fc6b9602920ac832dcd36/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L855"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-05T07:49:33.636701+00:00"
      },
      "id": "a4df7a0ae8c2622e6538cc8f0e74680a0ec31fd0c854d67cf28f1fc0d5643573"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "07239abf174e702ac76fc6b9602920ac832dcd36",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 859,
        "start_column": 2,
        "end_line": 859,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\ninstRingPrevConcreteBTF : Ring (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\ninstFieldPrevConcreteBTF : Field (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\na b c : ConcreteBinaryTower.ConcreteBinaryTower k\n\u22a2 ConcreteBinaryTower.concrete_mul k (ConcreteBinaryTower.concrete_mul k a b) c =\n    ConcreteBinaryTower.concrete_mul k a (ConcreteBinaryTower.concrete_mul k b c)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/07239abf174e702ac76fc6b9602920ac832dcd36/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L859"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-05T07:49:33.636701+00:00"
      },
      "id": "81243c35aa2a9a0f6f64d4922006ed3948be840c0414d2afec914e404742f51e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "07239abf174e702ac76fc6b9602920ac832dcd36",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 863,
        "start_column": 2,
        "end_line": 863,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\ninstRingPrevConcreteBTF : Ring (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\ninstFieldPrevConcreteBTF : Field (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\na b : ConcreteBinaryTower.ConcreteBinaryTower k\n\u22a2 ConcreteBinaryTower.concrete_mul k a b = ConcreteBinaryTower.concrete_mul k b a",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/07239abf174e702ac76fc6b9602920ac832dcd36/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L863"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-05T07:49:33.636701+00:00"
      },
      "id": "17560dea52847901dc158eb9a90cb307cd0de5e1c2cff47609c32dad7779ba8e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "07239abf174e702ac76fc6b9602920ac832dcd36",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 867,
        "start_column": 2,
        "end_line": 867,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\ninstRingPrevConcreteBTF : Ring (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\ninstFieldPrevConcreteBTF : Field (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\na b c : ConcreteBinaryTower.ConcreteBinaryTower k\n\u22a2 ConcreteBinaryTower.concrete_mul k a\n      (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower k) (ConcreteBinaryTower.ConcreteBinaryTower k)\n        (ConcreteBinaryTower.ConcreteBinaryTower k) (ConcreteBinaryTower.instHAddConcreteBinaryTower k) b c) =\n    @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower k) (ConcreteBinaryTower.ConcreteBinaryTower k)\n      (ConcreteBinaryTower.ConcreteBinaryTower k) (ConcreteBinaryTower.instHAddConcreteBinaryTower k)\n      (ConcreteBinaryTower.concrete_mul k a b) (ConcreteBinaryTower.concrete_mul k a c)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/07239abf174e702ac76fc6b9602920ac832dcd36/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L867"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-05T07:49:33.636701+00:00"
      },
      "id": "11fcba309a8eb40600268fd4954997d5f483cab01410b43c6fb76f7d6d78e4d0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "07239abf174e702ac76fc6b9602920ac832dcd36",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 871,
        "start_column": 2,
        "end_line": 871,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\ninstRingPrevConcreteBTF : Ring (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\ninstFieldPrevConcreteBTF : Field (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\na b c : ConcreteBinaryTower.ConcreteBinaryTower k\n\u22a2 ConcreteBinaryTower.concrete_mul k\n      (@HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower k) (ConcreteBinaryTower.ConcreteBinaryTower k)\n        (ConcreteBinaryTower.ConcreteBinaryTower k) (ConcreteBinaryTower.instHAddConcreteBinaryTower k) a b)\n      c =\n    @HAdd.hAdd (ConcreteBinaryTower.ConcreteBinaryTower k) (ConcreteBinaryTower.ConcreteBinaryTower k)\n      (ConcreteBinaryTower.ConcreteBinaryTower k) (ConcreteBinaryTower.instHAddConcreteBinaryTower k)\n      (ConcreteBinaryTower.concrete_mul k a c) (ConcreteBinaryTower.concrete_mul k b c)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/07239abf174e702ac76fc6b9602920ac832dcd36/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L871"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-05T07:49:33.636701+00:00"
      },
      "id": "0c860aff9fe57d6a9a86b5bf3c628b4729688512ba841ae709048ccd1ec8ed59"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "07239abf174e702ac76fc6b9602920ac832dcd36",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 875,
        "start_column": 2,
        "end_line": 875,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\ninstRingPrevConcreteBTF : Ring (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\ninstFieldPrevConcreteBTF : Field (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\na : ConcreteBinaryTower.ConcreteBinaryTower k\nh : a \u2260 0\n\u22a2 ConcreteBinaryTower.concrete_mul k a (ConcreteBinaryTower.concrete_inv k a) = ConcreteBinaryTower.one k",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/07239abf174e702ac76fc6b9602920ac832dcd36/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L875"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-05T07:49:33.636701+00:00"
      },
      "id": "287fcd900964f6b7173223ec469e09b5a0bd2807921dc61e9ce7258856d6a41f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "07239abf174e702ac76fc6b9602920ac832dcd36",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 895,
        "start_column": 17,
        "end_line": 895,
        "end_column": 22
      },
      "debug_info": {
        "goal": "k : \u2115\nh_k : k > 0\ninstRingPrevConcreteBTF : Ring (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\ninstFieldPrevConcreteBTF : Field (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\ninstRingEquivPrevConcreteBTF : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) \u2243+* BinaryTower.BTField (k - 1)\n\u22a2 ConcreteBinaryTower.concrete_inv k 0 = 0",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/07239abf174e702ac76fc6b9602920ac832dcd36/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L895"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-05T07:49:33.636701+00:00"
      },
      "id": "650998abc503569c22e7a3639b88d55a490d79316c41d12cd22f560e8611714b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "07239abf174e702ac76fc6b9602920ac832dcd36",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 904,
        "start_column": 6,
        "end_line": 904,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case mk\nk : \u2115\nh_k : k > 0\ninstRingPrevConcreteBTF : Ring (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\ninstFieldPrevConcreteBTF : Field (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\ninstRingEquivPrevConcreteBTF : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) \u2243+* BinaryTower.BTField (k - 1)\na : ConcreteBinaryTower.ConcreteBinaryTower k\nval\u271d : \u211a\nproperty\u271d : 0 \u2264 val\u271d\n\u22a2 @ite (ConcreteBinaryTower.ConcreteBinaryTower k) (\u27e8val\u271d, property\u271d\u27e9 = 0)\n      (LinearOrder.toDecidableEq \u27e8val\u271d, property\u271d\u27e9 0) 0 a =\n    @HMul.hMul (ConcreteBinaryTower.ConcreteBinaryTower k) (ConcreteBinaryTower.ConcreteBinaryTower k)\n      (ConcreteBinaryTower.ConcreteBinaryTower k) instHMul (\u2191\u27e8val\u271d, property\u271d\u27e9) a",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/07239abf174e702ac76fc6b9602920ac832dcd36/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L904"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-05T07:49:33.636701+00:00"
      },
      "id": "b400e51f253f3d805f68ca582a307888c34bee6f87a1da0a3a639abaaf23e615"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "07239abf174e702ac76fc6b9602920ac832dcd36",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 908,
        "start_column": 4,
        "end_line": 908,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case div\nk : \u2115\nh_k : k > 0\ninstRingPrevConcreteBTF : Ring (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\ninstFieldPrevConcreteBTF : Field (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\ninstRingEquivPrevConcreteBTF : ConcreteBinaryTower.ConcreteBinaryTower (k - 1) \u2243+* BinaryTower.BTField (k - 1)\na : ConcreteBinaryTower.ConcreteBinaryTower k\nn\u271d : \u2124\nd\u271d : \u2115\na\u271d\u00b9 : d\u271d \u2260 0\na\u271d : n\u271d.natAbs.Coprime d\u271d\n\u22a2 @ite (ConcreteBinaryTower.ConcreteBinaryTower k) (\u2191n\u271d / \u2191d\u271d = 0) (instDecidableEqRat (\u2191n\u271d / \u2191d\u271d) 0) 0 a =\n    @HMul.hMul (ConcreteBinaryTower.ConcreteBinaryTower k) (ConcreteBinaryTower.ConcreteBinaryTower k)\n      (ConcreteBinaryTower.ConcreteBinaryTower k) instHMul (\u2191(\u2191n\u271d / \u2191d\u271d)) a",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/07239abf174e702ac76fc6b9602920ac832dcd36/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L908"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-05T07:49:33.636701+00:00"
      },
      "id": "63335d0cf572816e2accdf4eb0fb89f77b0c9c0108849ad88ae81da9c8ee26c8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "07239abf174e702ac76fc6b9602920ac832dcd36",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 915,
        "start_column": 68,
        "end_line": 915,
        "end_column": 73
      },
      "debug_info": {
        "goal": "k : \u2115\ninstRingPrevConcreteBTF : Ring (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\ninstFieldPrevConcreteBTF : Field (ConcreteBinaryTower.ConcreteBinaryTower (k - 1))\n\u22a2 (ConcreteBinaryTower.toBTField k instRingPrevConcreteBTF instFieldPrevConcreteBTF) (ConcreteBinaryTower.Z k) =\n    BinaryTower.Z k",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/07239abf174e702ac76fc6b9602920ac832dcd36/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L915"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-05T07:49:33.636701+00:00"
      },
      "id": "cbf4e455cbff3734853e996160506ac6623c52edde289fdfa73f6e9bce4732cc"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 38,
        "start_column": 2,
        "end_line": 38,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\nG : SimpleGraph \u03b1\na : \u03b1\nw : G.Walk a a\nhw : Odd w.length\n\u22a2 \u2203 b p, Odd (\u2191p).length",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "e10e11b4a0d0da12425818ea90ce7907e975a825ada4e91e56f313ba0b033a19"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 57,
        "start_column": 2,
        "end_line": 57,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\n\u22a2 \u2203 a b, a \u2260 b \u2227 G.degree a = G.degree b",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L57"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "92f706eeaa3921b6fd873ca3f172534dd41220ea6dc98b988fcc4bb9d8b948ea"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 70,
        "start_column": 2,
        "end_line": 70,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\n\u03b1 : Type u_2\ninst\u271d\u00b9 : Finite \u03b1\ninst\u271d : Nontrivial \u03b1\nG : SimpleGraph \u03b1\nhG : G.Connected\nval\u271d : Fintype \u03b1\n\u22a2 \u2203 a, (\u22a4.deleteVerts {a}).coe.Connected",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L70"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2022-11-20T17:08:07+00:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "9e635128b3844ec91b13e06d4586270aed356e200bc0c96bbf2b2dbe713677d0"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 83,
        "start_column": 2,
        "end_line": 83,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case inr\n\u03b1 : Type u_2\ninst\u271d\u00b2 : Fintype \u03b1\ninst\u271d\u00b9 : DecidableEq \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\nhG : G.IsAcyclic\nh\u271d : Nonempty \u03b1\n\u22a2 G.edgeFinset.card \u2264 card \u03b1 - 1",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L83"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2022-11-20T17:08:07+00:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "9607009bda7494d0d9bb2e1f1948664c8cd30d3112c644840649443de87a7fbb"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 101,
        "start_column": 2,
        "end_line": 101,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d : Fintype \u03b1\ns : Multiset \u2115\nhs : s.card = card \u03b1\nh\u2080 : 0 \u2209 s\n\u22a2 s.sum = 2 * card \u03b1 - 2 \u2194 \u2203 G x, @GraphTheory.ES1.degreeSequence \u03b1 inst\u271d G x = s",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L101"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "86136d3bd93ebd6e752d276aa5acdb3d96f52d9de3be4b4eb66ec75910fae62c"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 113,
        "start_column": 2,
        "end_line": 113,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\n\u03b1 : Type u_2\nG : SimpleGraph \u03b1\nhG : G.IsAcyclic\ns : Finset \u03b9\nf : \u03b9 \u2192 G.Subgraph\nhf : \u2200 i \u2208 s, (f i).coe.IsAcyclic\nh : \u2200 i \u2208 s, \u2200 j \u2208 s, f i \u2293 f j \u2260 \u22a5\n\u22a2 s.inf f \u2260 \u22a5",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L113"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "d2cfbb1a20dce777e995d4b18a008d36e7f7badc126d47bf52126fd4312b903c"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 128,
        "start_column": 2,
        "end_line": 128,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\n\u22a2 \u2203 H x, \u2200 (a : \u03b1), @GraphTheory.ES1.averageDegree \u03b1 inst\u271d\u00b9 G inst\u271d / 2 \u2264 \u2191(H.degree a)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L128"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "a68e533cdf8776bf48848a55915523123ccc9bba5253d3c7fdfa3c7420d27be6"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 145,
        "start_column": 2,
        "end_line": 145,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\n\u22a2 (\u2203 \ud835\udc9c,\n      (\u2200 (p q : (a : \u03b1) \u00d7 G.Path a a), (\u2191p.snd).edges.Disjoint (\u2191q.snd).edges) \u2227\n        \u2200 (e : Sym2 \u03b1), \u2203 p \u2208 \ud835\udc9c, e \u2208 (\u2191p.snd).edges) \u2194\n    \u2200 (a : \u03b1), Even (G.degree a)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L145"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "d5b65411efdb3d048dc260c19777a50f1db2483d7656002080c527f7a915c289"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 160,
        "start_column": 2,
        "end_line": 160,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\ninst\u271d : DecidableEq \u03b1\nn : \u2115\n\u22a2 (\u2203 G x k, G.IsRegularOfDegree k \u2227 G.cliqueNum = n) \u2194 n \u2264 card \u03b1 / 2 \u2228 n = card \u03b1",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L160"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "edbc4cb725aec80231e17ddc5c8272bf0e8fe0061bed885b22ee20eb9004c267"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 181,
        "start_column": 2,
        "end_line": 181,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : DecidableEq \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\ns : Finset \u03b1\n\u22a2 \u2203 u v,\n    Disjoint u v \u2227\n      u \u222a v = s \u2227\n        (\u2200 a \u2208 u, Even (Cardinal.mk { x // x \u2208 {b \u2208 u | G.Adj a b} })) \u2227\n          \u2200 a \u2208 v, Even (Cardinal.mk { x // x \u2208 {b \u2208 v | G.Adj a b} })",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L181"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "fbe999b992695f1f946ed9e1496736a1560029f49640f2cf7c9821db3f96a218"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 197,
        "start_column": 2,
        "end_line": 197,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\n\u03b2 : Type u_3\ninst\u271d : Finite \u03b1\ng : \u03b2 \u21aa \u03b1\nf : \u03b2 \u2192 \u03b1 \u2192 \u03b1\nhf : @GraphTheory.ES1.IsLatin \u03b2 \u03b1 \u03b1 f\n\u22a2 \u2203 f', f' \u2218 \u21d1g = f \u2227 @GraphTheory.ES1.IsLatin \u03b2 \u03b1 \u03b1 f",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "5a219c8acd8f290315f845ebdbafffb1e47234c93d33b57d4e92c0e9a6243201"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 214,
        "start_column": 2,
        "end_line": 214,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 r, (\u2200 (A : Finset \u2115), \u2191A.card \u2264 Cardinal.mk \u2191(Rel.image r \u2191A)) \u2227 \u2200 (f : \u2115 \u2192 \u2115), Injective f \u2192 \u2203 n, \u00acr n (f n)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L214"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "5f617c345c045e35ac9bcbedcfb34a1765e1fc7e1135c068f4712b4d249b331c"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 219,
        "start_column": 2,
        "end_line": 219,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\n\u03b2 : Type u_3\ninst\u271d\u00b3 : DecidableEq \u03b2\ninst\u271d\u00b2 : Countable \u03b1\ninst\u271d\u00b9 : Countable \u03b2\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\ninst\u271d : (a : \u03b1) \u2192 Fintype \u2191(Rel.image r {a})\nhr : \u2200 (A : Finset \u03b1), A.card \u2264 card \u2191(Rel.image r \u2191A)\n\u22a2 \u2203 f, Injective f \u2227 \u2200 (a : \u03b1), r a (f a)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L219"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "03cf2842ac134e8eb7a685ca7e4dea0cb7e3c4f66d299f22e0d26b2502cfce6e"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 224,
        "start_column": 2,
        "end_line": 224,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\n\u03b2 : Type u_3\ninst\u271d\u00b9 : DecidableEq \u03b2\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\ninst\u271d : (a : \u03b1) \u2192 Fintype \u2191(Rel.image r {a})\nhr : \u2200 (A : Finset \u03b1), A.card \u2264 card \u2191(Rel.image r \u2191A)\n\u22a2 \u2203 f, Injective f \u2227 \u2200 (a : \u03b1), r a (f a)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L224"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "8adff2188150f8c1c85fd49e63b22df5a71f9820be3b74db7f86229c1754275d"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 247,
        "start_column": 2,
        "end_line": 247,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 \u03b5,\n    0 < \u03b5 \u2227\n      \u2200 (\u03b1 : Type u_5) [inst : Fintype \u03b1],\n        \u2203 x,\n          \u2200 (f : \u03b1 \u2192 \u211d \u00d7 \u211d),\n            \u03b5 * \u221a\u2191(card \u03b1) \u2264\n              @GraphTheory.ES1.distortion \u03b1 (\u211d \u00d7 \u211d) MetricSpace.toPseudoMetricSpace Prod.pseudoMetricSpaceMax f",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L247"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "c4943c469704d7d2fbdfdd98d815a69ed496ff7a842d14c56de54815108efc2e"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 252,
        "start_column": 2,
        "end_line": 252,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 \u03b5,\n    0 < \u03b5 \u2227\n      \u2200 (\u03b1 : Type u_5) [inst : Fintype \u03b1],\n        \u2203 x,\n          \u2200 (f : \u03b1 \u2192 \u211d \u00d7 \u211d),\n            \u03b5 * \u2191(card \u03b1) \u2264\n              @GraphTheory.ES1.distortion \u03b1 (\u211d \u00d7 \u211d) MetricSpace.toPseudoMetricSpace Prod.pseudoMetricSpaceMax f",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L252"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "bcb8c2e27aba0d048e9475acaedde2463facc27ccd65440e67931ade7c7c5554"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BinomialRandomGraph.lean",
        "start_line": 46,
        "start_column": 75,
        "end_line": 46,
        "end_column": 80
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d : MeasurableSpace \u03a9\nG : \u03a9 \u2192 SimpleGraph \u03b1\np : NNReal\n\u03bc : Measure \u03a9\nhG : @IsBinomialRandomGraph \u03b1 \u03a9 inst\u271d G p \u03bc\n\u22a2 iIndepFun (fun e \u03c9 => e \u2208 (G \u03c9).edgeSet) \u03bc",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/ExtrProbCombi/BinomialRandomGraph.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-06T17:45:28+00:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "0175ae0281bd62077d5d4f19c331e021b7843d0dbbb1e1bff8cfc0cefe050c8e"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 117,
        "start_column": 8,
        "end_line": 117,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case refine_1.refine_1\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ni : \u03b1\n\u22a2 MeasurableSet fun \u03c9 => X \u03c9 i",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L117"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "4caf4ade69a84ccd234d27bb4cc6bde5afc7bd063e08c76e96d181dc221e8ca9"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 118,
        "start_column": 8,
        "end_line": 118,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case refine_1.refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ni : \u03b1\n\u22a2 MeasurableSet fun \u03c9 => Y \u03c9 i",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L118"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "cd22d6f575eeb3a4de3dbfd1cbe1f3f8f43c694bba242cff0a6ee0b43597b5ef"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 126,
        "start_column": 8,
        "end_line": 126,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case refine_2.refine_1\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\ni : \u03b1\nhi : i \u2208 s\n\u22a2 MeasurableSet {\u03c9 | X \u03c9 i}",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L126"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "359f9bbe68b70a8a2e997973ac354f21f1fb12b0468b235594a1ceef621759f3"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 127,
        "start_column": 8,
        "end_line": 127,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case refine_2.refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\ni : \u03b1\nhi : i \u2208 s\n\u22a2 MeasurableSet {\u03c9 | Y \u03c9 i}",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L127"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "791caaaf17a3c20ec634924f785a2f480ac430cebd2bac9e71f475cd345a75e2"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 128,
        "start_column": 6,
        "end_line": 128,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 \u2200 i \u2208 s, MeasurableSet {\u03c9 | Y \u03c9 i}",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L128"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "5bb84babcd78f091cc023bd6738ce84c3acaafc0b56b5e7f9b2d2f04ae5f92ad"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 129,
        "start_column": 6,
        "end_line": 129,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 \u2200 i \u2208 s, MeasurableSet {\u03c9 | X \u03c9 i}",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L129"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "ce2ef5e603021b899792107fb8b259d4dd640dd7cbcb0d6c89254291eee7fee0"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 130,
        "start_column": 6,
        "end_line": 130,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case refine_2.hs\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 MeasurableSet (\u22c2 i \u2208 s, {\u03c9 | X \u03c9 i})",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L130"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "20ec33aacb7740090aab3f0aef2626c3479113ed93460e41462672a8f090b787"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 131,
        "start_column": 6,
        "end_line": 131,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case refine_2.ht\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 MeasurableSet (\u22c2 i \u2208 s, {\u03c9 | Y \u03c9 i})",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L131"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "adf3ea8e2bc3b10ef6bf5aa9daf8dcfcd483b058c2eeddb832792ae9336f6ee6"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 132,
        "start_column": 11,
        "end_line": 132,
        "end_column": 16
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\na : \u03b1\n\u22a2 Measure.map (fun \u03c9 => a \u2208 X \u03c9 \u2229 Y \u03c9) \u03bc = (PMF.bernoulli' (p * q) \u22ef).toMeasure",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L132"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "97b24ac86f19cfa414ab6aff3e91a626dac17a024da40845082bd3b94011c06f"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BollobasContainment.lean",
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\n\u03a9 : Type u_3\ninst\u271d\u2074 : Fintype \u03b2\nG : \u2115 \u2192 \u03a9 \u2192 SimpleGraph \u03b1\nH : SimpleGraph \u03b2\ninst\u271d\u00b3 : Fintype \u2191H.edgeSet\ninst\u271d\u00b2 : (n : \u2115) \u2192 (\u03c9 : \u03a9) \u2192 DecidableRel (G n \u03c9).Adj\ninst\u271d\u00b9 : MeasurableSpace \u03a9\n\u03bc : Measure \u03a9\ninst\u271d : IsProbabilityMeasure \u03bc\np : \u2115 \u2192 NNReal\nhp : (fun n => \u2191(p n)) =o[atTop] fun n => \u2191n ^ (-\u2191H.maxEdgeSubdensity\u207b\u00b9)\n\u22a2 Tendsto (fun n => \u03bc {\u03c9 | H.IsContained (G n \u03c9)}) atTop (nhds 0)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/ExtrProbCombi/BollobasContainment.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "557507189465558f50a0269d135782c7306304e21518b7c34664538f9d3b523c"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BollobasContainment.lean",
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\n\u03a9 : Type u_3\ninst\u271d\u2074 : Fintype \u03b2\nG : \u2115 \u2192 \u03a9 \u2192 SimpleGraph \u03b1\nH : SimpleGraph \u03b2\ninst\u271d\u00b3 : Fintype \u2191H.edgeSet\ninst\u271d\u00b2 : (n : \u2115) \u2192 (\u03c9 : \u03a9) \u2192 DecidableRel (G n \u03c9).Adj\ninst\u271d\u00b9 : MeasurableSpace \u03a9\n\u03bc : Measure \u03a9\ninst\u271d : IsProbabilityMeasure \u03bc\np : \u2115 \u2192 NNReal\nhp : (fun n => \u2191n ^ (-\u2191H.maxEdgeSubdensity\u207b\u00b9)) =o[atTop] fun n => \u2191(p n)\n\u22a2 Tendsto (fun n => \u03bc {\u03c9 | H.IsContained (G n \u03c9)}) atTop (nhds 1)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/ExtrProbCombi/BollobasContainment.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "82338f17f08d1dcfdc56dbc07c8e970ccd8e7a8df68661311849ff43381f4544"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/PlainCombi/VanDenBergKesten.lean",
        "start_line": 97,
        "start_column": 72,
        "end_line": 97,
        "end_column": 77
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : Fintype \u03b1\n\ud835\udc9c \u212c : Finset (Finset \u03b1)\n\u22a2 2 ^ Fintype.card \u03b1 * card (@Finset.certificator (Finset \u03b1) booleanAlgebra \ud835\udc9c \u212c) \u2264 \ud835\udc9c.card * \u212c.card",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/PlainCombi/VanDenBergKesten.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-21T08:29:20+00:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "421def03cac571de055a57a3934efaec512490bdcc76071201bcd6cf9c9a58e4"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/PlainCombi/LittlewoodOfford.lean",
        "start_line": 33,
        "start_column": 2,
        "end_line": 33,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case insert.intro.intro.intro.intro.intro\n\u03b9 : Type u_1\nE : Type u_2\ninst\u271d\u00b2 : NormedAddCommGroup E\ninst\u271d\u00b9 : NormedSpace \u211d E\ns\u271d : Finset \u03b9\nf : \u03b9 \u2192 E\nr : \u211d\ninst\u271d : DecidableEq \u03b9\nhr : 0 < r\ni : \u03b9\ns : Finset \u03b9\nhi : i \u2209 s\nhf : \u2200 i_1 \u2208 insert i s, r \u2264 \u2016f i_1\u2016\nP : Finpartition s.powerset\nhP : P.parts.card = s.card.choose (s.card / 2)\nhs : \u2200 \ud835\udc9c \u2208 P.parts, \u2200 t \u2208 \ud835\udc9c, t \u2286 s\nhPr : \u2200 \ud835\udc9c \u2208 P.parts, (\u2191\ud835\udc9c).Pairwise fun u v => r \u2264 dist (\u2211 i \u2208 u, f i) (\u2211 i \u2208 v, f i)\ng : E \u2192L[\u211d] \u211d\nhg : \u2016g\u2016 = 1\nhgf : g (f i) = \u2191\u2016f i\u2016\nt : Finset (Finset \u03b9) \u2192 Finset \u03b9\nht : \u2200 \ud835\udc9c \u2208 P.parts, t \ud835\udc9c \u2208 \ud835\udc9c \u2227 \u2200 x' \u2208 \ud835\udc9c, g (\u2211 i \u2208 x', f i) \u2264 g (\u2211 i \u2208 t \ud835\udc9c, f i)\n\u22a2 \u2203 P,\n    P.parts.card = (insert i s).card.choose ((insert i s).card / 2) \u2227\n      (\u2200 \ud835\udc9c \u2208 P.parts, \u2200 t \u2208 \ud835\udc9c, t \u2286 insert i s) \u2227\n        \u2200 \ud835\udc9c \u2208 P.parts, (\u2191\ud835\udc9c).Pairwise fun u v => r \u2264 dist (\u2211 i \u2208 u, f i) (\u2211 i \u2208 v, f i)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/PlainCombi/LittlewoodOfford.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "cc48c124afabc7f8b1da982ce21c13fcc2ccd83fea6adf609afc34f0f5ec375c"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GrowthInGroups/Lecture4.lean",
        "start_line": 25,
        "start_column": 60,
        "end_line": 25,
        "end_column": 65
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nC\u2080 : \u211d\nhC\u2080 : \u2191(Fintype.card n) < C\u2080\nK : \u211d\n\u22a2 \u2203 \u03b4,\n    \u2200 (A : Finset (GL n \u2102)),\n      IsApproximateSubgroup K \u2191A \u2192 (\u2200 a \u2208 A, \u2016\u2191a\u2016 \u2264 C\u2080) \u2192 \u2203 \u03b3 \u2208 A ^ 2, \u03b4 * \u2191A.card \u2264 \u2191{x \u2208 A ^ 4 | Commute \u03b3 x}.card",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/GrowthInGroups/Lecture4.lean#L25"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-11-16T11:30:19+00:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "8f5d527031df86b0c1be0942bf2a4d260140de69e44374d3601ab6f3c07a04a5"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GrowthInGroups/Lecture4.lean",
        "start_line": 30,
        "start_column": 30,
        "end_line": 30,
        "end_column": 35
      },
      "debug_info": {
        "goal": "K C\u2080 : \u211d\n\u22a2 \u2203 C > 0,\n    \u2200 (A : Set (Matrix.SpecialLinearGroup (Fin 2) \u2102)),\n      IsApproximateSubgroup K A \u2192 \u2203 Z, \u2203 (_ : \u2200 x \u2208 Z, \u2200 y \u2208 Z, Commute x y), \u2203 F, F.card \u2264 C \u2227 A \u2286 \u2191F * \u2191Z",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/GrowthInGroups/Lecture4.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-11-16T11:30:19+00:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "5b5eee381fa6414064a7603622a6b271a4f724c0250d7098dfb5c6aad0434e17"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GrowthInGroups/Lecture4.lean",
        "start_line": 41,
        "start_column": 69,
        "end_line": 41,
        "end_column": 74
      },
      "debug_info": {
        "goal": "C : \u211d\nG : Type u_2\ninst\u271d\u00b9 : Group G\ninst\u271d : DecidableEq G\nS : Finset G\nhSsymm : S\u207b\u00b9 = S\nhSgen : \u2191(Subgroup.closure \u2191S) = Set.univ\nd : \u2115\nhS : \u2200 (n : \u2115), \u2191(S ^ n).card \u2264 C * \u2191n ^ d\n\u22a2 IsVirtuallyNilpotent G",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/GrowthInGroups/Lecture4.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-11-16T11:30:19+00:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "aa6fcb38319bf77cbde3f6d9cda16ad17d5813c6cc5a4028aaa6d0aac2084937"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 24,
        "start_column": 6,
        "end_line": 24,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case refine_2\n\u03b9 : Type u_2\nG : \u03b9 \u2192 Type u_3\ninst\u271d\u00b9 : Fintype \u03b9\ninst\u271d : (i : \u03b9) \u2192 Group (G i)\nA : (i : \u03b9) \u2192 Set (G i)\nK : \u03b9 \u2192 \u211d\nhA : \u2200 (i : \u03b9), IsApproximateSubgroup (K i) (A i)\nF : (i : \u03b9) \u2192 Finset (G i)\nhF : \u2200 (i : \u03b9), \u2191(F i).card \u2264 K i\nhFS : \u2200 (i : \u03b9), A i ^ 2 \u2286 \u2191(F i) \u2022 A i\n\u22a2 Set.univ.pi A ^ 2 \u2286 \u2191(Fintype.piFinset F) \u2022 Set.univ.pi A",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L24"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "c64af3fb6051b65479cd6fa1fb7896f19ea1915a6b5822232764e86f7c2a21d8"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 42,
        "start_column": 64,
        "end_line": 42,
        "end_column": 69
      },
      "debug_info": {
        "goal": "case h\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op g \u2022 A \u2229 A).card}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\na\u271d : G\n\u22a2 a\u271d \u2208 A\u207b\u00b9 * A \u2192\n    (\u2191A.card / (2 * K) \u2264 \u2191((MulOpposite.op a\u271d)\u207b\u00b9 \u2022 A \u2229 A).card \u2194 \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op a\u271d \u2022 A \u2229 A).card)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "a149d095ec408be3dfe8cd3cf9e59c5b81793a455d937cfdae57926260d8cb68"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 59,
        "start_column": 4,
        "end_line": 59,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case intro.intro.intro.refine_2\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op g \u2022 A \u2229 A).card}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191S.card \u2264 K ^ 2 * \u2191A.card\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191F.card \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2191(S ^ 2).card \u2264 16 * K ^ 12 * \u2191A.card",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L59"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "f2c0f77c79762bb8e17e0d6410726fc6267e245d1b864c393fe0c921a595eb6f"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 60,
        "start_column": 4,
        "end_line": 60,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case intro.intro.intro.refine_3\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op g \u2022 A \u2229 A).card}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191S.card \u2264 K ^ 2 * \u2191A.card\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191F.card \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2203 a \u2208 A, \u2191A.card / (2 * K) \u2264 \u2191(A \u2229 MulOpposite.op a \u2022 S ^ 2).card",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "77f2efcdb31d27afae0954e5546a3d16020c9e6d32eb57e829075d208bd98ea2"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 45,
        "start_column": 22,
        "end_line": 45,
        "end_column": 27
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op g \u2022 A \u2229 A).card}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\n\u22a2 \u2191(A\u207b\u00b9 * A).card \u2264 K ^ 2 * \u2191A.card",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L45"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "5da70845b20af19e1351b3d69875dd2fa51787cd18d5e2fa538b4fd992bcb50b"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 46,
        "start_column": 69,
        "end_line": 46,
        "end_column": 74
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op g \u2022 A \u2229 A).card}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191S.card \u2264 K ^ 2 * \u2191A.card\n\u22a2 \u2203 F \u2286 A, \u2191F.card \u2264 2 * K \u2227 A \u2286 S * F",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "7b0c6650189400dd9b69d11c460d05b7b9a7c0d519d89e1089adcfc14c0cc7d3"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "9e8509d93ec5b30bfdbad252bd8a0067d59fac10",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 54,
        "start_column": 29,
        "end_line": 54,
        "end_column": 34
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op g \u2022 A \u2229 A).card}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191S.card \u2264 K ^ 2 * \u2191A.card\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191F.card \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2191(A * S ^ 3 * A\u207b\u00b9).card \u2264 8 * K ^ 11 * \u2191A.card",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/9e8509d93ec5b30bfdbad252bd8a0067d59fac10/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-06-05T08:00:44.183652+00:00"
      },
      "id": "71417cb7616b9fe230110e132bd2f7c81689105a0ed87966d8abdee494df2bfd"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Examples/Regev.lean",
        "start_line": 426,
        "start_column": 2,
        "end_line": 426,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n m p : \u2115\nhp2 : p.AtLeastTwo\ninst\u271d : NeZero m\n\u03c7 : \u2115\nhe : p > 4 * (\u03c7 * m + 1)\nadv : IND_CPA_Adv (uniformRegevAsymmEnc n m p hp2 inst\u271d \u03c7 he)\n\u22a2 failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/Examples/Regev.lean#L426"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-27T11:58:04-04:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "6ee056c66292694be02a73ef5a92841b9628f4eb7db3776d90b00ea335e6fb25"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Examples/HHS_Elgamal.lean",
        "start_line": 93,
        "start_column": 4,
        "end_line": 93,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case e_a.e_a\nG P : Type\ninst\u271d\u2076 : SelectableType G\ninst\u271d\u2075 : SelectableType P\ninst\u271d\u2074 : AddCommGroup G\ninst\u271d\u00b3 : Group P\ninst\u271d\u00b2 : AddTorsor G P\ninst\u271d\u00b9 : DecidableEq G\ninst\u271d : DecidableEq P\nadversary : IND_CPA_adversary (elgamalAsymmEnc G P inst\u271d\u2076 inst\u271d\u2075 inst\u271d\u2074.toAddGroup inst\u271d\u00b3 inst\u271d\u00b2)\nx : P\ng\u2081 : G\n\u22a2 [=()|do\n      let a \u2190\n        (simulateQ\n                (idOracle ++\u209b\u2092\n                  {\n                      impl := fun {\u03b1} x_1 =>\n                        match \u03b1, x_1 with\n                        | .((P \u00d7 P \u2192\u2092 P \u00d7 P).range ()), query PUnit.unit (m\u2081, m\u2082) =>\n                          (fun a => (a +\u1d65 x, m\u2081 * (a +\u1d65 g\u2081 +\u1d65 x))) <$> ($\u1d57G) }.withCaching)\n                (adversary (x, g\u2081 +\u1d65 x))).run\n            \u2205\n      if a.1 = true then pure () else failure] =\n    [=()|do\n      let c \u2190 $\u1d57G\n      let b' \u2190\n        simulateQ\n            (idOracle ++\u209b\u2092\n              {\n                impl := fun {\u03b1} x_1 =>\n                  @elgamalAsymmEnc.IND_CPA_parallelTesting_reduction.match_1 P (fun \u03b1 x => ProbComp \u03b1) \u03b1 x_1\n                    fun m\u2081 _m\u2082 => pure (c +\u1d65 x, m\u2081 * (c +\u1d65 g\u2081 +\u1d65 x)) })\n            (adversary (x, g\u2081 +\u1d65 x))\n      if b' = true then pure () else failure]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/Examples/HHS_Elgamal.lean#L93"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "1d421ea91cfcd24b5e5e83f52f28453d19ae1eb768de8c41d2239a91372acfa9"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Examples/HHS_Elgamal.lean",
        "start_line": 98,
        "start_column": 4,
        "end_line": 98,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case e_a.e_a\nG P : Type\ninst\u271d\u2076 : SelectableType G\ninst\u271d\u2075 : SelectableType P\ninst\u271d\u2074 : AddCommGroup G\ninst\u271d\u00b3 : Group P\ninst\u271d\u00b2 : AddTorsor G P\ninst\u271d\u00b9 : DecidableEq G\ninst\u271d : DecidableEq P\nadversary : IND_CPA_adversary (elgamalAsymmEnc G P inst\u271d\u2076 inst\u271d\u2075 inst\u271d\u2074.toAddGroup inst\u271d\u00b3 inst\u271d\u00b2)\nx : P\ng\u2081 : G\n\u22a2 [=()|do\n      let a \u2190\n        (simulateQ\n                (idOracle ++\u209b\u2092\n                  {\n                      impl := fun {\u03b1} x_1 =>\n                        match \u03b1, x_1 with\n                        | .((P \u00d7 P \u2192\u2092 P \u00d7 P).range ()), query PUnit.unit (m\u2081, m\u2082) =>\n                          (fun a => (a +\u1d65 x, m\u2082 * (a +\u1d65 g\u2081 +\u1d65 x))) <$> ($\u1d57G) }.withCaching)\n                (adversary (x, g\u2081 +\u1d65 x))).run\n            \u2205\n      if a.1 = false then pure () else failure] =\n    [=()|do\n      let c \u2190 $\u1d57G\n      let y \u2190 $\u1d57P\n      let b' \u2190\n        simulateQ\n            (idOracle ++\u209b\u2092\n              {\n                impl := fun {\u03b1} x_1 =>\n                  @elgamalAsymmEnc.IND_CPA_parallelTesting_reduction.match_1 P (fun \u03b1 x => ProbComp \u03b1) \u03b1 x_1\n                    fun m\u2081 _m\u2082 => pure (c +\u1d65 x, m\u2081 * y) })\n            (adversary (x, g\u2081 +\u1d65 x))\n      if b' = false then pure () else failure]",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/Examples/HHS_Elgamal.lean#L98"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "bfcde7e4e22f971c472ee59eaacdb9ab3690c496ba6f6a710a786f84a7f41841"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/EvalDist/Basic.lean",
        "start_line": 270,
        "start_column": 23,
        "end_line": 270,
        "end_column": 28
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 \u03b3 : Type u\nm : Type u \u2192 Type v\ninst\u271d\u00b9 : Monad m\ninst\u271d : @HasEvalDist m inst\u271d\u00b9\n\u03b1\u271d \u03b2\u271d : Type u_1\nx : PMF \u03b1\u271d\ny : \u03b1\u271d \u2192 PMF \u03b2\u271d\n\u22a2 (OptionT.mk do\n      let a \u2190 x >>= y\n      Pure.pure (some a)) =\n    do\n    let x \u2190\n      OptionT.mk do\n          let a \u2190 x\n          Pure.pure (some a)\n    OptionT.mk do\n        let a \u2190 y x\n        Pure.pure (some a)",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/EvalDist/Basic.lean#L270"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-06-04T21:00:14-07:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "19354deaa7a1e3ae15cb7983fd77ad9fda34c68bf038b387c501695fdd4664a9"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/Fork.lean",
        "start_line": 274,
        "start_column": 53,
        "end_line": 274,
        "end_column": 58
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\nspec : OracleSpec \u03b9\ninst\u271d\u00b3 : (i : \u03b9) \u2192 SelectableType (spec.range i)\ninst\u271d\u00b2 : spec.DecidableEq\ninst\u271d\u00b9 : unifSpec \u2282\u2092 spec\n\u03b1 : Type\nmain : OracleComp spec \u03b1\nqb : \u03b9 \u2192 \u2115\njs : List \u03b9\ni : \u03b9\ncf : \u03b1 \u2192 Option (Fin (qb i + 1))\ninst\u271d : spec.FiniteRange\ns : Fin (qb i + 1)\nh : ENNReal := \u22ef\nthis\u271d : DecidableEq \u03b1\nthis : DecidableEq spec.QuerySeed\nseed : spec.QuerySeed\nhseed : seed \u2208 (liftM (generateSeed spec qb js)).support\n\u22a2 \u2191(s + 1) < (seed i).length",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/Fork.lean#L274"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-25T15:22:19-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "65f79423aaf142803b33a6152fc2bed8ea38bc25475102b97be8ac8e3b6ffc88"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/CryptoFoundations/SymmEncAlg.lean",
        "start_line": 66,
        "start_column": 2,
        "end_line": 66,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : Type \u2192 Type v\nM K C : Type\ninst\u271d\u2075 : AlternativeMonad m\ninst\u271d\u2074 : LawfulAlternative m\ninst\u271d\u00b3 : Fintype M\ninst\u271d\u00b2 : Fintype K\ninst\u271d\u00b9 : Fintype C\nencAlg : @SymmEncAlg m M K C\ninst\u271d : @SymmEncAlg.Complete m M K C inst\u271d\u2075 encAlg\nh1 : Fintype.card M = Fintype.card K\nh2 : Fintype.card K = Fintype.card C\n\u22a2 failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/CryptoFoundations/SymmEncAlg.lean#L66"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "c429cfbc126808e2f165790db13c5c317f6a44d77f3c354673ac8dd4ada2dc3b"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/ProgramLogic/Unary/DijkstraMonad.lean",
        "start_line": 138,
        "start_column": 45,
        "end_line": 138,
        "end_column": 50
      },
      "debug_info": {
        "goal": "m : Type u \u2192 Type v\nn : Type u \u2192 Type w\nw : Type u_1 \u2192 Type u_2\nd : {\u03b1 : Type u_1} \u2192 w \u03b1 \u2192 Type u_3\ninst\u271d\u00b2 : Monad w\ninst\u271d\u00b9 : @DijkstraMonad w d inst\u271d\u00b2\nh : LawfulMonad w\ninst\u271d : @LawfulDijkstraMonad w (fun {\u03b1} => d) inst\u271d\u00b2 h inst\u271d\u00b9\n\u03b1 : Type u_1\nx : w \u03b1\ny : d x\n\u22a2 (@DijkstraMonad.dBind w d inst\u271d\u00b2 inst\u271d\u00b9 \u03b1 \u03b1 x (fun a => pure a) y fun a =>\n      @DijkstraMonad.dPure w d inst\u271d\u00b2 inst\u271d\u00b9 \u03b1 a) \u224d\n    y",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/ProgramLogic/Unary/DijkstraMonad.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-23T11:21:13+07:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "b9a5f88248065ac41ae8a268441523a35a0d813d416805229f7530a3e9db3c57"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/QueryTracking/CountingOracle.lean",
        "start_line": 69,
        "start_column": 53,
        "end_line": 69,
        "end_column": 58
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\ninst\u271d : DecidableEq \u03b9\nspec : OracleSpec \u03b9\n\u03b1 : Type u\noa : OracleComp spec \u03b1\n\u22a2 failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/QueryTracking/CountingOracle.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "c32b3a8127f8971b268f9d1f365eb6878df04e67acd5a671734af2657590b31d"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/QueryTracking/LoggingOracle.lean",
        "start_line": 72,
        "start_column": 53,
        "end_line": 72,
        "end_column": 58
      },
      "debug_info": {
        "goal": "\u03b9 : Type u\nspec : OracleSpec \u03b9\n\u03b1 : Type u\noa : OracleComp spec \u03b1\n\u22a2 failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/QueryTracking/LoggingOracle.lean#L72"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-04-15T06:05:56-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "ae0dd51c749a113d7821709538ce1fdd2b8759ffe3060e2e0ddbeb7f4cb304a2"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "VCVio/OracleComp/Constructions/UniformSelect.lean",
        "start_line": 412,
        "start_column": 4,
        "end_line": 412,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case succ\n\u03b1\u271d : Type\nh\u03b1 : OracleComp.SelectableType \u03b1\u271d\n\u03b1 : Type\nm\u271d : \u2115\ninst\u271d : OracleComp.SelectableType \u03b1\nm : \u2115\nih :\n  [\u22a5|Nat.recAux (pure (Matrix.of ![]))\n        (fun n ihn => do\n          let top \u2190 OracleComp.uniformOfFintype (Vector \u03b1 m\u271d) (OracleComp.instSelectableTypeVector \u03b1 m\u271d inst\u271d)\n          let bot \u2190 ihn\n          pure (Fin.cons top.get bot))\n        m] =\n    0\n\u22a2 \u2200 (x : Vector \u03b1 m\u271d),\n    neverFails\n      (Nat.rec (pure (Matrix.of ![]))\n        (fun n ihn => do\n          let top \u2190 OracleComp.uniformOfFintype (Vector \u03b1 m\u271d) (OracleComp.instSelectableTypeVector \u03b1 m\u271d inst\u271d)\n          Fin.cons top.get <$> ihn)\n        m)",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/VCVio/OracleComp/Constructions/UniformSelect.lean#L412"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-26T12:07:39-04:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "d57cd2406285c85f6d51cf55d196e226fdda1d737dab18f726f218459457acb2"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ToMathlib/ProbabilityTheory/Coupling.lean",
        "start_line": 91,
        "start_column": 4,
        "end_line": 91,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mp\n\u03b1 \u03b2 : Type u\na : \u03b1\nb : \u03b2\nc : @SPMF (\u03b1 \u00d7 \u03b2)\nh1 : @Functor.map SPMF OptionT.instAlternative.toFunctor (\u03b1 \u00d7 \u03b2) \u03b1 Prod.fst c = some <$> PMF.pure a\nh2 : @Functor.map SPMF OptionT.instAlternative.toFunctor (\u03b1 \u00d7 \u03b2) \u03b2 Prod.snd c = some <$> PMF.pure b\nthis :\n  \u2200 (x : Option \u03b1),\n    (@Functor.map SPMF OptionT.instAlternative.toFunctor (\u03b1 \u00d7 \u03b2) \u03b1 Prod.fst c) x = (some <$> PMF.pure a) x\n\u22a2 c = @pure SPMF OptionT.instAlternative.toPure (\u03b1 \u00d7 \u03b2) (a, b)",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/ToMathlib/ProbabilityTheory/Coupling.lean#L91"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "97338107fe4d88c32a298e59eafac4aa6f78cf4d8ac9c3ddf578e415cea43fab"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ToMathlib/ProbabilityTheory/Coupling.lean",
        "start_line": 99,
        "start_column": 42,
        "end_line": 99,
        "end_column": 47
      },
      "debug_info": {
        "goal": "case mpr.map_fst\n\u03b1 \u03b2 : Type u\nc : @SPMF (\u03b1 \u00d7 \u03b2)\nh : c = OptionT.fail\n\u22a2 @Functor.map SPMF OptionT.instAlternative.toFunctor (\u03b1 \u00d7 \u03b2) \u03b1 Prod.fst OptionT.fail = OptionT.fail",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/ToMathlib/ProbabilityTheory/Coupling.lean#L99"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "ae0d6a8905b729720345b40ef466b3f406cff6a93c668c6eb0069ce97a33f9f2"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ToMathlib/ProbabilityTheory/Coupling.lean",
        "start_line": 99,
        "start_column": 42,
        "end_line": 99,
        "end_column": 47
      },
      "debug_info": {
        "goal": "case mpr.map_snd\n\u03b1 \u03b2 : Type u\nc : @SPMF (\u03b1 \u00d7 \u03b2)\nh : c = OptionT.fail\n\u22a2 @Functor.map SPMF OptionT.instAlternative.toFunctor (\u03b1 \u00d7 \u03b2) \u03b2 Prod.snd OptionT.fail = OptionT.fail",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/ToMathlib/ProbabilityTheory/Coupling.lean#L99"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "5e9d0f42dcf93fcb57f33042e7b09cdd2443ee1d14aef208f8bde767a8bb827e"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ToMathlib/ProbabilityTheory/Coupling.lean",
        "start_line": 109,
        "start_column": 59,
        "end_line": 109,
        "end_column": 64
      },
      "debug_info": {
        "goal": "case mk.map_fst.e_a.h\n\u03b1\u2081 \u03b1\u2082 \u03b2\u2081 \u03b2\u2082 : Type u\np : @SPMF \u03b1\u2081\nq : @SPMF \u03b1\u2082\nf : \u03b1\u2081 \u2192 @SPMF \u03b2\u2081\ng : \u03b1\u2082 \u2192 @SPMF \u03b2\u2082\nc : @SPMF.Coupling \u03b1\u2081 \u03b1\u2082 p q\nd : \u03b1\u2081 \u2192 \u03b1\u2082 \u2192 @SPMF (\u03b2\u2081 \u00d7 \u03b2\u2082)\nh : (a\u2081 : \u03b1\u2081) \u2192 (a\u2082 : \u03b1\u2082) \u2192 \u2191\u2191c (some (a\u2081, a\u2082)) \u2260 0 \u2192 @SPMF.IsCoupling \u03b2\u2081 \u03b2\u2082 (@d a\u2081 a\u2082) (@f a\u2081) (@g a\u2082)\nhc\u2081 : @Functor.map SPMF OptionT.instAlternative.toFunctor (\u03b1\u2081 \u00d7 \u03b1\u2082) \u03b1\u2081 Prod.fst \u2191c = p\nhc\u2082 : @Functor.map SPMF OptionT.instAlternative.toFunctor (\u03b1\u2081 \u00d7 \u03b1\u2082) \u03b1\u2082 Prod.snd \u2191c = q\na\u2081 : \u03b1\u2081\na\u2082 : \u03b1\u2082\nthis : \u2191\u2191c (some (a\u2081, a\u2082)) \u2260 0 \u2192 @SPMF.IsCoupling \u03b2\u2081 \u03b2\u2082 (@d a\u2081 a\u2082) (@f a\u2081) (@g a\u2082)\n\u22a2 @Functor.map SPMF OptionT.instMonad.toFunctor (\u03b2\u2081 \u00d7 \u03b2\u2082) \u03b2\u2081 Prod.fst (@d (a\u2081, a\u2082).1 (a\u2081, a\u2082).2) = @f (a\u2081, a\u2082).1",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/ToMathlib/ProbabilityTheory/Coupling.lean#L109"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "25162ae5679be51f3419843958146d47b3e6f1a375a0e7cda1ec1daea202110e"
    },
    {
      "repo": {
        "remote": "https://github.com/dtumad/VCV-io",
        "branch": "master",
        "commit": "eb3855e82b412c2b1580b7b6eb7f0a0f11a22512",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ToMathlib/ProbabilityTheory/Coupling.lean",
        "start_line": 110,
        "start_column": 18,
        "end_line": 110,
        "end_column": 23
      },
      "debug_info": {
        "goal": "case mk.map_snd\n\u03b1\u2081 \u03b1\u2082 \u03b2\u2081 \u03b2\u2082 : Type u\np : @SPMF \u03b1\u2081\nq : @SPMF \u03b1\u2082\nf : \u03b1\u2081 \u2192 @SPMF \u03b2\u2081\ng : \u03b1\u2082 \u2192 @SPMF \u03b2\u2082\nc : @SPMF.Coupling \u03b1\u2081 \u03b1\u2082 p q\nd : \u03b1\u2081 \u2192 \u03b1\u2082 \u2192 @SPMF (\u03b2\u2081 \u00d7 \u03b2\u2082)\nh : (a\u2081 : \u03b1\u2081) \u2192 (a\u2082 : \u03b1\u2082) \u2192 \u2191\u2191c (some (a\u2081, a\u2082)) \u2260 0 \u2192 @SPMF.IsCoupling \u03b2\u2081 \u03b2\u2082 (@d a\u2081 a\u2082) (@f a\u2081) (@g a\u2082)\nhc\u2081 : @Functor.map SPMF OptionT.instAlternative.toFunctor (\u03b1\u2081 \u00d7 \u03b1\u2082) \u03b1\u2081 Prod.fst \u2191c = p\nhc\u2082 : @Functor.map SPMF OptionT.instAlternative.toFunctor (\u03b1\u2081 \u00d7 \u03b1\u2082) \u03b1\u2082 Prod.snd \u2191c = q\n\u22a2 (do\n      let a \u2190 \u2191c\n      @Functor.map SPMF OptionT.instMonad.toFunctor (\u03b2\u2081 \u00d7 \u03b2\u2082) \u03b2\u2082 Prod.snd (@d a.1 a.2)) =\n    do\n    let a \u2190 \u2191c\n    @g a.2",
        "url": "https://github.com/dtumad/VCV-io/blob/eb3855e82b412c2b1580b7b6eb7f0a0f11a22512/ToMathlib/ProbabilityTheory/Coupling.lean#L110"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T16:46:26-05:00",
        "inclusion_date": "2025-06-06T05:04:11.503844+00:00"
      },
      "id": "43c0a0c7d9c84b7df4532a3f3bf32f695a24ace8c9973eb2e554538e8f69e1ae"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "df155621bd7f37f347b8e9ba71f7ccc6408eed0e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/MatroidSum3.lean",
        "start_line": 360,
        "start_column": 2,
        "end_line": 360,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d : DecidableEq \u03b1\nS\u2097 S\u1d63 : StandardRepr \u03b1 Z2\nx\u2080 x\u2081 x\u2082 y\u2080 y\u2081 y\u2082 : \u03b1\nhx\u2080 : x\u2081 \u2260 x\u2082\nhx\u2081 : x\u2080 \u2260 x\u2082\nhx\u2082 : x\u2081 \u2260 x\u2080\nhy\u2080 : y\u2081 \u2260 y\u2082\nhy\u2081 : y\u2080 \u2260 y\u2082\nhy\u2082 : y\u2081 \u2260 y\u2080\nhXX : S\u2097.X \u2229 S\u1d63.X = x\u2080 \u1543 x\u2081 \u1543 {x\u2082}\nhYY : S\u2097.Y \u2229 S\u1d63.Y = y\u2080 \u1543 y\u2081 \u1543 {y\u2082}\nhXY : S\u2097.X \u2ad7 S\u1d63.Y\nhYX : S\u2097.Y \u2ad7 S\u1d63.X\nhS\u2097 : S\u2097.B.HasTuSigning\nhS\u1d63 : S\u1d63.B.HasTuSigning\nhSS : (standardRepr3sumComposition hx\u2080 hx\u2081 hx\u2082 hy\u2080 hy\u2081 hy\u2082 hXX hYY hXY hYX).2\n\u22a2 (standardRepr3sumComposition hx\u2080 hx\u2081 hx\u2082 hy\u2080 hy\u2081 hy\u2082 hXX hYY hXY hYX).1.B.HasTuSigning",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/df155621bd7f37f347b8e9ba71f7ccc6408eed0e/Seymour/Matroid/Operations/Sum3/MatroidSum3.lean#L360"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-06T05:15:18.267794+00:00"
      },
      "id": "a0db406262591b493df549c3601484a3adb775adb1007d515cccc02e16595847"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "df155621bd7f37f347b8e9ba71f7ccc6408eed0e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean",
        "start_line": 110,
        "start_column": 2,
        "end_line": 110,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X\u2097 Y\u2097 X\u1d63 Y\u1d63 : Type\ninst\u271d\u00b3 : DecidableEq X\u2097\ninst\u271d\u00b2 : DecidableEq Y\u2097\ninst\u271d\u00b9 : DecidableEq X\u1d63\ninst\u271d : DecidableEq Y\u1d63\nS : MatrixSum3 X\u2097 Y\u2097 X\u1d63 Y\u1d63 \u211a\nhS : S.HasTuB\u1d63\n\u22a2 (\u25aeS.c\u2080 \u25eb \u25aeS.c\u2081 \u25eb \u25ae(S.c\u2080 - S.c\u2081) \u25eb S.A\u1d63).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/df155621bd7f37f347b8e9ba71f7ccc6408eed0e/Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean#L110"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-06T05:15:18.267794+00:00"
      },
      "id": "af99487e2742ad9675ea0e248ce5463ad6329957f85ee0dc68460c9697e7c2b3"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "df155621bd7f37f347b8e9ba71f7ccc6408eed0e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean",
        "start_line": 134,
        "start_column": 2,
        "end_line": 134,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X\u2097 Y\u2097 X\u1d63 Y\u1d63 : Type\ninst\u271d\u00b3 : DecidableEq X\u2097\ninst\u271d\u00b2 : DecidableEq Y\u2097\ninst\u271d\u00b9 : DecidableEq X\u1d63\ninst\u271d : DecidableEq Y\u1d63\nS : MatrixSum3 X\u2097 Y\u2097 X\u1d63 Y\u1d63 \u211a\nhS : S.HasTuB\u2097\n\u22a2 (S.A\u2097 \u229f \u25acS.d\u2080 \u229f \u25ac(-S.d\u2080) \u229f \u25acS.d\u2081 \u229f \u25ac(-S.d\u2081) \u229f \u25acS.d\u2082 \u229f \u25ac(-S.d\u2082) \u229f \u25ac0).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/df155621bd7f37f347b8e9ba71f7ccc6408eed0e/Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean#L134"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-06T05:15:18.267794+00:00"
      },
      "id": "e23e6dba44774034b85aa54e8a23656a14d180f0ae34ad0fdb5ce2484ed6c3ac"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "df155621bd7f37f347b8e9ba71f7ccc6408eed0e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean",
        "start_line": 189,
        "start_column": 2,
        "end_line": 189,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X\u2097 Y\u2097 X\u1d63 Y\u1d63 : Type\nS : MatrixSum3 X\u2097 Y\u2097 X\u1d63 Y\u1d63 \u211a\nhS : S.IsCanonicalSigning\n\u22a2 \u2200 (j : Y\u2097 \u2295 Fin 2),\n    (fun x => S.D x j) = 0 \u2228\n      (fun x => S.D x j) = S.c\u2080 \u2228\n        (fun x => S.D x j) = -S.c\u2080 \u2228\n          (fun x => S.D x j) = S.c\u2081 \u2228\n            (fun x => S.D x j) = -S.c\u2081 \u2228 (fun x => S.D x j) = S.c\u2080 - S.c\u2081 \u2228 (fun x => S.D x j) = S.c\u2081 - S.c\u2080",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/df155621bd7f37f347b8e9ba71f7ccc6408eed0e/Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean#L189"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-06T05:15:18.267794+00:00"
      },
      "id": "56b07dbdd821b5b574706e5abccccbf8f1a90ac45003f77f678805e1c0b74c6e"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "df155621bd7f37f347b8e9ba71f7ccc6408eed0e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean",
        "start_line": 195,
        "start_column": 2,
        "end_line": 195,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X\u2097 Y\u2097 X\u1d63 Y\u1d63 : Type\nS : MatrixSum3 X\u2097 Y\u2097 X\u1d63 Y\u1d63 \u211a\nhS : S.IsCanonicalSigning\n\u22a2 \u2200 (i : Fin 2 \u2295 X\u1d63),\n    S.D i = 0 \u2228 S.D i = S.d\u2080 \u2228 S.D i = -S.d\u2080 \u2228 S.D i = S.d\u2081 \u2228 S.D i = -S.d\u2081 \u2228 S.D i = S.d\u2082 \u2228 S.D i = -S.d\u2082",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/df155621bd7f37f347b8e9ba71f7ccc6408eed0e/Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean#L195"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-06T05:15:18.267794+00:00"
      },
      "id": "bf769ac89d529f3b2468d752914ba55f94be0c40deb677ffd4b5e6bbf641d432"
    },
    {
      "repo": {
        "remote": "https://github.com/Ivan-Sergeyev/seymour",
        "branch": "main",
        "commit": "df155621bd7f37f347b8e9ba71f7ccc6408eed0e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean",
        "start_line": 208,
        "start_column": 2,
        "end_line": 208,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X\u2097 Y\u2097 X\u1d63 Y\u1d63 : Type\nS : MatrixSum3 X\u2097 Y\u2097 X\u1d63 Y\u1d63 \u211a\nhS : S.IsCanonicalSigning\n\u22a2 (\u25aeS.c\u2080 \u25eb \u25aeS.c\u2081 \u25eb \u25ae(S.c\u2080 - S.c\u2081) \u25eb S.A\u1d63).IsTotallyUnimodular",
        "url": "https://github.com/Ivan-Sergeyev/seymour/blob/df155621bd7f37f347b8e9ba71f7ccc6408eed0e/Seymour/Matroid/Operations/Sum3/CanonicalSigningSum3.lean#L208"
      },
      "metadata": {
        "blame_email_hash": "1f3d9a693291",
        "blame_date": "2025-06-02T20:17:24+02:00",
        "inclusion_date": "2025-06-06T05:15:18.267794+00:00"
      },
      "id": "b28e52eb6e24eed0327b4b40d1760063a9622282e167420363344980d7d72a0f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels2",
        "commit": "58b8e866053fdc3ec59ef5f3580611cc65707233",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
        "start_line": 199,
        "start_column": 6,
        "end_line": 199,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h.mk.fst\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\ninst\u271d\u2077 : NormedAddCommGroup F'\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2075 : TopologicalSpace H\ninst\u271d\u2074 : TopologicalSpace H'\ninst\u271d\u00b3 : TopologicalSpace H''\ninst\u271d\u00b2 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b9 : TopologicalSpace M'\ninst\u271d : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nh : @SliceModel \ud835\udd5c inst\u271d\u00b9\u2078 E E' inst\u271d\u00b9\u2077 inst\u271d\u00b9\u2076 inst\u271d\u00b9\u2075 inst\u271d\u00b9\u2074 F inst\u271d\u2079 inst\u271d\u2078 H H' inst\u271d\u2075 inst\u271d\u2074 I I'\nx : H'''\ny : H\n\u22a2 \u2191J x =\n    ((@ContinuousLinearEquiv.prodAssoc \ud835\udd5c E''' E F Field.toSemifield.toDivisionSemiring.toSemiring\n          NormedAddCommGroup.toENormedAddCommMonoid.toAddCommMonoid\n          NormedAddCommGroup.toENormedAddCommMonoid.toAddCommMonoid\n          NormedAddCommGroup.toENormedAddCommMonoid.toAddCommMonoid inst\u271d\u00b9\u2070.toModule inst\u271d\u00b9\u2076.toModule inst\u271d\u2078.toModule\n          PseudoMetricSpace.toUniformSpace.toTopologicalSpace PseudoMetricSpace.toUniformSpace.toTopologicalSpace\n          PseudoMetricSpace.toUniformSpace.toTopologicalSpace)\n        ((\u2191J x, \u2191I y), 0)).1",
        "url": "https://github.com/leanprover-community/mathlib4/blob/58b8e866053fdc3ec59ef5f3580611cc65707233/Mathlib/Geometry/Manifold/SliceModel.lean#L199"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-06T01:05:13+02:00",
        "inclusion_date": "2025-06-06T05:34:01.252854+00:00"
      },
      "id": "4bc9313d109d2e85c67e54edc7a87e60cd15b72d1514ad8d863877531a7c5074"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels2",
        "commit": "58b8e866053fdc3ec59ef5f3580611cc65707233",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
        "start_line": 200,
        "start_column": 6,
        "end_line": 200,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h.mk.snd\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\ninst\u271d\u2077 : NormedAddCommGroup F'\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2075 : TopologicalSpace H\ninst\u271d\u2074 : TopologicalSpace H'\ninst\u271d\u00b3 : TopologicalSpace H''\ninst\u271d\u00b2 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b9 : TopologicalSpace M'\ninst\u271d : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nh : @SliceModel \ud835\udd5c inst\u271d\u00b9\u2078 E E' inst\u271d\u00b9\u2077 inst\u271d\u00b9\u2076 inst\u271d\u00b9\u2075 inst\u271d\u00b9\u2074 F inst\u271d\u2079 inst\u271d\u2078 H H' inst\u271d\u2075 inst\u271d\u2074 I I'\nx : H'''\ny : H\n\u22a2 \u2191I' (@SliceModel.map \ud835\udd5c inst\u271d\u00b9\u2078 E E' inst\u271d\u00b9\u2077 inst\u271d\u00b9\u2076 inst\u271d\u00b9\u2075 inst\u271d\u00b9\u2074 F inst\u271d\u2079 inst\u271d\u2078 H H' inst\u271d\u2075 inst\u271d\u2074 I I' h y) =\n    (@SliceModel.equiv \ud835\udd5c inst\u271d\u00b9\u2078 E E' inst\u271d\u00b9\u2077 inst\u271d\u00b9\u2076 inst\u271d\u00b9\u2075 inst\u271d\u00b9\u2074 F inst\u271d\u2079 inst\u271d\u2078 H H' inst\u271d\u2075 inst\u271d\u2074 I I' h)\n      ((@ContinuousLinearEquiv.prodAssoc \ud835\udd5c E''' E F Field.toSemifield.toDivisionSemiring.toSemiring\n            NormedAddCommGroup.toENormedAddCommMonoid.toAddCommMonoid\n            NormedAddCommGroup.toENormedAddCommMonoid.toAddCommMonoid\n            NormedAddCommGroup.toENormedAddCommMonoid.toAddCommMonoid inst\u271d\u00b9\u2070.toModule inst\u271d\u00b9\u2076.toModule inst\u271d\u2078.toModule\n            PseudoMetricSpace.toUniformSpace.toTopologicalSpace PseudoMetricSpace.toUniformSpace.toTopologicalSpace\n            PseudoMetricSpace.toUniformSpace.toTopologicalSpace)\n          ((\u2191J x, \u2191I y), 0)).2",
        "url": "https://github.com/leanprover-community/mathlib4/blob/58b8e866053fdc3ec59ef5f3580611cc65707233/Mathlib/Geometry/Manifold/SliceModel.lean#L200"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-06T01:05:13+02:00",
        "inclusion_date": "2025-06-06T05:34:01.252854+00:00"
      },
      "id": "217909007a10a8107ccecf67096c2dbee3cec44812b1107d6907f6f6e18df2ee"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels2",
        "commit": "58b8e866053fdc3ec59ef5f3580611cc65707233",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
        "start_line": 208,
        "start_column": 16,
        "end_line": 208,
        "end_column": 21
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\ninst\u271d\u2077 : NormedAddCommGroup F'\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2075 : TopologicalSpace H\ninst\u271d\u2074 : TopologicalSpace H'\ninst\u271d\u00b3 : TopologicalSpace H''\ninst\u271d\u00b2 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b9 : TopologicalSpace M'\ninst\u271d : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nh : @SliceModel \ud835\udd5c inst\u271d\u00b9\u2078 E E' inst\u271d\u00b9\u2077 inst\u271d\u00b9\u2076 inst\u271d\u00b9\u2075 inst\u271d\u00b9\u2074 F inst\u271d\u2079 inst\u271d\u2078 H H' inst\u271d\u2075 inst\u271d\u2074 I I'\n\u22a2 \u2191(I'.prod J) \u2218\n      Prod.map\n        (@SliceModel.map \ud835\udd5c inst\u271d\u00b9\u2078 E E' inst\u271d\u00b9\u2077 inst\u271d\u00b9\u2076 inst\u271d\u00b9\u2075 inst\u271d\u00b9\u2074 F inst\u271d\u2079 inst\u271d\u2078 H H' inst\u271d\u2075 inst\u271d\u2074 I I' h) id =\n    \u21d1sorry \u2218 (fun x => (x, 0)) \u2218 \u2191(I.prod J)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/58b8e866053fdc3ec59ef5f3580611cc65707233/Mathlib/Geometry/Manifold/SliceModel.lean#L208"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-06T00:33:32+02:00",
        "inclusion_date": "2025-06-06T05:34:01.252854+00:00"
      },
      "id": "fa86c7ff7d1f3f4b2aedacbe05f9a8e89e8c2270660dc91177eac42655922d17"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels2",
        "commit": "58b8e866053fdc3ec59ef5f3580611cc65707233",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
        "start_line": 252,
        "start_column": 10,
        "end_line": 252,
        "end_column": 15
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u2074 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b2 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u00b9 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u00b9\u2070 : NormedAddCommGroup F\ninst\u271d\u2079 : NormedSpace \ud835\udd5c F\ninst\u271d\u2078 : NormedAddCommGroup F'\ninst\u271d\u2077 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2076 : TopologicalSpace H\ninst\u271d\u2075 : TopologicalSpace H'\ninst\u271d\u2074 : TopologicalSpace H''\ninst\u271d\u00b3 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b2 : TopologicalSpace M'\ninst\u271d\u00b9 : ChartedSpace H' M'\nn\u271d : WithTop \u2115\u221e\nn m : \u2115\ninst\u271d : NeZero n\n\u22a2 IsEmbedding fun x => (ContinuousLinearEquiv.symm (@EuclideanSpace.finAddEquivProd \u211d Real.instRCLike n m)) (x, 0)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/58b8e866053fdc3ec59ef5f3580611cc65707233/Mathlib/Geometry/Manifold/SliceModel.lean#L252"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-06T00:33:32+02:00",
        "inclusion_date": "2025-06-06T05:34:01.252854+00:00"
      },
      "id": "f90c8e5f7670bc32ad6d5f187d0e978e5451eeee3abd26e1a9c16b7ee1fa84e3"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels2",
        "commit": "58b8e866053fdc3ec59ef5f3580611cc65707233",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
        "start_line": 263,
        "start_column": 4,
        "end_line": 263,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u2074 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b2 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u00b9 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u00b9\u2070 : NormedAddCommGroup F\ninst\u271d\u2079 : NormedSpace \ud835\udd5c F\ninst\u271d\u2078 : NormedAddCommGroup F'\ninst\u271d\u2077 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2076 : TopologicalSpace H\ninst\u271d\u2075 : TopologicalSpace H'\ninst\u271d\u2074 : TopologicalSpace H''\ninst\u271d\u00b3 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b2 : TopologicalSpace M'\ninst\u271d\u00b9 : ChartedSpace H' M'\nn\u271d : WithTop \u2115\u221e\nn : \u2115\ninst\u271d : NeZero n\n\u22a2 IsEmbedding fun x =>\n    @instSliceModelRealEuclideanSpaceFinSubtypeForallMemSubspaceBotEuclideanQuadrantEuclideanHalfSpaceModelWithCornersEuclideanQuadrantModelWithCornersEuclideanHalfSpace.match_1\n      n (fun x => EuclideanHalfSpace n) x fun x hx => \u27e8x, \u22ef\u27e9",
        "url": "https://github.com/leanprover-community/mathlib4/blob/58b8e866053fdc3ec59ef5f3580611cc65707233/Mathlib/Geometry/Manifold/SliceModel.lean#L263"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-06T00:33:32+02:00",
        "inclusion_date": "2025-06-06T05:34:01.252854+00:00"
      },
      "id": "2092910d5c56edc3c03b46c92ba4365fdfa0c77429408750fe61a1670bd13f1a"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels2",
        "commit": "58b8e866053fdc3ec59ef5f3580611cc65707233",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
        "start_line": 278,
        "start_column": 4,
        "end_line": 278,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\ninst\u271d\u2077 : NormedAddCommGroup F'\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2075 : TopologicalSpace H\ninst\u271d\u2074 : TopologicalSpace H'\ninst\u271d\u00b3 : TopologicalSpace H''\ninst\u271d\u00b2 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b9 : TopologicalSpace M'\ninst\u271d : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nh : @SliceModel \ud835\udd5c inst\u271d\u00b9\u2078 E E' inst\u271d\u00b9\u2077 inst\u271d\u00b9\u2076 inst\u271d\u00b9\u2075 inst\u271d\u00b9\u2074 F inst\u271d\u2079 inst\u271d\u2078 H H' inst\u271d\u2075 inst\u271d\u2074 I I'\nh' : @SliceModel \ud835\udd5c inst\u271d\u00b9\u2078 E' E'' inst\u271d\u00b9\u2075 inst\u271d\u00b9\u2074 inst\u271d\u00b9\u00b3 inst\u271d\u00b9\u00b2 F' inst\u271d\u2077 inst\u271d\u2076 H' H'' inst\u271d\u2074 inst\u271d\u00b3 I' I''\nx : H\n\u22a2 \u2191I''\n      (@SliceModel.map \ud835\udd5c inst\u271d\u00b9\u2078 E' E'' inst\u271d\u00b9\u2075 inst\u271d\u00b9\u2074 inst\u271d\u00b9\u00b3 inst\u271d\u00b9\u00b2 F' inst\u271d\u2077 inst\u271d\u2076 H' H'' inst\u271d\u2074 inst\u271d\u00b3 I' I'' h'\n        (@SliceModel.map \ud835\udd5c inst\u271d\u00b9\u2078 E E' inst\u271d\u00b9\u2077 inst\u271d\u00b9\u2076 inst\u271d\u00b9\u2075 inst\u271d\u00b9\u2074 F inst\u271d\u2079 inst\u271d\u2078 H H' inst\u271d\u2075 inst\u271d\u2074 I I' h x)) =\n    (@SliceModel.equiv \ud835\udd5c inst\u271d\u00b9\u2078 E' E'' inst\u271d\u00b9\u2075 inst\u271d\u00b9\u2074 inst\u271d\u00b9\u00b3 inst\u271d\u00b9\u00b2 F' inst\u271d\u2077 inst\u271d\u2076 H' H'' inst\u271d\u2074 inst\u271d\u00b3 I' I'' h')\n      ((@SliceModel.equiv \ud835\udd5c inst\u271d\u00b9\u2078 E E' inst\u271d\u00b9\u2077 inst\u271d\u00b9\u2076 inst\u271d\u00b9\u2075 inst\u271d\u00b9\u2074 F inst\u271d\u2079 inst\u271d\u2078 H H' inst\u271d\u2075 inst\u271d\u2074 I I' h)\n          ((ContinuousLinearEquiv.symm\n                (@ContinuousLinearEquiv.prodAssoc \ud835\udd5c E F F' Field.toSemifield.toDivisionSemiring.toSemiring\n                  NormedAddCommGroup.toENormedAddCommMonoid.toAddCommMonoid\n                  NormedAddCommGroup.toENormedAddCommMonoid.toAddCommMonoid\n                  NormedAddCommGroup.toENormedAddCommMonoid.toAddCommMonoid inst\u271d\u00b9\u2076.toModule inst\u271d\u2078.toModule\n                  inst\u271d\u2076.toModule PseudoMetricSpace.toUniformSpace.toTopologicalSpace\n                  PseudoMetricSpace.toUniformSpace.toTopologicalSpace\n                  PseudoMetricSpace.toUniformSpace.toTopologicalSpace))\n              (\u2191I x, 0)).1,\n        ((ContinuousLinearEquiv.symm\n              (@ContinuousLinearEquiv.prodAssoc \ud835\udd5c E F F' Field.toSemifield.toDivisionSemiring.toSemiring\n                NormedAddCommGroup.toENormedAddCommMonoid.toAddCommMonoid\n                NormedAddCommGroup.toENormedAddCommMonoid.toAddCommMonoid\n                NormedAddCommGroup.toENormedAddCommMonoid.toAddCommMonoid inst\u271d\u00b9\u2076.toModule inst\u271d\u2078.toModule\n                inst\u271d\u2076.toModule PseudoMetricSpace.toUniformSpace.toTopologicalSpace\n                PseudoMetricSpace.toUniformSpace.toTopologicalSpace\n                PseudoMetricSpace.toUniformSpace.toTopologicalSpace))\n            (\u2191I x, 0)).2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/58b8e866053fdc3ec59ef5f3580611cc65707233/Mathlib/Geometry/Manifold/SliceModel.lean#L278"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-06-06T00:33:32+02:00",
        "inclusion_date": "2025-06-06T05:34:01.252854+00:00"
      },
      "id": "3f913d8a3e976f238d7a8b9caddc9a339a215793632a17ef8f9d98da27f02cdc"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/clean",
        "branch": "inductive-table",
        "commit": "7cb6538c1d9f7a7b3272d6e5f5952a3944daca6b",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Clean/Gadgets/ByteDecomposition/ByteDecomposition.lean",
        "start_line": 95,
        "start_column": 2,
        "end_line": 95,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\np_large_enough : Fact (p > 2 ^ 16 + 2 ^ 8)\noffset : Fin 8\ni0 : \u2115\nenv : Environment (F p)\nx_var : Var field (F p)\nx : F p\nh_eval : Expression.eval env x_var = x\nas : ZMod.val x < 256\nhenv :\n  env.get i0 =\n      FieldUtils.mod (Expression.eval env x_var)\n        \u27e82 ^ \u2191offset, Gadgets.ByteDecomposition.byte_decomposition._proof_7 offset\u27e9\n        (Gadgets.ByteDecomposition.byte_decomposition._proof_8 p p_large_enough offset) \u2227\n    env.get (i0 + 1) = FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191offset)\nh0 :\n  env.get i0 =\n    FieldUtils.mod (Expression.eval env x_var)\n      \u27e82 ^ \u2191offset, Gadgets.ByteDecomposition.byte_decomposition._proof_7 offset\u27e9\n      (Gadgets.ByteDecomposition.byte_decomposition._proof_8 p p_large_enough offset)\nh1 : env.get (i0 + 1) = FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191offset)\n\u22a2 ZMod.val\n        (FieldUtils.mod (Expression.eval env x_var)\n          \u27e82 ^ \u2191offset, Gadgets.ByteDecomposition.byte_decomposition._proof_7 offset\u27e9\n          (Gadgets.ByteDecomposition.byte_decomposition._proof_8 p p_large_enough offset)) <\n      2 ^ \u2191offset.castSucc \u2227\n    ZMod.val (FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191offset)) < 2 ^ \u2191(8 - offset.castSucc) \u2227\n      FieldUtils.mod (Expression.eval env x_var)\n              \u27e82 ^ \u2191offset, Gadgets.ByteDecomposition.byte_decomposition._proof_7 offset\u27e9\n              (Gadgets.ByteDecomposition.byte_decomposition._proof_8 p p_large_enough offset) +\n            FieldUtils.floordiv (Expression.eval env x_var) (2 ^ \u2191offset) * 2 ^ \u2191offset +\n          -x =\n        0",
        "url": "https://github.com/Verified-zkEVM/clean/blob/7cb6538c1d9f7a7b3272d6e5f5952a3944daca6b/Clean/Gadgets/ByteDecomposition/ByteDecomposition.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "14eb31066b7e",
        "blame_date": "2025-05-15T17:59:45+02:00",
        "inclusion_date": "2025-06-06T06:55:49.060180+00:00"
      },
      "id": "132b4b45a5ac5faa7391d1ccbbc144fadad1395f02a17d501fbf8af2040d7f11"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Execution.lean",
        "start_line": 290,
        "start_column": 2,
        "end_line": 290,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\npSpec : ProtocolSpec 1\ninst\u271d : pSpec.ProverOnly\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let __discr \u2190\n        (fun a =>\n              ((reduction.prover.toProverOut.1 a.2).1, (reduction.prover.toProverOut.1 a.2).2, fun i =>\n                @Prover.run_of_prover_first.match_4 (fun i => (pSpec i).2) i fun isLt => a.1)) <$>\n            (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp\n              (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n      ((fun a => ((__discr.1, __discr.2.1), a, __discr.2.2)) <$> reduction.verifier.verify stmt __discr.2.2).liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190\n      (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n    ((fun a =>\n              (reduction.prover.toProverOut.1 __discr.2, a, fun i =>\n                @Prover.run_of_prover_first.match_4 (fun i => (pSpec i).2) i fun isLt => __discr.1)) <$>\n            reduction.verifier.verify stmt fun i =>\n              @Prover.run_of_prover_first.match_4 (fun i => (pSpec i).2) i fun isLt => __discr.1).liftComp\n        (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/OracleReduction/Execution.lean#L290"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "8b49959d919d8a9fb460cd749f1c9ca6b3e876b73b0e0d7364a601b8ff43cc8e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Equiv.lean",
        "start_line": 81,
        "start_column": 2,
        "end_line": 81,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case h.mk\ni j : \u2115\n\u22a2 (do\n          let __do_lift \u2190\n            FreeMonad.mapM\n                (do\n                  let _ \u2190 FreeMonad.roll (query 0 ()) fun __do_lift => FreeMonad.pure (some __do_lift)\n                  (fun a => (0, \u2191a)) <$> FreeMonad.roll (query 1 ()) fun __do_lift => FreeMonad.pure (some __do_lift))\n                fun {\u03b1} x =>\n                match \u03b1, x with\n                | .(unifSpec.range i), query i t =>\n                  (PMF.uniformOfFintype (Fin (i + 1))).bind fun __do_lift => PMF.pure (some __do_lift)\n          match __do_lift with\n            | none => failure\n            | some a => pure a).run\n      (some (i, j)) =\n    (do\n          let __do_lift \u2190\n            FreeMonad.mapM\n                (do\n                  let y \u2190 FreeMonad.roll (query 1 ()) fun __do_lift => FreeMonad.pure (some __do_lift)\n                  (fun a => (0, \u2191y)) <$> FreeMonad.roll (query 0 ()) fun __do_lift => FreeMonad.pure (some __do_lift))\n                fun {\u03b1} x =>\n                match \u03b1, x with\n                | .(unifSpec.range i), query i t =>\n                  (PMF.uniformOfFintype (Fin (i + 1))).bind fun __do_lift => PMF.pure (some __do_lift)\n          match __do_lift with\n            | none => failure\n            | some a => pure a).run\n      (some (i, j))",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/OracleReduction/Equiv.lean#L81"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-05T18:36:20+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "4c7991cf67c579d28de34037e64909b320a429d56cb312a99f3d16394b467cbe"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/OracleInterface.lean",
        "start_line": 351,
        "start_column": 2,
        "end_line": 351,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\nR : Type\ninst\u271d : CommSemiring R\nm : \u2115\nD : Fin m \u21aa R\np : Polynomial R\n\u22a2 failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/OracleReduction/OracleInterface.lean#L351"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "36e866a164ce8e4e6d7033885c63921ed830e1447a78490b463a62f2ac6e9301"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/AGM/Basic.lean",
        "start_line": 160,
        "start_column": 2,
        "end_line": 160,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d\u00b2 : Fact (Nat.Prime p)\nG\u2081 : Type u_2\ninst\u271d\u00b9 : CommGroup G\u2081\ninst\u271d : @IsPrimeOrderWith G\u2081 inst\u271d\u00b9.toGroup p inst\u271d\u00b2\nn : \u2115\ng : G\u2081\na : ZMod p\npoly : \u21a5(degreeLT (ZMod p) (n + 1))\n\u22a2 g ^ \u2211 i, a.val ^ \u2191i * ((degreeLTEquiv (ZMod p) (n + 1)) poly i).val =\n    g ^ (\u2211 x, (degreeLTEquiv (ZMod p) (n + 1)) poly x * a ^ \u2191x).val",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/AGM/Basic.lean#L160"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-15T12:13:54+05:30",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "4346dcd8bc2b56975e073bcdd129e412f9df12c6a8108e66868e47a907294108"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/AGM/Basic.lean",
        "start_line": 171,
        "start_column": 6,
        "end_line": 171,
        "end_column": 11
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u2078 : CommGroup G\np : \u2115\ninst\u271d\u2077 : Fact (Nat.Prime p)\nh : Nat.card G = p\ng : G\nG\u2081 : Type u_2\ninst\u271d\u2076 : CommGroup G\u2081\ninst\u271d\u2075 : @IsPrimeOrderWith G\u2081 inst\u271d\u2076.toGroup p inst\u271d\u2077\ng\u2081 : G\u2081\nG\u2082 : Type u_3\ninst\u271d\u2074 : CommGroup G\u2082\ninst\u271d\u00b3 : @IsPrimeOrderWith G\u2082 inst\u271d\u2074.toGroup p inst\u271d\u2077\ng\u2082 : G\u2082\nG\u209c : Type u_4\ninst\u271d\u00b2 : CommGroup G\u209c\ninst\u271d\u00b9 : @IsPrimeOrderWith G\u209c inst\u271d\u00b2.toGroup p inst\u271d\u2077\npairing : Additive G\u2081 \u2192\u2097[\u2124] Additive G\u2082 \u2192\u2097[\u2124] Additive G\u209c\nn : \u2115\ninst\u271d : Fact (Nat.Prime p)\nsrs : Vector G\u2081 (n + 1)\ncoeffs : Fin (n + 1) \u2192 ZMod p\nz : ZMod p\npoly : \u21a5(degreeLT (ZMod p) (n + 1)) := (degreeLTEquiv (ZMod p) (n + 1)).invFun coeffs\nthis : Field (ZMod p)\n\u22a2 ((\u2191poly - C (eval z \u2191poly)) / (X - C z)).degree < \u2191(n + 1)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/AGM/Basic.lean#L171"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-03-15T21:13:06-06:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "2445bc03ba125ec24e8ce2c4e9c9fafe4297b7fe9e55cad67a1d539c5ca8580e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 46,
        "start_column": 2,
        "end_line": 46,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : AddCommMonoid R\nn : \u2115\na : R\nb : Vector R n\nc : R\nd : Vector R n\n\u22a2 List.foldl (fun x1 x2 => x1 + x2) (a * c) (List.zipWith (fun x1 x2 => x1 * x2) b.toArray.toList d.toArray.toList) =\n    a * c + Array.foldl (fun x1 x2 => x1 + x2) 0 (Array.zipWith (fun x1 x2 => x1 * x2) b.toArray d.toArray) 0 n",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/Data/MlPoly/Basic.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-14T11:09:39-05:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "cb6fae3c0c6a9eaf702e93ea1d90b9b01b9e5746dcedde285d7dc9afd945e8c2"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/Data/MvPolynomial/Interpolation.lean",
        "start_line": 69,
        "start_column": 58,
        "end_line": 69,
        "end_column": 63
      },
      "debug_info": {
        "goal": "\u03c3 : Type u_1\ninst\u271d\u2074 : DecidableEq \u03c3\ninst\u271d\u00b3 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : IsDomain R\ninst\u271d : DecidableEq R\np : MvPolynomial \u03c3 R\nhp : p \u2260 0\nS : \u03c3 \u2192 Finset R\n\u22a2 \u2191{x \u2208 p.vars.pi S |\n            (eval\n                  (@MvPolynomial.Function.extendDomain \u03c3 R inst\u271d\u2074\n                    CommRing.toNonUnitalCommRing.toNonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring.toMulZeroClass.toZero\n                    p.vars x))\n                p =\n              0}.card /\n      \u220f i \u2208 p.vars, \u2191(S i).card \u2264\n    \u2211 i \u2208 p.vars, \u2191(degreeOf i p) / \u2191(S i).card",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/Data/MvPolynomial/Interpolation.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-30T15:40:43-04:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "a38ceeaf9f2c99bc28f169a48e6ad5f080974669c40b7844a0a301f37fb02feb"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/Data/Fin/Basic.lean",
        "start_line": 422,
        "start_column": 43,
        "end_line": 422,
        "end_column": 48
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b1 : Fin n \u2192 Sort u\nl : List \u2115\nn' : \u2115\nl' : List \u2115\nmotive : Fin (n' :: l').sum \u2192 Sort u_1\ncases : (n : \u2115) \u2192 (h : n \u2208 n' :: l') \u2192 (i : Fin n) \u2192 motive (Fin.castSum (n' :: l') n h i)\ni : Fin (n' + l'.sum)\nhi : \u00ac\u2191i < n'\n\u22a2 \u2191i - n' < l'.sum",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/Data/Fin/Basic.lean#L422"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-23T10:22:30+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "08c8b1fea4d665599c2e4f9b67a4e4be03a7fcb6c9a102140eb8540bd6222278"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/Data/Fin/Basic.lean",
        "start_line": 450,
        "start_column": 16,
        "end_line": 450,
        "end_column": 21
      },
      "debug_info": {
        "goal": "case ind\nn\u271d n : \u2115\nIH : \u2200 m < n, \u2200 {a : Fin m \u2192 \u2115}, (List.ofFn fun i => List.ofFn (Fin.ranges m a i)) = (List.ofFn a).ranges\na : Fin n \u2192 \u2115\n\u22a2 (List.ofFn fun i => List.ofFn (Fin.ranges n a i)) = (List.ofFn a).ranges",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/Data/Fin/Basic.lean#L450"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-23T10:22:30+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "a1f05090008ab6de706efb3b26925f41b52228f71abf992f90c0128ce39fa908"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "Ferinko/4.21.0-rc3",
        "commit": "2256d242b01c970877f0cab34ff6e9a2421bb0c8",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/LiftContext.lean",
        "start_line": 594,
        "start_column": 4,
        "end_line": 594,
        "end_column": 9
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d\u00b2 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : Inhabited InnerStmtOut\nouterRelIn : OuterStmtIn \u2192 OuterWitIn \u2192 Prop\nouterRelOut : OuterStmtOut \u2192 OuterWitOut \u2192 Prop\ninnerRelIn : InnerStmtIn \u2192 InnerWitIn \u2192 Prop\ninnerRelOut : InnerStmtOut \u2192 InnerWitOut \u2192 Prop\nknowledgeError : NNReal\nlens : ContextLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensInv : WitnessLensInv OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensKnowledgeSound :\n  ContextLens.IsKnowledgeSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn\n    InnerWitOut outerRelIn innerRelIn outerRelOut innerRelOut (fun x x => True) lensInv lens\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nE : StraightlineExtractor pSpec oSpec InnerStmtIn InnerWitIn InnerWitOut\nh' :\n  \u2200 (stmtIn : InnerStmtIn) (witIn : InnerWitIn)\n    (prover : Prover pSpec oSpec InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut),\n    [fun x =>\n        match x with\n        | ((fst, witOut), stmtOut, transcript, proveQueryLog, verifyQueryLog) =>\n          \u00acinnerRelIn stmtIn (E witOut stmtIn transcript proveQueryLog.fst verifyQueryLog) \u2227\n            innerRelOut stmtOut witOut|Reduction.runWithLog stmtIn witIn { prover := prover, verifier := V }] \u2264\n      \u2191knowledgeError\nouterStmtIn : OuterStmtIn\nouterWitIn : OuterWitIn\nouterP : Prover pSpec oSpec OuterStmtIn OuterWitIn OuterStmtOut OuterWitOut\ninnerP : Prover pSpec oSpec InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut :=\n  { toProverState := outerP.toProverState, input := fun x x => outerP.input outerStmtIn outerWitIn,\n    sendMessage := outerP.sendMessage, receiveChallenge := outerP.receiveChallenge,\n    output := fun state =>\n      @Prover.liftContext.match_4 OuterStmtOut OuterWitOut (fun x => InnerStmtOut \u00d7 InnerWitOut) (outerP.output state)\n        fun outerStmtOut outerWitOut =>\n        (default, WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv outerWitOut) }\nh_innerP_input :\n  \u2200 {innerStmtIn : InnerStmtIn} {innerWitIn : InnerWitIn},\n    innerP.input innerStmtIn innerWitIn = outerP.input outerStmtIn outerWitIn\nhR :\n  [fun x =>\n      \u00acinnerRelIn\n            (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n              (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerStmtIn)\n            (E x.1.2\n              (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                  InnerWitIn InnerWitOut lens)\n                outerStmtIn)\n              x.2.2.1 x.2.2.2.1.fst x.2.2.2.2) \u2227\n        innerRelOut x.2.1 x.1.2|do\n      let __discr \u2190\n        Prover.runWithLog\n            (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n              (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerStmtIn)\n            (WitnessLens.projWit OuterWitIn OuterWitOut InnerWitIn InnerWitOut\n              (ContextLens.toWitnessLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerWitIn)\n            innerP\n      (fun a => ((__discr.1, __discr.2.1), a.1, __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (V.verify\n                    (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                      (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn\n                        OuterWitOut InnerWitIn InnerWitOut lens)\n                      outerStmtIn)\n                    __discr.2.2.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)] \u2264\n    \u2191knowledgeError\ninnerStmtIn : InnerStmtIn\ninnerWitIn : InnerWitIn\n\u22a2 Prover.runWithLog innerStmtIn innerWitIn innerP = do\n    let __discr \u2190 Prover.runWithLog outerStmtIn outerWitIn outerP\n    @Verifier.liftContext_knowledgeSoundness.match_2 n pSpec \u03b9 oSpec OuterStmtOut OuterWitOut\n        (fun __discr =>\n          OracleComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n            (InnerStmtOut \u00d7 InnerWitOut \u00d7 pSpec.FullTranscript \u00d7 (oSpec ++\u2092 [pSpec.Challenge]\u2092).QueryLog))\n        __discr fun fst outerWitOut rest =>\n        pure (default, WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv outerWitOut, rest)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/2256d242b01c970877f0cab34ff6e9a2421bb0c8/ArkLib/OracleReduction/Composition/LiftContext.lean#L594"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-02T21:57:20+07:00",
        "inclusion_date": "2025-06-06T07:12:18.489282+00:00"
      },
      "id": "15ea90b4e3a84f67458dd56b632f2d6f57a1bcb4e7184e8a0f1d304363073de6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "Ferinko/4.21.0-rc3",
        "commit": "2256d242b01c970877f0cab34ff6e9a2421bb0c8",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/LiftContext.lean",
        "start_line": 599,
        "start_column": 2,
        "end_line": 599,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d\u00b2 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : Inhabited InnerStmtOut\nouterRelIn : OuterStmtIn \u2192 OuterWitIn \u2192 Prop\nouterRelOut : OuterStmtOut \u2192 OuterWitOut \u2192 Prop\ninnerRelIn : InnerStmtIn \u2192 InnerWitIn \u2192 Prop\ninnerRelOut : InnerStmtOut \u2192 InnerWitOut \u2192 Prop\nknowledgeError : NNReal\nlens : ContextLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensInv : WitnessLensInv OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensKnowledgeSound :\n  ContextLens.IsKnowledgeSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn\n    InnerWitOut outerRelIn innerRelIn outerRelOut innerRelOut (fun x x => True) lensInv lens\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nE : StraightlineExtractor pSpec oSpec InnerStmtIn InnerWitIn InnerWitOut\nh' :\n  \u2200 (stmtIn : InnerStmtIn) (witIn : InnerWitIn)\n    (prover : Prover pSpec oSpec InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut),\n    [fun x =>\n        match x with\n        | ((fst, witOut), stmtOut, transcript, proveQueryLog, verifyQueryLog) =>\n          \u00acinnerRelIn stmtIn (E witOut stmtIn transcript proveQueryLog.fst verifyQueryLog) \u2227\n            innerRelOut stmtOut witOut|Reduction.runWithLog stmtIn witIn { prover := prover, verifier := V }] \u2264\n      \u2191knowledgeError\nouterStmtIn : OuterStmtIn\nouterWitIn : OuterWitIn\nouterP : Prover pSpec oSpec OuterStmtIn OuterWitIn OuterStmtOut OuterWitOut\ninnerP : Prover pSpec oSpec InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut :=\n  { toProverState := outerP.toProverState, input := fun x x => outerP.input outerStmtIn outerWitIn,\n    sendMessage := outerP.sendMessage, receiveChallenge := outerP.receiveChallenge,\n    output := fun state =>\n      @Prover.liftContext.match_4 OuterStmtOut OuterWitOut (fun x => InnerStmtOut \u00d7 InnerWitOut) (outerP.output state)\n        fun outerStmtOut outerWitOut =>\n        (default, WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv outerWitOut) }\nh_innerP_input :\n  \u2200 {innerStmtIn : InnerStmtIn} {innerWitIn : InnerWitIn},\n    innerP.input innerStmtIn innerWitIn = outerP.input outerStmtIn outerWitIn\nhR :\n  [fun x =>\n      \u00acinnerRelIn\n            (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n              (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerStmtIn)\n            (E x.1.2\n              (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                  InnerWitIn InnerWitOut lens)\n                outerStmtIn)\n              x.2.2.1 x.2.2.2.1.fst x.2.2.2.2) \u2227\n        innerRelOut x.2.1 x.1.2|do\n      let __discr \u2190\n        Prover.runWithLog\n            (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n              (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerStmtIn)\n            (WitnessLens.projWit OuterWitIn OuterWitOut InnerWitIn InnerWitOut\n              (ContextLens.toWitnessLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerWitIn)\n            innerP\n      (fun a => ((__discr.1, __discr.2.1), a.1, __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (V.verify\n                    (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                      (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn\n                        OuterWitOut InnerWitIn InnerWitOut lens)\n                      outerStmtIn)\n                    __discr.2.2.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)] \u2264\n    \u2191knowledgeError\nh_innerP_runWithLog :\n  \u2200 {innerStmtIn : InnerStmtIn} {innerWitIn : InnerWitIn},\n    Prover.runWithLog innerStmtIn innerWitIn innerP = do\n      let __discr \u2190 Prover.runWithLog outerStmtIn outerWitIn outerP\n      @Verifier.liftContext_knowledgeSoundness.match_2 n pSpec \u03b9 oSpec OuterStmtOut OuterWitOut\n          (fun __discr =>\n            OracleComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n              (InnerStmtOut \u00d7 InnerWitOut \u00d7 pSpec.FullTranscript \u00d7 (oSpec ++\u2092 [pSpec.Challenge]\u2092).QueryLog))\n          __discr fun fst outerWitOut rest =>\n          pure (default, WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv outerWitOut, rest)\n\u22a2 [fun x =>\n      \u00acouterRelIn outerStmtIn\n            (WitnessLens.liftWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv\n              (x.1.2,\n                E (WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv x.1.2)\n                  (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                    (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn\n                      OuterWitOut InnerWitIn InnerWitOut lens)\n                    outerStmtIn)\n                  x.2.2.1 x.2.2.2.1.fst x.2.2.2.2)) \u2227\n        outerRelOut x.2.1 x.1.2|do\n      let __discr \u2190 Prover.runWithLog outerStmtIn outerWitIn outerP\n      (fun a =>\n            ((__discr.1, __discr.2.1),\n              StatementLens.liftStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                  InnerWitIn InnerWitOut lens)\n                (outerStmtIn, a.1),\n              __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (V.verify\n                    (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                      (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn\n                        OuterWitOut InnerWitIn InnerWitOut lens)\n                      outerStmtIn)\n                    __discr.2.2.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)] \u2264\n    [fun x =>\n      \u00acinnerRelIn\n            (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n              (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerStmtIn)\n            (E x.1.2\n              (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                  InnerWitIn InnerWitOut lens)\n                outerStmtIn)\n              x.2.2.1 x.2.2.2.1.fst x.2.2.2.2) \u2227\n        innerRelOut x.2.1 x.1.2|do\n      let a \u2190 Prover.runWithLog outerStmtIn outerWitIn outerP\n      (fun a_1 =>\n            ((default, WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv a.2.1), a_1.1, a.2.2.1,\n              a.2.2.2, a_1.2)) <$>\n          (simulateQ loggingOracle\n                  (V.verify\n                    (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                      (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn\n                        OuterWitOut InnerWitIn InnerWitOut lens)\n                      outerStmtIn)\n                    a.2.2.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)]",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/2256d242b01c970877f0cab34ff6e9a2421bb0c8/ArkLib/OracleReduction/Composition/LiftContext.lean#L599"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-06T07:12:18.489282+00:00"
      },
      "id": "cff015cd01b66517aa3d518041825697275b00949b2b7e723f86392f511f38fa"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "Ferinko/4.21.0-rc3",
        "commit": "2256d242b01c970877f0cab34ff6e9a2421bb0c8",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/ProtocolSpec.lean",
        "start_line": 354,
        "start_column": 2,
        "end_line": 354,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\nT : (i : Fin (m + 1)) \u2192 (pSpec i).FullTranscript\ni : Fin m\n\u22a2 @Fin.dfoldl (\u2191i + 1)\n      (fun i_1 =>\n        FullTranscript\n          (ProtocolSpec.compose (\u2191i_1)\n            (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_5 (\u2191i + 1) i_1)\n              (Fin.take (\u2191i + 1 + 1) \u22ef n))\n            (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_5 (\u2191i + 1) i_1)\n              (Fin.take (\u2191i + 1 + 1) \u22ef pSpec))))\n      (fun i_1 acc =>\n        @dcast\u2082 \u2115 ProtocolSpec (@FullTranscript) ProtocolSpec.instDepCast ProtocolSpec.FullTranscript.instDepCast\u2082\n          (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i + 1) i_1) i_2)) +\n            n (Fin.castLE \u22ef i_1.succ))\n          (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_7 (\u2191i + 1) i_1) i_2)))\n          (ProtocolSpec.append\n            (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i + 1) i_1) i_2)))\n            (n (Fin.castLE \u22ef i_1.succ))\n            (ProtocolSpec.compose (\u2191i_1)\n              (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i + 1) i_1)\n                (Fin.take (\u2191i + 1 + 1) \u22ef n))\n              (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i + 1) i_1)\n                (Fin.take (\u2191i + 1 + 1) \u22ef pSpec)))\n            (pSpec (Fin.castLE \u22ef i_1.succ)))\n          (ProtocolSpec.compose (\u2191i_1 + 1)\n            (Fin.take (\u2191i_1 + 1 + 1) (ProtocolSpec.FullTranscript.compose._proof_7 (\u2191i + 1) i_1)\n              (Fin.take (\u2191i + 1 + 1) \u22ef n))\n            (Fin.take (\u2191i_1 + 1 + 1) (ProtocolSpec.FullTranscript.compose._proof_7 (\u2191i + 1) i_1)\n              (Fin.take (\u2191i + 1 + 1) \u22ef pSpec)))\n          (ProtocolSpec.FullTranscript.compose._proof_8 (\u2191i + 1) (Fin.take (\u2191i + 1 + 1) \u22ef n) i_1)\n          (ProtocolSpec.FullTranscript.compose._proof_10 (\u2191i + 1) (Fin.take (\u2191i + 1 + 1) \u22ef n)\n            (Fin.take (\u2191i + 1 + 1) \u22ef pSpec) i_1)\n          (ProtocolSpec.FullTranscript.append\n            (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i + 1) i_1) i_2)))\n            (n (Fin.castLE \u22ef i_1.succ))\n            (ProtocolSpec.compose (\u2191i_1)\n              (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i + 1) i_1)\n                (Fin.take (\u2191i + 1 + 1) \u22ef n))\n              (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i + 1) i_1)\n                (Fin.take (\u2191i + 1 + 1) \u22ef pSpec)))\n            (pSpec (Fin.castLE \u22ef i_1.succ)) acc (T (Fin.castLE \u22ef i_1.succ))))\n      (T (Fin.castLE \u22ef 0)) =\n    @dcast\u2082 \u2115 ProtocolSpec (@FullTranscript) ProtocolSpec.instDepCast ProtocolSpec.FullTranscript.instDepCast\u2082\n      (\u2211 i_1, n (Fin.castLE \u22ef i_1) + n i.succ) (\u2211 i_1, n (Fin.castLE \u22ef i_1))\n      (ProtocolSpec.append (\u2211 i_1, n (Fin.castLE \u22ef i_1)) (n i.succ)\n        (ProtocolSpec.compose (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) (Fin.take (\u2191i + 1) \u22ef pSpec)) (pSpec i.succ))\n      (ProtocolSpec.compose (\u2191i + 1) (Fin.take (\u2191i + 1 + 1) \u22ef n) (Fin.take (\u2191i + 1 + 1) \u22ef pSpec)) \u22ef \u22ef\n      (ProtocolSpec.FullTranscript.append (\u2211 i_1, n (Fin.castLE \u22ef i_1)) (n i.succ)\n        (ProtocolSpec.compose (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) (Fin.take (\u2191i + 1) \u22ef pSpec)) (pSpec i.succ)\n        (@Fin.dfoldl (\u2191i)\n          (fun i_1 =>\n            FullTranscript\n              (ProtocolSpec.compose (\u2191i_1)\n                (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_5 (\u2191i) i_1) (Fin.take (\u2191i + 1) \u22ef n))\n                (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_5 (\u2191i) i_1)\n                  (Fin.take (\u2191i + 1) \u22ef pSpec))))\n          (fun i_1 acc =>\n            @dcast\u2082 \u2115 ProtocolSpec (@FullTranscript) ProtocolSpec.instDepCast ProtocolSpec.FullTranscript.instDepCast\u2082\n              (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i) i_1) i_2)) +\n                n (Fin.castLE \u22ef i_1.succ))\n              (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_7 (\u2191i) i_1) i_2)))\n              (ProtocolSpec.append\n                (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i) i_1) i_2)))\n                (n (Fin.castLE \u22ef i_1.succ))\n                (ProtocolSpec.compose (\u2191i_1)\n                  (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i) i_1) (Fin.take (\u2191i + 1) \u22ef n))\n                  (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i) i_1)\n                    (Fin.take (\u2191i + 1) \u22ef pSpec)))\n                (pSpec (Fin.castLE \u22ef i_1.succ)))\n              (ProtocolSpec.compose (\u2191i_1 + 1)\n                (Fin.take (\u2191i_1 + 1 + 1) (ProtocolSpec.FullTranscript.compose._proof_7 (\u2191i) i_1)\n                  (Fin.take (\u2191i + 1) \u22ef n))\n                (Fin.take (\u2191i_1 + 1 + 1) (ProtocolSpec.FullTranscript.compose._proof_7 (\u2191i) i_1)\n                  (Fin.take (\u2191i + 1) \u22ef pSpec)))\n              (ProtocolSpec.FullTranscript.compose._proof_8 (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) i_1)\n              (ProtocolSpec.FullTranscript.compose._proof_10 (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) (Fin.take (\u2191i + 1) \u22ef pSpec)\n                i_1)\n              (ProtocolSpec.FullTranscript.append\n                (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i) i_1) i_2)))\n                (n (Fin.castLE \u22ef i_1.succ))\n                (ProtocolSpec.compose (\u2191i_1)\n                  (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i) i_1) (Fin.take (\u2191i + 1) \u22ef n))\n                  (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i) i_1)\n                    (Fin.take (\u2191i + 1) \u22ef pSpec)))\n                (pSpec (Fin.castLE \u22ef i_1.succ)) acc (T (Fin.castLE \u22ef i_1.succ))))\n          (T (Fin.castLE \u22ef 0)))\n        (T i.succ))",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/2256d242b01c970877f0cab34ff6e9a2421bb0c8/ArkLib/OracleReduction/Composition/Sequential/ProtocolSpec.lean#L354"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-25T11:02:32+07:00",
        "inclusion_date": "2025-06-06T07:12:18.489282+00:00"
      },
      "id": "8719c68c1b7c1fe3c3a108acb0a175a837f45038afd704460cfdcc39d29bec77"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Sumcheck/SingleRound.lean",
        "start_line": 497,
        "start_column": 57,
        "end_line": 497,
        "end_column": 62
      },
      "debug_info": {
        "goal": "case left\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Unit) \u2192 Sumcheck.Spec.OracleStatement R inst\u271d\u00b3 n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast (Sumcheck.Spec.relation._proof_2 n i.castSucc)))\n        \u2191(@oStmt ()) =\n    target\n\u22a2 (Prover.processRound 1\n        { prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n              verifier :=\n                Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2 i }.toReduction.prover\n        (Prover.processRound 0\n          { prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                verifier :=\n                  Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2 i }.toReduction.prover\n          (pure\n            (@default (Transcript 0 (Sumcheck.Spec.SingleRound.pSpec R inst\u271d\u00b3 deg)) Unique.instInhabited,\n              { prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                          verifier :=\n                            Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                              i }.toReduction.prover.toProverIn.input\n                (Sumcheck.Spec.Statement R n i.castSucc \u00d7 ((i : Unit) \u2192 Sumcheck.Spec.OracleStatement R inst\u271d\u00b3 n deg i))\n                Unit\n                ({ prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                          verifier :=\n                            Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                              i }.toReduction.prover.PrvState\n                  0)\n                (Sumcheck.Spec.Statement.mk R n i.castSucc target challenge, oStmt) witIn\u271d)))).neverFails \u2227\n    \u2200 (a : Transcript 2 (Sumcheck.Spec.SingleRound.pSpec R inst\u271d\u00b3 deg))\n      (b :\n        { prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                  verifier :=\n                    Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                      i }.toReduction.prover.PrvState\n          2),\n      (a, b) \u2208\n          (Prover.processRound 1\n              { prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                    verifier :=\n                      Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2 i }.toReduction.prover\n              (Prover.processRound 0\n                { prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                      verifier :=\n                        Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                          i }.toReduction.prover\n                (pure\n                  (@default (Transcript 0 (Sumcheck.Spec.SingleRound.pSpec R inst\u271d\u00b3 deg)) Unique.instInhabited,\n                    { prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                                verifier :=\n                                  Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                                    i }.toReduction.prover.toProverIn.input\n                      (Sumcheck.Spec.Statement R n i.castSucc \u00d7\n                        ((i : Unit) \u2192 Sumcheck.Spec.OracleStatement R inst\u271d\u00b3 n deg i))\n                      Unit\n                      ({ prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                                verifier :=\n                                  Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                                    i }.toReduction.prover.PrvState\n                        0)\n                      (Sumcheck.Spec.Statement.mk R n i.castSucc target challenge, oStmt) witIn\u271d)))).support \u2192\n        (Verifier.run (Sumcheck.Spec.Statement.mk R n i.castSucc target challenge, oStmt) a\n            { prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                  verifier :=\n                    Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                      i }.toReduction.verifier).neverFails",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/ProofSystem/Sumcheck/SingleRound.lean#L497"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "a419a1100dd61974a532aa34f314338e6d4cb887c4abb099e87173a755b54614"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/LiftContext/Basic.lean",
        "start_line": 710,
        "start_column": 4,
        "end_line": 710,
        "end_column": 9
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d\u00b2 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : Inhabited InnerStmtOut\nouterRelIn : OuterStmtIn \u2192 OuterWitIn \u2192 Prop\nouterRelOut : OuterStmtOut \u2192 OuterWitOut \u2192 Prop\ninnerRelIn : InnerStmtIn \u2192 InnerWitIn \u2192 Prop\ninnerRelOut : InnerStmtOut \u2192 InnerWitOut \u2192 Prop\nknowledgeError : NNReal\nlens : ContextLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensInv : WitnessLensInv OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensKnowledgeSound :\n  ContextLens.IsKnowledgeSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn\n    InnerWitOut outerRelIn innerRelIn outerRelOut innerRelOut (fun x x => True) lensInv lens\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nE : StraightlineExtractor pSpec oSpec InnerStmtIn InnerWitIn InnerWitOut\nh' :\n  \u2200 (stmtIn : InnerStmtIn) (witIn : InnerWitIn)\n    (prover : Prover pSpec oSpec InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut),\n    [fun x =>\n        match x with\n        | (stmtIn, witIn, stmtOut, witOut) => \u00acinnerRelIn stmtIn witIn \u2227 innerRelOut stmtOut witOut|do\n        let __discr \u2190 Reduction.runWithLog stmtIn witIn { prover := prover, verifier := V }\n        match __discr with\n          | ((fst, witOut), stmtOut, transcript, proveQueryLog, verifyQueryLog) => do\n            let extractedWitIn \u2190\n              (E witOut stmtIn transcript proveQueryLog.fst verifyQueryLog).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n            pure (stmtIn, extractedWitIn, stmtOut, witOut)] \u2264\n      \u2191knowledgeError\nouterStmtIn : OuterStmtIn\nouterWitIn : OuterWitIn\nouterP : Prover pSpec oSpec OuterStmtIn OuterWitIn OuterStmtOut OuterWitOut\ninnerP : Prover pSpec oSpec InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut :=\n  { toProverState := outerP.toProverState, input := fun x x => outerP.input outerStmtIn outerWitIn,\n    sendMessage := outerP.sendMessage, receiveChallenge := outerP.receiveChallenge,\n    output := fun state =>\n      @OracleContextLens.instContextLens.match_3 OuterStmtOut OuterWitOut (fun x => InnerStmtOut \u00d7 InnerWitOut)\n        (outerP.output state) fun outerStmtOut outerWitOut =>\n        (default, WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv outerWitOut) }\nh_innerP_input :\n  \u2200 {innerStmtIn : InnerStmtIn} {innerWitIn : InnerWitIn},\n    innerP.input innerStmtIn innerWitIn = outerP.input outerStmtIn outerWitIn\nhR :\n  [fun x => \u00acinnerRelIn x.1 x.2.1 \u2227 innerRelOut x.2.2.1 x.2.2.2|do\n      let x \u2190\n        Prover.runWithLog\n            (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n              (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerStmtIn)\n            (WitnessLens.projWit OuterWitIn OuterWitOut InnerWitIn InnerWitOut\n              (ContextLens.toWitnessLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerWitIn)\n            innerP\n      let a \u2190\n        (simulateQ loggingOracle\n                  (V.verify\n                    (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                      (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn\n                        OuterWitOut InnerWitIn InnerWitOut lens)\n                      outerStmtIn)\n                    x.2.2.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n      (fun a_1 =>\n            (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                  InnerWitIn InnerWitOut lens)\n                outerStmtIn,\n              a_1, a.1, x.2.1)) <$>\n          (E x.2.1\n                (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                  (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                    InnerWitIn InnerWitOut lens)\n                  outerStmtIn)\n                x.2.2.1 x.2.2.2.fst a.2).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)] \u2264\n    \u2191knowledgeError\ninnerStmtIn : InnerStmtIn\ninnerWitIn : InnerWitIn\n\u22a2 Prover.runWithLog innerStmtIn innerWitIn innerP = do\n    let __discr \u2190 Prover.runWithLog outerStmtIn outerWitIn outerP\n    @Verifier.liftContext_knowledgeSoundness.match_2 n pSpec \u03b9 oSpec OuterStmtOut OuterWitOut\n        (fun __discr =>\n          OracleComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n            (InnerStmtOut \u00d7 InnerWitOut \u00d7 pSpec.FullTranscript \u00d7 (oSpec ++\u2092 [pSpec.Challenge]\u2092).QueryLog))\n        __discr fun fst outerWitOut rest =>\n        pure (default, WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv outerWitOut, rest)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/OracleReduction/LiftContext/Basic.lean#L710"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-02T21:57:20+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "8c9d72025c174cb57be8c399fede3c91d51200da17e307d948f112c3aea1eb78"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/LiftContext/Basic.lean",
        "start_line": 715,
        "start_column": 2,
        "end_line": 715,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d\u00b2 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : Inhabited InnerStmtOut\nouterRelIn : OuterStmtIn \u2192 OuterWitIn \u2192 Prop\nouterRelOut : OuterStmtOut \u2192 OuterWitOut \u2192 Prop\ninnerRelIn : InnerStmtIn \u2192 InnerWitIn \u2192 Prop\ninnerRelOut : InnerStmtOut \u2192 InnerWitOut \u2192 Prop\nknowledgeError : NNReal\nlens : ContextLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensInv : WitnessLensInv OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensKnowledgeSound :\n  ContextLens.IsKnowledgeSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn\n    InnerWitOut outerRelIn innerRelIn outerRelOut innerRelOut (fun x x => True) lensInv lens\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nE : StraightlineExtractor pSpec oSpec InnerStmtIn InnerWitIn InnerWitOut\nh' :\n  \u2200 (stmtIn : InnerStmtIn) (witIn : InnerWitIn)\n    (prover : Prover pSpec oSpec InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut),\n    [fun x =>\n        match x with\n        | (stmtIn, witIn, stmtOut, witOut) => \u00acinnerRelIn stmtIn witIn \u2227 innerRelOut stmtOut witOut|do\n        let __discr \u2190 Reduction.runWithLog stmtIn witIn { prover := prover, verifier := V }\n        match __discr with\n          | ((fst, witOut), stmtOut, transcript, proveQueryLog, verifyQueryLog) => do\n            let extractedWitIn \u2190\n              (E witOut stmtIn transcript proveQueryLog.fst verifyQueryLog).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n            pure (stmtIn, extractedWitIn, stmtOut, witOut)] \u2264\n      \u2191knowledgeError\nouterStmtIn : OuterStmtIn\nouterWitIn : OuterWitIn\nouterP : Prover pSpec oSpec OuterStmtIn OuterWitIn OuterStmtOut OuterWitOut\ninnerP : Prover pSpec oSpec InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut :=\n  { toProverState := outerP.toProverState, input := fun x x => outerP.input outerStmtIn outerWitIn,\n    sendMessage := outerP.sendMessage, receiveChallenge := outerP.receiveChallenge,\n    output := fun state =>\n      @OracleContextLens.instContextLens.match_3 OuterStmtOut OuterWitOut (fun x => InnerStmtOut \u00d7 InnerWitOut)\n        (outerP.output state) fun outerStmtOut outerWitOut =>\n        (default, WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv outerWitOut) }\nh_innerP_input :\n  \u2200 {innerStmtIn : InnerStmtIn} {innerWitIn : InnerWitIn},\n    innerP.input innerStmtIn innerWitIn = outerP.input outerStmtIn outerWitIn\nhR :\n  [fun x => \u00acinnerRelIn x.1 x.2.1 \u2227 innerRelOut x.2.2.1 x.2.2.2|do\n      let x \u2190\n        Prover.runWithLog\n            (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n              (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerStmtIn)\n            (WitnessLens.projWit OuterWitIn OuterWitOut InnerWitIn InnerWitOut\n              (ContextLens.toWitnessLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerWitIn)\n            innerP\n      let a \u2190\n        (simulateQ loggingOracle\n                  (V.verify\n                    (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                      (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn\n                        OuterWitOut InnerWitIn InnerWitOut lens)\n                      outerStmtIn)\n                    x.2.2.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n      (fun a_1 =>\n            (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                  InnerWitIn InnerWitOut lens)\n                outerStmtIn,\n              a_1, a.1, x.2.1)) <$>\n          (E x.2.1\n                (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                  (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                    InnerWitIn InnerWitOut lens)\n                  outerStmtIn)\n                x.2.2.1 x.2.2.2.fst a.2).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)] \u2264\n    \u2191knowledgeError\nh_innerP_runWithLog :\n  \u2200 {innerStmtIn : InnerStmtIn} {innerWitIn : InnerWitIn},\n    Prover.runWithLog innerStmtIn innerWitIn innerP = do\n      let __discr \u2190 Prover.runWithLog outerStmtIn outerWitIn outerP\n      @Verifier.liftContext_knowledgeSoundness.match_2 n pSpec \u03b9 oSpec OuterStmtOut OuterWitOut\n          (fun __discr =>\n            OracleComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n              (InnerStmtOut \u00d7 InnerWitOut \u00d7 pSpec.FullTranscript \u00d7 (oSpec ++\u2092 [pSpec.Challenge]\u2092).QueryLog))\n          __discr fun fst outerWitOut rest =>\n          pure (default, WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv outerWitOut, rest)\n\u22a2 [fun x => \u00acouterRelIn x.1 x.2.1 \u2227 outerRelOut x.2.2.1 x.2.2.2|do\n      let x \u2190 Prover.runWithLog outerStmtIn outerWitIn outerP\n      let a \u2190\n        (simulateQ loggingOracle\n                  (V.verify\n                    (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                      (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn\n                        OuterWitOut InnerWitIn InnerWitOut lens)\n                      outerStmtIn)\n                    x.2.2.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n      (fun a_1 =>\n            (outerStmtIn, WitnessLens.liftWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv (x.2.1, a_1),\n              StatementLens.liftStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                  InnerWitIn InnerWitOut lens)\n                (outerStmtIn, a.1),\n              x.2.1)) <$>\n          (E (WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv x.2.1)\n                (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                  (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                    InnerWitIn InnerWitOut lens)\n                  outerStmtIn)\n                x.2.2.1 x.2.2.2.fst a.2).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)] \u2264\n    [fun x => \u00acinnerRelIn x.1 x.2.1 \u2227 innerRelOut x.2.2.1 x.2.2.2|do\n      let a \u2190 Prover.runWithLog outerStmtIn outerWitIn outerP\n      let a_1 \u2190\n        (simulateQ loggingOracle\n                  (V.verify\n                    (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                      (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn\n                        OuterWitOut InnerWitIn InnerWitOut lens)\n                      outerStmtIn)\n                    a.2.2.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n      (fun a_2 =>\n            (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                  InnerWitIn InnerWitOut lens)\n                outerStmtIn,\n              a_2, a_1.1, WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv a.2.1)) <$>\n          (E (WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv a.2.1)\n                (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                  (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                    InnerWitIn InnerWitOut lens)\n                  outerStmtIn)\n                a.2.2.1 a.2.2.2.fst a_1.2).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)]",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/OracleReduction/LiftContext/Basic.lean#L715"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "dead7042541b1ae17f9dea474a919a77b5c39602bfb36862b66c4dfc6fc059cb"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/LiftContext/Basic.lean",
        "start_line": 749,
        "start_column": 2,
        "end_line": 749,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut : Type\ninst\u271d\u00b2 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : Inhabited InnerStmtOut\nouterLangIn : Set OuterStmtIn\nouterLangOut : Set OuterStmtOut\ninnerLangIn : Set InnerStmtIn\ninnerLangOut : Set InnerStmtOut\nrbrSoundnessError : pSpec.ChallengeIdx \u2192 NNReal\nlens : StatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nlensRBRSound :\n  StatementLens.IsRBRSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut outerLangIn outerLangOut innerLangIn\n    innerLangOut (Verifier.compatStatement n pSpec \u03b9 oSpec OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens V)\n    lens\nstF : StateFunction pSpec oSpec innerLangIn innerLangOut V\nh :\n  \u2200 stmtIn \u2209 innerLangIn,\n    \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec InnerStmtIn WitIn InnerStmtOut WitOut)\n      (a : Fin n) (b : (pSpec a).1 = Direction.V_to_P),\n      [fun x => \u00acstF.toFun a.castSucc stmtIn x.1.1 \u2227 stF.toFun a.succ stmtIn (Transcript.snoc x.2 x.1.1)|do\n          let __do_lift \u2190 Prover.runToRound a.castSucc stmtIn witIn prover\n          Prod.mk __do_lift <$> liftM (query (Sum.inr \u27e8a, b\u27e9) ())] \u2264\n        \u2191(rbrSoundnessError \u27e8a, b\u27e9)\nouterStmtIn : OuterStmtIn\nhOuterStmtIn : outerStmtIn \u2209 outerLangIn\nWitIn WitOut : Type\nwitIn : WitIn\nouterP : Prover pSpec oSpec OuterStmtIn WitIn OuterStmtOut WitOut\nroundIdx : Fin n\nhDir : (pSpec roundIdx).1 = Direction.V_to_P\ninnerP : Prover pSpec oSpec InnerStmtIn WitIn InnerStmtOut WitOut\nh' :\n  [fun x =>\n      \u00acstF.toFun roundIdx.castSucc\n            (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens outerStmtIn) x.1.1 \u2227\n        stF.toFun roundIdx.succ\n          (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens outerStmtIn)\n          (Transcript.snoc x.2 x.1.1)|do\n      let __do_lift \u2190\n        Prover.runToRound roundIdx.castSucc\n            (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens outerStmtIn) witIn innerP\n      Prod.mk __do_lift <$> liftM (query (Sum.inr \u27e8roundIdx, hDir\u27e9) ())] \u2264\n    \u2191(rbrSoundnessError \u27e8roundIdx, hDir\u27e9)\n\u22a2 failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/OracleReduction/LiftContext/Basic.lean#L749"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "bc8cbe91c5086de444ab0231b121ac6a922ef63b074efdb1361adaf613226627"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/LiftContext/Basic.lean",
        "start_line": 774,
        "start_column": 2,
        "end_line": 774,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro.intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nouterRelIn : OuterStmtIn \u2192 OuterWitIn \u2192 Prop\nouterRelOut : OuterStmtOut \u2192 OuterWitOut \u2192 Prop\ninnerRelIn : InnerStmtIn \u2192 InnerWitIn \u2192 Prop\ninnerRelOut : InnerStmtOut \u2192 InnerWitOut \u2192 Prop\nrbrKnowledgeError : pSpec.ChallengeIdx \u2192 NNReal\nlens : ContextLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensInv : WitnessLensInv OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensKnowledgeSound :\n  ContextLens.IsKnowledgeSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn\n    InnerWitOut outerRelIn innerRelIn outerRelOut innerRelOut (fun x x => True) lensInv lens\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nstF : StateFunction pSpec oSpec (Function.language innerRelIn) (Function.language innerRelOut) V\nE : RBRExtractor pSpec oSpec InnerStmtIn InnerWitIn\nh :\n  \u2200 (stmtIn : InnerStmtIn) (witIn : InnerWitIn)\n    (prover : Prover pSpec oSpec InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut) (a : Fin n)\n    (b : (pSpec a).1 = Direction.V_to_P),\n    [fun x =>\n        \u00acinnerRelIn stmtIn (E a.castSucc stmtIn x.1.1 x.1.2.2.fst) \u2227\n          \u00acstF.toFun a.castSucc stmtIn x.1.1 \u2227 stF.toFun a.succ stmtIn (Transcript.snoc x.2 x.1.1)|do\n        let result \u2190 Prover.runWithLogToRound a.castSucc stmtIn witIn prover\n        Prod.mk result <$> liftM (query (Sum.inr \u27e8a, b\u27e9) ())] \u2264\n      \u2191(rbrKnowledgeError \u27e8a, b\u27e9)\n\u22a2 \u2203 stateFunction extractor,\n    \u2200 (stmtIn : OuterStmtIn) (witIn : OuterWitIn)\n      (prover : Prover pSpec oSpec OuterStmtIn OuterWitIn OuterStmtOut OuterWitOut) (a : Fin n)\n      (b : (pSpec a).1 = Direction.V_to_P),\n      [fun x =>\n          \u00acouterRelIn stmtIn (extractor a.castSucc stmtIn x.1.1 x.1.2.2.fst) \u2227\n            \u00acstateFunction.toFun a.castSucc stmtIn x.1.1 \u2227\n              stateFunction.toFun a.succ stmtIn (Transcript.snoc x.2 x.1.1)|do\n          let result \u2190 Prover.runWithLogToRound a.castSucc stmtIn witIn prover\n          Prod.mk result <$> liftM (query (Sum.inr \u27e8a, b\u27e9) ())] \u2264\n        \u2191(rbrKnowledgeError \u27e8a, b\u27e9)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/OracleReduction/LiftContext/Basic.lean#L774"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "ae698fd48269e78698365af2f240381d3517d7df7aeb432c54e6198d7187d0e4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Security/Basic.lean",
        "start_line": 509,
        "start_column": 2,
        "end_line": 509,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nStmtIn WitIn StmtOut WitOut : Type\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nknowledgeError : NNReal\nhLt : knowledgeError < 1\nextractor : @StraightlineExtractor n pSpec \u03b9 oSpec StmtIn WitIn WitOut\nhKS :\n  \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n    [fun x => \u00acrelIn x.1 x.2.1 \u2227 relOut x.2.2.1 x.2.2.2|do\n        let __discr \u2190 Reduction.runWithLog stmtIn witIn { prover := prover, verifier := verifier }\n        (fun a => (stmtIn, a, __discr.2.1, __discr.1.2)) <$>\n            liftComp (@extractor __discr.1.2 stmtIn __discr.2.2.1 __discr.2.2.2.1.fst __discr.2.2.2.2)\n              (oSpec ++\u2092 [pSpec.Challenge]\u2092)] \u2264\n      \u2191knowledgeError\nWitIn' WitOut' : Type\nwitIn' : WitIn'\nprover : Prover pSpec oSpec StmtIn WitIn' StmtOut WitOut'\nstmtIn : StmtIn\nhStmtIn : \u2200 (x : WitIn), \u00acrelIn stmtIn x\n\u22a2 [fun x => \u2203 wit, relOut x.2.1 wit|Reduction.run stmtIn witIn' { prover := prover, verifier := verifier }] \u2264\n    \u2191knowledgeError",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/OracleReduction/Security/Basic.lean#L509"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "d3ec08cf593d498cef33050a7b970f019ad0da076341cbf2b5a1de84341633fc"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/Append.lean",
        "start_line": 331,
        "start_column": 17,
        "end_line": 331,
        "end_column": 22
      },
      "debug_info": {
        "goal": "m n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b9 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nO\u2098\u2081 : (i : pSpec\u2081.MessageIdx) \u2192 OracleInterface (pSpec\u2081.Message i)\nO\u2098\u2082 : (i : pSpec\u2082.MessageIdx) \u2192 OracleInterface (pSpec\u2082.Message i)\n\u03b9\u209b\u2081 : Type\nOStmt\u2081 : \u03b9\u209b\u2081 \u2192 Type\nO\u209b\u2081 : (i : \u03b9\u209b\u2081) \u2192 OracleInterface (OStmt\u2081 i)\n\u03b9\u209b\u2082 : Type\nOStmt\u2082 : \u03b9\u209b\u2082 \u2192 Type\nO\u209b\u2082 : (i : \u03b9\u209b\u2082) \u2192 OracleInterface (OStmt\u2082 i)\n\u03b9\u209b\u2083 : Type\nOStmt\u2083 : \u03b9\u209b\u2083 \u2192 Type\nO\u209b\u2083 : (i : \u03b9\u209b\u2083) \u2192 OracleInterface (OStmt\u2083 i)\nlang\u2081 : Set Stmt\u2081\nlang\u2082 : Set Stmt\u2082\nlang\u2083 : Set Stmt\u2083\ninst\u271d : oSpec.FiniteRange\nV\u2081 : Verifier pSpec\u2081 oSpec Stmt\u2081 Stmt\u2082\nV\u2082 : Verifier pSpec\u2082 oSpec Stmt\u2082 Stmt\u2083\nS\u2081 : StateFunction pSpec\u2081 oSpec lang\u2081 lang\u2082 V\u2081\nS\u2082 : StateFunction pSpec\u2082 oSpec lang\u2082 lang\u2083 V\u2082\nverify : Stmt\u2081 \u2192 pSpec\u2081.FullTranscript \u2192 Stmt\u2082\nhVerify : V\u2081 = { verify := fun stmt tr => pure (verify stmt tr) }\n\u22a2 \u2200 stmt \u2209 lang\u2081,\n    (if h : \u21910 \u2264 m then S\u2081.toFun \u27e8\u21910, \u22ef\u27e9 stmt (\u22ef.mp default.fst)\n      else\n        S\u2081.toFun \u27e8m, \u22ef\u27e9 stmt (\u22ef.mp default.fst) \u2227 S\u2082.toFun \u27e8\u21910 - m, \u22ef\u27e9 (verify stmt (\u22ef.mp default.fst)) default.snd) =\n      False",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/OracleReduction/Composition/Sequential/Append.lean#L331"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-04T15:06:56+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "1fd03cdcabd3ab23b3df013914b28359f0812ed3c4b7e0db057e3356d1f67e91"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/Append.lean",
        "start_line": 332,
        "start_column": 16,
        "end_line": 332,
        "end_column": 21
      },
      "debug_info": {
        "goal": "m n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b9 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nO\u2098\u2081 : (i : pSpec\u2081.MessageIdx) \u2192 OracleInterface (pSpec\u2081.Message i)\nO\u2098\u2082 : (i : pSpec\u2082.MessageIdx) \u2192 OracleInterface (pSpec\u2082.Message i)\n\u03b9\u209b\u2081 : Type\nOStmt\u2081 : \u03b9\u209b\u2081 \u2192 Type\nO\u209b\u2081 : (i : \u03b9\u209b\u2081) \u2192 OracleInterface (OStmt\u2081 i)\n\u03b9\u209b\u2082 : Type\nOStmt\u2082 : \u03b9\u209b\u2082 \u2192 Type\nO\u209b\u2082 : (i : \u03b9\u209b\u2082) \u2192 OracleInterface (OStmt\u2082 i)\n\u03b9\u209b\u2083 : Type\nOStmt\u2083 : \u03b9\u209b\u2083 \u2192 Type\nO\u209b\u2083 : (i : \u03b9\u209b\u2083) \u2192 OracleInterface (OStmt\u2083 i)\nlang\u2081 : Set Stmt\u2081\nlang\u2082 : Set Stmt\u2082\nlang\u2083 : Set Stmt\u2083\ninst\u271d : oSpec.FiniteRange\nV\u2081 : Verifier pSpec\u2081 oSpec Stmt\u2081 Stmt\u2082\nV\u2082 : Verifier pSpec\u2082 oSpec Stmt\u2082 Stmt\u2083\nS\u2081 : StateFunction pSpec\u2081 oSpec lang\u2081 lang\u2082 V\u2081\nS\u2082 : StateFunction pSpec\u2082 oSpec lang\u2082 lang\u2083 V\u2082\nverify : Stmt\u2081 \u2192 pSpec\u2081.FullTranscript \u2192 Stmt\u2082\nhVerify : V\u2081 = { verify := fun stmt tr => pure (verify stmt tr) }\n\u22a2 \u2200 (m_1 : Fin (m + n)),\n    (pSpec\u2081 ++\u209a pSpec\u2082).getDir m_1 = Direction.P_to_V \u2192\n      \u2200 (stmt : Stmt\u2081) (tr : Transcript m_1.castSucc (pSpec\u2081 ++\u209a pSpec\u2082)),\n        (if h : \u2191m_1.castSucc \u2264 m then S\u2081.toFun \u27e8\u2191m_1.castSucc, \u22ef\u27e9 stmt (\u22ef.mp tr.fst)\n            else\n              S\u2081.toFun \u27e8m, \u22ef\u27e9 stmt (\u22ef.mp tr.fst) \u2227 S\u2082.toFun \u27e8\u2191m_1.castSucc - m, \u22ef\u27e9 (verify stmt (\u22ef.mp tr.fst)) tr.snd) =\n            False \u2192\n          \u2200 (msg : (pSpec\u2081 ++\u209a pSpec\u2082).getType m_1),\n            (if h : \u2191m_1.succ \u2264 m then S\u2081.toFun \u27e8\u2191m_1.succ, \u22ef\u27e9 stmt (\u22ef.mp (Transcript.snoc msg tr).fst)\n              else\n                S\u2081.toFun \u27e8m, \u22ef\u27e9 stmt (\u22ef.mp (Transcript.snoc msg tr).fst) \u2227\n                  S\u2082.toFun \u27e8\u2191m_1.succ - m, \u22ef\u27e9 (verify stmt (\u22ef.mp (Transcript.snoc msg tr).fst))\n                    (Transcript.snoc msg tr).snd) =\n              False",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/OracleReduction/Composition/Sequential/Append.lean#L332"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-04T15:06:56+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "0d13392097ae3f6af4eef0015a74484aa6cbe6cdf8e3b65758a3965a827ec439"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/Append.lean",
        "start_line": 333,
        "start_column": 16,
        "end_line": 333,
        "end_column": 21
      },
      "debug_info": {
        "goal": "m n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b9 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nO\u2098\u2081 : (i : pSpec\u2081.MessageIdx) \u2192 OracleInterface (pSpec\u2081.Message i)\nO\u2098\u2082 : (i : pSpec\u2082.MessageIdx) \u2192 OracleInterface (pSpec\u2082.Message i)\n\u03b9\u209b\u2081 : Type\nOStmt\u2081 : \u03b9\u209b\u2081 \u2192 Type\nO\u209b\u2081 : (i : \u03b9\u209b\u2081) \u2192 OracleInterface (OStmt\u2081 i)\n\u03b9\u209b\u2082 : Type\nOStmt\u2082 : \u03b9\u209b\u2082 \u2192 Type\nO\u209b\u2082 : (i : \u03b9\u209b\u2082) \u2192 OracleInterface (OStmt\u2082 i)\n\u03b9\u209b\u2083 : Type\nOStmt\u2083 : \u03b9\u209b\u2083 \u2192 Type\nO\u209b\u2083 : (i : \u03b9\u209b\u2083) \u2192 OracleInterface (OStmt\u2083 i)\nlang\u2081 : Set Stmt\u2081\nlang\u2082 : Set Stmt\u2082\nlang\u2083 : Set Stmt\u2083\ninst\u271d : oSpec.FiniteRange\nV\u2081 : Verifier pSpec\u2081 oSpec Stmt\u2081 Stmt\u2082\nV\u2082 : Verifier pSpec\u2082 oSpec Stmt\u2082 Stmt\u2083\nS\u2081 : StateFunction pSpec\u2081 oSpec lang\u2081 lang\u2082 V\u2081\nS\u2082 : StateFunction pSpec\u2082 oSpec lang\u2082 lang\u2083 V\u2082\nverify : Stmt\u2081 \u2192 pSpec\u2081.FullTranscript \u2192 Stmt\u2082\nhVerify : V\u2081 = { verify := fun stmt tr => pure (verify stmt tr) }\n\u22a2 \u2200 (stmt : Stmt\u2081) (tr : Transcript (Fin.last (m + n)) (pSpec\u2081 ++\u209a pSpec\u2082)),\n    (if h : \u2191(Fin.last (m + n)) \u2264 m then S\u2081.toFun \u27e8\u2191(Fin.last (m + n)), \u22ef\u27e9 stmt (\u22ef.mp tr.fst)\n        else\n          S\u2081.toFun \u27e8m, \u22ef\u27e9 stmt (\u22ef.mp tr.fst) \u2227\n            S\u2082.toFun \u27e8\u2191(Fin.last (m + n)) - m, \u22ef\u27e9 (verify stmt (\u22ef.mp tr.fst)) tr.snd) =\n        False \u2192\n      [fun x => x \u2208 lang\u2083|run stmt tr (Verifier.append m n pSpec\u2081 pSpec\u2082 \u03b9 oSpec Stmt\u2081 Stmt\u2082 Stmt\u2083 V\u2081 V\u2082)] = 0",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/OracleReduction/Composition/Sequential/Append.lean#L333"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-04T15:06:56+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "2542fd402ed9b22382a1560fff6d4eceb7ef9ffa87f709d515fc7cf7473a4899"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/Append.lean",
        "start_line": 423,
        "start_column": 2,
        "end_line": 423,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m n : \u2115\n\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\ninst\u271d\u00b3 : (i : pSpec\u2081.ChallengeIdx) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b2 : (i : pSpec\u2082.ChallengeIdx) \u2192 Sampleable (pSpec\u2082.Challenge i)\nStmt\u2081 Stmt\u2082 Stmt\u2083 : Type\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nV\u2081 : Verifier pSpec\u2081 oSpec Stmt\u2081 Stmt\u2082\nV\u2082 : Verifier pSpec\u2082 oSpec Stmt\u2082 Stmt\u2083\nlangIn\u2081 : Set Stmt\u2081\nlangOut\u2081 langIn\u2082 : Set Stmt\u2082\nlangOut\u2082 : Set Stmt\u2083\nsoundnessError\u2081 soundnessError\u2082 : NNReal\nh\u2081 : soundness langIn\u2081 langOut\u2081 V\u2081 soundnessError\u2081\nh\u2082 : soundness langIn\u2082 langOut\u2082 V\u2082 soundnessError\u2082\n\u22a2 soundness langIn\u2081 langOut\u2082 (Verifier.append m n pSpec\u2081 pSpec\u2082 \u03b9 oSpec Stmt\u2081 Stmt\u2082 Stmt\u2083 V\u2081 V\u2082)\n    (soundnessError\u2081 + soundnessError\u2082)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/OracleReduction/Composition/Sequential/Append.lean#L423"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-04T15:06:56+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "ecf4694e31de9f8eeee4154a3bc9533adaefc61067337393a9303646cdffe139"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/Append.lean",
        "start_line": 436,
        "start_column": 2,
        "end_line": 436,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m n : \u2115\n\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\ninst\u271d\u00b3 : (i : pSpec\u2081.ChallengeIdx) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b2 : (i : pSpec\u2082.ChallengeIdx) \u2192 Sampleable (pSpec\u2082.Challenge i)\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nV\u2081 : Verifier pSpec\u2081 oSpec Stmt\u2081 Stmt\u2082\nV\u2082 : Verifier pSpec\u2082 oSpec Stmt\u2082 Stmt\u2083\nrelIn\u2081 : Stmt\u2081 \u2192 Wit\u2081 \u2192 Prop\nrelOut\u2081 relIn\u2082 : Stmt\u2082 \u2192 Wit\u2082 \u2192 Prop\nrelOut\u2082 : Stmt\u2083 \u2192 Wit\u2083 \u2192 Prop\nknowledgeError\u2081 knowledgeError\u2082 : NNReal\nh\u2081 : knowledgeSoundness relIn\u2081 relOut\u2081 V\u2081 knowledgeError\u2081\nh\u2082 : knowledgeSoundness relIn\u2082 relOut\u2082 V\u2082 knowledgeError\u2082\n\u22a2 knowledgeSoundness relIn\u2081 relOut\u2082 (Verifier.append m n pSpec\u2081 pSpec\u2082 \u03b9 oSpec Stmt\u2081 Stmt\u2082 Stmt\u2083 V\u2081 V\u2082)\n    (knowledgeError\u2081 + knowledgeError\u2082)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/OracleReduction/Composition/Sequential/Append.lean#L436"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-04T15:06:56+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "7c2fb9b10a3cef098a2a91426b4ec825df975cb136549d7aebf1f293cb7dd74e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/Append.lean",
        "start_line": 454,
        "start_column": 2,
        "end_line": 454,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m n : \u2115\n\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\ninst\u271d\u00b3 : (i : pSpec\u2081.ChallengeIdx) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b2 : (i : pSpec\u2082.ChallengeIdx) \u2192 Sampleable (pSpec\u2082.Challenge i)\nStmt\u2081 Stmt\u2082 Stmt\u2083 : Type\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nV\u2081 : Verifier pSpec\u2081 oSpec Stmt\u2081 Stmt\u2082\nV\u2082 : Verifier pSpec\u2082 oSpec Stmt\u2082 Stmt\u2083\nlangIn\u2081 : Set Stmt\u2081\nlangOut\u2081 langIn\u2082 : Set Stmt\u2082\nlangOut\u2082 : Set Stmt\u2083\nrbrSoundnessError\u2081 : pSpec\u2081.ChallengeIdx \u2192 NNReal\nrbrSoundnessError\u2082 : pSpec\u2082.ChallengeIdx \u2192 NNReal\nh\u2081 : rbrSoundness langIn\u2081 langOut\u2081 V\u2081 rbrSoundnessError\u2081\nh\u2082 : rbrSoundness langIn\u2082 langOut\u2082 V\u2082 rbrSoundnessError\u2082\nverify\u2081 : Stmt\u2081 \u2192 pSpec\u2081.FullTranscript \u2192 Stmt\u2082\nhVerify\u2081 : V\u2081 = { verify := fun stmt tr => pure (verify\u2081 stmt tr) }\n\u22a2 rbrSoundness langIn\u2081 langOut\u2082 (Verifier.append m n pSpec\u2081 pSpec\u2082 \u03b9 oSpec Stmt\u2081 Stmt\u2082 Stmt\u2083 V\u2081 V\u2082)\n    ((rbrSoundnessError\u2081 \u2295\u1d65 rbrSoundnessError\u2082) \u2218 \u21d1ChallengeIdx.sumEquiv.symm)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/OracleReduction/Composition/Sequential/Append.lean#L454"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-04T15:06:56+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "0a1de0c2e5ba51cd9b65a7ec6d2a8ef95b5a89623e4305544699e97eb713c837"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/Append.lean",
        "start_line": 473,
        "start_column": 2,
        "end_line": 473,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m n : \u2115\n\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\ninst\u271d\u00b3 : (i : pSpec\u2081.ChallengeIdx) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b2 : (i : pSpec\u2082.ChallengeIdx) \u2192 Sampleable (pSpec\u2082.Challenge i)\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nV\u2081 : Verifier pSpec\u2081 oSpec Stmt\u2081 Stmt\u2082\nV\u2082 : Verifier pSpec\u2082 oSpec Stmt\u2082 Stmt\u2083\nrelIn\u2081 : Stmt\u2081 \u2192 Wit\u2081 \u2192 Prop\nrelOut\u2081 relIn\u2082 : Stmt\u2082 \u2192 Wit\u2082 \u2192 Prop\nrelOut\u2082 : Stmt\u2083 \u2192 Wit\u2083 \u2192 Prop\nrbrKnowledgeError\u2081 : pSpec\u2081.ChallengeIdx \u2192 NNReal\nrbrKnowledgeError\u2082 : pSpec\u2082.ChallengeIdx \u2192 NNReal\nh\u2081 : rbrKnowledgeSoundness relIn\u2081 relOut\u2081 V\u2081 rbrKnowledgeError\u2081\nh\u2082 : rbrKnowledgeSoundness relIn\u2082 relOut\u2082 V\u2082 rbrKnowledgeError\u2082\nverify\u2081 : Stmt\u2081 \u2192 pSpec\u2081.FullTranscript \u2192 Stmt\u2082\nhVerify\u2081 : V\u2081 = { verify := fun stmt tr => pure (verify\u2081 stmt tr) }\n\u22a2 rbrKnowledgeSoundness relIn\u2081 relOut\u2082 (Verifier.append m n pSpec\u2081 pSpec\u2082 \u03b9 oSpec Stmt\u2081 Stmt\u2082 Stmt\u2083 V\u2081 V\u2082)\n    ((rbrKnowledgeError\u2081 \u2295\u1d65 rbrKnowledgeError\u2082) \u2218 \u21d1ChallengeIdx.sumEquiv.symm)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/OracleReduction/Composition/Sequential/Append.lean#L473"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-04T15:06:56+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "92d211f24ba019092da903c00ddce6fff7c85889b19f5ab13486bd6e6271f2a1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/General.lean",
        "start_line": 152,
        "start_column": 2,
        "end_line": 152,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nm : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\ninst\u271d\u00b2 : (i : Fin (m + 1)) \u2192 (j : (pSpec i).ChallengeIdx) \u2192 Sampleable ((pSpec i).Challenge j)\nStmt : Fin (m + 2) \u2192 Type\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nV : (i : Fin (m + 1)) \u2192 Verifier (pSpec i) oSpec (Stmt i.castSucc) (Stmt i.succ)\nlang : (i : Fin (m + 2)) \u2192 Set (Stmt i)\nsoundnessError : Fin (m + 1) \u2192 NNReal\nh : \u2200 (i : Fin (m + 1)), soundness (lang i.castSucc) (lang i.succ) (V i) (soundnessError i)\n\u22a2 soundness (lang 0) (lang (Fin.last (m + 1))) (Verifier.compose \u03b9 oSpec m n pSpec Stmt V) (\u2211 i, soundnessError i)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/OracleReduction/Composition/Sequential/General.lean#L152"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-04T15:06:56+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "f22ac64e17b3c47b533998bd971209dc6f57e1b77f4fd42adda1d8b290a2c8da"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/General.lean",
        "start_line": 164,
        "start_column": 2,
        "end_line": 164,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nm : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\ninst\u271d\u00b2 : (i : Fin (m + 1)) \u2192 (j : (pSpec i).ChallengeIdx) \u2192 Sampleable ((pSpec i).Challenge j)\nStmt Wit : Fin (m + 2) \u2192 Type\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nV : (i : Fin (m + 1)) \u2192 Verifier (pSpec i) oSpec (Stmt i.castSucc) (Stmt i.succ)\nrel : (i : Fin (m + 2)) \u2192 Stmt i \u2192 Wit i \u2192 Prop\nknowledgeError : Fin (m + 1) \u2192 NNReal\nh : \u2200 (i : Fin (m + 1)), knowledgeSoundness (rel i.castSucc) (rel i.succ) (V i) (knowledgeError i)\n\u22a2 knowledgeSoundness (rel 0) (rel (Fin.last (m + 1))) (Verifier.compose \u03b9 oSpec m n pSpec Stmt V)\n    (\u2211 i, knowledgeError i)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/OracleReduction/Composition/Sequential/General.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-04T15:06:56+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "ef620fe4f8255ab844f705e3aa7ab0d4a1af2df17a159cdc4531a7150c3d8aa2"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/General.lean",
        "start_line": 178,
        "start_column": 2,
        "end_line": 178,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nm : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\ninst\u271d\u00b2 : (i : Fin (m + 1)) \u2192 (j : (pSpec i).ChallengeIdx) \u2192 Sampleable ((pSpec i).Challenge j)\nStmt : Fin (m + 2) \u2192 Type\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nV : (i : Fin (m + 1)) \u2192 Verifier (pSpec i) oSpec (Stmt i.castSucc) (Stmt i.succ)\nlang : (i : Fin (m + 2)) \u2192 Set (Stmt i)\nrbrSoundnessError : (i : Fin (m + 1)) \u2192 (pSpec i).ChallengeIdx \u2192 NNReal\nh : \u2200 (i : Fin (m + 1)), rbrSoundness (lang i.castSucc) (lang i.succ) (V i) (rbrSoundnessError i)\nverify : (i : Fin (m + 1)) \u2192 Stmt i.castSucc \u2192 (pSpec i).FullTranscript \u2192 Stmt i.succ\nhVerify : \u2200 (i : Fin (m + 1)), V i = { verify := fun stmt tr => pure (verify i stmt tr) }\n\u22a2 rbrSoundness (lang 0) (lang (Fin.last (m + 1))) (Verifier.compose \u03b9 oSpec m n pSpec Stmt V) fun x => sorry",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/OracleReduction/Composition/Sequential/General.lean#L178"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-04T15:06:56+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "9fbb6d8222778d16910812a100f64bf4805287fc798acb7a1543ee2354cbd934"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/General.lean",
        "start_line": 193,
        "start_column": 2,
        "end_line": 193,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nm : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\ninst\u271d\u00b2 : (i : Fin (m + 1)) \u2192 (j : (pSpec i).ChallengeIdx) \u2192 Sampleable ((pSpec i).Challenge j)\nStmt Wit : Fin (m + 2) \u2192 Type\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nV : (i : Fin (m + 1)) \u2192 Verifier (pSpec i) oSpec (Stmt i.castSucc) (Stmt i.succ)\nrel : (i : Fin (m + 2)) \u2192 Stmt i \u2192 Wit i \u2192 Prop\nrbrKnowledgeError : (i : Fin (m + 1)) \u2192 (pSpec i).ChallengeIdx \u2192 NNReal\nh : \u2200 (i : Fin (m + 1)), rbrKnowledgeSoundness (rel i.castSucc) (rel i.succ) (V i) (rbrKnowledgeError i)\nverify : (i : Fin (m + 1)) \u2192 Stmt i.castSucc \u2192 (pSpec i).FullTranscript \u2192 Stmt i.succ\nhVerify : \u2200 (i : Fin (m + 1)), V i = { verify := fun stmt tr => pure (verify i stmt tr) }\n\u22a2 rbrKnowledgeSoundness (rel 0) (rel (Fin.last (m + 1))) (Verifier.compose \u03b9 oSpec m n pSpec Stmt V) fun x => sorry",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/OracleReduction/Composition/Sequential/General.lean#L193"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-04T15:06:56+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "9cc91e367dd24f7f7d3a8bfc01301911c9707f6e86e0ef9d080208705756b23c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/ProtocolSpec.lean",
        "start_line": 327,
        "start_column": 2,
        "end_line": 327,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\nT : (i : Fin (m + 1)) \u2192 (pSpec i).FullTranscript\ni : Fin m\n\u22a2 @Fin.dfoldl (\u2191i + 1)\n      (fun i_1 =>\n        FullTranscript\n          (ProtocolSpec.compose (\u2191i_1)\n            (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_5 (\u2191i + 1) i_1)\n              (Fin.take (\u2191i + 1 + 1) \u22ef n))\n            (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_5 (\u2191i + 1) i_1)\n              (Fin.take (\u2191i + 1 + 1) \u22ef pSpec))))\n      (fun i_1 acc =>\n        @dcast\u2082 \u2115 ProtocolSpec (@FullTranscript) instDepCast instDepCast\u2082\n          (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i + 1) i_1) i_2)) +\n            n (Fin.castLE \u22ef i_1.succ))\n          (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_7 (\u2191i + 1) i_1) i_2)))\n          (ProtocolSpec.append\n            (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i + 1) i_1) i_2)))\n            (n (Fin.castLE \u22ef i_1.succ))\n            (ProtocolSpec.compose (\u2191i_1)\n              (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i + 1) i_1)\n                (Fin.take (\u2191i + 1 + 1) \u22ef n))\n              (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i + 1) i_1)\n                (Fin.take (\u2191i + 1 + 1) \u22ef pSpec)))\n            (pSpec (Fin.castLE \u22ef i_1.succ)))\n          (ProtocolSpec.compose (\u2191i_1 + 1)\n            (Fin.take (\u2191i_1 + 1 + 1) (ProtocolSpec.FullTranscript.compose._proof_7 (\u2191i + 1) i_1)\n              (Fin.take (\u2191i + 1 + 1) \u22ef n))\n            (Fin.take (\u2191i_1 + 1 + 1) (ProtocolSpec.FullTranscript.compose._proof_7 (\u2191i + 1) i_1)\n              (Fin.take (\u2191i + 1 + 1) \u22ef pSpec)))\n          (ProtocolSpec.FullTranscript.compose._proof_8 (\u2191i + 1) (Fin.take (\u2191i + 1 + 1) \u22ef n) i_1)\n          (ProtocolSpec.FullTranscript.compose._proof_10 (\u2191i + 1) (Fin.take (\u2191i + 1 + 1) \u22ef n)\n            (Fin.take (\u2191i + 1 + 1) \u22ef pSpec) i_1)\n          (ProtocolSpec.FullTranscript.append\n            (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i + 1) i_1) i_2)))\n            (n (Fin.castLE \u22ef i_1.succ))\n            (ProtocolSpec.compose (\u2191i_1)\n              (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i + 1) i_1)\n                (Fin.take (\u2191i + 1 + 1) \u22ef n))\n              (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i + 1) i_1)\n                (Fin.take (\u2191i + 1 + 1) \u22ef pSpec)))\n            (pSpec (Fin.castLE \u22ef i_1.succ)) acc (T (Fin.castLE \u22ef i_1.succ))))\n      (T (Fin.castLE \u22ef 0)) =\n    @dcast\u2082 \u2115 ProtocolSpec (@FullTranscript) instDepCast instDepCast\u2082 (\u2211 i_1, n (Fin.castLE \u22ef i_1) + n i.succ)\n      (\u2211 i_1, n (Fin.castLE \u22ef i_1))\n      (ProtocolSpec.append (\u2211 i_1, n (Fin.castLE \u22ef i_1)) (n i.succ)\n        (ProtocolSpec.compose (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) (Fin.take (\u2191i + 1) \u22ef pSpec)) (pSpec i.succ))\n      (ProtocolSpec.compose (\u2191i + 1) (Fin.take (\u2191i + 1 + 1) \u22ef n) (Fin.take (\u2191i + 1 + 1) \u22ef pSpec)) \u22ef \u22ef\n      (ProtocolSpec.FullTranscript.append (\u2211 i_1, n (Fin.castLE \u22ef i_1)) (n i.succ)\n        (ProtocolSpec.compose (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) (Fin.take (\u2191i + 1) \u22ef pSpec)) (pSpec i.succ)\n        (@Fin.dfoldl (\u2191i)\n          (fun i_1 =>\n            FullTranscript\n              (ProtocolSpec.compose (\u2191i_1)\n                (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_5 (\u2191i) i_1) (Fin.take (\u2191i + 1) \u22ef n))\n                (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_5 (\u2191i) i_1)\n                  (Fin.take (\u2191i + 1) \u22ef pSpec))))\n          (fun i_1 acc =>\n            @dcast\u2082 \u2115 ProtocolSpec (@FullTranscript) instDepCast instDepCast\u2082\n              (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i) i_1) i_2)) +\n                n (Fin.castLE \u22ef i_1.succ))\n              (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_7 (\u2191i) i_1) i_2)))\n              (ProtocolSpec.append\n                (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i) i_1) i_2)))\n                (n (Fin.castLE \u22ef i_1.succ))\n                (ProtocolSpec.compose (\u2191i_1)\n                  (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i) i_1) (Fin.take (\u2191i + 1) \u22ef n))\n                  (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i) i_1)\n                    (Fin.take (\u2191i + 1) \u22ef pSpec)))\n                (pSpec (Fin.castLE \u22ef i_1.succ)))\n              (ProtocolSpec.compose (\u2191i_1 + 1)\n                (Fin.take (\u2191i_1 + 1 + 1) (ProtocolSpec.FullTranscript.compose._proof_7 (\u2191i) i_1)\n                  (Fin.take (\u2191i + 1) \u22ef n))\n                (Fin.take (\u2191i_1 + 1 + 1) (ProtocolSpec.FullTranscript.compose._proof_7 (\u2191i) i_1)\n                  (Fin.take (\u2191i + 1) \u22ef pSpec)))\n              (ProtocolSpec.FullTranscript.compose._proof_8 (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) i_1)\n              (ProtocolSpec.FullTranscript.compose._proof_10 (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) (Fin.take (\u2191i + 1) \u22ef pSpec)\n                i_1)\n              (ProtocolSpec.FullTranscript.append\n                (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i) i_1) i_2)))\n                (n (Fin.castLE \u22ef i_1.succ))\n                (ProtocolSpec.compose (\u2191i_1)\n                  (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i) i_1) (Fin.take (\u2191i + 1) \u22ef n))\n                  (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_6 (\u2191i) i_1)\n                    (Fin.take (\u2191i + 1) \u22ef pSpec)))\n                (pSpec (Fin.castLE \u22ef i_1.succ)) acc (T (Fin.castLE \u22ef i_1.succ))))\n          (T (Fin.castLE \u22ef 0)))\n        (T i.succ))",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/OracleReduction/Composition/Sequential/ProtocolSpec.lean#L327"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-25T11:02:32+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "b75a815910610e03b0823d8c37b791ae2dfe38cac1add583a1f63583948734bf"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Component/SendClaim.lean",
        "start_line": 74,
        "start_column": 9,
        "end_line": 74,
        "end_column": 14
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst : (i : \u03b9\u209b\u1d62) \u2192 OracleInterface (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 \u03b9\u209b\u1d62),\n    (OStatement \u2295\u1d65 OStatement) i =\n      match sorry i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => ProtocolSpec.Message (SendClaim.pSpec \u03b9\u209b\u1d62 inst\u271d OStatement) j",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/ProofSystem/Component/SendClaim.lean#L74"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-04T15:06:56+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "2339f69d4bebf05c05fc35aabc53b7d1adb2e4794adc010a6bb6fec62012de29"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "more-components",
        "commit": "a0835c09cc31be04ffb5254b22e65bcfbb9bf65b",
        "lean_version": "v4.21.0-rc3"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Component/SendClaim.lean",
        "start_line": 98,
        "start_column": 2,
        "end_line": 98,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d\u00b9 : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst : (i : \u03b9\u209b\u1d62) \u2192 OracleInterface (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (fun x x_1 => rel x) (SendClaim.relOut \u03b9\u209b\u1d62 inst\u271d\u00b9 OStatement)\n    (SendClaim.oracleReduction \u03b9 oSpec Statement \u03b9\u209b\u1d62 inst\u271d\u00b9 OStatement inst relComp)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/a0835c09cc31be04ffb5254b22e65bcfbb9bf65b/ArkLib/ProofSystem/Component/SendClaim.lean#L98"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-04T15:06:56+07:00",
        "inclusion_date": "2025-06-06T07:25:28.637736+00:00"
      },
      "id": "51940473e736e1fc7b190f25445f70921c902f433785ea584858bbbc55f77b73"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 141,
        "start_column": 19,
        "end_line": 141,
        "end_column": 24
      },
      "debug_info": {
        "goal": "k : \u2115\ninst\u271d\u00b9 : Semiring (ConcreteDefinition.ConcreteBinaryTower k)\ninst\u271d : Semiring (ConcreteDefinition.ConcreteBinaryTower (k + 1))\n\u22a2 ConcreteDefinition.algebraMap k 1 = 1",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L141"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "c99c210e48d512c741214f5649e7640e5592bcea255a14212decab48e1dca5e7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 140,
        "start_column": 20,
        "end_line": 140,
        "end_column": 25
      },
      "debug_info": {
        "goal": "k : \u2115\ninst\u271d\u00b9 : Semiring (ConcreteDefinition.ConcreteBinaryTower k)\ninst\u271d : Semiring (ConcreteDefinition.ConcreteBinaryTower (k + 1))\n\u22a2 ConcreteDefinition.algebraMap k 0 = 0",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L140"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "77a5e89b28ba365be5136ddd13f7c6a8fec2d2db4c740473ad56464128564aec"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 146,
        "start_column": 2,
        "end_line": 146,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\ninst\u271d\u00b9 : Semiring (ConcreteDefinition.ConcreteBinaryTower k)\ninst\u271d : Semiring (ConcreteDefinition.ConcreteBinaryTower (k + 1))\n\u22a2 let f := { toFun := ConcreteDefinition.algebraMap k, map_one' := \u22ef, map_mul' := \u22ef, map_zero' := \u22ef, map_add' := \u22ef };\n  @eval\u2082 (ConcreteDefinition.ConcreteBinaryTower k) (ConcreteDefinition.ConcreteBinaryTower (k + 1)) inst\u271d\u00b9 inst\u271d f\n      (ConcreteDefinition.Z (k + 1)) (ConcreteDefinition.definingPoly k inst\u271d\u00b9) =\n    0",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L146"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "88e3523f8cfa87dc76bf6ebbc9bba330b89a93593b33293252312ea8e3a4fbbf"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 357,
        "start_column": 65,
        "end_line": 357,
        "end_column": 70
      },
      "debug_info": {
        "goal": "k : \u2115\nh_pos : k > 0\nx : ConcreteDefinition.ConcreteBinaryTower k\nhi_btf lo_btf : ConcreteDefinition.ConcreteBinaryTower (k - 1)\n\u22a2 ConcreteDefinition.split k h_pos x = (hi_btf, lo_btf) \u2194\n    hi_btf = ConcreteDefinition.fromNat (k - 1) (BitVec.toNat x >>> 2 ^ (k - 1)) \u2227\n      lo_btf = ConcreteDefinition.fromNat (k - 1) (BitVec.toNat x &&& 2 ^ (k - 1) - 1)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L357"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T14:54:43+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "79f04e9778f4b14ede928082ab8c3d677d58d927516eba461266fdd013cf5fae"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 363,
        "start_column": 65,
        "end_line": 363,
        "end_column": 70
      },
      "debug_info": {
        "goal": "k : \u2115\nh_pos : k > 0\nx : ConcreteDefinition.ConcreteBinaryTower k\nhi_btf lo_btf : ConcreteDefinition.ConcreteBinaryTower (k - 1)\n\u22a2 x = ConcreteDefinition.join k h_pos hi_btf lo_btf \u2194\n    hi_btf = ConcreteDefinition.fromNat (k - 1) (BitVec.toNat x >>> 2 ^ (k - 1)) \u2227\n      lo_btf = ConcreteDefinition.fromNat (k - 1) (BitVec.toNat x &&& 2 ^ (k - 1) - 1)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L363"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T14:54:43+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "f275416d2f479846097274bc412b168ae0cd62961b5a99ca41cfac51bc98dff5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 380,
        "start_column": 80,
        "end_line": 380,
        "end_column": 85
      },
      "debug_info": {
        "goal": "k : \u2115\nh_pos : k > 0\n\u22a2 ConcreteDefinition.split k h_pos (ConcreteDefinition.zero k) =\n    (ConcreteDefinition.zero (k - 1), ConcreteDefinition.zero (k - 1))",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L380"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T23:02:36+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "9a61dadc7f91ce8acc7a876d26eb9c120248b85691da2dbec65da9e30f5f1b59"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 580,
        "start_column": 2,
        "end_line": 580,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 Function.Bijective ConcreteDefinition.toConcreteBTF0 \u2227\n    (\u2200 (x y : GF(2)),\n        ConcreteDefinition.toConcreteBTF0 (x + y) =\n          @HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower 0) (ConcreteDefinition.ConcreteBinaryTower 0)\n            (ConcreteDefinition.ConcreteBinaryTower 0) (ConcreteDefinition.instHAddConcreteBinaryTower 0)\n            (ConcreteDefinition.toConcreteBTF0 x) (ConcreteDefinition.toConcreteBTF0 y)) \u2227\n      \u2200 (x y : GF(2)),\n        ConcreteDefinition.toConcreteBTF0 (x * y) =\n          ConcreteDefinition.concrete_mul 0 (ConcreteDefinition.toConcreteBTF0 x) (ConcreteDefinition.toConcreteBTF0 y)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L580"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "371ce79bc3402cf066289ac33fabb9dbd70263c0a4901aa81ce6832484962644"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 860,
        "start_column": 2,
        "end_line": 860,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\na b : ConcreteDefinition.ConcreteBinaryTower k\nh_k : k > 0\na\u2081 a\u2080 b\u2081 b\u2080 : ConcreteDefinition.ConcreteBinaryTower (k - 1)\nh_a : (a\u2081, a\u2080) = ConcreteDefinition.split k h_k a\nh_b : (b\u2081, b\u2080) = ConcreteDefinition.split k h_k b\n\u22a2 @HMul.hMul (ConcreteDefinition.ConcreteBinaryTower k) (ConcreteDefinition.ConcreteBinaryTower k)\n      (ConcreteDefinition.ConcreteBinaryTower k) (ConcreteDefinition.instHMulConcreteBinaryTower k) a b =\n    ConcreteDefinition.join k h_k\n      (@HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n        (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.instHAddConcreteBinaryTower (k - 1))\n        (@HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n          (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.instHAddConcreteBinaryTower (k - 1))\n          (@HMul.hMul (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n            (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.instHMulConcreteBinaryTower (k - 1)) a\u2080\n            b\u2081)\n          (@HMul.hMul (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n            (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.instHMulConcreteBinaryTower (k - 1)) b\u2080\n            a\u2081))\n        (@HMul.hMul (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n          (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.instHMulConcreteBinaryTower (k - 1))\n          (@HMul.hMul (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n            (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.instHMulConcreteBinaryTower (k - 1)) a\u2081\n            b\u2081)\n          (ConcreteDefinition.Z (k - 1))))\n      (@HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n        (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.instHAddConcreteBinaryTower (k - 1))\n        (@HMul.hMul (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n          (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.instHMulConcreteBinaryTower (k - 1)) a\u2080\n          b\u2080)\n        (@HMul.hMul (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n          (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.instHMulConcreteBinaryTower (k - 1)) a\u2081\n          b\u2081))",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L860"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "0e3bd4cc99d007484cded80789771b9ec2b9921dda2b423cd15d7d7031b22fbf"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 876,
        "start_column": 89,
        "end_line": 876,
        "end_column": 94
      },
      "debug_info": {
        "goal": "k : \u2115\nb : ConcreteDefinition.ConcreteBinaryTower k\nh_k_zero : \u00ack = 0\nh_k_gt_0 : k > 0\nsplit_zero :\n  ConcreteDefinition.split k h_k_gt_0 (ConcreteDefinition.zero k) =\n    (ConcreteDefinition.zero (k - 1), ConcreteDefinition.zero (k - 1))\n\u22a2 ConcreteDefinition.concrete_mul (k - 1) (ConcreteDefinition.zero (k - 1)) (ConcreteDefinition.split k h_k_gt_0 b).1 =\n    ConcreteDefinition.zero (k - 1)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L876"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T23:02:36+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "518a84a4de93c090f26dadde5d0c7d39b66b0d0d1b829d38de050955f1f427a1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 878,
        "start_column": 89,
        "end_line": 878,
        "end_column": 94
      },
      "debug_info": {
        "goal": "k : \u2115\nb : ConcreteDefinition.ConcreteBinaryTower k\nh_k_zero : \u00ack = 0\nh_k_gt_0 : k > 0\nsplit_zero :\n  ConcreteDefinition.split k h_k_gt_0 (ConcreteDefinition.zero k) =\n    (ConcreteDefinition.zero (k - 1), ConcreteDefinition.zero (k - 1))\nIH_hi :\n  ConcreteDefinition.concrete_mul (k - 1) (ConcreteDefinition.zero (k - 1)) (ConcreteDefinition.split k h_k_gt_0 b).1 =\n    ConcreteDefinition.zero (k - 1)\n\u22a2 ConcreteDefinition.concrete_mul (k - 1) (ConcreteDefinition.zero (k - 1)) (ConcreteDefinition.split k h_k_gt_0 b).2 =\n    ConcreteDefinition.zero (k - 1)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L878"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T23:02:36+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "980bd284488a683538cd12400cb45444230f49bdeb4c9abed2ea76ef56b77a7c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 884,
        "start_column": 6,
        "end_line": 884,
        "end_column": 11
      },
      "debug_info": {
        "goal": "k : \u2115\nb : ConcreteDefinition.ConcreteBinaryTower k\nh_k_zero : \u00ack = 0\nh_k_gt_0 : k > 0\nsplit_zero :\n  ConcreteDefinition.split k h_k_gt_0 (ConcreteDefinition.zero k) =\n    (ConcreteDefinition.zero (k - 1), ConcreteDefinition.zero (k - 1))\nIH_hi :\n  ConcreteDefinition.concrete_mul (k - 1) (ConcreteDefinition.zero (k - 1)) (ConcreteDefinition.split k h_k_gt_0 b).1 =\n    ConcreteDefinition.zero (k - 1)\nIH_lo :\n  ConcreteDefinition.concrete_mul (k - 1) (ConcreteDefinition.zero (k - 1)) (ConcreteDefinition.split k h_k_gt_0 b).2 =\n    ConcreteDefinition.zero (k - 1)\n\u22a2 0#(2 ^ (k - 1)) = 0",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L884"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T23:02:36+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "28ac025480763ac1033eb0aa1643dac34526a8d66d336fdfa6ae642e9e86779b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 889,
        "start_column": 4,
        "end_line": 889,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case neg\nk : \u2115\nb : ConcreteDefinition.ConcreteBinaryTower k\nh_k_zero : \u00ack = 0\nh_k_gt_0 : k > 0\nsplit_zero :\n  ConcreteDefinition.split k h_k_gt_0 (ConcreteDefinition.zero k) =\n    (ConcreteDefinition.zero (k - 1), ConcreteDefinition.zero (k - 1))\nIH_hi :\n  ConcreteDefinition.concrete_mul (k - 1) (ConcreteDefinition.zero (k - 1)) (ConcreteDefinition.split k h_k_gt_0 b).1 =\n    ConcreteDefinition.zero (k - 1)\nIH_lo :\n  ConcreteDefinition.concrete_mul (k - 1) (ConcreteDefinition.zero (k - 1)) (ConcreteDefinition.split k h_k_gt_0 b).2 =\n    ConcreteDefinition.zero (k - 1)\nsum_zero :\n  @HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n      (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.instHAddConcreteBinaryTower (k - 1))\n      (ConcreteDefinition.zero (k - 1)) (ConcreteDefinition.zero (k - 1)) =\n    ConcreteDefinition.zero (k - 1)\n\u22a2 ConcreteDefinition.join k\n      (ConcreteDefinition.concrete_mul._proof_35 k (ConcreteDefinition.concrete_mul._proof_33 k \u22ef)\n        (ConcreteDefinition.concrete_mul._proof_34 k (ConcreteDefinition.concrete_mul._proof_33 k \u22ef)))\n      (@HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n        (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.instHAddConcreteBinaryTower (k - 1))\n        (@HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n          (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.instHAddConcreteBinaryTower (k - 1))\n          (ConcreteDefinition.concrete_mul (k - 1) (ConcreteDefinition.zero (k - 1))\n            (@HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n              (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n              (ConcreteDefinition.instHAddConcreteBinaryTower (k - 1))\n              (ConcreteDefinition.split k (ConcreteDefinition.concrete_mul._proof_33 k \u22ef) b).1\n              (ConcreteDefinition.split k (ConcreteDefinition.concrete_mul._proof_33 k \u22ef) b).2))\n          (ConcreteDefinition.zero (k - 1)))\n        (ConcreteDefinition.concrete_mul (k - 1) (ConcreteDefinition.zero (k - 1)) (ConcreteDefinition.Z (k - 1))))\n      (ConcreteDefinition.zero (k - 1)) =\n    ConcreteDefinition.zero k",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L889"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T23:02:36+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "3f60f698fcfd424a54d02b86086c588cc9f3deec6de318490d329d7b8cd1c2e8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 907,
        "start_column": 6,
        "end_line": 907,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case neg\nk : \u2115\na : ConcreteDefinition.ConcreteBinaryTower k\nh_k_zero : k = 0\nh_a_zero : \u00aca = ConcreteDefinition.zero k\n\u22a2 @ite (ConcreteDefinition.ConcreteBinaryTower k) (a = BitVec.zero (2 ^ k))\n      (ConcreteDefinition.instDecidableEqConcreteBinaryTower k a (BitVec.zero (2 ^ k))) (BitVec.zero (2 ^ k))\n      (@ite (ConcreteDefinition.ConcreteBinaryTower k) True instDecidableTrue (BitVec.zero (2 ^ k))\n        (@ite (ConcreteDefinition.ConcreteBinaryTower k) (a = ConcreteDefinition.one k)\n          (ConcreteDefinition.instDecidableEqConcreteBinaryTower k a (ConcreteDefinition.one k)) (BitVec.zero (2 ^ k))\n          (@ite (ConcreteDefinition.ConcreteBinaryTower k) (BitVec.zero (2 ^ k) = ConcreteDefinition.one k)\n            (ConcreteDefinition.instDecidableEqConcreteBinaryTower k (BitVec.zero (2 ^ k)) (ConcreteDefinition.one k)) a\n            (BitVec.zero (2 ^ k))))) =\n    BitVec.zero (2 ^ k)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L907"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T23:02:36+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "0fbc98ace323cdcbf7c75afc8b4204fe86ccf595678e46b527364e342195ff65"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 913,
        "start_column": 4,
        "end_line": 913,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case neg\nk : \u2115\na : ConcreteDefinition.ConcreteBinaryTower k\nh_k_zero : \u00ack = 0\nh_k_gt_0 : k > 0\n\u22a2 ConcreteDefinition.join k\n      (ConcreteDefinition.concrete_mul._proof_35 k (ConcreteDefinition.concrete_mul._proof_33 k \u22ef)\n        (ConcreteDefinition.concrete_mul._proof_34 k (ConcreteDefinition.concrete_mul._proof_33 k \u22ef)))\n      (@HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n        (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.instHAddConcreteBinaryTower (k - 1))\n        (@HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n          (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.instHAddConcreteBinaryTower (k - 1))\n          (ConcreteDefinition.concrete_mul (k - 1)\n            (@HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n              (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n              (ConcreteDefinition.instHAddConcreteBinaryTower (k - 1))\n              (ConcreteDefinition.split k (ConcreteDefinition.concrete_mul._proof_33 k \u22ef) a).1\n              (ConcreteDefinition.split k (ConcreteDefinition.concrete_mul._proof_33 k \u22ef) a).2)\n            (@HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n              (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n              (ConcreteDefinition.instHAddConcreteBinaryTower (k - 1))\n              (ConcreteDefinition.split k (ConcreteDefinition.concrete_mul._proof_33 k \u22ef) (ConcreteDefinition.zero k)).1\n              (ConcreteDefinition.split k (ConcreteDefinition.concrete_mul._proof_33 k \u22ef)\n                  (ConcreteDefinition.zero k)).2))\n          (@HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n            (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.instHAddConcreteBinaryTower (k - 1))\n            (ConcreteDefinition.concrete_mul (k - 1)\n              (ConcreteDefinition.split k (ConcreteDefinition.concrete_mul._proof_33 k \u22ef) a).2\n              (ConcreteDefinition.split k (ConcreteDefinition.concrete_mul._proof_33 k \u22ef)\n                  (ConcreteDefinition.zero k)).2)\n            (ConcreteDefinition.concrete_mul (k - 1)\n              (ConcreteDefinition.split k (ConcreteDefinition.concrete_mul._proof_33 k \u22ef) a).1\n              (ConcreteDefinition.split k (ConcreteDefinition.concrete_mul._proof_33 k \u22ef)\n                  (ConcreteDefinition.zero k)).1)))\n        (ConcreteDefinition.concrete_mul (k - 1)\n          (ConcreteDefinition.concrete_mul (k - 1)\n            (ConcreteDefinition.split k (ConcreteDefinition.concrete_mul._proof_33 k \u22ef) a).1\n            (ConcreteDefinition.split k (ConcreteDefinition.concrete_mul._proof_33 k \u22ef) (ConcreteDefinition.zero k)).1)\n          (ConcreteDefinition.Z (k - 1))))\n      (@HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n        (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.instHAddConcreteBinaryTower (k - 1))\n        (ConcreteDefinition.concrete_mul (k - 1)\n          (ConcreteDefinition.split k (ConcreteDefinition.concrete_mul._proof_33 k \u22ef) a).2\n          (ConcreteDefinition.split k (ConcreteDefinition.concrete_mul._proof_33 k \u22ef) (ConcreteDefinition.zero k)).2)\n        (ConcreteDefinition.concrete_mul (k - 1)\n          (ConcreteDefinition.split k (ConcreteDefinition.concrete_mul._proof_33 k \u22ef) a).1\n          (ConcreteDefinition.split k (ConcreteDefinition.concrete_mul._proof_33 k \u22ef) (ConcreteDefinition.zero k)).1)) =\n    ConcreteDefinition.zero k",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L913"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T23:02:36+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "18865608cc48d82f90d3d927f642fd17e4317036684d0ba876adcb8d8bfb8727"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 918,
        "start_column": 2,
        "end_line": 918,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\na : ConcreteDefinition.ConcreteBinaryTower k\n\u22a2 (if h_k_zero : k = 0 then\n      @ite (ConcreteDefinition.ConcreteBinaryTower k) (a = ConcreteDefinition.zero k)\n        (ConcreteDefinition.instDecidableEqConcreteBinaryTower k a (ConcreteDefinition.zero k))\n        (ConcreteDefinition.zero k)\n        (@ite (ConcreteDefinition.ConcreteBinaryTower k) (1 = ConcreteDefinition.zero k)\n          (ConcreteDefinition.instDecidableEqConcreteBinaryTower k 1 (ConcreteDefinition.zero k))\n          (ConcreteDefinition.zero k)\n          (@ite (ConcreteDefinition.ConcreteBinaryTower k) (a = ConcreteDefinition.one k)\n            (ConcreteDefinition.instDecidableEqConcreteBinaryTower k a (ConcreteDefinition.one k)) 1\n            (@ite (ConcreteDefinition.ConcreteBinaryTower k) (1 = ConcreteDefinition.one k)\n              (ConcreteDefinition.instDecidableEqConcreteBinaryTower k 1 (ConcreteDefinition.one k)) a\n              (ConcreteDefinition.zero k))))\n    else\n      let_fun h_k_gt_0 := ConcreteDefinition.concrete_mul._proof_33 k h_k_zero;\n      @ConcreteDefinition.equivProd.match_1 k (fun x => ConcreteDefinition.ConcreteBinaryTower k)\n        (ConcreteDefinition.split k h_k_gt_0 a) fun a\u2081 a\u2080 =>\n        @ConcreteDefinition.equivProd.match_1 k (fun x => ConcreteDefinition.ConcreteBinaryTower k)\n          (ConcreteDefinition.split k h_k_gt_0 1) fun b\u2081 b\u2080 =>\n          let a_sum :=\n            @HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n              (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.instHAddConcreteBinaryTower (k - 1))\n              a\u2081 a\u2080;\n          let b_sum :=\n            @HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n              (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.instHAddConcreteBinaryTower (k - 1))\n              b\u2081 b\u2080;\n          let sum_mul := ConcreteDefinition.concrete_mul (k - 1) a_sum b_sum;\n          let prevX := ConcreteDefinition.Z (k - 1);\n          let mult_hi := ConcreteDefinition.concrete_mul (k - 1) a\u2081 b\u2081;\n          let mult_lo := ConcreteDefinition.concrete_mul (k - 1) a\u2080 b\u2080;\n          let lo_res :=\n            @HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n              (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.instHAddConcreteBinaryTower (k - 1))\n              mult_lo mult_hi;\n          let hi_res :=\n            @HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n              (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.instHAddConcreteBinaryTower (k - 1))\n              (@HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n                (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n                (ConcreteDefinition.instHAddConcreteBinaryTower (k - 1)) sum_mul lo_res)\n              (ConcreteDefinition.concrete_mul (k - 1) mult_hi prevX);\n          let_fun h_eq := ConcreteDefinition.concrete_mul._proof_34 k h_k_gt_0;\n          let_fun res :=\n            ConcreteDefinition.join k (ConcreteDefinition.concrete_mul._proof_35 k h_k_gt_0 h_eq) hi_res lo_res;\n          res) =\n    a",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L918"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "742eecd41b21f3ae68c10e83fdfde2970a197b907d4f3d679c3f541b0b908686"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 923,
        "start_column": 2,
        "end_line": 923,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\na : ConcreteDefinition.ConcreteBinaryTower k\n\u22a2 (if h_k_zero : k = 0 then\n      @ite (ConcreteDefinition.ConcreteBinaryTower k) (ConcreteDefinition.one k = ConcreteDefinition.zero k)\n        (ConcreteDefinition.instDecidableEqConcreteBinaryTower k (ConcreteDefinition.one k) (ConcreteDefinition.zero k))\n        (ConcreteDefinition.zero k)\n        (@ite (ConcreteDefinition.ConcreteBinaryTower k) (a = ConcreteDefinition.zero k)\n          (ConcreteDefinition.instDecidableEqConcreteBinaryTower k a (ConcreteDefinition.zero k))\n          (ConcreteDefinition.zero k)\n          (@ite (ConcreteDefinition.ConcreteBinaryTower k) (ConcreteDefinition.one k = ConcreteDefinition.one k)\n            (ConcreteDefinition.instDecidableEqConcreteBinaryTower k (ConcreteDefinition.one k)\n              (ConcreteDefinition.one k))\n            a\n            (@ite (ConcreteDefinition.ConcreteBinaryTower k) (a = ConcreteDefinition.one k)\n              (ConcreteDefinition.instDecidableEqConcreteBinaryTower k a (ConcreteDefinition.one k))\n              (ConcreteDefinition.one k) (ConcreteDefinition.zero k))))\n    else\n      let_fun h_k_gt_0 := ConcreteDefinition.concrete_mul._proof_33 k h_k_zero;\n      @ConcreteDefinition.equivProd.match_1 k (fun x => ConcreteDefinition.ConcreteBinaryTower k)\n        (ConcreteDefinition.split k h_k_gt_0 (ConcreteDefinition.one k)) fun a\u2081 a\u2080 =>\n        @ConcreteDefinition.equivProd.match_1 k (fun x => ConcreteDefinition.ConcreteBinaryTower k)\n          (ConcreteDefinition.split k h_k_gt_0 a) fun b\u2081 b\u2080 =>\n          let a_sum :=\n            @HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n              (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.instHAddConcreteBinaryTower (k - 1))\n              a\u2081 a\u2080;\n          let b_sum :=\n            @HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n              (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.instHAddConcreteBinaryTower (k - 1))\n              b\u2081 b\u2080;\n          let sum_mul := ConcreteDefinition.concrete_mul (k - 1) a_sum b_sum;\n          let prevX := ConcreteDefinition.Z (k - 1);\n          let mult_hi := ConcreteDefinition.concrete_mul (k - 1) a\u2081 b\u2081;\n          let mult_lo := ConcreteDefinition.concrete_mul (k - 1) a\u2080 b\u2080;\n          let lo_res :=\n            @HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n              (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.instHAddConcreteBinaryTower (k - 1))\n              mult_lo mult_hi;\n          let hi_res :=\n            @HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n              (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.instHAddConcreteBinaryTower (k - 1))\n              (@HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n                (ConcreteDefinition.ConcreteBinaryTower (k - 1)) (ConcreteDefinition.ConcreteBinaryTower (k - 1))\n                (ConcreteDefinition.instHAddConcreteBinaryTower (k - 1)) sum_mul lo_res)\n              (ConcreteDefinition.concrete_mul (k - 1) mult_hi prevX);\n          let_fun h_eq := ConcreteDefinition.concrete_mul._proof_34 k h_k_gt_0;\n          let_fun res :=\n            ConcreteDefinition.join k (ConcreteDefinition.concrete_mul._proof_35 k h_k_gt_0 h_eq) hi_res lo_res;\n          res) =\n    a",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L923"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "022bf745e295aade268670acbccb44b9456dd66aeaf180696d0c95019281480d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 990,
        "start_column": 2,
        "end_line": 990,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\na b c : ConcreteDefinition.ConcreteBinaryTower k\n\u22a2 ConcreteDefinition.concrete_mul k (ConcreteDefinition.concrete_mul k a b) c =\n    ConcreteDefinition.concrete_mul k a (ConcreteDefinition.concrete_mul k b c)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L990"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "a9ddcba1a21cb947dd18c2bf2fc9de3556eeb6454468a56a26506ed729723836"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 994,
        "start_column": 2,
        "end_line": 994,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\na b : ConcreteDefinition.ConcreteBinaryTower k\n\u22a2 ConcreteDefinition.concrete_mul k a b = ConcreteDefinition.concrete_mul k b a",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L994"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "31924c4e5d54d4cb30b26f372426f7d9ed07eb1da241c5755aab0c176cf5e4c7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 998,
        "start_column": 2,
        "end_line": 998,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\na b c : ConcreteDefinition.ConcreteBinaryTower k\n\u22a2 ConcreteDefinition.concrete_mul k a\n      (@HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower k) (ConcreteDefinition.ConcreteBinaryTower k)\n        (ConcreteDefinition.ConcreteBinaryTower k) (ConcreteDefinition.instHAddConcreteBinaryTower k) b c) =\n    @HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower k) (ConcreteDefinition.ConcreteBinaryTower k)\n      (ConcreteDefinition.ConcreteBinaryTower k) (ConcreteDefinition.instHAddConcreteBinaryTower k)\n      (ConcreteDefinition.concrete_mul k a b) (ConcreteDefinition.concrete_mul k a c)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L998"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "daba753ce2f21bf6ed83e05cd7367915278ea9dda7d1260c7dc550fbab322288"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 1002,
        "start_column": 2,
        "end_line": 1002,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\na b c : ConcreteDefinition.ConcreteBinaryTower k\n\u22a2 ConcreteDefinition.concrete_mul k\n      (@HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower k) (ConcreteDefinition.ConcreteBinaryTower k)\n        (ConcreteDefinition.ConcreteBinaryTower k) (ConcreteDefinition.instHAddConcreteBinaryTower k) a b)\n      c =\n    @HAdd.hAdd (ConcreteDefinition.ConcreteBinaryTower k) (ConcreteDefinition.ConcreteBinaryTower k)\n      (ConcreteDefinition.ConcreteBinaryTower k) (ConcreteDefinition.instHAddConcreteBinaryTower k)\n      (ConcreteDefinition.concrete_mul k a c) (ConcreteDefinition.concrete_mul k b c)",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L1002"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "07b92d5b2ae852cc8bddd08a61b1a8b77a28ea6e481be58bb64fc40290d40277"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 1006,
        "start_column": 2,
        "end_line": 1006,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\na : ConcreteDefinition.ConcreteBinaryTower k\nh : a \u2260 0\n\u22a2 ConcreteDefinition.concrete_mul k a (ConcreteDefinition.concrete_inv k a) = ConcreteDefinition.one k",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L1006"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "538b88ff6cd8850b1fb9978ae295ee958db67c1d15ba09c0fc54922e0d7bfb6b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 1020,
        "start_column": 2,
        "end_line": 1020,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\n\u22a2 ConcreteDefinition.concrete_pow_nat k 1 (2 ^ 2 ^ k - 2) = 1",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L1020"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T14:54:43+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "f01b7a55b21af7960b136033b79193571d8c34d2ff2b0ee4fb4dfd48f6a602fa"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ArkLib",
        "branch": "tensor-algebra",
        "commit": "1b624d8ca646dccbdc2685f62308eef6368ba29e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean",
        "start_line": 1076,
        "start_column": 68,
        "end_line": 1076,
        "end_column": 73
      },
      "debug_info": {
        "goal": "k : \u2115\n\u22a2 (ConcreteDefinition.toBTField k) (ConcreteDefinition.Z k) = BinaryTower.Z k",
        "url": "https://github.com/Verified-zkEVM/ArkLib/blob/1b624d8ca646dccbdc2685f62308eef6368ba29e/ArkLib/Data/FieldTheory/BinaryTowerField/ConcreteBinaryTowerField.lean#L1076"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-06-05T12:38:47+07:00",
        "inclusion_date": "2025-06-06T07:29:22.052272+00:00"
      },
      "id": "a3f5665412bb597496d20dc041994e04d3137d675a2e9c7a7c0ffb30ced6ad2a"
    }
  ]
}